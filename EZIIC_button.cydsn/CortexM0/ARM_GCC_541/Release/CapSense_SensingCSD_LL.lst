ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_SensingCSD_LL.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_SsCSDSetShieldElectrodesState,"ax",%progbits
  20              		.align	1
  21              		.global	CapSense_SsCSDSetShieldElectrodesState
  22              		.code	16
  23              		.thumb_func
  24              		.type	CapSense_SsCSDSetShieldElectrodesState, %function
  25              	CapSense_SsCSDSetShieldElectrodesState:
  26              	.LFB4:
  27              		.file 1 "Generated_Source\\PSoC4\\CapSense_SensingCSD_LL.c"
   1:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \file CapSense_SensingCSD_LL.c
   3:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \version 7.0
   4:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
   5:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
   6:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   This file defines the data structure global variables and provides
   7:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   implementation for the low-level APIs of the CSD part of
   8:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   the Sensing module. The file contains the APIs used for the CSD block
   9:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   initialization, calibration, and scanning.
  10:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
  11:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \see CapSense v7.0 Datasheet
  12:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
  13:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *//*****************************************************************************
  14:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Copyright (2016-2019), Cypress Semiconductor Corporation.
  15:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ********************************************************************************
  16:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  17:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * protected by and subject to worldwide patent protection (United States and
  18:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * foreign), United States copyright laws and international treaty provisions.
  19:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  20:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * license to copy, use, modify, create derivative works of, and compile the
  21:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  22:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * custom software in support of licensee product to be used only in conjunction
  23:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  24:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Any reproduction, modification, translation, compilation, or representation of
  25:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * this software except as specified above is prohibited without the express
  26:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * written permission of Cypress.
  27:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
  28:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  29:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  30:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 2


  31:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Cypress reserves the right to make changes without further notice to the
  32:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * materials described herein. Cypress does not assume any liability arising out
  33:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * of the application or use of any product or circuit described herein. Cypress
  34:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * does not authorize its products for use as critical components in life-support
  35:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * systems where a malfunction or failure may reasonably be expected to result in
  36:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  37:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * support systems application implies that the manufacturer assumes all risk of
  38:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  39:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * limited by and subject to the applicable Cypress software license agreement.
  40:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
  41:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #include "CapSense_Structure.h"
  42:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #include "CapSense_Configuration.h"
  43:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #include "CapSense_SensingCSD_LL.h"
  44:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
  45:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #include "CapSense_SelfTest.h"
  46:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif
  47:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
  48:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #include "cyapicallbacks.h"
  49:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
  50:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
  51:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
  52:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /***************************************
  53:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * API Constants
  54:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ***************************************/
  55:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
  56:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
  57:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
  58:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_AUTO_ZERO_EN)
  59:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #define CapSense_CSD_AZ_ENABLE_CFG                  (CapSense_CSD_AZ_EN_MASK)
  60:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
  61:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #define CapSense_CSD_AZ_ENABLE_CFG                  (0uL)
  62:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_AUTO_ZERO_EN) */
  63:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
  64:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)
  65:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #define CapSense_HSCMP_SCAN_MASK                    (CapSense_HSCMP_EN_MASK | CapSense_CSD_
  66:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                                      CapSense_HSCMP_INVERT_MASK)
  67:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
  68:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #define CapSense_HSCMP_SCAN_MASK                    (CapSense_HSCMP_EN_MASK | CapSense_CSD_
  69:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG) */
  70:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
  71:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #define CapSense_HSCMP_INIT_MASK                        (CapSense_HSCMP_EN_MASK | CapSense_CSD_
  72:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
  73:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #define CapSense_DEFAULT_SW_SHIELD_SEL                  (0x00000000uL)
  74:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #define CapSense_DEFAULT_CSD_SW_DSI_SEL                 (CapSense_SW_DSI_SEL_CMODPAD | CapSense
  75:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #define CapSense_DEFAULT_CSD_INTR_SET                   (0x00000000uL)
  76:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #define CapSense_DEFAULT_SW_HS_P_SEL                    (0x00000000uL)
  77:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #define CapSense_DEFAULT_SW_HS_N_SEL                    (0x00000000uL)
  78:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #define CapSense_DEFAULT_CSD_SW_FW_TANK_SEL             (0x00000000uL)
  79:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #define CapSense_DEFAULT_CSD_ADC_CTL                    (0x00000000uL)
  80:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #define CapSense_DEFAULT_HSCMP_CFG                      (0x00000000uL)
  81:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
  82:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* CY_ID285392 */
  83:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #define CapSense_FILTER_DELAY_MAX                   (CapSense_CONFIG_FILTER_DELAY_4_CYCLES)
  84:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #define CapSense_EXTRA_COUNTS_MAX                   (CapSense_FILTER_DELAY_MAX + 5u + 20u)
  85:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
  86:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #else
  87:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 3


  88:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Set IDAC ranges */
  89:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_IDAC_GAIN_8X == CapSense_CSD_IDAC_GAIN)
  90:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #define CapSense_DEFAULT_IDAC_MOD_RANGE         (CapSense_IDAC_MOD_RANGE_MASK)
  91:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #define CapSense_DEFAULT_IDAC_COMP_RANGE        (CapSense_IDAC_COMP_RANGE_MASK)
  92:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
  93:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #define CapSense_DEFAULT_IDAC_MOD_RANGE         (0u)
  94:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #define CapSense_DEFAULT_IDAC_COMP_RANGE        (0u)
  95:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_IDAC_GAIN_8X == CapSense_CSD_IDAC_GAIN) */
  96:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
  97:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Defining default IDACs configuration according to settings in customizer. */
  98:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
  99:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #define CapSense_DEFAULT_CSD_IDAC_CONFIG        (CapSense_IDAC_MOD_MODE_VARIABLE |\
 100:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                                  CapSense_IDAC_COMP_MODE_FIXED |\
 101:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                                  CapSense_DEFAULT_IDAC_MOD_RANGE |\
 102:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                                  CapSense_DEFAULT_IDAC_COMP_RANGE)
 103:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
 104:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #define CapSense_DEFAULT_CSD_IDAC_CONFIG        (CapSense_IDAC_MOD_MODE_VARIABLE |\
 105:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                                  CapSense_DEFAULT_IDAC_MOD_RANGE)
 106:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
 107:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 108:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 109:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 110:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 111:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /***************************************
 112:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Variables
 113:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ***************************************/
 114:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 115:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
 116:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 CapSense_configCsd = CapSense_DEFAULT_CSD_CONFIG;
 117:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #else
 118:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 CapSense_configCsd = CapSense_DEFAULT_CSD_CONFIG | CapSense_DEFAULT_MODULATION_MODE;
 119:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     static uint32 CapSense_counterResolution = CapSense_CNT_RESOLUTION_12_BITS;
 120:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 121:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 122:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /* Flag to indicate electrodes that were connected previously */
 123:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** static uint8 CapSense_eleCsdDisconnectFlag = 0u;
 124:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if ((CapSense_ENABLE == CapSense_CSDV2) && (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN))
 125:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Number of re-samplings when the bad conversion occurs */
 126:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint8 CapSense_badConversionsNum = CapSense_BAD_CONVERSIONS_NUM;
 127:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* ((CapSense_ENABLE == CapSense_CSDV2) && (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN)
 128:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 129:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 130:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
 131:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Static Function Prototypes
 132:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
 133:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 134:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /**
 135:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \cond SECTION_C_INTERNAL
 136:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \addtogroup group_c_internal
 137:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \{
 138:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** */
 139:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 140:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 141:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     static void CapSense_SsSetShieldDelay(uint32 delay);
 142:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN)
 143:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         static void CapSense_SsCSDEnableShieldTank(void);
 144:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN) */
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 4


 145:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 146:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 147:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if ((CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE) || \
 148:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****      (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN))
 149:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     static cystatus CapSense_SsCSDCalibrateCheck(uint32 widgetId, uint32 target);
 150:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     static void CapSense_SsCSDCalibrate(uint32 widgetId, uint32 target);
 151:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
 152:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         static void CapSense_SsCSDNormalizeIdac(CapSense_FLASH_WD_STRUCT const *ptrFlashWidget, uin
 153:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif
 154:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_IDAC_AUTO_GAIN_EN)
 155:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         static uint32 CapSense_SsCSDSwitchIdacGain(CapSense_FLASH_WD_STRUCT const *ptrFlashWidget);
 156:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif
 157:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* ((CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE) || \
 158:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****            (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN))  */
 159:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 160:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
 161:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     static void CapSense_SsCSDSetFilterDelay(void);
 162:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #else
 163:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CY_INLINE static void CapSense_SsCSDClockRestart(void);
 164:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 165:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** CY_INLINE static void CapSense_SsCSDCmodPrecharge(void);
 166:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** CY_INLINE static void CapSense_SsCSDTriggerScan(void);
 167:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** static void CapSense_SsCSDConfigIDACs(void);
 168:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** static void CapSense_SsCSDSetModeSnsClockDivider(uint32 snsClkSource, uint32 snsClkDivider);
 169:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 170:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /** \}
 171:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \endcond */
 172:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 173:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 174:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 175:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /*******************************************************************************
 176:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * Function Name: CapSense_SsSetShieldDelay
 177:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     ****************************************************************************//**
 178:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
 179:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \brief
 180:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   This is an internal function that sets a shield delay.
 181:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
 182:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \details
 183:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   The function updates the CSD configuration register bits that define the shield
 184:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   signal delay relatively to the sense signal.
 185:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
 186:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \param delay
 187:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   Specifies the shield delay value:
 188:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *    PSoC 4100/4200 value interpretation:
 189:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *         0 - no delay
 190:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *         1 - 1 cycle of HFCLK
 191:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *         2 - 2 cycles of HFCLK
 192:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *    Third-generation HW block (except 4100/4200 devices):
 193:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *         0 - no delay
 194:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *         3 - 10ns delay
 195:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *         2 - 50ns delay
 196:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *    Fourth-generation HW block:
 197:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *         0 - no delay
 198:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *         1 - 5ns delay
 199:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *         2 - 10ns delay
 200:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *         3 - 20ns delay
 201:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 5


 202:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *******************************************************************************/
 203:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     static void CapSense_SsSetShieldDelay(uint32 delay)
 204:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
 205:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Update CSD config register shield delay bits with shield delay value */
 206:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_configCsd &= (uint32)(~CapSense_CONFIG_SHIELD_DELAY_MASK);
 207:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_configCsd |= (delay << CapSense_SHIELD_DELAY_SHIFT);
 208:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
 209:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 210:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN)
 211:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /*******************************************************************************
 212:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * Function Name: CapSense_SsCSDEnableShieldTank
 213:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         ****************************************************************************//**
 214:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
 215:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \brief
 216:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   This function configures Csh pin
 217:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
 218:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \details
 219:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   The function updates the CSH_HSIOM register to connect Csh to AMUXBUS-B.
 220:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   For Third-generation HW block it additionally sets Strong drive mode for Csh
 221:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   and applies High level to Csh pin when precharge is set to IO buffer.
 222:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
 223:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *******************************************************************************/
 224:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         static void CapSense_SsCSDEnableShieldTank(void)
 225:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 226:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Update the CSH_HSIOM register to connect Csh to AMUXBUS-B */
 227:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_WriteBitsSafe(CapSense_CSH_HSIOM_PTR, CapSense_CSH_HSIOM_MASK,
 228:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         (uint32)(CapSense_HSIOM_SEL_AMUXB << CapSense_CSH_HSIOM_SHIFT));
 229:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 230:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if ((CapSense_CSH_PRECHARGE_IO_BUF == CapSense_CSD_CSH_PRECHARGE_SRC) &&\
 231:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                  (CapSense_DISABLE == CapSense_CSDV2))
 232:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Set Strong drive mode for Csh */
 233:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_PC_PTR,
 234:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             (uint32)(CapSense_CSH_PC_MASK << CapSense_CSH_PC_SHIFT),
 235:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             (uint32)(CapSense_CSH_PC_STRONG_MODE << CapSense_CSH_PC_SHIFT));
 236:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Appliy High level to Csh pin for Csh */
 237:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_DR_PTR, (uint32)(CapSense_DR_MASK << CapSense_C
 238:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #else
 239:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Set output port register to 0 to connect to GND */
 240:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_DR_PTR, (uint32)(CapSense_DR_MASK << CapSense_C
 241:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif
 242:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
 243:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN) */
 244:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 245:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (0u != CapSense_CSD_TOTAL_SHIELD_COUNT)
 246:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /*******************************************************************************
 247:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * Function Name: CapSense_SsCSDEnableShieldElectrodes
 248:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         ****************************************************************************//**
 249:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
 250:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \brief
 251:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   This internal function initializes Shield Electrodes.
 252:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
 253:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \details
 254:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   The function sets the bit in the HSIOM register which enables the shield electrode
 255:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   functionality on the pin. The port and pin configurations are stored in
 256:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   the CapSense_shieldIoList structure.
 257:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
 258:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *******************************************************************************/
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 6


 259:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         void CapSense_SsCSDEnableShieldElectrodes(void)
 260:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 261:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_SsCSDSetShieldElectrodesState(CapSense_SNS_CONNECTION_SHIELD);
 262:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
 263:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 264:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 265:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /*******************************************************************************
 266:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * Function Name: CapSense_SsCSDDisableShieldElectrodes
 267:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         ****************************************************************************//**
 268:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
 269:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \brief
 270:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   This internal function disables Shield Electrodes.
 271:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
 272:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \details
 273:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   The function resets the bit in the HSIOM register which disables the shield
 274:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   electrode functionality on the pin. The port and pin configurations are
 275:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   stored in  the CapSense_shieldIoList structure.
 276:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
 277:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *******************************************************************************/
 278:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         void CapSense_SsCSDDisableShieldElectrodes(void)
 279:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 280:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_SsCSDSetShieldElectrodesState(CapSense_SNS_CONNECTION_GROUND);
 281:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
 282:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 283:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 284:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /*******************************************************************************
 285:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * Function Name: CapSense_SsCSDSetShieldElectrodesState
 286:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         ****************************************************************************//**
 287:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
 288:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \brief
 289:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   Sets specified shield electrode pin connection state for all dedicated
 290:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   shield electrodes.
 291:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
 292:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \details
 293:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   The function updates following registers for each shield
 294:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   electrode:
 295:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   - port configuration register
 296:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   - pin data register
 297:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   - pin HSIOM register
 298:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   The shield electrodes port and pin configuration registers addresses are
 299:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   stored in the CapSense_shieldIoList structure.
 300:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
 301:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \param state
 302:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   A new state of the shield electrodes. Available values:
 303:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   - CapSense_SNS_CONNECTION_GROUND - disconnects electrode from
 304:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *       CSD hardware block and sets it to GPIO mode with Strong Drive
 305:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   - CapSense_SNS_CONNECTION_HIGHZ - disconnects electrode from
 306:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *       CSD hardware block and sets it to GPIO mode with Analog Hi-Z
 307:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   - CapSense_SNS_CONNECTION_SHIELD - connects electrode to
 308:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *       CSD hardware block
 309:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   - CapSense_SNS_CONNECTION_UNDEFINED - sets the same electrode
 310:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *       connection as for CapSense_SNS_CONNECTION_GROUND
 311:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
 312:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *******************************************************************************/
 313:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         void CapSense_SsCSDSetShieldElectrodesState(uint32 state)
 314:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
  28              		.loc 1 314 0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 7


  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
  34              		.cfi_def_cfa_offset 32
  35              		.cfi_offset 0, -32
  36              		.cfi_offset 1, -28
  37              		.cfi_offset 2, -24
  38              		.cfi_offset 4, -20
  39              		.cfi_offset 5, -16
  40              		.cfi_offset 6, -12
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
 315:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint8  interruptState;
 316:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 317:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 loopIndex;
 318:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 319:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 newPinPcVal;
 320:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 newPinHsiomVal;
 321:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 322:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 tmpPcDrRegValue;
 323:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 tmpHsiomRegValue;
 324:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 325:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_SHIELD_IO_STRUCT const *shieldIoPtr;
 326:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 327:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             switch(state)
  43              		.loc 1 327 0
  44 0002 0128     		cmp	r0, #1
  45 0004 03D0     		beq	.L3
  46 0006 0228     		cmp	r0, #2
  47 0008 04D1     		bne	.L9
  48              	.LVL1:
 328:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 329:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 case CapSense_SNS_CONNECTION_GROUND:
 330:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     newPinPcVal = CY_SYS_PINS_DM_STRONG;
 331:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
 332:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     break;
 333:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 case CapSense_SNS_CONNECTION_HIGHZ:
 334:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     newPinPcVal = CY_SYS_PINS_DM_ALG_HIZ;
 335:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
 336:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     break;
 337:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 case CapSense_SNS_CONNECTION_SHIELD:
 338:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     newPinPcVal = CY_SYS_PINS_DM_ALG_HIZ;
 339:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     newPinHsiomVal = CapSense_HSIOM_SEL_CSD_SHIELD;
  49              		.loc 1 339 0
  50 000a 0524     		movs	r4, #5
  51 000c 00E0     		b	.L7
  52              	.LVL2:
  53              	.L3:
 335:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     break;
  54              		.loc 1 335 0
  55 000e 0024     		movs	r4, #0
  56              	.L7:
 338:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     newPinHsiomVal = CapSense_HSIOM_SEL_CSD_SHIELD;
  57              		.loc 1 338 0
  58 0010 0025     		movs	r5, #0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 8


 340:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     break;
  59              		.loc 1 340 0
  60 0012 01E0     		b	.L2
  61              	.L9:
 331:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     break;
  62              		.loc 1 331 0
  63 0014 0024     		movs	r4, #0
 330:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
  64              		.loc 1 330 0
  65 0016 0625     		movs	r5, #6
  66              	.L2:
  67              	.LVL3:
 341:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 default:
 342:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     newPinPcVal = CY_SYS_PINS_DM_STRONG;
 343:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
 344:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     break;
 345:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 346:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 347:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             shieldIoPtr = &CapSense_shieldIoList[0u];
 348:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             for (loopIndex = 0u; loopIndex < CapSense_CSD_TOTAL_SHIELD_COUNT; loopIndex++)
 349:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 350:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 interruptState = CyEnterCriticalSection();
  68              		.loc 1 350 0
  69 0018 FFF7FEFF 		bl	CyEnterCriticalSection
  70              	.LVL4:
 351:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 352:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tmpHsiomRegValue = CY_GET_REG32 (shieldIoPtr->hsiomPtr);
  71              		.loc 1 352 0
  72 001c 114B     		ldr	r3, .L10
 353:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tmpHsiomRegValue &= ~(shieldIoPtr->hsiomMask);
 354:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CY_SET_REG32 (shieldIoPtr->hsiomPtr, tmpHsiomRegValue);
 355:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 356:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tmpPcDrRegValue = CY_GET_REG32 (shieldIoPtr->pcPtr);
 357:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tmpPcDrRegValue &= ~(CapSense_GPIO_PC_MASK << shieldIoPtr->shift);
 358:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tmpPcDrRegValue |=  (newPinPcVal << shieldIoPtr->shift);
 359:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CY_SET_REG32 (shieldIoPtr->pcPtr, tmpPcDrRegValue);
 360:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 361:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tmpHsiomRegValue |=  (newPinHsiomVal << shieldIoPtr->hsiomShift);
 362:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CY_SET_REG32 (shieldIoPtr->hsiomPtr, tmpHsiomRegValue);
 363:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 364:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tmpPcDrRegValue = CY_GET_REG32 (shieldIoPtr->drPtr);
 365:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tmpPcDrRegValue &= ~(1uL << shieldIoPtr->drShift);
 366:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CY_SET_REG32 (shieldIoPtr->drPtr, tmpPcDrRegValue);
 367:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 368:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CyExitCriticalSection(interruptState);
 369:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 370:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Get next electrode */
 371:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 shieldIoPtr++;
 372:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 373:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
  73              		.loc 1 373 0
  74              		@ sp needed
 357:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tmpPcDrRegValue |=  (newPinPcVal << shieldIoPtr->shift);
  75              		.loc 1 357 0
  76 001e 9F7C     		ldrb	r7, [r3, #18]
 352:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tmpHsiomRegValue &= ~(shieldIoPtr->hsiomMask);
  77              		.loc 1 352 0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 9


  78 0020 1E68     		ldr	r6, [r3]
 357:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tmpPcDrRegValue |=  (newPinPcVal << shieldIoPtr->shift);
  79              		.loc 1 357 0
  80 0022 BC46     		mov	ip, r7
 352:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tmpHsiomRegValue &= ~(shieldIoPtr->hsiomMask);
  81              		.loc 1 352 0
  82 0024 3268     		ldr	r2, [r6]
  83              	.LVL5:
 353:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tmpHsiomRegValue &= ~(shieldIoPtr->hsiomMask);
  84              		.loc 1 353 0
  85 0026 D968     		ldr	r1, [r3, #12]
 357:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tmpPcDrRegValue |=  (newPinPcVal << shieldIoPtr->shift);
  86              		.loc 1 357 0
  87 0028 0727     		movs	r7, #7
 353:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tmpHsiomRegValue &= ~(shieldIoPtr->hsiomMask);
  88              		.loc 1 353 0
  89 002a 8A43     		bics	r2, r1
  90              	.LVL6:
 356:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tmpPcDrRegValue &= ~(CapSense_GPIO_PC_MASK << shieldIoPtr->shift);
  91              		.loc 1 356 0
  92 002c 5968     		ldr	r1, [r3, #4]
 354:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
  93              		.loc 1 354 0
  94 002e 3260     		str	r2, [r6]
 356:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tmpPcDrRegValue &= ~(CapSense_GPIO_PC_MASK << shieldIoPtr->shift);
  95              		.loc 1 356 0
  96 0030 0091     		str	r1, [sp]
  97 0032 0968     		ldr	r1, [r1]
  98 0034 0191     		str	r1, [sp, #4]
  99              	.LVL7:
 357:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tmpPcDrRegValue |=  (newPinPcVal << shieldIoPtr->shift);
 100              		.loc 1 357 0
 101 0036 6146     		mov	r1, ip
 102              	.LVL8:
 103 0038 8F40     		lsls	r7, r7, r1
 104 003a 0199     		ldr	r1, [sp, #4]
 105 003c B943     		bics	r1, r7
 106              	.LVL9:
 358:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CY_SET_REG32 (shieldIoPtr->pcPtr, tmpPcDrRegValue);
 107              		.loc 1 358 0
 108 003e 6746     		mov	r7, ip
 109 0040 BD40     		lsls	r5, r5, r7
 110              	.LVL10:
 111 0042 2943     		orrs	r1, r5
 112              	.LVL11:
 359:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 113              		.loc 1 359 0
 114 0044 009D     		ldr	r5, [sp]
 115 0046 2960     		str	r1, [r5]
 361:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CY_SET_REG32 (shieldIoPtr->hsiomPtr, tmpHsiomRegValue);
 116              		.loc 1 361 0
 117 0048 197C     		ldrb	r1, [r3, #16]
 118              	.LVL12:
 119 004a 8C40     		lsls	r4, r4, r1
 120              	.LVL13:
 121 004c 1443     		orrs	r4, r2
 122              	.LVL14:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 10


 362:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 123              		.loc 1 362 0
 124 004e 3460     		str	r4, [r6]
 125              	.LVL15:
 364:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tmpPcDrRegValue &= ~(1uL << shieldIoPtr->drShift);
 126              		.loc 1 364 0
 127 0050 9968     		ldr	r1, [r3, #8]
 365:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CY_SET_REG32 (shieldIoPtr->drPtr, tmpPcDrRegValue);
 128              		.loc 1 365 0
 129 0052 5C7C     		ldrb	r4, [r3, #17]
 130              	.LVL16:
 131 0054 0123     		movs	r3, #1
 132 0056 A340     		lsls	r3, r3, r4
 364:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tmpPcDrRegValue &= ~(1uL << shieldIoPtr->drShift);
 133              		.loc 1 364 0
 134 0058 0A68     		ldr	r2, [r1]
 135              	.LVL17:
 365:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CY_SET_REG32 (shieldIoPtr->drPtr, tmpPcDrRegValue);
 136              		.loc 1 365 0
 137 005a 9A43     		bics	r2, r3
 138              	.LVL18:
 366:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 139              		.loc 1 366 0
 140 005c 0A60     		str	r2, [r1]
 141              	.LVL19:
 368:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 142              		.loc 1 368 0
 143 005e FFF7FEFF 		bl	CyExitCriticalSection
 144              	.LVL20:
 145              		.loc 1 373 0
 146 0062 F7BD     		pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 147              	.L11:
 148              		.align	2
 149              	.L10:
 150 0064 00000000 		.word	CapSense_shieldIoList
 151              		.cfi_endproc
 152              	.LFE4:
 153              		.size	CapSense_SsCSDSetShieldElectrodesState, .-CapSense_SsCSDSetShieldElectrodesState
 154              		.section	.text.CapSense_SsCSDEnableShieldElectrodes,"ax",%progbits
 155              		.align	1
 156              		.global	CapSense_SsCSDEnableShieldElectrodes
 157              		.code	16
 158              		.thumb_func
 159              		.type	CapSense_SsCSDEnableShieldElectrodes, %function
 160              	CapSense_SsCSDEnableShieldElectrodes:
 161              	.LFB2:
 260:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_SsCSDSetShieldElectrodesState(CapSense_SNS_CONNECTION_SHIELD);
 162              		.loc 1 260 0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 0
 165              		@ frame_needed = 0, uses_anonymous_args = 0
 166 0000 10B5     		push	{r4, lr}
 167              		.cfi_def_cfa_offset 8
 168              		.cfi_offset 4, -8
 169              		.cfi_offset 14, -4
 261:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
 170              		.loc 1 261 0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 11


 171 0002 0220     		movs	r0, #2
 172 0004 FFF7FEFF 		bl	CapSense_SsCSDSetShieldElectrodesState
 173              	.LVL21:
 262:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 174              		.loc 1 262 0
 175              		@ sp needed
 176 0008 10BD     		pop	{r4, pc}
 177              		.cfi_endproc
 178              	.LFE2:
 179              		.size	CapSense_SsCSDEnableShieldElectrodes, .-CapSense_SsCSDEnableShieldElectrodes
 180              		.section	.text.CapSense_SsCSDDisableShieldElectrodes,"ax",%progbits
 181              		.align	1
 182              		.global	CapSense_SsCSDDisableShieldElectrodes
 183              		.code	16
 184              		.thumb_func
 185              		.type	CapSense_SsCSDDisableShieldElectrodes, %function
 186              	CapSense_SsCSDDisableShieldElectrodes:
 187              	.LFB3:
 279:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_SsCSDSetShieldElectrodesState(CapSense_SNS_CONNECTION_GROUND);
 188              		.loc 1 279 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192 0000 10B5     		push	{r4, lr}
 193              		.cfi_def_cfa_offset 8
 194              		.cfi_offset 4, -8
 195              		.cfi_offset 14, -4
 280:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
 196              		.loc 1 280 0
 197 0002 0020     		movs	r0, #0
 198 0004 FFF7FEFF 		bl	CapSense_SsCSDSetShieldElectrodesState
 199              	.LVL22:
 281:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 200              		.loc 1 281 0
 201              		@ sp needed
 202 0008 10BD     		pop	{r4, pc}
 203              		.cfi_endproc
 204              	.LFE3:
 205              		.size	CapSense_SsCSDDisableShieldElectrodes, .-CapSense_SsCSDDisableShieldElectrodes
 206              		.section	.text.CapSense_SsCSDInitialize,"ax",%progbits
 207              		.align	1
 208              		.global	CapSense_SsCSDInitialize
 209              		.code	16
 210              		.thumb_func
 211              		.type	CapSense_SsCSDInitialize, %function
 212              	CapSense_SsCSDInitialize:
 213              	.LFB7:
 374:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (0u != CapSense_CSD_TOTAL_SHIELD_COUNT) */
 375:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 376:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 377:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 378:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
 379:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_SsCSDSetModeSnsClockDivider
 380:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
 381:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 382:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
 383:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   Sets sense source and Sense Clock Divider
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 12


 384:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 385:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
 386:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   For Fourth-generation HW block: Updates CapSense_SENSE_PERIOD register with
 387:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   sense source and Sense Clock Divider.
 388:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   For Third-generation HW block: Updates CapSense_configCsd variable with
 389:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   sense source and sets sense clock divider.
 390:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 391:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param
 392:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   snsClkSource The sense source for the sense clock.
 393:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param
 394:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   snsClkDivider The divider value for the sense clock.
 395:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 396:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
 397:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** static void CapSense_SsCSDSetModeSnsClockDivider(uint32 snsClkSource, uint32 snsClkDivider)
 398:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
 399:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
 400:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Update reg value with divider and configuration */
 401:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SENSE_PERIOD_PTR, snsClkSource | (snsClkDivider - 1u));
 402:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
 403:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set configuration */
 404:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_configCsd &= ~(CapSense_CONFIG_PRS_SELECT_MASK | CapSense_CSD_PRS_12_BIT);
 405:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_configCsd |= snsClkSource;
 406:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 407:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set sense clock divider */
 408:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsSetSnsClockDivider(snsClkDivider);
 409:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 410:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
 411:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 412:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 413:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
 414:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /*******************************************************************************
 415:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * Function Name: CapSense_SsCSDSetFilterDelay
 416:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     ****************************************************************************//**
 417:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
 418:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \brief
 419:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   Sets the filter delay for Fourth-generation HW block.
 420:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
 421:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \details
 422:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   This function updates Fourth-generation HW block configuration
 423:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   variable CapSense_configCsd
 424:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   with the filter delay which depends on the sample clock frequency.
 425:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   This variable is written into register during enabling
 426:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   Fourth-generation HW block .
 427:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
 428:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *******************************************************************************/
 429:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     static void CapSense_SsCSDSetFilterDelay(void)
 430:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
 431:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ)
 432:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 sampleClkFreqHz;
 433:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) */
 434:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 435:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_configCsd &= ~CapSense_CONFIG_FILTER_DELAY_MASK;
 436:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 437:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ)
 438:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             sampleClkFreqHz = CYDEV_BCLK__HFCLK__HZ / (uint32)CapSense_dsRam.modCsdClk;
 439:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             if(sampleClkFreqHz <= CapSense_MOD_CSD_CLK_12MHZ)
 440:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 13


 441:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_configCsd |= CapSense_CONFIG_FILTER_DELAY_12MHZ;
 442:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 443:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             else if(sampleClkFreqHz <= CapSense_MOD_CSD_CLK_24MHZ)
 444:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 445:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_configCsd |= CapSense_CONFIG_FILTER_DELAY_24MHZ;
 446:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 447:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             else
 448:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 449:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_configCsd |= CapSense_CONFIG_FILTER_DELAY_48MHZ;
 450:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 451:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
 452:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_configCsd |= CapSense_CONFIG_FILTER_DELAY_12MHZ;
 453:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) */
 454:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
 455:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)  */
 456:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 457:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 458:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
 459:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_SsCSDConfigIDACs
 460:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
 461:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 462:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
 463:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   Configures the mode for IDAC registers
 464:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 465:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
 466:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   This function configures the IDAC modes depend on Compensation IDAC
 467:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   enabled or disabled.
 468:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 469:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
 470:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** static void CapSense_SsCSDConfigIDACs(void)
 471:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
 472:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
 473:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_CSD_IDACA_PTR, CapSense_IDAC_MOD_DEFAULT_CFG);
 474:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
 475:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_CSD_IDACB_PTR, CapSense_IDAC_COMP_DEFAULT_CFG);
 476:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
 477:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
 478:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
 479:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_IDAC_PTR, CapSense_DEFAULT_CSD_IDAC_CONFIG);
 480:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
 481:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_IDAC_PTR, CY_GET_REG32(CapSense_IDAC_PTR) &
 482:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                                 ~(CapSense_IDAC_MOD_MODE_MASK |
 483:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                                   CapSense_IDAC_MOD_MASK));
 484:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_IDAC_PTR, CY_GET_REG32(CapSense_IDAC_PTR) |
 485:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                                  CapSense_DEFAULT_CSD_IDAC_CONFIG);
 486:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
 487:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 488:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
 489:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 490:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 491:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
 492:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_SsCSDInitialize
 493:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
 494:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 495:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
 496:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   This API initializes the CSD module.
 497:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 14


 498:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
 499:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   The function performs the following steps for Fourth-generation HW block:
 500:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   1) Sets GPIO output to "0" for all sensor pins;
 501:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   2) Connects CMOD to AMUXBUS-A and to CSDBUS-A;
 502:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   3) Connects CMOD to (sense path) to CSDCOMP;
 503:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   4) Connects Csh_tank to AMUXBUS-B and to CSDBUS-B;
 504:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   5) Connects VREF to REFGEN;
 505:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   6) Configures REFGEN and sets the reference voltage;
 506:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   7) Connects VREF to CSDCOMP and HSCOMP;
 507:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   8) Configures IDAC and connect to CSDBUS-A (to drive CMOD);
 508:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   9) Configures ModClk;
 509:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   10) Configure SnsClk source;
 510:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   11) Sets other CSD configurations (Csd Auto Zero time,
 511:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *       Sample Init period, interrupts,
 512:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *       CMOD and Csh_tank/shield initialization switch resistance).
 513:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 514:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   The function performs the following steps for Third-generation HW block:
 515:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   1) Sets all the sensors to the inactive state;
 516:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   2) Enables Shield Electrodes;
 517:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   3) Configures the CSD block and IDACs;
 518:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   4) Connects Cmod to AMUXBUS-A;
 519:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   5) Enables the clocks;
 520:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   6) Sets the shield delay;
 521:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   7) Enables the CSD block; connects Vref Buffer to the AMUX bus.
 522:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 523:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
 524:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_SsCSDInitialize(void)
 525:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
 214              		.loc 1 525 0
 215              		.cfi_startproc
 216              		@ args = 0, pretend = 0, frame = 0
 217              		@ frame_needed = 0, uses_anonymous_args = 0
 218 0000 70B5     		push	{r4, r5, r6, lr}
 219              		.cfi_def_cfa_offset 16
 220              		.cfi_offset 4, -16
 221              		.cfi_offset 5, -12
 222              		.cfi_offset 6, -8
 223              		.cfi_offset 14, -4
 526:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
 527:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 newRegValue;
 528:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif
 529:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 530:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Set all the sensors to inactive state */
 531:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     if(CapSense_dsRam.scanCurrentISC != CapSense_dsRam.scanCsdISC)
 224              		.loc 1 531 0
 225 0002 114C     		ldr	r4, .L16
 226 0004 2500     		movs	r5, r4
 227 0006 8F34     		adds	r4, r4, #143
 228 0008 8E35     		adds	r5, r5, #142
 229 000a 2878     		ldrb	r0, [r5]
 230 000c 2378     		ldrb	r3, [r4]
 231 000e 8342     		cmp	r3, r0
 232 0010 03D0     		beq	.L15
 532:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
 533:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsSetAllIOsState((uint32)CapSense_dsRam.scanCsdISC);
 233              		.loc 1 533 0
 234 0012 FFF7FEFF 		bl	CapSense_SsSetAllIOsState
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 15


 235              	.LVL23:
 534:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_dsRam.scanCurrentISC = CapSense_dsRam.scanCsdISC;
 236              		.loc 1 534 0
 237 0016 2B78     		ldrb	r3, [r5]
 238 0018 2370     		strb	r3, [r4]
 239              	.L15:
 535:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
 536:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 537:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 538:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Connect shields to AMUX-B bus (config HSIOM regs) */
 539:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (0u != CapSense_CSD_TOTAL_SHIELD_COUNT)
 540:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_SsCSDEnableShieldElectrodes();
 240              		.loc 1 540 0
 241 001a FFF7FEFF 		bl	CapSense_SsCSDEnableShieldElectrodes
 242              	.LVL24:
 243              	.LBB8:
 244              	.LBB9:
 479:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
 245              		.loc 1 479 0
 246 001e 0B4B     		ldr	r3, .L16+4
 247 0020 0B4A     		ldr	r2, .L16+8
 248              	.LBE9:
 249              	.LBE8:
 541:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (0u != CapSense_CSD_TOTAL_SHIELD_COUNT) */
 542:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 543:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN)
 544:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Configure Csh */
 545:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_SsCSDEnableShieldTank();
 546:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN) */
 547:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 548:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 549:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
 550:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 551:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_DischargeExtCapacitors(CapSense_EXT_CAP_DISCHARGE_TIME);
 552:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 553:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Initialize the unused CSD registers to defaut state */
 554:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SENSE_DUTY_PTR, CapSense_DEFAULT_SENSE_DUTY_SEL);
 555:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 556:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Configure VREF */
 557:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegValue = CY_GET_REG32(CapSense_SW_REFGEN_SEL_PTR);
 558:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegValue |= CapSense_DEFAULT_SW_REFGEN_SEL;
 559:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 560:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_REFGEN_SEL_PTR, newRegValue);
 561:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_INTR_SET_PTR,         CapSense_DEFAULT_CSD_INTR_SET);
 562:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_FW_TANK_SEL_PTR,   CapSense_DEFAULT_CSD_SW_FW_TANK_SEL);
 563:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_DSI_SEL_PTR,       CapSense_DEFAULT_CSD_SW_DSI_SEL);
 564:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_ADC_CTL_PTR,          CapSense_DEFAULT_CSD_ADC_CTL);
 565:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_AMBUF_PTR,            CapSense_AMBUF_PWR_MODE_OFF);
 566:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_SHIELD_SEL_PTR,    CapSense_DEFAULT_SW_SHIELD_SEL);
 567:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_HS_P_SEL_PTR,      CapSense_DEFAULT_SW_HS_P_SEL);
 568:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_HS_N_SEL_PTR,      CapSense_DEFAULT_SW_HS_N_SEL);
 569:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_HSCMP_PTR,            CapSense_DEFAULT_HSCMP_CFG);
 570:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 571:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Connect CMOD to AMUXBUS-A */
 572:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_WriteBitsSafe(CapSense_CMOD_HSIOM_PTR, CapSense_CMOD_HSIOM_MASK,
 573:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     (uint32)(CapSense_HSIOM_SEL_AMUXA << CapSense_CMOD_HSIOM_SHIFT));
 574:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 16


 575:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set output port register to 0 to connect to GND */
 576:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_WriteBitsSafe(CapSense_CMOD_DR_PTR, CapSense_Cmod__0__MASK, 0u);
 577:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 578:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Connect AMUXBUS-A to CSDBUS-A */
 579:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegValue = CY_GET_REG32(CapSense_SW_BYP_SEL_PTR);
 580:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegValue |= CapSense_SW_BYP_SEL_SW_BYA_MASK;
 581:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_BYP_SEL_PTR, newRegValue);
 582:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 583:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Connect CMOD to (sense path) to CSDCOMP */
 584:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_CSD__CMOD_PAD == CapSense_CMOD_CONNECTION)
 585:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SW_CMP_P_SEL_PTR, CapSense_SW_CMP_P_SEL_SW_SFPM_STATIC_CLOSE);
 586:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #elif (CapSense_CSD__CSHIELD_PAD == CapSense_CMOD_CONNECTION)
 587:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SW_CMP_P_SEL_PTR, CapSense_SW_CMP_P_SEL_SW_SFPS_STATIC_CLOSE);
 588:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
 589:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SW_CMP_P_SEL_PTR, CapSense_SW_CMP_P_SEL_SW_SFPT_STATIC_CLOSE);
 590:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_CSD__CMOD_PAD == CapSense_CMOD_CONNECTION) */
 591:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 592:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Configure shield driving path */
 593:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 594:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Connect AMUXBUS-B to CSDBUS-B (and AMUXBUS-A to CSDBUS-A ) */
 595:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SW_BYP_SEL_PTR, CapSense_SW_BYP_SEL_SW_BYA_MASK | CapSense_SW_BYP
 596:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 597:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Connect AMUXBUS-B to HSCMP positive input */
 598:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SW_HS_P_SEL_PTR, 0x00000000uL);
 599:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 600:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 601:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Configure VREF */
 602:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
 603:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Connect VREF to REFGEN. Connect IDACB to CSDBUSA */
 604:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newRegValue = CY_GET_REG32(CapSense_SW_REFGEN_SEL_PTR);
 605:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newRegValue |= CapSense_SW_REFGEN_SEL_SW_SGR_MASK | CapSense_SW_REFGEN_SEL_SW_IAIB_MASK
 606:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SW_REFGEN_SEL_PTR, newRegValue);
 607:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
 608:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Connect VREF to REFGEN (IAIB switch is open) */
 609:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newRegValue = CY_GET_REG32(CapSense_SW_REFGEN_SEL_PTR);
 610:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newRegValue |= CapSense_SW_REFGEN_SEL_SW_SGR_MASK;
 611:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SW_REFGEN_SEL_PTR, newRegValue);
 612:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
 613:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 614:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Connect VREFHI (from RefGen) to CSDCOMP when Vdda >= 2 V */
 615:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_CMP_N_SEL_PTR, CapSense_SW_CMP_N_SEL_SW_SCRH_STATIC_CLOSE);
 616:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 617:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_2000_MV > CapSense_CYDEV_VDDA_MV)
 618:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 619:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Configure REFGEN. Set reference voltage when Vdda < 2 V */
 620:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_REFGEN_PTR, CapSense_REFGEN_LV);
 621:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 622:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Connect Vrefhi to AMUBUF positive input when Vdaa < 2V
 623:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****              *  Connect AMUBUF to SCDCMP negative input when Vdaa < 2V
 624:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****              */
 625:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 626:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #if (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)
 627:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     CY_SET_REG32(CapSense_SW_AMUXBUF_SEL_PTR, CapSense_SW_AMUXBUF_SEL_SW_IRH_STATIC
 628:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                                           CapSense_SW_AMUXBUF_SEL_S
 629:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #else
 630:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     CY_SET_REG32(CapSense_SW_AMUXBUF_SEL_PTR, CapSense_SW_AMUXBUF_SEL_SW_DEFAULT);
 631:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 17


 632:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_AMBUF_PTR, CapSense_AMBUF_PWR_MODE_NORM);
 633:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #else
 634:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_AMBUF_PTR, CapSense_AMBUF_PWR_MODE_OFF);
 635:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 636:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 637:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Connect VREFHI to HSCOMP */
 638:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SW_HS_N_SEL_PTR, CapSense_SW_HS_N_SEL_SW_HCRH_STATIC_CLOSE);
 639:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
 640:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 641:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Configure REFGEN. Set reference voltage when Vdda >= 2 V */
 642:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_REFGEN_PTR, CapSense_REFGEN_HV);
 643:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 644:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 645:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Turn on CSD_AMBUF high power level when Vdaa >= 2V */
 646:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_AMBUF_PTR, CapSense_AMBUF_PWR_MODE_HI);
 647:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 648:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #if (CapSense_IDAC_SINKING != CapSense_CSD_IDAC_CONFIG)
 649:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     CY_SET_REG32(CapSense_SW_AMUXBUF_SEL_PTR, CapSense_SW_AMUXBUF_SEL_SW_IRH_STATIC
 650:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                                           CapSense_SW_AMUXBUF_SEL_S
 651:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #else
 652:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     CY_SET_REG32(CapSense_SW_AMUXBUF_SEL_PTR, CapSense_SW_AMUXBUF_SEL_SW_DEFAULT);
 653:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #endif /* (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG) */
 654:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #else
 655:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_SW_AMUXBUF_SEL_PTR, CapSense_SW_AMUXBUF_SEL_SW_DEFAULT);
 656:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 657:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 658:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Connect VREFHI to HSCOMP */
 659:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SW_HS_N_SEL_PTR, CapSense_SW_HS_N_SEL_SW_HCRH_STATIC_CLOSE);
 660:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_2000_MV > CapSense_CYDEV_VDDA_MV) */
 661:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 662:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Configure IDACs mode */
 663:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDConfigIDACs();
 664:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 665:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Configure ModClk */
 666:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsSetModClkClockDivider((uint32)CapSense_dsRam.modCsdClk);
 667:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 668:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set other CSD configurations */
 669:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 670:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_SsSetShieldDelay(CapSense_CSD_SHIELD_DELAY);
 671:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 672:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 673:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Configure HW block filter delay */
 674:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDSetFilterDelay();
 675:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 676:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_DISABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN)
 677:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Enable power to sub-blocks */
 678:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd |
 679:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                       CapSense_CONFIG_SENSE_EN_MASK |
 680:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                       CapSense_CONFIG_ENABLE_MASK);
 681:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) */
 682:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 683:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set Csd Auto Zero time (set AZ_TIME bitmask) */
 684:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SEQ_TIME_PTR, CapSense_CSD_AUTO_ZERO_TIME);
 685:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 686:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Select CMOD and Csh_tank/shield initialization switch resistance */
 687:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_RES_PTR, 0x00000000);
 688:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 18


 689:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set the number of dummy fine initialization cycles */
 690:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SEQ_INIT_CNT_PTR, CapSense_CSD_FINE_INIT_TIME);
 691:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 692:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
 693:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 694:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Configure IDACs mode */
 695:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDConfigIDACs();
 696:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 697:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Connect Cmod to AMUXBUS-A using HSIOM registers */
 698:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_WriteBitsSafe(CapSense_CMOD_HSIOM_PTR, CapSense_CMOD_HSIOM_MASK,
 250              		.loc 1 698 0
 251 0022 F021     		movs	r1, #240
 252              	.LBB11:
 253              	.LBB10:
 479:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
 254              		.loc 1 479 0
 255 0024 1A60     		str	r2, [r3]
 256              	.LBE10:
 257              	.LBE11:
 258              		.loc 1 698 0
 259 0026 C022     		movs	r2, #192
 260 0028 0901     		lsls	r1, r1, #4
 261 002a D200     		lsls	r2, r2, #3
 262 002c 0948     		ldr	r0, .L16+12
 263 002e FFF7FEFF 		bl	CapSense_WriteBitsSafe
 264              	.LVL25:
 265              	.LBB12:
 266              	.LBB13:
 206:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_configCsd |= (delay << CapSense_SHIELD_DELAY_SHIFT);
 267              		.loc 1 206 0
 268 0032 094A     		ldr	r2, .L16+16
 269 0034 094B     		ldr	r3, .L16+20
 270 0036 1168     		ldr	r1, [r2]
 271              	.LBE13:
 272              	.LBE12:
 699:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     (uint32)(CapSense_HSIOM_SEL_AMUXA << CapSense_CMOD_HSIOM_SHIFT));
 700:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 701:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 702:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_SsSetShieldDelay(CapSense_CSD_SHIELD_DELAY);
 703:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 704:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 705:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Enable CSD block. Connect Vref Buffer to AMUX bus to make sure that Cmod is charged befo
 706:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN)
 707:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd);
 708:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
 709:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECHARGE_CONFIG_
 710:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif
 711:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 712:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 713:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if ((CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) &&\
 714:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****          (CapSense_CLK_SOURCE_DIRECT == CapSense_CSD_SNS_CLK_SOURCE))
 715:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****          /* Set clock dividers and clock source mode */
 716:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDConfigClock();
 717:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif
 718:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
 273              		.loc 1 718 0
 274              		@ sp needed
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 19


 275              	.LBB15:
 276              	.LBB14:
 206:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_configCsd |= (delay << CapSense_SHIELD_DELAY_SHIFT);
 277              		.loc 1 206 0
 278 0038 0B40     		ands	r3, r1
 279 003a 1360     		str	r3, [r2]
 280              	.LVL26:
 281              	.LBE14:
 282              	.LBE15:
 709:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif
 283              		.loc 1 709 0
 284 003c 084A     		ldr	r2, .L16+24
 285 003e 1343     		orrs	r3, r2
 286 0040 084A     		ldr	r2, .L16+28
 287 0042 1360     		str	r3, [r2]
 288              		.loc 1 718 0
 289 0044 70BD     		pop	{r4, r5, r6, pc}
 290              	.L17:
 291 0046 C046     		.align	2
 292              	.L16:
 293 0048 00000000 		.word	CapSense_dsRam
 294 004c 08002840 		.word	1076363272
 295 0050 00020001 		.word	16777728
 296 0054 00040240 		.word	1073873920
 297 0058 00000000 		.word	.LANCHOR0
 298 005c FFF9FFFF 		.word	-1537
 299 0060 2028E881 		.word	-2115491808
 300 0064 04002840 		.word	1076363268
 301              		.cfi_endproc
 302              	.LFE7:
 303              		.size	CapSense_SsCSDInitialize, .-CapSense_SsCSDInitialize
 304              		.section	.text.CapSense_SsCSDSetUpIdacs,"ax",%progbits
 305              		.align	1
 306              		.global	CapSense_SsCSDSetUpIdacs
 307              		.code	16
 308              		.thumb_func
 309              		.type	CapSense_SsCSDSetUpIdacs, %function
 310              	CapSense_SsCSDSetUpIdacs:
 311              	.LFB9:
 719:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 720:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 721:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
 722:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_SsCSDElectrodeCheck
 723:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
 724:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 725:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
 726:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   Checks if electrodes were previously connected using
 727:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****  * CapSense_CSDSetupWidgetExt() API and if yes disconnects them.
 728:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 729:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
 730:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   This function checks if CapSense_eleCsdDisconnectFlag is set.
 731:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   If it set, the function disconnects the previously connected electrode.
 732:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   The previous IO is contained in CapSense_curSnsIOPtr and
 733:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   CapSense_curFlashSnsPtr contains the previous data for Ganged
 734:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   sensors.
 735:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 736:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 20


 737:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_SsCSDElectrodeCheck(void)
 738:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
 739:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
 740:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 tempVal;
 741:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
 742:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 743:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     if (CapSense_ENABLE == CapSense_eleCsdDisconnectFlag)
 744:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
 745:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Disconnect if electrodes were previous connected by CSDSetupWidgetExt() API */
 746:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
 747:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Check ganged sns flag  */
 748:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             if (CapSense_GANGED_SNS_MASK == (CapSense_curFlashWdgtPtr->staticConfig & CapSense_GANG
 749:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 750:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Get number of ganged pins */
 751:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tempVal = CapSense_curFlashSnsPtr->numPins;
 752:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 753:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Get IO pointer  */
 754:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_curSnsIOPtr = &CapSense_ioList[CapSense_curFlashSnsPtr->firstPinId];
 755:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 756:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Disconnect all ganged sensors */
 757:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 do
 758:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
 759:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     CapSense_CSDDisconnectSns(CapSense_curSnsIOPtr);
 760:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     CapSense_curSnsIOPtr++;
 761:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     tempVal--;
 762:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 } while (0u != tempVal);
 763:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 764:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             else
 765:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 766:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Disconnect ganged sensor */
 767:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_CSDDisconnectSns(CapSense_curSnsIOPtr);
 768:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 769:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
 770:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Disable sensor */
 771:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_CSDDisconnectSns(CapSense_curSnsIOPtr);
 772:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)  */
 773:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 774:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_eleCsdDisconnectFlag = 0u;
 775:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
 776:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
 777:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 778:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 779:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
 780:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_SsCSDSetUpIdacs
 781:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
 782:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 783:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
 784:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This internal function changes the IDACs values.
 785:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 786:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
 787:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  If Compensation IDAC is enabled, it updates two IDACs.
 788:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  The Modulator IDAC is common for all the sensors of the widget.
 789:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  The Compensation IDAC is updated for the sensor of the widget which
 790:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  is available in the RAM_SNS_STRUCT structure.
 791:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  If the Compensation IDAC is disabled, the function updates the Modulator IDAC
 792:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  value only in the RAM_WD_BASE_STRUCT structure.
 793:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 21


 794:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param
 795:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  ptrWdgt The pointer to the RAM_WD_BASE_STRUCT structure.
 796:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 797:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
 798:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_SsCSDSetUpIdacs(CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt)
 799:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
 312              		.loc 1 799 0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 0
 315              		@ frame_needed = 0, uses_anonymous_args = 0
 316              	.LVL27:
 317 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 318              		.cfi_def_cfa_offset 24
 319              		.cfi_offset 3, -24
 320              		.cfi_offset 4, -20
 321              		.cfi_offset 5, -16
 322              		.cfi_offset 6, -12
 323              		.cfi_offset 7, -8
 324              		.cfi_offset 14, -4
 325              		.loc 1 799 0
 326 0002 0600     		movs	r6, r0
 800:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint8 interruptState;
 801:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 idacGain;
 802:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 803:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Getting IDAC gain */
 804:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     idacGain = CapSense_idacGainTable[ptrWdgt->idacGainIndex].gainReg;
 327              		.loc 1 804 0
 328 0004 837A     		ldrb	r3, [r0, #10]
 329 0006 0E4A     		ldr	r2, .L19
 330 0008 DB00     		lsls	r3, r3, #3
 331 000a 9D58     		ldr	r5, [r3, r2]
 332              	.LVL28:
 805:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 806:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
 807:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 idacARegValue;
 808:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
 809:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 idacBRegValue;
 810:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
 811:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 812:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         interruptState = CyEnterCriticalSection();
 813:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 814:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Get IDACA Value */
 815:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         idacARegValue = CY_GET_REG32(CapSense_CSD_IDACA_PTR);
 816:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 817:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Clear IDACA value and gain */
 818:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         idacARegValue &= ~(CapSense_IDAC_MOD_VAL_MASK | CapSense_IDAC_GAIN_MASK);
 819:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 820:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set IDACA value gain */
 821:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
 822:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             if (CapSense_dsFlash.wdgtArray[(CapSense_widgetIndex)].numCols <= CapSense_sensorIndex)
 823:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 824:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 idacARegValue |= (uint32)ptrWdgt->rowIdacMod[CapSense_scanFreqIndex];
 825:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 826:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             else
 827:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 828:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 idacARegValue |= (uint32)ptrWdgt->idacMod[CapSense_scanFreqIndex];
 829:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 22


 830:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
 831:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             idacARegValue |= (uint32)ptrWdgt->idacMod[CapSense_scanFreqIndex];
 832:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN | CapSense_CSD_TOUCHPAD_WIDGET_EN) */
 833:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         idacARegValue |= idacGain;
 834:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 835:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Update IDACA register with new value */
 836:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_CSD_IDACA_PTR, idacARegValue);
 837:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CyExitCriticalSection(interruptState);
 838:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 839:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
 840:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             interruptState = CyEnterCriticalSection();
 841:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Get IDACB Value */
 842:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             idacBRegValue = CY_GET_REG32(CapSense_CSD_IDACB_PTR);
 843:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 844:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Clear IDACB value and gain */
 845:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             idacBRegValue &= ~(CapSense_IDAC_COMP_VAL_MASK | CapSense_IDAC_GAIN_MASK);
 846:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 847:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Set IDACB value and gain */
 848:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             idacBRegValue |= (uint32)CapSense_curRamSnsPtr->idacComp[CapSense_scanFreqIndex];
 849:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             idacBRegValue |= idacGain;
 850:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 851:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Update IDACA register with new value */
 852:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_CSD_IDACB_PTR, idacBRegValue);
 853:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CyExitCriticalSection(interruptState);
 854:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
 855:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 856:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
 857:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 858:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 newRegValue;
 859:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint8 const *ptrIdacMod = ptrWdgt->idacMod;
 860:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 861:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN  | CapSense_CSD_TOUCHPAD_WIDGET_EN)
 862:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             if (CapSense_dsFlash.wdgtArray[(CapSense_widgetIndex)].numCols <= CapSense_sensorIndex)
 863:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 864:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 ptrIdacMod = &ptrWdgt->rowIdacMod[0u];
 865:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 866:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN  | CapSense_CSD_TOUCHPAD_WIDGET_EN) */
 867:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 868:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         interruptState = CyEnterCriticalSection();
 869:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 870:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Get Idac Value */
 871:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegValue = CY_GET_REG32(CapSense_IDAC_PTR);
 333              		.loc 1 871 0
 334 000c 0D4F     		ldr	r7, .L19+4
 868:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 335              		.loc 1 868 0
 336 000e FFF7FEFF 		bl	CyEnterCriticalSection
 337              	.LVL29:
 872:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 873:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Clear Idac value and gain */
 874:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
 875:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newRegValue &= ~(CapSense_IDAC_MOD_MASK | CapSense_IDAC_COMP_MASK |
 876:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_IDAC_GAIN_MASK | (CapSense_IDAC_GAIN_MASK << CapSense_IDAC_COMP_DATA_OFFSE
 877:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
 878:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newRegValue &= ~(CapSense_IDAC_MOD_MASK | CapSense_IDAC_GAIN_MASK);
 879:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
 880:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 23


 881:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set Idac value and gain */
 882:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
 883:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newRegValue |= (ptrIdacMod[CapSense_scanFreqIndex] |
 338              		.loc 1 883 0
 339 0012 0D4B     		ldr	r3, .L19+8
 871:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 340              		.loc 1 871 0
 341 0014 3A68     		ldr	r2, [r7]
 342              	.LVL30:
 343              		.loc 1 883 0
 344 0016 1C78     		ldrb	r4, [r3]
 345              	.LVL31:
 346 0018 0C4B     		ldr	r3, .L19+12
 347 001a 2904     		lsls	r1, r5, #16
 348 001c 3619     		adds	r6, r6, r4
 349              	.LVL32:
 350 001e 1340     		ands	r3, r2
 351 0020 0B43     		orrs	r3, r1
 352 0022 717A     		ldrb	r1, [r6, #9]
 353 0024 2B43     		orrs	r3, r5
 354 0026 0B43     		orrs	r3, r1
 355 0028 1A00     		movs	r2, r3
 356              	.LVL33:
 884:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                            (uint32)((uint32)CapSense_curRamSnsPtr->idacComp[CapSense_scanFreqIndex]
 357              		.loc 1 884 0
 358 002a 094B     		ldr	r3, .L19+16
 885:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                            CapSense_IDAC_COMP_DATA_OFFSET));
 886:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newRegValue |= idacGain;
 887:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newRegValue |= (idacGain << CapSense_IDAC_COMP_DATA_OFFSET);
 888:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
 889:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newRegValue |= ptrIdacMod[CapSense_scanFreqIndex];
 890:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newRegValue |= idacGain;
 891:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
 892:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_IDAC_PTR, newRegValue);
 893:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 894:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CyExitCriticalSection(interruptState);
 895:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 896:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 897:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
 359              		.loc 1 897 0
 360              		@ sp needed
 884:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                            (uint32)((uint32)CapSense_curRamSnsPtr->idacComp[CapSense_scanFreqIndex]
 361              		.loc 1 884 0
 362 002c 1B68     		ldr	r3, [r3]
 363 002e 1C19     		adds	r4, r3, r4
 887:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
 364              		.loc 1 887 0
 365 0030 637A     		ldrb	r3, [r4, #9]
 366 0032 1B04     		lsls	r3, r3, #16
 367 0034 1343     		orrs	r3, r2
 368              	.LVL34:
 892:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 369              		.loc 1 892 0
 370 0036 3B60     		str	r3, [r7]
 894:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 371              		.loc 1 894 0
 372 0038 FFF7FEFF 		bl	CyExitCriticalSection
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 24


 373              	.LVL35:
 374              	.LVL36:
 375              		.loc 1 897 0
 376 003c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 377              	.L20:
 378 003e C046     		.align	2
 379              	.L19:
 380 0040 00000000 		.word	CapSense_idacGainTable
 381 0044 08002840 		.word	1076363272
 382 0048 00000000 		.word	CapSense_scanFreqIndex
 383 004c 00FB80FB 		.word	-75433216
 384 0050 00000000 		.word	CapSense_curRamSnsPtr
 385              		.cfi_endproc
 386              	.LFE9:
 387              		.size	CapSense_SsCSDSetUpIdacs, .-CapSense_SsCSDSetUpIdacs
 388              		.section	.text.CapSense_SsCSDConfigClock,"ax",%progbits
 389              		.align	1
 390              		.global	CapSense_SsCSDConfigClock
 391              		.code	16
 392              		.thumb_func
 393              		.type	CapSense_SsCSDConfigClock, %function
 394              	CapSense_SsCSDConfigClock:
 395              	.LFB10:
 898:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 899:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 900:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
 901:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /*******************************************************************************
 902:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * Function Name: CapSense_SsCSDGetNumberOfConversions
 903:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     ****************************************************************************//**
 904:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
 905:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \brief
 906:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  This function gets Number of conversions.
 907:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
 908:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \details
 909:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  This function gets Number of conversions using foll.owing equation:
 910:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   conversionsNum = (2^resolution - 1) / snsClkDivider.
 911:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
 912:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \param
 913:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  snsClkDivider The divider value for the sense clock.
 914:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  resolution The widget resolution.
 915:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  snsClkSrc The current Sense Clock Source.
 916:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
 917:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \return Returns the Number of conversions.
 918:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
 919:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *******************************************************************************/
 920:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 CapSense_SsCSDGetNumberOfConversions(uint32 snsClkDivider, uint32 resolution, uint32 sns
 921:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
 922:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 conversionsNum;
 923:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if ((CapSense_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) && (CapSense_ENABLE != CapSense_C
 924:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 sampleClkFreqHz;
 925:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* ((CapSense_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) && (CapSense_ENABLE != CapS
 926:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 927:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Calculate scanning resolution value in register */
 928:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         conversionsNum = (uint32)(1uL << resolution);
 929:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 930:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if(CapSense_ENABLE != CapSense_CSDV2_REF9P6UA_EN)
 931:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Apply correction to oveflow for 16 bit resolution */
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 25


 932:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             if (CapSense_RES16BIT == resolution)
 933:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 934:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 conversionsNum -= ((snsClkDivider + 1u) >> 1u);
 935:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 936:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #if (CapSense_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ)
 937:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     sampleClkFreqHz = CYDEV_BCLK__HFCLK__HZ / (uint32)CapSense_dsRam.modCsdClk;
 938:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 939:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     if (sampleClkFreqHz <= CapSense_MOD_CSD_CLK_12MHZ)
 940:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
 941:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         conversionsNum -= CapSense_CONFIG_FILTER_DELAY_2_CYCLES;
 942:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
 943:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     else if (sampleClkFreqHz <= CapSense_MOD_CSD_CLK_24MHZ)
 944:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
 945:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         conversionsNum -= CapSense_CONFIG_FILTER_DELAY_3_CYCLES;
 946:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
 947:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     else
 948:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
 949:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         conversionsNum -= CapSense_CONFIG_FILTER_DELAY_4_CYCLES;
 950:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
 951:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #else
 952:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     conversionsNum -= CapSense_CONFIG_FILTER_DELAY_2_CYCLES;
 953:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #endif /* (INSTANCE_NAME`_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) */
 954:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 955:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
 956:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* CY_ID285392: Apply correction to oveflow for 16 bit resolution */
 957:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             if (CapSense_RES16BIT == resolution)
 958:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 959:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 conversionsNum -= CapSense_EXTRA_COUNTS_MAX;
 960:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 961:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif
 962:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 963:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         if (0u < snsClkDivider)
 964:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 965:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             conversionsNum /= snsClkDivider;
 966:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
 967:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 968:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
 969:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
 970:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
 971:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         switch (snsClkSrc)
 972:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 973:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             case CapSense_CLK_SOURCE_PRS8:
 974:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             case CapSense_CLK_SOURCE_PRS12:
 975:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Divide by 2 for PRS8/PRS12 mode */
 976:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 conversionsNum >>= 1u;
 977:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 break;
 978:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 979:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             default:
 980:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 break;
 981:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
 982:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
 983:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         (void)snsClkSrc;
 984:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif
 985:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 986:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     return((conversionsNum > 0uL) ? (conversionsNum) : 1uL);
 987:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
 988:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 26


 989:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 990:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 991:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
 992:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_SsCSDConfigClock
 993:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
 994:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 995:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
 996:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function configure sense clock for different modes.
 997:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 998:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
 999:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Function sets the clock divider and configures the mode based on configuration.
1000:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1001:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
1002:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_SsCSDConfigClock(void)
1003:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
 396              		.loc 1 1003 0
 397              		.cfi_startproc
 398              		@ args = 0, pretend = 0, frame = 0
 399              		@ frame_needed = 0, uses_anonymous_args = 0
 400 0000 10B5     		push	{r4, lr}
 401              		.cfi_def_cfa_offset 8
 402              		.cfi_offset 4, -8
 403              		.cfi_offset 14, -4
1004:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 snsClkDivider;
1005:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 snsClkSrc;
1006:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 newRegValue;
1007:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1008:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
1009:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****              CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2WdgtRam;
 404              		.loc 1 1009 0
 405 0002 094B     		ldr	r3, .L22
 406              	.LBB18:
 407              	.LBB19:
 405:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 408              		.loc 1 405 0
 409 0004 0949     		ldr	r1, .L22+4
 410              	.LBE19:
 411              	.LBE18:
 412              		.loc 1 1009 0
 413 0006 1A78     		ldrb	r2, [r3]
1008:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****              CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2WdgtRam;
 414              		.loc 1 1008 0
 415 0008 1C23     		movs	r3, #28
 416 000a 5343     		muls	r3, r2
 417 000c 084A     		ldr	r2, .L22+8
 418              	.LBB25:
 419              	.LBB20:
 405:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 420              		.loc 1 405 0
 421 000e 0C68     		ldr	r4, [r1]
 422              	.LBE20:
 423              	.LBE25:
1008:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****              CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2WdgtRam;
 424              		.loc 1 1008 0
 425 0010 D318     		adds	r3, r2, r3
 426              	.LBB26:
 427              	.LBB21:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 27


 405:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 428              		.loc 1 405 0
 429 0012 C022     		movs	r2, #192
 430              	.LBE21:
 431              	.LBE26:
1008:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****              CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2WdgtRam;
 432              		.loc 1 1008 0
 433 0014 5B68     		ldr	r3, [r3, #4]
 434              	.LVL37:
 435              	.LBB27:
 436              	.LBB22:
 405:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 437              		.loc 1 405 0
 438 0016 9443     		bics	r4, r2
 439              	.LBE22:
 440              	.LBE27:
1010:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1011:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Get sense divider based on configuration */
1012:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN)
1013:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         snsClkDivider = (uint32)CapSense_dsRam.snsCsdClk;
1014:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
1015:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1016:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Get SnsClck divider for rows or columns */
1017:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             if (CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].numCols <= CapSense_sensorIndex)
1018:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
1019:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 snsClkDivider = (uint32)(ptrWdgt->rowSnsClk);
1020:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
1021:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             else
1022:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
1023:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 snsClkDivider = (uint32)(ptrWdgt->snsClk);
1024:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
1025:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
1026:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             snsClkDivider = (uint32)(ptrWdgt->snsClk);
 441              		.loc 1 1026 0
 442 0018 9889     		ldrh	r0, [r3, #12]
 443              	.LVL38:
 444              	.LBB28:
 445              	.LBB23:
 405:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 446              		.loc 1 405 0
 447 001a 9B7B     		ldrb	r3, [r3, #14]
 448              	.LVL39:
 449              	.LBE23:
 450              	.LBE28:
1027:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1028:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
1029:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1030:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Get sense clk source calculated in CapSense_SsCSDInitialize() before */
1031:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1032:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Get SnsClc Source for rows or columns */
1033:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         if (CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].numCols <= CapSense_sensorIndex)
1034:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1035:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             snsClkSrc = (uint32)ptrWdgt->rowSnsClkSource;
1036:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1037:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         else
1038:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1039:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             snsClkSrc = (uint32)ptrWdgt->snsClkSource;
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 28


1040:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1041:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
1042:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         snsClkSrc = (uint32)ptrWdgt->snsClkSource;
1043:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1044:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1045:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
1046:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegValue = (snsClkSrc << CYFLD_CSD_LFSR_SIZE__OFFSET);
1047:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1048:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Configuring PRS SEL_BIT */
1049:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         if ((CapSense_CLK_SOURCE_PRS8 == snsClkSrc) ||
1050:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             (CapSense_CLK_SOURCE_PRS12 == snsClkSrc))
1051:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1052:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newRegValue |= CapSense_SENSE_PERIOD_SEL_LFSR_MSB_MASK;
1053:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1054:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
1055:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegValue = snsClkSrc;
1056:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1057:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1058:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
1059:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
1060:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
1061:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
1062:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             switch (snsClkSrc)
1063:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
1064:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             case CapSense_CLK_SOURCE_PRS8:
1065:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             case CapSense_CLK_SOURCE_PRS12:
1066:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Divide by 2 for PRS8/PRS12 mode */
1067:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 snsClkDivider >>= 1;
1068:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 if (snsClkDivider == 0u)
1069:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
1070:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     snsClkDivider = 1u;
1071:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
1072:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 break;
1073:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1074:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             default:
1075:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 break;
1076:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
1077:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* ((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
1078:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                    (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
1079:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                    (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)) */
1080:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif
1081:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_SsCSDSetModeSnsClockDivider(newRegValue, snsClkDivider);
1082:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
 451              		.loc 1 1082 0
 452              		@ sp needed
 453              	.LBB29:
 454              	.LBB24:
 405:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 455              		.loc 1 405 0
 456 001c 2343     		orrs	r3, r4
 457              	.LVL40:
 458 001e 0B60     		str	r3, [r1]
 408:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 459              		.loc 1 408 0
 460 0020 FFF7FEFF 		bl	CapSense_SsSetSnsClockDivider
 461              	.LVL41:
 462              	.LBE24:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 29


 463              	.LBE29:
 464              		.loc 1 1082 0
 465 0024 10BD     		pop	{r4, pc}
 466              	.L23:
 467 0026 C046     		.align	2
 468              	.L22:
 469 0028 00000000 		.word	CapSense_widgetIndex
 470 002c 00000000 		.word	.LANCHOR0
 471 0030 00000000 		.word	CapSense_dsFlash
 472              		.cfi_endproc
 473              	.LFE10:
 474              		.size	CapSense_SsCSDConfigClock, .-CapSense_SsCSDConfigClock
 475              		.section	.text.CapSense_SsCSDCalculateScanDuration,"ax",%progbits
 476              		.align	1
 477              		.global	CapSense_SsCSDCalculateScanDuration
 478              		.code	16
 479              		.thumb_func
 480              		.type	CapSense_SsCSDCalculateScanDuration, %function
 481              	CapSense_SsCSDCalculateScanDuration:
 482              	.LFB11:
1083:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1084:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1085:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
1086:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_SsCSDCalculateScanDuration
1087:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
1088:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1089:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
1090:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   Calculates Scan Duration which is defined by scan resolution
1091:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1092:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
1093:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   For Fourth-generation HW block: The function calculates the number of conversions and updates
1094:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   SEQ_NORM_CNT register. The number of conversions depends on resolution and
1095:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   snsClk divider.
1096:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   For Third-generation HW block: The function recalculate the resolution using following equation
1097:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   2^resolution - 1. The calculated value is contained in
1098:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   CapSense_counterResolution global variable and used in
1099:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   CapSense_SsCSDStartSample() function to trigger the scan process.
1100:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1101:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param wdgtIndex
1102:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  ptrWdgt The pointer to the RAM_WD_BASE_STRUCT structure.
1103:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1104:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
1105:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_SsCSDCalculateScanDuration(CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt)
1106:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
 483              		.loc 1 1106 0
 484              		.cfi_startproc
 485              		@ args = 0, pretend = 0, frame = 0
 486              		@ frame_needed = 0, uses_anonymous_args = 0
 487              		@ link register save eliminated.
 488              	.LVL42:
1107:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
1108:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 conversionsNum;
1109:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 snsClkDivider;
1110:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1111:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Get Number Of Conversions */
1112:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN)
1113:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             snsClkDivider = CapSense_dsRam.snsCsdClk;
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 30


1114:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
1115:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1116:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Get SnsClck divider for rows or columns */
1117:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 if (CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].numCols <= CapSense_sensorInde
1118:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
1119:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     snsClkDivider = (uint32)(ptrWdgt->rowSnsClk);
1120:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
1121:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 else
1122:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
1123:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     snsClkDivider = (uint32)(ptrWdgt->snsClk);
1124:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
1125:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #else
1126:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 snsClkDivider = (uint32)(ptrWdgt->snsClk);
1127:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1128:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
1129:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1130:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         conversionsNum = CapSense_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)ptrWdgt->resol
1131:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1132:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set Number Of Conversions based on scanning resolution */
1133:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SEQ_NORM_CNT_PTR, (conversionsNum & CapSense_SEQ_NORM_CNT_CONV_CNT_MA
1134:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
1135:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set up scanning resolution  */
1136:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_counterResolution = (uint32)((0x00000001Lu << ptrWdgt->resolution) - 1u) << CapSen
 489              		.loc 1 1136 0
 490 0000 0123     		movs	r3, #1
 491 0002 0288     		ldrh	r2, [r0]
1137:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1138:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
 492              		.loc 1 1138 0
 493              		@ sp needed
1136:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 494              		.loc 1 1136 0
 495 0004 9340     		lsls	r3, r3, r2
 496 0006 024A     		ldr	r2, .L25
 497 0008 013B     		subs	r3, r3, #1
 498 000a 1B04     		lsls	r3, r3, #16
 499 000c 5360     		str	r3, [r2, #4]
 500              		.loc 1 1138 0
 501 000e 7047     		bx	lr
 502              	.L26:
 503              		.align	2
 504              	.L25:
 505 0010 00000000 		.word	.LANCHOR0
 506              		.cfi_endproc
 507              	.LFE11:
 508              		.size	CapSense_SsCSDCalculateScanDuration, .-CapSense_SsCSDCalculateScanDuration
 509              		.section	.text.CapSense_SsCSDStartSample,"ax",%progbits
 510              		.align	1
 511              		.global	CapSense_SsCSDStartSample
 512              		.code	16
 513              		.thumb_func
 514              		.type	CapSense_SsCSDStartSample, %function
 515              	CapSense_SsCSDStartSample:
 516              	.LFB14:
1139:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1140:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1141:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 31


1142:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_CSDSetupWidget
1143:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
1144:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1145:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
1146:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Performs hardware and firmware initialization required for scanning sensors
1147:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  in a specific widget using the CSD sensing method. This function requires using
1148:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  the CapSense_CSDScan() function to start scanning.
1149:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1150:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
1151:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  \note This function is obsolete and kept for backward compatibility only.
1152:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  The CapSense_SetupWidget() function should be used instead.
1153:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1154:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function initializes the specific widget common parameters to perform
1155:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  the CSD scanning. The initialization includes setting up a Modulator and
1156:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Sense clock frequency and scanning resolution.
1157:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1158:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function does not connect any specific sensors to the scanning hardware,
1159:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  neither does it start a scanning process. The CapSense_CSDScan()
1160:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  API must be called after initializing the widget to start scanning.
1161:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1162:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function is called when no scanning is in progress. I.e.
1163:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_IsBusy() returns a non-busy status.
1164:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1165:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function is called by the CapSense_SetupWidget() API if the
1166:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  given widget uses the CSD sensing method.
1167:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1168:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Calling this function directly from the application layer is not
1169:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  recommended. This function is used to implement only the user's specific
1170:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
1171:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1172:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param  widgetId
1173:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Specifies the ID number of the widget to perform hardware and firmware
1174:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  initialization required for scanning sensors in the specific widget.
1175:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  A macro for the widget ID can be found in the CapSense Configuration header
1176:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  file defined as CapSense_<WidgetName>_WDGT_ID.
1177:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1178:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
1179:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_CSDSetupWidget(uint32 widgetId)
1180:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
1181:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
1182:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                 CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
1183:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1184:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Save widget Id to have assess to it after scanning  */
1185:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_widgetIndex = (uint8)widgetId;
1186:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1187:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_CSD_E);
1188:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1189:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
1190:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Reset the frequency scan channel if enabled */
1191:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
1192:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
1193:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1194:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Disconnect previous electrode if it has been connected */
1195:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_SsCSDElectrodeCheck();
1196:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1197:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Initialize IO Sns electrode structure pointer to current widget */
1198:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_curSnsIOPtr = (CapSense_FLASH_IO_STRUCT const *)
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 32


1199:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                     CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2SnsFlash;
1200:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1201:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Update status register in Data structure */
1202:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_dsRam.status &= ~CapSense_STATUS_WDGT0_MASK;
1203:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_dsRam.status |= CapSense_widgetIndex;
1204:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1205:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_SsCSDCalculateScanDuration(ptrWdgt);
1206:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (((CapSense_DISABLE == CapSense_CSD_COMMON_SNS_CLK_EN) || \
1207:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****           (CapSense_CLK_SOURCE_DIRECT != CapSense_CSD_SNS_CLK_SOURCE)) && \
1208:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****          ((!(CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)) || \
1209:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****           (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN)))
1210:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDConfigClock();
1211:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif
1212:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
1213:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1214:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1215:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
1216:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_CSDSetupWidgetExt
1217:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
1218:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1219:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
1220:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Performs extended initialization for the CSD widget and also performs
1221:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  initialization required for a specific sensor in the widget. This function
1222:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  requires using the CapSense_CSDScanExt() function to initiate a scan.
1223:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1224:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
1225:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Performs extended initialization for the CSD widget and also performs
1226:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  initialization required for a specific sensor in the widget. This function
1227:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  requires using the CapSense_CSDScanExt() function to initiate a scan.
1228:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1229:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  \note This function is obsolete and kept for backward compatibility only.
1230:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  The CapSense_SetupWidgetExt() function should be used instead.
1231:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1232:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function does the same as CapSense_CSDSetupWidget() and also
1233:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  does the following tasks:
1234:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *    1. Connects the first sensor of the widget.
1235:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *    2. Configures the IDAC value.
1236:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *    3. Initializes an interrupt callback function to initialize a scan of the
1237:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  next sensors in a widget.
1238:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1239:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Once this function is called to initialize a widget and a sensor, the
1240:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_CSDScanExt() function is called to scan the sensor.
1241:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1242:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function is called when no scanning is in progress. I.e.
1243:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_IsBusy() returns a non-busy status.
1244:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1245:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Calling this function directly from the application layer is not
1246:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  recommended. This function is used to implement only the user's specific
1247:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
1248:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1249:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param widgetId
1250:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Specifies the ID number of the widget to perform hardware and firmware
1251:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  initialization required for scanning the specific sensor in the specific
1252:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  widget.
1253:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  A macro for the widget ID can be found in the CapSense Configuration header
1254:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  file defined as CapSense_<WidgetName>_WDGT_ID.
1255:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 33


1256:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param sensorId
1257:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Specifies the ID number of the sensor within the widget to perform hardware
1258:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  and firmware initialization required for scanning a specific sensor in a
1259:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  specific widget.
1260:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  A macro for the sensor ID within a specified widget can be found in the
1261:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense Configuration header file defined as
1262:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_<WidgetName>_SNS<SensorNumber>_ID
1263:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1264:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
1265:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_CSDSetupWidgetExt(uint32 widgetId, uint32 sensorId)
1266:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
1267:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
1268:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                     CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRa
1269:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1270:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Save widget and sensor Ids to have access to it after scanning  */
1271:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_sensorIndex = (uint8)sensorId;
1272:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1273:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Update global pointer to CapSense_RAM_SNS_STRUCT to current sensor  */
1274:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_curRamSnsPtr = (CapSense_RAM_SNS_STRUCT *)
1275:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                               CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsRam
1276:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                               + CapSense_sensorIndex;
1277:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1278:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_CSDSetupWidget(widgetId);
1279:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1280:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****      /* Setup Idac Value */
1281:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_SsCSDSetUpIdacs(ptrWdgt);
1282:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1283:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
1284:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* initialize access pointers for current pointer to widget configuration in Flash */
1285:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_curFlashWdgtPtr = &CapSense_dsFlash.wdgtArray[widgetId];
1286:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)  */
1287:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1288:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
1289:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDConnectSensorExt(widgetId, sensorId);
1290:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
1291:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Enable sensor */
1292:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_curSnsIOPtr += CapSense_sensorIndex;
1293:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_CSDConnectSns(CapSense_curSnsIOPtr);
1294:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)  */
1295:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1296:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
1297:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Save sns pointer */
1298:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_curFlashSnsPtr = (CapSense_FLASH_SNS_STRUCT const *)
1299:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                            CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2Sns
1300:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                            CapSense_sensorIndex;
1301:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
1302:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1303:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_eleCsdDisconnectFlag = CapSense_DISCONNECT_IO_FLAG;
1304:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1305:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Setup ISR handler to single-sensor scan function */
1306:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_ISR_StartEx(&CapSense_CSDPostSingleScan);
1307:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
1308:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1309:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
1310:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_SsCSDStartSample
1311:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
1312:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 34


1313:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
1314:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   Starts the CSD conversion.
1315:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1316:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
1317:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   This function assumes that the CSD block is already set up using
1318:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   the CapSense_CSDSetupWidget API and the sensor port-pin is connected to the CSD
1319:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   block using CapSense_CSDConnectSns.
1320:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   For Third-generation HW block the function performs the following tasks:
1321:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   1. Disconnects the Vref buffer from AMUX;
1322:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   2. Precharges Cmod;
1323:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   3. Makes the PreSettling delay to have a stable Vref voltage;
1324:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   4. Sets the resolution to the Counter register to start scanning.
1325:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1326:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
1327:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_SsCSDStartSample(void)
1328:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
 517              		.loc 1 1328 0
 518              		.cfi_startproc
 519              		@ args = 0, pretend = 0, frame = 8
 520              		@ frame_needed = 0, uses_anonymous_args = 0
 521 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 522              		.cfi_def_cfa_offset 32
 523              		.cfi_offset 0, -32
 524              		.cfi_offset 1, -28
 525              		.cfi_offset 2, -24
 526              		.cfi_offset 4, -20
 527              		.cfi_offset 5, -16
 528              		.cfi_offset 6, -12
 529              		.cfi_offset 7, -8
 530              		.cfi_offset 14, -4
1329:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE != CapSense_CSDV2)
1330:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint8 interruptState;
1331:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif
1332:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1333:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #ifdef CapSense_START_SAMPLE_CALLBACK
1334:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_StartSampleCallback(CapSense_widgetIndex, CapSense_sensorIndex);
1335:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* CapSense_START_SAMPLE_CALLBACK */
1336:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1337:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
1338:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Fourth-generation HW block section */
1339:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1340:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Disable CSD interrupt to prevent it during coarse initialization */
1341:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CyIntDisable(CapSense_ISR_NUMBER);
1342:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1343:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Enable power to sub-blocks */
1344:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_HSCMP_PTR, CapSense_HSCMP_INIT_MASK);
1345:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1346:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN)
1347:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd |
1348:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                       CapSense_CONFIG_SENSE_EN_MASK |
1349:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                       CapSense_CONFIG_ENABLE_MASK);
1350:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if(CapSense_CSD_ANALOG_STARTUP_DELAY_US > 0uL)
1351:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CyDelayUs(CapSense_CSD_ANALOG_STARTUP_DELAY_US);
1352:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif /* (CapSense_CSD_ANALOG_STARTUP_DELAY_US > 0uL) */
1353:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) */
1354:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1355:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Precharging Cmod and Csh */
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 35


1356:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDCmodPrecharge();
1357:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1358:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Trigger Scan */
1359:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDTriggerScan();
1360:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1361:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
1362:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Third-generation HW block section */
1363:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         interruptState = CyEnterCriticalSection();
 531              		.loc 1 1363 0
 532 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 533              	.LVL43:
1364:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1365:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Enable CSD block. Disconnect Vref Buffer from AMUX */
1366:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if ((CapSense_CSH_PRECHARGE_IO_BUF == CapSense_CSD_CSH_PRECHARGE_SRC) &&\
1367:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****              (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
1368:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CMOD_PRECHARGE_CONFIG_C
1369:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
1370:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECHARGE_CONFIG_
 534              		.loc 1 1370 0
 535 0006 1D4D     		ldr	r5, .L33
 536 0008 1D4C     		ldr	r4, .L33+4
 537 000a 2F00     		movs	r7, r5
 538 000c 2268     		ldr	r2, [r4]
 539 000e 1D4B     		ldr	r3, .L33+8
1363:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 540              		.loc 1 1363 0
 541 0010 0190     		str	r0, [sp, #4]
 542              	.LVL44:
 543              		.loc 1 1370 0
 544 0012 1343     		orrs	r3, r2
 545 0014 2B60     		str	r3, [r5]
 546              	.LBB36:
 547              	.LBB37:
1371:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif
1372:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1373:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Restart the clocks. Scan one cycle to reset the flip-flop for Direct clock mode */
1374:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDClockRestart();
1375:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1376:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Precharging Cmod to Vref */
1377:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDCmodPrecharge();
1378:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1379:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_CLK_SOURCE_DIRECT != CapSense_CSD_SNS_CLK_SOURCE)
1380:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Set PreSettling delay to skip IDAC glitch before scanning */
1381:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CyDelayCycles(CapSense_GLITCH_ELIMINATION_CYCLES);
1382:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_CSD_SNS_CLK_SOURCE != CapSense_CLK_SOURCE_DIRECT) */
1383:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1384:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Trigger Scan */
1385:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDTriggerScan();
1386:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1387:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CyExitCriticalSection(interruptState);
1388:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1389:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
1390:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1391:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1392:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
1393:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_CSDScanExt
1394:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 36


1395:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1396:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
1397:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Starts the CSD conversion on the preconfigured sensor. This function requires
1398:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  using the CapSense_CSDSetupWidgetExt() function to set up the a
1399:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  widget.
1400:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1401:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
1402:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Starts the CSD conversion on the preconfigured sensor. This function requires
1403:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  using the CapSense_CSDSetupWidgetExt() function to set up the a
1404:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  widget.
1405:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1406:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  \note This function is obsolete and kept for backward compatibility only.
1407:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  The CapSense_ScanExt() function should be used instead.
1408:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1409:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function performs single scanning of one sensor in the widget configured
1410:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  by the CapSense_CSDSetupWidgetExt() function. It does the following
1411:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  tasks:
1412:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *    1. Sets the busy flag in the CapSense_dsRam structure.
1413:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *    2. Performs the clock-phase alignment of the sense and modulator clocks.
1414:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *    3. Performs the Cmod pre-charging.
1415:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *    4. Starts single scanning.
1416:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1417:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Calling this function directly from the application layer is not
1418:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  recommended. This function is used to implement only the user's specific
1419:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
1420:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function is called when no scanning is in progress. I.e.
1421:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_IsBusy() returns a non-busy status.
1422:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1423:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  The sensor must be preconfigured by using the
1424:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_CSDSetupWidgetExt() API prior to calling this function.
1425:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  The sensor remains ready for a next scan if a previous scan was triggered
1426:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  by using the CapSense_CSDScanExt() function. In this case, calling
1427:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_CSDSetupWidgetExt() is not required every time before the
1428:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_CSDScanExt() function. If a previous scan was triggered in
1429:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  any other way - CapSense_Scan(), CapSense_ScanAllWidgets() or
1430:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_RunTuner() - (see the CapSense_RunTuner() function
1431:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  description for more details), the sensor must be preconfigured again by
1432:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  using the CapSense_CSDSetupWidgetExt() API prior to calling the
1433:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_CSDScanExt() function.
1434:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1435:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  If disconnection of the sensors is required after calling
1436:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_CSDScanExt(), the CapSense_CSDDisconnectSns()
1437:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  function can be used.
1438:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1439:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
1440:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_CSDScanExt(void)
1441:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
1442:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if ((CapSense_DISABLE == CapSense_CSD_COMMON_SNS_CLK_EN) && \
1443:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****          (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN))
1444:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
1445:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                         CapSense_dsFlash.wdgtArray[CapSense_widgetI
1446:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1447:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDCalculateScanDuration(ptrWdgt);
1448:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDConfigClock();
1449:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif
1450:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1451:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Set Start of sensor scan flag */
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 37


1452:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_dsRam.status |= (CapSense_SW_STS_BUSY | CapSense_WDGT_SW_STS_BUSY);
1453:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1454:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
1455:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Reset the frequency scan channel if enabled */
1456:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
1457:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
1458:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1459:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE != CapSense_BLOCK_OFF_AFTER_SCAN_EN) &&\
1460:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         (CapSense_ENABLE == CapSense_CSDV2)
1461:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if(CapSense_CSD_ANALOG_STARTUP_DELAY_US > 0uL)
1462:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CyDelayUs(CapSense_CSD_ANALOG_STARTUP_DELAY_US);
1463:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_CSD_ANALOG_STARTUP_DELAY_US > 0uL) */
1464:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE != CapSense_BLOCK_OFF_AFTER_SCAN_EN) &&\
1465:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****               (CapSense_ENABLE == CapSense_CSDV2)*/
1466:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1467:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_SsCSDStartSample();
1468:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
1469:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1470:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1471:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
1472:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_CSDScan
1473:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
1474:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1475:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
1476:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function initiates a scan for the sensors of the widget initialized by the
1477:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_CSDSetupWidget() function.
1478:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1479:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
1480:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function initiates a scan for the sensors of the widget initialized by the
1481:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_CSDSetupWidget() function.
1482:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1483:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  \note This function is obsolete and kept for backward compatibility only.
1484:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  The CapSense_Scan() function should be used instead.
1485:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1486:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function performs scanning of all the sensors in the widget configured by
1487:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  the CapSense_CSDSetupWidget() function. It does the following tasks:
1488:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *    1. Connects the first sensor of the widget.
1489:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *    2. Configures the IDAC value.
1490:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *    3. Initializes the interrupt callback function to initialize a scan of
1491:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *       the next sensors in a widget.
1492:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *    4. Starts scanning for the first sensor in the widget.
1493:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1494:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function is called by the CapSense_Scan() API if the given
1495:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  widget uses the CSD sensing method.
1496:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1497:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Calling this function directly from the application layer is not
1498:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  recommended. This function is used to implement only the user's specific
1499:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
1500:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1501:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function is called when no scanning is in progress. I.e.
1502:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_IsBusy() returns a non-busy status. The widget must be
1503:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  preconfigured by the CapSense_CSDSetupWidget() function if any other
1504:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  widget was previously scanned or any other type of the scan functions was used.
1505:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1506:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
1507:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_CSDScan(void)
1508:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 38


1509:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
1510:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                     CapSense_dsFlash.wdgtArray[CapSense_widgetIndex
1511:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1512:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Set all the sensors to inactive state */
1513:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     if(CapSense_dsRam.scanCurrentISC != CapSense_dsRam.scanCsdISC)
1514:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
1515:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsSetAllIOsState((uint32)CapSense_dsRam.scanCsdISC);
1516:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_dsRam.scanCurrentISC = CapSense_dsRam.scanCsdISC;
1517:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
1518:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1519:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****      /*
1520:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****       * Update CapSense_sensorIndex with the first sensor in
1521:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****       * widget to use it in ISR handler to configure the next sensor
1522:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****       */
1523:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_sensorIndex = 0u;
1524:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1525:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Update global pointer to CapSense_RAM_SNS_STRUCT to current sensor  */
1526:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_curRamSnsPtr = (CapSense_RAM_SNS_STRUCT *)
1527:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                               CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2
1528:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                               + CapSense_sensorIndex;
1529:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1530:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
1531:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Reset the frequency scan channel if enabled */
1532:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
1533:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
1534:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1535:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Setup Idac Value */
1536:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****    CapSense_SsCSDSetUpIdacs(ptrWdgt);
1537:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1538:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
1539:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Check ganged sns flag  */
1540:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         if (CapSense_GANGED_SNS_MASK == (CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].staticCon
1541:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_GANGED_SNS_MASK))
1542:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1543:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Setup ISR handler to multiple-sensor scan function with ganged sensors */
1544:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_ISR_StartEx(&CapSense_CSDPostMultiScanGanged);
1545:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1546:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         else
1547:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1548:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Set up ISR handler to multiple-sensor scan function without ganged sensors */
1549:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_ISR_StartEx(&CapSense_CSDPostMultiScan);
1550:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1551:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1552:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDConnectSensorExt((uint32)CapSense_widgetIndex, (uint32)CapSense_sensorIndex);
1553:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
1554:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* initialize ptr to sensor IO structure to appropriate address */
1555:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_curSnsIOPtr = (CapSense_FLASH_IO_STRUCT const *)
1556:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                         CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2SnsFla
1557:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                         + CapSense_sensorIndex;
1558:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1559:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Enable sensor */
1560:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_CSDConnectSns(CapSense_curSnsIOPtr);
1561:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1562:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set-up ISR handler to multiple-sensor scan function without ganged sensors */
1563:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_ISR_StartEx(&CapSense_CSDPostMultiScan);
1564:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)  */
1565:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 39


1566:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Start scanning */
1567:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_CSDScanExt();
1568:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
1569:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1570:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1571:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
1572:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_SsCSDConnectSensorExt
1573:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
1574:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1575:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
1576:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Connects a ganged sensor port-pin to the sensing HW block via the AMUX bus.
1577:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1578:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
1579:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   The function gets the IO configuration registers addresses, their shifts and
1580:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   masks from the FLASH_IO_STRUCT object. Basing on this data, it updates the HSIOM and
1581:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   PC registers.
1582:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1583:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param widgetId
1584:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Specifies ID of the widget.
1585:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1586:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param sensorId
1587:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Specifies ID of the sensor in the widget.
1588:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1589:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
1590:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_SsCSDConnectSensorExt(uint32 widgetId, uint32 sensorId)
1591:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
1592:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
1593:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 tempVal;
1594:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
1595:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1596:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* initialize ptr to sensor IO structure to appropriate address */
1597:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_curSnsIOPtr = (CapSense_FLASH_IO_STRUCT const *)
1598:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                       CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsF
1599:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                       + sensorId;
1600:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1601:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
1602:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Check ganged sns flag  */
1603:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         if (CapSense_GANGED_SNS_MASK ==
1604:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****            (CapSense_dsFlash.wdgtArray[widgetId].staticConfig &
1605:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_GANGED_SNS_MASK))
1606:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1607:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Get sns pointer */
1608:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_curFlashSnsPtr = (CapSense_FLASH_SNS_STRUCT const *)
1609:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsFlash +
1610:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                sensorId;
1611:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1612:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Get number of ganged pins */
1613:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             tempVal = CapSense_curFlashSnsPtr->numPins;
1614:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1615:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Get IO pointer  */
1616:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_curSnsIOPtr = &CapSense_ioList[CapSense_curFlashSnsPtr->firstPinId];
1617:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1618:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Connect all ganged sensors  */
1619:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             do
1620:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
1621:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_CSDConnectSns(CapSense_curSnsIOPtr);
1622:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_curSnsIOPtr++;
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 40


1623:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tempVal--;
1624:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             } while (0u != tempVal);
1625:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1626:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         else
1627:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1628:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Connect sensor */
1629:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_CSDConnectSns(CapSense_curSnsIOPtr);
1630:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1631:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
1632:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Connect sensor */
1633:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_CSDConnectSns(CapSense_curSnsIOPtr);
1634:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
1635:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
1636:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1637:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1638:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
1639:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_SsCSDDisconnectSnsExt
1640:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
1641:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1642:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
1643:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Disconnects a ganged sensor port-pin from the sensing HW block and AMUX bus.
1644:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Sets the default state of the un-scanned sensor.
1645:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1646:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
1647:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   The function gets the IO configuration registers addresses, their shifts and
1648:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   masks from the FLASH_IO_STRUCT object. Basing on this data and Inactive sensor
1649:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   connection parameter, it updates the HSIOM, PC and DR registers.
1650:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   The HSIOM register is updated only when the Inactive sensor connection parameter
1651:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   is set to Shield.
1652:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1653:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param widgetId
1654:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Specifies ID of the widget.
1655:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1656:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param sensorId
1657:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Specifies ID of the sensor in the widget.
1658:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1659:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
1660:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_SsCSDDisconnectSnsExt(uint32 widgetId, uint32 sensorId)
1661:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
1662:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
1663:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 tempVal;
1664:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
1665:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1666:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* initialize ptr to sensor IO structure to appropriate address        */
1667:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_curSnsIOPtr = (CapSense_FLASH_IO_STRUCT const *)
1668:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                       CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsF
1669:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                       + sensorId;
1670:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1671:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
1672:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Check ganged sns flag  */
1673:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         if ((CapSense_dsFlash.wdgtArray[widgetId].staticConfig &
1674:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_GANGED_SNS_MASK) == CapSense_GANGED_SNS_MASK)
1675:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1676:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Get sns pointer */
1677:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_curFlashSnsPtr = (CapSense_FLASH_SNS_STRUCT const *)
1678:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsFlash +
1679:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                sensorId;
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 41


1680:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1681:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Get number of ganged pins */
1682:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             tempVal = CapSense_curFlashSnsPtr->numPins;
1683:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1684:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Get IO pointer  */
1685:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_curSnsIOPtr = &CapSense_ioList[CapSense_curFlashSnsPtr->firstPinId];
1686:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1687:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Disconnect all ganged sensors */
1688:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             do
1689:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
1690:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_CSDDisconnectSns(CapSense_curSnsIOPtr);
1691:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_curSnsIOPtr++;
1692:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tempVal--;
1693:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             } while (0u != tempVal);
1694:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1695:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         else
1696:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1697:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Disconnect ganged sensor */
1698:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_CSDDisconnectSns(CapSense_curSnsIOPtr);
1699:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1700:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
1701:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Disconnect ganged sensor */
1702:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_CSDDisconnectSns(CapSense_curSnsIOPtr);
1703:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
1704:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
1705:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1706:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1707:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
1708:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_CSDConnectSns
1709:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
1710:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1711:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
1712:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Connects a port pin used by the sensor to the AMUX bus of the sensing HW block.
1713:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1714:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
1715:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Connects a port pin used by the sensor to the AMUX bus of the sensing HW block
1716:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  while a sensor is being scanned. The function ignores the fact if
1717:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  the sensor is a ganged sensor and connects only a specified pin.
1718:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1719:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Scanning should be completed before calling this API.
1720:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1721:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Calling this function directly from the application layer is not
1722:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  recommended. This function is used to implement only the user's specific
1723:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  use cases. Functions that perform a setup and scan of a sensor/widget,
1724:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  automatically set the required pin states and perform the sensor connection.
1725:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  They do not take into account changes in the design made by the
1726:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_CSDConnectSns() function.
1727:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1728:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param  snsAddrPtr
1729:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Specifies the pointer to the FLASH_IO_STRUCT object belonging to a sensor
1730:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  which to be connected to the sensing HW block.
1731:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1732:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
1733:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_CSDConnectSns(CapSense_FLASH_IO_STRUCT const *snsAddrPtr)
1734:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
1735:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 newRegisterValue;
1736:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint8  interruptState;
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 42


1737:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 pinModeShift;
1738:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 pinHSIOMShift;
1739:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1740:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Get offsets for sensor */
1741:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     pinModeShift = (uint32)snsAddrPtr->shift;
1742:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     pinHSIOMShift = (uint32)snsAddrPtr->hsiomShift;
1743:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1744:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     interruptState = CyEnterCriticalSection();
1745:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1746:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Use temporary variable to update registers without multiple writings to them */
1747:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     newRegisterValue = CY_GET_REG32(snsAddrPtr->hsiomPtr);
1748:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     newRegisterValue &= ~(CapSense_HSIOM_SEL_MASK << pinHSIOMShift);
1749:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     newRegisterValue |= (uint32)((uint32)CapSense_HSIOM_SEL_CSD_SENSE << pinHSIOMShift);
1750:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1751:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Update port configuration register (drive mode) for sensor */
1752:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CY_SET_REG32(snsAddrPtr->pcPtr, CY_GET_REG32(snsAddrPtr->pcPtr) & (uint32)~((uint32)CapSense_GP
1753:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1754:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Update HSIOM register for sensor */
1755:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CY_SET_REG32(snsAddrPtr->hsiomPtr, newRegisterValue);
1756:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1757:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CyExitCriticalSection(interruptState);
1758:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
1759:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1760:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1761:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
1762:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_CSDDisconnectSns
1763:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
1764:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1765:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
1766:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Disconnects a sensor port pin from the sensing HW block and the AMUX bus. Sets
1767:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  the default state of the un-scanned sensor.
1768:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1769:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
1770:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function works identically to CapSense_CSDConnectSns() except
1771:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  it disconnects the specified port-pin used by the sensor.
1772:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1773:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Calling this function directly from the application layer is not
1774:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  recommended. This function is used to implement only the user's specific
1775:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  use cases. Functions that perform a setup and scan of sensor/widget
1776:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  automatically set the required pin states and perform the sensor connection.
1777:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  They ignore changes in the design made by the
1778:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_CSDDisconnectSns() function.
1779:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1780:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param  snsAddrPtr
1781:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Specifies the pointer to the FLASH_IO_STRUCT object belonging to a sensor
1782:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  which should be disconnected from the sensing HW block.
1783:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1784:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
1785:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_CSDDisconnectSns(CapSense_FLASH_IO_STRUCT const *snsAddrPtr)
1786:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
1787:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint8  interruptState;
1788:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 pinHSIOMShift;
1789:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 pinModeShift;
1790:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 newPcRegValue;
1791:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 newHsiomRegValue;
1792:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1793:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     pinHSIOMShift = (uint32)snsAddrPtr->hsiomShift;
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 43


1794:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     pinModeShift = (uint32)snsAddrPtr->shift;
1795:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1796:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     interruptState = CyEnterCriticalSection();
1797:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1798:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     newPcRegValue  = CY_GET_REG32(snsAddrPtr->pcPtr);
1799:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     newPcRegValue &= ~(CapSense_GPIO_PC_MASK << pinModeShift);
1800:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1801:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     newHsiomRegValue  = CY_GET_REG32(snsAddrPtr->hsiomPtr);
1802:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     newHsiomRegValue &= ~(CapSense_HSIOM_SEL_MASK << pinHSIOMShift);
1803:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CY_SET_REG32(snsAddrPtr->hsiomPtr, newHsiomRegValue);
1804:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1805:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     if(CapSense_SNS_CONNECTION_GROUND == CapSense_dsRam.scanCurrentISC)
1806:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
1807:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newPcRegValue |= (CY_SYS_PINS_DM_STRONG << pinModeShift);
1808:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(snsAddrPtr->pcPtr, newPcRegValue);
1809:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
1810:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     else
1811:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
1812:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newPcRegValue |= (CY_SYS_PINS_DM_ALG_HIZ << pinModeShift);
1813:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         if(CapSense_SNS_CONNECTION_SHIELD == CapSense_dsRam.scanCurrentISC)
1814:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1815:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Connect to Shield */
1816:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newHsiomRegValue |= (CapSense_HSIOM_SEL_CSD_SHIELD << pinHSIOMShift);
1817:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(snsAddrPtr->pcPtr, newPcRegValue);
1818:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(snsAddrPtr->hsiomPtr, newHsiomRegValue);
1819:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1820:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
1821:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Set logic 0 to port data register */
1822:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CY_SET_REG32(snsAddrPtr->drPtr, CY_GET_REG32(snsAddrPtr->drPtr) & (uint32)~(uint32)((uint32)1u 
1823:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1824:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CyExitCriticalSection(interruptState);
1825:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
1826:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1827:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if ((CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE) || \
1828:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****      (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN))
1829:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /*******************************************************************************
1830:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * Function Name: CapSense_SsCSDCalibrateCheck
1831:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     ****************************************************************************//**
1832:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
1833:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \brief
1834:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  This internal function checks if the calibration is performed successfully.
1835:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
1836:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \details
1837:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  The function verifies that raw counts are within acceptable range
1838:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  defined by target and calibration error parameters.
1839:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
1840:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \param widgetId
1841:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  The desired widget ID.
1842:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
1843:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \param target
1844:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  Raw count target in percentage.
1845:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
1846:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \return Returns the status of the operation:
1847:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   - Zero     - All the sensors in the widget are calibrated successfully.
1848:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   - Non-Zero - Calibration failed for any sensor in the widget.
1849:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
1850:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *******************************************************************************/
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 44


1851:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     static cystatus CapSense_SsCSDCalibrateCheck(uint32 widgetId, uint32 target)
1852:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
1853:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1854:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 rawcount;
1855:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 snsIndex;
1856:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 freqChannel;
1857:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 upperLimit;
1858:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 lowerLimit;
1859:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1860:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_FLASH_WD_STRUCT const *ptrFlashWidget = &CapSense_dsFlash.wdgtArray[widgetId];
1861:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_RAM_WD_BASE_STRUCT *ptrRamWidget = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWidget->
1862:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_RAM_SNS_STRUCT *ptrRamSensor = ptrFlashWidget->ptr2SnsRam;
1863:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1864:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Calculate acceptable raw count range based on the resolution, target and error */
1865:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         rawcount = (0x00000001Lu << ptrRamWidget->resolution) - 1u;
1866:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         lowerLimit = 0u;
1867:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         if (target > CapSense_CSD_CALIBRATION_ERROR)
1868:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1869:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             lowerLimit = target - CapSense_CSD_CALIBRATION_ERROR;
1870:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1871:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         upperLimit = target + CapSense_CSD_CALIBRATION_ERROR;
1872:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         if (upperLimit > CapSense_PERCENTAGE_100)
1873:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1874:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             upperLimit = CapSense_PERCENTAGE_100;
1875:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1876:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         lowerLimit = (rawcount * lowerLimit) / CapSense_PERCENTAGE_100;
1877:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         upperLimit = (rawcount * upperLimit) / CapSense_PERCENTAGE_100;
1878:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1879:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Check if raw count is in the defined range */
1880:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         for(snsIndex = 0u; snsIndex < ptrFlashWidget->totalNumSns; snsIndex++)
1881:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1882:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
1883:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
1884:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 rawcount = ptrRamSensor->raw[freqChannel];
1885:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 if ((rawcount < lowerLimit) || (rawcount > upperLimit))
1886:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
1887:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     calibrateStatus = CYRET_BAD_DATA;
1888:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     break;
1889:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
1890:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
1891:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             ptrRamSensor++;
1892:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1893:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         return (calibrateStatus);
1894:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
1895:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1896:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1897:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_IDAC_AUTO_GAIN_EN)
1898:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /*******************************************************************************
1899:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * Function Name: CapSense_SsCSDSwitchIdacGain
1900:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         ****************************************************************************//**
1901:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
1902:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \brief
1903:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *  This internal function switches to the lower IDAC gain is possible.
1904:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
1905:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \details
1906:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *  This internal function switches to the lower IDAC gain is possible.
1907:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *  Conditions of switching to the lower IDAC gains:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 45


1908:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *  1. The current IDAC gain is not the lowest one.
1909:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *  2. The maximum IDAC at gain switching will not be out of range.
1910:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *  3. The minimum IDAC is still below the acceptable range.
1911:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
1912:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \param ptrFlashWidget
1913:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *  Specifies the pointer to a widget.
1914:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
1915:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \return Returns the status of the operation:
1916:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   - Zero     - Gain switching is not needed.
1917:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   - Non-Zero - Gain was switched to the lower one.
1918:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
1919:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *******************************************************************************/
1920:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         static uint32 CapSense_SsCSDSwitchIdacGain(CapSense_FLASH_WD_STRUCT const *ptrFlashWidget)
1921:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1922:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 ratio;
1923:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 maxIdac;
1924:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 minIdac;
1925:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 status = 0u;
1926:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 freqChannel;
1927:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 gainIndex;
1928:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1929:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_RAM_WD_BASE_STRUCT *ptrRamWidget = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWidg
1930:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
1931:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 uint32 snsIndex;
1932:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_RAM_SNS_STRUCT *ptrRamSensor = ptrFlashWidget->ptr2SnsRam;
1933:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif
1934:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1935:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             gainIndex = ptrRamWidget->idacGainIndex;
1936:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1937:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Find maximum and minimum IDACs */
1938:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             maxIdac = 0u;
1939:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             minIdac = CapSense_CSD_CAL_IDAC_MAX_VALUE;
1940:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
1941:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
1942:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 if (maxIdac < ptrRamWidget->idacMod[freqChannel])
1943:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
1944:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     maxIdac = ptrRamWidget->idacMod[freqChannel];
1945:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
1946:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 if (minIdac > ptrRamWidget->idacMod[freqChannel])
1947:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
1948:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     minIdac = ptrRamWidget->idacMod[freqChannel];
1949:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
1950:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1951:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     if ((CapSense_WD_TOUCHPAD_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)) ||
1952:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         (CapSense_WD_MATRIX_BUTTON_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)))
1953:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
1954:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         if (maxIdac < ptrRamWidget->rowIdacMod[freqChannel])
1955:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         {
1956:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             maxIdac = ptrRamWidget->rowIdacMod[freqChannel];
1957:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         }
1958:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         if (minIdac > ptrRamWidget->rowIdacMod[freqChannel])
1959:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         {
1960:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             minIdac = ptrRamWidget->rowIdacMod[freqChannel];
1961:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         }
1962:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
1963:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #endif
1964:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 46


1965:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
1966:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 for(snsIndex = 0u; snsIndex < ptrFlashWidget->totalNumSns; snsIndex++)
1967:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
1968:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
1969:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
1970:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         if (minIdac > ptrRamSensor->idacComp[freqChannel])
1971:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         {
1972:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             minIdac = ptrRamSensor->idacComp[freqChannel];
1973:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         }
1974:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
1975:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     ptrRamSensor++;
1976:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
1977:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif
1978:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1979:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Check gain switch conditions */
1980:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             if (gainIndex != 0u)
1981:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
1982:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 if (minIdac < CapSense_CSD_IDAC_MIN)
1983:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
1984:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     ratio = CapSense_idacGainTable[gainIndex].gainValue /
1985:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             CapSense_idacGainTable[gainIndex - 1u].gainValue;
1986:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     if ((maxIdac * ratio) < CapSense_CSD_CAL_IDAC_MAX_VALUE)
1987:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
1988:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         /* Switch to lower idac gain */
1989:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         ptrRamWidget->idacGainIndex--;
1990:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         status = 1u;
1991:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
1992:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
1993:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
1994:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1995:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             return (status);
1996:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1997:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_AUTO_GAIN_EN) */
1998:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1999:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2000:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
2001:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /*******************************************************************************
2002:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * Function Name: CapSense_SsCSDNormalizeIdac
2003:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         ****************************************************************************//**
2004:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
2005:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \brief
2006:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *  This function normalizes compensation IDAC.
2007:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
2008:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \details
2009:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *  This function normalizes compensation IDAC.
2010:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
2011:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \param ptrFlashWidget
2012:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *  Specifies the pointer to a widget.
2013:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
2014:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \param target
2015:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *  Raw count target in percentage.
2016:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
2017:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *******************************************************************************/
2018:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         static void CapSense_SsCSDNormalizeIdac(CapSense_FLASH_WD_STRUCT const *ptrFlashWidget, uin
2019:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
2020:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 snsIndex;
2021:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 freqChannel;
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 47


2022:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 maxIdac;
2023:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 minIdac;
2024:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 minRaw;
2025:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 maxRawLevel;
2026:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 rawLevel;
2027:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 iMod;
2028:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2029:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_RAM_WD_BASE_STRUCT *ptrRamWidget = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWidg
2030:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_RAM_SNS_STRUCT *ptrRamSensor;
2031:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2032:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Calculate raw count level based on resolution and target */
2033:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             maxRawLevel = (0x00000001Lu << ptrRamWidget->resolution) - 1u;
2034:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2035:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /*
2036:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             * IDAC Normalization is performed separately for each multi-frequency channel
2037:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             * and separately for row and column
2038:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             */
2039:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
2040:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
2041:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Find maximum and minimum IDACs */
2042:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 maxIdac = ptrRamWidget->idacMod[freqChannel];
2043:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 minIdac = ptrRamWidget->idacMod[freqChannel];
2044:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 ptrRamSensor = ptrFlashWidget->ptr2SnsRam;
2045:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 minRaw = ptrRamSensor->raw[freqChannel];
2046:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 for(snsIndex = 0u; snsIndex < ptrFlashWidget->numCols; snsIndex++)
2047:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
2048:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     if (minIdac > ptrRamSensor->idacComp[freqChannel])
2049:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
2050:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         minIdac = ptrRamSensor->idacComp[freqChannel];
2051:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         minRaw = ptrRamSensor->raw[freqChannel];
2052:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
2053:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     ptrRamSensor++;
2054:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
2055:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2056:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Define new modulator IDAC */
2057:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 rawLevel = ((minRaw * CapSense_PERCENTAGE_100) / maxRawLevel) + CapSense_PERCENTAGE
2058:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 iMod = (rawLevel * minIdac) / target;
2059:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2060:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 if (iMod > maxIdac)
2061:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
2062:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     iMod = maxIdac;
2063:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
2064:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 ptrRamWidget->idacMod[freqChannel] = (uint8)iMod;
2065:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2066:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Re-calculate compensation IDAC */
2067:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 ptrRamSensor = ptrFlashWidget->ptr2SnsRam;
2068:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 for(snsIndex = 0u; snsIndex < ptrFlashWidget->numCols; snsIndex++)
2069:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
2070:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     rawLevel = (((ptrRamSensor->raw[freqChannel] * CapSense_PERCENTAGE_100) / maxRa
2071:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         CapSense_PERCENTAGE_100) * ptrRamSensor->idacComp[freqChannel];
2072:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     if (rawLevel < (iMod * target))
2073:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
2074:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         ptrRamSensor->idacComp[freqChannel] = 0u;
2075:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
2076:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     else
2077:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
2078:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         ptrRamSensor->idacComp[freqChannel] = (uint8)(((rawLevel - (iMod * target))
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 48


2079:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             (CapSense_PERCENTAGE_100 >> 1u)) / CapSense_PERCENTAGE_100);
2080:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
2081:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     ptrRamSensor++;
2082:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
2083:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2084:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2085:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     if ((CapSense_WD_TOUCHPAD_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)) ||
2086:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         (CapSense_WD_MATRIX_BUTTON_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)))
2087:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
2088:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         /* Find maximum and minimum IDACs */
2089:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         maxIdac = ptrRamWidget->rowIdacMod[freqChannel];
2090:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         minIdac = ptrRamWidget->rowIdacMod[freqChannel];
2091:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         ptrRamSensor = &(ptrFlashWidget->ptr2SnsRam[ptrFlashWidget->numCols]);
2092:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         minRaw = ptrRamSensor->raw[freqChannel];
2093:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         for(snsIndex = ptrFlashWidget->numCols; snsIndex < ptrFlashWidget->totalNum
2094:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         {
2095:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             if (minIdac > ptrRamSensor->idacComp[freqChannel])
2096:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             {
2097:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 minIdac = ptrRamSensor->idacComp[freqChannel];
2098:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 minRaw = ptrRamSensor->raw[freqChannel];
2099:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             }
2100:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             ptrRamSensor++;
2101:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         }
2102:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2103:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         /* Define new modulator IDAC */
2104:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         rawLevel = ((minRaw * CapSense_PERCENTAGE_100) / maxRawLevel) + CapSense_PE
2105:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         iMod = (rawLevel * minIdac) / target;
2106:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2107:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         if (iMod > maxIdac)
2108:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         {
2109:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             iMod = maxIdac;
2110:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         }
2111:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         ptrRamWidget->rowIdacMod[freqChannel] = (uint8)iMod;
2112:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2113:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         /* Re-calculate compensation IDAC */
2114:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         ptrRamSensor = &(ptrFlashWidget->ptr2SnsRam[ptrFlashWidget->numCols]);
2115:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         for(snsIndex = 0u; snsIndex < ptrFlashWidget->numRows; snsIndex++)
2116:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         {
2117:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             rawLevel = (((ptrRamSensor->raw[freqChannel] * CapSense_PERCENTAGE_100)
2118:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 CapSense_PERCENTAGE_100) * ptrRamSensor->idacComp[freqChannel];
2119:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             if (rawLevel < (iMod * target))
2120:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             {
2121:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 ptrRamSensor->idacComp[freqChannel] = 0u;
2122:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             }
2123:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             else
2124:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             {
2125:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 ptrRamSensor->idacComp[freqChannel] = (uint8)(((rawLevel - (iMod * 
2126:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                     (CapSense_PERCENTAGE_100 >> 1u)) / CapSense_PERCENTAGE_100);
2127:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             }
2128:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             ptrRamSensor++;
2129:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         }
2130:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
2131:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #endif
2132:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
2133:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
2134:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif
2135:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 49


2136:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2137:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /*******************************************************************************
2138:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * Function Name: CapSense_SsCSDCalibrate
2139:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     ****************************************************************************//**
2140:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2141:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \brief
2142:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  Implements IDAC calibration for a desired widget using successive
2143:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  approximation algorithm.
2144:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2145:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \details
2146:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  Implements IDAC calibration for a desired widget using successive
2147:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  approximation algorithm. It supports any type of CSD widgets, and works
2148:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  with multi-frequency scan and compensation IDAC features enabled.
2149:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2150:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  As result of function operation, the modulator IDAC that corresponds to the
2151:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  sensor with the highest capacitance (the biggest modulator IDAC) is stored
2152:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  into widget data structure. If it is dual-axis widget type (touchpad or matrix
2153:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  buttons) or if multi-frequency scan feature is enabled then the maximum
2154:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  modulator IDAC found separately for each multi-frequency channel and for
2155:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  rows/columns.
2156:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2157:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  If compensation IDAC is enabled, then it preserves IDAC value of
2158:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  single-sensor calibration. In dual IDAC mode each sensor was calibrated with
2159:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  equal values of modulator and compensation IDAC.
2160:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2161:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  After IDACs were found each sensor scanned again to get real raw count stored
2162:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  in sensor structure.
2163:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2164:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \param widgetId
2165:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  Specifies the ID number of the CSD widget to calibrate its raw count.
2166:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  A macro for the widget ID can be found in the
2167:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  CapSense Configuration header file defined as
2168:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  CapSense_<WidgetName>_WDGT_ID.
2169:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2170:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \param target
2171:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  Specifies the calibration target in percentages of the maximum raw count.
2172:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2173:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *******************************************************************************/
2174:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     static void CapSense_SsCSDCalibrate(uint32 widgetId, uint32 target)
2175:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
2176:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 snsIndex;
2177:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 freqChannel;
2178:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 calMask;
2179:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 temp;
2180:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 watchdogCounter;
2181:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2182:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint8 *ptrIdacMod;
2183:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint8 *ptrMaxIdac;
2184:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2185:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint8 maxIdac[CapSense_NUM_SCAN_FREQS];
2186:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2187:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2188:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint8 maxRowIdac[CapSense_NUM_SCAN_FREQS];
2189:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 dualWidgetType = 0u;
2190:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif
2191:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2192:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_RAM_SNS_STRUCT *ptrRamSensor;
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 50


2193:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_FLASH_WD_STRUCT const *ptrFlashWidget = &CapSense_dsFlash.wdgtArray[widgetId];
2194:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_RAM_WD_BASE_STRUCT *ptrRamWidget = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWidget->
2195:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2196:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         ptrIdacMod = &ptrRamWidget->idacMod[0u];
2197:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         ptrMaxIdac = &maxIdac[0u];
2198:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2199:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
2200:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
2201:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             maxIdac[freqChannel] = 0u;
2202:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2203:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 maxRowIdac[freqChannel] = 0u;
2204:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif
2205:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
2206:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2207:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Calculate raw count level based on resolution and target */
2208:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         temp = (((0x00000001Lu << ptrRamWidget->resolution) - 1u) * target) / CapSense_PERCENTAGE_1
2209:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2210:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2211:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             if ((CapSense_WD_TOUCHPAD_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)) ||
2212:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 (CapSense_WD_MATRIX_BUTTON_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)))
2213:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
2214:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 dualWidgetType = 1u;
2215:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
2216:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif
2217:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2218:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Loop through the widget sensors */
2219:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         for(snsIndex = 0u; snsIndex < ptrFlashWidget->totalNumSns; snsIndex++)
2220:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
2221:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2222:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 if (snsIndex == ptrFlashWidget->numCols)
2223:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
2224:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     if (0u != dualWidgetType)
2225:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
2226:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         ptrIdacMod = &ptrRamWidget->rowIdacMod[0u];
2227:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         ptrMaxIdac = &maxRowIdac[0u];
2228:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
2229:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
2230:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif
2231:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2232:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             ptrRamSensor = &((ptrFlashWidget->ptr2SnsRam)[snsIndex]);
2233:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2234:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Set default IDAC code */
2235:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             calMask = CapSense_CSD_CAL_MIDDLE_VALUE;
2236:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
2237:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
2238:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 ptrIdacMod[freqChannel] = CapSense_CSD_CAL_MIDDLE_VALUE;
2239:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
2240:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     ptrRamSensor->idacComp[freqChannel] = ptrIdacMod[freqChannel];
2241:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #endif
2242:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
2243:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2244:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Loop through IDAC code */
2245:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             do
2246:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
2247:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Need to configure HW block with each IDAC change */
2248:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_CSDSetupWidgetExt(widgetId, snsIndex);
2249:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 51


2250:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #if (CapSense_ENABLE == CapSense_CSDV2)
2251:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     CapSense_DischargeExtCapacitors(CapSense_EXT_CAP_DISCHARGE_TIME);
2252:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #endif
2253:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2254:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Scan sensor */
2255:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_CSDScanExt();
2256:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2257:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 watchdogCounter = CapSense_CSD_CALIBR_WATCHDOG_CYCLES_NUM;
2258:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 while (((CapSense_dsRam.status & CapSense_SW_STS_BUSY) != 0u) && (0uL != watchdogCo
2259:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
2260:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     watchdogCounter--;
2261:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
2262:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2263:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Update IDAC based on scan result */
2264:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
2265:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
2266:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     if (ptrRamSensor->raw[freqChannel] < temp)
2267:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
2268:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         ptrIdacMod[freqChannel] &= (uint8)(~calMask);
2269:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
2270:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
2271:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2272:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Switch to the lower IDAC mask */
2273:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 calMask >>= 1u;
2274:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
2275:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
2276:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     ptrIdacMod[freqChannel] |= (uint8)calMask;
2277:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
2278:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         ptrRamSensor->idacComp[freqChannel] = ptrIdacMod[freqChannel];
2279:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     #endif
2280:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     if (0u == calMask)
2281:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
2282:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         if (0u == ptrIdacMod[freqChannel])
2283:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         {
2284:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             ptrIdacMod[freqChannel] = 1u;
2285:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
2286:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 ptrRamSensor->idacComp[freqChannel] = ptrIdacMod[freqChannel];
2287:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             #endif
2288:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         }
2289:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
2290:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
2291:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
2292:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             while (calMask != 0u);
2293:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2294:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
2295:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
2296:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 if (ptrMaxIdac[freqChannel] < ptrIdacMod[freqChannel])
2297:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
2298:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     ptrMaxIdac[freqChannel] = ptrIdacMod[freqChannel];
2299:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
2300:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
2301:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2302:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Perform scan again to get real raw count if IDAC was changed at the last iteration *
2303:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_CSDSetupWidgetExt(widgetId, snsIndex);
2304:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_CSDScanExt();
2305:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2306:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             watchdogCounter = CapSense_CSD_CALIBR_WATCHDOG_CYCLES_NUM;
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 52


2307:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             while (((CapSense_dsRam.status & CapSense_SW_STS_BUSY) != 0u) && (0uL != watchdogCounte
2308:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
2309:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 watchdogCounter--;
2310:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
2311:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
2312:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2313:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
2314:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
2315:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             ptrRamWidget->idacMod[freqChannel] = maxIdac[freqChannel];
2316:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2317:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 if (0u != dualWidgetType)
2318:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
2319:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     ptrRamWidget->rowIdacMod[freqChannel] = maxRowIdac[freqChannel];
2320:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2321:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     #if (CapSense_ENABLE == CapSense_CSD_COL_ROW_IDAC_ALIGNMENT_EN)
2322:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         #if (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN)
2323:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             if (ptrRamWidget->idacMod[freqChannel] < ptrRamWidget->rowIdacMod[freqC
2324:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             {
2325:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 temp = ptrRamWidget->rowIdacMod[freqChannel];
2326:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 if (temp > CapSense_CSD_CAL_IDAC_MAX_VALUE)
2327:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 {
2328:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                     temp = CapSense_CSD_CAL_IDAC_MAX_VALUE;
2329:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 }
2330:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 ptrRamWidget->idacMod[freqChannel] = (uint8)temp;
2331:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             }
2332:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             else
2333:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             {
2334:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 temp = ptrRamWidget->idacMod[freqChannel];
2335:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 if (temp > CapSense_CSD_CAL_IDAC_MAX_VALUE)
2336:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 {
2337:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                     temp = CapSense_CSD_CAL_IDAC_MAX_VALUE;
2338:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 }
2339:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 ptrRamWidget->rowIdacMod[freqChannel] = (uint8)temp;
2340:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             }
2341:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         #else
2342:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             if (((uint32)ptrRamWidget->idacMod[freqChannel] * ptrRamWidget->snsClk)
2343:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 ((uint32)ptrRamWidget->rowIdacMod[freqChannel] * ptrRamWidget->rowS
2344:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             {
2345:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 temp = ((uint32)ptrRamWidget->rowIdacMod[freqChannel] *
2346:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                 ptrRamWidget->rowSnsClk) / ptrRamWidget->snsClk;
2347:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 if (temp > CapSense_CSD_CAL_IDAC_MAX_VALUE)
2348:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 {
2349:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                     temp = CapSense_CSD_CAL_IDAC_MAX_VALUE;
2350:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 }
2351:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 ptrRamWidget->idacMod[freqChannel] = (uint8)temp;
2352:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             }
2353:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             else
2354:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             {
2355:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 temp = ((uint32)ptrRamWidget->idacMod[freqChannel] *
2356:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                 ptrRamWidget->snsClk) / ptrRamWidget->rowSnsClk;
2357:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 if (temp > CapSense_CSD_CAL_IDAC_MAX_VALUE)
2358:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 {
2359:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                     temp = CapSense_CSD_CAL_IDAC_MAX_VALUE;
2360:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 }
2361:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 ptrRamWidget->rowIdacMod[freqChannel] = (uint8)temp;
2362:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             }
2363:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         #endif
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 53


2364:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     #endif
2365:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
2366:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif
2367:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
2368:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
2369:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2370:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2371:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /*******************************************************************************
2372:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * Function Name: CapSense_CSDCalibrateWidget
2373:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     ****************************************************************************//**
2374:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2375:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \brief
2376:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  Executes the IDAC calibration for all the sensors in the widget specified in
2377:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  the input.
2378:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2379:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \details
2380:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  Executes the IDAC calibration for all the sensors in the widget specified in
2381:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  the input.
2382:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2383:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  \note This function is obsolete and kept for backward compatibility only.
2384:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  The CapSense_CalibrateWidget() function should be used instead.
2385:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2386:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  Performs a successive approximation search algorithm to find appropriate
2387:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  IDAC values for sensors in the specified widget that provides the raw
2388:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  count to the level specified by the target parameter.
2389:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2390:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  Calibration fails if the achieved raw count is outside of the range specified
2391:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  by the target and acceptable calibration deviation.
2392:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2393:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  This function is available when the CSD Enable IDAC auto-calibration
2394:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  parameter is enabled or the  SmartSense auto-tuning mode is configured.
2395:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2396:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \param widgetId
2397:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  Specifies the ID number of the CSD widget to calibrate its raw count.
2398:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  A macro for the widget ID can be found in the
2399:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  CapSense Configuration header file defined as
2400:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  CapSense_<WidgetName>_WDGT_ID.
2401:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2402:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \param target
2403:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  Specifies the calibration target in percentages of the maximum raw count.
2404:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2405:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \return
2406:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  Returns the status of the specified widget calibration:
2407:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *    - CYRET_SUCCESS - The operation is successfully completed.
2408:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *    - CYRET_BAD_PARAM - The input parameter is invalid.
2409:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *    - CYRET_BAD_DATA - The calibration failed and the Component may not operate
2410:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *      as expected.
2411:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *    - CYRET_TIMEOUT - The calibration failed due to timeout.
2412:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *    - CYRET_INVALID_STATE - The previous scanning is not completed and the
2413:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *      hardware block is busy.
2414:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2415:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *******************************************************************************/
2416:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     cystatus CapSense_CSDCalibrateWidget(uint32 widgetId, uint32 target)
2417:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
2418:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
2419:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 watchdogCounter;
2420:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 54


2421:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_IDAC_AUTO_GAIN_EN)
2422:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 gainSwitch;
2423:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif
2424:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2425:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_FLASH_WD_STRUCT const *ptrFlashWidget = &CapSense_dsFlash.wdgtArray[widgetId];
2426:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2427:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
2428:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
2429:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Previous widget is being scanned, return error */
2430:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             calibrateStatus = CYRET_INVALID_STATE;
2431:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
2432:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         else
2433:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
2434:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Set default IDAC gain */
2435:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             ((CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWidget->ptr2WdgtRam)->idacGainIndex =
2436:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_CSD_IDAC_GAIN_INDEX_DEFAULT;
2437:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2438:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Perform calibration */
2439:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_ENABLE != CapSense_CSD_IDAC_AUTO_GAIN_EN)
2440:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_SsCSDCalibrate(widgetId, target);
2441:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #else
2442:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 do
2443:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
2444:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     CapSense_SsCSDCalibrate(widgetId, target);
2445:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     gainSwitch = CapSense_SsCSDSwitchIdacGain(ptrFlashWidget);
2446:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 } while(0u != gainSwitch);
2447:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif
2448:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2449:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
2450:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* IDAC Normalization in Dual IDAC mode */
2451:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_SsCSDNormalizeIdac(ptrFlashWidget, target);
2452:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif
2453:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2454:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Perform specified widget scan to check calibration result */
2455:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_CSDSetupWidget(widgetId);
2456:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_CSDScan();
2457:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2458:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             watchdogCounter = CapSense_WIDGET_MAX_SCAN_TIME;
2459:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             while (((CapSense_dsRam.status & CapSense_SW_STS_BUSY) != 0u) && (0uL != watchdogCounte
2460:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
2461:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 watchdogCounter--;
2462:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
2463:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2464:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Verification of calibration result */
2465:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             if (0u == watchdogCounter)
2466:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
2467:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 calibrateStatus = CYRET_TIMEOUT;
2468:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
2469:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             else
2470:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
2471:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 calibrateStatus = CapSense_SsCSDCalibrateCheck(widgetId, target);
2472:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
2473:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2474:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****              /* Update CRC */
2475:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_ENABLE ==CapSense_TST_WDGT_CRC_EN)
2476:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_DsUpdateWidgetCrc(widgetId);
2477:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 55


2478:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
2479:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2480:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         return calibrateStatus;
2481:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
2482:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* ((CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)) || \
2483:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN)) */
2484:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2485:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2486:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if (CapSense_DISABLE == CapSense_CSDV2)
2487:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /*******************************************************************************
2488:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * Function Name: CapSense_SsCSDClockRestart
2489:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     ****************************************************************************//**
2490:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2491:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \brief
2492:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  This function restarts the clocks.
2493:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2494:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \details
2495:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  The function performs following:
2496:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  1) Stops, sets dividers and starts ModClk clock;
2497:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  2) Stops and starts SnsClk clock;
2498:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  3) Scan one cycle to reset the flip-flop for Direct clock mode.
2499:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2500:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *******************************************************************************/
2501:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CY_INLINE static void CapSense_SsCSDClockRestart(void)
2502:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
2503:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_CLK_SOURCE_DIRECT == CapSense_CSD_SNS_CLK_SOURCE)
2504:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 watchdogCounter;
2505:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_CLK_SOURCE_DIRECT == CapSense_CSD_SNS_CLK_SOURCE) */
2506:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2507:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Stop clocks, set dividers, and start clock to align clock phase */
2508:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsSetModClkClockDivider((uint32)CapSense_dsRam.modCsdClk);
 548              		.loc 1 2508 0
 549 0016 1C4B     		ldr	r3, .L33+12
 550 0018 987F     		ldrb	r0, [r3, #30]
 551 001a FFF7FEFF 		bl	CapSense_SsSetModClkClockDivider
 552              	.LVL45:
2509:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2510:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
2511:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Stop sense clock clock   */
2512:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
 553              		.loc 1 2512 0
 554 001e 1B4B     		ldr	r3, .L33+16
 555 0020 1B4A     		ldr	r2, .L33+20
 556 0022 1A60     		str	r2, [r3]
 557              	.L28:
2513:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                          ((uint32)CapSense_SnsClk__DIV_ID <<
2514:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                          CapSense_SNSCLK_CMD_DIV_SHIFT)|
2515:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                          ((uint32)CapSense_SNSCLK_CMD_DISABLE_MASK));
2516:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2517:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Check whether previous sense clock start command has finished. */
2518:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             while(0u != (CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) & CapSense_SNSCLK_CMD_ENABLE_MASK))
 558              		.loc 1 2518 0
 559 0024 1A68     		ldr	r2, [r3]
 560 0026 002A     		cmp	r2, #0
 561 0028 FCDB     		blt	.L28
2519:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
2520:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Wait until previous sense clock start command has finished. */
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 56


2521:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
2522:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2523:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Start sense clock aligned to previously started modulator clock. */
2524:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
 562              		.loc 1 2524 0
 563 002a 1A4A     		ldr	r2, .L33+24
 564 002c 174B     		ldr	r3, .L33+16
 565              	.LBE37:
 566              	.LBE36:
 567              	.LBB39:
 568              	.LBB40:
2525:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                          (uint32)(((uint32)CapSense_SnsClk__DIV_ID << CapSense_SNSCLK_CMD_DIV_SHIFT
2526:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                           ((uint32)CapSense_ModClk__PA_DIV_ID << CapSense_SNSCLK_CMD_PA_DIV_SHIFT) 
2527:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                           CapSense_SNSCLK_CMD_ENABLE_MASK));
2528:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
2529:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Clear bit to disable SnsClk clock. */
2530:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
2531:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                          CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) &
2532:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                          (uint32)(~(uint32)CapSense_SnsClk__ENABLE_MASK));
2533:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2534:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Set bit to enable SnsClk clock. */
2535:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
2536:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                          CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) |
2537:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         CapSense_SnsClk__ENABLE_MASK);
2538:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) */
2539:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2540:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_CLK_SOURCE_DIRECT == CapSense_CSD_SNS_CLK_SOURCE)
2541:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Scan one cycle to reset the flip-flop for Direct clock mode */
2542:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CyIntDisable(CapSense_ISR_NUMBER);
2543:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_COUNTER_PTR, CapSense_ONE_CYCLE);
2544:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2545:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             watchdogCounter = CapSense_ONE_CLOCK_WATCHDOG_CYCLES_NUM;
2546:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             while((0u != (CY_GET_REG32(CapSense_COUNTER_PTR) & CapSense_RESOLUTION_16_BITS)) && (0u
2547:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
2548:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 watchdogCounter--;
2549:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
2550:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_INTR_PTR, CapSense_INTR_SET_MASK);
2551:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CyIntClearPending(CapSense_ISR_NUMBER);
2552:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_CLK_SOURCE_DIRECT == CapSense_CSD_SNS_CLK_SOURCE) */
2553:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
2554:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* (CapSense_DISABLE == CapSense_CSDV2) */
2555:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2556:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2557:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
2558:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_SsCSDCmodPrecharge
2559:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
2560:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
2561:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
2562:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function initializes the Cmod charging to Vref.
2563:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
2564:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
2565:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  For Third-generation HW block:
2566:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  The function initializes the Cmod charging to Vref.
2567:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Then it waits the even when Cmod is completely charged
2568:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  to Vref to have stable raw counts. Software Watchdog Counter is implemented to
2569:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  prevent the project hanging.
2570:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 57


2571:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  For Fourth-generation HW block:
2572:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Coarse initialization for CMOD and Cch.
2573:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  The coarse initialization is performed by HSCOMP.
2574:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  The HSCOMP monitors the Cmod voltage via Cmod sense path
2575:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  and charges the Cmod using HCAV switch via CSDBUS-A, AMUXBUS-A
2576:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  and static connection of Cmod to AMUXBUS-A.
2577:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
2578:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
2579:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** CY_INLINE static void CapSense_SsCSDCmodPrecharge(void)
2580:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
2581:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
2582:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 watchdogCounter;
2583:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Fourth-generation HW block section */
2584:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2585:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_CSDCMP_PTR, CapSense_CSD_CSDCMP_INIT);
2586:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_FW_MOD_SEL_PTR,  CapSense_CSD_SW_FW_MOD_SEL_INIT);
2587:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_FW_TANK_SEL_PTR, CapSense_CSD_SW_FW_TANK_SEL_INIT);
2588:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_SHIELD_SEL_PTR,  CapSense_CSD_SW_SHIELD_SEL_INIT);
2589:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
2590:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /*
2591:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****              * Connect CMOD to (sense path) to HSCOMP: HMPM or HMPS or HMPT switches depend on Cmod
2592:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****              * Connect AMUXBUS-B to HSCMP positive input
2593:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****              */
2594:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SW_HS_P_SEL_PTR, CapSense_SW_HS_P_SEL_COARSE);
2595:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2596:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if(0u != CapSense_CSD_SHIELD_TANK_EN)
2597:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Connect CTANK to AMUXBUS-A */
2598:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_HSIOM_PTR, CapSense_CSH_HSIOM_MASK,
2599:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     (uint32)(CapSense_HSIOM_SEL_AMUXA << CapSense_CSH_HSIOM_SHIFT));
2600:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif /* (0u != CapSense_CSD_SHIELD_TANK_EN) */
2601:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
2602:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Connect CMOD to (sense path) to HSCOMP: HMPM or HMPS or HMPT switches depend on Cmod
2603:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SW_HS_P_SEL_PTR, CapSense_SW_HS_P_SEL_COARSE);
2604:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
2605:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2606:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_RES_PTR, CapSense_CSD_SW_RES_INIT);
2607:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2608:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Clear all interrupt pending requests */
2609:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_INTR_PTR, CapSense_INTR_ALL_MASK);
2610:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2611:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_INTR_MASK_PTR, CapSense_CLEAR_MASK);
2612:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2613:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Start SEQUENCER for coarse initialization for Cmod */
2614:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SEQ_START_PTR, CapSense_SEQ_START_SEQ_MODE_MASK |
2615:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                          CapSense_SEQ_START_START_MASK);
2616:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2617:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Init Watchdog Counter to prevent a hang */
2618:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         watchdogCounter = CapSense_CSD_PRECHARGE_WATCHDOG_CYCLES_NUM;
2619:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2620:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Wait for INTR.INIT goes high */
2621:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         while((0u == (CY_GET_REG32(CapSense_INTR_PTR) & CapSense_INTR_INIT_MASK)) && (0u != watchdo
2622:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
2623:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             watchdogCounter--;
2624:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
2625:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2626:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         if (0u == watchdogCounter)
2627:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 58


2628:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Set sequencer to idle state if coarse initialization fails */
2629:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SEQ_START_PTR, CapSense_SEQ_START_ABORT_MASK);
2630:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
2631:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2632:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
2633:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2634:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 tmpRegValue;
2635:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 newRegValue;
2636:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 watchdogCounter;
2637:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2638:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Save the current IDAC configuration */
2639:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         tmpRegValue = CY_GET_REG32(CapSense_IDAC_PTR);
 569              		.loc 1 2639 0
 570 002e 1A4D     		ldr	r5, .L33+28
 571              	.LBE40:
 572              	.LBE39:
 573              	.LBB42:
 574              	.LBB38:
2524:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                          (uint32)(((uint32)CapSense_SnsClk__DIV_ID << CapSense_SNSCLK_CMD_DIV_SHIFT
 575              		.loc 1 2524 0
 576 0030 1A60     		str	r2, [r3]
 577              	.LBE38:
 578              	.LBE42:
 579              	.LBB43:
 580              	.LBB41:
2640:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2641:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Wait until Cmod discharges below Vref */
2642:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CyDelayCycles(CapSense_CMOD_DISCHARGE_CYCLES);
 581              		.loc 1 2642 0
 582 0032 2720     		movs	r0, #39
2639:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 583              		.loc 1 2639 0
 584 0034 2E68     		ldr	r6, [r5]
 585              	.LVL46:
 586              		.loc 1 2642 0
 587 0036 FFF7FEFF 		bl	CyDelayCycles
 588              	.LVL47:
2643:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2644:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegValue = CapSense_CSD_IDAC_PRECHARGE_CONFIG | (tmpRegValue & ~CapSense_IDAC_MOD_CFG_MA
 589              		.loc 1 2644 0
 590 003a 184B     		ldr	r3, .L33+32
 591 003c 184A     		ldr	r2, .L33+36
 592 003e 3340     		ands	r3, r6
 593 0040 1343     		orrs	r3, r2
 594              	.LVL48:
2645:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2646:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set the IDAC configuration for fast Cmod precharge to Vref */
2647:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_IDAC_PTR, newRegValue);
 595              		.loc 1 2647 0
 596 0042 2B60     		str	r3, [r5]
 597              	.LVL49:
2648:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2649:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)
2650:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_CONFIG_PTR, CY_GET_REG32(CapSense_CONFIG_PTR) & ~CapSense_CONFIG_
2651:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG) */
2652:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2653:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Init Watchdog Counter to prevent a hang */
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 59


2654:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         watchdogCounter = CapSense_CSD_PRECHARGE_WATCHDOG_CYCLES_NUM;
2655:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2656:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Wait until Cmod reaches to Vref */
2657:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         while((0u == (CY_GET_REG32(CapSense_STATUS_PTR) & CapSense_STATUS_SAMPLE)) && (0u != watchd
 598              		.loc 1 2657 0
 599 0044 0821     		movs	r1, #8
2647:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 600              		.loc 1 2647 0
 601 0046 F123     		movs	r3, #241
 602              	.LVL50:
 603              		.loc 1 2657 0
 604 0048 164A     		ldr	r2, .L33+40
 605              	.LVL51:
 606              	.L30:
 607 004a 1068     		ldr	r0, [r2]
 608 004c 0842     		tst	r0, r1
 609 004e 02D1     		bne	.L29
 610 0050 013B     		subs	r3, r3, #1
 611              	.LVL52:
 612 0052 002B     		cmp	r3, #0
 613 0054 F9D1     		bne	.L30
 614              	.LVL53:
 615              	.L29:
2658:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
2659:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             watchdogCounter--;
2660:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
2661:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2662:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)
2663:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_CONFIG_PTR, CY_GET_REG32(CapSense_CONFIG_PTR) | CapSense_CONFIG_P
2664:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG) */
2665:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2666:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Restore the current IDAC configuration */
2667:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_IDAC_PTR, tmpRegValue);
 616              		.loc 1 2667 0
 617 0056 2E60     		str	r6, [r5]
 618              	.LVL54:
2668:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2669:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Enable the sense modulator output */
2670:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECHARGE_CONFIG_CSD_
 619              		.loc 1 2670 0
 620 0058 2268     		ldr	r2, [r4]
 621 005a 134B     		ldr	r3, .L33+44
2671:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2672:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CyIntEnable(CapSense_ISR_NUMBER);
 622              		.loc 1 2672 0
 623 005c 1120     		movs	r0, #17
2670:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 624              		.loc 1 2670 0
 625 005e 1343     		orrs	r3, r2
 626 0060 3B60     		str	r3, [r7]
 627              		.loc 1 2672 0
 628 0062 FFF7FEFF 		bl	CyIntEnable
 629              	.LVL55:
 630              	.LBE41:
 631              	.LBE43:
1381:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_CSD_SNS_CLK_SOURCE != CapSense_CLK_SOURCE_DIRECT) */
 632              		.loc 1 1381 0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 60


 633 0066 6F20     		movs	r0, #111
 634 0068 FFF7FEFF 		bl	CyDelayCycles
 635              	.LVL56:
 636              	.LBB44:
 637              	.LBB45:
2673:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2674:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2675:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
2676:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2677:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2678:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
2679:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_SsCSDTriggerScan
2680:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
2681:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
2682:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
2683:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function triggers the scanning.
2684:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
2685:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
2686:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  For Third-generation HW block:
2687:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Writes resolution to start the scanning.
2688:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
2689:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  For Fourth-generation HW block:
2690:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Trigger the fine initialization (scan some dummy cycles) and start sampling.
2691:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Fine initialization for CMOD and Start scan.
2692:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  For the fine initialization and sampling, Cmod is static connected to AMUXBUS-A
2693:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  and in every conversion (one cycle of SnsClk), the sensor capacitance is charged
2694:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  from Cmod and discharged to ground using the switches in GPIO cell.
2695:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  The CSDCOMP monitors voltage on Cmod using the sense path and charges Cmod back
2696:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  to Vref using IDACs by connecting IDAC to CSDBUS-A and then the AMUXBUS-A.
2697:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
2698:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
2699:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** CY_INLINE static void CapSense_SsCSDTriggerScan(void)
2700:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
2701:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
2702:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2703:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Fourth-generation HW block section */
2704:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2705:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 watchdogCounter;
2706:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2707:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Clear previous interrupts */
2708:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_INTR_PTR, CapSense_INTR_ALL_MASK);
2709:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2710:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Clear pending interrupts  */
2711:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CyIntClearPending(CapSense_ISR_NUMBER);
2712:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2713:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Enable CSD interrupt */
2714:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CyIntEnable(CapSense_ISR_NUMBER);
2715:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2716:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2717:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_HS_P_SEL_PTR, CapSense_CSD_SW_HS_P_SEL_SCAN);
2718:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2719:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set scanning configuration for switches */
2720:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_FW_MOD_SEL_PTR, CapSense_CSD_SW_FW_MOD_SEL_SCAN);
2721:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_FW_TANK_SEL_PTR,CapSense_CSD_SW_FW_TANK_SEL_SCAN);
2722:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2723:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_SHIELD_SEL_PTR,  CapSense_CSD_SW_SHIELD_SEL_SCAN);
2724:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 61


2725:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && (CapSense_ENABLE == CapSense_CSD_SHIELD_
2726:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Connect CTANK to AMUXBUS-B */
2727:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_SsCSDEnableShieldTank();
2728:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && (CapSense_ENABLE == CapSense_CSD_
2729:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2730:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_RES_PTR, CapSense_CSD_SW_RES_SCAN);
2731:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_CSDCMP_PTR, CapSense_CSD_CSDCMP_SCAN);
2732:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2733:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_DISABLE == CapSense_CSD_SHIELD_EN)
2734:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Disable HSCOMP during the sampling phase when shield is disabled */
2735:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_HSCMP_PTR, 0u);
2736:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
2737:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_HSCMP_PTR, CapSense_HSCMP_SCAN_MASK);
2738:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_DISABLE == CapSense_CSD_SHIELD_EN) */
2739:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2740:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_CLK_SOURCE_DIRECT != CapSense_CSD_SNS_CLK_SOURCE)
2741:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Force the LFSR to it's initial state (all ones) */
2742:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SENSE_PERIOD_PTR, CY_GET_REG32(CapSense_SENSE_PERIOD_PTR) |
2743:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                            CapSense_SENSE_PERIOD_LFSR_CLEAR_MASK);
2744:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_CLK_SOURCE_DIRECT != CapSense_CSD_SNS_CLK_SOURCE) */
2745:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2746:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Enable SAMPLE interrupt */
2747:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_INTR_MASK_PTR, CapSense_INTR_MASK_SAMPLE_MASK);
2748:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2749:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Init Watchdog Counter to prevent a hang */
2750:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         watchdogCounter = CapSense_CSD_PRECHARGE_WATCHDOG_CYCLES_NUM;
2751:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2752:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Wait for IDLE state of the HW sequencer */
2753:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         while((0u != (CapSense_STAT_SEQ_REG & CapSense_STAT_SEQ_SEQ_STATE_MASK)) && (0u != watchdog
2754:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
2755:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             watchdogCounter--;
2756:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
2757:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2758:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Start SEQUENCER for fine initialization scan for Cmod and then for normal scan */
2759:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SEQ_START_PTR, CapSense_SEQ_START_AZ0_SKIP_MASK |
2760:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                      CapSense_SEQ_START_AZ1_SKIP_MASK |
2761:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                      CapSense_SEQ_START_START_MASK);
2762:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2763:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
2764:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2765:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Third-generation HW block section */
2766:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2767:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set resolution to Counter register to start scanning */
2768:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_COUNTER_PTR, CapSense_counterResolution);
 638              		.loc 1 2768 0
 639 006c 6268     		ldr	r2, [r4, #4]
 640 006e 0F4B     		ldr	r3, .L33+48
 641              	.LBE45:
 642              	.LBE44:
1387:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 643              		.loc 1 1387 0
 644 0070 0198     		ldr	r0, [sp, #4]
 645              	.LBB47:
 646              	.LBB46:
 647              		.loc 1 2768 0
 648 0072 1A60     		str	r2, [r3]
 649              	.LBE46:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 62


 650              	.LBE47:
1387:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 651              		.loc 1 1387 0
 652 0074 FFF7FEFF 		bl	CyExitCriticalSection
 653              	.LVL57:
1389:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 654              		.loc 1 1389 0
 655              		@ sp needed
 656 0078 F7BD     		pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 657              	.L34:
 658 007a C046     		.align	2
 659              	.L33:
 660 007c 04002840 		.word	1076363268
 661 0080 00000000 		.word	.LANCHOR0
 662 0084 2028E881 		.word	-2115491808
 663 0088 00000000 		.word	CapSense_dsRam
 664 008c 00000140 		.word	1073807360
 665 0090 41000040 		.word	1073741889
 666 0094 41FF0080 		.word	-2147418303
 667 0098 08002840 		.word	1076363272
 668 009c 00E8FFBF 		.word	-1073747968
 669 00a0 F0060040 		.word	1073743600
 670 00a4 10002840 		.word	1076363280
 671 00a8 2038E881 		.word	-2115487712
 672 00ac 0C002840 		.word	1076363276
 673              		.cfi_endproc
 674              	.LFE14:
 675              		.size	CapSense_SsCSDStartSample, .-CapSense_SsCSDStartSample
 676              		.section	.text.CapSense_CSDScanExt,"ax",%progbits
 677              		.align	1
 678              		.global	CapSense_CSDScanExt
 679              		.code	16
 680              		.thumb_func
 681              		.type	CapSense_CSDScanExt, %function
 682              	CapSense_CSDScanExt:
 683              	.LFB15:
1441:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if ((CapSense_DISABLE == CapSense_CSD_COMMON_SNS_CLK_EN) && \
 684              		.loc 1 1441 0
 685              		.cfi_startproc
 686              		@ args = 0, pretend = 0, frame = 0
 687              		@ frame_needed = 0, uses_anonymous_args = 0
 688 0000 10B5     		push	{r4, lr}
 689              		.cfi_def_cfa_offset 8
 690              		.cfi_offset 4, -8
 691              		.cfi_offset 14, -4
1452:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 692              		.loc 1 1452 0
 693 0002 044A     		ldr	r2, .L36
 694 0004 0449     		ldr	r1, .L36+4
 695 0006 D368     		ldr	r3, [r2, #12]
1468:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 696              		.loc 1 1468 0
 697              		@ sp needed
1452:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 698              		.loc 1 1452 0
 699 0008 0B43     		orrs	r3, r1
 700 000a D360     		str	r3, [r2, #12]
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 63


1467:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
 701              		.loc 1 1467 0
 702 000c FFF7FEFF 		bl	CapSense_SsCSDStartSample
 703              	.LVL58:
1468:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 704              		.loc 1 1468 0
 705 0010 10BD     		pop	{r4, pc}
 706              	.L37:
 707 0012 C046     		.align	2
 708              	.L36:
 709 0014 00000000 		.word	CapSense_dsRam
 710 0018 80000100 		.word	65664
 711              		.cfi_endproc
 712              	.LFE15:
 713              		.size	CapSense_CSDScanExt, .-CapSense_CSDScanExt
 714              		.section	.text.CapSense_CSDConnectSns,"ax",%progbits
 715              		.align	1
 716              		.global	CapSense_CSDConnectSns
 717              		.code	16
 718              		.thumb_func
 719              		.type	CapSense_CSDConnectSns, %function
 720              	CapSense_CSDConnectSns:
 721              	.LFB19:
1734:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 newRegisterValue;
 722              		.loc 1 1734 0
 723              		.cfi_startproc
 724              		@ args = 0, pretend = 0, frame = 0
 725              		@ frame_needed = 0, uses_anonymous_args = 0
 726              	.LVL59:
 727 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 728              		.cfi_def_cfa_offset 24
 729              		.cfi_offset 3, -24
 730              		.cfi_offset 4, -20
 731              		.cfi_offset 5, -16
 732              		.cfi_offset 6, -12
 733              		.cfi_offset 7, -8
 734              		.cfi_offset 14, -4
1734:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 newRegisterValue;
 735              		.loc 1 1734 0
 736 0002 0400     		movs	r4, r0
1742:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 737              		.loc 1 1742 0
 738 0004 077E     		ldrb	r7, [r0, #24]
1741:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     pinHSIOMShift = (uint32)snsAddrPtr->hsiomShift;
 739              		.loc 1 1741 0
 740 0006 857E     		ldrb	r5, [r0, #26]
 741              	.LVL60:
1744:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 742              		.loc 1 1744 0
 743 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 744              	.LVL61:
1748:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     newRegisterValue |= (uint32)((uint32)CapSense_HSIOM_SEL_CSD_SENSE << pinHSIOMShift);
 745              		.loc 1 1748 0
 746 000c 0F22     		movs	r2, #15
 747 000e BA40     		lsls	r2, r2, r7
1747:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     newRegisterValue &= ~(CapSense_HSIOM_SEL_MASK << pinHSIOMShift);
 748              		.loc 1 1747 0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 64


 749 0010 2668     		ldr	r6, [r4]
1752:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 750              		.loc 1 1752 0
 751 0012 0721     		movs	r1, #7
1747:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     newRegisterValue &= ~(CapSense_HSIOM_SEL_MASK << pinHSIOMShift);
 752              		.loc 1 1747 0
 753 0014 3368     		ldr	r3, [r6]
 754              	.LVL62:
1752:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 755              		.loc 1 1752 0
 756 0016 A940     		lsls	r1, r1, r5
1748:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     newRegisterValue |= (uint32)((uint32)CapSense_HSIOM_SEL_CSD_SENSE << pinHSIOMShift);
 757              		.loc 1 1748 0
 758 0018 9343     		bics	r3, r2
 759              	.LVL63:
 760 001a 1A00     		movs	r2, r3
 761              	.LVL64:
1749:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 762              		.loc 1 1749 0
 763 001c 0423     		movs	r3, #4
 764 001e BB40     		lsls	r3, r3, r7
1752:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 765              		.loc 1 1752 0
 766 0020 6468     		ldr	r4, [r4, #4]
 767              	.LVL65:
1749:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 768              		.loc 1 1749 0
 769 0022 1343     		orrs	r3, r2
 770              	.LVL66:
1752:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 771              		.loc 1 1752 0
 772 0024 2268     		ldr	r2, [r4]
1758:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 773              		.loc 1 1758 0
 774              		@ sp needed
1752:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 775              		.loc 1 1752 0
 776 0026 8A43     		bics	r2, r1
 777 0028 2260     		str	r2, [r4]
1755:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 778              		.loc 1 1755 0
 779 002a 3360     		str	r3, [r6]
1757:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
 780              		.loc 1 1757 0
 781 002c FFF7FEFF 		bl	CyExitCriticalSection
 782              	.LVL67:
 783              	.LVL68:
 784              	.LVL69:
1758:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 785              		.loc 1 1758 0
 786 0030 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 787              		.cfi_endproc
 788              	.LFE19:
 789              		.size	CapSense_CSDConnectSns, .-CapSense_CSDConnectSns
 790              		.section	.text.CapSense_CSDScan,"ax",%progbits
 791              		.align	1
 792              		.global	CapSense_CSDScan
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 65


 793              		.code	16
 794              		.thumb_func
 795              		.type	CapSense_CSDScan, %function
 796              	CapSense_CSDScan:
 797              	.LFB16:
1508:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
 798              		.loc 1 1508 0
 799              		.cfi_startproc
 800              		@ args = 0, pretend = 0, frame = 8
 801              		@ frame_needed = 0, uses_anonymous_args = 0
1509:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                     CapSense_dsFlash.wdgtArray[CapSense_widgetIndex
 802              		.loc 1 1509 0
 803 0000 1C23     		movs	r3, #28
1508:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
 804              		.loc 1 1508 0
 805 0002 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 806              		.cfi_def_cfa_offset 32
 807              		.cfi_offset 0, -32
 808              		.cfi_offset 1, -28
 809              		.cfi_offset 2, -24
 810              		.cfi_offset 4, -20
 811              		.cfi_offset 5, -16
 812              		.cfi_offset 6, -12
 813              		.cfi_offset 7, -8
 814              		.cfi_offset 14, -4
1513:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
 815              		.loc 1 1513 0
 816 0004 1A4C     		ldr	r4, .L41
1510:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 817              		.loc 1 1510 0
 818 0006 1B4D     		ldr	r5, .L41+4
1513:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
 819              		.loc 1 1513 0
 820 0008 2600     		movs	r6, r4
1510:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 821              		.loc 1 1510 0
 822 000a 2A78     		ldrb	r2, [r5]
1513:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
 823              		.loc 1 1513 0
 824 000c 8E36     		adds	r6, r6, #142
1509:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                     CapSense_dsFlash.wdgtArray[CapSense_widgetIndex
 825              		.loc 1 1509 0
 826 000e 5343     		muls	r3, r2
 827 0010 194A     		ldr	r2, .L41+8
1513:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
 828              		.loc 1 1513 0
 829 0012 8F34     		adds	r4, r4, #143
1509:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                     CapSense_dsFlash.wdgtArray[CapSense_widgetIndex
 830              		.loc 1 1509 0
 831 0014 D318     		adds	r3, r2, r3
 832 0016 5B68     		ldr	r3, [r3, #4]
 833 0018 0193     		str	r3, [sp, #4]
 834              	.LVL70:
1513:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
 835              		.loc 1 1513 0
 836 001a 3078     		ldrb	r0, [r6]
 837 001c 2378     		ldrb	r3, [r4]
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 66


 838              	.LVL71:
 839 001e 8342     		cmp	r3, r0
 840 0020 03D0     		beq	.L40
1515:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_dsRam.scanCurrentISC = CapSense_dsRam.scanCsdISC;
 841              		.loc 1 1515 0
 842 0022 FFF7FEFF 		bl	CapSense_SsSetAllIOsState
 843              	.LVL72:
1516:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
 844              		.loc 1 1516 0
 845 0026 3378     		ldrb	r3, [r6]
 846 0028 2370     		strb	r3, [r4]
 847              	.L40:
1523:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 848              		.loc 1 1523 0
 849 002a 0023     		movs	r3, #0
1527:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                               + CapSense_sensorIndex;
 850              		.loc 1 1527 0
 851 002c 1C24     		movs	r4, #28
1523:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 852              		.loc 1 1523 0
 853 002e 134E     		ldr	r6, .L41+12
1527:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                               + CapSense_sensorIndex;
 854              		.loc 1 1527 0
 855 0030 114F     		ldr	r7, .L41+8
1523:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 856              		.loc 1 1523 0
 857 0032 3370     		strb	r3, [r6]
1526:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                               CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2
 858              		.loc 1 1526 0
 859 0034 2A78     		ldrb	r2, [r5]
1528:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 860              		.loc 1 1528 0
 861 0036 3178     		ldrb	r1, [r6]
1527:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                               + CapSense_sensorIndex;
 862              		.loc 1 1527 0
 863 0038 6243     		muls	r2, r4
1526:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                               CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2
 864              		.loc 1 1526 0
 865 003a 0A33     		adds	r3, r3, #10
 866 003c 4B43     		muls	r3, r1
1527:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                               + CapSense_sensorIndex;
 867              		.loc 1 1527 0
 868 003e BA18     		adds	r2, r7, r2
1526:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                               CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2
 869              		.loc 1 1526 0
 870 0040 9268     		ldr	r2, [r2, #8]
1536:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 871              		.loc 1 1536 0
 872 0042 0198     		ldr	r0, [sp, #4]
1526:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                               CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2
 873              		.loc 1 1526 0
 874 0044 D318     		adds	r3, r2, r3
 875 0046 0E4A     		ldr	r2, .L41+16
1568:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 876              		.loc 1 1568 0
 877              		@ sp needed
1526:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                               CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 67


 878              		.loc 1 1526 0
 879 0048 1360     		str	r3, [r2]
1536:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 880              		.loc 1 1536 0
 881 004a FFF7FEFF 		bl	CapSense_SsCSDSetUpIdacs
 882              	.LVL73:
1555:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                         CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2SnsFla
 883              		.loc 1 1555 0
 884 004e 2B78     		ldrb	r3, [r5]
1557:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 885              		.loc 1 1557 0
 886 0050 3078     		ldrb	r0, [r6]
1556:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                         + CapSense_sensorIndex;
 887              		.loc 1 1556 0
 888 0052 6343     		muls	r3, r4
1557:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 889              		.loc 1 1557 0
 890 0054 4443     		muls	r4, r0
 891 0056 D859     		ldr	r0, [r3, r7]
1555:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                         CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2SnsFla
 892              		.loc 1 1555 0
 893 0058 0A4B     		ldr	r3, .L41+20
1557:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 894              		.loc 1 1557 0
 895 005a 0019     		adds	r0, r0, r4
1555:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                         CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2SnsFla
 896              		.loc 1 1555 0
 897 005c 1860     		str	r0, [r3]
1560:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 898              		.loc 1 1560 0
 899 005e FFF7FEFF 		bl	CapSense_CSDConnectSns
 900              	.LVL74:
1563:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)  */
 901              		.loc 1 1563 0
 902 0062 0948     		ldr	r0, .L41+24
 903 0064 FFF7FEFF 		bl	CapSense_ISR_StartEx
 904              	.LVL75:
1567:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
 905              		.loc 1 1567 0
 906 0068 FFF7FEFF 		bl	CapSense_CSDScanExt
 907              	.LVL76:
1568:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 908              		.loc 1 1568 0
 909 006c F7BD     		pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 910              	.L42:
 911 006e C046     		.align	2
 912              	.L41:
 913 0070 00000000 		.word	CapSense_dsRam
 914 0074 00000000 		.word	CapSense_widgetIndex
 915 0078 00000000 		.word	CapSense_dsFlash
 916 007c 00000000 		.word	CapSense_sensorIndex
 917 0080 00000000 		.word	CapSense_curRamSnsPtr
 918 0084 00000000 		.word	CapSense_curSnsIOPtr
 919 0088 00000000 		.word	CapSense_CSDPostMultiScan
 920              		.cfi_endproc
 921              	.LFE16:
 922              		.size	CapSense_CSDScan, .-CapSense_CSDScan
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 68


 923              		.section	.text.CapSense_SsCSDConnectSensorExt,"ax",%progbits
 924              		.align	1
 925              		.global	CapSense_SsCSDConnectSensorExt
 926              		.code	16
 927              		.thumb_func
 928              		.type	CapSense_SsCSDConnectSensorExt, %function
 929              	CapSense_SsCSDConnectSensorExt:
 930              	.LFB17:
1591:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
 931              		.loc 1 1591 0
 932              		.cfi_startproc
 933              		@ args = 0, pretend = 0, frame = 0
 934              		@ frame_needed = 0, uses_anonymous_args = 0
 935              	.LVL77:
1598:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                       + sensorId;
 936              		.loc 1 1598 0
 937 0000 1C23     		movs	r3, #28
 938 0002 0200     		movs	r2, r0
 939 0004 5A43     		muls	r2, r3
1599:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 940              		.loc 1 1599 0
 941 0006 4B43     		muls	r3, r1
 942 0008 0449     		ldr	r1, .L44
 943              	.LVL78:
1591:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
 944              		.loc 1 1591 0
 945 000a 10B5     		push	{r4, lr}
 946              		.cfi_def_cfa_offset 8
 947              		.cfi_offset 4, -8
 948              		.cfi_offset 14, -4
1599:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 949              		.loc 1 1599 0
 950 000c 5058     		ldr	r0, [r2, r1]
 951              	.LVL79:
1635:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 952              		.loc 1 1635 0
 953              		@ sp needed
1599:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 954              		.loc 1 1599 0
 955 000e C018     		adds	r0, r0, r3
1597:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                       CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsF
 956              		.loc 1 1597 0
 957 0010 034B     		ldr	r3, .L44+4
 958 0012 1860     		str	r0, [r3]
1633:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
 959              		.loc 1 1633 0
 960 0014 FFF7FEFF 		bl	CapSense_CSDConnectSns
 961              	.LVL80:
1635:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 962              		.loc 1 1635 0
 963 0018 10BD     		pop	{r4, pc}
 964              	.L45:
 965 001a C046     		.align	2
 966              	.L44:
 967 001c 00000000 		.word	CapSense_dsFlash
 968 0020 00000000 		.word	CapSense_curSnsIOPtr
 969              		.cfi_endproc
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 69


 970              	.LFE17:
 971              		.size	CapSense_SsCSDConnectSensorExt, .-CapSense_SsCSDConnectSensorExt
 972              		.section	.text.CapSense_CSDDisconnectSns,"ax",%progbits
 973              		.align	1
 974              		.global	CapSense_CSDDisconnectSns
 975              		.code	16
 976              		.thumb_func
 977              		.type	CapSense_CSDDisconnectSns, %function
 978              	CapSense_CSDDisconnectSns:
 979              	.LFB20:
1786:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint8  interruptState;
 980              		.loc 1 1786 0
 981              		.cfi_startproc
 982              		@ args = 0, pretend = 0, frame = 8
 983              		@ frame_needed = 0, uses_anonymous_args = 0
 984              	.LVL81:
 985 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 986              		.cfi_def_cfa_offset 32
 987              		.cfi_offset 0, -32
 988              		.cfi_offset 1, -28
 989              		.cfi_offset 2, -24
 990              		.cfi_offset 4, -20
 991              		.cfi_offset 5, -16
 992              		.cfi_offset 6, -12
 993              		.cfi_offset 7, -8
 994              		.cfi_offset 14, -4
1799:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 995              		.loc 1 1799 0
 996 0002 0727     		movs	r7, #7
1786:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint8  interruptState;
 997              		.loc 1 1786 0
 998 0004 0400     		movs	r4, r0
1794:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 999              		.loc 1 1794 0
 1000 0006 857E     		ldrb	r5, [r0, #26]
1793:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     pinModeShift = (uint32)snsAddrPtr->shift;
 1001              		.loc 1 1793 0
 1002 0008 067E     		ldrb	r6, [r0, #24]
 1003              	.LVL82:
1799:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1004              		.loc 1 1799 0
 1005 000a AF40     		lsls	r7, r7, r5
1796:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1006              		.loc 1 1796 0
 1007 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1008              	.LVL83:
1798:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     newPcRegValue &= ~(CapSense_GPIO_PC_MASK << pinModeShift);
 1009              		.loc 1 1798 0
 1010 0010 6268     		ldr	r2, [r4, #4]
1796:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1011              		.loc 1 1796 0
 1012 0012 0190     		str	r0, [sp, #4]
 1013              	.LVL84:
1798:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     newPcRegValue &= ~(CapSense_GPIO_PC_MASK << pinModeShift);
 1014              		.loc 1 1798 0
 1015 0014 1368     		ldr	r3, [r2]
 1016              	.LVL85:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 70


1799:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1017              		.loc 1 1799 0
 1018 0016 BB43     		bics	r3, r7
 1019              	.LVL86:
1801:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     newHsiomRegValue &= ~(CapSense_HSIOM_SEL_MASK << pinHSIOMShift);
 1020              		.loc 1 1801 0
 1021 0018 2768     		ldr	r7, [r4]
1799:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1022              		.loc 1 1799 0
 1023 001a 1900     		movs	r1, r3
 1024              	.LVL87:
1801:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     newHsiomRegValue &= ~(CapSense_HSIOM_SEL_MASK << pinHSIOMShift);
 1025              		.loc 1 1801 0
 1026 001c 3B68     		ldr	r3, [r7]
 1027 001e 9C46     		mov	ip, r3
 1028              	.LVL88:
1802:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CY_SET_REG32(snsAddrPtr->hsiomPtr, newHsiomRegValue);
 1029              		.loc 1 1802 0
 1030 0020 0F23     		movs	r3, #15
 1031              	.LVL89:
 1032 0022 6046     		mov	r0, ip
 1033 0024 B340     		lsls	r3, r3, r6
 1034 0026 9843     		bics	r0, r3
1803:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1035              		.loc 1 1803 0
 1036 0028 3860     		str	r0, [r7]
1802:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CY_SET_REG32(snsAddrPtr->hsiomPtr, newHsiomRegValue);
 1037              		.loc 1 1802 0
 1038 002a 0300     		movs	r3, r0
 1039              	.LVL90:
1805:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
 1040              		.loc 1 1805 0
 1041 002c 0F48     		ldr	r0, .L49
 1042              	.LVL91:
 1043 002e 8446     		mov	ip, r0
 1044 0030 8F20     		movs	r0, #143
 1045 0032 8444     		add	ip, ip, r0
 1046 0034 6046     		mov	r0, ip
 1047 0036 0078     		ldrb	r0, [r0]
 1048 0038 0028     		cmp	r0, #0
 1049 003a 04D1     		bne	.L47
1807:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(snsAddrPtr->pcPtr, newPcRegValue);
 1050              		.loc 1 1807 0
 1051 003c 0623     		movs	r3, #6
 1052              	.LVL92:
 1053 003e AB40     		lsls	r3, r3, r5
 1054 0040 0B43     		orrs	r3, r1
 1055              	.LVL93:
1808:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
 1056              		.loc 1 1808 0
 1057 0042 1360     		str	r3, [r2]
 1058              	.LVL94:
 1059 0044 06E0     		b	.L48
 1060              	.LVL95:
 1061              	.L47:
1813:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 1062              		.loc 1 1813 0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 71


 1063 0046 0228     		cmp	r0, #2
 1064 0048 04D1     		bne	.L48
1816:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(snsAddrPtr->pcPtr, newPcRegValue);
 1065              		.loc 1 1816 0
 1066 004a 0525     		movs	r5, #5
 1067              	.LVL96:
 1068 004c B540     		lsls	r5, r5, r6
 1069 004e 2B43     		orrs	r3, r5
 1070              	.LVL97:
1817:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(snsAddrPtr->hsiomPtr, newHsiomRegValue);
 1071              		.loc 1 1817 0
 1072 0050 1160     		str	r1, [r2]
1818:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
 1073              		.loc 1 1818 0
 1074 0052 3B60     		str	r3, [r7]
 1075              	.LVL98:
 1076              	.L48:
1822:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1077              		.loc 1 1822 0
 1078 0054 0122     		movs	r2, #1
 1079 0056 A168     		ldr	r1, [r4, #8]
 1080 0058 647E     		ldrb	r4, [r4, #25]
 1081              	.LVL99:
 1082 005a 0B68     		ldr	r3, [r1]
 1083 005c A240     		lsls	r2, r2, r4
 1084 005e 9343     		bics	r3, r2
 1085 0060 0B60     		str	r3, [r1]
1824:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
 1086              		.loc 1 1824 0
 1087 0062 0198     		ldr	r0, [sp, #4]
 1088 0064 FFF7FEFF 		bl	CyExitCriticalSection
 1089              	.LVL100:
1825:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1090              		.loc 1 1825 0
 1091              		@ sp needed
 1092              	.LVL101:
 1093 0068 F7BD     		pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 1094              	.L50:
 1095 006a C046     		.align	2
 1096              	.L49:
 1097 006c 00000000 		.word	CapSense_dsRam
 1098              		.cfi_endproc
 1099              	.LFE20:
 1100              		.size	CapSense_CSDDisconnectSns, .-CapSense_CSDDisconnectSns
 1101              		.section	.text.CapSense_SsCSDElectrodeCheck,"ax",%progbits
 1102              		.align	1
 1103              		.global	CapSense_SsCSDElectrodeCheck
 1104              		.code	16
 1105              		.thumb_func
 1106              		.type	CapSense_SsCSDElectrodeCheck, %function
 1107              	CapSense_SsCSDElectrodeCheck:
 1108              	.LFB8:
 738:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
 1109              		.loc 1 738 0
 1110              		.cfi_startproc
 1111              		@ args = 0, pretend = 0, frame = 0
 1112              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 72


 1113 0000 10B5     		push	{r4, lr}
 1114              		.cfi_def_cfa_offset 8
 1115              		.cfi_offset 4, -8
 1116              		.cfi_offset 14, -4
 743:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
 1117              		.loc 1 743 0
 1118 0002 054C     		ldr	r4, .L53
 1119 0004 2378     		ldrb	r3, [r4]
 1120 0006 012B     		cmp	r3, #1
 1121 0008 05D1     		bne	.L51
 1122              	.LBB50:
 1123              	.LBB51:
 771:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)  */
 1124              		.loc 1 771 0
 1125 000a 044B     		ldr	r3, .L53+4
 1126 000c 1868     		ldr	r0, [r3]
 1127 000e FFF7FEFF 		bl	CapSense_CSDDisconnectSns
 1128              	.LVL102:
 774:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
 1129              		.loc 1 774 0
 1130 0012 0023     		movs	r3, #0
 1131 0014 2370     		strb	r3, [r4]
 1132              	.L51:
 1133              	.LBE51:
 1134              	.LBE50:
 776:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1135              		.loc 1 776 0
 1136              		@ sp needed
 1137 0016 10BD     		pop	{r4, pc}
 1138              	.L54:
 1139              		.align	2
 1140              	.L53:
 1141 0018 00000000 		.word	.LANCHOR1
 1142 001c 00000000 		.word	CapSense_curSnsIOPtr
 1143              		.cfi_endproc
 1144              	.LFE8:
 1145              		.size	CapSense_SsCSDElectrodeCheck, .-CapSense_SsCSDElectrodeCheck
 1146              		.section	.text.CapSense_CSDSetupWidget,"ax",%progbits
 1147              		.align	1
 1148              		.global	CapSense_CSDSetupWidget
 1149              		.code	16
 1150              		.thumb_func
 1151              		.type	CapSense_CSDSetupWidget, %function
 1152              	CapSense_CSDSetupWidget:
 1153              	.LFB12:
1180:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
 1154              		.loc 1 1180 0
 1155              		.cfi_startproc
 1156              		@ args = 0, pretend = 0, frame = 0
 1157              		@ frame_needed = 0, uses_anonymous_args = 0
 1158              	.LVL103:
 1159 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1160              		.cfi_def_cfa_offset 24
 1161              		.cfi_offset 3, -24
 1162              		.cfi_offset 4, -20
 1163              		.cfi_offset 5, -16
 1164              		.cfi_offset 6, -12
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 73


 1165              		.cfi_offset 7, -8
 1166              		.cfi_offset 14, -4
1181:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                 CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
 1167              		.loc 1 1181 0
 1168 0002 1C24     		movs	r4, #28
 1169 0004 2300     		movs	r3, r4
 1170 0006 4343     		muls	r3, r0
1185:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1171              		.loc 1 1185 0
 1172 0008 0F4D     		ldr	r5, .L56
1181:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                 CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
 1173              		.loc 1 1181 0
 1174 000a 104F     		ldr	r7, .L56+4
1185:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1175              		.loc 1 1185 0
 1176 000c C0B2     		uxtb	r0, r0
 1177              	.LVL104:
1181:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                 CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
 1178              		.loc 1 1181 0
 1179 000e FB18     		adds	r3, r7, r3
1185:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1180              		.loc 1 1185 0
 1181 0010 2870     		strb	r0, [r5]
1187:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1182              		.loc 1 1187 0
 1183 0012 0120     		movs	r0, #1
1181:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                 CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
 1184              		.loc 1 1181 0
 1185 0014 5E68     		ldr	r6, [r3, #4]
 1186              	.LVL105:
1187:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1187              		.loc 1 1187 0
 1188 0016 FFF7FEFF 		bl	CapSense_SsSwitchSensingMode
 1189              	.LVL106:
1195:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1190              		.loc 1 1195 0
 1191 001a FFF7FEFF 		bl	CapSense_SsCSDElectrodeCheck
 1192              	.LVL107:
1202:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_dsRam.status |= CapSense_widgetIndex;
 1193              		.loc 1 1202 0
 1194 001e 7F21     		movs	r1, #127
1199:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1195              		.loc 1 1199 0
 1196 0020 2B78     		ldrb	r3, [r5]
1205:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (((CapSense_DISABLE == CapSense_CSD_COMMON_SNS_CLK_EN) || \
 1197              		.loc 1 1205 0
 1198 0022 3000     		movs	r0, r6
1199:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1199              		.loc 1 1199 0
 1200 0024 5C43     		muls	r4, r3
1198:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                     CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2SnsFlash;
 1201              		.loc 1 1198 0
 1202 0026 0A4B     		ldr	r3, .L56+8
 1203 0028 E259     		ldr	r2, [r4, r7]
1212:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1204              		.loc 1 1212 0
 1205              		@ sp needed
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 74


1198:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                     CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2SnsFlash;
 1206              		.loc 1 1198 0
 1207 002a 1A60     		str	r2, [r3]
1202:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_dsRam.status |= CapSense_widgetIndex;
 1208              		.loc 1 1202 0
 1209 002c 094B     		ldr	r3, .L56+12
 1210 002e DA68     		ldr	r2, [r3, #12]
 1211 0030 8A43     		bics	r2, r1
 1212 0032 DA60     		str	r2, [r3, #12]
1203:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1213              		.loc 1 1203 0
 1214 0034 2978     		ldrb	r1, [r5]
 1215 0036 DA68     		ldr	r2, [r3, #12]
 1216 0038 0A43     		orrs	r2, r1
 1217 003a DA60     		str	r2, [r3, #12]
1205:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (((CapSense_DISABLE == CapSense_CSD_COMMON_SNS_CLK_EN) || \
 1218              		.loc 1 1205 0
 1219 003c FFF7FEFF 		bl	CapSense_SsCSDCalculateScanDuration
 1220              	.LVL108:
1210:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif
 1221              		.loc 1 1210 0
 1222 0040 FFF7FEFF 		bl	CapSense_SsCSDConfigClock
 1223              	.LVL109:
 1224              	.LVL110:
 1225              	.LVL111:
1212:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1226              		.loc 1 1212 0
 1227 0044 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1228              	.L57:
 1229 0046 C046     		.align	2
 1230              	.L56:
 1231 0048 00000000 		.word	CapSense_widgetIndex
 1232 004c 00000000 		.word	CapSense_dsFlash
 1233 0050 00000000 		.word	CapSense_curSnsIOPtr
 1234 0054 00000000 		.word	CapSense_dsRam
 1235              		.cfi_endproc
 1236              	.LFE12:
 1237              		.size	CapSense_CSDSetupWidget, .-CapSense_CSDSetupWidget
 1238              		.section	.text.CapSense_CSDSetupWidgetExt,"ax",%progbits
 1239              		.align	1
 1240              		.global	CapSense_CSDSetupWidgetExt
 1241              		.code	16
 1242              		.thumb_func
 1243              		.type	CapSense_CSDSetupWidgetExt, %function
 1244              	CapSense_CSDSetupWidgetExt:
 1245              	.LFB13:
1266:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
 1246              		.loc 1 1266 0
 1247              		.cfi_startproc
 1248              		@ args = 0, pretend = 0, frame = 0
 1249              		@ frame_needed = 0, uses_anonymous_args = 0
 1250              	.LVL112:
 1251 0000 70B5     		push	{r4, r5, r6, lr}
 1252              		.cfi_def_cfa_offset 16
 1253              		.cfi_offset 4, -16
 1254              		.cfi_offset 5, -12
 1255              		.cfi_offset 6, -8
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 75


 1256              		.cfi_offset 14, -4
1267:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                     CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRa
 1257              		.loc 1 1267 0
 1258 0002 1C24     		movs	r4, #28
 1259 0004 2300     		movs	r3, r4
 1260 0006 4343     		muls	r3, r0
 1261 0008 104A     		ldr	r2, .L59
1271:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1262              		.loc 1 1271 0
 1263 000a 114D     		ldr	r5, .L59+4
1267:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                     CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRa
 1264              		.loc 1 1267 0
 1265 000c D218     		adds	r2, r2, r3
1274:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                               CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsRam
 1266              		.loc 1 1274 0
 1267 000e 0A23     		movs	r3, #10
1271:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1268              		.loc 1 1271 0
 1269 0010 C9B2     		uxtb	r1, r1
 1270              	.LVL113:
 1271 0012 2970     		strb	r1, [r5]
1276:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1272              		.loc 1 1276 0
 1273 0014 2978     		ldrb	r1, [r5]
1267:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                     CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRa
 1274              		.loc 1 1267 0
 1275 0016 5668     		ldr	r6, [r2, #4]
 1276              	.LVL114:
1274:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                               CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsRam
 1277              		.loc 1 1274 0
 1278 0018 4B43     		muls	r3, r1
 1279 001a 9268     		ldr	r2, [r2, #8]
1307:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1280              		.loc 1 1307 0
 1281              		@ sp needed
1274:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                               CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsRam
 1282              		.loc 1 1274 0
 1283 001c D318     		adds	r3, r2, r3
 1284 001e 0D4A     		ldr	r2, .L59+8
 1285 0020 1360     		str	r3, [r2]
1278:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1286              		.loc 1 1278 0
 1287 0022 FFF7FEFF 		bl	CapSense_CSDSetupWidget
 1288              	.LVL115:
1281:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1289              		.loc 1 1281 0
 1290 0026 3000     		movs	r0, r6
 1291 0028 FFF7FEFF 		bl	CapSense_SsCSDSetUpIdacs
 1292              	.LVL116:
1292:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_CSDConnectSns(CapSense_curSnsIOPtr);
 1293              		.loc 1 1292 0
 1294 002c 2878     		ldrb	r0, [r5]
 1295 002e 0A4B     		ldr	r3, .L59+12
 1296 0030 6043     		muls	r0, r4
 1297 0032 1A68     		ldr	r2, [r3]
 1298 0034 1018     		adds	r0, r2, r0
 1299 0036 1860     		str	r0, [r3]
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 76


1293:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)  */
 1300              		.loc 1 1293 0
 1301 0038 FFF7FEFF 		bl	CapSense_CSDConnectSns
 1302              	.LVL117:
1303:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1303              		.loc 1 1303 0
 1304 003c 0122     		movs	r2, #1
 1305 003e 074B     		ldr	r3, .L59+16
1306:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
 1306              		.loc 1 1306 0
 1307 0040 0748     		ldr	r0, .L59+20
1303:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1308              		.loc 1 1303 0
 1309 0042 1A70     		strb	r2, [r3]
1306:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
 1310              		.loc 1 1306 0
 1311 0044 FFF7FEFF 		bl	CapSense_ISR_StartEx
 1312              	.LVL118:
 1313              	.LVL119:
1307:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1314              		.loc 1 1307 0
 1315 0048 70BD     		pop	{r4, r5, r6, pc}
 1316              	.L60:
 1317 004a C046     		.align	2
 1318              	.L59:
 1319 004c 00000000 		.word	CapSense_dsFlash
 1320 0050 00000000 		.word	CapSense_sensorIndex
 1321 0054 00000000 		.word	CapSense_curRamSnsPtr
 1322 0058 00000000 		.word	CapSense_curSnsIOPtr
 1323 005c 00000000 		.word	.LANCHOR1
 1324 0060 00000000 		.word	CapSense_CSDPostSingleScan
 1325              		.cfi_endproc
 1326              	.LFE13:
 1327              		.size	CapSense_CSDSetupWidgetExt, .-CapSense_CSDSetupWidgetExt
 1328              		.section	.text.CapSense_SsCSDDisconnectSnsExt,"ax",%progbits
 1329              		.align	1
 1330              		.global	CapSense_SsCSDDisconnectSnsExt
 1331              		.code	16
 1332              		.thumb_func
 1333              		.type	CapSense_SsCSDDisconnectSnsExt, %function
 1334              	CapSense_SsCSDDisconnectSnsExt:
 1335              	.LFB18:
1661:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
 1336              		.loc 1 1661 0
 1337              		.cfi_startproc
 1338              		@ args = 0, pretend = 0, frame = 0
 1339              		@ frame_needed = 0, uses_anonymous_args = 0
 1340              	.LVL120:
1668:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                       + sensorId;
 1341              		.loc 1 1668 0
 1342 0000 1C23     		movs	r3, #28
 1343 0002 0200     		movs	r2, r0
 1344 0004 5A43     		muls	r2, r3
1669:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1345              		.loc 1 1669 0
 1346 0006 4B43     		muls	r3, r1
 1347 0008 0449     		ldr	r1, .L62
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 77


 1348              	.LVL121:
1661:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
 1349              		.loc 1 1661 0
 1350 000a 10B5     		push	{r4, lr}
 1351              		.cfi_def_cfa_offset 8
 1352              		.cfi_offset 4, -8
 1353              		.cfi_offset 14, -4
1669:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1354              		.loc 1 1669 0
 1355 000c 5058     		ldr	r0, [r2, r1]
 1356              	.LVL122:
1704:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1357              		.loc 1 1704 0
 1358              		@ sp needed
1669:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1359              		.loc 1 1669 0
 1360 000e C018     		adds	r0, r0, r3
1667:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                       CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsF
 1361              		.loc 1 1667 0
 1362 0010 034B     		ldr	r3, .L62+4
 1363 0012 1860     		str	r0, [r3]
1702:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
 1364              		.loc 1 1702 0
 1365 0014 FFF7FEFF 		bl	CapSense_CSDDisconnectSns
 1366              	.LVL123:
1704:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1367              		.loc 1 1704 0
 1368 0018 10BD     		pop	{r4, pc}
 1369              	.L63:
 1370 001a C046     		.align	2
 1371              	.L62:
 1372 001c 00000000 		.word	CapSense_dsFlash
 1373 0020 00000000 		.word	CapSense_curSnsIOPtr
 1374              		.cfi_endproc
 1375              	.LFE18:
 1376              		.size	CapSense_SsCSDDisconnectSnsExt, .-CapSense_SsCSDDisconnectSnsExt
 1377              		.global	__aeabi_uidiv
 1378              		.section	.text.CapSense_CSDCalibrateWidget,"ax",%progbits
 1379              		.align	1
 1380              		.global	CapSense_CSDCalibrateWidget
 1381              		.code	16
 1382              		.thumb_func
 1383              		.type	CapSense_CSDCalibrateWidget, %function
 1384              	CapSense_CSDCalibrateWidget:
 1385              	.LFB25:
2417:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 1386              		.loc 1 2417 0
 1387              		.cfi_startproc
 1388              		@ args = 0, pretend = 0, frame = 32
 1389              		@ frame_needed = 0, uses_anonymous_args = 0
 1390              	.LVL124:
2427:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 1391              		.loc 1 2427 0
 1392 0000 994B     		ldr	r3, .L124
2417:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 1393              		.loc 1 2417 0
 1394 0002 F0B5     		push	{r4, r5, r6, r7, lr}
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 78


 1395              		.cfi_def_cfa_offset 20
 1396              		.cfi_offset 4, -20
 1397              		.cfi_offset 5, -16
 1398              		.cfi_offset 6, -12
 1399              		.cfi_offset 7, -8
 1400              		.cfi_offset 14, -4
2427:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 1401              		.loc 1 2427 0
 1402 0004 DA68     		ldr	r2, [r3, #12]
 1403 0006 8023     		movs	r3, #128
2417:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 1404              		.loc 1 2417 0
 1405 0008 89B0     		sub	sp, sp, #36
 1406              		.cfi_def_cfa_offset 56
2427:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 1407              		.loc 1 2427 0
 1408 000a 5B02     		lsls	r3, r3, #9
 1409 000c 1340     		ands	r3, r2
2417:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 1410              		.loc 1 2417 0
 1411 000e 0290     		str	r0, [sp, #8]
 1412 0010 0391     		str	r1, [sp, #12]
2430:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
 1413              		.loc 1 2430 0
 1414 0012 1122     		movs	r2, #17
2427:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 1415              		.loc 1 2427 0
 1416 0014 002B     		cmp	r3, #0
 1417 0016 00D0     		beq	.LCB1146
 1418 0018 22E1     		b	.L113	@long jump
 1419              	.LCB1146:
2435:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_CSD_IDAC_GAIN_INDEX_DEFAULT;
 1420              		.loc 1 2435 0
 1421 001a 1C21     		movs	r1, #28
 1422              	.LVL125:
 1423 001c 0200     		movs	r2, r0
 1424 001e 4A43     		muls	r2, r1
 1425 0020 9248     		ldr	r0, .L124+4
 1426              	.LVL126:
 1427              	.LBB60:
 1428              	.LBB61:
2219:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 1429              		.loc 1 2219 0
 1430 0022 0791     		str	r1, [sp, #28]
 1431              	.LBE61:
 1432              	.LBE60:
2435:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_CSD_IDAC_GAIN_INDEX_DEFAULT;
 1433              		.loc 1 2435 0
 1434 0024 8218     		adds	r2, r0, r2
 1435 0026 5768     		ldr	r7, [r2, #4]
 1436 0028 BB72     		strb	r3, [r7, #10]
 1437              	.L81:
 1438              	.LVL127:
 1439              	.LBB65:
 1440              	.LBB62:
2208:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1441              		.loc 1 2208 0 discriminator 1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 79


 1442 002a 0120     		movs	r0, #1
 1443 002c 3B88     		ldrh	r3, [r7]
 1444 002e 6421     		movs	r1, #100
 1445 0030 9840     		lsls	r0, r0, r3
 1446 0032 039B     		ldr	r3, [sp, #12]
 1447 0034 0138     		subs	r0, r0, #1
 1448 0036 5843     		muls	r0, r3
 1449 0038 FFF7FEFF 		bl	__aeabi_uidiv
 1450              	.LVL128:
2201:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
 1451              		.loc 1 2201 0 discriminator 1
 1452 003c 0024     		movs	r4, #0
2219:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 1453              		.loc 1 2219 0 discriminator 1
 1454 003e 029A     		ldr	r2, [sp, #8]
 1455 0040 079B     		ldr	r3, [sp, #28]
2208:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1456              		.loc 1 2208 0 discriminator 1
 1457 0042 0690     		str	r0, [sp, #24]
 1458              	.LVL129:
2219:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 1459              		.loc 1 2219 0 discriminator 1
 1460 0044 5343     		muls	r3, r2
 1461 0046 894A     		ldr	r2, .L124+4
 1462 0048 0194     		str	r4, [sp, #4]
 1463 004a D318     		adds	r3, r2, r3
 1464 004c 0593     		str	r3, [sp, #20]
 1465              	.LVL130:
 1466              	.L66:
2219:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 1467              		.loc 1 2219 0 is_stmt 0
 1468 004e 059B     		ldr	r3, [sp, #20]
 1469 0050 019A     		ldr	r2, [sp, #4]
 1470 0052 198B     		ldrh	r1, [r3, #24]
 1471 0054 0833     		adds	r3, r3, #8
 1472 0056 8A42     		cmp	r2, r1
 1473 0058 33D2     		bcs	.L122
2232:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1474              		.loc 1 2232 0 is_stmt 1
 1475 005a 0A25     		movs	r5, #10
 1476 005c 019B     		ldr	r3, [sp, #4]
2238:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
 1477              		.loc 1 2238 0
 1478 005e 4026     		movs	r6, #64
2232:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1479              		.loc 1 2232 0
 1480 0060 5D43     		muls	r5, r3
 1481 0062 059B     		ldr	r3, [sp, #20]
2238:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
 1482              		.loc 1 2238 0
 1483 0064 7E72     		strb	r6, [r7, #9]
2232:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1484              		.loc 1 2232 0
 1485 0066 9B68     		ldr	r3, [r3, #8]
 1486 0068 5D19     		adds	r5, r3, r5
 1487              	.LVL131:
2240:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #endif
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 80


 1488              		.loc 1 2240 0
 1489 006a 0723     		movs	r3, #7
 1490 006c 6E72     		strb	r6, [r5, #9]
 1491              	.LVL132:
 1492 006e 0493     		str	r3, [sp, #16]
 1493              	.LVL133:
 1494              	.L70:
2248:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1495              		.loc 1 2248 0
 1496 0070 0199     		ldr	r1, [sp, #4]
 1497 0072 0298     		ldr	r0, [sp, #8]
 1498 0074 FFF7FEFF 		bl	CapSense_CSDSetupWidgetExt
 1499              	.LVL134:
2255:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1500              		.loc 1 2255 0
 1501 0078 FFF7FEFF 		bl	CapSense_CSDScanExt
 1502              	.LVL135:
 1503 007c 7C4B     		ldr	r3, .L124+8
2258:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
 1504              		.loc 1 2258 0
 1505 007e 7A4A     		ldr	r2, .L124
 1506              	.LVL136:
 1507              	.L68:
 1508 0080 8020     		movs	r0, #128
 1509 0082 D168     		ldr	r1, [r2, #12]
 1510 0084 0142     		tst	r1, r0
 1511 0086 02D0     		beq	.L67
 1512 0088 013B     		subs	r3, r3, #1
 1513              	.LVL137:
 1514 008a 002B     		cmp	r3, #0
 1515 008c F8D1     		bne	.L68
 1516              	.LVL138:
 1517              	.L67:
2266:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
 1518              		.loc 1 2266 0
 1519 008e 2B88     		ldrh	r3, [r5]
 1520 0090 069A     		ldr	r2, [sp, #24]
 1521 0092 9A42     		cmp	r2, r3
 1522 0094 02D9     		bls	.L69
2268:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
 1523              		.loc 1 2268 0
 1524 0096 7B7A     		ldrb	r3, [r7, #9]
 1525 0098 B343     		bics	r3, r6
 1526 009a 7B72     		strb	r3, [r7, #9]
 1527              	.L69:
 1528              	.LVL139:
2276:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
 1529              		.loc 1 2276 0
 1530 009c 7B7A     		ldrb	r3, [r7, #9]
2273:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
 1531              		.loc 1 2273 0
 1532 009e 7608     		lsrs	r6, r6, #1
 1533              	.LVL140:
2276:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
 1534              		.loc 1 2276 0
 1535 00a0 3343     		orrs	r3, r6
 1536 00a2 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 81


 1537 00a4 7B72     		strb	r3, [r7, #9]
2278:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     #endif
 1538              		.loc 1 2278 0
 1539 00a6 6B72     		strb	r3, [r5, #9]
 1540 00a8 049B     		ldr	r3, [sp, #16]
 1541 00aa 013B     		subs	r3, r3, #1
 1542 00ac 0493     		str	r3, [sp, #16]
2280:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
 1543              		.loc 1 2280 0
 1544 00ae 002B     		cmp	r3, #0
 1545 00b0 DED1     		bne	.L70
2282:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         {
 1546              		.loc 1 2282 0
 1547 00b2 7B7A     		ldrb	r3, [r7, #9]
 1548 00b4 002B     		cmp	r3, #0
 1549 00b6 30D1     		bne	.L71
2284:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
 1550              		.loc 1 2284 0
 1551 00b8 0133     		adds	r3, r3, #1
 1552 00ba 7B72     		strb	r3, [r7, #9]
2286:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             #endif
 1553              		.loc 1 2286 0
 1554 00bc 0123     		movs	r3, #1
 1555 00be 6B72     		strb	r3, [r5, #9]
 1556 00c0 2BE0     		b	.L71
 1557              	.LVL141:
 1558              	.L122:
 1559              	.LBE62:
 1560              	.LBE65:
 1561              	.LBB66:
 1562              	.LBB67:
1932:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif
 1563              		.loc 1 1932 0
 1564 00c2 1B68     		ldr	r3, [r3]
 1565              	.LBE67:
 1566              	.LBE66:
 1567              	.LBB69:
 1568              	.LBB63:
2315:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
 1569              		.loc 1 2315 0
 1570 00c4 7C72     		strb	r4, [r7, #9]
 1571              	.LVL142:
 1572              	.LBE63:
 1573              	.LBE69:
 1574              	.LBB70:
 1575              	.LBB68:
1932:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif
 1576              		.loc 1 1932 0
 1577 00c6 0193     		str	r3, [sp, #4]
 1578              	.LVL143:
1935:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1579              		.loc 1 1935 0
 1580 00c8 BD7A     		ldrb	r5, [r7, #10]
 1581              	.LVL144:
1946:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
 1582              		.loc 1 1946 0
 1583 00ca 261E     		subs	r6, r4, #0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 82


1942:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
 1584              		.loc 1 1942 0
 1585 00cc 02D0     		beq	.L101
 1586              	.LVL145:
1939:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
 1587              		.loc 1 1939 0
 1588 00ce 7F23     		movs	r3, #127
 1589              	.LVL146:
1946:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
 1590              		.loc 1 1946 0
 1591 00d0 7E2C     		cmp	r4, #126
 1592 00d2 00D8     		bhi	.L76
 1593              	.L101:
1942:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
 1594              		.loc 1 1942 0
 1595 00d4 2300     		movs	r3, r4
 1596              	.L76:
 1597 00d6 0A22     		movs	r2, #10
 1598 00d8 4A43     		muls	r2, r1
 1599 00da 0199     		ldr	r1, [sp, #4]
 1600 00dc 8A18     		adds	r2, r1, r2
 1601 00de 0492     		str	r2, [sp, #16]
1932:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif
 1602              		.loc 1 1932 0
 1603 00e0 0A00     		movs	r2, r1
 1604              	.LVL147:
 1605              	.L79:
1966:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
 1606              		.loc 1 1966 0
 1607 00e2 0499     		ldr	r1, [sp, #16]
 1608 00e4 8A42     		cmp	r2, r1
 1609 00e6 05D0     		beq	.L77
 1610              	.LVL148:
 1611 00e8 517A     		ldrb	r1, [r2, #9]
 1612 00ea 8B42     		cmp	r3, r1
 1613 00ec 00D9     		bls	.L78
 1614 00ee 0B00     		movs	r3, r1
 1615              	.LVL149:
 1616              	.L78:
1975:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
 1617              		.loc 1 1975 0
 1618 00f0 0A32     		adds	r2, r2, #10
 1619              	.LVL150:
 1620 00f2 F6E7     		b	.L79
 1621              	.LVL151:
 1622              	.L77:
1980:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 1623              		.loc 1 1980 0
 1624 00f4 002D     		cmp	r5, #0
 1625 00f6 29D0     		beq	.L80
1982:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
 1626              		.loc 1 1982 0
 1627 00f8 132B     		cmp	r3, #19
 1628 00fa 27D8     		bhi	.L80
 1629              	.LVL152:
1984:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             CapSense_idacGainTable[gainIndex - 1u].gainValue;
 1630              		.loc 1 1984 0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 83


 1631 00fc 5D49     		ldr	r1, .L124+12
 1632 00fe EB00     		lsls	r3, r5, #3
 1633              	.LVL153:
1985:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     if ((maxIdac * ratio) < CapSense_CSD_CAL_IDAC_MAX_VALUE)
 1634              		.loc 1 1985 0
 1635 0100 013D     		subs	r5, r5, #1
 1636              	.LVL154:
 1637 0102 EA00     		lsls	r2, r5, #3
 1638              	.LVL155:
1984:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             CapSense_idacGainTable[gainIndex - 1u].gainValue;
 1639              		.loc 1 1984 0
 1640 0104 CB18     		adds	r3, r1, r3
1985:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     if ((maxIdac * ratio) < CapSense_CSD_CAL_IDAC_MAX_VALUE)
 1641              		.loc 1 1985 0
 1642 0106 8A18     		adds	r2, r1, r2
1986:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
 1643              		.loc 1 1986 0
 1644 0108 5168     		ldr	r1, [r2, #4]
 1645 010a 5868     		ldr	r0, [r3, #4]
 1646 010c FFF7FEFF 		bl	__aeabi_uidiv
 1647              	.LVL156:
 1648 0110 4643     		muls	r6, r0
 1649 0112 7E2E     		cmp	r6, #126
 1650 0114 1AD8     		bhi	.L80
1989:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         status = 1u;
 1651              		.loc 1 1989 0
 1652 0116 BD72     		strb	r5, [r7, #10]
 1653              	.LVL157:
 1654 0118 87E7     		b	.L81
 1655              	.LVL158:
 1656              	.L71:
 1657              	.LBE68:
 1658              	.LBE70:
 1659              	.LBB71:
 1660              	.LBB64:
2303:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_CSDScanExt();
 1661              		.loc 1 2303 0
 1662 011a 0199     		ldr	r1, [sp, #4]
 1663 011c 0298     		ldr	r0, [sp, #8]
2296:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
 1664              		.loc 1 2296 0
 1665 011e 7D7A     		ldrb	r5, [r7, #9]
 1666              	.LVL159:
2303:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_CSDScanExt();
 1667              		.loc 1 2303 0
 1668 0120 FFF7FEFF 		bl	CapSense_CSDSetupWidgetExt
 1669              	.LVL160:
2304:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1670              		.loc 1 2304 0
 1671 0124 FFF7FEFF 		bl	CapSense_CSDScanExt
 1672              	.LVL161:
2307:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 1673              		.loc 1 2307 0
 1674 0128 8022     		movs	r2, #128
2304:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1675              		.loc 1 2304 0
 1676 012a 514B     		ldr	r3, .L124+8
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 84


2307:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 1677              		.loc 1 2307 0
 1678 012c 4E49     		ldr	r1, .L124
 1679              	.LVL162:
 1680              	.L73:
 1681 012e C868     		ldr	r0, [r1, #12]
 1682 0130 1042     		tst	r0, r2
 1683 0132 02D0     		beq	.L72
 1684 0134 013B     		subs	r3, r3, #1
 1685              	.LVL163:
 1686 0136 002B     		cmp	r3, #0
 1687 0138 F9D1     		bne	.L73
 1688              	.LVL164:
 1689              	.L72:
 1690 013a 2B1C     		adds	r3, r5, #0
 1691 013c A542     		cmp	r5, r4
 1692 013e 00D2     		bcs	.L74
 1693 0140 231C     		adds	r3, r4, #0
 1694              	.L74:
 1695              	.LVL165:
 1696 0142 DCB2     		uxtb	r4, r3
 1697              	.LVL166:
2219:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 1698              		.loc 1 2219 0
 1699 0144 019B     		ldr	r3, [sp, #4]
 1700 0146 0133     		adds	r3, r3, #1
 1701 0148 0193     		str	r3, [sp, #4]
 1702              	.LVL167:
 1703 014a 80E7     		b	.L66
 1704              	.LVL168:
 1705              	.L80:
 1706              	.LBE64:
 1707              	.LBE71:
 1708              	.LBB72:
 1709              	.LBB73:
2045:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 for(snsIndex = 0u; snsIndex < ptrFlashWidget->numCols; snsIndex++)
 1710              		.loc 1 2045 0
 1711 014c 019B     		ldr	r3, [sp, #4]
2046:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
 1712              		.loc 1 2046 0
 1713 014e 029A     		ldr	r2, [sp, #8]
2045:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 for(snsIndex = 0u; snsIndex < ptrFlashWidget->numCols; snsIndex++)
 1714              		.loc 1 2045 0
 1715 0150 1888     		ldrh	r0, [r3]
 1716              	.LVL169:
2046:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
 1717              		.loc 1 2046 0
 1718 0152 1C23     		movs	r3, #28
 1719 0154 5343     		muls	r3, r2
 1720 0156 454A     		ldr	r2, .L124+4
 1721 0158 2500     		movs	r5, r4
 1722 015a D318     		adds	r3, r2, r3
 1723 015c 0022     		movs	r2, #0
 1724 015e DB7E     		ldrb	r3, [r3, #27]
 1725 0160 0693     		str	r3, [sp, #24]
 1726 0162 019B     		ldr	r3, [sp, #4]
 1727              	.LVL170:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 85


 1728              	.L84:
 1729 0164 0699     		ldr	r1, [sp, #24]
 1730 0166 8A42     		cmp	r2, r1
 1731 0168 08D2     		bcs	.L82
2048:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
 1732              		.loc 1 2048 0
 1733 016a 597A     		ldrb	r1, [r3, #9]
 1734 016c 8D42     		cmp	r5, r1
 1735 016e 02D8     		bhi	.L83
 1736              	.L85:
2053:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
 1737              		.loc 1 2053 0
 1738 0170 0A33     		adds	r3, r3, #10
 1739              	.LVL171:
2046:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
 1740              		.loc 1 2046 0
 1741 0172 0132     		adds	r2, r2, #1
 1742              	.LVL172:
 1743 0174 F6E7     		b	.L84
 1744              	.L83:
 1745              	.LVL173:
2051:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
 1746              		.loc 1 2051 0
 1747 0176 1888     		ldrh	r0, [r3]
 1748              	.LVL174:
 1749 0178 0D00     		movs	r5, r1
 1750 017a F9E7     		b	.L85
 1751              	.LVL175:
 1752              	.L82:
2033:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1753              		.loc 1 2033 0
 1754 017c 0123     		movs	r3, #1
 1755              	.LVL176:
 1756 017e 3A88     		ldrh	r2, [r7]
 1757              	.LVL177:
 1758 0180 9340     		lsls	r3, r3, r2
 1759 0182 013B     		subs	r3, r3, #1
 1760 0184 0593     		str	r3, [sp, #20]
 1761              	.LVL178:
2058:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1762              		.loc 1 2058 0
 1763 0186 6423     		movs	r3, #100
 1764              	.LVL179:
 1765 0188 0599     		ldr	r1, [sp, #20]
 1766 018a 5843     		muls	r0, r3
 1767              	.LVL180:
 1768 018c FFF7FEFF 		bl	__aeabi_uidiv
 1769              	.LVL181:
 1770 0190 6430     		adds	r0, r0, #100
 1771 0192 6843     		muls	r0, r5
 1772 0194 0399     		ldr	r1, [sp, #12]
 1773 0196 FFF7FEFF 		bl	__aeabi_uidiv
 1774              	.LVL182:
 1775 019a A042     		cmp	r0, r4
 1776 019c 00D9     		bls	.L86
 1777 019e 2000     		movs	r0, r4
 1778              	.LVL183:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 86


 1779              	.L86:
2078:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             (CapSense_PERCENTAGE_100 >> 1u)) / CapSense_PERCENTAGE_100);
 1780              		.loc 1 2078 0
 1781 01a0 3223     		movs	r3, #50
2068:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
 1782              		.loc 1 2068 0
 1783 01a2 0025     		movs	r5, #0
 1784              	.LVL184:
2072:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
 1785              		.loc 1 2072 0
 1786 01a4 039E     		ldr	r6, [sp, #12]
 1787 01a6 019C     		ldr	r4, [sp, #4]
 1788              	.LVL185:
 1789 01a8 4643     		muls	r6, r0
2078:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             (CapSense_PERCENTAGE_100 >> 1u)) / CapSense_PERCENTAGE_100);
 1790              		.loc 1 2078 0
 1791 01aa 9B1B     		subs	r3, r3, r6
2064:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1792              		.loc 1 2064 0
 1793 01ac 7872     		strb	r0, [r7, #9]
 1794              	.LVL186:
2078:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             (CapSense_PERCENTAGE_100 >> 1u)) / CapSense_PERCENTAGE_100);
 1795              		.loc 1 2078 0
 1796 01ae 0793     		str	r3, [sp, #28]
 1797              	.LVL187:
 1798              	.L90:
2068:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
 1799              		.loc 1 2068 0
 1800 01b0 069B     		ldr	r3, [sp, #24]
 1801 01b2 AB42     		cmp	r3, r5
 1802 01b4 16D9     		bls	.L87
2070:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         CapSense_PERCENTAGE_100) * ptrRamSensor->idacComp[freqChannel];
 1803              		.loc 1 2070 0
 1804 01b6 6423     		movs	r3, #100
 1805 01b8 2088     		ldrh	r0, [r4]
 1806 01ba 0599     		ldr	r1, [sp, #20]
 1807 01bc 5843     		muls	r0, r3
 1808 01be FFF7FEFF 		bl	__aeabi_uidiv
 1809              	.LVL188:
 1810 01c2 637A     		ldrb	r3, [r4, #9]
 1811 01c4 6430     		adds	r0, r0, #100
 1812 01c6 5843     		muls	r0, r3
 1813              	.LVL189:
2072:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
 1814              		.loc 1 2072 0
 1815 01c8 B042     		cmp	r0, r6
 1816 01ca 08D3     		bcc	.L88
2078:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             (CapSense_PERCENTAGE_100 >> 1u)) / CapSense_PERCENTAGE_100);
 1817              		.loc 1 2078 0
 1818 01cc 079B     		ldr	r3, [sp, #28]
 1819 01ce 6421     		movs	r1, #100
 1820 01d0 1818     		adds	r0, r3, r0
 1821              	.LVL190:
 1822 01d2 FFF7FEFF 		bl	__aeabi_uidiv
 1823              	.LVL191:
 1824 01d6 6072     		strb	r0, [r4, #9]
 1825              	.L91:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 87


2081:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
 1826              		.loc 1 2081 0
 1827 01d8 0A34     		adds	r4, r4, #10
 1828              	.LVL192:
2068:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
 1829              		.loc 1 2068 0
 1830 01da 0135     		adds	r5, r5, #1
 1831              	.LVL193:
 1832 01dc E8E7     		b	.L90
 1833              	.LVL194:
 1834              	.L88:
2074:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
 1835              		.loc 1 2074 0
 1836 01de 0023     		movs	r3, #0
 1837 01e0 6372     		strb	r3, [r4, #9]
 1838 01e2 F9E7     		b	.L91
 1839              	.LVL195:
 1840              	.L87:
 1841              	.LBE73:
 1842              	.LBE72:
2459:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 1843              		.loc 1 2459 0
 1844 01e4 8024     		movs	r4, #128
2455:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_CSDScan();
 1845              		.loc 1 2455 0
 1846 01e6 0298     		ldr	r0, [sp, #8]
 1847 01e8 FFF7FEFF 		bl	CapSense_CSDSetupWidget
 1848              	.LVL196:
2456:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1849              		.loc 1 2456 0
 1850 01ec FFF7FEFF 		bl	CapSense_CSDScan
 1851              	.LVL197:
2458:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             while (((CapSense_dsRam.status & CapSense_SW_STS_BUSY) != 0u) && (0uL != watchdogCounte
 1852              		.loc 1 2458 0
 1853 01f0 2149     		ldr	r1, .L124+16
2459:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 1854              		.loc 1 2459 0
 1855 01f2 1D4A     		ldr	r2, .L124
 1856              	.LVL198:
 1857              	.L92:
 1858 01f4 D068     		ldr	r0, [r2, #12]
 1859 01f6 0300     		movs	r3, r0
 1860 01f8 2340     		ands	r3, r4
 1861 01fa 05D0     		beq	.L93
2459:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 1862              		.loc 1 2459 0 is_stmt 0 discriminator 1
 1863 01fc 0029     		cmp	r1, #0
 1864 01fe 01D0     		beq	.L123
2461:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 1865              		.loc 1 2461 0 is_stmt 1
 1866 0200 0139     		subs	r1, r1, #1
 1867              	.LVL199:
 1868 0202 F7E7     		b	.L92
 1869              	.L123:
2467:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 1870              		.loc 1 2467 0
 1871 0204 1022     		movs	r2, #16
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 88


 1872 0206 2BE0     		b	.L113
 1873              	.L93:
 1874 0208 1022     		movs	r2, #16
2465:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 1875              		.loc 1 2465 0
 1876 020a 0029     		cmp	r1, #0
 1877 020c 28D0     		beq	.L113
 1878              	.LVL200:
 1879              	.LBB74:
 1880              	.LBB75:
1865:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         lowerLimit = 0u;
 1881              		.loc 1 1865 0
 1882 020e 0124     		movs	r4, #1
 1883 0210 3A88     		ldrh	r2, [r7]
1866:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         if (target > CapSense_CSD_CALIBRATION_ERROR)
 1884              		.loc 1 1866 0
 1885 0212 1800     		movs	r0, r3
1865:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         lowerLimit = 0u;
 1886              		.loc 1 1865 0
 1887 0214 9440     		lsls	r4, r4, r2
1867:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 1888              		.loc 1 1867 0
 1889 0216 039B     		ldr	r3, [sp, #12]
1865:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         lowerLimit = 0u;
 1890              		.loc 1 1865 0
 1891 0218 013C     		subs	r4, r4, #1
 1892              	.LVL201:
1867:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 1893              		.loc 1 1867 0
 1894 021a 0A2B     		cmp	r3, #10
 1895 021c 01D9     		bls	.L95
1869:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
 1896              		.loc 1 1869 0
 1897 021e 1800     		movs	r0, r3
 1898 0220 0A38     		subs	r0, r0, #10
 1899              	.LVL202:
 1900              	.L95:
1876:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         upperLimit = (rawcount * upperLimit) / CapSense_PERCENTAGE_100;
 1901              		.loc 1 1876 0
 1902 0222 6043     		muls	r0, r4
 1903              	.LVL203:
 1904 0224 6421     		movs	r1, #100
 1905              	.LVL204:
 1906 0226 FFF7FEFF 		bl	__aeabi_uidiv
 1907              	.LVL205:
1871:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         if (upperLimit > CapSense_PERCENTAGE_100)
 1908              		.loc 1 1871 0
 1909 022a 039D     		ldr	r5, [sp, #12]
1876:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         upperLimit = (rawcount * upperLimit) / CapSense_PERCENTAGE_100;
 1910              		.loc 1 1876 0
 1911 022c 0600     		movs	r6, r0
1871:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         if (upperLimit > CapSense_PERCENTAGE_100)
 1912              		.loc 1 1871 0
 1913 022e 0A35     		adds	r5, r5, #10
 1914              	.LVL206:
1877:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1915              		.loc 1 1877 0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 89


 1916 0230 642D     		cmp	r5, #100
 1917 0232 00D9     		bls	.L96
 1918 0234 6425     		movs	r5, #100
 1919              	.LVL207:
 1920              	.L96:
 1921 0236 2000     		movs	r0, r4
 1922              	.LVL208:
 1923 0238 6421     		movs	r1, #100
 1924 023a 6843     		muls	r0, r5
 1925 023c FFF7FEFF 		bl	__aeabi_uidiv
 1926              	.LVL209:
1853:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 rawcount;
 1927              		.loc 1 1853 0
 1928 0240 0022     		movs	r2, #0
 1929              	.LVL210:
 1930              	.L97:
1880:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 1931              		.loc 1 1880 0
 1932 0242 049B     		ldr	r3, [sp, #16]
 1933 0244 0199     		ldr	r1, [sp, #4]
 1934 0246 8B42     		cmp	r3, r1
 1935 0248 0AD0     		beq	.L113
 1936              	.LVL211:
1884:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 if ((rawcount < lowerLimit) || (rawcount > upperLimit))
 1937              		.loc 1 1884 0
 1938 024a 019B     		ldr	r3, [sp, #4]
 1939 024c 1B88     		ldrh	r3, [r3]
 1940              	.LVL212:
1885:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
 1941              		.loc 1 1885 0
 1942 024e B342     		cmp	r3, r6
 1943 0250 01D3     		bcc	.L106
 1944 0252 8342     		cmp	r3, r0
 1945 0254 00D9     		bls	.L98
 1946              	.L106:
1887:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     break;
 1947              		.loc 1 1887 0
 1948 0256 0622     		movs	r2, #6
 1949              	.LVL213:
 1950              	.L98:
1891:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
 1951              		.loc 1 1891 0
 1952 0258 019B     		ldr	r3, [sp, #4]
 1953              	.LVL214:
 1954 025a 0A33     		adds	r3, r3, #10
 1955 025c 0193     		str	r3, [sp, #4]
 1956              	.LVL215:
 1957 025e F0E7     		b	.L97
 1958              	.LVL216:
 1959              	.L113:
 1960              	.LBE75:
 1961              	.LBE74:
2481:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* ((CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)) || \
 1962              		.loc 1 2481 0
 1963 0260 1000     		movs	r0, r2
 1964 0262 09B0     		add	sp, sp, #36
 1965              		@ sp needed
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 90


 1966 0264 F0BD     		pop	{r4, r5, r6, r7, pc}
 1967              	.L125:
 1968 0266 C046     		.align	2
 1969              	.L124:
 1970 0268 00000000 		.word	CapSense_dsRam
 1971 026c 00000000 		.word	CapSense_dsFlash
 1972 0270 01A60E00 		.word	960001
 1973 0274 00000000 		.word	CapSense_idacGainTable
 1974 0278 00366E01 		.word	24000000
 1975              		.cfi_endproc
 1976              	.LFE25:
 1977              		.size	CapSense_CSDCalibrateWidget, .-CapSense_CSDCalibrateWidget
 1978              		.global	CapSense_configCsd
 1979              		.data
 1980              		.align	2
 1981              		.set	.LANCHOR0,. + 0
 1982              		.type	CapSense_configCsd, %object
 1983              		.size	CapSense_configCsd, 4
 1984              	CapSense_configCsd:
 1985 0000 0008C001 		.word	29362176
 1986              		.type	CapSense_counterResolution, %object
 1987              		.size	CapSense_counterResolution, 4
 1988              	CapSense_counterResolution:
 1989 0004 0000FF0F 		.word	268369920
 1990              		.bss
 1991              		.set	.LANCHOR1,. + 0
 1992              		.type	CapSense_eleCsdDisconnectFlag, %object
 1993              		.size	CapSense_eleCsdDisconnectFlag, 1
 1994              	CapSense_eleCsdDisconnectFlag:
 1995 0000 00       		.space	1
 1996              		.text
 1997              	.Letext0:
 1998              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 1999              		.file 3 "Generated_Source\\PSoC4\\CapSense_Configuration.h"
 2000              		.file 4 "Generated_Source\\PSoC4\\CapSense_Structure.h"
 2001              		.file 5 "Generated_Source\\PSoC4\\CapSense_Sensing.h"
 2002              		.file 6 "Generated_Source\\PSoC4/CyLib.h"
 2003              		.file 7 "Generated_Source\\PSoC4\\CapSense_ISR.h"
 2004              		.section	.debug_info,"",%progbits
 2005              	.Ldebug_info0:
 2006 0000 77140000 		.4byte	0x1477
 2007 0004 0400     		.2byte	0x4
 2008 0006 00000000 		.4byte	.Ldebug_abbrev0
 2009 000a 04       		.byte	0x4
 2010 000b 01       		.uleb128 0x1
 2011 000c BA0A0000 		.4byte	.LASF191
 2012 0010 0C       		.byte	0xc
 2013 0011 4E070000 		.4byte	.LASF192
 2014 0015 FA060000 		.4byte	.LASF193
 2015 0019 F0000000 		.4byte	.Ldebug_ranges0+0xf0
 2016 001d 00000000 		.4byte	0
 2017 0021 00000000 		.4byte	.Ldebug_line0
 2018 0025 02       		.uleb128 0x2
 2019 0026 04       		.byte	0x4
 2020 0027 07       		.byte	0x7
 2021 0028 9E000000 		.4byte	.LASF0
 2022 002c 02       		.uleb128 0x2
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 91


 2023 002d 01       		.byte	0x1
 2024 002e 06       		.byte	0x6
 2025 002f EB0B0000 		.4byte	.LASF1
 2026 0033 02       		.uleb128 0x2
 2027 0034 01       		.byte	0x1
 2028 0035 08       		.byte	0x8
 2029 0036 5B0A0000 		.4byte	.LASF2
 2030 003a 02       		.uleb128 0x2
 2031 003b 02       		.byte	0x2
 2032 003c 05       		.byte	0x5
 2033 003d 21080000 		.4byte	.LASF3
 2034 0041 02       		.uleb128 0x2
 2035 0042 02       		.byte	0x2
 2036 0043 07       		.byte	0x7
 2037 0044 130C0000 		.4byte	.LASF4
 2038 0048 02       		.uleb128 0x2
 2039 0049 04       		.byte	0x4
 2040 004a 05       		.byte	0x5
 2041 004b AA080000 		.4byte	.LASF5
 2042 004f 02       		.uleb128 0x2
 2043 0050 04       		.byte	0x4
 2044 0051 07       		.byte	0x7
 2045 0052 B0090000 		.4byte	.LASF6
 2046 0056 02       		.uleb128 0x2
 2047 0057 08       		.byte	0x8
 2048 0058 05       		.byte	0x5
 2049 0059 7C050000 		.4byte	.LASF7
 2050 005d 02       		.uleb128 0x2
 2051 005e 08       		.byte	0x8
 2052 005f 07       		.byte	0x7
 2053 0060 A1020000 		.4byte	.LASF8
 2054 0064 03       		.uleb128 0x3
 2055 0065 04       		.byte	0x4
 2056 0066 05       		.byte	0x5
 2057 0067 696E7400 		.ascii	"int\000"
 2058 006b 04       		.uleb128 0x4
 2059 006c 3F0C0000 		.4byte	.LASF9
 2060 0070 02       		.byte	0x2
 2061 0071 E401     		.2byte	0x1e4
 2062 0073 33000000 		.4byte	0x33
 2063 0077 04       		.uleb128 0x4
 2064 0078 E2040000 		.4byte	.LASF10
 2065 007c 02       		.byte	0x2
 2066 007d E501     		.2byte	0x1e5
 2067 007f 41000000 		.4byte	0x41
 2068 0083 04       		.uleb128 0x4
 2069 0084 BF060000 		.4byte	.LASF11
 2070 0088 02       		.byte	0x2
 2071 0089 E601     		.2byte	0x1e6
 2072 008b 4F000000 		.4byte	0x4f
 2073 008f 02       		.uleb128 0x2
 2074 0090 04       		.byte	0x4
 2075 0091 04       		.byte	0x4
 2076 0092 2C020000 		.4byte	.LASF12
 2077 0096 02       		.uleb128 0x2
 2078 0097 08       		.byte	0x8
 2079 0098 04       		.byte	0x4
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 92


 2080 0099 450C0000 		.4byte	.LASF13
 2081 009d 02       		.uleb128 0x2
 2082 009e 01       		.byte	0x1
 2083 009f 08       		.byte	0x8
 2084 00a0 84040000 		.4byte	.LASF14
 2085 00a4 04       		.uleb128 0x4
 2086 00a5 520A0000 		.4byte	.LASF15
 2087 00a9 02       		.byte	0x2
 2088 00aa 8602     		.2byte	0x286
 2089 00ac 4F000000 		.4byte	0x4f
 2090 00b0 05       		.uleb128 0x5
 2091 00b1 6B000000 		.4byte	0x6b
 2092 00b5 04       		.uleb128 0x4
 2093 00b6 C0070000 		.4byte	.LASF16
 2094 00ba 02       		.byte	0x2
 2095 00bb 9002     		.2byte	0x290
 2096 00bd C1000000 		.4byte	0xc1
 2097 00c1 05       		.uleb128 0x5
 2098 00c2 83000000 		.4byte	0x83
 2099 00c6 04       		.uleb128 0x4
 2100 00c7 A20A0000 		.4byte	.LASF17
 2101 00cb 03       		.byte	0x3
 2102 00cc 2A01     		.2byte	0x12a
 2103 00ce 77000000 		.4byte	0x77
 2104 00d2 04       		.uleb128 0x4
 2105 00d3 2E050000 		.4byte	.LASF18
 2106 00d7 03       		.byte	0x3
 2107 00d8 2E01     		.2byte	0x12e
 2108 00da 6B000000 		.4byte	0x6b
 2109 00de 06       		.uleb128 0x6
 2110 00df 01       		.byte	0x1
 2111 00e0 33000000 		.4byte	0x33
 2112 00e4 04       		.byte	0x4
 2113 00e5 70       		.byte	0x70
 2114 00e6 09010000 		.4byte	0x109
 2115 00ea 07       		.uleb128 0x7
 2116 00eb 84000000 		.4byte	.LASF19
 2117 00ef 00       		.byte	0
 2118 00f0 07       		.uleb128 0x7
 2119 00f1 83090000 		.4byte	.LASF20
 2120 00f5 01       		.byte	0x1
 2121 00f6 07       		.uleb128 0x7
 2122 00f7 F1080000 		.4byte	.LASF21
 2123 00fb 02       		.byte	0x2
 2124 00fc 07       		.uleb128 0x7
 2125 00fd 730B0000 		.4byte	.LASF22
 2126 0101 03       		.byte	0x3
 2127 0102 07       		.uleb128 0x7
 2128 0103 7E070000 		.4byte	.LASF23
 2129 0107 04       		.byte	0x4
 2130 0108 00       		.byte	0
 2131 0109 08       		.uleb128 0x8
 2132 010a 10       		.byte	0x10
 2133 010b 04       		.byte	0x4
 2134 010c AD       		.byte	0xad
 2135 010d 96010000 		.4byte	0x196
 2136 0111 09       		.uleb128 0x9
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 93


 2137 0112 1C050000 		.4byte	.LASF24
 2138 0116 04       		.byte	0x4
 2139 0117 B2       		.byte	0xb2
 2140 0118 77000000 		.4byte	0x77
 2141 011c 00       		.byte	0
 2142 011d 09       		.uleb128 0x9
 2143 011e 030A0000 		.4byte	.LASF25
 2144 0122 04       		.byte	0x4
 2145 0123 B7       		.byte	0xb7
 2146 0124 C6000000 		.4byte	0xc6
 2147 0128 02       		.byte	0x2
 2148 0129 09       		.uleb128 0x9
 2149 012a 7C040000 		.4byte	.LASF26
 2150 012e 04       		.byte	0x4
 2151 012f BC       		.byte	0xbc
 2152 0130 6B000000 		.4byte	0x6b
 2153 0134 04       		.byte	0x4
 2154 0135 09       		.uleb128 0x9
 2155 0136 5D060000 		.4byte	.LASF27
 2156 013a 04       		.byte	0x4
 2157 013b C1       		.byte	0xc1
 2158 013c 6B000000 		.4byte	0x6b
 2159 0140 05       		.byte	0x5
 2160 0141 09       		.uleb128 0x9
 2161 0142 CC030000 		.4byte	.LASF28
 2162 0146 04       		.byte	0x4
 2163 0147 C7       		.byte	0xc7
 2164 0148 6B000000 		.4byte	0x6b
 2165 014c 06       		.byte	0x6
 2166 014d 09       		.uleb128 0x9
 2167 014e D0050000 		.4byte	.LASF29
 2168 0152 04       		.byte	0x4
 2169 0153 CD       		.byte	0xcd
 2170 0154 6B000000 		.4byte	0x6b
 2171 0158 07       		.byte	0x7
 2172 0159 09       		.uleb128 0x9
 2173 015a 14040000 		.4byte	.LASF30
 2174 015e 04       		.byte	0x4
 2175 015f D4       		.byte	0xd4
 2176 0160 D2000000 		.4byte	0xd2
 2177 0164 08       		.byte	0x8
 2178 0165 09       		.uleb128 0x9
 2179 0166 CE090000 		.4byte	.LASF31
 2180 016a 04       		.byte	0x4
 2181 016b DB       		.byte	0xdb
 2182 016c 96010000 		.4byte	0x196
 2183 0170 09       		.byte	0x9
 2184 0171 09       		.uleb128 0x9
 2185 0172 F0010000 		.4byte	.LASF32
 2186 0176 04       		.byte	0x4
 2187 0177 E0       		.byte	0xe0
 2188 0178 6B000000 		.4byte	0x6b
 2189 017c 0A       		.byte	0xa
 2190 017d 09       		.uleb128 0x9
 2191 017e AC0B0000 		.4byte	.LASF33
 2192 0182 04       		.byte	0x4
 2193 0183 E8       		.byte	0xe8
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 94


 2194 0184 77000000 		.4byte	0x77
 2195 0188 0C       		.byte	0xc
 2196 0189 09       		.uleb128 0x9
 2197 018a F7070000 		.4byte	.LASF34
 2198 018e 04       		.byte	0x4
 2199 018f ED       		.byte	0xed
 2200 0190 6B000000 		.4byte	0x6b
 2201 0194 0E       		.byte	0xe
 2202 0195 00       		.byte	0
 2203 0196 0A       		.uleb128 0xa
 2204 0197 6B000000 		.4byte	0x6b
 2205 019b A6010000 		.4byte	0x1a6
 2206 019f 0B       		.uleb128 0xb
 2207 01a0 A6010000 		.4byte	0x1a6
 2208 01a4 00       		.byte	0
 2209 01a5 00       		.byte	0
 2210 01a6 02       		.uleb128 0x2
 2211 01a7 04       		.byte	0x4
 2212 01a8 07       		.byte	0x7
 2213 01a9 9F090000 		.4byte	.LASF35
 2214 01ad 0C       		.uleb128 0xc
 2215 01ae 8E060000 		.4byte	.LASF36
 2216 01b2 04       		.byte	0x4
 2217 01b3 EE       		.byte	0xee
 2218 01b4 09010000 		.4byte	0x109
 2219 01b8 08       		.uleb128 0x8
 2220 01b9 10       		.byte	0x10
 2221 01ba 04       		.byte	0x4
 2222 01bb F3       		.byte	0xf3
 2223 01bc 4E020000 		.4byte	0x24e
 2224 01c0 09       		.uleb128 0x9
 2225 01c1 1C050000 		.4byte	.LASF24
 2226 01c5 04       		.byte	0x4
 2227 01c6 F8       		.byte	0xf8
 2228 01c7 77000000 		.4byte	0x77
 2229 01cb 00       		.byte	0
 2230 01cc 09       		.uleb128 0x9
 2231 01cd 030A0000 		.4byte	.LASF25
 2232 01d1 04       		.byte	0x4
 2233 01d2 FD       		.byte	0xfd
 2234 01d3 C6000000 		.4byte	0xc6
 2235 01d7 02       		.byte	0x2
 2236 01d8 0D       		.uleb128 0xd
 2237 01d9 7C040000 		.4byte	.LASF26
 2238 01dd 04       		.byte	0x4
 2239 01de 0201     		.2byte	0x102
 2240 01e0 6B000000 		.4byte	0x6b
 2241 01e4 04       		.byte	0x4
 2242 01e5 0D       		.uleb128 0xd
 2243 01e6 5D060000 		.4byte	.LASF27
 2244 01ea 04       		.byte	0x4
 2245 01eb 0701     		.2byte	0x107
 2246 01ed 6B000000 		.4byte	0x6b
 2247 01f1 05       		.byte	0x5
 2248 01f2 0D       		.uleb128 0xd
 2249 01f3 CC030000 		.4byte	.LASF28
 2250 01f7 04       		.byte	0x4
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 95


 2251 01f8 0D01     		.2byte	0x10d
 2252 01fa 6B000000 		.4byte	0x6b
 2253 01fe 06       		.byte	0x6
 2254 01ff 0D       		.uleb128 0xd
 2255 0200 D0050000 		.4byte	.LASF29
 2256 0204 04       		.byte	0x4
 2257 0205 1301     		.2byte	0x113
 2258 0207 6B000000 		.4byte	0x6b
 2259 020b 07       		.byte	0x7
 2260 020c 0D       		.uleb128 0xd
 2261 020d 14040000 		.4byte	.LASF30
 2262 0211 04       		.byte	0x4
 2263 0212 1A01     		.2byte	0x11a
 2264 0214 D2000000 		.4byte	0xd2
 2265 0218 08       		.byte	0x8
 2266 0219 0D       		.uleb128 0xd
 2267 021a CE090000 		.4byte	.LASF31
 2268 021e 04       		.byte	0x4
 2269 021f 2101     		.2byte	0x121
 2270 0221 96010000 		.4byte	0x196
 2271 0225 09       		.byte	0x9
 2272 0226 0D       		.uleb128 0xd
 2273 0227 F0010000 		.4byte	.LASF32
 2274 022b 04       		.byte	0x4
 2275 022c 2601     		.2byte	0x126
 2276 022e 6B000000 		.4byte	0x6b
 2277 0232 0A       		.byte	0xa
 2278 0233 0D       		.uleb128 0xd
 2279 0234 AC0B0000 		.4byte	.LASF33
 2280 0238 04       		.byte	0x4
 2281 0239 2E01     		.2byte	0x12e
 2282 023b 77000000 		.4byte	0x77
 2283 023f 0C       		.byte	0xc
 2284 0240 0D       		.uleb128 0xd
 2285 0241 F7070000 		.4byte	.LASF34
 2286 0245 04       		.byte	0x4
 2287 0246 3301     		.2byte	0x133
 2288 0248 6B000000 		.4byte	0x6b
 2289 024c 0E       		.byte	0xe
 2290 024d 00       		.byte	0
 2291 024e 04       		.uleb128 0x4
 2292 024f 340A0000 		.4byte	.LASF37
 2293 0253 04       		.byte	0x4
 2294 0254 3401     		.2byte	0x134
 2295 0256 B8010000 		.4byte	0x1b8
 2296 025a 0E       		.uleb128 0xe
 2297 025b 40       		.byte	0x40
 2298 025c 04       		.byte	0x4
 2299 025d 3A01     		.2byte	0x13a
 2300 025f 97020000 		.4byte	0x297
 2301 0263 0F       		.uleb128 0xf
 2302 0264 757000   		.ascii	"up\000"
 2303 0267 04       		.byte	0x4
 2304 0268 3F01     		.2byte	0x13f
 2305 026a 4E020000 		.4byte	0x24e
 2306 026e 00       		.byte	0
 2307 026f 0D       		.uleb128 0xd
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 96


 2308 0270 FE010000 		.4byte	.LASF38
 2309 0274 04       		.byte	0x4
 2310 0275 4401     		.2byte	0x144
 2311 0277 4E020000 		.4byte	0x24e
 2312 027b 10       		.byte	0x10
 2313 027c 0D       		.uleb128 0xd
 2314 027d 37090000 		.4byte	.LASF39
 2315 0281 04       		.byte	0x4
 2316 0282 4901     		.2byte	0x149
 2317 0284 4E020000 		.4byte	0x24e
 2318 0288 20       		.byte	0x20
 2319 0289 0D       		.uleb128 0xd
 2320 028a 70050000 		.4byte	.LASF40
 2321 028e 04       		.byte	0x4
 2322 028f 4E01     		.2byte	0x14e
 2323 0291 4E020000 		.4byte	0x24e
 2324 0295 30       		.byte	0x30
 2325 0296 00       		.byte	0
 2326 0297 04       		.uleb128 0x4
 2327 0298 AF010000 		.4byte	.LASF41
 2328 029c 04       		.byte	0x4
 2329 029d 4F01     		.2byte	0x14f
 2330 029f 5A020000 		.4byte	0x25a
 2331 02a3 0E       		.uleb128 0xe
 2332 02a4 0A       		.byte	0xa
 2333 02a5 04       		.byte	0x4
 2334 02a6 5501     		.2byte	0x155
 2335 02a8 FB020000 		.4byte	0x2fb
 2336 02ac 0F       		.uleb128 0xf
 2337 02ad 72617700 		.ascii	"raw\000"
 2338 02b1 04       		.byte	0x4
 2339 02b2 5A01     		.2byte	0x15a
 2340 02b4 FB020000 		.4byte	0x2fb
 2341 02b8 00       		.byte	0
 2342 02b9 0D       		.uleb128 0xd
 2343 02ba 0E0C0000 		.4byte	.LASF42
 2344 02be 04       		.byte	0x4
 2345 02bf 5F01     		.2byte	0x15f
 2346 02c1 FB020000 		.4byte	0x2fb
 2347 02c5 02       		.byte	0x2
 2348 02c6 0D       		.uleb128 0xd
 2349 02c7 0C0A0000 		.4byte	.LASF43
 2350 02cb 04       		.byte	0x4
 2351 02cc 6501     		.2byte	0x165
 2352 02ce 96010000 		.4byte	0x196
 2353 02d2 04       		.byte	0x4
 2354 02d3 0D       		.uleb128 0xd
 2355 02d4 C4080000 		.4byte	.LASF44
 2356 02d8 04       		.byte	0x4
 2357 02d9 6A01     		.2byte	0x16a
 2358 02db C6000000 		.4byte	0xc6
 2359 02df 06       		.byte	0x6
 2360 02e0 0D       		.uleb128 0xd
 2361 02e1 4C0C0000 		.4byte	.LASF45
 2362 02e5 04       		.byte	0x4
 2363 02e6 6F01     		.2byte	0x16f
 2364 02e8 0B030000 		.4byte	0x30b
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 97


 2365 02ec 08       		.byte	0x8
 2366 02ed 0D       		.uleb128 0xd
 2367 02ee 67050000 		.4byte	.LASF46
 2368 02f2 04       		.byte	0x4
 2369 02f3 7401     		.2byte	0x174
 2370 02f5 96010000 		.4byte	0x196
 2371 02f9 09       		.byte	0x9
 2372 02fa 00       		.byte	0
 2373 02fb 0A       		.uleb128 0xa
 2374 02fc 77000000 		.4byte	0x77
 2375 0300 0B030000 		.4byte	0x30b
 2376 0304 0B       		.uleb128 0xb
 2377 0305 A6010000 		.4byte	0x1a6
 2378 0309 00       		.byte	0
 2379 030a 00       		.byte	0
 2380 030b 0A       		.uleb128 0xa
 2381 030c D2000000 		.4byte	0xd2
 2382 0310 1B030000 		.4byte	0x31b
 2383 0314 0B       		.uleb128 0xb
 2384 0315 A6010000 		.4byte	0x1a6
 2385 0319 00       		.byte	0
 2386 031a 00       		.byte	0
 2387 031b 04       		.uleb128 0x4
 2388 031c 71030000 		.4byte	.LASF47
 2389 0320 04       		.byte	0x4
 2390 0321 7501     		.2byte	0x175
 2391 0323 A3020000 		.4byte	0x2a3
 2392 0327 0E       		.uleb128 0xe
 2393 0328 28       		.byte	0x28
 2394 0329 04       		.byte	0x4
 2395 032a 7B01     		.2byte	0x17b
 2396 032c 64030000 		.4byte	0x364
 2397 0330 0F       		.uleb128 0xf
 2398 0331 757000   		.ascii	"up\000"
 2399 0334 04       		.byte	0x4
 2400 0335 8001     		.2byte	0x180
 2401 0337 64030000 		.4byte	0x364
 2402 033b 00       		.byte	0
 2403 033c 0D       		.uleb128 0xd
 2404 033d FE010000 		.4byte	.LASF38
 2405 0341 04       		.byte	0x4
 2406 0342 8501     		.2byte	0x185
 2407 0344 64030000 		.4byte	0x364
 2408 0348 0A       		.byte	0xa
 2409 0349 0D       		.uleb128 0xd
 2410 034a 37090000 		.4byte	.LASF39
 2411 034e 04       		.byte	0x4
 2412 034f 8A01     		.2byte	0x18a
 2413 0351 64030000 		.4byte	0x364
 2414 0355 14       		.byte	0x14
 2415 0356 0D       		.uleb128 0xd
 2416 0357 70050000 		.4byte	.LASF40
 2417 035b 04       		.byte	0x4
 2418 035c 8F01     		.2byte	0x18f
 2419 035e 64030000 		.4byte	0x364
 2420 0362 1E       		.byte	0x1e
 2421 0363 00       		.byte	0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 98


 2422 0364 0A       		.uleb128 0xa
 2423 0365 1B030000 		.4byte	0x31b
 2424 0369 74030000 		.4byte	0x374
 2425 036d 0B       		.uleb128 0xb
 2426 036e A6010000 		.4byte	0x1a6
 2427 0372 00       		.byte	0
 2428 0373 00       		.byte	0
 2429 0374 04       		.uleb128 0x4
 2430 0375 CB0C0000 		.4byte	.LASF48
 2431 0379 04       		.byte	0x4
 2432 037a 9001     		.2byte	0x190
 2433 037c 27030000 		.4byte	0x327
 2434 0380 0E       		.uleb128 0xe
 2435 0381 90       		.byte	0x90
 2436 0382 04       		.byte	0x4
 2437 0383 9601     		.2byte	0x196
 2438 0385 81040000 		.4byte	0x481
 2439 0389 0D       		.uleb128 0xd
 2440 038a D9070000 		.4byte	.LASF49
 2441 038e 04       		.byte	0x4
 2442 038f 9D01     		.2byte	0x19d
 2443 0391 77000000 		.4byte	0x77
 2444 0395 00       		.byte	0
 2445 0396 0D       		.uleb128 0xd
 2446 0397 940C0000 		.4byte	.LASF50
 2447 039b 04       		.byte	0x4
 2448 039c A201     		.2byte	0x1a2
 2449 039e 77000000 		.4byte	0x77
 2450 03a2 02       		.byte	0x2
 2451 03a3 0D       		.uleb128 0xd
 2452 03a4 CD000000 		.4byte	.LASF51
 2453 03a8 04       		.byte	0x4
 2454 03a9 A701     		.2byte	0x1a7
 2455 03ab 77000000 		.4byte	0x77
 2456 03af 04       		.byte	0x4
 2457 03b0 0D       		.uleb128 0xd
 2458 03b1 E3080000 		.4byte	.LASF52
 2459 03b5 04       		.byte	0x4
 2460 03b6 AD01     		.2byte	0x1ad
 2461 03b8 77000000 		.4byte	0x77
 2462 03bc 06       		.byte	0x6
 2463 03bd 0D       		.uleb128 0xd
 2464 03be BB000000 		.4byte	.LASF53
 2465 03c2 04       		.byte	0x4
 2466 03c3 B201     		.2byte	0x1b2
 2467 03c5 77000000 		.4byte	0x77
 2468 03c9 08       		.byte	0x8
 2469 03ca 0D       		.uleb128 0xd
 2470 03cb 27050000 		.4byte	.LASF54
 2471 03cf 04       		.byte	0x4
 2472 03d0 B701     		.2byte	0x1b7
 2473 03d2 C1000000 		.4byte	0xc1
 2474 03d6 0C       		.byte	0xc
 2475 03d7 0D       		.uleb128 0xd
 2476 03d8 B9080000 		.4byte	.LASF55
 2477 03dc 04       		.byte	0x4
 2478 03dd BD01     		.2byte	0x1bd
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 99


 2479 03df 81040000 		.4byte	0x481
 2480 03e3 10       		.byte	0x10
 2481 03e4 0D       		.uleb128 0xd
 2482 03e5 61090000 		.4byte	.LASF56
 2483 03e9 04       		.byte	0x4
 2484 03ea C401     		.2byte	0x1c4
 2485 03ec 81040000 		.4byte	0x481
 2486 03f0 14       		.byte	0x14
 2487 03f1 0D       		.uleb128 0xd
 2488 03f2 ED070000 		.4byte	.LASF57
 2489 03f6 04       		.byte	0x4
 2490 03f7 D401     		.2byte	0x1d4
 2491 03f9 91040000 		.4byte	0x491
 2492 03fd 18       		.byte	0x18
 2493 03fe 0D       		.uleb128 0xd
 2494 03ff 66060000 		.4byte	.LASF58
 2495 0403 04       		.byte	0x4
 2496 0404 DA01     		.2byte	0x1da
 2497 0406 77000000 		.4byte	0x77
 2498 040a 1C       		.byte	0x1c
 2499 040b 0D       		.uleb128 0xd
 2500 040c 67030000 		.4byte	.LASF59
 2501 0410 04       		.byte	0x4
 2502 0411 DF01     		.2byte	0x1df
 2503 0413 6B000000 		.4byte	0x6b
 2504 0417 1E       		.byte	0x1e
 2505 0418 0D       		.uleb128 0xd
 2506 0419 F5050000 		.4byte	.LASF60
 2507 041d 04       		.byte	0x4
 2508 041e E401     		.2byte	0x1e4
 2509 0420 97020000 		.4byte	0x297
 2510 0424 20       		.byte	0x20
 2511 0425 0D       		.uleb128 0xd
 2512 0426 84020000 		.4byte	.LASF61
 2513 042a 04       		.byte	0x4
 2514 042b E901     		.2byte	0x1e9
 2515 042d 74030000 		.4byte	0x374
 2516 0431 60       		.byte	0x60
 2517 0432 0D       		.uleb128 0xd
 2518 0433 74000000 		.4byte	.LASF62
 2519 0437 04       		.byte	0x4
 2520 0438 EE01     		.2byte	0x1ee
 2521 043a 6B000000 		.4byte	0x6b
 2522 043e 88       		.byte	0x88
 2523 043f 0D       		.uleb128 0xd
 2524 0440 E6020000 		.4byte	.LASF63
 2525 0444 04       		.byte	0x4
 2526 0445 F301     		.2byte	0x1f3
 2527 0447 6B000000 		.4byte	0x6b
 2528 044b 89       		.byte	0x89
 2529 044c 0D       		.uleb128 0xd
 2530 044d C6070000 		.4byte	.LASF64
 2531 0451 04       		.byte	0x4
 2532 0452 F801     		.2byte	0x1f8
 2533 0454 77000000 		.4byte	0x77
 2534 0458 8A       		.byte	0x8a
 2535 0459 0D       		.uleb128 0xd
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 100


 2536 045a 3A060000 		.4byte	.LASF65
 2537 045e 04       		.byte	0x4
 2538 045f FD01     		.2byte	0x1fd
 2539 0461 FB020000 		.4byte	0x2fb
 2540 0465 8C       		.byte	0x8c
 2541 0466 0D       		.uleb128 0xd
 2542 0467 D5000000 		.4byte	.LASF66
 2543 046b 04       		.byte	0x4
 2544 046c 0202     		.2byte	0x202
 2545 046e 6B000000 		.4byte	0x6b
 2546 0472 8E       		.byte	0x8e
 2547 0473 0D       		.uleb128 0xd
 2548 0474 870A0000 		.4byte	.LASF67
 2549 0478 04       		.byte	0x4
 2550 0479 0702     		.2byte	0x207
 2551 047b 6B000000 		.4byte	0x6b
 2552 047f 8F       		.byte	0x8f
 2553 0480 00       		.byte	0
 2554 0481 0A       		.uleb128 0xa
 2555 0482 83000000 		.4byte	0x83
 2556 0486 91040000 		.4byte	0x491
 2557 048a 0B       		.uleb128 0xb
 2558 048b A6010000 		.4byte	0x1a6
 2559 048f 00       		.byte	0
 2560 0490 00       		.byte	0
 2561 0491 0A       		.uleb128 0xa
 2562 0492 6B000000 		.4byte	0x6b
 2563 0496 A1040000 		.4byte	0x4a1
 2564 049a 0B       		.uleb128 0xb
 2565 049b A6010000 		.4byte	0x1a6
 2566 049f 03       		.byte	0x3
 2567 04a0 00       		.byte	0
 2568 04a1 04       		.uleb128 0x4
 2569 04a2 3C080000 		.4byte	.LASF68
 2570 04a6 04       		.byte	0x4
 2571 04a7 0802     		.2byte	0x208
 2572 04a9 80030000 		.4byte	0x380
 2573 04ad 0E       		.uleb128 0xe
 2574 04ae 1C       		.byte	0x1c
 2575 04af 04       		.byte	0x4
 2576 04b0 0E02     		.2byte	0x20e
 2577 04b2 2C050000 		.4byte	0x52c
 2578 04b6 0D       		.uleb128 0xd
 2579 04b7 B6060000 		.4byte	.LASF69
 2580 04bb 04       		.byte	0x4
 2581 04bc 1302     		.2byte	0x213
 2582 04be 2C050000 		.4byte	0x52c
 2583 04c2 00       		.byte	0
 2584 04c3 0D       		.uleb128 0xd
 2585 04c4 76050000 		.4byte	.LASF70
 2586 04c8 04       		.byte	0x4
 2587 04c9 1802     		.2byte	0x218
 2588 04cb 2C050000 		.4byte	0x52c
 2589 04cf 04       		.byte	0x4
 2590 04d0 0D       		.uleb128 0xd
 2591 04d1 9D030000 		.4byte	.LASF71
 2592 04d5 04       		.byte	0x4
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 101


 2593 04d6 1D02     		.2byte	0x21d
 2594 04d8 2C050000 		.4byte	0x52c
 2595 04dc 08       		.byte	0x8
 2596 04dd 0D       		.uleb128 0xd
 2597 04de 0D090000 		.4byte	.LASF72
 2598 04e2 04       		.byte	0x4
 2599 04e3 2202     		.2byte	0x222
 2600 04e5 2C050000 		.4byte	0x52c
 2601 04e9 0C       		.byte	0xc
 2602 04ea 0D       		.uleb128 0xd
 2603 04eb 960B0000 		.4byte	.LASF73
 2604 04ef 04       		.byte	0x4
 2605 04f0 2702     		.2byte	0x227
 2606 04f2 83000000 		.4byte	0x83
 2607 04f6 10       		.byte	0x10
 2608 04f7 0D       		.uleb128 0xd
 2609 04f8 F5060000 		.4byte	.LASF74
 2610 04fc 04       		.byte	0x4
 2611 04fd 2C02     		.2byte	0x22c
 2612 04ff 83000000 		.4byte	0x83
 2613 0503 14       		.byte	0x14
 2614 0504 0D       		.uleb128 0xd
 2615 0505 D7040000 		.4byte	.LASF75
 2616 0509 04       		.byte	0x4
 2617 050a 3102     		.2byte	0x231
 2618 050c 6B000000 		.4byte	0x6b
 2619 0510 18       		.byte	0x18
 2620 0511 0D       		.uleb128 0xd
 2621 0512 A8090000 		.4byte	.LASF76
 2622 0516 04       		.byte	0x4
 2623 0517 3602     		.2byte	0x236
 2624 0519 6B000000 		.4byte	0x6b
 2625 051d 19       		.byte	0x19
 2626 051e 0D       		.uleb128 0xd
 2627 051f 4C020000 		.4byte	.LASF77
 2628 0523 04       		.byte	0x4
 2629 0524 3B02     		.2byte	0x23b
 2630 0526 6B000000 		.4byte	0x6b
 2631 052a 1A       		.byte	0x1a
 2632 052b 00       		.byte	0
 2633 052c 10       		.uleb128 0x10
 2634 052d 04       		.byte	0x4
 2635 052e B5000000 		.4byte	0xb5
 2636 0532 04       		.uleb128 0x4
 2637 0533 CD020000 		.4byte	.LASF78
 2638 0537 04       		.byte	0x4
 2639 0538 3C02     		.2byte	0x23c
 2640 053a AD040000 		.4byte	0x4ad
 2641 053e 0E       		.uleb128 0xe
 2642 053f 1C       		.byte	0x1c
 2643 0540 04       		.byte	0x4
 2644 0541 6F02     		.2byte	0x26f
 2645 0543 BD050000 		.4byte	0x5bd
 2646 0547 0D       		.uleb128 0xd
 2647 0548 260C0000 		.4byte	.LASF79
 2648 054c 04       		.byte	0x4
 2649 054d 7802     		.2byte	0x278
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 102


 2650 054f BD050000 		.4byte	0x5bd
 2651 0553 00       		.byte	0
 2652 0554 0D       		.uleb128 0xd
 2653 0555 960A0000 		.4byte	.LASF80
 2654 0559 04       		.byte	0x4
 2655 055a 7F02     		.2byte	0x27f
 2656 055c C4050000 		.4byte	0x5c4
 2657 0560 04       		.byte	0x4
 2658 0561 0D       		.uleb128 0xd
 2659 0562 E2070000 		.4byte	.LASF81
 2660 0566 04       		.byte	0x4
 2661 0567 8502     		.2byte	0x285
 2662 0569 C6050000 		.4byte	0x5c6
 2663 056d 08       		.byte	0x8
 2664 056e 0D       		.uleb128 0xd
 2665 056f C6060000 		.4byte	.LASF82
 2666 0573 04       		.byte	0x4
 2667 0574 8B02     		.2byte	0x28b
 2668 0576 C4050000 		.4byte	0x5c4
 2669 057a 0C       		.byte	0xc
 2670 057b 0D       		.uleb128 0xd
 2671 057c F3090000 		.4byte	.LASF83
 2672 0580 04       		.byte	0x4
 2673 0581 9202     		.2byte	0x292
 2674 0583 CC050000 		.4byte	0x5cc
 2675 0587 10       		.byte	0x10
 2676 0588 0D       		.uleb128 0xd
 2677 0589 7A0A0000 		.4byte	.LASF84
 2678 058d 04       		.byte	0x4
 2679 058e 9702     		.2byte	0x297
 2680 0590 83000000 		.4byte	0x83
 2681 0594 14       		.byte	0x14
 2682 0595 0D       		.uleb128 0xd
 2683 0596 3F040000 		.4byte	.LASF85
 2684 059a 04       		.byte	0x4
 2685 059b 9E02     		.2byte	0x29e
 2686 059d 77000000 		.4byte	0x77
 2687 05a1 18       		.byte	0x18
 2688 05a2 0D       		.uleb128 0xd
 2689 05a3 FE020000 		.4byte	.LASF86
 2690 05a7 04       		.byte	0x4
 2691 05a8 A502     		.2byte	0x2a5
 2692 05aa 6B000000 		.4byte	0x6b
 2693 05ae 1A       		.byte	0x1a
 2694 05af 0D       		.uleb128 0xd
 2695 05b0 8A050000 		.4byte	.LASF87
 2696 05b4 04       		.byte	0x4
 2697 05b5 AF02     		.2byte	0x2af
 2698 05b7 6B000000 		.4byte	0x6b
 2699 05bb 1B       		.byte	0x1b
 2700 05bc 00       		.byte	0
 2701 05bd 10       		.uleb128 0x10
 2702 05be 04       		.byte	0x4
 2703 05bf C3050000 		.4byte	0x5c3
 2704 05c3 11       		.uleb128 0x11
 2705 05c4 12       		.uleb128 0x12
 2706 05c5 04       		.byte	0x4
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 103


 2707 05c6 10       		.uleb128 0x10
 2708 05c7 04       		.byte	0x4
 2709 05c8 1B030000 		.4byte	0x31b
 2710 05cc 10       		.uleb128 0x10
 2711 05cd 04       		.byte	0x4
 2712 05ce 6B000000 		.4byte	0x6b
 2713 05d2 04       		.uleb128 0x4
 2714 05d3 FB030000 		.4byte	.LASF88
 2715 05d7 04       		.byte	0x4
 2716 05d8 B002     		.2byte	0x2b0
 2717 05da 3E050000 		.4byte	0x53e
 2718 05de 0E       		.uleb128 0xe
 2719 05df 70       		.byte	0x70
 2720 05e0 04       		.byte	0x4
 2721 05e1 B602     		.2byte	0x2b6
 2722 05e3 F5050000 		.4byte	0x5f5
 2723 05e7 0D       		.uleb128 0xd
 2724 05e8 E80C0000 		.4byte	.LASF89
 2725 05ec 04       		.byte	0x4
 2726 05ed BB02     		.2byte	0x2bb
 2727 05ef F5050000 		.4byte	0x5f5
 2728 05f3 00       		.byte	0
 2729 05f4 00       		.byte	0
 2730 05f5 0A       		.uleb128 0xa
 2731 05f6 D2050000 		.4byte	0x5d2
 2732 05fa 05060000 		.4byte	0x605
 2733 05fe 0B       		.uleb128 0xb
 2734 05ff A6010000 		.4byte	0x1a6
 2735 0603 03       		.byte	0x3
 2736 0604 00       		.byte	0
 2737 0605 04       		.uleb128 0x4
 2738 0606 FE050000 		.4byte	.LASF90
 2739 060a 04       		.byte	0x4
 2740 060b BC02     		.2byte	0x2bc
 2741 060d DE050000 		.4byte	0x5de
 2742 0611 0E       		.uleb128 0xe
 2743 0612 14       		.byte	0x14
 2744 0613 04       		.byte	0x4
 2745 0614 C102     		.2byte	0x2c1
 2746 0616 76060000 		.4byte	0x676
 2747 061a 0D       		.uleb128 0xd
 2748 061b B6060000 		.4byte	.LASF69
 2749 061f 04       		.byte	0x4
 2750 0620 C602     		.2byte	0x2c6
 2751 0622 2C050000 		.4byte	0x52c
 2752 0626 00       		.byte	0
 2753 0627 0D       		.uleb128 0xd
 2754 0628 76050000 		.4byte	.LASF70
 2755 062c 04       		.byte	0x4
 2756 062d CB02     		.2byte	0x2cb
 2757 062f 2C050000 		.4byte	0x52c
 2758 0633 04       		.byte	0x4
 2759 0634 0D       		.uleb128 0xd
 2760 0635 9D030000 		.4byte	.LASF71
 2761 0639 04       		.byte	0x4
 2762 063a CF02     		.2byte	0x2cf
 2763 063c 2C050000 		.4byte	0x52c
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 104


 2764 0640 08       		.byte	0x8
 2765 0641 0D       		.uleb128 0xd
 2766 0642 960B0000 		.4byte	.LASF73
 2767 0646 04       		.byte	0x4
 2768 0647 D402     		.2byte	0x2d4
 2769 0649 83000000 		.4byte	0x83
 2770 064d 0C       		.byte	0xc
 2771 064e 0D       		.uleb128 0xd
 2772 064f D7040000 		.4byte	.LASF75
 2773 0653 04       		.byte	0x4
 2774 0654 D902     		.2byte	0x2d9
 2775 0656 6B000000 		.4byte	0x6b
 2776 065a 10       		.byte	0x10
 2777 065b 0D       		.uleb128 0xd
 2778 065c A8090000 		.4byte	.LASF76
 2779 0660 04       		.byte	0x4
 2780 0661 DE02     		.2byte	0x2de
 2781 0663 6B000000 		.4byte	0x6b
 2782 0667 11       		.byte	0x11
 2783 0668 0D       		.uleb128 0xd
 2784 0669 4C020000 		.4byte	.LASF77
 2785 066d 04       		.byte	0x4
 2786 066e E302     		.2byte	0x2e3
 2787 0670 6B000000 		.4byte	0x6b
 2788 0674 12       		.byte	0x12
 2789 0675 00       		.byte	0
 2790 0676 04       		.uleb128 0x4
 2791 0677 480B0000 		.4byte	.LASF91
 2792 067b 04       		.byte	0x4
 2793 067c E402     		.2byte	0x2e4
 2794 067e 11060000 		.4byte	0x611
 2795 0682 02       		.uleb128 0x2
 2796 0683 08       		.byte	0x8
 2797 0684 04       		.byte	0x4
 2798 0685 9A070000 		.4byte	.LASF92
 2799 0689 08       		.uleb128 0x8
 2800 068a 08       		.byte	0x8
 2801 068b 05       		.byte	0x5
 2802 068c CF       		.byte	0xcf
 2803 068d AA060000 		.4byte	0x6aa
 2804 0691 09       		.uleb128 0x9
 2805 0692 2F090000 		.4byte	.LASF93
 2806 0696 05       		.byte	0x5
 2807 0697 D4       		.byte	0xd4
 2808 0698 83000000 		.4byte	0x83
 2809 069c 00       		.byte	0
 2810 069d 09       		.uleb128 0x9
 2811 069e D6060000 		.4byte	.LASF94
 2812 06a2 05       		.byte	0x5
 2813 06a3 D9       		.byte	0xd9
 2814 06a4 83000000 		.4byte	0x83
 2815 06a8 04       		.byte	0x4
 2816 06a9 00       		.byte	0
 2817 06aa 0C       		.uleb128 0xc
 2818 06ab 140A0000 		.4byte	.LASF95
 2819 06af 05       		.byte	0x5
 2820 06b0 DA       		.byte	0xda
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 105


 2821 06b1 89060000 		.4byte	0x689
 2822 06b5 13       		.uleb128 0x13
 2823 06b6 16010000 		.4byte	.LASF119
 2824 06ba 01       		.byte	0x1
 2825 06bb D601     		.2byte	0x1d6
 2826 06bd 01       		.byte	0x1
 2827 06be 14       		.uleb128 0x14
 2828 06bf 04080000 		.4byte	.LASF194
 2829 06c3 01       		.byte	0x1
 2830 06c4 E102     		.2byte	0x2e1
 2831 06c6 01       		.byte	0x1
 2832 06c7 15       		.uleb128 0x15
 2833 06c8 00000000 		.4byte	.LASF112
 2834 06cc 01       		.byte	0x1
 2835 06cd CB       		.byte	0xcb
 2836 06ce 01       		.byte	0x1
 2837 06cf DF060000 		.4byte	0x6df
 2838 06d3 16       		.uleb128 0x16
 2839 06d4 B3080000 		.4byte	.LASF114
 2840 06d8 01       		.byte	0x1
 2841 06d9 CB       		.byte	0xcb
 2842 06da 83000000 		.4byte	0x83
 2843 06de 00       		.byte	0
 2844 06df 17       		.uleb128 0x17
 2845 06e0 E0000000 		.4byte	.LASF102
 2846 06e4 01       		.byte	0x1
 2847 06e5 3901     		.2byte	0x139
 2848 06e7 00000000 		.4byte	.LFB4
 2849 06eb 68000000 		.4byte	.LFE4-.LFB4
 2850 06ef 01       		.uleb128 0x1
 2851 06f0 9C       		.byte	0x9c
 2852 06f1 84070000 		.4byte	0x784
 2853 06f5 18       		.uleb128 0x18
 2854 06f6 900B0000 		.4byte	.LASF107
 2855 06fa 01       		.byte	0x1
 2856 06fb 3901     		.2byte	0x139
 2857 06fd 83000000 		.4byte	0x83
 2858 0701 00000000 		.4byte	.LLST0
 2859 0705 19       		.uleb128 0x19
 2860 0706 07010000 		.4byte	.LASF96
 2861 070a 01       		.byte	0x1
 2862 070b 3B01     		.2byte	0x13b
 2863 070d 6B000000 		.4byte	0x6b
 2864 0711 21000000 		.4byte	.LLST1
 2865 0715 19       		.uleb128 0x19
 2866 0716 03020000 		.4byte	.LASF97
 2867 071a 01       		.byte	0x1
 2868 071b 3D01     		.2byte	0x13d
 2869 071d 83000000 		.4byte	0x83
 2870 0721 34000000 		.4byte	.LLST2
 2871 0725 19       		.uleb128 0x19
 2872 0726 C0030000 		.4byte	.LASF98
 2873 072a 01       		.byte	0x1
 2874 072b 3F01     		.2byte	0x13f
 2875 072d 83000000 		.4byte	0x83
 2876 0731 54000000 		.4byte	.LLST3
 2877 0735 19       		.uleb128 0x19
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 106


 2878 0736 3E030000 		.4byte	.LASF99
 2879 073a 01       		.byte	0x1
 2880 073b 4001     		.2byte	0x140
 2881 073d 83000000 		.4byte	0x83
 2882 0741 73000000 		.4byte	.LLST4
 2883 0745 19       		.uleb128 0x19
 2884 0746 C7040000 		.4byte	.LASF100
 2885 074a 01       		.byte	0x1
 2886 074b 4201     		.2byte	0x142
 2887 074d 83000000 		.4byte	0x83
 2888 0751 92000000 		.4byte	.LLST5
 2889 0755 19       		.uleb128 0x19
 2890 0756 690A0000 		.4byte	.LASF101
 2891 075a 01       		.byte	0x1
 2892 075b 4301     		.2byte	0x143
 2893 075d 83000000 		.4byte	0x83
 2894 0761 D3000000 		.4byte	.LLST6
 2895 0765 1A       		.uleb128 0x1a
 2896 0766 D3010000 		.4byte	.LASF122
 2897 076a 01       		.byte	0x1
 2898 076b 4501     		.2byte	0x145
 2899 076d 84070000 		.4byte	0x784
 2900 0771 1B       		.uleb128 0x1b
 2901 0772 1C000000 		.4byte	.LVL4
 2902 0776 0C140000 		.4byte	0x140c
 2903 077a 1B       		.uleb128 0x1b
 2904 077b 62000000 		.4byte	.LVL20
 2905 077f 17140000 		.4byte	0x1417
 2906 0783 00       		.byte	0
 2907 0784 10       		.uleb128 0x10
 2908 0785 04       		.byte	0x4
 2909 0786 8A070000 		.4byte	0x78a
 2910 078a 1C       		.uleb128 0x1c
 2911 078b 76060000 		.4byte	0x676
 2912 078f 17       		.uleb128 0x17
 2913 0790 92050000 		.4byte	.LASF103
 2914 0794 01       		.byte	0x1
 2915 0795 0301     		.2byte	0x103
 2916 0797 00000000 		.4byte	.LFB2
 2917 079b 0A000000 		.4byte	.LFE2-.LFB2
 2918 079f 01       		.uleb128 0x1
 2919 07a0 9C       		.byte	0x9c
 2920 07a1 B5070000 		.4byte	0x7b5
 2921 07a5 1D       		.uleb128 0x1d
 2922 07a6 08000000 		.4byte	.LVL21
 2923 07aa DF060000 		.4byte	0x6df
 2924 07ae 1E       		.uleb128 0x1e
 2925 07af 01       		.uleb128 0x1
 2926 07b0 50       		.byte	0x50
 2927 07b1 01       		.uleb128 0x1
 2928 07b2 32       		.byte	0x32
 2929 07b3 00       		.byte	0
 2930 07b4 00       		.byte	0
 2931 07b5 17       		.uleb128 0x17
 2932 07b6 F6040000 		.4byte	.LASF104
 2933 07ba 01       		.byte	0x1
 2934 07bb 1601     		.2byte	0x116
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 107


 2935 07bd 00000000 		.4byte	.LFB3
 2936 07c1 0A000000 		.4byte	.LFE3-.LFB3
 2937 07c5 01       		.uleb128 0x1
 2938 07c6 9C       		.byte	0x9c
 2939 07c7 DB070000 		.4byte	0x7db
 2940 07cb 1D       		.uleb128 0x1d
 2941 07cc 08000000 		.4byte	.LVL22
 2942 07d0 DF060000 		.4byte	0x6df
 2943 07d4 1E       		.uleb128 0x1e
 2944 07d5 01       		.uleb128 0x1
 2945 07d6 50       		.byte	0x50
 2946 07d7 01       		.uleb128 0x1
 2947 07d8 30       		.byte	0x30
 2948 07d9 00       		.byte	0
 2949 07da 00       		.byte	0
 2950 07db 17       		.uleb128 0x17
 2951 07dc B7050000 		.4byte	.LASF105
 2952 07e0 01       		.byte	0x1
 2953 07e1 0C02     		.2byte	0x20c
 2954 07e3 00000000 		.4byte	.LFB7
 2955 07e7 68000000 		.4byte	.LFE7-.LFB7
 2956 07eb 01       		.uleb128 0x1
 2957 07ec 9C       		.byte	0x9c
 2958 07ed 53080000 		.4byte	0x853
 2959 07f1 1F       		.uleb128 0x1f
 2960 07f2 B5060000 		.4byte	0x6b5
 2961 07f6 1E000000 		.4byte	.LBB8
 2962 07fa 00000000 		.4byte	.Ldebug_ranges0+0
 2963 07fe 01       		.byte	0x1
 2964 07ff B702     		.2byte	0x2b7
 2965 0801 20       		.uleb128 0x20
 2966 0802 C7060000 		.4byte	0x6c7
 2967 0806 32000000 		.4byte	.LBB12
 2968 080a 18000000 		.4byte	.Ldebug_ranges0+0x18
 2969 080e 01       		.byte	0x1
 2970 080f BE02     		.2byte	0x2be
 2971 0811 1F080000 		.4byte	0x81f
 2972 0815 21       		.uleb128 0x21
 2973 0816 D3060000 		.4byte	0x6d3
 2974 081a FD000000 		.4byte	.LLST7
 2975 081e 00       		.byte	0
 2976 081f 1B       		.uleb128 0x1b
 2977 0820 16000000 		.4byte	.LVL23
 2978 0824 22140000 		.4byte	0x1422
 2979 0828 1B       		.uleb128 0x1b
 2980 0829 1E000000 		.4byte	.LVL24
 2981 082d 8F070000 		.4byte	0x78f
 2982 0831 1D       		.uleb128 0x1d
 2983 0832 32000000 		.4byte	.LVL25
 2984 0836 2D140000 		.4byte	0x142d
 2985 083a 1E       		.uleb128 0x1e
 2986 083b 01       		.uleb128 0x1
 2987 083c 50       		.byte	0x50
 2988 083d 05       		.uleb128 0x5
 2989 083e 0C       		.byte	0xc
 2990 083f 00040240 		.4byte	0x40020400
 2991 0843 1E       		.uleb128 0x1e
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 108


 2992 0844 01       		.uleb128 0x1
 2993 0845 51       		.byte	0x51
 2994 0846 03       		.uleb128 0x3
 2995 0847 0A       		.byte	0xa
 2996 0848 000F     		.2byte	0xf00
 2997 084a 1E       		.uleb128 0x1e
 2998 084b 01       		.uleb128 0x1
 2999 084c 52       		.byte	0x52
 3000 084d 03       		.uleb128 0x3
 3001 084e 0A       		.byte	0xa
 3002 084f 0006     		.2byte	0x600
 3003 0851 00       		.byte	0
 3004 0852 00       		.byte	0
 3005 0853 17       		.uleb128 0x17
 3006 0854 26040000 		.4byte	.LASF106
 3007 0858 01       		.byte	0x1
 3008 0859 1E03     		.2byte	0x31e
 3009 085b 00000000 		.4byte	.LFB9
 3010 085f 54000000 		.4byte	.LFE9-.LFB9
 3011 0863 01       		.uleb128 0x1
 3012 0864 9C       		.byte	0x9c
 3013 0865 CC080000 		.4byte	0x8cc
 3014 0869 18       		.uleb128 0x18
 3015 086a E8010000 		.4byte	.LASF108
 3016 086e 01       		.byte	0x1
 3017 086f 1E03     		.2byte	0x31e
 3018 0871 CC080000 		.4byte	0x8cc
 3019 0875 11010000 		.4byte	.LLST8
 3020 0879 19       		.uleb128 0x19
 3021 087a 07010000 		.4byte	.LASF96
 3022 087e 01       		.byte	0x1
 3023 087f 2003     		.2byte	0x320
 3024 0881 6B000000 		.4byte	0x6b
 3025 0885 3D010000 		.4byte	.LLST9
 3026 0889 19       		.uleb128 0x19
 3027 088a 8B0C0000 		.4byte	.LASF109
 3028 088e 01       		.byte	0x1
 3029 088f 2103     		.2byte	0x321
 3030 0891 83000000 		.4byte	0x83
 3031 0895 50010000 		.4byte	.LLST10
 3032 0899 19       		.uleb128 0x19
 3033 089a 330C0000 		.4byte	.LASF110
 3034 089e 01       		.byte	0x1
 3035 089f 5A03     		.2byte	0x35a
 3036 08a1 83000000 		.4byte	0x83
 3037 08a5 63010000 		.4byte	.LLST11
 3038 08a9 19       		.uleb128 0x19
 3039 08aa 720C0000 		.4byte	.LASF111
 3040 08ae 01       		.byte	0x1
 3041 08af 5B03     		.2byte	0x35b
 3042 08b1 D7080000 		.4byte	0x8d7
 3043 08b5 89010000 		.4byte	.LLST12
 3044 08b9 1B       		.uleb128 0x1b
 3045 08ba 12000000 		.4byte	.LVL29
 3046 08be 0C140000 		.4byte	0x140c
 3047 08c2 1B       		.uleb128 0x1b
 3048 08c3 3C000000 		.4byte	.LVL35
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 109


 3049 08c7 17140000 		.4byte	0x1417
 3050 08cb 00       		.byte	0
 3051 08cc 10       		.uleb128 0x10
 3052 08cd 04       		.byte	0x4
 3053 08ce D2080000 		.4byte	0x8d2
 3054 08d2 1C       		.uleb128 0x1c
 3055 08d3 AD010000 		.4byte	0x1ad
 3056 08d7 10       		.uleb128 0x10
 3057 08d8 04       		.byte	0x4
 3058 08d9 DD080000 		.4byte	0x8dd
 3059 08dd 1C       		.uleb128 0x1c
 3060 08de 6B000000 		.4byte	0x6b
 3061 08e2 22       		.uleb128 0x22
 3062 08e3 6A080000 		.4byte	.LASF113
 3063 08e7 01       		.byte	0x1
 3064 08e8 8D01     		.2byte	0x18d
 3065 08ea 01       		.byte	0x1
 3066 08eb 08090000 		.4byte	0x908
 3067 08ef 23       		.uleb128 0x23
 3068 08f0 F7070000 		.4byte	.LASF34
 3069 08f4 01       		.byte	0x1
 3070 08f5 8D01     		.2byte	0x18d
 3071 08f7 83000000 		.4byte	0x83
 3072 08fb 23       		.uleb128 0x23
 3073 08fc 7D0C0000 		.4byte	.LASF115
 3074 0900 01       		.byte	0x1
 3075 0901 8D01     		.2byte	0x18d
 3076 0903 83000000 		.4byte	0x83
 3077 0907 00       		.byte	0
 3078 0908 17       		.uleb128 0x17
 3079 0909 A6070000 		.4byte	.LASF116
 3080 090d 01       		.byte	0x1
 3081 090e EA03     		.2byte	0x3ea
 3082 0910 00000000 		.4byte	.LFB10
 3083 0914 34000000 		.4byte	.LFE10-.LFB10
 3084 0918 01       		.uleb128 0x1
 3085 0919 9C       		.byte	0x9c
 3086 091a 8B090000 		.4byte	0x98b
 3087 091e 19       		.uleb128 0x19
 3088 091f 7D0C0000 		.4byte	.LASF115
 3089 0923 01       		.byte	0x1
 3090 0924 EC03     		.2byte	0x3ec
 3091 0926 83000000 		.4byte	0x83
 3092 092a BB010000 		.4byte	.LLST13
 3093 092e 19       		.uleb128 0x19
 3094 092f 52020000 		.4byte	.LASF117
 3095 0933 01       		.byte	0x1
 3096 0934 ED03     		.2byte	0x3ed
 3097 0936 83000000 		.4byte	0x83
 3098 093a CE010000 		.4byte	.LLST14
 3099 093e 19       		.uleb128 0x19
 3100 093f 330C0000 		.4byte	.LASF110
 3101 0943 01       		.byte	0x1
 3102 0944 EE03     		.2byte	0x3ee
 3103 0946 83000000 		.4byte	0x83
 3104 094a CE010000 		.4byte	.LLST14
 3105 094e 19       		.uleb128 0x19
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 110


 3106 094f E8010000 		.4byte	.LASF108
 3107 0953 01       		.byte	0x1
 3108 0954 F003     		.2byte	0x3f0
 3109 0956 CC080000 		.4byte	0x8cc
 3110 095a F3010000 		.4byte	.LLST16
 3111 095e 24       		.uleb128 0x24
 3112 095f E2080000 		.4byte	0x8e2
 3113 0963 04000000 		.4byte	.LBB18
 3114 0967 30000000 		.4byte	.Ldebug_ranges0+0x30
 3115 096b 01       		.byte	0x1
 3116 096c 3904     		.2byte	0x439
 3117 096e 21       		.uleb128 0x21
 3118 096f FB080000 		.4byte	0x8fb
 3119 0973 BB010000 		.4byte	.LLST13
 3120 0977 21       		.uleb128 0x21
 3121 0978 EF080000 		.4byte	0x8ef
 3122 097c CE010000 		.4byte	.LLST14
 3123 0980 1B       		.uleb128 0x1b
 3124 0981 24000000 		.4byte	.LVL41
 3125 0985 38140000 		.4byte	0x1438
 3126 0989 00       		.byte	0
 3127 098a 00       		.byte	0
 3128 098b 17       		.uleb128 0x17
 3129 098c 25000000 		.4byte	.LASF118
 3130 0990 01       		.byte	0x1
 3131 0991 5104     		.2byte	0x451
 3132 0993 00000000 		.4byte	.LFB11
 3133 0997 14000000 		.4byte	.LFE11-.LFB11
 3134 099b 01       		.uleb128 0x1
 3135 099c 9C       		.byte	0x9c
 3136 099d B0090000 		.4byte	0x9b0
 3137 09a1 25       		.uleb128 0x25
 3138 09a2 E8010000 		.4byte	.LASF108
 3139 09a6 01       		.byte	0x1
 3140 09a7 5104     		.2byte	0x451
 3141 09a9 CC080000 		.4byte	0x8cc
 3142 09ad 01       		.uleb128 0x1
 3143 09ae 50       		.byte	0x50
 3144 09af 00       		.byte	0
 3145 09b0 13       		.uleb128 0x13
 3146 09b1 32020000 		.4byte	.LASF120
 3147 09b5 01       		.byte	0x1
 3148 09b6 8B0A     		.2byte	0xa8b
 3149 09b8 03       		.byte	0x3
 3150 09b9 22       		.uleb128 0x22
 3151 09ba 22030000 		.4byte	.LASF121
 3152 09be 01       		.byte	0x1
 3153 09bf 130A     		.2byte	0xa13
 3154 09c1 03       		.byte	0x3
 3155 09c2 EB090000 		.4byte	0x9eb
 3156 09c6 1A       		.uleb128 0x1a
 3157 09c7 C2090000 		.4byte	.LASF123
 3158 09cb 01       		.byte	0x1
 3159 09cc 4A0A     		.2byte	0xa4a
 3160 09ce 83000000 		.4byte	0x83
 3161 09d2 1A       		.uleb128 0x1a
 3162 09d3 330C0000 		.4byte	.LASF110
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 111


 3163 09d7 01       		.byte	0x1
 3164 09d8 4B0A     		.2byte	0xa4b
 3165 09da 83000000 		.4byte	0x83
 3166 09de 1A       		.uleb128 0x1a
 3167 09df 5C020000 		.4byte	.LASF124
 3168 09e3 01       		.byte	0x1
 3169 09e4 4C0A     		.2byte	0xa4c
 3170 09e6 83000000 		.4byte	0x83
 3171 09ea 00       		.byte	0
 3172 09eb 13       		.uleb128 0x13
 3173 09ec 8F080000 		.4byte	.LASF125
 3174 09f0 01       		.byte	0x1
 3175 09f1 C509     		.2byte	0x9c5
 3176 09f3 03       		.byte	0x3
 3177 09f4 17       		.uleb128 0x17
 3178 09f5 C9080000 		.4byte	.LASF126
 3179 09f9 01       		.byte	0x1
 3180 09fa 2F05     		.2byte	0x52f
 3181 09fc 00000000 		.4byte	.LFB14
 3182 0a00 B0000000 		.4byte	.LFE14-.LFB14
 3183 0a04 01       		.uleb128 0x1
 3184 0a05 9C       		.byte	0x9c
 3185 0a06 D00A0000 		.4byte	0xad0
 3186 0a0a 26       		.uleb128 0x26
 3187 0a0b 07010000 		.4byte	.LASF96
 3188 0a0f 01       		.byte	0x1
 3189 0a10 3205     		.2byte	0x532
 3190 0a12 6B000000 		.4byte	0x6b
 3191 0a16 02       		.uleb128 0x2
 3192 0a17 91       		.byte	0x91
 3193 0a18 64       		.sleb128 -28
 3194 0a19 20       		.uleb128 0x20
 3195 0a1a EB090000 		.4byte	0x9eb
 3196 0a1e 16000000 		.4byte	.LBB36
 3197 0a22 68000000 		.4byte	.Ldebug_ranges0+0x68
 3198 0a26 01       		.byte	0x1
 3199 0a27 5E05     		.2byte	0x55e
 3200 0a29 370A0000 		.4byte	0xa37
 3201 0a2d 1B       		.uleb128 0x1b
 3202 0a2e 1E000000 		.4byte	.LVL45
 3203 0a32 43140000 		.4byte	0x1443
 3204 0a36 00       		.byte	0
 3205 0a37 20       		.uleb128 0x20
 3206 0a38 B9090000 		.4byte	0x9b9
 3207 0a3c 2E000000 		.4byte	.LBB39
 3208 0a40 80000000 		.4byte	.Ldebug_ranges0+0x80
 3209 0a44 01       		.byte	0x1
 3210 0a45 6105     		.2byte	0x561
 3211 0a47 900A0000 		.4byte	0xa90
 3212 0a4b 27       		.uleb128 0x27
 3213 0a4c 80000000 		.4byte	.Ldebug_ranges0+0x80
 3214 0a50 28       		.uleb128 0x28
 3215 0a51 C6090000 		.4byte	0x9c6
 3216 0a55 06020000 		.4byte	.LLST19
 3217 0a59 28       		.uleb128 0x28
 3218 0a5a D2090000 		.4byte	0x9d2
 3219 0a5e 19020000 		.4byte	.LLST20
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 112


 3220 0a62 28       		.uleb128 0x28
 3221 0a63 DE090000 		.4byte	0x9de
 3222 0a67 52020000 		.4byte	.LLST21
 3223 0a6b 29       		.uleb128 0x29
 3224 0a6c 3A000000 		.4byte	.LVL47
 3225 0a70 4E140000 		.4byte	0x144e
 3226 0a74 7F0A0000 		.4byte	0xa7f
 3227 0a78 1E       		.uleb128 0x1e
 3228 0a79 01       		.uleb128 0x1
 3229 0a7a 50       		.byte	0x50
 3230 0a7b 02       		.uleb128 0x2
 3231 0a7c 08       		.byte	0x8
 3232 0a7d 27       		.byte	0x27
 3233 0a7e 00       		.byte	0
 3234 0a7f 1D       		.uleb128 0x1d
 3235 0a80 66000000 		.4byte	.LVL55
 3236 0a84 59140000 		.4byte	0x1459
 3237 0a88 1E       		.uleb128 0x1e
 3238 0a89 01       		.uleb128 0x1
 3239 0a8a 50       		.byte	0x50
 3240 0a8b 01       		.uleb128 0x1
 3241 0a8c 41       		.byte	0x41
 3242 0a8d 00       		.byte	0
 3243 0a8e 00       		.byte	0
 3244 0a8f 00       		.byte	0
 3245 0a90 1F       		.uleb128 0x1f
 3246 0a91 B0090000 		.4byte	0x9b0
 3247 0a95 6C000000 		.4byte	.LBB44
 3248 0a99 98000000 		.4byte	.Ldebug_ranges0+0x98
 3249 0a9d 01       		.byte	0x1
 3250 0a9e 6905     		.2byte	0x569
 3251 0aa0 1B       		.uleb128 0x1b
 3252 0aa1 06000000 		.4byte	.LVL43
 3253 0aa5 0C140000 		.4byte	0x140c
 3254 0aa9 29       		.uleb128 0x29
 3255 0aaa 6C000000 		.4byte	.LVL56
 3256 0aae 4E140000 		.4byte	0x144e
 3257 0ab2 BD0A0000 		.4byte	0xabd
 3258 0ab6 1E       		.uleb128 0x1e
 3259 0ab7 01       		.uleb128 0x1
 3260 0ab8 50       		.byte	0x50
 3261 0ab9 02       		.uleb128 0x2
 3262 0aba 08       		.byte	0x8
 3263 0abb 6F       		.byte	0x6f
 3264 0abc 00       		.byte	0
 3265 0abd 1D       		.uleb128 0x1d
 3266 0abe 78000000 		.4byte	.LVL57
 3267 0ac2 17140000 		.4byte	0x1417
 3268 0ac6 1E       		.uleb128 0x1e
 3269 0ac7 01       		.uleb128 0x1
 3270 0ac8 50       		.byte	0x50
 3271 0ac9 04       		.uleb128 0x4
 3272 0aca 91       		.byte	0x91
 3273 0acb 64       		.sleb128 -28
 3274 0acc 94       		.byte	0x94
 3275 0acd 01       		.byte	0x1
 3276 0ace 00       		.byte	0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 113


 3277 0acf 00       		.byte	0
 3278 0ad0 17       		.uleb128 0x17
 3279 0ad1 4D090000 		.4byte	.LASF127
 3280 0ad5 01       		.byte	0x1
 3281 0ad6 A005     		.2byte	0x5a0
 3282 0ad8 00000000 		.4byte	.LFB15
 3283 0adc 1C000000 		.4byte	.LFE15-.LFB15
 3284 0ae0 01       		.uleb128 0x1
 3285 0ae1 9C       		.byte	0x9c
 3286 0ae2 F00A0000 		.4byte	0xaf0
 3287 0ae6 1B       		.uleb128 0x1b
 3288 0ae7 10000000 		.4byte	.LVL58
 3289 0aeb F4090000 		.4byte	0x9f4
 3290 0aef 00       		.byte	0
 3291 0af0 17       		.uleb128 0x17
 3292 0af1 6C090000 		.4byte	.LASF128
 3293 0af5 01       		.byte	0x1
 3294 0af6 C506     		.2byte	0x6c5
 3295 0af8 00000000 		.4byte	.LFB19
 3296 0afc 32000000 		.4byte	.LFE19-.LFB19
 3297 0b00 01       		.uleb128 0x1
 3298 0b01 9C       		.byte	0x9c
 3299 0b02 690B0000 		.4byte	0xb69
 3300 0b06 18       		.uleb128 0x18
 3301 0b07 1A000000 		.4byte	.LASF129
 3302 0b0b 01       		.byte	0x1
 3303 0b0c C506     		.2byte	0x6c5
 3304 0b0e 690B0000 		.4byte	0xb69
 3305 0b12 7F020000 		.4byte	.LLST22
 3306 0b16 19       		.uleb128 0x19
 3307 0b17 56030000 		.4byte	.LASF130
 3308 0b1b 01       		.byte	0x1
 3309 0b1c C706     		.2byte	0x6c7
 3310 0b1e 83000000 		.4byte	0x83
 3311 0b22 AB020000 		.4byte	.LLST23
 3312 0b26 19       		.uleb128 0x19
 3313 0b27 07010000 		.4byte	.LASF96
 3314 0b2b 01       		.byte	0x1
 3315 0b2c C806     		.2byte	0x6c8
 3316 0b2e 6B000000 		.4byte	0x6b
 3317 0b32 D4020000 		.4byte	.LLST24
 3318 0b36 19       		.uleb128 0x19
 3319 0b37 7D010000 		.4byte	.LASF131
 3320 0b3b 01       		.byte	0x1
 3321 0b3c C906     		.2byte	0x6c9
 3322 0b3e 83000000 		.4byte	0x83
 3323 0b42 E7020000 		.4byte	.LLST25
 3324 0b46 19       		.uleb128 0x19
 3325 0b47 30010000 		.4byte	.LASF132
 3326 0b4b 01       		.byte	0x1
 3327 0b4c CA06     		.2byte	0x6ca
 3328 0b4e 83000000 		.4byte	0x83
 3329 0b52 FA020000 		.4byte	.LLST26
 3330 0b56 1B       		.uleb128 0x1b
 3331 0b57 0C000000 		.4byte	.LVL61
 3332 0b5b 0C140000 		.4byte	0x140c
 3333 0b5f 1B       		.uleb128 0x1b
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 114


 3334 0b60 30000000 		.4byte	.LVL67
 3335 0b64 17140000 		.4byte	0x1417
 3336 0b68 00       		.byte	0
 3337 0b69 10       		.uleb128 0x10
 3338 0b6a 04       		.byte	0x4
 3339 0b6b 6F0B0000 		.4byte	0xb6f
 3340 0b6f 1C       		.uleb128 0x1c
 3341 0b70 32050000 		.4byte	0x532
 3342 0b74 17       		.uleb128 0x17
 3343 0b75 620B0000 		.4byte	.LASF133
 3344 0b79 01       		.byte	0x1
 3345 0b7a E305     		.2byte	0x5e3
 3346 0b7c 00000000 		.4byte	.LFB16
 3347 0b80 8C000000 		.4byte	.LFE16-.LFB16
 3348 0b84 01       		.uleb128 0x1
 3349 0b85 9C       		.byte	0x9c
 3350 0b86 D40B0000 		.4byte	0xbd4
 3351 0b8a 19       		.uleb128 0x19
 3352 0b8b E8010000 		.4byte	.LASF108
 3353 0b8f 01       		.byte	0x1
 3354 0b90 E505     		.2byte	0x5e5
 3355 0b92 CC080000 		.4byte	0x8cc
 3356 0b96 0D030000 		.4byte	.LLST27
 3357 0b9a 1B       		.uleb128 0x1b
 3358 0b9b 26000000 		.4byte	.LVL72
 3359 0b9f 22140000 		.4byte	0x1422
 3360 0ba3 29       		.uleb128 0x29
 3361 0ba4 4E000000 		.4byte	.LVL73
 3362 0ba8 53080000 		.4byte	0x853
 3363 0bac B80B0000 		.4byte	0xbb8
 3364 0bb0 1E       		.uleb128 0x1e
 3365 0bb1 01       		.uleb128 0x1
 3366 0bb2 50       		.byte	0x50
 3367 0bb3 03       		.uleb128 0x3
 3368 0bb4 91       		.byte	0x91
 3369 0bb5 64       		.sleb128 -28
 3370 0bb6 06       		.byte	0x6
 3371 0bb7 00       		.byte	0
 3372 0bb8 1B       		.uleb128 0x1b
 3373 0bb9 62000000 		.4byte	.LVL74
 3374 0bbd F00A0000 		.4byte	0xaf0
 3375 0bc1 1B       		.uleb128 0x1b
 3376 0bc2 68000000 		.4byte	.LVL75
 3377 0bc6 64140000 		.4byte	0x1464
 3378 0bca 1B       		.uleb128 0x1b
 3379 0bcb 6C000000 		.4byte	.LVL76
 3380 0bcf D00A0000 		.4byte	0xad0
 3381 0bd3 00       		.byte	0
 3382 0bd4 17       		.uleb128 0x17
 3383 0bd5 0D020000 		.4byte	.LASF134
 3384 0bd9 01       		.byte	0x1
 3385 0bda 3606     		.2byte	0x636
 3386 0bdc 00000000 		.4byte	.LFB17
 3387 0be0 24000000 		.4byte	.LFE17-.LFB17
 3388 0be4 01       		.uleb128 0x1
 3389 0be5 9C       		.byte	0x9c
 3390 0be6 140C0000 		.4byte	0xc14
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 115


 3391 0bea 18       		.uleb128 0x18
 3392 0beb 9D0C0000 		.4byte	.LASF135
 3393 0bef 01       		.byte	0x1
 3394 0bf0 3606     		.2byte	0x636
 3395 0bf2 83000000 		.4byte	0x83
 3396 0bf6 2C030000 		.4byte	.LLST28
 3397 0bfa 18       		.uleb128 0x18
 3398 0bfb DF010000 		.4byte	.LASF136
 3399 0bff 01       		.byte	0x1
 3400 0c00 3606     		.2byte	0x636
 3401 0c02 83000000 		.4byte	0x83
 3402 0c06 4D030000 		.4byte	.LLST29
 3403 0c0a 1B       		.uleb128 0x1b
 3404 0c0b 18000000 		.4byte	.LVL80
 3405 0c0f F00A0000 		.4byte	0xaf0
 3406 0c13 00       		.byte	0
 3407 0c14 17       		.uleb128 0x17
 3408 0c15 50080000 		.4byte	.LASF137
 3409 0c19 01       		.byte	0x1
 3410 0c1a F906     		.2byte	0x6f9
 3411 0c1c 00000000 		.4byte	.LFB20
 3412 0c20 70000000 		.4byte	.LFE20-.LFB20
 3413 0c24 01       		.uleb128 0x1
 3414 0c25 9C       		.byte	0x9c
 3415 0c26 A50C0000 		.4byte	0xca5
 3416 0c2a 18       		.uleb128 0x18
 3417 0c2b 1A000000 		.4byte	.LASF129
 3418 0c2f 01       		.byte	0x1
 3419 0c30 F906     		.2byte	0x6f9
 3420 0c32 690B0000 		.4byte	0xb69
 3421 0c36 6E030000 		.4byte	.LLST30
 3422 0c3a 26       		.uleb128 0x26
 3423 0c3b 07010000 		.4byte	.LASF96
 3424 0c3f 01       		.byte	0x1
 3425 0c40 FB06     		.2byte	0x6fb
 3426 0c42 6B000000 		.4byte	0x6b
 3427 0c46 02       		.uleb128 0x2
 3428 0c47 91       		.byte	0x91
 3429 0c48 64       		.sleb128 -28
 3430 0c49 19       		.uleb128 0x19
 3431 0c4a 30010000 		.4byte	.LASF132
 3432 0c4e 01       		.byte	0x1
 3433 0c4f FC06     		.2byte	0x6fc
 3434 0c51 83000000 		.4byte	0x83
 3435 0c55 9A030000 		.4byte	.LLST31
 3436 0c59 19       		.uleb128 0x19
 3437 0c5a 7D010000 		.4byte	.LASF131
 3438 0c5e 01       		.byte	0x1
 3439 0c5f FD06     		.2byte	0x6fd
 3440 0c61 83000000 		.4byte	0x83
 3441 0c65 AD030000 		.4byte	.LLST32
 3442 0c69 19       		.uleb128 0x19
 3443 0c6a A60C0000 		.4byte	.LASF138
 3444 0c6e 01       		.byte	0x1
 3445 0c6f FE06     		.2byte	0x6fe
 3446 0c71 83000000 		.4byte	0x83
 3447 0c75 C0030000 		.4byte	.LLST33
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 116


 3448 0c79 19       		.uleb128 0x19
 3449 0c7a 2B080000 		.4byte	.LASF139
 3450 0c7e 01       		.byte	0x1
 3451 0c7f FF06     		.2byte	0x6ff
 3452 0c81 83000000 		.4byte	0x83
 3453 0c85 F4030000 		.4byte	.LLST34
 3454 0c89 1B       		.uleb128 0x1b
 3455 0c8a 10000000 		.4byte	.LVL83
 3456 0c8e 0C140000 		.4byte	0x140c
 3457 0c92 1D       		.uleb128 0x1d
 3458 0c93 68000000 		.4byte	.LVL100
 3459 0c97 17140000 		.4byte	0x1417
 3460 0c9b 1E       		.uleb128 0x1e
 3461 0c9c 01       		.uleb128 0x1
 3462 0c9d 50       		.byte	0x50
 3463 0c9e 04       		.uleb128 0x4
 3464 0c9f 91       		.byte	0x91
 3465 0ca0 64       		.sleb128 -28
 3466 0ca1 94       		.byte	0x94
 3467 0ca2 01       		.byte	0x1
 3468 0ca3 00       		.byte	0
 3469 0ca4 00       		.byte	0
 3470 0ca5 2A       		.uleb128 0x2a
 3471 0ca6 BE060000 		.4byte	0x6be
 3472 0caa 00000000 		.4byte	.LFB8
 3473 0cae 20000000 		.4byte	.LFE8-.LFB8
 3474 0cb2 01       		.uleb128 0x1
 3475 0cb3 9C       		.byte	0x9c
 3476 0cb4 C20C0000 		.4byte	0xcc2
 3477 0cb8 1B       		.uleb128 0x1b
 3478 0cb9 12000000 		.4byte	.LVL102
 3479 0cbd 140C0000 		.4byte	0xc14
 3480 0cc1 00       		.byte	0
 3481 0cc2 17       		.uleb128 0x17
 3482 0cc3 6C020000 		.4byte	.LASF140
 3483 0cc7 01       		.byte	0x1
 3484 0cc8 9B04     		.2byte	0x49b
 3485 0cca 00000000 		.4byte	.LFB12
 3486 0cce 58000000 		.4byte	.LFE12-.LFB12
 3487 0cd2 01       		.uleb128 0x1
 3488 0cd3 9C       		.byte	0x9c
 3489 0cd4 320D0000 		.4byte	0xd32
 3490 0cd8 18       		.uleb128 0x18
 3491 0cd9 9D0C0000 		.4byte	.LASF135
 3492 0cdd 01       		.byte	0x1
 3493 0cde 9B04     		.2byte	0x49b
 3494 0ce0 83000000 		.4byte	0x83
 3495 0ce4 3F040000 		.4byte	.LLST35
 3496 0ce8 19       		.uleb128 0x19
 3497 0ce9 E8010000 		.4byte	.LASF108
 3498 0ced 01       		.byte	0x1
 3499 0cee 9D04     		.2byte	0x49d
 3500 0cf0 CC080000 		.4byte	0x8cc
 3501 0cf4 60040000 		.4byte	.LLST36
 3502 0cf8 29       		.uleb128 0x29
 3503 0cf9 1A000000 		.4byte	.LVL106
 3504 0cfd 6F140000 		.4byte	0x146f
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 117


 3505 0d01 0B0D0000 		.4byte	0xd0b
 3506 0d05 1E       		.uleb128 0x1e
 3507 0d06 01       		.uleb128 0x1
 3508 0d07 50       		.byte	0x50
 3509 0d08 01       		.uleb128 0x1
 3510 0d09 31       		.byte	0x31
 3511 0d0a 00       		.byte	0
 3512 0d0b 1B       		.uleb128 0x1b
 3513 0d0c 1E000000 		.4byte	.LVL107
 3514 0d10 BE060000 		.4byte	0x6be
 3515 0d14 29       		.uleb128 0x29
 3516 0d15 40000000 		.4byte	.LVL108
 3517 0d19 8B090000 		.4byte	0x98b
 3518 0d1d 280D0000 		.4byte	0xd28
 3519 0d21 1E       		.uleb128 0x1e
 3520 0d22 01       		.uleb128 0x1
 3521 0d23 50       		.byte	0x50
 3522 0d24 02       		.uleb128 0x2
 3523 0d25 76       		.byte	0x76
 3524 0d26 00       		.sleb128 0
 3525 0d27 00       		.byte	0
 3526 0d28 1B       		.uleb128 0x1b
 3527 0d29 44000000 		.4byte	.LVL109
 3528 0d2d 08090000 		.4byte	0x908
 3529 0d31 00       		.byte	0
 3530 0d32 17       		.uleb128 0x17
 3531 0d33 07030000 		.4byte	.LASF141
 3532 0d37 01       		.byte	0x1
 3533 0d38 F104     		.2byte	0x4f1
 3534 0d3a 00000000 		.4byte	.LFB13
 3535 0d3e 64000000 		.4byte	.LFE13-.LFB13
 3536 0d42 01       		.uleb128 0x1
 3537 0d43 9C       		.byte	0x9c
 3538 0d44 B40D0000 		.4byte	0xdb4
 3539 0d48 18       		.uleb128 0x18
 3540 0d49 9D0C0000 		.4byte	.LASF135
 3541 0d4d 01       		.byte	0x1
 3542 0d4e F104     		.2byte	0x4f1
 3543 0d50 83000000 		.4byte	0x83
 3544 0d54 87040000 		.4byte	.LLST37
 3545 0d58 18       		.uleb128 0x18
 3546 0d59 DF010000 		.4byte	.LASF136
 3547 0d5d 01       		.byte	0x1
 3548 0d5e F104     		.2byte	0x4f1
 3549 0d60 83000000 		.4byte	0x83
 3550 0d64 A8040000 		.4byte	.LLST38
 3551 0d68 19       		.uleb128 0x19
 3552 0d69 E8010000 		.4byte	.LASF108
 3553 0d6d 01       		.byte	0x1
 3554 0d6e F304     		.2byte	0x4f3
 3555 0d70 CC080000 		.4byte	0x8cc
 3556 0d74 C9040000 		.4byte	.LLST39
 3557 0d78 29       		.uleb128 0x29
 3558 0d79 26000000 		.4byte	.LVL115
 3559 0d7d C20C0000 		.4byte	0xcc2
 3560 0d81 8D0D0000 		.4byte	0xd8d
 3561 0d85 1E       		.uleb128 0x1e
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 118


 3562 0d86 01       		.uleb128 0x1
 3563 0d87 50       		.byte	0x50
 3564 0d88 03       		.uleb128 0x3
 3565 0d89 F3       		.byte	0xf3
 3566 0d8a 01       		.uleb128 0x1
 3567 0d8b 50       		.byte	0x50
 3568 0d8c 00       		.byte	0
 3569 0d8d 29       		.uleb128 0x29
 3570 0d8e 2C000000 		.4byte	.LVL116
 3571 0d92 53080000 		.4byte	0x853
 3572 0d96 A10D0000 		.4byte	0xda1
 3573 0d9a 1E       		.uleb128 0x1e
 3574 0d9b 01       		.uleb128 0x1
 3575 0d9c 50       		.byte	0x50
 3576 0d9d 02       		.uleb128 0x2
 3577 0d9e 76       		.byte	0x76
 3578 0d9f 00       		.sleb128 0
 3579 0da0 00       		.byte	0
 3580 0da1 1B       		.uleb128 0x1b
 3581 0da2 3C000000 		.4byte	.LVL117
 3582 0da6 F00A0000 		.4byte	0xaf0
 3583 0daa 1B       		.uleb128 0x1b
 3584 0dab 48000000 		.4byte	.LVL118
 3585 0daf 64140000 		.4byte	0x1464
 3586 0db3 00       		.byte	0
 3587 0db4 17       		.uleb128 0x17
 3588 0db5 4B040000 		.4byte	.LASF142
 3589 0db9 01       		.byte	0x1
 3590 0dba 7C06     		.2byte	0x67c
 3591 0dbc 00000000 		.4byte	.LFB18
 3592 0dc0 24000000 		.4byte	.LFE18-.LFB18
 3593 0dc4 01       		.uleb128 0x1
 3594 0dc5 9C       		.byte	0x9c
 3595 0dc6 F40D0000 		.4byte	0xdf4
 3596 0dca 18       		.uleb128 0x18
 3597 0dcb 9D0C0000 		.4byte	.LASF135
 3598 0dcf 01       		.byte	0x1
 3599 0dd0 7C06     		.2byte	0x67c
 3600 0dd2 83000000 		.4byte	0x83
 3601 0dd6 DC040000 		.4byte	.LLST40
 3602 0dda 18       		.uleb128 0x18
 3603 0ddb DF010000 		.4byte	.LASF136
 3604 0ddf 01       		.byte	0x1
 3605 0de0 7C06     		.2byte	0x67c
 3606 0de2 83000000 		.4byte	0x83
 3607 0de6 FD040000 		.4byte	.LLST41
 3608 0dea 1B       		.uleb128 0x1b
 3609 0deb 18000000 		.4byte	.LVL123
 3610 0def 140C0000 		.4byte	0xc14
 3611 0df3 00       		.byte	0
 3612 0df4 2B       		.uleb128 0x2b
 3613 0df5 D6090000 		.4byte	.LASF162
 3614 0df9 01       		.byte	0x1
 3615 0dfa 8007     		.2byte	0x780
 3616 0dfc 83000000 		.4byte	0x83
 3617 0e00 01       		.byte	0x1
 3618 0e01 7E0E0000 		.4byte	0xe7e
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 119


 3619 0e05 23       		.uleb128 0x23
 3620 0e06 E6050000 		.4byte	.LASF143
 3621 0e0a 01       		.byte	0x1
 3622 0e0b 8007     		.2byte	0x780
 3623 0e0d 7E0E0000 		.4byte	0xe7e
 3624 0e11 1A       		.uleb128 0x1a
 3625 0e12 C7000000 		.4byte	.LASF144
 3626 0e16 01       		.byte	0x1
 3627 0e17 8207     		.2byte	0x782
 3628 0e19 83000000 		.4byte	0x83
 3629 0e1d 1A       		.uleb128 0x1a
 3630 0e1e CB010000 		.4byte	.LASF145
 3631 0e22 01       		.byte	0x1
 3632 0e23 8307     		.2byte	0x783
 3633 0e25 83000000 		.4byte	0x83
 3634 0e29 1A       		.uleb128 0x1a
 3635 0e2a 6A040000 		.4byte	.LASF146
 3636 0e2e 01       		.byte	0x1
 3637 0e2f 8407     		.2byte	0x784
 3638 0e31 83000000 		.4byte	0x83
 3639 0e35 1A       		.uleb128 0x1a
 3640 0e36 27050000 		.4byte	.LASF54
 3641 0e3a 01       		.byte	0x1
 3642 0e3b 8507     		.2byte	0x785
 3643 0e3d 83000000 		.4byte	0x83
 3644 0e41 1A       		.uleb128 0x1a
 3645 0e42 AA060000 		.4byte	.LASF147
 3646 0e46 01       		.byte	0x1
 3647 0e47 8607     		.2byte	0x786
 3648 0e49 83000000 		.4byte	0x83
 3649 0e4d 1A       		.uleb128 0x1a
 3650 0e4e 72040000 		.4byte	.LASF148
 3651 0e52 01       		.byte	0x1
 3652 0e53 8707     		.2byte	0x787
 3653 0e55 83000000 		.4byte	0x83
 3654 0e59 1A       		.uleb128 0x1a
 3655 0e5a 89030000 		.4byte	.LASF149
 3656 0e5e 01       		.byte	0x1
 3657 0e5f 8907     		.2byte	0x789
 3658 0e61 890E0000 		.4byte	0xe89
 3659 0e65 1A       		.uleb128 0x1a
 3660 0e66 8A010000 		.4byte	.LASF150
 3661 0e6a 01       		.byte	0x1
 3662 0e6b 8B07     		.2byte	0x78b
 3663 0e6d 83000000 		.4byte	0x83
 3664 0e71 1A       		.uleb128 0x1a
 3665 0e72 E9040000 		.4byte	.LASF151
 3666 0e76 01       		.byte	0x1
 3667 0e77 8C07     		.2byte	0x78c
 3668 0e79 C6050000 		.4byte	0x5c6
 3669 0e7d 00       		.byte	0
 3670 0e7e 10       		.uleb128 0x10
 3671 0e7f 04       		.byte	0x4
 3672 0e80 840E0000 		.4byte	0xe84
 3673 0e84 1C       		.uleb128 0x1c
 3674 0e85 D2050000 		.4byte	0x5d2
 3675 0e89 10       		.uleb128 0x10
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 120


 3676 0e8a 04       		.byte	0x4
 3677 0e8b AD010000 		.4byte	0x1ad
 3678 0e8f 22       		.uleb128 0x22
 3679 0e90 5A0C0000 		.4byte	.LASF152
 3680 0e94 01       		.byte	0x1
 3681 0e95 7E08     		.2byte	0x87e
 3682 0e97 01       		.byte	0x1
 3683 0e98 390F0000 		.4byte	0xf39
 3684 0e9c 23       		.uleb128 0x23
 3685 0e9d 9D0C0000 		.4byte	.LASF135
 3686 0ea1 01       		.byte	0x1
 3687 0ea2 7E08     		.2byte	0x87e
 3688 0ea4 83000000 		.4byte	0x83
 3689 0ea8 23       		.uleb128 0x23
 3690 0ea9 96030000 		.4byte	.LASF153
 3691 0ead 01       		.byte	0x1
 3692 0eae 7E08     		.2byte	0x87e
 3693 0eb0 83000000 		.4byte	0x83
 3694 0eb4 1A       		.uleb128 0x1a
 3695 0eb5 8A010000 		.4byte	.LASF150
 3696 0eb9 01       		.byte	0x1
 3697 0eba 8008     		.2byte	0x880
 3698 0ebc 83000000 		.4byte	0x83
 3699 0ec0 1A       		.uleb128 0x1a
 3700 0ec1 AA060000 		.4byte	.LASF147
 3701 0ec5 01       		.byte	0x1
 3702 0ec6 8108     		.2byte	0x881
 3703 0ec8 83000000 		.4byte	0x83
 3704 0ecc 1A       		.uleb128 0x1a
 3705 0ecd F6020000 		.4byte	.LASF154
 3706 0ed1 01       		.byte	0x1
 3707 0ed2 8208     		.2byte	0x882
 3708 0ed4 83000000 		.4byte	0x83
 3709 0ed8 1A       		.uleb128 0x1a
 3710 0ed9 EC080000 		.4byte	.LASF155
 3711 0edd 01       		.byte	0x1
 3712 0ede 8308     		.2byte	0x883
 3713 0ee0 83000000 		.4byte	0x83
 3714 0ee4 1A       		.uleb128 0x1a
 3715 0ee5 5C020000 		.4byte	.LASF124
 3716 0ee9 01       		.byte	0x1
 3717 0eea 8408     		.2byte	0x884
 3718 0eec 83000000 		.4byte	0x83
 3719 0ef0 1A       		.uleb128 0x1a
 3720 0ef1 720C0000 		.4byte	.LASF111
 3721 0ef5 01       		.byte	0x1
 3722 0ef6 8608     		.2byte	0x886
 3723 0ef8 CC050000 		.4byte	0x5cc
 3724 0efc 1A       		.uleb128 0x1a
 3725 0efd 37070000 		.4byte	.LASF156
 3726 0f01 01       		.byte	0x1
 3727 0f02 8708     		.2byte	0x887
 3728 0f04 CC050000 		.4byte	0x5cc
 3729 0f08 1A       		.uleb128 0x1a
 3730 0f09 CB010000 		.4byte	.LASF145
 3731 0f0d 01       		.byte	0x1
 3732 0f0e 8908     		.2byte	0x889
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 121


 3733 0f10 96010000 		.4byte	0x196
 3734 0f14 1A       		.uleb128 0x1a
 3735 0f15 E9040000 		.4byte	.LASF151
 3736 0f19 01       		.byte	0x1
 3737 0f1a 9008     		.2byte	0x890
 3738 0f1c C6050000 		.4byte	0x5c6
 3739 0f20 1A       		.uleb128 0x1a
 3740 0f21 E6050000 		.4byte	.LASF143
 3741 0f25 01       		.byte	0x1
 3742 0f26 9108     		.2byte	0x891
 3743 0f28 7E0E0000 		.4byte	0xe7e
 3744 0f2c 1A       		.uleb128 0x1a
 3745 0f2d 89030000 		.4byte	.LASF149
 3746 0f31 01       		.byte	0x1
 3747 0f32 9208     		.2byte	0x892
 3748 0f34 890E0000 		.4byte	0xe89
 3749 0f38 00       		.byte	0
 3750 0f39 22       		.uleb128 0x22
 3751 0f3a 93010000 		.4byte	.LASF157
 3752 0f3e 01       		.byte	0x1
 3753 0f3f E207     		.2byte	0x7e2
 3754 0f41 01       		.byte	0x1
 3755 0f42 D70F0000 		.4byte	0xfd7
 3756 0f46 23       		.uleb128 0x23
 3757 0f47 E6050000 		.4byte	.LASF143
 3758 0f4b 01       		.byte	0x1
 3759 0f4c E207     		.2byte	0x7e2
 3760 0f4e 7E0E0000 		.4byte	0xe7e
 3761 0f52 23       		.uleb128 0x23
 3762 0f53 96030000 		.4byte	.LASF153
 3763 0f57 01       		.byte	0x1
 3764 0f58 E207     		.2byte	0x7e2
 3765 0f5a 83000000 		.4byte	0x83
 3766 0f5e 1A       		.uleb128 0x1a
 3767 0f5f 8A010000 		.4byte	.LASF150
 3768 0f63 01       		.byte	0x1
 3769 0f64 E407     		.2byte	0x7e4
 3770 0f66 83000000 		.4byte	0x83
 3771 0f6a 1A       		.uleb128 0x1a
 3772 0f6b AA060000 		.4byte	.LASF147
 3773 0f6f 01       		.byte	0x1
 3774 0f70 E507     		.2byte	0x7e5
 3775 0f72 83000000 		.4byte	0x83
 3776 0f76 1A       		.uleb128 0x1a
 3777 0f77 CB010000 		.4byte	.LASF145
 3778 0f7b 01       		.byte	0x1
 3779 0f7c E607     		.2byte	0x7e6
 3780 0f7e 83000000 		.4byte	0x83
 3781 0f82 1A       		.uleb128 0x1a
 3782 0f83 6A040000 		.4byte	.LASF146
 3783 0f87 01       		.byte	0x1
 3784 0f88 E707     		.2byte	0x7e7
 3785 0f8a 83000000 		.4byte	0x83
 3786 0f8e 1A       		.uleb128 0x1a
 3787 0f8f 1F040000 		.4byte	.LASF158
 3788 0f93 01       		.byte	0x1
 3789 0f94 E807     		.2byte	0x7e8
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 122


 3790 0f96 83000000 		.4byte	0x83
 3791 0f9a 1A       		.uleb128 0x1a
 3792 0f9b 42070000 		.4byte	.LASF159
 3793 0f9f 01       		.byte	0x1
 3794 0fa0 E907     		.2byte	0x7e9
 3795 0fa2 83000000 		.4byte	0x83
 3796 0fa6 1A       		.uleb128 0x1a
 3797 0fa7 D7030000 		.4byte	.LASF160
 3798 0fab 01       		.byte	0x1
 3799 0fac EA07     		.2byte	0x7ea
 3800 0fae 83000000 		.4byte	0x83
 3801 0fb2 1A       		.uleb128 0x1a
 3802 0fb3 99000000 		.4byte	.LASF161
 3803 0fb7 01       		.byte	0x1
 3804 0fb8 EB07     		.2byte	0x7eb
 3805 0fba 83000000 		.4byte	0x83
 3806 0fbe 1A       		.uleb128 0x1a
 3807 0fbf 89030000 		.4byte	.LASF149
 3808 0fc3 01       		.byte	0x1
 3809 0fc4 ED07     		.2byte	0x7ed
 3810 0fc6 890E0000 		.4byte	0xe89
 3811 0fca 1A       		.uleb128 0x1a
 3812 0fcb E9040000 		.4byte	.LASF151
 3813 0fcf 01       		.byte	0x1
 3814 0fd0 EE07     		.2byte	0x7ee
 3815 0fd2 C6050000 		.4byte	0x5c6
 3816 0fd6 00       		.byte	0
 3817 0fd7 2B       		.uleb128 0x2b
 3818 0fd8 71060000 		.4byte	.LASF163
 3819 0fdc 01       		.byte	0x1
 3820 0fdd 3B07     		.2byte	0x73b
 3821 0fdf A4000000 		.4byte	0xa4
 3822 0fe3 01       		.byte	0x1
 3823 0fe4 6D100000 		.4byte	0x106d
 3824 0fe8 23       		.uleb128 0x23
 3825 0fe9 9D0C0000 		.4byte	.LASF135
 3826 0fed 01       		.byte	0x1
 3827 0fee 3B07     		.2byte	0x73b
 3828 0ff0 83000000 		.4byte	0x83
 3829 0ff4 23       		.uleb128 0x23
 3830 0ff5 96030000 		.4byte	.LASF153
 3831 0ff9 01       		.byte	0x1
 3832 0ffa 3B07     		.2byte	0x73b
 3833 0ffc 83000000 		.4byte	0x83
 3834 1000 1A       		.uleb128 0x1a
 3835 1001 AB000000 		.4byte	.LASF164
 3836 1005 01       		.byte	0x1
 3837 1006 3D07     		.2byte	0x73d
 3838 1008 A4000000 		.4byte	0xa4
 3839 100c 1A       		.uleb128 0x1a
 3840 100d 4D030000 		.4byte	.LASF165
 3841 1011 01       		.byte	0x1
 3842 1012 3E07     		.2byte	0x73e
 3843 1014 83000000 		.4byte	0x83
 3844 1018 1A       		.uleb128 0x1a
 3845 1019 8A010000 		.4byte	.LASF150
 3846 101d 01       		.byte	0x1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 123


 3847 101e 3F07     		.2byte	0x73f
 3848 1020 83000000 		.4byte	0x83
 3849 1024 1A       		.uleb128 0x1a
 3850 1025 AA060000 		.4byte	.LASF147
 3851 1029 01       		.byte	0x1
 3852 102a 4007     		.2byte	0x740
 3853 102c 83000000 		.4byte	0x83
 3854 1030 1A       		.uleb128 0x1a
 3855 1031 DB050000 		.4byte	.LASF166
 3856 1035 01       		.byte	0x1
 3857 1036 4107     		.2byte	0x741
 3858 1038 83000000 		.4byte	0x83
 3859 103c 1A       		.uleb128 0x1a
 3860 103d 2C070000 		.4byte	.LASF167
 3861 1041 01       		.byte	0x1
 3862 1042 4207     		.2byte	0x742
 3863 1044 83000000 		.4byte	0x83
 3864 1048 1A       		.uleb128 0x1a
 3865 1049 E6050000 		.4byte	.LASF143
 3866 104d 01       		.byte	0x1
 3867 104e 4407     		.2byte	0x744
 3868 1050 7E0E0000 		.4byte	0xe7e
 3869 1054 1A       		.uleb128 0x1a
 3870 1055 89030000 		.4byte	.LASF149
 3871 1059 01       		.byte	0x1
 3872 105a 4507     		.2byte	0x745
 3873 105c 890E0000 		.4byte	0xe89
 3874 1060 1A       		.uleb128 0x1a
 3875 1061 E9040000 		.4byte	.LASF151
 3876 1065 01       		.byte	0x1
 3877 1066 4607     		.2byte	0x746
 3878 1068 C6050000 		.4byte	0x5c6
 3879 106c 00       		.byte	0
 3880 106d 2C       		.uleb128 0x2c
 3881 106e 13090000 		.4byte	.LASF195
 3882 1072 01       		.byte	0x1
 3883 1073 7009     		.2byte	0x970
 3884 1075 A4000000 		.4byte	0xa4
 3885 1079 00000000 		.4byte	.LFB25
 3886 107d 7C020000 		.4byte	.LFE25-.LFB25
 3887 1081 01       		.uleb128 0x1
 3888 1082 9C       		.byte	0x9c
 3889 1083 3F130000 		.4byte	0x133f
 3890 1087 18       		.uleb128 0x18
 3891 1088 9D0C0000 		.4byte	.LASF135
 3892 108c 01       		.byte	0x1
 3893 108d 7009     		.2byte	0x970
 3894 108f 83000000 		.4byte	0x83
 3895 1093 1E050000 		.4byte	.LLST42
 3896 1097 18       		.uleb128 0x18
 3897 1098 96030000 		.4byte	.LASF153
 3898 109c 01       		.byte	0x1
 3899 109d 7009     		.2byte	0x970
 3900 109f 83000000 		.4byte	0x83
 3901 10a3 3D050000 		.4byte	.LLST43
 3902 10a7 2D       		.uleb128 0x2d
 3903 10a8 AB000000 		.4byte	.LASF164
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 124


 3904 10ac 01       		.byte	0x1
 3905 10ad 7209     		.2byte	0x972
 3906 10af A4000000 		.4byte	0xa4
 3907 10b3 00       		.byte	0
 3908 10b4 19       		.uleb128 0x19
 3909 10b5 5C020000 		.4byte	.LASF124
 3910 10b9 01       		.byte	0x1
 3911 10ba 7309     		.2byte	0x973
 3912 10bc 83000000 		.4byte	0x83
 3913 10c0 5C050000 		.4byte	.LLST44
 3914 10c4 1A       		.uleb128 0x1a
 3915 10c5 B30B0000 		.4byte	.LASF168
 3916 10c9 01       		.byte	0x1
 3917 10ca 7609     		.2byte	0x976
 3918 10cc 83000000 		.4byte	0x83
 3919 10d0 1A       		.uleb128 0x1a
 3920 10d1 E6050000 		.4byte	.LASF143
 3921 10d5 01       		.byte	0x1
 3922 10d6 7909     		.2byte	0x979
 3923 10d8 7E0E0000 		.4byte	0xe7e
 3924 10dc 20       		.uleb128 0x20
 3925 10dd 8F0E0000 		.4byte	0xe8f
 3926 10e1 22000000 		.4byte	.LBB60
 3927 10e5 B0000000 		.4byte	.Ldebug_ranges0+0xb0
 3928 10e9 01       		.byte	0x1
 3929 10ea 8C09     		.2byte	0x98c
 3930 10ec B2110000 		.4byte	0x11b2
 3931 10f0 21       		.uleb128 0x21
 3932 10f1 A80E0000 		.4byte	0xea8
 3933 10f5 7F050000 		.4byte	.LLST45
 3934 10f9 21       		.uleb128 0x21
 3935 10fa 9C0E0000 		.4byte	0xe9c
 3936 10fe 9F050000 		.4byte	.LLST46
 3937 1102 27       		.uleb128 0x27
 3938 1103 B0000000 		.4byte	.Ldebug_ranges0+0xb0
 3939 1107 28       		.uleb128 0x28
 3940 1108 B40E0000 		.4byte	0xeb4
 3941 110c BF050000 		.4byte	.LLST47
 3942 1110 28       		.uleb128 0x28
 3943 1111 C00E0000 		.4byte	0xec0
 3944 1115 01060000 		.4byte	.LLST48
 3945 1119 28       		.uleb128 0x28
 3946 111a CC0E0000 		.4byte	0xecc
 3947 111e 6D060000 		.4byte	.LLST49
 3948 1122 28       		.uleb128 0x28
 3949 1123 D80E0000 		.4byte	0xed8
 3950 1127 98060000 		.4byte	.LLST50
 3951 112b 28       		.uleb128 0x28
 3952 112c E40E0000 		.4byte	0xee4
 3953 1130 C3060000 		.4byte	.LLST51
 3954 1134 28       		.uleb128 0x28
 3955 1135 F00E0000 		.4byte	0xef0
 3956 1139 1B070000 		.4byte	.LLST52
 3957 113d 28       		.uleb128 0x28
 3958 113e FC0E0000 		.4byte	0xefc
 3959 1142 3D070000 		.4byte	.LLST53
 3960 1146 28       		.uleb128 0x28
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 125


 3961 1147 080F0000 		.4byte	0xf08
 3962 114b 55070000 		.4byte	.LLST54
 3963 114f 28       		.uleb128 0x28
 3964 1150 140F0000 		.4byte	0xf14
 3965 1154 AB070000 		.4byte	.LLST55
 3966 1158 2E       		.uleb128 0x2e
 3967 1159 200F0000 		.4byte	0xf20
 3968 115d 28       		.uleb128 0x28
 3969 115e 2C0F0000 		.4byte	0xf2c
 3970 1162 E0070000 		.4byte	.LLST56
 3971 1166 29       		.uleb128 0x29
 3972 1167 78000000 		.4byte	.LVL134
 3973 116b 320D0000 		.4byte	0xd32
 3974 116f 82110000 		.4byte	0x1182
 3975 1173 1E       		.uleb128 0x1e
 3976 1174 01       		.uleb128 0x1
 3977 1175 50       		.byte	0x50
 3978 1176 03       		.uleb128 0x3
 3979 1177 91       		.byte	0x91
 3980 1178 50       		.sleb128 -48
 3981 1179 06       		.byte	0x6
 3982 117a 1E       		.uleb128 0x1e
 3983 117b 01       		.uleb128 0x1
 3984 117c 51       		.byte	0x51
 3985 117d 03       		.uleb128 0x3
 3986 117e 91       		.byte	0x91
 3987 117f 4C       		.sleb128 -52
 3988 1180 06       		.byte	0x6
 3989 1181 00       		.byte	0
 3990 1182 1B       		.uleb128 0x1b
 3991 1183 7C000000 		.4byte	.LVL135
 3992 1187 D00A0000 		.4byte	0xad0
 3993 118b 29       		.uleb128 0x29
 3994 118c 24010000 		.4byte	.LVL160
 3995 1190 320D0000 		.4byte	0xd32
 3996 1194 A7110000 		.4byte	0x11a7
 3997 1198 1E       		.uleb128 0x1e
 3998 1199 01       		.uleb128 0x1
 3999 119a 50       		.byte	0x50
 4000 119b 03       		.uleb128 0x3
 4001 119c 91       		.byte	0x91
 4002 119d 50       		.sleb128 -48
 4003 119e 06       		.byte	0x6
 4004 119f 1E       		.uleb128 0x1e
 4005 11a0 01       		.uleb128 0x1
 4006 11a1 51       		.byte	0x51
 4007 11a2 03       		.uleb128 0x3
 4008 11a3 91       		.byte	0x91
 4009 11a4 4C       		.sleb128 -52
 4010 11a5 06       		.byte	0x6
 4011 11a6 00       		.byte	0
 4012 11a7 1B       		.uleb128 0x1b
 4013 11a8 28010000 		.4byte	.LVL161
 4014 11ac D00A0000 		.4byte	0xad0
 4015 11b0 00       		.byte	0
 4016 11b1 00       		.byte	0
 4017 11b2 20       		.uleb128 0x20
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 126


 4018 11b3 F40D0000 		.4byte	0xdf4
 4019 11b7 C2000000 		.4byte	.LBB66
 4020 11bb D8000000 		.4byte	.Ldebug_ranges0+0xd8
 4021 11bf 01       		.byte	0x1
 4022 11c0 8D09     		.2byte	0x98d
 4023 11c2 1B120000 		.4byte	0x121b
 4024 11c6 2F       		.uleb128 0x2f
 4025 11c7 050E0000 		.4byte	0xe05
 4026 11cb 27       		.uleb128 0x27
 4027 11cc D8000000 		.4byte	.Ldebug_ranges0+0xd8
 4028 11d0 2E       		.uleb128 0x2e
 4029 11d1 110E0000 		.4byte	0xe11
 4030 11d5 28       		.uleb128 0x28
 4031 11d6 1D0E0000 		.4byte	0xe1d
 4032 11da FE070000 		.4byte	.LLST57
 4033 11de 28       		.uleb128 0x28
 4034 11df 290E0000 		.4byte	0xe29
 4035 11e3 12080000 		.4byte	.LLST58
 4036 11e7 28       		.uleb128 0x28
 4037 11e8 350E0000 		.4byte	0xe35
 4038 11ec 32080000 		.4byte	.LLST59
 4039 11f0 28       		.uleb128 0x28
 4040 11f1 410E0000 		.4byte	0xe41
 4041 11f5 46080000 		.4byte	.LLST60
 4042 11f9 28       		.uleb128 0x28
 4043 11fa 4D0E0000 		.4byte	0xe4d
 4044 11fe 73080000 		.4byte	.LLST61
 4045 1202 28       		.uleb128 0x28
 4046 1203 590E0000 		.4byte	0xe59
 4047 1207 93080000 		.4byte	.LLST62
 4048 120b 2E       		.uleb128 0x2e
 4049 120c 650E0000 		.4byte	0xe65
 4050 1210 28       		.uleb128 0x28
 4051 1211 710E0000 		.4byte	0xe71
 4052 1215 A6080000 		.4byte	.LLST63
 4053 1219 00       		.byte	0
 4054 121a 00       		.byte	0
 4055 121b 30       		.uleb128 0x30
 4056 121c 390F0000 		.4byte	0xf39
 4057 1220 4C010000 		.4byte	.LBB72
 4058 1224 98000000 		.4byte	.LBE72-.LBB72
 4059 1228 01       		.byte	0x1
 4060 1229 9309     		.2byte	0x993
 4061 122b A2120000 		.4byte	0x12a2
 4062 122f 21       		.uleb128 0x21
 4063 1230 520F0000 		.4byte	0xf52
 4064 1234 D0080000 		.4byte	.LLST64
 4065 1238 2F       		.uleb128 0x2f
 4066 1239 460F0000 		.4byte	0xf46
 4067 123d 31       		.uleb128 0x31
 4068 123e 4C010000 		.4byte	.LBB73
 4069 1242 98000000 		.4byte	.LBE73-.LBB73
 4070 1246 28       		.uleb128 0x28
 4071 1247 5E0F0000 		.4byte	0xf5e
 4072 124b E4080000 		.4byte	.LLST65
 4073 124f 28       		.uleb128 0x28
 4074 1250 6A0F0000 		.4byte	0xf6a
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 127


 4075 1254 1A090000 		.4byte	.LLST66
 4076 1258 28       		.uleb128 0x28
 4077 1259 760F0000 		.4byte	0xf76
 4078 125d 2E090000 		.4byte	.LLST67
 4079 1261 28       		.uleb128 0x28
 4080 1262 820F0000 		.4byte	0xf82
 4081 1266 41090000 		.4byte	.LLST68
 4082 126a 28       		.uleb128 0x28
 4083 126b 8E0F0000 		.4byte	0xf8e
 4084 126f 75090000 		.4byte	.LLST69
 4085 1273 28       		.uleb128 0x28
 4086 1274 9A0F0000 		.4byte	0xf9a
 4087 1278 88090000 		.4byte	.LLST70
 4088 127c 28       		.uleb128 0x28
 4089 127d A60F0000 		.4byte	0xfa6
 4090 1281 A7090000 		.4byte	.LLST71
 4091 1285 28       		.uleb128 0x28
 4092 1286 B20F0000 		.4byte	0xfb2
 4093 128a FC090000 		.4byte	.LLST72
 4094 128e 28       		.uleb128 0x28
 4095 128f BE0F0000 		.4byte	0xfbe
 4096 1293 0F0A0000 		.4byte	.LLST73
 4097 1297 28       		.uleb128 0x28
 4098 1298 CA0F0000 		.4byte	0xfca
 4099 129c 220A0000 		.4byte	.LLST74
 4100 12a0 00       		.byte	0
 4101 12a1 00       		.byte	0
 4102 12a2 30       		.uleb128 0x30
 4103 12a3 D70F0000 		.4byte	0xfd7
 4104 12a7 0E020000 		.4byte	.LBB74
 4105 12ab 52000000 		.4byte	.LBE74-.LBB74
 4106 12af 01       		.byte	0x1
 4107 12b0 A709     		.2byte	0x9a7
 4108 12b2 20130000 		.4byte	0x1320
 4109 12b6 21       		.uleb128 0x21
 4110 12b7 F40F0000 		.4byte	0xff4
 4111 12bb 4C0A0000 		.4byte	.LLST75
 4112 12bf 21       		.uleb128 0x21
 4113 12c0 E80F0000 		.4byte	0xfe8
 4114 12c4 600A0000 		.4byte	.LLST76
 4115 12c8 31       		.uleb128 0x31
 4116 12c9 0E020000 		.4byte	.LBB75
 4117 12cd 52000000 		.4byte	.LBE75-.LBB75
 4118 12d1 28       		.uleb128 0x28
 4119 12d2 00100000 		.4byte	0x1000
 4120 12d6 740A0000 		.4byte	.LLST77
 4121 12da 28       		.uleb128 0x28
 4122 12db 0C100000 		.4byte	0x100c
 4123 12df 930A0000 		.4byte	.LLST78
 4124 12e3 28       		.uleb128 0x28
 4125 12e4 18100000 		.4byte	0x1018
 4126 12e8 D80A0000 		.4byte	.LLST79
 4127 12ec 28       		.uleb128 0x28
 4128 12ed 24100000 		.4byte	0x1024
 4129 12f1 EC0A0000 		.4byte	.LLST80
 4130 12f5 28       		.uleb128 0x28
 4131 12f6 30100000 		.4byte	0x1030
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 128


 4132 12fa 000B0000 		.4byte	.LLST81
 4133 12fe 28       		.uleb128 0x28
 4134 12ff 3C100000 		.4byte	0x103c
 4135 1303 560B0000 		.4byte	.LLST82
 4136 1307 2E       		.uleb128 0x2e
 4137 1308 48100000 		.4byte	0x1048
 4138 130c 28       		.uleb128 0x28
 4139 130d 54100000 		.4byte	0x1054
 4140 1311 8B0B0000 		.4byte	.LLST83
 4141 1315 28       		.uleb128 0x28
 4142 1316 60100000 		.4byte	0x1060
 4143 131a 9E0B0000 		.4byte	.LLST84
 4144 131e 00       		.byte	0
 4145 131f 00       		.byte	0
 4146 1320 29       		.uleb128 0x29
 4147 1321 EC010000 		.4byte	.LVL196
 4148 1325 C20C0000 		.4byte	0xcc2
 4149 1329 35130000 		.4byte	0x1335
 4150 132d 1E       		.uleb128 0x1e
 4151 132e 01       		.uleb128 0x1
 4152 132f 50       		.byte	0x50
 4153 1330 03       		.uleb128 0x3
 4154 1331 91       		.byte	0x91
 4155 1332 50       		.sleb128 -48
 4156 1333 06       		.byte	0x6
 4157 1334 00       		.byte	0
 4158 1335 1B       		.uleb128 0x1b
 4159 1336 F0010000 		.4byte	.LVL197
 4160 133a 740B0000 		.4byte	0xb74
 4161 133e 00       		.byte	0
 4162 133f 32       		.uleb128 0x32
 4163 1340 E0030000 		.4byte	.LASF169
 4164 1344 01       		.byte	0x1
 4165 1345 77       		.byte	0x77
 4166 1346 83000000 		.4byte	0x83
 4167 134a 05       		.uleb128 0x5
 4168 134b 03       		.byte	0x3
 4169 134c 04000000 		.4byte	CapSense_counterResolution
 4170 1350 32       		.uleb128 0x32
 4171 1351 3E010000 		.4byte	.LASF170
 4172 1355 01       		.byte	0x1
 4173 1356 7B       		.byte	0x7b
 4174 1357 6B000000 		.4byte	0x6b
 4175 135b 05       		.uleb128 0x5
 4176 135c 03       		.byte	0x3
 4177 135d 00000000 		.4byte	CapSense_eleCsdDisconnectFlag
 4178 1361 33       		.uleb128 0x33
 4179 1362 2B060000 		.4byte	.LASF171
 4180 1366 04       		.byte	0x4
 4181 1367 8704     		.2byte	0x487
 4182 1369 A1040000 		.4byte	0x4a1
 4183 136d 33       		.uleb128 0x33
 4184 136e 3C090000 		.4byte	.LASF172
 4185 1372 04       		.byte	0x4
 4186 1373 8804     		.2byte	0x488
 4187 1375 79130000 		.4byte	0x1379
 4188 1379 1C       		.uleb128 0x1c
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 129


 4189 137a 05060000 		.4byte	0x605
 4190 137e 0A       		.uleb128 0xa
 4191 137f 8A070000 		.4byte	0x78a
 4192 1383 8E130000 		.4byte	0x138e
 4193 1387 0B       		.uleb128 0xb
 4194 1388 A6010000 		.4byte	0x1a6
 4195 138c 00       		.byte	0
 4196 138d 00       		.byte	0
 4197 138e 33       		.uleb128 0x33
 4198 138f 49000000 		.4byte	.LASF173
 4199 1393 04       		.byte	0x4
 4200 1394 9004     		.2byte	0x490
 4201 1396 9A130000 		.4byte	0x139a
 4202 139a 1C       		.uleb128 0x1c
 4203 139b 7E130000 		.4byte	0x137e
 4204 139f 34       		.uleb128 0x34
 4205 13a0 5F000000 		.4byte	.LASF174
 4206 13a4 05       		.byte	0x5
 4207 13a5 B1       		.byte	0xb1
 4208 13a6 B0000000 		.4byte	0xb0
 4209 13aa 34       		.uleb128 0x34
 4210 13ab B8020000 		.4byte	.LASF175
 4211 13af 05       		.byte	0x5
 4212 13b0 B2       		.byte	0xb2
 4213 13b1 B0000000 		.4byte	0xb0
 4214 13b5 34       		.uleb128 0x34
 4215 13b6 D50B0000 		.4byte	.LASF176
 4216 13ba 05       		.byte	0x5
 4217 13bb B5       		.byte	0xb5
 4218 13bc C6050000 		.4byte	0x5c6
 4219 13c0 34       		.uleb128 0x34
 4220 13c1 F70B0000 		.4byte	.LASF177
 4221 13c5 05       		.byte	0x5
 4222 13c6 BC       		.byte	0xbc
 4223 13c7 DD080000 		.4byte	0x8dd
 4224 13cb 34       		.uleb128 0x34
 4225 13cc E0060000 		.4byte	.LASF178
 4226 13d0 05       		.byte	0x5
 4227 13d1 CA       		.byte	0xca
 4228 13d2 690B0000 		.4byte	0xb69
 4229 13d6 0A       		.uleb128 0xa
 4230 13d7 E6130000 		.4byte	0x13e6
 4231 13db E6130000 		.4byte	0x13e6
 4232 13df 0B       		.uleb128 0xb
 4233 13e0 A6010000 		.4byte	0x1a6
 4234 13e4 01       		.byte	0x1
 4235 13e5 00       		.byte	0
 4236 13e6 1C       		.uleb128 0x1c
 4237 13e7 AA060000 		.4byte	0x6aa
 4238 13eb 34       		.uleb128 0x34
 4239 13ec B40C0000 		.4byte	.LASF179
 4240 13f0 05       		.byte	0x5
 4241 13f1 F5       		.byte	0xf5
 4242 13f2 F6130000 		.4byte	0x13f6
 4243 13f6 1C       		.uleb128 0x1c
 4244 13f7 D6130000 		.4byte	0x13d6
 4245 13fb 35       		.uleb128 0x35
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 130


 4246 13fc 4A060000 		.4byte	.LASF180
 4247 1400 01       		.byte	0x1
 4248 1401 76       		.byte	0x76
 4249 1402 83000000 		.4byte	0x83
 4250 1406 05       		.uleb128 0x5
 4251 1407 03       		.byte	0x3
 4252 1408 00000000 		.4byte	CapSense_configCsd
 4253 140c 36       		.uleb128 0x36
 4254 140d BE0B0000 		.4byte	.LASF181
 4255 1411 BE0B0000 		.4byte	.LASF181
 4256 1415 06       		.byte	0x6
 4257 1416 E5       		.byte	0xe5
 4258 1417 36       		.uleb128 0x36
 4259 1418 A3040000 		.4byte	.LASF182
 4260 141c A3040000 		.4byte	.LASF182
 4261 1420 06       		.byte	0x6
 4262 1421 E6       		.byte	0xe6
 4263 1422 36       		.uleb128 0x36
 4264 1423 89040000 		.4byte	.LASF183
 4265 1427 89040000 		.4byte	.LASF183
 4266 142b 05       		.byte	0x5
 4267 142c 84       		.byte	0x84
 4268 142d 36       		.uleb128 0x36
 4269 142e 14060000 		.4byte	.LASF184
 4270 1432 14060000 		.4byte	.LASF184
 4271 1436 05       		.byte	0x5
 4272 1437 A9       		.byte	0xa9
 4273 1438 36       		.uleb128 0x36
 4274 1439 49050000 		.4byte	.LASF185
 4275 143d 49050000 		.4byte	.LASF185
 4276 1441 05       		.byte	0x5
 4277 1442 80       		.byte	0x80
 4278 1443 36       		.uleb128 0x36
 4279 1444 5C010000 		.4byte	.LASF186
 4280 1448 5C010000 		.4byte	.LASF186
 4281 144c 05       		.byte	0x5
 4282 144d 7F       		.byte	0x7f
 4283 144e 36       		.uleb128 0x36
 4284 144f B9040000 		.4byte	.LASF187
 4285 1453 B9040000 		.4byte	.LASF187
 4286 1457 06       		.byte	0x6
 4287 1458 DC       		.byte	0xdc
 4288 1459 36       		.uleb128 0x36
 4289 145a A00B0000 		.4byte	.LASF188
 4290 145e A00B0000 		.4byte	.LASF188
 4291 1462 06       		.byte	0x6
 4292 1463 C3       		.byte	0xc3
 4293 1464 36       		.uleb128 0x36
 4294 1465 8C020000 		.4byte	.LASF189
 4295 1469 8C020000 		.4byte	.LASF189
 4296 146d 07       		.byte	0x7
 4297 146e 18       		.byte	0x18
 4298 146f 36       		.uleb128 0x36
 4299 1470 A3030000 		.4byte	.LASF190
 4300 1474 A3030000 		.4byte	.LASF190
 4301 1478 05       		.byte	0x5
 4302 1479 85       		.byte	0x85
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 131


 4303 147a 00       		.byte	0
 4304              		.section	.debug_abbrev,"",%progbits
 4305              	.Ldebug_abbrev0:
 4306 0000 01       		.uleb128 0x1
 4307 0001 11       		.uleb128 0x11
 4308 0002 01       		.byte	0x1
 4309 0003 25       		.uleb128 0x25
 4310 0004 0E       		.uleb128 0xe
 4311 0005 13       		.uleb128 0x13
 4312 0006 0B       		.uleb128 0xb
 4313 0007 03       		.uleb128 0x3
 4314 0008 0E       		.uleb128 0xe
 4315 0009 1B       		.uleb128 0x1b
 4316 000a 0E       		.uleb128 0xe
 4317 000b 55       		.uleb128 0x55
 4318 000c 17       		.uleb128 0x17
 4319 000d 11       		.uleb128 0x11
 4320 000e 01       		.uleb128 0x1
 4321 000f 10       		.uleb128 0x10
 4322 0010 17       		.uleb128 0x17
 4323 0011 00       		.byte	0
 4324 0012 00       		.byte	0
 4325 0013 02       		.uleb128 0x2
 4326 0014 24       		.uleb128 0x24
 4327 0015 00       		.byte	0
 4328 0016 0B       		.uleb128 0xb
 4329 0017 0B       		.uleb128 0xb
 4330 0018 3E       		.uleb128 0x3e
 4331 0019 0B       		.uleb128 0xb
 4332 001a 03       		.uleb128 0x3
 4333 001b 0E       		.uleb128 0xe
 4334 001c 00       		.byte	0
 4335 001d 00       		.byte	0
 4336 001e 03       		.uleb128 0x3
 4337 001f 24       		.uleb128 0x24
 4338 0020 00       		.byte	0
 4339 0021 0B       		.uleb128 0xb
 4340 0022 0B       		.uleb128 0xb
 4341 0023 3E       		.uleb128 0x3e
 4342 0024 0B       		.uleb128 0xb
 4343 0025 03       		.uleb128 0x3
 4344 0026 08       		.uleb128 0x8
 4345 0027 00       		.byte	0
 4346 0028 00       		.byte	0
 4347 0029 04       		.uleb128 0x4
 4348 002a 16       		.uleb128 0x16
 4349 002b 00       		.byte	0
 4350 002c 03       		.uleb128 0x3
 4351 002d 0E       		.uleb128 0xe
 4352 002e 3A       		.uleb128 0x3a
 4353 002f 0B       		.uleb128 0xb
 4354 0030 3B       		.uleb128 0x3b
 4355 0031 05       		.uleb128 0x5
 4356 0032 49       		.uleb128 0x49
 4357 0033 13       		.uleb128 0x13
 4358 0034 00       		.byte	0
 4359 0035 00       		.byte	0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 132


 4360 0036 05       		.uleb128 0x5
 4361 0037 35       		.uleb128 0x35
 4362 0038 00       		.byte	0
 4363 0039 49       		.uleb128 0x49
 4364 003a 13       		.uleb128 0x13
 4365 003b 00       		.byte	0
 4366 003c 00       		.byte	0
 4367 003d 06       		.uleb128 0x6
 4368 003e 04       		.uleb128 0x4
 4369 003f 01       		.byte	0x1
 4370 0040 0B       		.uleb128 0xb
 4371 0041 0B       		.uleb128 0xb
 4372 0042 49       		.uleb128 0x49
 4373 0043 13       		.uleb128 0x13
 4374 0044 3A       		.uleb128 0x3a
 4375 0045 0B       		.uleb128 0xb
 4376 0046 3B       		.uleb128 0x3b
 4377 0047 0B       		.uleb128 0xb
 4378 0048 01       		.uleb128 0x1
 4379 0049 13       		.uleb128 0x13
 4380 004a 00       		.byte	0
 4381 004b 00       		.byte	0
 4382 004c 07       		.uleb128 0x7
 4383 004d 28       		.uleb128 0x28
 4384 004e 00       		.byte	0
 4385 004f 03       		.uleb128 0x3
 4386 0050 0E       		.uleb128 0xe
 4387 0051 1C       		.uleb128 0x1c
 4388 0052 0B       		.uleb128 0xb
 4389 0053 00       		.byte	0
 4390 0054 00       		.byte	0
 4391 0055 08       		.uleb128 0x8
 4392 0056 13       		.uleb128 0x13
 4393 0057 01       		.byte	0x1
 4394 0058 0B       		.uleb128 0xb
 4395 0059 0B       		.uleb128 0xb
 4396 005a 3A       		.uleb128 0x3a
 4397 005b 0B       		.uleb128 0xb
 4398 005c 3B       		.uleb128 0x3b
 4399 005d 0B       		.uleb128 0xb
 4400 005e 01       		.uleb128 0x1
 4401 005f 13       		.uleb128 0x13
 4402 0060 00       		.byte	0
 4403 0061 00       		.byte	0
 4404 0062 09       		.uleb128 0x9
 4405 0063 0D       		.uleb128 0xd
 4406 0064 00       		.byte	0
 4407 0065 03       		.uleb128 0x3
 4408 0066 0E       		.uleb128 0xe
 4409 0067 3A       		.uleb128 0x3a
 4410 0068 0B       		.uleb128 0xb
 4411 0069 3B       		.uleb128 0x3b
 4412 006a 0B       		.uleb128 0xb
 4413 006b 49       		.uleb128 0x49
 4414 006c 13       		.uleb128 0x13
 4415 006d 38       		.uleb128 0x38
 4416 006e 0B       		.uleb128 0xb
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 133


 4417 006f 00       		.byte	0
 4418 0070 00       		.byte	0
 4419 0071 0A       		.uleb128 0xa
 4420 0072 01       		.uleb128 0x1
 4421 0073 01       		.byte	0x1
 4422 0074 49       		.uleb128 0x49
 4423 0075 13       		.uleb128 0x13
 4424 0076 01       		.uleb128 0x1
 4425 0077 13       		.uleb128 0x13
 4426 0078 00       		.byte	0
 4427 0079 00       		.byte	0
 4428 007a 0B       		.uleb128 0xb
 4429 007b 21       		.uleb128 0x21
 4430 007c 00       		.byte	0
 4431 007d 49       		.uleb128 0x49
 4432 007e 13       		.uleb128 0x13
 4433 007f 2F       		.uleb128 0x2f
 4434 0080 0B       		.uleb128 0xb
 4435 0081 00       		.byte	0
 4436 0082 00       		.byte	0
 4437 0083 0C       		.uleb128 0xc
 4438 0084 16       		.uleb128 0x16
 4439 0085 00       		.byte	0
 4440 0086 03       		.uleb128 0x3
 4441 0087 0E       		.uleb128 0xe
 4442 0088 3A       		.uleb128 0x3a
 4443 0089 0B       		.uleb128 0xb
 4444 008a 3B       		.uleb128 0x3b
 4445 008b 0B       		.uleb128 0xb
 4446 008c 49       		.uleb128 0x49
 4447 008d 13       		.uleb128 0x13
 4448 008e 00       		.byte	0
 4449 008f 00       		.byte	0
 4450 0090 0D       		.uleb128 0xd
 4451 0091 0D       		.uleb128 0xd
 4452 0092 00       		.byte	0
 4453 0093 03       		.uleb128 0x3
 4454 0094 0E       		.uleb128 0xe
 4455 0095 3A       		.uleb128 0x3a
 4456 0096 0B       		.uleb128 0xb
 4457 0097 3B       		.uleb128 0x3b
 4458 0098 05       		.uleb128 0x5
 4459 0099 49       		.uleb128 0x49
 4460 009a 13       		.uleb128 0x13
 4461 009b 38       		.uleb128 0x38
 4462 009c 0B       		.uleb128 0xb
 4463 009d 00       		.byte	0
 4464 009e 00       		.byte	0
 4465 009f 0E       		.uleb128 0xe
 4466 00a0 13       		.uleb128 0x13
 4467 00a1 01       		.byte	0x1
 4468 00a2 0B       		.uleb128 0xb
 4469 00a3 0B       		.uleb128 0xb
 4470 00a4 3A       		.uleb128 0x3a
 4471 00a5 0B       		.uleb128 0xb
 4472 00a6 3B       		.uleb128 0x3b
 4473 00a7 05       		.uleb128 0x5
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 134


 4474 00a8 01       		.uleb128 0x1
 4475 00a9 13       		.uleb128 0x13
 4476 00aa 00       		.byte	0
 4477 00ab 00       		.byte	0
 4478 00ac 0F       		.uleb128 0xf
 4479 00ad 0D       		.uleb128 0xd
 4480 00ae 00       		.byte	0
 4481 00af 03       		.uleb128 0x3
 4482 00b0 08       		.uleb128 0x8
 4483 00b1 3A       		.uleb128 0x3a
 4484 00b2 0B       		.uleb128 0xb
 4485 00b3 3B       		.uleb128 0x3b
 4486 00b4 05       		.uleb128 0x5
 4487 00b5 49       		.uleb128 0x49
 4488 00b6 13       		.uleb128 0x13
 4489 00b7 38       		.uleb128 0x38
 4490 00b8 0B       		.uleb128 0xb
 4491 00b9 00       		.byte	0
 4492 00ba 00       		.byte	0
 4493 00bb 10       		.uleb128 0x10
 4494 00bc 0F       		.uleb128 0xf
 4495 00bd 00       		.byte	0
 4496 00be 0B       		.uleb128 0xb
 4497 00bf 0B       		.uleb128 0xb
 4498 00c0 49       		.uleb128 0x49
 4499 00c1 13       		.uleb128 0x13
 4500 00c2 00       		.byte	0
 4501 00c3 00       		.byte	0
 4502 00c4 11       		.uleb128 0x11
 4503 00c5 26       		.uleb128 0x26
 4504 00c6 00       		.byte	0
 4505 00c7 00       		.byte	0
 4506 00c8 00       		.byte	0
 4507 00c9 12       		.uleb128 0x12
 4508 00ca 0F       		.uleb128 0xf
 4509 00cb 00       		.byte	0
 4510 00cc 0B       		.uleb128 0xb
 4511 00cd 0B       		.uleb128 0xb
 4512 00ce 00       		.byte	0
 4513 00cf 00       		.byte	0
 4514 00d0 13       		.uleb128 0x13
 4515 00d1 2E       		.uleb128 0x2e
 4516 00d2 00       		.byte	0
 4517 00d3 03       		.uleb128 0x3
 4518 00d4 0E       		.uleb128 0xe
 4519 00d5 3A       		.uleb128 0x3a
 4520 00d6 0B       		.uleb128 0xb
 4521 00d7 3B       		.uleb128 0x3b
 4522 00d8 05       		.uleb128 0x5
 4523 00d9 27       		.uleb128 0x27
 4524 00da 19       		.uleb128 0x19
 4525 00db 20       		.uleb128 0x20
 4526 00dc 0B       		.uleb128 0xb
 4527 00dd 00       		.byte	0
 4528 00de 00       		.byte	0
 4529 00df 14       		.uleb128 0x14
 4530 00e0 2E       		.uleb128 0x2e
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 135


 4531 00e1 00       		.byte	0
 4532 00e2 3F       		.uleb128 0x3f
 4533 00e3 19       		.uleb128 0x19
 4534 00e4 03       		.uleb128 0x3
 4535 00e5 0E       		.uleb128 0xe
 4536 00e6 3A       		.uleb128 0x3a
 4537 00e7 0B       		.uleb128 0xb
 4538 00e8 3B       		.uleb128 0x3b
 4539 00e9 05       		.uleb128 0x5
 4540 00ea 27       		.uleb128 0x27
 4541 00eb 19       		.uleb128 0x19
 4542 00ec 20       		.uleb128 0x20
 4543 00ed 0B       		.uleb128 0xb
 4544 00ee 00       		.byte	0
 4545 00ef 00       		.byte	0
 4546 00f0 15       		.uleb128 0x15
 4547 00f1 2E       		.uleb128 0x2e
 4548 00f2 01       		.byte	0x1
 4549 00f3 03       		.uleb128 0x3
 4550 00f4 0E       		.uleb128 0xe
 4551 00f5 3A       		.uleb128 0x3a
 4552 00f6 0B       		.uleb128 0xb
 4553 00f7 3B       		.uleb128 0x3b
 4554 00f8 0B       		.uleb128 0xb
 4555 00f9 27       		.uleb128 0x27
 4556 00fa 19       		.uleb128 0x19
 4557 00fb 20       		.uleb128 0x20
 4558 00fc 0B       		.uleb128 0xb
 4559 00fd 01       		.uleb128 0x1
 4560 00fe 13       		.uleb128 0x13
 4561 00ff 00       		.byte	0
 4562 0100 00       		.byte	0
 4563 0101 16       		.uleb128 0x16
 4564 0102 05       		.uleb128 0x5
 4565 0103 00       		.byte	0
 4566 0104 03       		.uleb128 0x3
 4567 0105 0E       		.uleb128 0xe
 4568 0106 3A       		.uleb128 0x3a
 4569 0107 0B       		.uleb128 0xb
 4570 0108 3B       		.uleb128 0x3b
 4571 0109 0B       		.uleb128 0xb
 4572 010a 49       		.uleb128 0x49
 4573 010b 13       		.uleb128 0x13
 4574 010c 00       		.byte	0
 4575 010d 00       		.byte	0
 4576 010e 17       		.uleb128 0x17
 4577 010f 2E       		.uleb128 0x2e
 4578 0110 01       		.byte	0x1
 4579 0111 3F       		.uleb128 0x3f
 4580 0112 19       		.uleb128 0x19
 4581 0113 03       		.uleb128 0x3
 4582 0114 0E       		.uleb128 0xe
 4583 0115 3A       		.uleb128 0x3a
 4584 0116 0B       		.uleb128 0xb
 4585 0117 3B       		.uleb128 0x3b
 4586 0118 05       		.uleb128 0x5
 4587 0119 27       		.uleb128 0x27
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 136


 4588 011a 19       		.uleb128 0x19
 4589 011b 11       		.uleb128 0x11
 4590 011c 01       		.uleb128 0x1
 4591 011d 12       		.uleb128 0x12
 4592 011e 06       		.uleb128 0x6
 4593 011f 40       		.uleb128 0x40
 4594 0120 18       		.uleb128 0x18
 4595 0121 9742     		.uleb128 0x2117
 4596 0123 19       		.uleb128 0x19
 4597 0124 01       		.uleb128 0x1
 4598 0125 13       		.uleb128 0x13
 4599 0126 00       		.byte	0
 4600 0127 00       		.byte	0
 4601 0128 18       		.uleb128 0x18
 4602 0129 05       		.uleb128 0x5
 4603 012a 00       		.byte	0
 4604 012b 03       		.uleb128 0x3
 4605 012c 0E       		.uleb128 0xe
 4606 012d 3A       		.uleb128 0x3a
 4607 012e 0B       		.uleb128 0xb
 4608 012f 3B       		.uleb128 0x3b
 4609 0130 05       		.uleb128 0x5
 4610 0131 49       		.uleb128 0x49
 4611 0132 13       		.uleb128 0x13
 4612 0133 02       		.uleb128 0x2
 4613 0134 17       		.uleb128 0x17
 4614 0135 00       		.byte	0
 4615 0136 00       		.byte	0
 4616 0137 19       		.uleb128 0x19
 4617 0138 34       		.uleb128 0x34
 4618 0139 00       		.byte	0
 4619 013a 03       		.uleb128 0x3
 4620 013b 0E       		.uleb128 0xe
 4621 013c 3A       		.uleb128 0x3a
 4622 013d 0B       		.uleb128 0xb
 4623 013e 3B       		.uleb128 0x3b
 4624 013f 05       		.uleb128 0x5
 4625 0140 49       		.uleb128 0x49
 4626 0141 13       		.uleb128 0x13
 4627 0142 02       		.uleb128 0x2
 4628 0143 17       		.uleb128 0x17
 4629 0144 00       		.byte	0
 4630 0145 00       		.byte	0
 4631 0146 1A       		.uleb128 0x1a
 4632 0147 34       		.uleb128 0x34
 4633 0148 00       		.byte	0
 4634 0149 03       		.uleb128 0x3
 4635 014a 0E       		.uleb128 0xe
 4636 014b 3A       		.uleb128 0x3a
 4637 014c 0B       		.uleb128 0xb
 4638 014d 3B       		.uleb128 0x3b
 4639 014e 05       		.uleb128 0x5
 4640 014f 49       		.uleb128 0x49
 4641 0150 13       		.uleb128 0x13
 4642 0151 00       		.byte	0
 4643 0152 00       		.byte	0
 4644 0153 1B       		.uleb128 0x1b
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 137


 4645 0154 898201   		.uleb128 0x4109
 4646 0157 00       		.byte	0
 4647 0158 11       		.uleb128 0x11
 4648 0159 01       		.uleb128 0x1
 4649 015a 31       		.uleb128 0x31
 4650 015b 13       		.uleb128 0x13
 4651 015c 00       		.byte	0
 4652 015d 00       		.byte	0
 4653 015e 1C       		.uleb128 0x1c
 4654 015f 26       		.uleb128 0x26
 4655 0160 00       		.byte	0
 4656 0161 49       		.uleb128 0x49
 4657 0162 13       		.uleb128 0x13
 4658 0163 00       		.byte	0
 4659 0164 00       		.byte	0
 4660 0165 1D       		.uleb128 0x1d
 4661 0166 898201   		.uleb128 0x4109
 4662 0169 01       		.byte	0x1
 4663 016a 11       		.uleb128 0x11
 4664 016b 01       		.uleb128 0x1
 4665 016c 31       		.uleb128 0x31
 4666 016d 13       		.uleb128 0x13
 4667 016e 00       		.byte	0
 4668 016f 00       		.byte	0
 4669 0170 1E       		.uleb128 0x1e
 4670 0171 8A8201   		.uleb128 0x410a
 4671 0174 00       		.byte	0
 4672 0175 02       		.uleb128 0x2
 4673 0176 18       		.uleb128 0x18
 4674 0177 9142     		.uleb128 0x2111
 4675 0179 18       		.uleb128 0x18
 4676 017a 00       		.byte	0
 4677 017b 00       		.byte	0
 4678 017c 1F       		.uleb128 0x1f
 4679 017d 1D       		.uleb128 0x1d
 4680 017e 00       		.byte	0
 4681 017f 31       		.uleb128 0x31
 4682 0180 13       		.uleb128 0x13
 4683 0181 52       		.uleb128 0x52
 4684 0182 01       		.uleb128 0x1
 4685 0183 55       		.uleb128 0x55
 4686 0184 17       		.uleb128 0x17
 4687 0185 58       		.uleb128 0x58
 4688 0186 0B       		.uleb128 0xb
 4689 0187 59       		.uleb128 0x59
 4690 0188 05       		.uleb128 0x5
 4691 0189 00       		.byte	0
 4692 018a 00       		.byte	0
 4693 018b 20       		.uleb128 0x20
 4694 018c 1D       		.uleb128 0x1d
 4695 018d 01       		.byte	0x1
 4696 018e 31       		.uleb128 0x31
 4697 018f 13       		.uleb128 0x13
 4698 0190 52       		.uleb128 0x52
 4699 0191 01       		.uleb128 0x1
 4700 0192 55       		.uleb128 0x55
 4701 0193 17       		.uleb128 0x17
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 138


 4702 0194 58       		.uleb128 0x58
 4703 0195 0B       		.uleb128 0xb
 4704 0196 59       		.uleb128 0x59
 4705 0197 05       		.uleb128 0x5
 4706 0198 01       		.uleb128 0x1
 4707 0199 13       		.uleb128 0x13
 4708 019a 00       		.byte	0
 4709 019b 00       		.byte	0
 4710 019c 21       		.uleb128 0x21
 4711 019d 05       		.uleb128 0x5
 4712 019e 00       		.byte	0
 4713 019f 31       		.uleb128 0x31
 4714 01a0 13       		.uleb128 0x13
 4715 01a1 02       		.uleb128 0x2
 4716 01a2 17       		.uleb128 0x17
 4717 01a3 00       		.byte	0
 4718 01a4 00       		.byte	0
 4719 01a5 22       		.uleb128 0x22
 4720 01a6 2E       		.uleb128 0x2e
 4721 01a7 01       		.byte	0x1
 4722 01a8 03       		.uleb128 0x3
 4723 01a9 0E       		.uleb128 0xe
 4724 01aa 3A       		.uleb128 0x3a
 4725 01ab 0B       		.uleb128 0xb
 4726 01ac 3B       		.uleb128 0x3b
 4727 01ad 05       		.uleb128 0x5
 4728 01ae 27       		.uleb128 0x27
 4729 01af 19       		.uleb128 0x19
 4730 01b0 20       		.uleb128 0x20
 4731 01b1 0B       		.uleb128 0xb
 4732 01b2 01       		.uleb128 0x1
 4733 01b3 13       		.uleb128 0x13
 4734 01b4 00       		.byte	0
 4735 01b5 00       		.byte	0
 4736 01b6 23       		.uleb128 0x23
 4737 01b7 05       		.uleb128 0x5
 4738 01b8 00       		.byte	0
 4739 01b9 03       		.uleb128 0x3
 4740 01ba 0E       		.uleb128 0xe
 4741 01bb 3A       		.uleb128 0x3a
 4742 01bc 0B       		.uleb128 0xb
 4743 01bd 3B       		.uleb128 0x3b
 4744 01be 05       		.uleb128 0x5
 4745 01bf 49       		.uleb128 0x49
 4746 01c0 13       		.uleb128 0x13
 4747 01c1 00       		.byte	0
 4748 01c2 00       		.byte	0
 4749 01c3 24       		.uleb128 0x24
 4750 01c4 1D       		.uleb128 0x1d
 4751 01c5 01       		.byte	0x1
 4752 01c6 31       		.uleb128 0x31
 4753 01c7 13       		.uleb128 0x13
 4754 01c8 52       		.uleb128 0x52
 4755 01c9 01       		.uleb128 0x1
 4756 01ca 55       		.uleb128 0x55
 4757 01cb 17       		.uleb128 0x17
 4758 01cc 58       		.uleb128 0x58
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 139


 4759 01cd 0B       		.uleb128 0xb
 4760 01ce 59       		.uleb128 0x59
 4761 01cf 05       		.uleb128 0x5
 4762 01d0 00       		.byte	0
 4763 01d1 00       		.byte	0
 4764 01d2 25       		.uleb128 0x25
 4765 01d3 05       		.uleb128 0x5
 4766 01d4 00       		.byte	0
 4767 01d5 03       		.uleb128 0x3
 4768 01d6 0E       		.uleb128 0xe
 4769 01d7 3A       		.uleb128 0x3a
 4770 01d8 0B       		.uleb128 0xb
 4771 01d9 3B       		.uleb128 0x3b
 4772 01da 05       		.uleb128 0x5
 4773 01db 49       		.uleb128 0x49
 4774 01dc 13       		.uleb128 0x13
 4775 01dd 02       		.uleb128 0x2
 4776 01de 18       		.uleb128 0x18
 4777 01df 00       		.byte	0
 4778 01e0 00       		.byte	0
 4779 01e1 26       		.uleb128 0x26
 4780 01e2 34       		.uleb128 0x34
 4781 01e3 00       		.byte	0
 4782 01e4 03       		.uleb128 0x3
 4783 01e5 0E       		.uleb128 0xe
 4784 01e6 3A       		.uleb128 0x3a
 4785 01e7 0B       		.uleb128 0xb
 4786 01e8 3B       		.uleb128 0x3b
 4787 01e9 05       		.uleb128 0x5
 4788 01ea 49       		.uleb128 0x49
 4789 01eb 13       		.uleb128 0x13
 4790 01ec 02       		.uleb128 0x2
 4791 01ed 18       		.uleb128 0x18
 4792 01ee 00       		.byte	0
 4793 01ef 00       		.byte	0
 4794 01f0 27       		.uleb128 0x27
 4795 01f1 0B       		.uleb128 0xb
 4796 01f2 01       		.byte	0x1
 4797 01f3 55       		.uleb128 0x55
 4798 01f4 17       		.uleb128 0x17
 4799 01f5 00       		.byte	0
 4800 01f6 00       		.byte	0
 4801 01f7 28       		.uleb128 0x28
 4802 01f8 34       		.uleb128 0x34
 4803 01f9 00       		.byte	0
 4804 01fa 31       		.uleb128 0x31
 4805 01fb 13       		.uleb128 0x13
 4806 01fc 02       		.uleb128 0x2
 4807 01fd 17       		.uleb128 0x17
 4808 01fe 00       		.byte	0
 4809 01ff 00       		.byte	0
 4810 0200 29       		.uleb128 0x29
 4811 0201 898201   		.uleb128 0x4109
 4812 0204 01       		.byte	0x1
 4813 0205 11       		.uleb128 0x11
 4814 0206 01       		.uleb128 0x1
 4815 0207 31       		.uleb128 0x31
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 140


 4816 0208 13       		.uleb128 0x13
 4817 0209 01       		.uleb128 0x1
 4818 020a 13       		.uleb128 0x13
 4819 020b 00       		.byte	0
 4820 020c 00       		.byte	0
 4821 020d 2A       		.uleb128 0x2a
 4822 020e 2E       		.uleb128 0x2e
 4823 020f 01       		.byte	0x1
 4824 0210 31       		.uleb128 0x31
 4825 0211 13       		.uleb128 0x13
 4826 0212 11       		.uleb128 0x11
 4827 0213 01       		.uleb128 0x1
 4828 0214 12       		.uleb128 0x12
 4829 0215 06       		.uleb128 0x6
 4830 0216 40       		.uleb128 0x40
 4831 0217 18       		.uleb128 0x18
 4832 0218 9742     		.uleb128 0x2117
 4833 021a 19       		.uleb128 0x19
 4834 021b 01       		.uleb128 0x1
 4835 021c 13       		.uleb128 0x13
 4836 021d 00       		.byte	0
 4837 021e 00       		.byte	0
 4838 021f 2B       		.uleb128 0x2b
 4839 0220 2E       		.uleb128 0x2e
 4840 0221 01       		.byte	0x1
 4841 0222 03       		.uleb128 0x3
 4842 0223 0E       		.uleb128 0xe
 4843 0224 3A       		.uleb128 0x3a
 4844 0225 0B       		.uleb128 0xb
 4845 0226 3B       		.uleb128 0x3b
 4846 0227 05       		.uleb128 0x5
 4847 0228 27       		.uleb128 0x27
 4848 0229 19       		.uleb128 0x19
 4849 022a 49       		.uleb128 0x49
 4850 022b 13       		.uleb128 0x13
 4851 022c 20       		.uleb128 0x20
 4852 022d 0B       		.uleb128 0xb
 4853 022e 01       		.uleb128 0x1
 4854 022f 13       		.uleb128 0x13
 4855 0230 00       		.byte	0
 4856 0231 00       		.byte	0
 4857 0232 2C       		.uleb128 0x2c
 4858 0233 2E       		.uleb128 0x2e
 4859 0234 01       		.byte	0x1
 4860 0235 3F       		.uleb128 0x3f
 4861 0236 19       		.uleb128 0x19
 4862 0237 03       		.uleb128 0x3
 4863 0238 0E       		.uleb128 0xe
 4864 0239 3A       		.uleb128 0x3a
 4865 023a 0B       		.uleb128 0xb
 4866 023b 3B       		.uleb128 0x3b
 4867 023c 05       		.uleb128 0x5
 4868 023d 27       		.uleb128 0x27
 4869 023e 19       		.uleb128 0x19
 4870 023f 49       		.uleb128 0x49
 4871 0240 13       		.uleb128 0x13
 4872 0241 11       		.uleb128 0x11
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 141


 4873 0242 01       		.uleb128 0x1
 4874 0243 12       		.uleb128 0x12
 4875 0244 06       		.uleb128 0x6
 4876 0245 40       		.uleb128 0x40
 4877 0246 18       		.uleb128 0x18
 4878 0247 9642     		.uleb128 0x2116
 4879 0249 19       		.uleb128 0x19
 4880 024a 01       		.uleb128 0x1
 4881 024b 13       		.uleb128 0x13
 4882 024c 00       		.byte	0
 4883 024d 00       		.byte	0
 4884 024e 2D       		.uleb128 0x2d
 4885 024f 34       		.uleb128 0x34
 4886 0250 00       		.byte	0
 4887 0251 03       		.uleb128 0x3
 4888 0252 0E       		.uleb128 0xe
 4889 0253 3A       		.uleb128 0x3a
 4890 0254 0B       		.uleb128 0xb
 4891 0255 3B       		.uleb128 0x3b
 4892 0256 05       		.uleb128 0x5
 4893 0257 49       		.uleb128 0x49
 4894 0258 13       		.uleb128 0x13
 4895 0259 1C       		.uleb128 0x1c
 4896 025a 0B       		.uleb128 0xb
 4897 025b 00       		.byte	0
 4898 025c 00       		.byte	0
 4899 025d 2E       		.uleb128 0x2e
 4900 025e 34       		.uleb128 0x34
 4901 025f 00       		.byte	0
 4902 0260 31       		.uleb128 0x31
 4903 0261 13       		.uleb128 0x13
 4904 0262 00       		.byte	0
 4905 0263 00       		.byte	0
 4906 0264 2F       		.uleb128 0x2f
 4907 0265 05       		.uleb128 0x5
 4908 0266 00       		.byte	0
 4909 0267 31       		.uleb128 0x31
 4910 0268 13       		.uleb128 0x13
 4911 0269 00       		.byte	0
 4912 026a 00       		.byte	0
 4913 026b 30       		.uleb128 0x30
 4914 026c 1D       		.uleb128 0x1d
 4915 026d 01       		.byte	0x1
 4916 026e 31       		.uleb128 0x31
 4917 026f 13       		.uleb128 0x13
 4918 0270 11       		.uleb128 0x11
 4919 0271 01       		.uleb128 0x1
 4920 0272 12       		.uleb128 0x12
 4921 0273 06       		.uleb128 0x6
 4922 0274 58       		.uleb128 0x58
 4923 0275 0B       		.uleb128 0xb
 4924 0276 59       		.uleb128 0x59
 4925 0277 05       		.uleb128 0x5
 4926 0278 01       		.uleb128 0x1
 4927 0279 13       		.uleb128 0x13
 4928 027a 00       		.byte	0
 4929 027b 00       		.byte	0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 142


 4930 027c 31       		.uleb128 0x31
 4931 027d 0B       		.uleb128 0xb
 4932 027e 01       		.byte	0x1
 4933 027f 11       		.uleb128 0x11
 4934 0280 01       		.uleb128 0x1
 4935 0281 12       		.uleb128 0x12
 4936 0282 06       		.uleb128 0x6
 4937 0283 00       		.byte	0
 4938 0284 00       		.byte	0
 4939 0285 32       		.uleb128 0x32
 4940 0286 34       		.uleb128 0x34
 4941 0287 00       		.byte	0
 4942 0288 03       		.uleb128 0x3
 4943 0289 0E       		.uleb128 0xe
 4944 028a 3A       		.uleb128 0x3a
 4945 028b 0B       		.uleb128 0xb
 4946 028c 3B       		.uleb128 0x3b
 4947 028d 0B       		.uleb128 0xb
 4948 028e 49       		.uleb128 0x49
 4949 028f 13       		.uleb128 0x13
 4950 0290 02       		.uleb128 0x2
 4951 0291 18       		.uleb128 0x18
 4952 0292 00       		.byte	0
 4953 0293 00       		.byte	0
 4954 0294 33       		.uleb128 0x33
 4955 0295 34       		.uleb128 0x34
 4956 0296 00       		.byte	0
 4957 0297 03       		.uleb128 0x3
 4958 0298 0E       		.uleb128 0xe
 4959 0299 3A       		.uleb128 0x3a
 4960 029a 0B       		.uleb128 0xb
 4961 029b 3B       		.uleb128 0x3b
 4962 029c 05       		.uleb128 0x5
 4963 029d 49       		.uleb128 0x49
 4964 029e 13       		.uleb128 0x13
 4965 029f 3F       		.uleb128 0x3f
 4966 02a0 19       		.uleb128 0x19
 4967 02a1 3C       		.uleb128 0x3c
 4968 02a2 19       		.uleb128 0x19
 4969 02a3 00       		.byte	0
 4970 02a4 00       		.byte	0
 4971 02a5 34       		.uleb128 0x34
 4972 02a6 34       		.uleb128 0x34
 4973 02a7 00       		.byte	0
 4974 02a8 03       		.uleb128 0x3
 4975 02a9 0E       		.uleb128 0xe
 4976 02aa 3A       		.uleb128 0x3a
 4977 02ab 0B       		.uleb128 0xb
 4978 02ac 3B       		.uleb128 0x3b
 4979 02ad 0B       		.uleb128 0xb
 4980 02ae 49       		.uleb128 0x49
 4981 02af 13       		.uleb128 0x13
 4982 02b0 3F       		.uleb128 0x3f
 4983 02b1 19       		.uleb128 0x19
 4984 02b2 3C       		.uleb128 0x3c
 4985 02b3 19       		.uleb128 0x19
 4986 02b4 00       		.byte	0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 143


 4987 02b5 00       		.byte	0
 4988 02b6 35       		.uleb128 0x35
 4989 02b7 34       		.uleb128 0x34
 4990 02b8 00       		.byte	0
 4991 02b9 03       		.uleb128 0x3
 4992 02ba 0E       		.uleb128 0xe
 4993 02bb 3A       		.uleb128 0x3a
 4994 02bc 0B       		.uleb128 0xb
 4995 02bd 3B       		.uleb128 0x3b
 4996 02be 0B       		.uleb128 0xb
 4997 02bf 49       		.uleb128 0x49
 4998 02c0 13       		.uleb128 0x13
 4999 02c1 3F       		.uleb128 0x3f
 5000 02c2 19       		.uleb128 0x19
 5001 02c3 02       		.uleb128 0x2
 5002 02c4 18       		.uleb128 0x18
 5003 02c5 00       		.byte	0
 5004 02c6 00       		.byte	0
 5005 02c7 36       		.uleb128 0x36
 5006 02c8 2E       		.uleb128 0x2e
 5007 02c9 00       		.byte	0
 5008 02ca 3F       		.uleb128 0x3f
 5009 02cb 19       		.uleb128 0x19
 5010 02cc 3C       		.uleb128 0x3c
 5011 02cd 19       		.uleb128 0x19
 5012 02ce 6E       		.uleb128 0x6e
 5013 02cf 0E       		.uleb128 0xe
 5014 02d0 03       		.uleb128 0x3
 5015 02d1 0E       		.uleb128 0xe
 5016 02d2 3A       		.uleb128 0x3a
 5017 02d3 0B       		.uleb128 0xb
 5018 02d4 3B       		.uleb128 0x3b
 5019 02d5 0B       		.uleb128 0xb
 5020 02d6 00       		.byte	0
 5021 02d7 00       		.byte	0
 5022 02d8 00       		.byte	0
 5023              		.section	.debug_loc,"",%progbits
 5024              	.Ldebug_loc0:
 5025              	.LLST0:
 5026 0000 00000000 		.4byte	.LVL0
 5027 0004 1B000000 		.4byte	.LVL4-1
 5028 0008 0100     		.2byte	0x1
 5029 000a 50       		.byte	0x50
 5030 000b 1B000000 		.4byte	.LVL4-1
 5031 000f 68000000 		.4byte	.LFE4
 5032 0013 0400     		.2byte	0x4
 5033 0015 F3       		.byte	0xf3
 5034 0016 01       		.uleb128 0x1
 5035 0017 50       		.byte	0x50
 5036 0018 9F       		.byte	0x9f
 5037 0019 00000000 		.4byte	0
 5038 001d 00000000 		.4byte	0
 5039              	.LLST1:
 5040 0021 1C000000 		.4byte	.LVL4
 5041 0025 61000000 		.4byte	.LVL20-1
 5042 0029 0100     		.2byte	0x1
 5043 002b 50       		.byte	0x50
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 144


 5044 002c 00000000 		.4byte	0
 5045 0030 00000000 		.4byte	0
 5046              	.LLST2:
 5047 0034 18000000 		.4byte	.LVL3
 5048 0038 62000000 		.4byte	.LVL20
 5049 003c 0200     		.2byte	0x2
 5050 003e 30       		.byte	0x30
 5051 003f 9F       		.byte	0x9f
 5052 0040 62000000 		.4byte	.LVL20
 5053 0044 68000000 		.4byte	.LFE4
 5054 0048 0200     		.2byte	0x2
 5055 004a 31       		.byte	0x31
 5056 004b 9F       		.byte	0x9f
 5057 004c 00000000 		.4byte	0
 5058 0050 00000000 		.4byte	0
 5059              	.LLST3:
 5060 0054 0A000000 		.4byte	.LVL1
 5061 0058 0E000000 		.4byte	.LVL2
 5062 005c 0200     		.2byte	0x2
 5063 005e 30       		.byte	0x30
 5064 005f 9F       		.byte	0x9f
 5065 0060 18000000 		.4byte	.LVL3
 5066 0064 42000000 		.4byte	.LVL10
 5067 0068 0100     		.2byte	0x1
 5068 006a 55       		.byte	0x55
 5069 006b 00000000 		.4byte	0
 5070 006f 00000000 		.4byte	0
 5071              	.LLST4:
 5072 0073 0A000000 		.4byte	.LVL1
 5073 0077 0E000000 		.4byte	.LVL2
 5074 007b 0200     		.2byte	0x2
 5075 007d 35       		.byte	0x35
 5076 007e 9F       		.byte	0x9f
 5077 007f 18000000 		.4byte	.LVL3
 5078 0083 4C000000 		.4byte	.LVL13
 5079 0087 0100     		.2byte	0x1
 5080 0089 54       		.byte	0x54
 5081 008a 00000000 		.4byte	0
 5082 008e 00000000 		.4byte	0
 5083              	.LLST5:
 5084 0092 36000000 		.4byte	.LVL7
 5085 0096 38000000 		.4byte	.LVL8
 5086 009a 0100     		.2byte	0x1
 5087 009c 51       		.byte	0x51
 5088 009d 38000000 		.4byte	.LVL8
 5089 00a1 3E000000 		.4byte	.LVL9
 5090 00a5 0200     		.2byte	0x2
 5091 00a7 91       		.byte	0x91
 5092 00a8 64       		.sleb128 -28
 5093 00a9 3E000000 		.4byte	.LVL9
 5094 00ad 4A000000 		.4byte	.LVL12
 5095 00b1 0100     		.2byte	0x1
 5096 00b3 51       		.byte	0x51
 5097 00b4 4A000000 		.4byte	.LVL12
 5098 00b8 50000000 		.4byte	.LVL15
 5099 00bc 0200     		.2byte	0x2
 5100 00be 75       		.byte	0x75
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 145


 5101 00bf 00       		.sleb128 0
 5102 00c0 5A000000 		.4byte	.LVL17
 5103 00c4 61000000 		.4byte	.LVL20-1
 5104 00c8 0100     		.2byte	0x1
 5105 00ca 52       		.byte	0x52
 5106 00cb 00000000 		.4byte	0
 5107 00cf 00000000 		.4byte	0
 5108              	.LLST6:
 5109 00d3 26000000 		.4byte	.LVL5
 5110 00d7 4E000000 		.4byte	.LVL14
 5111 00db 0100     		.2byte	0x1
 5112 00dd 52       		.byte	0x52
 5113 00de 4E000000 		.4byte	.LVL14
 5114 00e2 54000000 		.4byte	.LVL16
 5115 00e6 0100     		.2byte	0x1
 5116 00e8 54       		.byte	0x54
 5117 00e9 54000000 		.4byte	.LVL16
 5118 00ed 5E000000 		.4byte	.LVL19
 5119 00f1 0200     		.2byte	0x2
 5120 00f3 76       		.byte	0x76
 5121 00f4 00       		.sleb128 0
 5122 00f5 00000000 		.4byte	0
 5123 00f9 00000000 		.4byte	0
 5124              	.LLST7:
 5125 00fd 32000000 		.4byte	.LVL25
 5126 0101 3C000000 		.4byte	.LVL26
 5127 0105 0200     		.2byte	0x2
 5128 0107 30       		.byte	0x30
 5129 0108 9F       		.byte	0x9f
 5130 0109 00000000 		.4byte	0
 5131 010d 00000000 		.4byte	0
 5132              	.LLST8:
 5133 0111 00000000 		.4byte	.LVL27
 5134 0115 11000000 		.4byte	.LVL29-1
 5135 0119 0100     		.2byte	0x1
 5136 011b 50       		.byte	0x50
 5137 011c 11000000 		.4byte	.LVL29-1
 5138 0120 1E000000 		.4byte	.LVL32
 5139 0124 0100     		.2byte	0x1
 5140 0126 56       		.byte	0x56
 5141 0127 1E000000 		.4byte	.LVL32
 5142 012b 54000000 		.4byte	.LFE9
 5143 012f 0400     		.2byte	0x4
 5144 0131 F3       		.byte	0xf3
 5145 0132 01       		.uleb128 0x1
 5146 0133 50       		.byte	0x50
 5147 0134 9F       		.byte	0x9f
 5148 0135 00000000 		.4byte	0
 5149 0139 00000000 		.4byte	0
 5150              	.LLST9:
 5151 013d 12000000 		.4byte	.LVL29
 5152 0141 3B000000 		.4byte	.LVL35-1
 5153 0145 0100     		.2byte	0x1
 5154 0147 50       		.byte	0x50
 5155 0148 00000000 		.4byte	0
 5156 014c 00000000 		.4byte	0
 5157              	.LLST10:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 146


 5158 0150 0C000000 		.4byte	.LVL28
 5159 0154 3C000000 		.4byte	.LVL36
 5160 0158 0100     		.2byte	0x1
 5161 015a 55       		.byte	0x55
 5162 015b 00000000 		.4byte	0
 5163 015f 00000000 		.4byte	0
 5164              	.LLST11:
 5165 0163 16000000 		.4byte	.LVL30
 5166 0167 18000000 		.4byte	.LVL31
 5167 016b 0900     		.2byte	0x9
 5168 016d 72       		.byte	0x72
 5169 016e 00       		.sleb128 0
 5170 016f 11       		.byte	0x11
 5171 0170 80F6835C 		.sleb128 -75433216
 5172 0174 1A       		.byte	0x1a
 5173 0175 9F       		.byte	0x9f
 5174 0176 36000000 		.4byte	.LVL34
 5175 017a 3B000000 		.4byte	.LVL35-1
 5176 017e 0100     		.2byte	0x1
 5177 0180 53       		.byte	0x53
 5178 0181 00000000 		.4byte	0
 5179 0185 00000000 		.4byte	0
 5180              	.LLST12:
 5181 0189 0C000000 		.4byte	.LVL28
 5182 018d 11000000 		.4byte	.LVL29-1
 5183 0191 0300     		.2byte	0x3
 5184 0193 70       		.byte	0x70
 5185 0194 09       		.sleb128 9
 5186 0195 9F       		.byte	0x9f
 5187 0196 11000000 		.4byte	.LVL29-1
 5188 019a 1E000000 		.4byte	.LVL32
 5189 019e 0300     		.2byte	0x3
 5190 01a0 76       		.byte	0x76
 5191 01a1 09       		.sleb128 9
 5192 01a2 9F       		.byte	0x9f
 5193 01a3 1E000000 		.4byte	.LVL32
 5194 01a7 54000000 		.4byte	.LFE9
 5195 01ab 0600     		.2byte	0x6
 5196 01ad F3       		.byte	0xf3
 5197 01ae 01       		.uleb128 0x1
 5198 01af 50       		.byte	0x50
 5199 01b0 23       		.byte	0x23
 5200 01b1 09       		.uleb128 0x9
 5201 01b2 9F       		.byte	0x9f
 5202 01b3 00000000 		.4byte	0
 5203 01b7 00000000 		.4byte	0
 5204              	.LLST13:
 5205 01bb 1A000000 		.4byte	.LVL38
 5206 01bf 23000000 		.4byte	.LVL41-1
 5207 01c3 0100     		.2byte	0x1
 5208 01c5 50       		.byte	0x50
 5209 01c6 00000000 		.4byte	0
 5210 01ca 00000000 		.4byte	0
 5211              	.LLST14:
 5212 01ce 1A000000 		.4byte	.LVL38
 5213 01d2 1C000000 		.4byte	.LVL39
 5214 01d6 0800     		.2byte	0x8
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 147


 5215 01d8 73       		.byte	0x73
 5216 01d9 0E       		.sleb128 14
 5217 01da 94       		.byte	0x94
 5218 01db 01       		.byte	0x1
 5219 01dc 08       		.byte	0x8
 5220 01dd FF       		.byte	0xff
 5221 01de 1A       		.byte	0x1a
 5222 01df 9F       		.byte	0x9f
 5223 01e0 1C000000 		.4byte	.LVL39
 5224 01e4 1E000000 		.4byte	.LVL40
 5225 01e8 0100     		.2byte	0x1
 5226 01ea 53       		.byte	0x53
 5227 01eb 00000000 		.4byte	0
 5228 01ef 00000000 		.4byte	0
 5229              	.LLST16:
 5230 01f3 16000000 		.4byte	.LVL37
 5231 01f7 1C000000 		.4byte	.LVL39
 5232 01fb 0100     		.2byte	0x1
 5233 01fd 53       		.byte	0x53
 5234 01fe 00000000 		.4byte	0
 5235 0202 00000000 		.4byte	0
 5236              	.LLST19:
 5237 0206 36000000 		.4byte	.LVL46
 5238 020a 66000000 		.4byte	.LVL55
 5239 020e 0100     		.2byte	0x1
 5240 0210 56       		.byte	0x56
 5241 0211 00000000 		.4byte	0
 5242 0215 00000000 		.4byte	0
 5243              	.LLST20:
 5244 0219 42000000 		.4byte	.LVL48
 5245 021d 48000000 		.4byte	.LVL50
 5246 0221 0100     		.2byte	0x1
 5247 0223 53       		.byte	0x53
 5248 0224 48000000 		.4byte	.LVL50
 5249 0228 58000000 		.4byte	.LVL54
 5250 022c 0200     		.2byte	0x2
 5251 022e 75       		.byte	0x75
 5252 022f 00       		.sleb128 0
 5253 0230 58000000 		.4byte	.LVL54
 5254 0234 66000000 		.4byte	.LVL55
 5255 0238 1000     		.2byte	0x10
 5256 023a 76       		.byte	0x76
 5257 023b 00       		.sleb128 0
 5258 023c 11       		.byte	0x11
 5259 023d 80D0FFFF 		.sleb128 -1073747968
 5259      7B
 5260 0242 1A       		.byte	0x1a
 5261 0243 0C       		.byte	0xc
 5262 0244 F0060040 		.4byte	0x400006f0
 5263 0248 21       		.byte	0x21
 5264 0249 9F       		.byte	0x9f
 5265 024a 00000000 		.4byte	0
 5266 024e 00000000 		.4byte	0
 5267              	.LLST21:
 5268 0252 44000000 		.4byte	.LVL49
 5269 0256 4A000000 		.4byte	.LVL51
 5270 025a 0300     		.2byte	0x3
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 148


 5271 025c 08       		.byte	0x8
 5272 025d F0       		.byte	0xf0
 5273 025e 9F       		.byte	0x9f
 5274 025f 4A000000 		.4byte	.LVL51
 5275 0263 52000000 		.4byte	.LVL52
 5276 0267 0300     		.2byte	0x3
 5277 0269 73       		.byte	0x73
 5278 026a 7F       		.sleb128 -1
 5279 026b 9F       		.byte	0x9f
 5280 026c 52000000 		.4byte	.LVL52
 5281 0270 56000000 		.4byte	.LVL53
 5282 0274 0100     		.2byte	0x1
 5283 0276 53       		.byte	0x53
 5284 0277 00000000 		.4byte	0
 5285 027b 00000000 		.4byte	0
 5286              	.LLST22:
 5287 027f 00000000 		.4byte	.LVL59
 5288 0283 0B000000 		.4byte	.LVL61-1
 5289 0287 0100     		.2byte	0x1
 5290 0289 50       		.byte	0x50
 5291 028a 0B000000 		.4byte	.LVL61-1
 5292 028e 22000000 		.4byte	.LVL65
 5293 0292 0100     		.2byte	0x1
 5294 0294 54       		.byte	0x54
 5295 0295 22000000 		.4byte	.LVL65
 5296 0299 32000000 		.4byte	.LFE19
 5297 029d 0400     		.2byte	0x4
 5298 029f F3       		.byte	0xf3
 5299 02a0 01       		.uleb128 0x1
 5300 02a1 50       		.byte	0x50
 5301 02a2 9F       		.byte	0x9f
 5302 02a3 00000000 		.4byte	0
 5303 02a7 00000000 		.4byte	0
 5304              	.LLST23:
 5305 02ab 16000000 		.4byte	.LVL62
 5306 02af 1A000000 		.4byte	.LVL63
 5307 02b3 0100     		.2byte	0x1
 5308 02b5 53       		.byte	0x53
 5309 02b6 1C000000 		.4byte	.LVL64
 5310 02ba 24000000 		.4byte	.LVL66
 5311 02be 0100     		.2byte	0x1
 5312 02c0 52       		.byte	0x52
 5313 02c1 24000000 		.4byte	.LVL66
 5314 02c5 2F000000 		.4byte	.LVL67-1
 5315 02c9 0100     		.2byte	0x1
 5316 02cb 53       		.byte	0x53
 5317 02cc 00000000 		.4byte	0
 5318 02d0 00000000 		.4byte	0
 5319              	.LLST24:
 5320 02d4 0C000000 		.4byte	.LVL61
 5321 02d8 2F000000 		.4byte	.LVL67-1
 5322 02dc 0100     		.2byte	0x1
 5323 02de 50       		.byte	0x50
 5324 02df 00000000 		.4byte	0
 5325 02e3 00000000 		.4byte	0
 5326              	.LLST25:
 5327 02e7 08000000 		.4byte	.LVL60
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 149


 5328 02eb 30000000 		.4byte	.LVL68
 5329 02ef 0100     		.2byte	0x1
 5330 02f1 55       		.byte	0x55
 5331 02f2 00000000 		.4byte	0
 5332 02f6 00000000 		.4byte	0
 5333              	.LLST26:
 5334 02fa 08000000 		.4byte	.LVL60
 5335 02fe 30000000 		.4byte	.LVL69
 5336 0302 0100     		.2byte	0x1
 5337 0304 57       		.byte	0x57
 5338 0305 00000000 		.4byte	0
 5339 0309 00000000 		.4byte	0
 5340              	.LLST27:
 5341 030d 1A000000 		.4byte	.LVL70
 5342 0311 1E000000 		.4byte	.LVL71
 5343 0315 0100     		.2byte	0x1
 5344 0317 53       		.byte	0x53
 5345 0318 1E000000 		.4byte	.LVL71
 5346 031c 8C000000 		.4byte	.LFE16
 5347 0320 0200     		.2byte	0x2
 5348 0322 91       		.byte	0x91
 5349 0323 64       		.sleb128 -28
 5350 0324 00000000 		.4byte	0
 5351 0328 00000000 		.4byte	0
 5352              	.LLST28:
 5353 032c 00000000 		.4byte	.LVL77
 5354 0330 0E000000 		.4byte	.LVL79
 5355 0334 0100     		.2byte	0x1
 5356 0336 50       		.byte	0x50
 5357 0337 0E000000 		.4byte	.LVL79
 5358 033b 24000000 		.4byte	.LFE17
 5359 033f 0400     		.2byte	0x4
 5360 0341 F3       		.byte	0xf3
 5361 0342 01       		.uleb128 0x1
 5362 0343 50       		.byte	0x50
 5363 0344 9F       		.byte	0x9f
 5364 0345 00000000 		.4byte	0
 5365 0349 00000000 		.4byte	0
 5366              	.LLST29:
 5367 034d 00000000 		.4byte	.LVL77
 5368 0351 0A000000 		.4byte	.LVL78
 5369 0355 0100     		.2byte	0x1
 5370 0357 51       		.byte	0x51
 5371 0358 0A000000 		.4byte	.LVL78
 5372 035c 24000000 		.4byte	.LFE17
 5373 0360 0400     		.2byte	0x4
 5374 0362 F3       		.byte	0xf3
 5375 0363 01       		.uleb128 0x1
 5376 0364 51       		.byte	0x51
 5377 0365 9F       		.byte	0x9f
 5378 0366 00000000 		.4byte	0
 5379 036a 00000000 		.4byte	0
 5380              	.LLST30:
 5381 036e 00000000 		.4byte	.LVL81
 5382 0372 0F000000 		.4byte	.LVL83-1
 5383 0376 0100     		.2byte	0x1
 5384 0378 50       		.byte	0x50
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 150


 5385 0379 0F000000 		.4byte	.LVL83-1
 5386 037d 5A000000 		.4byte	.LVL99
 5387 0381 0100     		.2byte	0x1
 5388 0383 54       		.byte	0x54
 5389 0384 5A000000 		.4byte	.LVL99
 5390 0388 70000000 		.4byte	.LFE20
 5391 038c 0400     		.2byte	0x4
 5392 038e F3       		.byte	0xf3
 5393 038f 01       		.uleb128 0x1
 5394 0390 50       		.byte	0x50
 5395 0391 9F       		.byte	0x9f
 5396 0392 00000000 		.4byte	0
 5397 0396 00000000 		.4byte	0
 5398              	.LLST31:
 5399 039a 0A000000 		.4byte	.LVL82
 5400 039e 68000000 		.4byte	.LVL101
 5401 03a2 0100     		.2byte	0x1
 5402 03a4 56       		.byte	0x56
 5403 03a5 00000000 		.4byte	0
 5404 03a9 00000000 		.4byte	0
 5405              	.LLST32:
 5406 03ad 0A000000 		.4byte	.LVL82
 5407 03b1 4C000000 		.4byte	.LVL96
 5408 03b5 0100     		.2byte	0x1
 5409 03b7 55       		.byte	0x55
 5410 03b8 00000000 		.4byte	0
 5411 03bc 00000000 		.4byte	0
 5412              	.LLST33:
 5413 03c0 16000000 		.4byte	.LVL85
 5414 03c4 18000000 		.4byte	.LVL86
 5415 03c8 0100     		.2byte	0x1
 5416 03ca 53       		.byte	0x53
 5417 03cb 1C000000 		.4byte	.LVL87
 5418 03cf 42000000 		.4byte	.LVL93
 5419 03d3 0100     		.2byte	0x1
 5420 03d5 51       		.byte	0x51
 5421 03d6 42000000 		.4byte	.LVL93
 5422 03da 46000000 		.4byte	.LVL95
 5423 03de 0100     		.2byte	0x1
 5424 03e0 53       		.byte	0x53
 5425 03e1 46000000 		.4byte	.LVL95
 5426 03e5 54000000 		.4byte	.LVL98
 5427 03e9 0100     		.2byte	0x1
 5428 03eb 51       		.byte	0x51
 5429 03ec 00000000 		.4byte	0
 5430 03f0 00000000 		.4byte	0
 5431              	.LLST34:
 5432 03f4 20000000 		.4byte	.LVL88
 5433 03f8 22000000 		.4byte	.LVL89
 5434 03fc 0100     		.2byte	0x1
 5435 03fe 53       		.byte	0x53
 5436 03ff 22000000 		.4byte	.LVL89
 5437 0403 2C000000 		.4byte	.LVL90
 5438 0407 0100     		.2byte	0x1
 5439 0409 5C       		.byte	0x5c
 5440 040a 2C000000 		.4byte	.LVL90
 5441 040e 2E000000 		.4byte	.LVL91
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 151


 5442 0412 0100     		.2byte	0x1
 5443 0414 50       		.byte	0x50
 5444 0415 2E000000 		.4byte	.LVL91
 5445 0419 3E000000 		.4byte	.LVL92
 5446 041d 0100     		.2byte	0x1
 5447 041f 53       		.byte	0x53
 5448 0420 3E000000 		.4byte	.LVL92
 5449 0424 44000000 		.4byte	.LVL94
 5450 0428 0200     		.2byte	0x2
 5451 042a 77       		.byte	0x77
 5452 042b 00       		.sleb128 0
 5453 042c 46000000 		.4byte	.LVL95
 5454 0430 54000000 		.4byte	.LVL98
 5455 0434 0100     		.2byte	0x1
 5456 0436 53       		.byte	0x53
 5457 0437 00000000 		.4byte	0
 5458 043b 00000000 		.4byte	0
 5459              	.LLST35:
 5460 043f 00000000 		.4byte	.LVL103
 5461 0443 0E000000 		.4byte	.LVL104
 5462 0447 0100     		.2byte	0x1
 5463 0449 50       		.byte	0x50
 5464 044a 0E000000 		.4byte	.LVL104
 5465 044e 58000000 		.4byte	.LFE12
 5466 0452 0400     		.2byte	0x4
 5467 0454 F3       		.byte	0xf3
 5468 0455 01       		.uleb128 0x1
 5469 0456 50       		.byte	0x50
 5470 0457 9F       		.byte	0x9f
 5471 0458 00000000 		.4byte	0
 5472 045c 00000000 		.4byte	0
 5473              	.LLST36:
 5474 0460 16000000 		.4byte	.LVL105
 5475 0464 44000000 		.4byte	.LVL110
 5476 0468 0100     		.2byte	0x1
 5477 046a 56       		.byte	0x56
 5478 046b 44000000 		.4byte	.LVL110
 5479 046f 44000000 		.4byte	.LVL111
 5480 0473 0A00     		.2byte	0xa
 5481 0475 F3       		.byte	0xf3
 5482 0476 01       		.uleb128 0x1
 5483 0477 50       		.byte	0x50
 5484 0478 4C       		.byte	0x4c
 5485 0479 1E       		.byte	0x1e
 5486 047a 77       		.byte	0x77
 5487 047b 00       		.sleb128 0
 5488 047c 22       		.byte	0x22
 5489 047d 23       		.byte	0x23
 5490 047e 04       		.uleb128 0x4
 5491 047f 00000000 		.4byte	0
 5492 0483 00000000 		.4byte	0
 5493              	.LLST37:
 5494 0487 00000000 		.4byte	.LVL112
 5495 048b 25000000 		.4byte	.LVL115-1
 5496 048f 0100     		.2byte	0x1
 5497 0491 50       		.byte	0x50
 5498 0492 25000000 		.4byte	.LVL115-1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 152


 5499 0496 64000000 		.4byte	.LFE13
 5500 049a 0400     		.2byte	0x4
 5501 049c F3       		.byte	0xf3
 5502 049d 01       		.uleb128 0x1
 5503 049e 50       		.byte	0x50
 5504 049f 9F       		.byte	0x9f
 5505 04a0 00000000 		.4byte	0
 5506 04a4 00000000 		.4byte	0
 5507              	.LLST38:
 5508 04a8 00000000 		.4byte	.LVL112
 5509 04ac 12000000 		.4byte	.LVL113
 5510 04b0 0100     		.2byte	0x1
 5511 04b2 51       		.byte	0x51
 5512 04b3 12000000 		.4byte	.LVL113
 5513 04b7 64000000 		.4byte	.LFE13
 5514 04bb 0400     		.2byte	0x4
 5515 04bd F3       		.byte	0xf3
 5516 04be 01       		.uleb128 0x1
 5517 04bf 51       		.byte	0x51
 5518 04c0 9F       		.byte	0x9f
 5519 04c1 00000000 		.4byte	0
 5520 04c5 00000000 		.4byte	0
 5521              	.LLST39:
 5522 04c9 18000000 		.4byte	.LVL114
 5523 04cd 48000000 		.4byte	.LVL119
 5524 04d1 0100     		.2byte	0x1
 5525 04d3 56       		.byte	0x56
 5526 04d4 00000000 		.4byte	0
 5527 04d8 00000000 		.4byte	0
 5528              	.LLST40:
 5529 04dc 00000000 		.4byte	.LVL120
 5530 04e0 0E000000 		.4byte	.LVL122
 5531 04e4 0100     		.2byte	0x1
 5532 04e6 50       		.byte	0x50
 5533 04e7 0E000000 		.4byte	.LVL122
 5534 04eb 24000000 		.4byte	.LFE18
 5535 04ef 0400     		.2byte	0x4
 5536 04f1 F3       		.byte	0xf3
 5537 04f2 01       		.uleb128 0x1
 5538 04f3 50       		.byte	0x50
 5539 04f4 9F       		.byte	0x9f
 5540 04f5 00000000 		.4byte	0
 5541 04f9 00000000 		.4byte	0
 5542              	.LLST41:
 5543 04fd 00000000 		.4byte	.LVL120
 5544 0501 0A000000 		.4byte	.LVL121
 5545 0505 0100     		.2byte	0x1
 5546 0507 51       		.byte	0x51
 5547 0508 0A000000 		.4byte	.LVL121
 5548 050c 24000000 		.4byte	.LFE18
 5549 0510 0400     		.2byte	0x4
 5550 0512 F3       		.byte	0xf3
 5551 0513 01       		.uleb128 0x1
 5552 0514 51       		.byte	0x51
 5553 0515 9F       		.byte	0x9f
 5554 0516 00000000 		.4byte	0
 5555 051a 00000000 		.4byte	0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 153


 5556              	.LLST42:
 5557 051e 00000000 		.4byte	.LVL124
 5558 0522 22000000 		.4byte	.LVL126
 5559 0526 0100     		.2byte	0x1
 5560 0528 50       		.byte	0x50
 5561 0529 22000000 		.4byte	.LVL126
 5562 052d 7C020000 		.4byte	.LFE25
 5563 0531 0200     		.2byte	0x2
 5564 0533 91       		.byte	0x91
 5565 0534 50       		.sleb128 -48
 5566 0535 00000000 		.4byte	0
 5567 0539 00000000 		.4byte	0
 5568              	.LLST43:
 5569 053d 00000000 		.4byte	.LVL124
 5570 0541 1C000000 		.4byte	.LVL125
 5571 0545 0100     		.2byte	0x1
 5572 0547 51       		.byte	0x51
 5573 0548 1C000000 		.4byte	.LVL125
 5574 054c 7C020000 		.4byte	.LFE25
 5575 0550 0200     		.2byte	0x2
 5576 0552 91       		.byte	0x91
 5577 0553 54       		.sleb128 -44
 5578 0554 00000000 		.4byte	0
 5579 0558 00000000 		.4byte	0
 5580              	.LLST44:
 5581 055c F0010000 		.4byte	.LVL197
 5582 0560 F4010000 		.4byte	.LVL198
 5583 0564 0600     		.2byte	0x6
 5584 0566 0C       		.byte	0xc
 5585 0567 00366E01 		.4byte	0x16e3600
 5586 056b 9F       		.byte	0x9f
 5587 056c F4010000 		.4byte	.LVL198
 5588 0570 26020000 		.4byte	.LVL204
 5589 0574 0100     		.2byte	0x1
 5590 0576 51       		.byte	0x51
 5591 0577 00000000 		.4byte	0
 5592 057b 00000000 		.4byte	0
 5593              	.LLST45:
 5594 057f 2A000000 		.4byte	.LVL127
 5595 0583 C6000000 		.4byte	.LVL142
 5596 0587 0200     		.2byte	0x2
 5597 0589 91       		.byte	0x91
 5598 058a 54       		.sleb128 -44
 5599 058b 1A010000 		.4byte	.LVL158
 5600 058f 4C010000 		.4byte	.LVL168
 5601 0593 0200     		.2byte	0x2
 5602 0595 91       		.byte	0x91
 5603 0596 54       		.sleb128 -44
 5604 0597 00000000 		.4byte	0
 5605 059b 00000000 		.4byte	0
 5606              	.LLST46:
 5607 059f 2A000000 		.4byte	.LVL127
 5608 05a3 C6000000 		.4byte	.LVL142
 5609 05a7 0200     		.2byte	0x2
 5610 05a9 91       		.byte	0x91
 5611 05aa 50       		.sleb128 -48
 5612 05ab 1A010000 		.4byte	.LVL158
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 154


 5613 05af 4C010000 		.4byte	.LVL168
 5614 05b3 0200     		.2byte	0x2
 5615 05b5 91       		.byte	0x91
 5616 05b6 50       		.sleb128 -48
 5617 05b7 00000000 		.4byte	0
 5618 05bb 00000000 		.4byte	0
 5619              	.LLST47:
 5620 05bf 44000000 		.4byte	.LVL129
 5621 05c3 4E000000 		.4byte	.LVL130
 5622 05c7 0200     		.2byte	0x2
 5623 05c9 30       		.byte	0x30
 5624 05ca 9F       		.byte	0x9f
 5625 05cb 4E000000 		.4byte	.LVL130
 5626 05cf C2000000 		.4byte	.LVL141
 5627 05d3 0200     		.2byte	0x2
 5628 05d5 91       		.byte	0x91
 5629 05d6 4C       		.sleb128 -52
 5630 05d7 C2000000 		.4byte	.LVL141
 5631 05db C6000000 		.4byte	.LVL142
 5632 05df 0100     		.2byte	0x1
 5633 05e1 52       		.byte	0x52
 5634 05e2 1A010000 		.4byte	.LVL158
 5635 05e6 4A010000 		.4byte	.LVL167
 5636 05ea 0200     		.2byte	0x2
 5637 05ec 91       		.byte	0x91
 5638 05ed 4C       		.sleb128 -52
 5639 05ee 4A010000 		.4byte	.LVL167
 5640 05f2 4C010000 		.4byte	.LVL168
 5641 05f6 0100     		.2byte	0x1
 5642 05f8 53       		.byte	0x53
 5643 05f9 00000000 		.4byte	0
 5644 05fd 00000000 		.4byte	0
 5645              	.LLST48:
 5646 0601 2A000000 		.4byte	.LVL127
 5647 0605 6A000000 		.4byte	.LVL131
 5648 0609 0300     		.2byte	0x3
 5649 060b 09       		.byte	0x9
 5650 060c FF       		.byte	0xff
 5651 060d 9F       		.byte	0x9f
 5652 060e 6A000000 		.4byte	.LVL131
 5653 0612 6E000000 		.4byte	.LVL132
 5654 0616 0200     		.2byte	0x2
 5655 0618 30       		.byte	0x30
 5656 0619 9F       		.byte	0x9f
 5657 061a 6E000000 		.4byte	.LVL132
 5658 061e 70000000 		.4byte	.LVL133
 5659 0622 0300     		.2byte	0x3
 5660 0624 09       		.byte	0x9
 5661 0625 FF       		.byte	0xff
 5662 0626 9F       		.byte	0x9f
 5663 0627 8E000000 		.4byte	.LVL138
 5664 062b 9C000000 		.4byte	.LVL139
 5665 062f 0200     		.2byte	0x2
 5666 0631 30       		.byte	0x30
 5667 0632 9F       		.byte	0x9f
 5668 0633 9C000000 		.4byte	.LVL139
 5669 0637 A0000000 		.4byte	.LVL140
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 155


 5670 063b 0300     		.2byte	0x3
 5671 063d 09       		.byte	0x9
 5672 063e FF       		.byte	0xff
 5673 063f 9F       		.byte	0x9f
 5674 0640 A0000000 		.4byte	.LVL140
 5675 0644 C6000000 		.4byte	.LVL142
 5676 0648 0200     		.2byte	0x2
 5677 064a 30       		.byte	0x30
 5678 064b 9F       		.byte	0x9f
 5679 064c 1A010000 		.4byte	.LVL158
 5680 0650 20010000 		.4byte	.LVL159
 5681 0654 0200     		.2byte	0x2
 5682 0656 30       		.byte	0x30
 5683 0657 9F       		.byte	0x9f
 5684 0658 20010000 		.4byte	.LVL159
 5685 065c 4C010000 		.4byte	.LVL168
 5686 0660 0300     		.2byte	0x3
 5687 0662 09       		.byte	0x9
 5688 0663 FF       		.byte	0xff
 5689 0664 9F       		.byte	0x9f
 5690 0665 00000000 		.4byte	0
 5691 0669 00000000 		.4byte	0
 5692              	.LLST49:
 5693 066d 6A000000 		.4byte	.LVL131
 5694 0671 70000000 		.4byte	.LVL133
 5695 0675 0300     		.2byte	0x3
 5696 0677 08       		.byte	0x8
 5697 0678 40       		.byte	0x40
 5698 0679 9F       		.byte	0x9f
 5699 067a 70000000 		.4byte	.LVL133
 5700 067e C2000000 		.4byte	.LVL141
 5701 0682 0100     		.2byte	0x1
 5702 0684 56       		.byte	0x56
 5703 0685 1A010000 		.4byte	.LVL158
 5704 0689 4C010000 		.4byte	.LVL168
 5705 068d 0100     		.2byte	0x1
 5706 068f 56       		.byte	0x56
 5707 0690 00000000 		.4byte	0
 5708 0694 00000000 		.4byte	0
 5709              	.LLST50:
 5710 0698 44000000 		.4byte	.LVL129
 5711 069c 4E000000 		.4byte	.LVL130
 5712 06a0 0100     		.2byte	0x1
 5713 06a2 50       		.byte	0x50
 5714 06a3 4E000000 		.4byte	.LVL130
 5715 06a7 C6000000 		.4byte	.LVL142
 5716 06ab 0200     		.2byte	0x2
 5717 06ad 91       		.byte	0x91
 5718 06ae 60       		.sleb128 -32
 5719 06af 1A010000 		.4byte	.LVL158
 5720 06b3 4C010000 		.4byte	.LVL168
 5721 06b7 0200     		.2byte	0x2
 5722 06b9 91       		.byte	0x91
 5723 06ba 60       		.sleb128 -32
 5724 06bb 00000000 		.4byte	0
 5725 06bf 00000000 		.4byte	0
 5726              	.LLST51:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 156


 5727 06c3 7C000000 		.4byte	.LVL135
 5728 06c7 80000000 		.4byte	.LVL136
 5729 06cb 0600     		.2byte	0x6
 5730 06cd 0C       		.byte	0xc
 5731 06ce 00A60E00 		.4byte	0xea600
 5732 06d2 9F       		.byte	0x9f
 5733 06d3 80000000 		.4byte	.LVL136
 5734 06d7 8A000000 		.4byte	.LVL137
 5735 06db 0300     		.2byte	0x3
 5736 06dd 73       		.byte	0x73
 5737 06de 7F       		.sleb128 -1
 5738 06df 9F       		.byte	0x9f
 5739 06e0 8A000000 		.4byte	.LVL137
 5740 06e4 8E000000 		.4byte	.LVL138
 5741 06e8 0100     		.2byte	0x1
 5742 06ea 53       		.byte	0x53
 5743 06eb 28010000 		.4byte	.LVL161
 5744 06ef 2E010000 		.4byte	.LVL162
 5745 06f3 0600     		.2byte	0x6
 5746 06f5 0C       		.byte	0xc
 5747 06f6 00A60E00 		.4byte	0xea600
 5748 06fa 9F       		.byte	0x9f
 5749 06fb 2E010000 		.4byte	.LVL162
 5750 06ff 36010000 		.4byte	.LVL163
 5751 0703 0300     		.2byte	0x3
 5752 0705 73       		.byte	0x73
 5753 0706 7F       		.sleb128 -1
 5754 0707 9F       		.byte	0x9f
 5755 0708 36010000 		.4byte	.LVL163
 5756 070c 3A010000 		.4byte	.LVL164
 5757 0710 0100     		.2byte	0x1
 5758 0712 53       		.byte	0x53
 5759 0713 00000000 		.4byte	0
 5760 0717 00000000 		.4byte	0
 5761              	.LLST52:
 5762 071b 2A000000 		.4byte	.LVL127
 5763 071f C6000000 		.4byte	.LVL142
 5764 0723 0300     		.2byte	0x3
 5765 0725 77       		.byte	0x77
 5766 0726 09       		.sleb128 9
 5767 0727 9F       		.byte	0x9f
 5768 0728 1A010000 		.4byte	.LVL158
 5769 072c 4C010000 		.4byte	.LVL168
 5770 0730 0300     		.2byte	0x3
 5771 0732 77       		.byte	0x77
 5772 0733 09       		.sleb128 9
 5773 0734 9F       		.byte	0x9f
 5774 0735 00000000 		.4byte	0
 5775 0739 00000000 		.4byte	0
 5776              	.LLST53:
 5777 073d 2A000000 		.4byte	.LVL127
 5778 0741 60020000 		.4byte	.LVL216
 5779 0745 0600     		.2byte	0x6
 5780 0747 F2       		.byte	0xf2
 5781 0748 46110000 		.4byte	.Ldebug_info0+4422
 5782 074c 00       		.sleb128 0
 5783 074d 00000000 		.4byte	0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 157


 5784 0751 00000000 		.4byte	0
 5785              	.LLST54:
 5786 0755 2A000000 		.4byte	.LVL127
 5787 0759 4E000000 		.4byte	.LVL130
 5788 075d 0400     		.2byte	0x4
 5789 075f 30       		.byte	0x30
 5790 0760 9F       		.byte	0x9f
 5791 0761 93       		.byte	0x93
 5792 0762 01       		.uleb128 0x1
 5793 0763 42010000 		.4byte	.LVL165
 5794 0767 44010000 		.4byte	.LVL166
 5795 076b 1600     		.2byte	0x16
 5796 076d 75       		.byte	0x75
 5797 076e 00       		.sleb128 0
 5798 076f 12       		.byte	0x12
 5799 0770 08       		.byte	0x8
 5800 0771 FF       		.byte	0xff
 5801 0772 1A       		.byte	0x1a
 5802 0773 73       		.byte	0x73
 5803 0774 00       		.sleb128 0
 5804 0775 16       		.byte	0x16
 5805 0776 14       		.byte	0x14
 5806 0777 08       		.byte	0x8
 5807 0778 FF       		.byte	0xff
 5808 0779 1A       		.byte	0x1a
 5809 077a 2B       		.byte	0x2b
 5810 077b 28       		.byte	0x28
 5811 077c 0100     		.2byte	0x1
 5812 077e 16       		.byte	0x16
 5813 077f 13       		.byte	0x13
 5814 0780 9F       		.byte	0x9f
 5815 0781 93       		.byte	0x93
 5816 0782 01       		.uleb128 0x1
 5817 0783 44010000 		.4byte	.LVL166
 5818 0787 4C010000 		.4byte	.LVL168
 5819 078b 1600     		.2byte	0x16
 5820 078d 75       		.byte	0x75
 5821 078e 00       		.sleb128 0
 5822 078f 12       		.byte	0x12
 5823 0790 08       		.byte	0x8
 5824 0791 FF       		.byte	0xff
 5825 0792 1A       		.byte	0x1a
 5826 0793 74       		.byte	0x74
 5827 0794 00       		.sleb128 0
 5828 0795 16       		.byte	0x16
 5829 0796 14       		.byte	0x14
 5830 0797 08       		.byte	0x8
 5831 0798 FF       		.byte	0xff
 5832 0799 1A       		.byte	0x1a
 5833 079a 2B       		.byte	0x2b
 5834 079b 28       		.byte	0x28
 5835 079c 0100     		.2byte	0x1
 5836 079e 16       		.byte	0x16
 5837 079f 13       		.byte	0x13
 5838 07a0 9F       		.byte	0x9f
 5839 07a1 93       		.byte	0x93
 5840 07a2 01       		.uleb128 0x1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 158


 5841 07a3 00000000 		.4byte	0
 5842 07a7 00000000 		.4byte	0
 5843              	.LLST55:
 5844 07ab 6A000000 		.4byte	.LVL131
 5845 07af C2000000 		.4byte	.LVL141
 5846 07b3 0100     		.2byte	0x1
 5847 07b5 55       		.byte	0x55
 5848 07b6 1A010000 		.4byte	.LVL158
 5849 07ba 20010000 		.4byte	.LVL159
 5850 07be 0100     		.2byte	0x1
 5851 07c0 55       		.byte	0x55
 5852 07c1 20010000 		.4byte	.LVL159
 5853 07c5 4A010000 		.4byte	.LVL167
 5854 07c9 0D00     		.2byte	0xd
 5855 07cb 91       		.byte	0x91
 5856 07cc 4C       		.sleb128 -52
 5857 07cd 06       		.byte	0x6
 5858 07ce 3A       		.byte	0x3a
 5859 07cf 1E       		.byte	0x1e
 5860 07d0 91       		.byte	0x91
 5861 07d1 5C       		.sleb128 -36
 5862 07d2 06       		.byte	0x6
 5863 07d3 23       		.byte	0x23
 5864 07d4 08       		.uleb128 0x8
 5865 07d5 06       		.byte	0x6
 5866 07d6 22       		.byte	0x22
 5867 07d7 9F       		.byte	0x9f
 5868 07d8 00000000 		.4byte	0
 5869 07dc 00000000 		.4byte	0
 5870              	.LLST56:
 5871 07e0 2A000000 		.4byte	.LVL127
 5872 07e4 C6000000 		.4byte	.LVL142
 5873 07e8 0100     		.2byte	0x1
 5874 07ea 57       		.byte	0x57
 5875 07eb 1A010000 		.4byte	.LVL158
 5876 07ef 4C010000 		.4byte	.LVL168
 5877 07f3 0100     		.2byte	0x1
 5878 07f5 57       		.byte	0x57
 5879 07f6 00000000 		.4byte	0
 5880 07fa 00000000 		.4byte	0
 5881              	.LLST57:
 5882 07fe CA000000 		.4byte	.LVL144
 5883 0802 CE000000 		.4byte	.LVL145
 5884 0806 0200     		.2byte	0x2
 5885 0808 30       		.byte	0x30
 5886 0809 9F       		.byte	0x9f
 5887 080a 00000000 		.4byte	0
 5888 080e 00000000 		.4byte	0
 5889              	.LLST58:
 5890 0812 CA000000 		.4byte	.LVL144
 5891 0816 E2000000 		.4byte	.LVL147
 5892 081a 0300     		.2byte	0x3
 5893 081c 08       		.byte	0x8
 5894 081d 7F       		.byte	0x7f
 5895 081e 9F       		.byte	0x9f
 5896 081f E2000000 		.4byte	.LVL147
 5897 0823 00010000 		.4byte	.LVL153
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 159


 5898 0827 0100     		.2byte	0x1
 5899 0829 53       		.byte	0x53
 5900 082a 00000000 		.4byte	0
 5901 082e 00000000 		.4byte	0
 5902              	.LLST59:
 5903 0832 C6000000 		.4byte	.LVL142
 5904 0836 18010000 		.4byte	.LVL157
 5905 083a 0200     		.2byte	0x2
 5906 083c 30       		.byte	0x30
 5907 083d 9F       		.byte	0x9f
 5908 083e 00000000 		.4byte	0
 5909 0842 00000000 		.4byte	0
 5910              	.LLST60:
 5911 0846 CA000000 		.4byte	.LVL144
 5912 084a E2000000 		.4byte	.LVL147
 5913 084e 0200     		.2byte	0x2
 5914 0850 30       		.byte	0x30
 5915 0851 9F       		.byte	0x9f
 5916 0852 E8000000 		.4byte	.LVL148
 5917 0856 F0000000 		.4byte	.LVL149
 5918 085a 0200     		.2byte	0x2
 5919 085c 30       		.byte	0x30
 5920 085d 9F       		.byte	0x9f
 5921 085e F0000000 		.4byte	.LVL149
 5922 0862 F4000000 		.4byte	.LVL151
 5923 0866 0300     		.2byte	0x3
 5924 0868 09       		.byte	0x9
 5925 0869 FF       		.byte	0xff
 5926 086a 9F       		.byte	0x9f
 5927 086b 00000000 		.4byte	0
 5928 086f 00000000 		.4byte	0
 5929              	.LLST61:
 5930 0873 CA000000 		.4byte	.LVL144
 5931 0877 02010000 		.4byte	.LVL154
 5932 087b 0100     		.2byte	0x1
 5933 087d 55       		.byte	0x55
 5934 087e 02010000 		.4byte	.LVL154
 5935 0882 18010000 		.4byte	.LVL157
 5936 0886 0300     		.2byte	0x3
 5937 0888 75       		.byte	0x75
 5938 0889 01       		.sleb128 1
 5939 088a 9F       		.byte	0x9f
 5940 088b 00000000 		.4byte	0
 5941 088f 00000000 		.4byte	0
 5942              	.LLST62:
 5943 0893 C6000000 		.4byte	.LVL142
 5944 0897 18010000 		.4byte	.LVL157
 5945 089b 0100     		.2byte	0x1
 5946 089d 57       		.byte	0x57
 5947 089e 00000000 		.4byte	0
 5948 08a2 00000000 		.4byte	0
 5949              	.LLST63:
 5950 08a6 C8000000 		.4byte	.LVL143
 5951 08aa D0000000 		.4byte	.LVL146
 5952 08ae 0100     		.2byte	0x1
 5953 08b0 53       		.byte	0x53
 5954 08b1 D0000000 		.4byte	.LVL146
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 160


 5955 08b5 E2000000 		.4byte	.LVL147
 5956 08b9 0200     		.2byte	0x2
 5957 08bb 91       		.byte	0x91
 5958 08bc 4C       		.sleb128 -52
 5959 08bd E2000000 		.4byte	.LVL147
 5960 08c1 04010000 		.4byte	.LVL155
 5961 08c5 0100     		.2byte	0x1
 5962 08c7 52       		.byte	0x52
 5963 08c8 00000000 		.4byte	0
 5964 08cc 00000000 		.4byte	0
 5965              	.LLST64:
 5966 08d0 4C010000 		.4byte	.LVL168
 5967 08d4 E4010000 		.4byte	.LVL195
 5968 08d8 0200     		.2byte	0x2
 5969 08da 91       		.byte	0x91
 5970 08db 54       		.sleb128 -44
 5971 08dc 00000000 		.4byte	0
 5972 08e0 00000000 		.4byte	0
 5973              	.LLST65:
 5974 08e4 52010000 		.4byte	.LVL169
 5975 08e8 64010000 		.4byte	.LVL170
 5976 08ec 0200     		.2byte	0x2
 5977 08ee 30       		.byte	0x30
 5978 08ef 9F       		.byte	0x9f
 5979 08f0 64010000 		.4byte	.LVL170
 5980 08f4 80010000 		.4byte	.LVL177
 5981 08f8 0100     		.2byte	0x1
 5982 08fa 52       		.byte	0x52
 5983 08fb AE010000 		.4byte	.LVL186
 5984 08ff B0010000 		.4byte	.LVL187
 5985 0903 0200     		.2byte	0x2
 5986 0905 30       		.byte	0x30
 5987 0906 9F       		.byte	0x9f
 5988 0907 B0010000 		.4byte	.LVL187
 5989 090b E4010000 		.4byte	.LVL195
 5990 090f 0100     		.2byte	0x1
 5991 0911 55       		.byte	0x55
 5992 0912 00000000 		.4byte	0
 5993 0916 00000000 		.4byte	0
 5994              	.LLST66:
 5995 091a 4C010000 		.4byte	.LVL168
 5996 091e E4010000 		.4byte	.LVL195
 5997 0922 0200     		.2byte	0x2
 5998 0924 30       		.byte	0x30
 5999 0925 9F       		.byte	0x9f
 6000 0926 00000000 		.4byte	0
 6001 092a 00000000 		.4byte	0
 6002              	.LLST67:
 6003 092e 4C010000 		.4byte	.LVL168
 6004 0932 A8010000 		.4byte	.LVL185
 6005 0936 0100     		.2byte	0x1
 6006 0938 54       		.byte	0x54
 6007 0939 00000000 		.4byte	0
 6008 093d 00000000 		.4byte	0
 6009              	.LLST68:
 6010 0941 4C010000 		.4byte	.LVL168
 6011 0945 64010000 		.4byte	.LVL170
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 161


 6012 0949 0100     		.2byte	0x1
 6013 094b 54       		.byte	0x54
 6014 094c 64010000 		.4byte	.LVL170
 6015 0950 76010000 		.4byte	.LVL173
 6016 0954 0100     		.2byte	0x1
 6017 0956 55       		.byte	0x55
 6018 0957 76010000 		.4byte	.LVL173
 6019 095b 7C010000 		.4byte	.LVL175
 6020 095f 0100     		.2byte	0x1
 6021 0961 51       		.byte	0x51
 6022 0962 7C010000 		.4byte	.LVL175
 6023 0966 A4010000 		.4byte	.LVL184
 6024 096a 0100     		.2byte	0x1
 6025 096c 55       		.byte	0x55
 6026 096d 00000000 		.4byte	0
 6027 0971 00000000 		.4byte	0
 6028              	.LLST69:
 6029 0975 52010000 		.4byte	.LVL169
 6030 0979 8C010000 		.4byte	.LVL180
 6031 097d 0100     		.2byte	0x1
 6032 097f 50       		.byte	0x50
 6033 0980 00000000 		.4byte	0
 6034 0984 00000000 		.4byte	0
 6035              	.LLST70:
 6036 0988 4C010000 		.4byte	.LVL168
 6037 098c 8F010000 		.4byte	.LVL181-1
 6038 0990 0D00     		.2byte	0xd
 6039 0992 31       		.byte	0x31
 6040 0993 77       		.byte	0x77
 6041 0994 00       		.sleb128 0
 6042 0995 94       		.byte	0x94
 6043 0996 02       		.byte	0x2
 6044 0997 0A       		.byte	0xa
 6045 0998 FFFF     		.2byte	0xffff
 6046 099a 1A       		.byte	0x1a
 6047 099b 24       		.byte	0x24
 6048 099c 31       		.byte	0x31
 6049 099d 1C       		.byte	0x1c
 6050 099e 9F       		.byte	0x9f
 6051 099f 00000000 		.4byte	0
 6052 09a3 00000000 		.4byte	0
 6053              	.LLST71:
 6054 09a7 86010000 		.4byte	.LVL178
 6055 09ab 88010000 		.4byte	.LVL179
 6056 09af 1100     		.2byte	0x11
 6057 09b1 70       		.byte	0x70
 6058 09b2 00       		.sleb128 0
 6059 09b3 08       		.byte	0x8
 6060 09b4 64       		.byte	0x64
 6061 09b5 1E       		.byte	0x1e
 6062 09b6 F7       		.byte	0xf7
 6063 09b7 25       		.uleb128 0x25
 6064 09b8 73       		.byte	0x73
 6065 09b9 00       		.sleb128 0
 6066 09ba F7       		.byte	0xf7
 6067 09bb 25       		.uleb128 0x25
 6068 09bc 1B       		.byte	0x1b
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 162


 6069 09bd F7       		.byte	0xf7
 6070 09be 00       		.uleb128 0
 6071 09bf 23       		.byte	0x23
 6072 09c0 64       		.uleb128 0x64
 6073 09c1 9F       		.byte	0x9f
 6074 09c2 88010000 		.4byte	.LVL179
 6075 09c6 8C010000 		.4byte	.LVL180
 6076 09ca 1200     		.2byte	0x12
 6077 09cc 70       		.byte	0x70
 6078 09cd 00       		.sleb128 0
 6079 09ce 08       		.byte	0x8
 6080 09cf 64       		.byte	0x64
 6081 09d0 1E       		.byte	0x1e
 6082 09d1 F7       		.byte	0xf7
 6083 09d2 25       		.uleb128 0x25
 6084 09d3 91       		.byte	0x91
 6085 09d4 5C       		.sleb128 -36
 6086 09d5 06       		.byte	0x6
 6087 09d6 F7       		.byte	0xf7
 6088 09d7 25       		.uleb128 0x25
 6089 09d8 1B       		.byte	0x1b
 6090 09d9 F7       		.byte	0xf7
 6091 09da 00       		.uleb128 0
 6092 09db 23       		.byte	0x23
 6093 09dc 64       		.uleb128 0x64
 6094 09dd 9F       		.byte	0x9f
 6095 09de C8010000 		.4byte	.LVL189
 6096 09e2 D2010000 		.4byte	.LVL190
 6097 09e6 0100     		.2byte	0x1
 6098 09e8 50       		.byte	0x50
 6099 09e9 DE010000 		.4byte	.LVL194
 6100 09ed E4010000 		.4byte	.LVL195
 6101 09f1 0100     		.2byte	0x1
 6102 09f3 50       		.byte	0x50
 6103 09f4 00000000 		.4byte	0
 6104 09f8 00000000 		.4byte	0
 6105              	.LLST72:
 6106 09fc 9A010000 		.4byte	.LVL182
 6107 0a00 B0010000 		.4byte	.LVL187
 6108 0a04 0100     		.2byte	0x1
 6109 0a06 50       		.byte	0x50
 6110 0a07 00000000 		.4byte	0
 6111 0a0b 00000000 		.4byte	0
 6112              	.LLST73:
 6113 0a0f 4C010000 		.4byte	.LVL168
 6114 0a13 E4010000 		.4byte	.LVL195
 6115 0a17 0100     		.2byte	0x1
 6116 0a19 57       		.byte	0x57
 6117 0a1a 00000000 		.4byte	0
 6118 0a1e 00000000 		.4byte	0
 6119              	.LLST74:
 6120 0a22 4C010000 		.4byte	.LVL168
 6121 0a26 64010000 		.4byte	.LVL170
 6122 0a2a 0200     		.2byte	0x2
 6123 0a2c 91       		.byte	0x91
 6124 0a2d 4C       		.sleb128 -52
 6125 0a2e 64010000 		.4byte	.LVL170
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 163


 6126 0a32 7E010000 		.4byte	.LVL176
 6127 0a36 0100     		.2byte	0x1
 6128 0a38 53       		.byte	0x53
 6129 0a39 AE010000 		.4byte	.LVL186
 6130 0a3d E4010000 		.4byte	.LVL195
 6131 0a41 0100     		.2byte	0x1
 6132 0a43 54       		.byte	0x54
 6133 0a44 00000000 		.4byte	0
 6134 0a48 00000000 		.4byte	0
 6135              	.LLST75:
 6136 0a4c 0E020000 		.4byte	.LVL200
 6137 0a50 60020000 		.4byte	.LVL216
 6138 0a54 0200     		.2byte	0x2
 6139 0a56 91       		.byte	0x91
 6140 0a57 54       		.sleb128 -44
 6141 0a58 00000000 		.4byte	0
 6142 0a5c 00000000 		.4byte	0
 6143              	.LLST76:
 6144 0a60 0E020000 		.4byte	.LVL200
 6145 0a64 60020000 		.4byte	.LVL216
 6146 0a68 0200     		.2byte	0x2
 6147 0a6a 91       		.byte	0x91
 6148 0a6b 50       		.sleb128 -48
 6149 0a6c 00000000 		.4byte	0
 6150 0a70 00000000 		.4byte	0
 6151              	.LLST77:
 6152 0a74 0E020000 		.4byte	.LVL200
 6153 0a78 42020000 		.4byte	.LVL210
 6154 0a7c 0200     		.2byte	0x2
 6155 0a7e 30       		.byte	0x30
 6156 0a7f 9F       		.byte	0x9f
 6157 0a80 42020000 		.4byte	.LVL210
 6158 0a84 60020000 		.4byte	.LVL216
 6159 0a88 0100     		.2byte	0x1
 6160 0a8a 52       		.byte	0x52
 6161 0a8b 00000000 		.4byte	0
 6162 0a8f 00000000 		.4byte	0
 6163              	.LLST78:
 6164 0a93 1A020000 		.4byte	.LVL201
 6165 0a97 42020000 		.4byte	.LVL210
 6166 0a9b 0100     		.2byte	0x1
 6167 0a9d 54       		.byte	0x54
 6168 0a9e 4E020000 		.4byte	.LVL212
 6169 0aa2 5A020000 		.4byte	.LVL214
 6170 0aa6 0100     		.2byte	0x1
 6171 0aa8 53       		.byte	0x53
 6172 0aa9 5A020000 		.4byte	.LVL214
 6173 0aad 5E020000 		.4byte	.LVL215
 6174 0ab1 0A00     		.2byte	0xa
 6175 0ab3 91       		.byte	0x91
 6176 0ab4 4C       		.sleb128 -52
 6177 0ab5 06       		.byte	0x6
 6178 0ab6 94       		.byte	0x94
 6179 0ab7 02       		.byte	0x2
 6180 0ab8 0A       		.byte	0xa
 6181 0ab9 FFFF     		.2byte	0xffff
 6182 0abb 1A       		.byte	0x1a
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 164


 6183 0abc 9F       		.byte	0x9f
 6184 0abd 5E020000 		.4byte	.LVL215
 6185 0ac1 60020000 		.4byte	.LVL216
 6186 0ac5 0900     		.2byte	0x9
 6187 0ac7 71       		.byte	0x71
 6188 0ac8 00       		.sleb128 0
 6189 0ac9 94       		.byte	0x94
 6190 0aca 02       		.byte	0x2
 6191 0acb 0A       		.byte	0xa
 6192 0acc FFFF     		.2byte	0xffff
 6193 0ace 1A       		.byte	0x1a
 6194 0acf 9F       		.byte	0x9f
 6195 0ad0 00000000 		.4byte	0
 6196 0ad4 00000000 		.4byte	0
 6197              	.LLST79:
 6198 0ad8 40020000 		.4byte	.LVL209
 6199 0adc 42020000 		.4byte	.LVL210
 6200 0ae0 0200     		.2byte	0x2
 6201 0ae2 30       		.byte	0x30
 6202 0ae3 9F       		.byte	0x9f
 6203 0ae4 00000000 		.4byte	0
 6204 0ae8 00000000 		.4byte	0
 6205              	.LLST80:
 6206 0aec 4A020000 		.4byte	.LVL211
 6207 0af0 60020000 		.4byte	.LVL216
 6208 0af4 0200     		.2byte	0x2
 6209 0af6 30       		.byte	0x30
 6210 0af7 9F       		.byte	0x9f
 6211 0af8 00000000 		.4byte	0
 6212 0afc 00000000 		.4byte	0
 6213              	.LLST81:
 6214 0b00 30020000 		.4byte	.LVL206
 6215 0b04 36020000 		.4byte	.LVL207
 6216 0b08 1600     		.2byte	0x16
 6217 0b0a 75       		.byte	0x75
 6218 0b0b 00       		.sleb128 0
 6219 0b0c 12       		.byte	0x12
 6220 0b0d 40       		.byte	0x40
 6221 0b0e 4B       		.byte	0x4b
 6222 0b0f 24       		.byte	0x24
 6223 0b10 22       		.byte	0x22
 6224 0b11 08       		.byte	0x8
 6225 0b12 64       		.byte	0x64
 6226 0b13 16       		.byte	0x16
 6227 0b14 14       		.byte	0x14
 6228 0b15 40       		.byte	0x40
 6229 0b16 4B       		.byte	0x4b
 6230 0b17 24       		.byte	0x24
 6231 0b18 22       		.byte	0x22
 6232 0b19 2D       		.byte	0x2d
 6233 0b1a 28       		.byte	0x28
 6234 0b1b 0100     		.2byte	0x1
 6235 0b1d 16       		.byte	0x16
 6236 0b1e 13       		.byte	0x13
 6237 0b1f 9F       		.byte	0x9f
 6238 0b20 36020000 		.4byte	.LVL207
 6239 0b24 40020000 		.4byte	.LVL209
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 165


 6240 0b28 1900     		.2byte	0x19
 6241 0b2a 91       		.byte	0x91
 6242 0b2b 54       		.sleb128 -44
 6243 0b2c 06       		.byte	0x6
 6244 0b2d 23       		.byte	0x23
 6245 0b2e 0A       		.uleb128 0xa
 6246 0b2f 12       		.byte	0x12
 6247 0b30 40       		.byte	0x40
 6248 0b31 4B       		.byte	0x4b
 6249 0b32 24       		.byte	0x24
 6250 0b33 22       		.byte	0x22
 6251 0b34 08       		.byte	0x8
 6252 0b35 64       		.byte	0x64
 6253 0b36 16       		.byte	0x16
 6254 0b37 14       		.byte	0x14
 6255 0b38 40       		.byte	0x40
 6256 0b39 4B       		.byte	0x4b
 6257 0b3a 24       		.byte	0x24
 6258 0b3b 22       		.byte	0x22
 6259 0b3c 2D       		.byte	0x2d
 6260 0b3d 28       		.byte	0x28
 6261 0b3e 0100     		.2byte	0x1
 6262 0b40 16       		.byte	0x16
 6263 0b41 13       		.byte	0x13
 6264 0b42 9F       		.byte	0x9f
 6265 0b43 40020000 		.4byte	.LVL209
 6266 0b47 60020000 		.4byte	.LVL216
 6267 0b4b 0100     		.2byte	0x1
 6268 0b4d 50       		.byte	0x50
 6269 0b4e 00000000 		.4byte	0
 6270 0b52 00000000 		.4byte	0
 6271              	.LLST82:
 6272 0b56 1A020000 		.4byte	.LVL201
 6273 0b5a 22020000 		.4byte	.LVL202
 6274 0b5e 0200     		.2byte	0x2
 6275 0b60 30       		.byte	0x30
 6276 0b61 9F       		.byte	0x9f
 6277 0b62 22020000 		.4byte	.LVL202
 6278 0b66 24020000 		.4byte	.LVL203
 6279 0b6a 0100     		.2byte	0x1
 6280 0b6c 50       		.byte	0x50
 6281 0b6d 30020000 		.4byte	.LVL206
 6282 0b71 38020000 		.4byte	.LVL208
 6283 0b75 0100     		.2byte	0x1
 6284 0b77 50       		.byte	0x50
 6285 0b78 38020000 		.4byte	.LVL208
 6286 0b7c 60020000 		.4byte	.LVL216
 6287 0b80 0100     		.2byte	0x1
 6288 0b82 56       		.byte	0x56
 6289 0b83 00000000 		.4byte	0
 6290 0b87 00000000 		.4byte	0
 6291              	.LLST83:
 6292 0b8b 0E020000 		.4byte	.LVL200
 6293 0b8f 60020000 		.4byte	.LVL216
 6294 0b93 0100     		.2byte	0x1
 6295 0b95 57       		.byte	0x57
 6296 0b96 00000000 		.4byte	0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 166


 6297 0b9a 00000000 		.4byte	0
 6298              	.LLST84:
 6299 0b9e 0E020000 		.4byte	.LVL200
 6300 0ba2 5E020000 		.4byte	.LVL215
 6301 0ba6 0200     		.2byte	0x2
 6302 0ba8 91       		.byte	0x91
 6303 0ba9 4C       		.sleb128 -52
 6304 0baa 5E020000 		.4byte	.LVL215
 6305 0bae 60020000 		.4byte	.LVL216
 6306 0bb2 0100     		.2byte	0x1
 6307 0bb4 53       		.byte	0x53
 6308 0bb5 00000000 		.4byte	0
 6309 0bb9 00000000 		.4byte	0
 6310              		.section	.debug_aranges,"",%progbits
 6311 0000 A4000000 		.4byte	0xa4
 6312 0004 0200     		.2byte	0x2
 6313 0006 00000000 		.4byte	.Ldebug_info0
 6314 000a 04       		.byte	0x4
 6315 000b 00       		.byte	0
 6316 000c 0000     		.2byte	0
 6317 000e 0000     		.2byte	0
 6318 0010 00000000 		.4byte	.LFB4
 6319 0014 68000000 		.4byte	.LFE4-.LFB4
 6320 0018 00000000 		.4byte	.LFB2
 6321 001c 0A000000 		.4byte	.LFE2-.LFB2
 6322 0020 00000000 		.4byte	.LFB3
 6323 0024 0A000000 		.4byte	.LFE3-.LFB3
 6324 0028 00000000 		.4byte	.LFB7
 6325 002c 68000000 		.4byte	.LFE7-.LFB7
 6326 0030 00000000 		.4byte	.LFB9
 6327 0034 54000000 		.4byte	.LFE9-.LFB9
 6328 0038 00000000 		.4byte	.LFB10
 6329 003c 34000000 		.4byte	.LFE10-.LFB10
 6330 0040 00000000 		.4byte	.LFB11
 6331 0044 14000000 		.4byte	.LFE11-.LFB11
 6332 0048 00000000 		.4byte	.LFB14
 6333 004c B0000000 		.4byte	.LFE14-.LFB14
 6334 0050 00000000 		.4byte	.LFB15
 6335 0054 1C000000 		.4byte	.LFE15-.LFB15
 6336 0058 00000000 		.4byte	.LFB19
 6337 005c 32000000 		.4byte	.LFE19-.LFB19
 6338 0060 00000000 		.4byte	.LFB16
 6339 0064 8C000000 		.4byte	.LFE16-.LFB16
 6340 0068 00000000 		.4byte	.LFB17
 6341 006c 24000000 		.4byte	.LFE17-.LFB17
 6342 0070 00000000 		.4byte	.LFB20
 6343 0074 70000000 		.4byte	.LFE20-.LFB20
 6344 0078 00000000 		.4byte	.LFB8
 6345 007c 20000000 		.4byte	.LFE8-.LFB8
 6346 0080 00000000 		.4byte	.LFB12
 6347 0084 58000000 		.4byte	.LFE12-.LFB12
 6348 0088 00000000 		.4byte	.LFB13
 6349 008c 64000000 		.4byte	.LFE13-.LFB13
 6350 0090 00000000 		.4byte	.LFB18
 6351 0094 24000000 		.4byte	.LFE18-.LFB18
 6352 0098 00000000 		.4byte	.LFB25
 6353 009c 7C020000 		.4byte	.LFE25-.LFB25
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 167


 6354 00a0 00000000 		.4byte	0
 6355 00a4 00000000 		.4byte	0
 6356              		.section	.debug_ranges,"",%progbits
 6357              	.Ldebug_ranges0:
 6358 0000 1E000000 		.4byte	.LBB8
 6359 0004 22000000 		.4byte	.LBE8
 6360 0008 24000000 		.4byte	.LBB11
 6361 000c 26000000 		.4byte	.LBE11
 6362 0010 00000000 		.4byte	0
 6363 0014 00000000 		.4byte	0
 6364 0018 32000000 		.4byte	.LBB12
 6365 001c 38000000 		.4byte	.LBE12
 6366 0020 38000000 		.4byte	.LBB15
 6367 0024 3C000000 		.4byte	.LBE15
 6368 0028 00000000 		.4byte	0
 6369 002c 00000000 		.4byte	0
 6370 0030 04000000 		.4byte	.LBB18
 6371 0034 06000000 		.4byte	.LBE18
 6372 0038 0E000000 		.4byte	.LBB25
 6373 003c 10000000 		.4byte	.LBE25
 6374 0040 12000000 		.4byte	.LBB26
 6375 0044 14000000 		.4byte	.LBE26
 6376 0048 16000000 		.4byte	.LBB27
 6377 004c 18000000 		.4byte	.LBE27
 6378 0050 1A000000 		.4byte	.LBB28
 6379 0054 1C000000 		.4byte	.LBE28
 6380 0058 1C000000 		.4byte	.LBB29
 6381 005c 24000000 		.4byte	.LBE29
 6382 0060 00000000 		.4byte	0
 6383 0064 00000000 		.4byte	0
 6384 0068 16000000 		.4byte	.LBB36
 6385 006c 2E000000 		.4byte	.LBE36
 6386 0070 30000000 		.4byte	.LBB42
 6387 0074 32000000 		.4byte	.LBE42
 6388 0078 00000000 		.4byte	0
 6389 007c 00000000 		.4byte	0
 6390 0080 2E000000 		.4byte	.LBB39
 6391 0084 30000000 		.4byte	.LBE39
 6392 0088 32000000 		.4byte	.LBB43
 6393 008c 66000000 		.4byte	.LBE43
 6394 0090 00000000 		.4byte	0
 6395 0094 00000000 		.4byte	0
 6396 0098 6C000000 		.4byte	.LBB44
 6397 009c 70000000 		.4byte	.LBE44
 6398 00a0 72000000 		.4byte	.LBB47
 6399 00a4 74000000 		.4byte	.LBE47
 6400 00a8 00000000 		.4byte	0
 6401 00ac 00000000 		.4byte	0
 6402 00b0 22000000 		.4byte	.LBB60
 6403 00b4 24000000 		.4byte	.LBE60
 6404 00b8 2A000000 		.4byte	.LBB65
 6405 00bc C2000000 		.4byte	.LBE65
 6406 00c0 C4000000 		.4byte	.LBB69
 6407 00c4 C6000000 		.4byte	.LBE69
 6408 00c8 1A010000 		.4byte	.LBB71
 6409 00cc 4C010000 		.4byte	.LBE71
 6410 00d0 00000000 		.4byte	0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 168


 6411 00d4 00000000 		.4byte	0
 6412 00d8 C2000000 		.4byte	.LBB66
 6413 00dc C4000000 		.4byte	.LBE66
 6414 00e0 C6000000 		.4byte	.LBB70
 6415 00e4 1A010000 		.4byte	.LBE70
 6416 00e8 00000000 		.4byte	0
 6417 00ec 00000000 		.4byte	0
 6418 00f0 00000000 		.4byte	.LFB4
 6419 00f4 68000000 		.4byte	.LFE4
 6420 00f8 00000000 		.4byte	.LFB2
 6421 00fc 0A000000 		.4byte	.LFE2
 6422 0100 00000000 		.4byte	.LFB3
 6423 0104 0A000000 		.4byte	.LFE3
 6424 0108 00000000 		.4byte	.LFB7
 6425 010c 68000000 		.4byte	.LFE7
 6426 0110 00000000 		.4byte	.LFB9
 6427 0114 54000000 		.4byte	.LFE9
 6428 0118 00000000 		.4byte	.LFB10
 6429 011c 34000000 		.4byte	.LFE10
 6430 0120 00000000 		.4byte	.LFB11
 6431 0124 14000000 		.4byte	.LFE11
 6432 0128 00000000 		.4byte	.LFB14
 6433 012c B0000000 		.4byte	.LFE14
 6434 0130 00000000 		.4byte	.LFB15
 6435 0134 1C000000 		.4byte	.LFE15
 6436 0138 00000000 		.4byte	.LFB19
 6437 013c 32000000 		.4byte	.LFE19
 6438 0140 00000000 		.4byte	.LFB16
 6439 0144 8C000000 		.4byte	.LFE16
 6440 0148 00000000 		.4byte	.LFB17
 6441 014c 24000000 		.4byte	.LFE17
 6442 0150 00000000 		.4byte	.LFB20
 6443 0154 70000000 		.4byte	.LFE20
 6444 0158 00000000 		.4byte	.LFB8
 6445 015c 20000000 		.4byte	.LFE8
 6446 0160 00000000 		.4byte	.LFB12
 6447 0164 58000000 		.4byte	.LFE12
 6448 0168 00000000 		.4byte	.LFB13
 6449 016c 64000000 		.4byte	.LFE13
 6450 0170 00000000 		.4byte	.LFB18
 6451 0174 24000000 		.4byte	.LFE18
 6452 0178 00000000 		.4byte	.LFB25
 6453 017c 7C020000 		.4byte	.LFE25
 6454 0180 00000000 		.4byte	0
 6455 0184 00000000 		.4byte	0
 6456              		.section	.debug_line,"",%progbits
 6457              	.Ldebug_line0:
 6458 0000 94040000 		.section	.debug_str,"MS",%progbits,1
 6458      0200BA00 
 6458      00000201 
 6458      FB0E0D00 
 6458      01010101 
 6459              	.LASF112:
 6460 0000 43617053 		.ascii	"CapSense_SsSetShieldDelay\000"
 6460      656E7365 
 6460      5F537353 
 6460      65745368 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 169


 6460      69656C64 
 6461              	.LASF129:
 6462 001a 736E7341 		.ascii	"snsAddrPtr\000"
 6462      64647250 
 6462      747200
 6463              	.LASF118:
 6464 0025 43617053 		.ascii	"CapSense_SsCSDCalculateScanDuration\000"
 6464      656E7365 
 6464      5F537343 
 6464      53444361 
 6464      6C63756C 
 6465              	.LASF173:
 6466 0049 43617053 		.ascii	"CapSense_shieldIoList\000"
 6466      656E7365 
 6466      5F736869 
 6466      656C6449 
 6466      6F4C6973 
 6467              	.LASF174:
 6468 005f 43617053 		.ascii	"CapSense_widgetIndex\000"
 6468      656E7365 
 6468      5F776964 
 6468      67657449 
 6468      6E646578 
 6469              	.LASF62:
 6470 0074 736E7254 		.ascii	"snrTestWidgetId\000"
 6470      65737457 
 6470      69646765 
 6470      74496400 
 6471              	.LASF19:
 6472 0084 43617053 		.ascii	"CapSense_UNDEFINED_E\000"
 6472      656E7365 
 6472      5F554E44 
 6472      4546494E 
 6472      45445F45 
 6473              	.LASF161:
 6474 0099 694D6F64 		.ascii	"iMod\000"
 6474      00
 6475              	.LASF0:
 6476 009e 756E7369 		.ascii	"unsigned int\000"
 6476      676E6564 
 6476      20696E74 
 6476      00
 6477              	.LASF164:
 6478 00ab 63616C69 		.ascii	"calibrateStatus\000"
 6478      62726174 
 6478      65537461 
 6478      74757300 
 6479              	.LASF53:
 6480 00bb 7363616E 		.ascii	"scanCounter\000"
 6480      436F756E 
 6480      74657200 
 6481              	.LASF144:
 6482 00c7 72617469 		.ascii	"ratio\000"
 6482      6F00
 6483              	.LASF51:
 6484 00cd 6877436C 		.ascii	"hwClock\000"
 6484      6F636B00 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 170


 6485              	.LASF66:
 6486 00d5 7363616E 		.ascii	"scanCsdISC\000"
 6486      43736449 
 6486      534300
 6487              	.LASF102:
 6488 00e0 43617053 		.ascii	"CapSense_SsCSDSetShieldElectrodesState\000"
 6488      656E7365 
 6488      5F537343 
 6488      53445365 
 6488      74536869 
 6489              	.LASF96:
 6490 0107 696E7465 		.ascii	"interruptState\000"
 6490      72727570 
 6490      74537461 
 6490      746500
 6491              	.LASF119:
 6492 0116 43617053 		.ascii	"CapSense_SsCSDConfigIDACs\000"
 6492      656E7365 
 6492      5F537343 
 6492      5344436F 
 6492      6E666967 
 6493              	.LASF132:
 6494 0130 70696E48 		.ascii	"pinHSIOMShift\000"
 6494      53494F4D 
 6494      53686966 
 6494      7400
 6495              	.LASF170:
 6496 013e 43617053 		.ascii	"CapSense_eleCsdDisconnectFlag\000"
 6496      656E7365 
 6496      5F656C65 
 6496      43736444 
 6496      6973636F 
 6497              	.LASF186:
 6498 015c 43617053 		.ascii	"CapSense_SsSetModClkClockDivider\000"
 6498      656E7365 
 6498      5F537353 
 6498      65744D6F 
 6498      64436C6B 
 6499              	.LASF131:
 6500 017d 70696E4D 		.ascii	"pinModeShift\000"
 6500      6F646553 
 6500      68696674 
 6500      00
 6501              	.LASF150:
 6502 018a 736E7349 		.ascii	"snsIndex\000"
 6502      6E646578 
 6502      00
 6503              	.LASF157:
 6504 0193 43617053 		.ascii	"CapSense_SsCSDNormalizeIdac\000"
 6504      656E7365 
 6504      5F537343 
 6504      53444E6F 
 6504      726D616C 
 6505              	.LASF41:
 6506 01af 43617053 		.ascii	"CapSense_RAM_WD_LIST_STRUCT\000"
 6506      656E7365 
 6506      5F52414D 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 171


 6506      5F57445F 
 6506      4C495354 
 6507              	.LASF145:
 6508 01cb 6D617849 		.ascii	"maxIdac\000"
 6508      64616300 
 6509              	.LASF122:
 6510 01d3 73686965 		.ascii	"shieldIoPtr\000"
 6510      6C64496F 
 6510      50747200 
 6511              	.LASF136:
 6512 01df 73656E73 		.ascii	"sensorId\000"
 6512      6F724964 
 6512      00
 6513              	.LASF108:
 6514 01e8 70747257 		.ascii	"ptrWdgt\000"
 6514      64677400 
 6515              	.LASF32:
 6516 01f0 69646163 		.ascii	"idacGainIndex\000"
 6516      4761696E 
 6516      496E6465 
 6516      7800
 6517              	.LASF38:
 6518 01fe 646F776E 		.ascii	"down\000"
 6518      00
 6519              	.LASF97:
 6520 0203 6C6F6F70 		.ascii	"loopIndex\000"
 6520      496E6465 
 6520      7800
 6521              	.LASF134:
 6522 020d 43617053 		.ascii	"CapSense_SsCSDConnectSensorExt\000"
 6522      656E7365 
 6522      5F537343 
 6522      5344436F 
 6522      6E6E6563 
 6523              	.LASF12:
 6524 022c 666C6F61 		.ascii	"float\000"
 6524      7400
 6525              	.LASF120:
 6526 0232 43617053 		.ascii	"CapSense_SsCSDTriggerScan\000"
 6526      656E7365 
 6526      5F537343 
 6526      53445472 
 6526      69676765 
 6527              	.LASF77:
 6528 024c 73686966 		.ascii	"shift\000"
 6528      7400
 6529              	.LASF117:
 6530 0252 736E7343 		.ascii	"snsClkSrc\000"
 6530      6C6B5372 
 6530      6300
 6531              	.LASF124:
 6532 025c 77617463 		.ascii	"watchdogCounter\000"
 6532      68646F67 
 6532      436F756E 
 6532      74657200 
 6533              	.LASF140:
 6534 026c 43617053 		.ascii	"CapSense_CSDSetupWidget\000"
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 172


 6534      656E7365 
 6534      5F435344 
 6534      53657475 
 6534      70576964 
 6535              	.LASF61:
 6536 0284 736E734C 		.ascii	"snsList\000"
 6536      69737400 
 6537              	.LASF189:
 6538 028c 43617053 		.ascii	"CapSense_ISR_StartEx\000"
 6538      656E7365 
 6538      5F495352 
 6538      5F537461 
 6538      72744578 
 6539              	.LASF8:
 6540 02a1 6C6F6E67 		.ascii	"long long unsigned int\000"
 6540      206C6F6E 
 6540      6720756E 
 6540      7369676E 
 6540      65642069 
 6541              	.LASF175:
 6542 02b8 43617053 		.ascii	"CapSense_sensorIndex\000"
 6542      656E7365 
 6542      5F73656E 
 6542      736F7249 
 6542      6E646578 
 6543              	.LASF78:
 6544 02cd 43617053 		.ascii	"CapSense_FLASH_IO_STRUCT\000"
 6544      656E7365 
 6544      5F464C41 
 6544      53485F49 
 6544      4F5F5354 
 6545              	.LASF63:
 6546 02e6 736E7254 		.ascii	"snrTestSensorId\000"
 6546      65737453 
 6546      656E736F 
 6546      72496400 
 6547              	.LASF154:
 6548 02f6 63616C4D 		.ascii	"calMask\000"
 6548      61736B00 
 6549              	.LASF86:
 6550 02fe 77646774 		.ascii	"wdgtType\000"
 6550      54797065 
 6550      00
 6551              	.LASF141:
 6552 0307 43617053 		.ascii	"CapSense_CSDSetupWidgetExt\000"
 6552      656E7365 
 6552      5F435344 
 6552      53657475 
 6552      70576964 
 6553              	.LASF121:
 6554 0322 43617053 		.ascii	"CapSense_SsCSDCmodPrecharge\000"
 6554      656E7365 
 6554      5F537343 
 6554      5344436D 
 6554      6F645072 
 6555              	.LASF99:
 6556 033e 6E657750 		.ascii	"newPinHsiomVal\000"
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 173


 6556      696E4873 
 6556      696F6D56 
 6556      616C00
 6557              	.LASF165:
 6558 034d 72617763 		.ascii	"rawcount\000"
 6558      6F756E74 
 6558      00
 6559              	.LASF130:
 6560 0356 6E657752 		.ascii	"newRegisterValue\000"
 6560      65676973 
 6560      74657256 
 6560      616C7565 
 6560      00
 6561              	.LASF59:
 6562 0367 6D6F6443 		.ascii	"modCsdClk\000"
 6562      7364436C 
 6562      6B00
 6563              	.LASF47:
 6564 0371 43617053 		.ascii	"CapSense_RAM_SNS_STRUCT\000"
 6564      656E7365 
 6564      5F52414D 
 6564      5F534E53 
 6564      5F535452 
 6565              	.LASF149:
 6566 0389 70747252 		.ascii	"ptrRamWidget\000"
 6566      616D5769 
 6566      64676574 
 6566      00
 6567              	.LASF153:
 6568 0396 74617267 		.ascii	"target\000"
 6568      657400
 6569              	.LASF71:
 6570 039d 64725074 		.ascii	"drPtr\000"
 6570      7200
 6571              	.LASF190:
 6572 03a3 43617053 		.ascii	"CapSense_SsSwitchSensingMode\000"
 6572      656E7365 
 6572      5F537353 
 6572      77697463 
 6572      6853656E 
 6573              	.LASF98:
 6574 03c0 6E657750 		.ascii	"newPinPcVal\000"
 6574      696E5063 
 6574      56616C00 
 6575              	.LASF28:
 6576 03cc 68797374 		.ascii	"hysteresis\000"
 6576      65726573 
 6576      697300
 6577              	.LASF160:
 6578 03d7 7261774C 		.ascii	"rawLevel\000"
 6578      6576656C 
 6578      00
 6579              	.LASF169:
 6580 03e0 43617053 		.ascii	"CapSense_counterResolution\000"
 6580      656E7365 
 6580      5F636F75 
 6580      6E746572 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 174


 6580      5265736F 
 6581              	.LASF88:
 6582 03fb 43617053 		.ascii	"CapSense_FLASH_WD_STRUCT\000"
 6582      656E7365 
 6582      5F464C41 
 6582      53485F57 
 6582      445F5354 
 6583              	.LASF30:
 6584 0414 6C6F7742 		.ascii	"lowBslnRst\000"
 6584      736C6E52 
 6584      737400
 6585              	.LASF158:
 6586 041f 6D696E52 		.ascii	"minRaw\000"
 6586      617700
 6587              	.LASF106:
 6588 0426 43617053 		.ascii	"CapSense_SsCSDSetUpIdacs\000"
 6588      656E7365 
 6588      5F537343 
 6588      53445365 
 6588      74557049 
 6589              	.LASF85:
 6590 043f 746F7461 		.ascii	"totalNumSns\000"
 6590      6C4E756D 
 6590      536E7300 
 6591              	.LASF142:
 6592 044b 43617053 		.ascii	"CapSense_SsCSDDisconnectSnsExt\000"
 6592      656E7365 
 6592      5F537343 
 6592      53444469 
 6592      73636F6E 
 6593              	.LASF146:
 6594 046a 6D696E49 		.ascii	"minIdac\000"
 6594      64616300 
 6595              	.LASF148:
 6596 0472 6761696E 		.ascii	"gainIndex\000"
 6596      496E6465 
 6596      7800
 6597              	.LASF26:
 6598 047c 6E6F6973 		.ascii	"noiseTh\000"
 6598      65546800 
 6599              	.LASF14:
 6600 0484 63686172 		.ascii	"char\000"
 6600      00
 6601              	.LASF183:
 6602 0489 43617053 		.ascii	"CapSense_SsSetAllIOsState\000"
 6602      656E7365 
 6602      5F537353 
 6602      6574416C 
 6602      6C494F73 
 6603              	.LASF182:
 6604 04a3 43794578 		.ascii	"CyExitCriticalSection\000"
 6604      69744372 
 6604      69746963 
 6604      616C5365 
 6604      6374696F 
 6605              	.LASF187:
 6606 04b9 43794465 		.ascii	"CyDelayCycles\000"
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 175


 6606      6C617943 
 6606      79636C65 
 6606      7300
 6607              	.LASF100:
 6608 04c7 746D7050 		.ascii	"tmpPcDrRegValue\000"
 6608      63447252 
 6608      65675661 
 6608      6C756500 
 6609              	.LASF75:
 6610 04d7 6873696F 		.ascii	"hsiomShift\000"
 6610      6D536869 
 6610      667400
 6611              	.LASF10:
 6612 04e2 75696E74 		.ascii	"uint16\000"
 6612      313600
 6613              	.LASF151:
 6614 04e9 70747252 		.ascii	"ptrRamSensor\000"
 6614      616D5365 
 6614      6E736F72 
 6614      00
 6615              	.LASF104:
 6616 04f6 43617053 		.ascii	"CapSense_SsCSDDisableShieldElectrodes\000"
 6616      656E7365 
 6616      5F537343 
 6616      53444469 
 6616      7361626C 
 6617              	.LASF24:
 6618 051c 7265736F 		.ascii	"resolution\000"
 6618      6C757469 
 6618      6F6E00
 6619              	.LASF54:
 6620 0527 73746174 		.ascii	"status\000"
 6620      757300
 6621              	.LASF18:
 6622 052e 43617053 		.ascii	"CapSense_LOW_BSLN_RST_TYPE\000"
 6622      656E7365 
 6622      5F4C4F57 
 6622      5F42534C 
 6622      4E5F5253 
 6623              	.LASF185:
 6624 0549 43617053 		.ascii	"CapSense_SsSetSnsClockDivider\000"
 6624      656E7365 
 6624      5F537353 
 6624      6574536E 
 6624      73436C6F 
 6625              	.LASF46:
 6626 0567 69646163 		.ascii	"idacComp\000"
 6626      436F6D70 
 6626      00
 6627              	.LASF40:
 6628 0570 72696768 		.ascii	"right\000"
 6628      7400
 6629              	.LASF70:
 6630 0576 70635074 		.ascii	"pcPtr\000"
 6630      7200
 6631              	.LASF7:
 6632 057c 6C6F6E67 		.ascii	"long long int\000"
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 176


 6632      206C6F6E 
 6632      6720696E 
 6632      7400
 6633              	.LASF87:
 6634 058a 6E756D43 		.ascii	"numCols\000"
 6634      6F6C7300 
 6635              	.LASF103:
 6636 0592 43617053 		.ascii	"CapSense_SsCSDEnableShieldElectrodes\000"
 6636      656E7365 
 6636      5F537343 
 6636      5344456E 
 6636      61626C65 
 6637              	.LASF105:
 6638 05b7 43617053 		.ascii	"CapSense_SsCSDInitialize\000"
 6638      656E7365 
 6638      5F537343 
 6638      5344496E 
 6638      69746961 
 6639              	.LASF29:
 6640 05d0 6F6E4465 		.ascii	"onDebounce\000"
 6640      626F756E 
 6640      636500
 6641              	.LASF166:
 6642 05db 75707065 		.ascii	"upperLimit\000"
 6642      724C696D 
 6642      697400
 6643              	.LASF143:
 6644 05e6 70747246 		.ascii	"ptrFlashWidget\000"
 6644      6C617368 
 6644      57696467 
 6644      657400
 6645              	.LASF60:
 6646 05f5 77646774 		.ascii	"wdgtList\000"
 6646      4C697374 
 6646      00
 6647              	.LASF90:
 6648 05fe 43617053 		.ascii	"CapSense_FLASH_STRUCT\000"
 6648      656E7365 
 6648      5F464C41 
 6648      53485F53 
 6648      54525543 
 6649              	.LASF184:
 6650 0614 43617053 		.ascii	"CapSense_WriteBitsSafe\000"
 6650      656E7365 
 6650      5F577269 
 6650      74654269 
 6650      74735361 
 6651              	.LASF171:
 6652 062b 43617053 		.ascii	"CapSense_dsRam\000"
 6652      656E7365 
 6652      5F647352 
 6652      616D00
 6653              	.LASF65:
 6654 063a 736E7254 		.ascii	"snrTestRawCount\000"
 6654      65737452 
 6654      6177436F 
 6654      756E7400 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 177


 6655              	.LASF180:
 6656 064a 43617053 		.ascii	"CapSense_configCsd\000"
 6656      656E7365 
 6656      5F636F6E 
 6656      66696743 
 6656      736400
 6657              	.LASF27:
 6658 065d 6E4E6F69 		.ascii	"nNoiseTh\000"
 6658      73655468 
 6658      00
 6659              	.LASF58:
 6660 0666 63736430 		.ascii	"csd0Config\000"
 6660      436F6E66 
 6660      696700
 6661              	.LASF163:
 6662 0671 43617053 		.ascii	"CapSense_SsCSDCalibrateCheck\000"
 6662      656E7365 
 6662      5F537343 
 6662      53444361 
 6662      6C696272 
 6663              	.LASF36:
 6664 068e 43617053 		.ascii	"CapSense_RAM_WD_BASE_STRUCT\000"
 6664      656E7365 
 6664      5F52414D 
 6664      5F57445F 
 6664      42415345 
 6665              	.LASF147:
 6666 06aa 66726571 		.ascii	"freqChannel\000"
 6666      4368616E 
 6666      6E656C00 
 6667              	.LASF69:
 6668 06b6 6873696F 		.ascii	"hsiomPtr\000"
 6668      6D507472 
 6668      00
 6669              	.LASF11:
 6670 06bf 75696E74 		.ascii	"uint32\000"
 6670      333200
 6671              	.LASF82:
 6672 06c6 70747232 		.ascii	"ptr2FltrHistory\000"
 6672      466C7472 
 6672      48697374 
 6672      6F727900 
 6673              	.LASF94:
 6674 06d6 6761696E 		.ascii	"gainValue\000"
 6674      56616C75 
 6674      6500
 6675              	.LASF178:
 6676 06e0 43617053 		.ascii	"CapSense_curSnsIOPtr\000"
 6676      656E7365 
 6676      5F637572 
 6676      536E7349 
 6676      4F507472 
 6677              	.LASF74:
 6678 06f5 6D61736B 		.ascii	"mask\000"
 6678      00
 6679              	.LASF193:
 6680 06fa 443A5C5F 		.ascii	"D:\\_Project\\_MD\\cypress_button\\EZIIC_button.cyd"
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 178


 6680      50726F6A 
 6680      6563745C 
 6680      5F4D445C 
 6680      63797072 
 6681 0729 736E00   		.ascii	"sn\000"
 6682              	.LASF167:
 6683 072c 6C6F7765 		.ascii	"lowerLimit\000"
 6683      724C696D 
 6683      697400
 6684              	.LASF156:
 6685 0737 7074724D 		.ascii	"ptrMaxIdac\000"
 6685      61784964 
 6685      616300
 6686              	.LASF159:
 6687 0742 6D617852 		.ascii	"maxRawLevel\000"
 6687      61774C65 
 6687      76656C00 
 6688              	.LASF192:
 6689 074e 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_SensingCSD_LL.c\000"
 6689      72617465 
 6689      645F536F 
 6689      75726365 
 6689      5C50536F 
 6690              	.LASF23:
 6691 077e 43617053 		.ascii	"CapSense_SENSE_METHOD_ISX_E\000"
 6691      656E7365 
 6691      5F53454E 
 6691      53455F4D 
 6691      4554484F 
 6692              	.LASF92:
 6693 079a 6C6F6E67 		.ascii	"long double\000"
 6693      20646F75 
 6693      626C6500 
 6694              	.LASF116:
 6695 07a6 43617053 		.ascii	"CapSense_SsCSDConfigClock\000"
 6695      656E7365 
 6695      5F537343 
 6695      5344436F 
 6695      6E666967 
 6696              	.LASF16:
 6697 07c0 72656733 		.ascii	"reg32\000"
 6697      3200
 6698              	.LASF64:
 6699 07c6 736E7254 		.ascii	"snrTestScanCounter\000"
 6699      65737453 
 6699      63616E43 
 6699      6F756E74 
 6699      657200
 6700              	.LASF49:
 6701 07d9 636F6E66 		.ascii	"configId\000"
 6701      69674964 
 6701      00
 6702              	.LASF81:
 6703 07e2 70747232 		.ascii	"ptr2SnsRam\000"
 6703      536E7352 
 6703      616D00
 6704              	.LASF57:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 179


 6705 07ed 736E7353 		.ascii	"snsStatus\000"
 6705      74617475 
 6705      7300
 6706              	.LASF34:
 6707 07f7 736E7343 		.ascii	"snsClkSource\000"
 6707      6C6B536F 
 6707      75726365 
 6707      00
 6708              	.LASF194:
 6709 0804 43617053 		.ascii	"CapSense_SsCSDElectrodeCheck\000"
 6709      656E7365 
 6709      5F537343 
 6709      5344456C 
 6709      65637472 
 6710              	.LASF3:
 6711 0821 73686F72 		.ascii	"short int\000"
 6711      7420696E 
 6711      7400
 6712              	.LASF139:
 6713 082b 6E657748 		.ascii	"newHsiomRegValue\000"
 6713      73696F6D 
 6713      52656756 
 6713      616C7565 
 6713      00
 6714              	.LASF68:
 6715 083c 43617053 		.ascii	"CapSense_RAM_STRUCT\000"
 6715      656E7365 
 6715      5F52414D 
 6715      5F535452 
 6715      55435400 
 6716              	.LASF137:
 6717 0850 43617053 		.ascii	"CapSense_CSDDisconnectSns\000"
 6717      656E7365 
 6717      5F435344 
 6717      44697363 
 6717      6F6E6E65 
 6718              	.LASF113:
 6719 086a 43617053 		.ascii	"CapSense_SsCSDSetModeSnsClockDivider\000"
 6719      656E7365 
 6719      5F537343 
 6719      53445365 
 6719      744D6F64 
 6720              	.LASF125:
 6721 088f 43617053 		.ascii	"CapSense_SsCSDClockRestart\000"
 6721      656E7365 
 6721      5F537343 
 6721      5344436C 
 6721      6F636B52 
 6722              	.LASF5:
 6723 08aa 6C6F6E67 		.ascii	"long int\000"
 6723      20696E74 
 6723      00
 6724              	.LASF114:
 6725 08b3 64656C61 		.ascii	"delay\000"
 6725      7900
 6726              	.LASF55:
 6727 08b9 77646774 		.ascii	"wdgtEnable\000"
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 180


 6727      456E6162 
 6727      6C6500
 6728              	.LASF44:
 6729 08c4 64696666 		.ascii	"diff\000"
 6729      00
 6730              	.LASF126:
 6731 08c9 43617053 		.ascii	"CapSense_SsCSDStartSample\000"
 6731      656E7365 
 6731      5F537343 
 6731      53445374 
 6731      61727453 
 6732              	.LASF52:
 6733 08e3 74756E65 		.ascii	"tunerCmd\000"
 6733      72436D64 
 6733      00
 6734              	.LASF155:
 6735 08ec 74656D70 		.ascii	"temp\000"
 6735      00
 6736              	.LASF21:
 6737 08f1 43617053 		.ascii	"CapSense_SENSE_METHOD_CSX_E\000"
 6737      656E7365 
 6737      5F53454E 
 6737      53455F4D 
 6737      4554484F 
 6738              	.LASF72:
 6739 090d 70735074 		.ascii	"psPtr\000"
 6739      7200
 6740              	.LASF195:
 6741 0913 43617053 		.ascii	"CapSense_CSDCalibrateWidget\000"
 6741      656E7365 
 6741      5F435344 
 6741      43616C69 
 6741      62726174 
 6742              	.LASF93:
 6743 092f 6761696E 		.ascii	"gainReg\000"
 6743      52656700 
 6744              	.LASF39:
 6745 0937 6C656674 		.ascii	"left\000"
 6745      00
 6746              	.LASF172:
 6747 093c 43617053 		.ascii	"CapSense_dsFlash\000"
 6747      656E7365 
 6747      5F647346 
 6747      6C617368 
 6747      00
 6748              	.LASF127:
 6749 094d 43617053 		.ascii	"CapSense_CSDScanExt\000"
 6749      656E7365 
 6749      5F435344 
 6749      5363616E 
 6749      45787400 
 6750              	.LASF56:
 6751 0961 77646774 		.ascii	"wdgtStatus\000"
 6751      53746174 
 6751      757300
 6752              	.LASF128:
 6753 096c 43617053 		.ascii	"CapSense_CSDConnectSns\000"
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 181


 6753      656E7365 
 6753      5F435344 
 6753      436F6E6E 
 6753      65637453 
 6754              	.LASF20:
 6755 0983 43617053 		.ascii	"CapSense_SENSE_METHOD_CSD_E\000"
 6755      656E7365 
 6755      5F53454E 
 6755      53455F4D 
 6755      4554484F 
 6756              	.LASF35:
 6757 099f 73697A65 		.ascii	"sizetype\000"
 6757      74797065 
 6757      00
 6758              	.LASF76:
 6759 09a8 64725368 		.ascii	"drShift\000"
 6759      69667400 
 6760              	.LASF6:
 6761 09b0 6C6F6E67 		.ascii	"long unsigned int\000"
 6761      20756E73 
 6761      69676E65 
 6761      6420696E 
 6761      7400
 6762              	.LASF123:
 6763 09c2 746D7052 		.ascii	"tmpRegValue\000"
 6763      65675661 
 6763      6C756500 
 6764              	.LASF31:
 6765 09ce 69646163 		.ascii	"idacMod\000"
 6765      4D6F6400 
 6766              	.LASF162:
 6767 09d6 43617053 		.ascii	"CapSense_SsCSDSwitchIdacGain\000"
 6767      656E7365 
 6767      5F537343 
 6767      53445377 
 6767      69746368 
 6768              	.LASF83:
 6769 09f3 70747232 		.ascii	"ptr2DebounceArr\000"
 6769      4465626F 
 6769      756E6365 
 6769      41727200 
 6770              	.LASF25:
 6771 0a03 66696E67 		.ascii	"fingerTh\000"
 6771      65725468 
 6771      00
 6772              	.LASF43:
 6773 0a0c 62736C6E 		.ascii	"bslnExt\000"
 6773      45787400 
 6774              	.LASF95:
 6775 0a14 43617053 		.ascii	"CapSense_IDAC_GAIN_TABLE_STRUCT\000"
 6775      656E7365 
 6775      5F494441 
 6775      435F4741 
 6775      494E5F54 
 6776              	.LASF37:
 6777 0a34 43617053 		.ascii	"CapSense_RAM_WD_BUTTON_STRUCT\000"
 6777      656E7365 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 182


 6777      5F52414D 
 6777      5F57445F 
 6777      42555454 
 6778              	.LASF15:
 6779 0a52 63797374 		.ascii	"cystatus\000"
 6779      61747573 
 6779      00
 6780              	.LASF2:
 6781 0a5b 756E7369 		.ascii	"unsigned char\000"
 6781      676E6564 
 6781      20636861 
 6781      7200
 6782              	.LASF101:
 6783 0a69 746D7048 		.ascii	"tmpHsiomRegValue\000"
 6783      73696F6D 
 6783      52656756 
 6783      616C7565 
 6783      00
 6784              	.LASF84:
 6785 0a7a 73746174 		.ascii	"staticConfig\000"
 6785      6963436F 
 6785      6E666967 
 6785      00
 6786              	.LASF67:
 6787 0a87 7363616E 		.ascii	"scanCurrentISC\000"
 6787      43757272 
 6787      656E7449 
 6787      534300
 6788              	.LASF80:
 6789 0a96 70747232 		.ascii	"ptr2WdgtRam\000"
 6789      57646774 
 6789      52616D00 
 6790              	.LASF17:
 6791 0aa2 43617053 		.ascii	"CapSense_THRESHOLD_TYPE\000"
 6791      656E7365 
 6791      5F544852 
 6791      4553484F 
 6791      4C445F54 
 6792              	.LASF191:
 6793 0aba 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 6793      43313120 
 6793      352E342E 
 6793      31203230 
 6793      31363036 
 6794 0aed 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 6794      20726576 
 6794      6973696F 
 6794      6E203233 
 6794      37373135 
 6795 0b20 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 6795      66756E63 
 6795      74696F6E 
 6795      2D736563 
 6795      74696F6E 
 6796              	.LASF91:
 6797 0b48 43617053 		.ascii	"CapSense_SHIELD_IO_STRUCT\000"
 6797      656E7365 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 183


 6797      5F534849 
 6797      454C445F 
 6797      494F5F53 
 6798              	.LASF133:
 6799 0b62 43617053 		.ascii	"CapSense_CSDScan\000"
 6799      656E7365 
 6799      5F435344 
 6799      5363616E 
 6799      00
 6800              	.LASF22:
 6801 0b73 43617053 		.ascii	"CapSense_SENSE_METHOD_BIST_E\000"
 6801      656E7365 
 6801      5F53454E 
 6801      53455F4D 
 6801      4554484F 
 6802              	.LASF107:
 6803 0b90 73746174 		.ascii	"state\000"
 6803      6500
 6804              	.LASF73:
 6805 0b96 6873696F 		.ascii	"hsiomMask\000"
 6805      6D4D6173 
 6805      6B00
 6806              	.LASF188:
 6807 0ba0 4379496E 		.ascii	"CyIntEnable\000"
 6807      74456E61 
 6807      626C6500 
 6808              	.LASF33:
 6809 0bac 736E7343 		.ascii	"snsClk\000"
 6809      6C6B00
 6810              	.LASF168:
 6811 0bb3 6761696E 		.ascii	"gainSwitch\000"
 6811      53776974 
 6811      636800
 6812              	.LASF181:
 6813 0bbe 4379456E 		.ascii	"CyEnterCriticalSection\000"
 6813      74657243 
 6813      72697469 
 6813      63616C53 
 6813      65637469 
 6814              	.LASF176:
 6815 0bd5 43617053 		.ascii	"CapSense_curRamSnsPtr\000"
 6815      656E7365 
 6815      5F637572 
 6815      52616D53 
 6815      6E735074 
 6816              	.LASF1:
 6817 0beb 7369676E 		.ascii	"signed char\000"
 6817      65642063 
 6817      68617200 
 6818              	.LASF177:
 6819 0bf7 43617053 		.ascii	"CapSense_scanFreqIndex\000"
 6819      656E7365 
 6819      5F736361 
 6819      6E467265 
 6819      71496E64 
 6820              	.LASF42:
 6821 0c0e 62736C6E 		.ascii	"bsln\000"
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 184


 6821      00
 6822              	.LASF4:
 6823 0c13 73686F72 		.ascii	"short unsigned int\000"
 6823      7420756E 
 6823      7369676E 
 6823      65642069 
 6823      6E7400
 6824              	.LASF79:
 6825 0c26 70747232 		.ascii	"ptr2SnsFlash\000"
 6825      536E7346 
 6825      6C617368 
 6825      00
 6826              	.LASF110:
 6827 0c33 6E657752 		.ascii	"newRegValue\000"
 6827      65675661 
 6827      6C756500 
 6828              	.LASF9:
 6829 0c3f 75696E74 		.ascii	"uint8\000"
 6829      3800
 6830              	.LASF13:
 6831 0c45 646F7562 		.ascii	"double\000"
 6831      6C6500
 6832              	.LASF45:
 6833 0c4c 6E656742 		.ascii	"negBslnRstCnt\000"
 6833      736C6E52 
 6833      7374436E 
 6833      7400
 6834              	.LASF152:
 6835 0c5a 43617053 		.ascii	"CapSense_SsCSDCalibrate\000"
 6835      656E7365 
 6835      5F537343 
 6835      53444361 
 6835      6C696272 
 6836              	.LASF111:
 6837 0c72 70747249 		.ascii	"ptrIdacMod\000"
 6837      6461634D 
 6837      6F6400
 6838              	.LASF115:
 6839 0c7d 736E7343 		.ascii	"snsClkDivider\000"
 6839      6C6B4469 
 6839      76696465 
 6839      7200
 6840              	.LASF109:
 6841 0c8b 69646163 		.ascii	"idacGain\000"
 6841      4761696E 
 6841      00
 6842              	.LASF50:
 6843 0c94 64657669 		.ascii	"deviceId\000"
 6843      63654964 
 6843      00
 6844              	.LASF135:
 6845 0c9d 77696467 		.ascii	"widgetId\000"
 6845      65744964 
 6845      00
 6846              	.LASF138:
 6847 0ca6 6E657750 		.ascii	"newPcRegValue\000"
 6847      63526567 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccgnuAfg.s 			page 185


 6847      56616C75 
 6847      6500
 6848              	.LASF179:
 6849 0cb4 43617053 		.ascii	"CapSense_idacGainTable\000"
 6849      656E7365 
 6849      5F696461 
 6849      63476169 
 6849      6E546162 
 6850              	.LASF48:
 6851 0ccb 43617053 		.ascii	"CapSense_RAM_SNS_LIST_STRUCT\000"
 6851      656E7365 
 6851      5F52414D 
 6851      5F534E53 
 6851      5F4C4953 
 6852              	.LASF89:
 6853 0ce8 77646774 		.ascii	"wdgtArray\000"
 6853      41727261 
 6853      7900
 6854              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran

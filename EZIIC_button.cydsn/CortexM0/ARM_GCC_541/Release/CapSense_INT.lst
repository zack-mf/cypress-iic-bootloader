ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccW8BzhS.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_INT.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_CSDPostSingleScan,"ax",%progbits
  20              		.align	1
  21              		.global	CapSense_CSDPostSingleScan
  22              		.code	16
  23              		.thumb_func
  24              		.type	CapSense_CSDPostSingleScan, %function
  25              	CapSense_CSDPostSingleScan:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC4\\CapSense_INT.c"
   1:Generated_Source\PSoC4/CapSense_INT.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CapSense_INT.c **** * \file CapSense_INT.c
   3:Generated_Source\PSoC4/CapSense_INT.c **** * \version 7.0
   4:Generated_Source\PSoC4/CapSense_INT.c **** *
   5:Generated_Source\PSoC4/CapSense_INT.c **** * \brief
   6:Generated_Source\PSoC4/CapSense_INT.c **** *   This file contains the source code for implementation of the Component's
   7:Generated_Source\PSoC4/CapSense_INT.c **** *   Interrupt Service Routine (ISR).
   8:Generated_Source\PSoC4/CapSense_INT.c **** *
   9:Generated_Source\PSoC4/CapSense_INT.c **** * \see CapSense v7.0 Datasheet
  10:Generated_Source\PSoC4/CapSense_INT.c **** *
  11:Generated_Source\PSoC4/CapSense_INT.c **** *//*****************************************************************************
  12:Generated_Source\PSoC4/CapSense_INT.c **** * Copyright (2016-2019), Cypress Semiconductor Corporation.
  13:Generated_Source\PSoC4/CapSense_INT.c **** ********************************************************************************
  14:Generated_Source\PSoC4/CapSense_INT.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  15:Generated_Source\PSoC4/CapSense_INT.c **** * protected by and subject to worldwide patent protection (United States and
  16:Generated_Source\PSoC4/CapSense_INT.c **** * foreign), United States copyright laws and international treaty provisions.
  17:Generated_Source\PSoC4/CapSense_INT.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  18:Generated_Source\PSoC4/CapSense_INT.c **** * license to copy, use, modify, create derivative works of, and compile the
  19:Generated_Source\PSoC4/CapSense_INT.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  20:Generated_Source\PSoC4/CapSense_INT.c **** * custom software in support of licensee product to be used only in conjunction
  21:Generated_Source\PSoC4/CapSense_INT.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  22:Generated_Source\PSoC4/CapSense_INT.c **** * Any reproduction, modification, translation, compilation, or representation of
  23:Generated_Source\PSoC4/CapSense_INT.c **** * this software except as specified above is prohibited without the express
  24:Generated_Source\PSoC4/CapSense_INT.c **** * written permission of Cypress.
  25:Generated_Source\PSoC4/CapSense_INT.c **** *
  26:Generated_Source\PSoC4/CapSense_INT.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  27:Generated_Source\PSoC4/CapSense_INT.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  28:Generated_Source\PSoC4/CapSense_INT.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  29:Generated_Source\PSoC4/CapSense_INT.c **** * Cypress reserves the right to make changes without further notice to the
  30:Generated_Source\PSoC4/CapSense_INT.c **** * materials described herein. Cypress does not assume any liability arising out
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccW8BzhS.s 			page 2


  31:Generated_Source\PSoC4/CapSense_INT.c **** * of the application or use of any product or circuit described herein. Cypress
  32:Generated_Source\PSoC4/CapSense_INT.c **** * does not authorize its products for use as critical components in life-support
  33:Generated_Source\PSoC4/CapSense_INT.c **** * systems where a malfunction or failure may reasonably be expected to result in
  34:Generated_Source\PSoC4/CapSense_INT.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  35:Generated_Source\PSoC4/CapSense_INT.c **** * support systems application implies that the manufacturer assumes all risk of
  36:Generated_Source\PSoC4/CapSense_INT.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  37:Generated_Source\PSoC4/CapSense_INT.c **** * limited by and subject to the applicable Cypress software license agreement.
  38:Generated_Source\PSoC4/CapSense_INT.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/CapSense_INT.c **** #include "cytypes.h"
  40:Generated_Source\PSoC4/CapSense_INT.c **** #include "cyfitter.h"
  41:Generated_Source\PSoC4/CapSense_INT.c **** #include "CapSense_Configuration.h"
  42:Generated_Source\PSoC4/CapSense_INT.c **** #include "CapSense_Structure.h"
  43:Generated_Source\PSoC4/CapSense_INT.c **** #include "CapSense_Sensing.h"
  44:Generated_Source\PSoC4/CapSense_INT.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
  45:Generated_Source\PSoC4/CapSense_INT.c ****     #include "CapSense_SensingCSD_LL.h"
  46:Generated_Source\PSoC4/CapSense_INT.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
  47:Generated_Source\PSoC4/CapSense_INT.c **** #include "cyapicallbacks.h"
  48:Generated_Source\PSoC4/CapSense_INT.c **** 
  49:Generated_Source\PSoC4/CapSense_INT.c **** /*******************************************************************************
  50:Generated_Source\PSoC4/CapSense_INT.c **** * Static Function Prototypes
  51:Generated_Source\PSoC4/CapSense_INT.c **** *******************************************************************************/
  52:Generated_Source\PSoC4/CapSense_INT.c **** /**
  53:Generated_Source\PSoC4/CapSense_INT.c **** * \cond SECTION_C_INTERNAL
  54:Generated_Source\PSoC4/CapSense_INT.c **** * \addtogroup group_c_internal
  55:Generated_Source\PSoC4/CapSense_INT.c **** * \{
  56:Generated_Source\PSoC4/CapSense_INT.c **** */
  57:Generated_Source\PSoC4/CapSense_INT.c **** 
  58:Generated_Source\PSoC4/CapSense_INT.c **** #if (((CapSense_ENABLE == CapSense_CSD_EN) || (CapSense_ENABLE == CapSense_CSD_CSX_EN)) && \
  59:Generated_Source\PSoC4/CapSense_INT.c ****      (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN))
  60:Generated_Source\PSoC4/CapSense_INT.c ****     static void CapSense_SsNextFrequencyScan(void);
  61:Generated_Source\PSoC4/CapSense_INT.c **** #endif /* (((CapSense_ENABLE == CapSense_CSD_EN) || (CapSense_ENABLE == CapSense_CSD_CSX_EN)) && \
  62:Generated_Source\PSoC4/CapSense_INT.c ****             (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)) */
  63:Generated_Source\PSoC4/CapSense_INT.c **** 
  64:Generated_Source\PSoC4/CapSense_INT.c **** #if ((CapSense_ENABLE == CapSense_CSD_EN) || (CapSense_ENABLE == CapSense_CSD_CSX_EN))
  65:Generated_Source\PSoC4/CapSense_INT.c ****     static void CapSense_SsCSDPostScan(void);
  66:Generated_Source\PSoC4/CapSense_INT.c ****     static void CapSense_SsCSDInitNextScan(void);
  67:Generated_Source\PSoC4/CapSense_INT.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) || (CapSense_ENABLE == CapSense_CSD_CSX_EN)) */
  68:Generated_Source\PSoC4/CapSense_INT.c **** /** \}
  69:Generated_Source\PSoC4/CapSense_INT.c **** * \endcond */
  70:Generated_Source\PSoC4/CapSense_INT.c **** 
  71:Generated_Source\PSoC4/CapSense_INT.c **** 
  72:Generated_Source\PSoC4/CapSense_INT.c **** /**
  73:Generated_Source\PSoC4/CapSense_INT.c **** * \cond SECTION_C_INTERRUPT
  74:Generated_Source\PSoC4/CapSense_INT.c **** * \addtogroup group_c_interrupt
  75:Generated_Source\PSoC4/CapSense_INT.c **** * \{
  76:Generated_Source\PSoC4/CapSense_INT.c **** */
  77:Generated_Source\PSoC4/CapSense_INT.c **** 
  78:Generated_Source\PSoC4/CapSense_INT.c **** 
  79:Generated_Source\PSoC4/CapSense_INT.c **** #if ((CapSense_ENABLE == CapSense_CSD_EN) || (CapSense_ENABLE == CapSense_CSD_CSX_EN))
  80:Generated_Source\PSoC4/CapSense_INT.c **** 
  81:Generated_Source\PSoC4/CapSense_INT.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
  82:Generated_Source\PSoC4/CapSense_INT.c ****     /* Fourth-generation HW block part */
  83:Generated_Source\PSoC4/CapSense_INT.c **** 
  84:Generated_Source\PSoC4/CapSense_INT.c ****     /*******************************************************************************
  85:Generated_Source\PSoC4/CapSense_INT.c ****     * Function Name: CapSense_CSDPostSingleScan
  86:Generated_Source\PSoC4/CapSense_INT.c ****     ****************************************************************************//**
  87:Generated_Source\PSoC4/CapSense_INT.c ****     *
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccW8BzhS.s 			page 3


  88:Generated_Source\PSoC4/CapSense_INT.c ****     * \brief
  89:Generated_Source\PSoC4/CapSense_INT.c ****     *  This is an internal ISR function for the single-sensor scanning implementation.
  90:Generated_Source\PSoC4/CapSense_INT.c ****     *
  91:Generated_Source\PSoC4/CapSense_INT.c ****     * \details
  92:Generated_Source\PSoC4/CapSense_INT.c ****     *  This ISR handler is triggered when the user calls the
  93:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_CSDScanExt() function.
  94:Generated_Source\PSoC4/CapSense_INT.c ****     *
  95:Generated_Source\PSoC4/CapSense_INT.c ****     *  The following tasks are performed for Third-generation HW block:
  96:Generated_Source\PSoC4/CapSense_INT.c ****     *    1. Disable the CSD interrupt.
  97:Generated_Source\PSoC4/CapSense_INT.c ****     *    2. Read the Counter register and update the data structure with raw data.
  98:Generated_Source\PSoC4/CapSense_INT.c ****     *    3. Connect the Vref buffer to the AMUX bus.
  99:Generated_Source\PSoC4/CapSense_INT.c ****     *    4. Update the Scan Counter.
 100:Generated_Source\PSoC4/CapSense_INT.c ****     *    5. Reset the BUSY flag.
 101:Generated_Source\PSoC4/CapSense_INT.c ****     *    6. Enable the CSD interrupt.
 102:Generated_Source\PSoC4/CapSense_INT.c ****     *
 103:Generated_Source\PSoC4/CapSense_INT.c ****     *  The following tasks are performed for Fourth-generation HW block:
 104:Generated_Source\PSoC4/CapSense_INT.c ****     *    1. Check if the raw data is not noisy.
 105:Generated_Source\PSoC4/CapSense_INT.c ****     *    2. Read the Counter register and update the data structure with raw data.
 106:Generated_Source\PSoC4/CapSense_INT.c ****     *    3. Configure and start the scan for the next frequency if the
 107:Generated_Source\PSoC4/CapSense_INT.c ****     *      multi-frequency is enabled.
 108:Generated_Source\PSoC4/CapSense_INT.c ****     *    4. Update the Scan Counter.
 109:Generated_Source\PSoC4/CapSense_INT.c ****     *    5. Reset the BUSY flag.
 110:Generated_Source\PSoC4/CapSense_INT.c ****     *    6. Enable the CSD interrupt.
 111:Generated_Source\PSoC4/CapSense_INT.c ****     *
 112:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler changes the IMO and initializes scanning for the next frequency
 113:Generated_Source\PSoC4/CapSense_INT.c ****     *  channels when multi-frequency scanning is enabled.
 114:Generated_Source\PSoC4/CapSense_INT.c ****     *
 115:Generated_Source\PSoC4/CapSense_INT.c ****     *  This function has two Macro Callbacks that allow calling the user code
 116:Generated_Source\PSoC4/CapSense_INT.c ****     *  from macros specified in Component's generated code. Refer to the
 117:Generated_Source\PSoC4/CapSense_INT.c ****     *  \ref group_c_macrocallbacks section of the PSoC Creator User Guide
 118:Generated_Source\PSoC4/CapSense_INT.c ****     *  for details.
 119:Generated_Source\PSoC4/CapSense_INT.c ****     *
 120:Generated_Source\PSoC4/CapSense_INT.c ****     *******************************************************************************/
 121:Generated_Source\PSoC4/CapSense_INT.c ****     CY_ISR(CapSense_CSDPostSingleScan)
 122:Generated_Source\PSoC4/CapSense_INT.c ****     {
 123:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_ENTRY_CALLBACK
 124:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_EntryCallback();
 125:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_ENTRY_CALLBACK */
 126:Generated_Source\PSoC4/CapSense_INT.c **** 
 127:Generated_Source\PSoC4/CapSense_INT.c ****         /* Clear pending interrupt */
 128:Generated_Source\PSoC4/CapSense_INT.c ****         CY_SET_REG32(CapSense_INTR_PTR, CapSense_INTR_SET_MASK);
 129:Generated_Source\PSoC4/CapSense_INT.c **** 
 130:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN)
 131:Generated_Source\PSoC4/CapSense_INT.c ****             if ((CapSense_CSD_NOISE_METRIC_TH < ((CY_GET_REG32(CapSense_RESULT_VAL1_PTR) &
 132:Generated_Source\PSoC4/CapSense_INT.c ****                                                         CapSense_RESULT_VAL1_BAD_CONVS_MASK) >>
 133:Generated_Source\PSoC4/CapSense_INT.c ****                                                         CapSense_RESULT_VAL1_BAD_CONVS_SHIFT)) &&
 134:Generated_Source\PSoC4/CapSense_INT.c ****                                                         (0u < CapSense_badConversionsNum))
 135:Generated_Source\PSoC4/CapSense_INT.c ****             {
 136:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Decrement bad conversions number */
 137:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_badConversionsNum--;
 138:Generated_Source\PSoC4/CapSense_INT.c **** 
 139:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Start the re-scan */
 140:Generated_Source\PSoC4/CapSense_INT.c ****                 CY_SET_REG32(CapSense_SEQ_START_PTR, CapSense_SEQ_START_AZ0_SKIP_MASK |
 141:Generated_Source\PSoC4/CapSense_INT.c ****                                                              CapSense_SEQ_START_AZ1_SKIP_MASK |
 142:Generated_Source\PSoC4/CapSense_INT.c ****                                                              CapSense_SEQ_START_START_MASK);
 143:Generated_Source\PSoC4/CapSense_INT.c ****             }
 144:Generated_Source\PSoC4/CapSense_INT.c ****             else
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccW8BzhS.s 			page 4


 145:Generated_Source\PSoC4/CapSense_INT.c ****             {
 146:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN) */
 147:Generated_Source\PSoC4/CapSense_INT.c **** 
 148:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_SsCSDPostScan();
 149:Generated_Source\PSoC4/CapSense_INT.c **** 
 150:Generated_Source\PSoC4/CapSense_INT.c ****             #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 151:Generated_Source\PSoC4/CapSense_INT.c ****                 if (CapSense_FREQ_CHANNEL_2 > CapSense_scanFreqIndex)
 152:Generated_Source\PSoC4/CapSense_INT.c ****                 {
 153:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Scan the next channel */
 154:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsNextFrequencyScan();
 155:Generated_Source\PSoC4/CapSense_INT.c ****                 }
 156:Generated_Source\PSoC4/CapSense_INT.c ****                 else
 157:Generated_Source\PSoC4/CapSense_INT.c ****                 {
 158:Generated_Source\PSoC4/CapSense_INT.c ****                     /* All channels are scanned. Set IMO to zero channel */
 159:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
 160:Generated_Source\PSoC4/CapSense_INT.c **** 
 161:Generated_Source\PSoC4/CapSense_INT.c ****                     #if (CapSense_MFS_IMO == CapSense_MFS_METHOD)
 162:Generated_Source\PSoC4/CapSense_INT.c ****                         CapSense_SsChangeImoFreq(CapSense_FREQ_CHANNEL_0);
 163:Generated_Source\PSoC4/CapSense_INT.c ****                     #else
 164:Generated_Source\PSoC4/CapSense_INT.c ****                         CapSense_SsChangeClkFreq(CapSense_FREQ_CHANNEL_0);
 165:Generated_Source\PSoC4/CapSense_INT.c ****                     #endif /* (CapSense_MFS_IMO == CapSense_MFS_METHOD) */
 166:Generated_Source\PSoC4/CapSense_INT.c **** 
 167:Generated_Source\PSoC4/CapSense_INT.c ****                     #if (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN)
 168:Generated_Source\PSoC4/CapSense_INT.c ****                         /* Disable Fourth-generation HW block */
 169:Generated_Source\PSoC4/CapSense_INT.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd);
 170:Generated_Source\PSoC4/CapSense_INT.c ****                     #endif /* (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) */
 171:Generated_Source\PSoC4/CapSense_INT.c **** 
 172:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Update Scan Counter */
 173:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_dsRam.scanCounter++;
 174:Generated_Source\PSoC4/CapSense_INT.c **** 
 175:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Sensor is totally scanned. Reset BUSY flag */
 176:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_dsRam.status &= ~(CapSense_SW_STS_BUSY | CapSense_WDGT_SW_STS_BUSY);
 177:Generated_Source\PSoC4/CapSense_INT.c ****                 }
 178:Generated_Source\PSoC4/CapSense_INT.c ****             #else
 179:Generated_Source\PSoC4/CapSense_INT.c ****                 {
 180:Generated_Source\PSoC4/CapSense_INT.c ****                     #if (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN)
 181:Generated_Source\PSoC4/CapSense_INT.c ****                         /* Disable Fourth-generation HW block */
 182:Generated_Source\PSoC4/CapSense_INT.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd);
 183:Generated_Source\PSoC4/CapSense_INT.c ****                     #endif /* (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) */
 184:Generated_Source\PSoC4/CapSense_INT.c **** 
 185:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Update Scan Counter */
 186:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_dsRam.scanCounter++;
 187:Generated_Source\PSoC4/CapSense_INT.c **** 
 188:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Sensor is totally scanned. Reset BUSY flag */
 189:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_dsRam.status &= ~(CapSense_SW_STS_BUSY | CapSense_WDGT_SW_STS_BUSY);
 190:Generated_Source\PSoC4/CapSense_INT.c ****                 }
 191:Generated_Source\PSoC4/CapSense_INT.c ****             #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 192:Generated_Source\PSoC4/CapSense_INT.c ****     #if (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN)
 193:Generated_Source\PSoC4/CapSense_INT.c ****         }
 194:Generated_Source\PSoC4/CapSense_INT.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN) */
 195:Generated_Source\PSoC4/CapSense_INT.c **** 
 196:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_EXIT_CALLBACK
 197:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_ExitCallback();
 198:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_EXIT_CALLBACK */
 199:Generated_Source\PSoC4/CapSense_INT.c ****     }
 200:Generated_Source\PSoC4/CapSense_INT.c **** 
 201:Generated_Source\PSoC4/CapSense_INT.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccW8BzhS.s 			page 5


 202:Generated_Source\PSoC4/CapSense_INT.c ****     /*******************************************************************************
 203:Generated_Source\PSoC4/CapSense_INT.c ****     * Function Name: CapSense_CSDPostMultiScan
 204:Generated_Source\PSoC4/CapSense_INT.c ****     ****************************************************************************//**
 205:Generated_Source\PSoC4/CapSense_INT.c ****     *
 206:Generated_Source\PSoC4/CapSense_INT.c ****     * \brief
 207:Generated_Source\PSoC4/CapSense_INT.c ****     *  This is an internal ISR function for the multiple-sensor scanning
 208:Generated_Source\PSoC4/CapSense_INT.c ****     *  implementation.
 209:Generated_Source\PSoC4/CapSense_INT.c ****     *
 210:Generated_Source\PSoC4/CapSense_INT.c ****     * \details
 211:Generated_Source\PSoC4/CapSense_INT.c ****     *  This ISR handler is triggered when the user calls the
 212:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_Scan() or CapSense_ScanAllWidgets() APIs.
 213:Generated_Source\PSoC4/CapSense_INT.c ****     *
 214:Generated_Source\PSoC4/CapSense_INT.c ****     *  The following tasks are performed:
 215:Generated_Source\PSoC4/CapSense_INT.c ****     *    1. Disable the CSD interrupt.
 216:Generated_Source\PSoC4/CapSense_INT.c ****     *    2. Read the Counter register and update the data structure with raw data.
 217:Generated_Source\PSoC4/CapSense_INT.c ****     *    3. Connect the Vref buffer to the AMUX bus.
 218:Generated_Source\PSoC4/CapSense_INT.c ****     *    4. Disable the CSD block (after the widget has been scanned).
 219:Generated_Source\PSoC4/CapSense_INT.c ****     *    5. Update the Scan Counter.
 220:Generated_Source\PSoC4/CapSense_INT.c ****     *    6. Reset the BUSY flag.
 221:Generated_Source\PSoC4/CapSense_INT.c ****     *    7. Enable the CSD interrupt.
 222:Generated_Source\PSoC4/CapSense_INT.c ****     *
 223:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler initializes scanning for the previous sensor when the
 224:Generated_Source\PSoC4/CapSense_INT.c ****     *  widget has more than one sensor.
 225:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler initializes scanning for the next widget when the
 226:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_ScanAllWidgets() APIs are called and the project has
 227:Generated_Source\PSoC4/CapSense_INT.c ****     *  more than one widget.
 228:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler changes the IMO and initializes scanning for the next
 229:Generated_Source\PSoC4/CapSense_INT.c ****     *  frequency channels when multi-frequency scanning is enabled.
 230:Generated_Source\PSoC4/CapSense_INT.c ****     *
 231:Generated_Source\PSoC4/CapSense_INT.c ****     *  This function has two Macro Callbacks that allow calling the user
 232:Generated_Source\PSoC4/CapSense_INT.c ****     *  code from macros specified in Component's generated code. Refer to the
 233:Generated_Source\PSoC4/CapSense_INT.c ****     *  \ref group_c_macrocallbacks section of the PSoC Creator User Guide
 234:Generated_Source\PSoC4/CapSense_INT.c ****     *  for details.
 235:Generated_Source\PSoC4/CapSense_INT.c ****     *
 236:Generated_Source\PSoC4/CapSense_INT.c ****     *******************************************************************************/
 237:Generated_Source\PSoC4/CapSense_INT.c ****     CY_ISR(CapSense_CSDPostMultiScan)
 238:Generated_Source\PSoC4/CapSense_INT.c ****     {
 239:Generated_Source\PSoC4/CapSense_INT.c ****         /* Declare and initialize ptr to sensor IO structure to appropriate address */
 240:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_FLASH_IO_STRUCT const *curSnsIOPtr = (CapSense_FLASH_IO_STRUCT const *)
 241:Generated_Source\PSoC4/CapSense_INT.c ****                                                           CapSense_dsFlash.wdgtArray[CapSense_widge
 242:Generated_Source\PSoC4/CapSense_INT.c ****                                                           + CapSense_sensorIndex;
 243:Generated_Source\PSoC4/CapSense_INT.c **** 
 244:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_ENTRY_CALLBACK
 245:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_EntryCallback();
 246:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_ENTRY_CALLBACK */
 247:Generated_Source\PSoC4/CapSense_INT.c **** 
 248:Generated_Source\PSoC4/CapSense_INT.c ****         /* Clear pending interrupt */
 249:Generated_Source\PSoC4/CapSense_INT.c ****         CY_SET_REG32(CapSense_INTR_PTR, CapSense_INTR_SET_MASK);
 250:Generated_Source\PSoC4/CapSense_INT.c **** 
 251:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN)
 252:Generated_Source\PSoC4/CapSense_INT.c ****             if ((CapSense_CSD_NOISE_METRIC_TH < ((CY_GET_REG32(CapSense_RESULT_VAL1_PTR) &
 253:Generated_Source\PSoC4/CapSense_INT.c ****                                                       CapSense_RESULT_VAL1_BAD_CONVS_MASK) >>
 254:Generated_Source\PSoC4/CapSense_INT.c ****                                                       CapSense_RESULT_VAL1_BAD_CONVS_SHIFT)) &&
 255:Generated_Source\PSoC4/CapSense_INT.c ****                                                       (0u < CapSense_badConversionsNum))
 256:Generated_Source\PSoC4/CapSense_INT.c ****             {
 257:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Decrement bad conversions number */
 258:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_badConversionsNum--;
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccW8BzhS.s 			page 6


 259:Generated_Source\PSoC4/CapSense_INT.c **** 
 260:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Start the re-scan */
 261:Generated_Source\PSoC4/CapSense_INT.c ****                 CY_SET_REG32(CapSense_SEQ_START_PTR, CapSense_SEQ_START_AZ0_SKIP_MASK |
 262:Generated_Source\PSoC4/CapSense_INT.c ****                                                              CapSense_SEQ_START_AZ1_SKIP_MASK |
 263:Generated_Source\PSoC4/CapSense_INT.c ****                                                              CapSense_SEQ_START_START_MASK);
 264:Generated_Source\PSoC4/CapSense_INT.c ****             }
 265:Generated_Source\PSoC4/CapSense_INT.c ****             else
 266:Generated_Source\PSoC4/CapSense_INT.c ****             {
 267:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN) */
 268:Generated_Source\PSoC4/CapSense_INT.c **** 
 269:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_SsCSDPostScan();
 270:Generated_Source\PSoC4/CapSense_INT.c **** 
 271:Generated_Source\PSoC4/CapSense_INT.c ****             /* Disable sensor when all frequency channels are scanned */
 272:Generated_Source\PSoC4/CapSense_INT.c ****             #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 273:Generated_Source\PSoC4/CapSense_INT.c ****                 if (CapSense_FREQ_CHANNEL_2 == CapSense_scanFreqIndex)
 274:Generated_Source\PSoC4/CapSense_INT.c ****             #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 275:Generated_Source\PSoC4/CapSense_INT.c ****             {
 276:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Disable sensor */
 277:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_CSDDisconnectSns(curSnsIOPtr);
 278:Generated_Source\PSoC4/CapSense_INT.c ****             }
 279:Generated_Source\PSoC4/CapSense_INT.c **** 
 280:Generated_Source\PSoC4/CapSense_INT.c ****             #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 281:Generated_Source\PSoC4/CapSense_INT.c ****                 if (CapSense_FREQ_CHANNEL_2 > CapSense_scanFreqIndex)
 282:Generated_Source\PSoC4/CapSense_INT.c ****                 {
 283:Generated_Source\PSoC4/CapSense_INT.c ****                      /* Scan the next channel */
 284:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsNextFrequencyScan();
 285:Generated_Source\PSoC4/CapSense_INT.c ****                 }
 286:Generated_Source\PSoC4/CapSense_INT.c ****                 else
 287:Generated_Source\PSoC4/CapSense_INT.c ****                 {
 288:Generated_Source\PSoC4/CapSense_INT.c ****                      /* All channels are scanned. Set IMO to zero channel */
 289:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
 290:Generated_Source\PSoC4/CapSense_INT.c **** 
 291:Generated_Source\PSoC4/CapSense_INT.c ****                     #if (CapSense_MFS_IMO == CapSense_MFS_METHOD)
 292:Generated_Source\PSoC4/CapSense_INT.c ****                         CapSense_SsChangeImoFreq(CapSense_FREQ_CHANNEL_0);
 293:Generated_Source\PSoC4/CapSense_INT.c ****                     #else
 294:Generated_Source\PSoC4/CapSense_INT.c ****                         CapSense_SsChangeClkFreq(CapSense_FREQ_CHANNEL_0);
 295:Generated_Source\PSoC4/CapSense_INT.c ****                     #endif /* (CapSense_MFS_IMO == CapSense_MFS_METHOD) */
 296:Generated_Source\PSoC4/CapSense_INT.c **** 
 297:Generated_Source\PSoC4/CapSense_INT.c ****                      /* Scan the next sensor */
 298:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsCSDInitNextScan();
 299:Generated_Source\PSoC4/CapSense_INT.c ****                 }
 300:Generated_Source\PSoC4/CapSense_INT.c ****             #else
 301:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Scan the next sensor */
 302:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsCSDInitNextScan();
 303:Generated_Source\PSoC4/CapSense_INT.c ****             #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 304:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN)
 305:Generated_Source\PSoC4/CapSense_INT.c ****             }
 306:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN) */
 307:Generated_Source\PSoC4/CapSense_INT.c **** 
 308:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_EXIT_CALLBACK
 309:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_ExitCallback();
 310:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_EXIT_CALLBACK */
 311:Generated_Source\PSoC4/CapSense_INT.c ****     }
 312:Generated_Source\PSoC4/CapSense_INT.c **** 
 313:Generated_Source\PSoC4/CapSense_INT.c **** 
 314:Generated_Source\PSoC4/CapSense_INT.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
 315:Generated_Source\PSoC4/CapSense_INT.c ****     /*******************************************************************************
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccW8BzhS.s 			page 7


 316:Generated_Source\PSoC4/CapSense_INT.c ****     * Function Name: CapSense_CSDPostMultiScanGanged
 317:Generated_Source\PSoC4/CapSense_INT.c ****     ****************************************************************************//**
 318:Generated_Source\PSoC4/CapSense_INT.c ****     *
 319:Generated_Source\PSoC4/CapSense_INT.c ****     * \brief
 320:Generated_Source\PSoC4/CapSense_INT.c ****     *  This is an internal ISR function for the multiple-sensor scanning
 321:Generated_Source\PSoC4/CapSense_INT.c ****     *  implementation for ganged sensors.
 322:Generated_Source\PSoC4/CapSense_INT.c ****     *
 323:Generated_Source\PSoC4/CapSense_INT.c ****     * \details
 324:Generated_Source\PSoC4/CapSense_INT.c ****     *  This ISR handler is triggered when the user calls the
 325:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_Scan() API for a ganged sensor or the
 326:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_ScanAllWidgets() API in the project with ganged sensors.
 327:Generated_Source\PSoC4/CapSense_INT.c ****     *
 328:Generated_Source\PSoC4/CapSense_INT.c ****     *  The following tasks are performed:
 329:Generated_Source\PSoC4/CapSense_INT.c ****     *    1. Disable the CSD interrupt.
 330:Generated_Source\PSoC4/CapSense_INT.c ****     *    2. Read the Counter register and update the data structure with raw data.
 331:Generated_Source\PSoC4/CapSense_INT.c ****     *    3. Connect the Vref buffer to the AMUX bus.
 332:Generated_Source\PSoC4/CapSense_INT.c ****     *    4. Disable the CSD block (after the widget has been scanned).
 333:Generated_Source\PSoC4/CapSense_INT.c ****     *    5. Update the Scan Counter.
 334:Generated_Source\PSoC4/CapSense_INT.c ****     *    6. Reset the BUSY flag.
 335:Generated_Source\PSoC4/CapSense_INT.c ****     *    7. Enable the CSD interrupt.
 336:Generated_Source\PSoC4/CapSense_INT.c ****     *
 337:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler initializes scanning for the previous sensor when the
 338:Generated_Source\PSoC4/CapSense_INT.c ****     *  widget has more than one sensor.
 339:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler initializes scanning for the next widget when the
 340:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_ScanAllWidgets() APIs are called and the project has
 341:Generated_Source\PSoC4/CapSense_INT.c ****     *  more than one widget.
 342:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler changes the IMO and initializes scanning for the next
 343:Generated_Source\PSoC4/CapSense_INT.c ****     *  frequency channels when multi-frequency scanning is enabled.
 344:Generated_Source\PSoC4/CapSense_INT.c ****     *
 345:Generated_Source\PSoC4/CapSense_INT.c ****     *  This function has two Macro Callbacks that allow calling the user
 346:Generated_Source\PSoC4/CapSense_INT.c ****     *  code from macros specified in Component's generated code. Refer to the
 347:Generated_Source\PSoC4/CapSense_INT.c ****     *  \ref group_c_macrocallbacks section of the PSoC Creator User Guide
 348:Generated_Source\PSoC4/CapSense_INT.c ****     *  for details.
 349:Generated_Source\PSoC4/CapSense_INT.c ****     *
 350:Generated_Source\PSoC4/CapSense_INT.c ****     *******************************************************************************/
 351:Generated_Source\PSoC4/CapSense_INT.c ****     CY_ISR(CapSense_CSDPostMultiScanGanged)
 352:Generated_Source\PSoC4/CapSense_INT.c ****     {
 353:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_ENTRY_CALLBACK
 354:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_EntryCallback();
 355:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_ENTRY_CALLBACK */
 356:Generated_Source\PSoC4/CapSense_INT.c **** 
 357:Generated_Source\PSoC4/CapSense_INT.c ****         /* Clear pending interrupt */
 358:Generated_Source\PSoC4/CapSense_INT.c ****         CY_SET_REG32(CapSense_INTR_PTR, CapSense_INTR_SET_MASK);
 359:Generated_Source\PSoC4/CapSense_INT.c **** 
 360:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN)
 361:Generated_Source\PSoC4/CapSense_INT.c ****             if ((CapSense_CSD_NOISE_METRIC_TH < ((CY_GET_REG32(CapSense_RESULT_VAL1_PTR) &
 362:Generated_Source\PSoC4/CapSense_INT.c ****                                                       CapSense_RESULT_VAL1_BAD_CONVS_MASK) >>
 363:Generated_Source\PSoC4/CapSense_INT.c ****                                                       CapSense_RESULT_VAL1_BAD_CONVS_SHIFT)) &&
 364:Generated_Source\PSoC4/CapSense_INT.c ****                                                       (0u < CapSense_badConversionsNum))
 365:Generated_Source\PSoC4/CapSense_INT.c ****             {
 366:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Decrement bad conversions number */
 367:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_badConversionsNum--;
 368:Generated_Source\PSoC4/CapSense_INT.c **** 
 369:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Start the re-scan */
 370:Generated_Source\PSoC4/CapSense_INT.c ****                 CY_SET_REG32(CapSense_SEQ_START_PTR, CapSense_SEQ_START_AZ0_SKIP_MASK |
 371:Generated_Source\PSoC4/CapSense_INT.c ****                                                              CapSense_SEQ_START_AZ1_SKIP_MASK |
 372:Generated_Source\PSoC4/CapSense_INT.c ****                                                              CapSense_SEQ_START_START_MASK);
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccW8BzhS.s 			page 8


 373:Generated_Source\PSoC4/CapSense_INT.c ****             }
 374:Generated_Source\PSoC4/CapSense_INT.c ****             else
 375:Generated_Source\PSoC4/CapSense_INT.c ****             {
 376:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN) */
 377:Generated_Source\PSoC4/CapSense_INT.c **** 
 378:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_SsCSDPostScan();
 379:Generated_Source\PSoC4/CapSense_INT.c **** 
 380:Generated_Source\PSoC4/CapSense_INT.c ****             #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 381:Generated_Source\PSoC4/CapSense_INT.c ****                 if (CapSense_FREQ_CHANNEL_2 == CapSense_scanFreqIndex)
 382:Generated_Source\PSoC4/CapSense_INT.c ****             #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 383:Generated_Source\PSoC4/CapSense_INT.c ****             {
 384:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsCSDDisconnectSnsExt((uint32)CapSense_widgetIndex, (uint32)CapSense_senso
 385:Generated_Source\PSoC4/CapSense_INT.c ****             }
 386:Generated_Source\PSoC4/CapSense_INT.c **** 
 387:Generated_Source\PSoC4/CapSense_INT.c ****             #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 388:Generated_Source\PSoC4/CapSense_INT.c ****                 if (CapSense_FREQ_CHANNEL_2 > CapSense_scanFreqIndex)
 389:Generated_Source\PSoC4/CapSense_INT.c ****                 {
 390:Generated_Source\PSoC4/CapSense_INT.c ****                      /* Scan the next channel */
 391:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsNextFrequencyScan();
 392:Generated_Source\PSoC4/CapSense_INT.c ****                 }
 393:Generated_Source\PSoC4/CapSense_INT.c ****                 else
 394:Generated_Source\PSoC4/CapSense_INT.c ****                 {
 395:Generated_Source\PSoC4/CapSense_INT.c ****                     /* All channels are scanned. Set IMO to zero channel */
 396:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
 397:Generated_Source\PSoC4/CapSense_INT.c **** 
 398:Generated_Source\PSoC4/CapSense_INT.c ****                     #if (CapSense_MFS_IMO == CapSense_MFS_METHOD)
 399:Generated_Source\PSoC4/CapSense_INT.c ****                         CapSense_SsChangeImoFreq(CapSense_FREQ_CHANNEL_0);
 400:Generated_Source\PSoC4/CapSense_INT.c ****                     #else
 401:Generated_Source\PSoC4/CapSense_INT.c ****                         CapSense_SsChangeClkFreq(CapSense_FREQ_CHANNEL_0);
 402:Generated_Source\PSoC4/CapSense_INT.c ****                     #endif /* (CapSense_MFS_IMO == CapSense_MFS_METHOD) */
 403:Generated_Source\PSoC4/CapSense_INT.c **** 
 404:Generated_Source\PSoC4/CapSense_INT.c ****                      /* Scan the next sensor */
 405:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsCSDInitNextScan();
 406:Generated_Source\PSoC4/CapSense_INT.c ****                 }
 407:Generated_Source\PSoC4/CapSense_INT.c ****             #else
 408:Generated_Source\PSoC4/CapSense_INT.c ****                  /* Scan the next sensor */
 409:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsCSDInitNextScan();
 410:Generated_Source\PSoC4/CapSense_INT.c ****             #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 411:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN)
 412:Generated_Source\PSoC4/CapSense_INT.c ****             }
 413:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN) */
 414:Generated_Source\PSoC4/CapSense_INT.c **** 
 415:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_EXIT_CALLBACK
 416:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_ExitCallback();
 417:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_EXIT_CALLBACK */
 418:Generated_Source\PSoC4/CapSense_INT.c ****     }
 419:Generated_Source\PSoC4/CapSense_INT.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
 420:Generated_Source\PSoC4/CapSense_INT.c **** 
 421:Generated_Source\PSoC4/CapSense_INT.c **** #else
 422:Generated_Source\PSoC4/CapSense_INT.c **** 
 423:Generated_Source\PSoC4/CapSense_INT.c ****     /* Third-generation HW block part */
 424:Generated_Source\PSoC4/CapSense_INT.c **** 
 425:Generated_Source\PSoC4/CapSense_INT.c ****     /*******************************************************************************
 426:Generated_Source\PSoC4/CapSense_INT.c ****     * Function Name: CapSense_CSDPostSingleScan
 427:Generated_Source\PSoC4/CapSense_INT.c ****     ****************************************************************************//**
 428:Generated_Source\PSoC4/CapSense_INT.c ****     *
 429:Generated_Source\PSoC4/CapSense_INT.c ****     * \brief
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccW8BzhS.s 			page 9


 430:Generated_Source\PSoC4/CapSense_INT.c ****     *  This is an internal ISR function for the single-sensor scanning implementation.
 431:Generated_Source\PSoC4/CapSense_INT.c ****     *
 432:Generated_Source\PSoC4/CapSense_INT.c ****     * \details
 433:Generated_Source\PSoC4/CapSense_INT.c ****     *  This ISR handler is triggered when the user calls the
 434:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_CSDScanExt() function.
 435:Generated_Source\PSoC4/CapSense_INT.c ****     *
 436:Generated_Source\PSoC4/CapSense_INT.c ****     *  The following tasks are performed for Third-generation HW block:
 437:Generated_Source\PSoC4/CapSense_INT.c ****     *    1. Disable the CSD interrupt.
 438:Generated_Source\PSoC4/CapSense_INT.c ****     *    2. Read the Counter register and update the data structure with raw data.
 439:Generated_Source\PSoC4/CapSense_INT.c ****     *    3. Connect the Vref buffer to the AMUX bus.
 440:Generated_Source\PSoC4/CapSense_INT.c ****     *    4. Update the Scan Counter.
 441:Generated_Source\PSoC4/CapSense_INT.c ****     *    5. Reset the BUSY flag.
 442:Generated_Source\PSoC4/CapSense_INT.c ****     *    6. Enable the CSD interrupt.
 443:Generated_Source\PSoC4/CapSense_INT.c ****     *
 444:Generated_Source\PSoC4/CapSense_INT.c ****     *  The following tasks are performed for Fourth-generation HW block:
 445:Generated_Source\PSoC4/CapSense_INT.c ****     *    1. Check if the raw data is not noisy.
 446:Generated_Source\PSoC4/CapSense_INT.c ****     *    2. Read the Counter register and update the data structure with raw data.
 447:Generated_Source\PSoC4/CapSense_INT.c ****     *    3. Configure and start the scan for the next frequency if the
 448:Generated_Source\PSoC4/CapSense_INT.c ****     *      multi-frequency is enabled.
 449:Generated_Source\PSoC4/CapSense_INT.c ****     *    4. Update the Scan Counter.
 450:Generated_Source\PSoC4/CapSense_INT.c ****     *    5. Reset the BUSY flag.
 451:Generated_Source\PSoC4/CapSense_INT.c ****     *    6. Enable the CSD interrupt.
 452:Generated_Source\PSoC4/CapSense_INT.c ****     *
 453:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler changes the IMO and initializes scanning for the next frequency
 454:Generated_Source\PSoC4/CapSense_INT.c ****     *  channels when multi-frequency scanning is enabled.
 455:Generated_Source\PSoC4/CapSense_INT.c ****     *
 456:Generated_Source\PSoC4/CapSense_INT.c ****     *  This function has two Macro Callbacks that allow calling the user code
 457:Generated_Source\PSoC4/CapSense_INT.c ****     *  from macros specified in Component's generated code. Refer to the
 458:Generated_Source\PSoC4/CapSense_INT.c ****     *  \ref group_c_macrocallbacks section of the PSoC Creator User Guide
 459:Generated_Source\PSoC4/CapSense_INT.c ****     *  for details.
 460:Generated_Source\PSoC4/CapSense_INT.c ****     *
 461:Generated_Source\PSoC4/CapSense_INT.c ****     *******************************************************************************/
 462:Generated_Source\PSoC4/CapSense_INT.c ****     CY_ISR(CapSense_CSDPostSingleScan)
 463:Generated_Source\PSoC4/CapSense_INT.c ****     {
  28              		.loc 1 463 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 464:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_ENTRY_CALLBACK
 465:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_EntryCallback();
 466:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_ENTRY_CALLBACK */
 467:Generated_Source\PSoC4/CapSense_INT.c **** 
 468:Generated_Source\PSoC4/CapSense_INT.c ****         /* Clear pending interrupt */
 469:Generated_Source\PSoC4/CapSense_INT.c ****         CY_SET_REG32(CapSense_INTR_PTR, CapSense_INTR_SET_MASK);
  33              		.loc 1 469 0
  34 0000 0122     		movs	r2, #1
  35 0002 0C4B     		ldr	r3, .L2
 470:Generated_Source\PSoC4/CapSense_INT.c **** 
 471:Generated_Source\PSoC4/CapSense_INT.c ****         /* Read Rawdata */
 472:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_SsCSDPostScan();
 473:Generated_Source\PSoC4/CapSense_INT.c **** 
 474:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 475:Generated_Source\PSoC4/CapSense_INT.c ****             if (CapSense_FREQ_CHANNEL_2 > CapSense_scanFreqIndex)
 476:Generated_Source\PSoC4/CapSense_INT.c ****             {
 477:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Connect Vref Buffer to AMUX bus. Third-generation HW block is enabled */
 478:Generated_Source\PSoC4/CapSense_INT.c ****                 CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECHARGE_CON
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccW8BzhS.s 			page 10


 479:Generated_Source\PSoC4/CapSense_INT.c **** 
 480:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsNextFrequencyScan();
 481:Generated_Source\PSoC4/CapSense_INT.c ****             }
 482:Generated_Source\PSoC4/CapSense_INT.c ****             else
 483:Generated_Source\PSoC4/CapSense_INT.c ****             {
 484:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
 485:Generated_Source\PSoC4/CapSense_INT.c **** 
 486:Generated_Source\PSoC4/CapSense_INT.c ****                 #if (CapSense_MFS_IMO == CapSense_MFS_METHOD)
 487:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsChangeImoFreq(CapSense_FREQ_CHANNEL_0);
 488:Generated_Source\PSoC4/CapSense_INT.c ****                 #else
 489:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsChangeClkFreq(CapSense_FREQ_CHANNEL_0);
 490:Generated_Source\PSoC4/CapSense_INT.c ****                 #endif /* (CapSense_MFS_IMO == CapSense_MFS_METHOD) */
 491:Generated_Source\PSoC4/CapSense_INT.c **** 
 492:Generated_Source\PSoC4/CapSense_INT.c ****                 #if (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN)
 493:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Disable Third-generation HW block. Connect Vref Buffer to AMUX bus */
 494:Generated_Source\PSoC4/CapSense_INT.c ****                     #if ((CapSense_CSH_PRECHARGE_IO_BUF == CapSense_CSD_CSH_PRECHARGE_SRC) &&\
 495:Generated_Source\PSoC4/CapSense_INT.c ****                          (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
 496:Generated_Source\PSoC4/CapSense_INT.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CMOD_PRECHA
 497:Generated_Source\PSoC4/CapSense_INT.c ****                     #else
 498:Generated_Source\PSoC4/CapSense_INT.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECH
 499:Generated_Source\PSoC4/CapSense_INT.c ****                     #endif
 500:Generated_Source\PSoC4/CapSense_INT.c ****                 #else
 501:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Connect Vref Buffer to AMUX bus. Third-generation HW block is enabled */
 502:Generated_Source\PSoC4/CapSense_INT.c ****                     CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECHARGE
 503:Generated_Source\PSoC4/CapSense_INT.c ****                 #endif
 504:Generated_Source\PSoC4/CapSense_INT.c **** 
 505:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Update Scan Counter */
 506:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_dsRam.scanCounter++;
 507:Generated_Source\PSoC4/CapSense_INT.c **** 
 508:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Sensor is totally scanned. Reset BUSY flag */
 509:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_dsRam.status &= ~(CapSense_SW_STS_BUSY | CapSense_WDGT_SW_STS_BUSY);
 510:Generated_Source\PSoC4/CapSense_INT.c ****             }
 511:Generated_Source\PSoC4/CapSense_INT.c ****         #else
 512:Generated_Source\PSoC4/CapSense_INT.c ****             {
 513:Generated_Source\PSoC4/CapSense_INT.c ****                 #if (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN)
 514:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Disable Third-generation HW block. Connect Vref Buffer to AMUX bus */
 515:Generated_Source\PSoC4/CapSense_INT.c ****                     #if ((CapSense_CSH_PRECHARGE_IO_BUF == CapSense_CSD_CSH_PRECHARGE_SRC) &&\
 516:Generated_Source\PSoC4/CapSense_INT.c ****                          (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
 517:Generated_Source\PSoC4/CapSense_INT.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CMOD_PRECHA
 518:Generated_Source\PSoC4/CapSense_INT.c ****                     #else
 519:Generated_Source\PSoC4/CapSense_INT.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECH
 520:Generated_Source\PSoC4/CapSense_INT.c ****                     #endif
 521:Generated_Source\PSoC4/CapSense_INT.c ****                 #else
 522:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Connect Vref Buffer to AMUX bus. Third-generation HW block is enabled */
 523:Generated_Source\PSoC4/CapSense_INT.c ****                     CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECHARGE
 524:Generated_Source\PSoC4/CapSense_INT.c ****                 #endif
 525:Generated_Source\PSoC4/CapSense_INT.c **** 
 526:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Update Scan Counter */
 527:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_dsRam.scanCounter++;
 528:Generated_Source\PSoC4/CapSense_INT.c **** 
 529:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Sensor is totally scanned. Reset BUSY flag */
 530:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_dsRam.status &= ~(CapSense_SW_STS_BUSY | CapSense_WDGT_SW_STS_BUSY);
 531:Generated_Source\PSoC4/CapSense_INT.c ****             }
 532:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 533:Generated_Source\PSoC4/CapSense_INT.c **** 
 534:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_EXIT_CALLBACK
 535:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_ExitCallback();
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccW8BzhS.s 			page 11


 536:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_EXIT_CALLBACK */
 537:Generated_Source\PSoC4/CapSense_INT.c ****     }
  36              		.loc 1 537 0
  37              		@ sp needed
 469:Generated_Source\PSoC4/CapSense_INT.c **** 
  38              		.loc 1 469 0
  39 0004 1A60     		str	r2, [r3]
  40              	.LBB4:
  41              	.LBB5:
 538:Generated_Source\PSoC4/CapSense_INT.c **** 
 539:Generated_Source\PSoC4/CapSense_INT.c **** 
 540:Generated_Source\PSoC4/CapSense_INT.c ****     /*******************************************************************************
 541:Generated_Source\PSoC4/CapSense_INT.c ****     * Function Name: CapSense_CSDPostMultiScan
 542:Generated_Source\PSoC4/CapSense_INT.c ****     ****************************************************************************//**
 543:Generated_Source\PSoC4/CapSense_INT.c ****     *
 544:Generated_Source\PSoC4/CapSense_INT.c ****     * \brief
 545:Generated_Source\PSoC4/CapSense_INT.c ****     *  This is an internal ISR function for the multiple-sensor scanning
 546:Generated_Source\PSoC4/CapSense_INT.c ****     *  implementation.
 547:Generated_Source\PSoC4/CapSense_INT.c ****     *
 548:Generated_Source\PSoC4/CapSense_INT.c ****     * \details
 549:Generated_Source\PSoC4/CapSense_INT.c ****     *  This ISR handler is triggered when the user calls the
 550:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_Scan() or CapSense_ScanAllWidgets() APIs.
 551:Generated_Source\PSoC4/CapSense_INT.c ****     *
 552:Generated_Source\PSoC4/CapSense_INT.c ****     *  The following tasks are performed:
 553:Generated_Source\PSoC4/CapSense_INT.c ****     *    1. Disable the CSD interrupt.
 554:Generated_Source\PSoC4/CapSense_INT.c ****     *    2. Read the Counter register and update the data structure with raw data.
 555:Generated_Source\PSoC4/CapSense_INT.c ****     *    3. Connect the Vref buffer to the AMUX bus.
 556:Generated_Source\PSoC4/CapSense_INT.c ****     *    4. Disable the CSD block (after the widget has been scanned).
 557:Generated_Source\PSoC4/CapSense_INT.c ****     *    5. Update the Scan Counter.
 558:Generated_Source\PSoC4/CapSense_INT.c ****     *    6. Reset the BUSY flag.
 559:Generated_Source\PSoC4/CapSense_INT.c ****     *    7. Enable the CSD interrupt.
 560:Generated_Source\PSoC4/CapSense_INT.c ****     *
 561:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler initializes scanning for the previous sensor when the
 562:Generated_Source\PSoC4/CapSense_INT.c ****     *  widget has more than one sensor.
 563:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler initializes scanning for the next widget when the
 564:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_ScanAllWidgets() APIs are called and the project has
 565:Generated_Source\PSoC4/CapSense_INT.c ****     *  more than one widget.
 566:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler changes the IMO and initializes scanning for the next
 567:Generated_Source\PSoC4/CapSense_INT.c ****     *  frequency channels when multi-frequency scanning is enabled.
 568:Generated_Source\PSoC4/CapSense_INT.c ****     *
 569:Generated_Source\PSoC4/CapSense_INT.c ****     *  This function has two Macro Callbacks that allow calling the user
 570:Generated_Source\PSoC4/CapSense_INT.c ****     *  code from macros specified in Component's generated code. Refer to the
 571:Generated_Source\PSoC4/CapSense_INT.c ****     *  \ref group_c_macrocallbacks section of the PSoC Creator User Guide
 572:Generated_Source\PSoC4/CapSense_INT.c ****     *  for details.
 573:Generated_Source\PSoC4/CapSense_INT.c ****     *
 574:Generated_Source\PSoC4/CapSense_INT.c ****     *******************************************************************************/
 575:Generated_Source\PSoC4/CapSense_INT.c ****     CY_ISR(CapSense_CSDPostMultiScan)
 576:Generated_Source\PSoC4/CapSense_INT.c ****     {
 577:Generated_Source\PSoC4/CapSense_INT.c ****         /* Declare and initialize ptr to sensor IO structure to appropriate address        */
 578:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_FLASH_IO_STRUCT const *curSnsIOPtr = (CapSense_FLASH_IO_STRUCT const *)
 579:Generated_Source\PSoC4/CapSense_INT.c ****                                                           CapSense_dsFlash.wdgtArray[CapSense_widge
 580:Generated_Source\PSoC4/CapSense_INT.c ****                                                           + CapSense_sensorIndex;
 581:Generated_Source\PSoC4/CapSense_INT.c **** 
 582:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_ENTRY_CALLBACK
 583:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_EntryCallback();
 584:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_ENTRY_CALLBACK */
 585:Generated_Source\PSoC4/CapSense_INT.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccW8BzhS.s 			page 12


 586:Generated_Source\PSoC4/CapSense_INT.c ****         /* Clear pending interrupt */
 587:Generated_Source\PSoC4/CapSense_INT.c ****         CY_SET_REG32(CapSense_INTR_PTR, CapSense_INTR_SET_MASK);
 588:Generated_Source\PSoC4/CapSense_INT.c **** 
 589:Generated_Source\PSoC4/CapSense_INT.c ****          /* Read Rawdata */
 590:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_SsCSDPostScan();
 591:Generated_Source\PSoC4/CapSense_INT.c **** 
 592:Generated_Source\PSoC4/CapSense_INT.c ****         /* Connect Vref Buffer to AMUX bus */
 593:Generated_Source\PSoC4/CapSense_INT.c ****         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECHARGE_CONFIG_CSD_
 594:Generated_Source\PSoC4/CapSense_INT.c **** 
 595:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 596:Generated_Source\PSoC4/CapSense_INT.c ****             /* Disable sensor when all frequency channels are scanned */
 597:Generated_Source\PSoC4/CapSense_INT.c ****             if (CapSense_FREQ_CHANNEL_2 == CapSense_scanFreqIndex)
 598:Generated_Source\PSoC4/CapSense_INT.c ****             {
 599:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Disable sensor */
 600:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_CSDDisconnectSns(curSnsIOPtr);
 601:Generated_Source\PSoC4/CapSense_INT.c ****             }
 602:Generated_Source\PSoC4/CapSense_INT.c ****         #else
 603:Generated_Source\PSoC4/CapSense_INT.c ****             /* Disable sensor */
 604:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_CSDDisconnectSns(curSnsIOPtr);
 605:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 606:Generated_Source\PSoC4/CapSense_INT.c **** 
 607:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 608:Generated_Source\PSoC4/CapSense_INT.c ****             if (CapSense_FREQ_CHANNEL_2 > CapSense_scanFreqIndex)
 609:Generated_Source\PSoC4/CapSense_INT.c ****             {
 610:Generated_Source\PSoC4/CapSense_INT.c ****                  /* Scan the next channel */
 611:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsNextFrequencyScan();
 612:Generated_Source\PSoC4/CapSense_INT.c ****             }
 613:Generated_Source\PSoC4/CapSense_INT.c ****             else
 614:Generated_Source\PSoC4/CapSense_INT.c ****             {
 615:Generated_Source\PSoC4/CapSense_INT.c ****                  /* All channels are scanned. Set IMO to zero channel */
 616:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
 617:Generated_Source\PSoC4/CapSense_INT.c **** 
 618:Generated_Source\PSoC4/CapSense_INT.c ****                 #if (CapSense_MFS_IMO == CapSense_MFS_METHOD)
 619:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsChangeImoFreq(CapSense_FREQ_CHANNEL_0);
 620:Generated_Source\PSoC4/CapSense_INT.c ****                 #else
 621:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsChangeClkFreq(CapSense_FREQ_CHANNEL_0);
 622:Generated_Source\PSoC4/CapSense_INT.c ****                 #endif /* (CapSense_MFS_IMO == CapSense_MFS_METHOD) */
 623:Generated_Source\PSoC4/CapSense_INT.c **** 
 624:Generated_Source\PSoC4/CapSense_INT.c ****                  /* Scan the next sensor */
 625:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsCSDInitNextScan();
 626:Generated_Source\PSoC4/CapSense_INT.c ****             }
 627:Generated_Source\PSoC4/CapSense_INT.c ****         #else
 628:Generated_Source\PSoC4/CapSense_INT.c ****             /* Scan the next sensor */
 629:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_SsCSDInitNextScan();
 630:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 631:Generated_Source\PSoC4/CapSense_INT.c **** 
 632:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_EXIT_CALLBACK
 633:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_ExitCallback();
 634:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_EXIT_CALLBACK */
 635:Generated_Source\PSoC4/CapSense_INT.c ****     }
 636:Generated_Source\PSoC4/CapSense_INT.c **** 
 637:Generated_Source\PSoC4/CapSense_INT.c **** 
 638:Generated_Source\PSoC4/CapSense_INT.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
 639:Generated_Source\PSoC4/CapSense_INT.c ****     /*******************************************************************************
 640:Generated_Source\PSoC4/CapSense_INT.c ****     * Function Name: CapSense_CSDPostMultiScanGanged
 641:Generated_Source\PSoC4/CapSense_INT.c ****     ****************************************************************************//**
 642:Generated_Source\PSoC4/CapSense_INT.c ****     *
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccW8BzhS.s 			page 13


 643:Generated_Source\PSoC4/CapSense_INT.c ****     * \brief
 644:Generated_Source\PSoC4/CapSense_INT.c ****     *  This is an internal ISR function for the multiple-sensor scanning
 645:Generated_Source\PSoC4/CapSense_INT.c ****     *  implementation for ganged sensors.
 646:Generated_Source\PSoC4/CapSense_INT.c ****     *
 647:Generated_Source\PSoC4/CapSense_INT.c ****     * \details
 648:Generated_Source\PSoC4/CapSense_INT.c ****     *  This ISR handler is triggered when the user calls the
 649:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_Scan() API for a ganged sensor or the
 650:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_ScanAllWidgets() API in the project with ganged sensors.
 651:Generated_Source\PSoC4/CapSense_INT.c ****     *
 652:Generated_Source\PSoC4/CapSense_INT.c ****     *  The following tasks are performed:
 653:Generated_Source\PSoC4/CapSense_INT.c ****     *    1. Disable the CSD interrupt.
 654:Generated_Source\PSoC4/CapSense_INT.c ****     *    2. Read the Counter register and update the data structure with raw data.
 655:Generated_Source\PSoC4/CapSense_INT.c ****     *    3. Connect the Vref buffer to the AMUX bus.
 656:Generated_Source\PSoC4/CapSense_INT.c ****     *    4. Disable the CSD block (after the widget has been scanned).
 657:Generated_Source\PSoC4/CapSense_INT.c ****     *    5. Update the Scan Counter.
 658:Generated_Source\PSoC4/CapSense_INT.c ****     *    6. Reset the BUSY flag.
 659:Generated_Source\PSoC4/CapSense_INT.c ****     *    7. Enable the CSD interrupt.
 660:Generated_Source\PSoC4/CapSense_INT.c ****     *
 661:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler initializes scanning for the previous sensor when the
 662:Generated_Source\PSoC4/CapSense_INT.c ****     *  widget has more than one sensor.
 663:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler initializes scanning for the next widget when the
 664:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_ScanAllWidgets() APIs are called and the project has
 665:Generated_Source\PSoC4/CapSense_INT.c ****     *  more than one widget.
 666:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler changes the IMO and initializes scanning for the next
 667:Generated_Source\PSoC4/CapSense_INT.c ****     *  frequency channels when multi-frequency scanning is enabled.
 668:Generated_Source\PSoC4/CapSense_INT.c ****     *
 669:Generated_Source\PSoC4/CapSense_INT.c ****     *  This function has two Macro Callbacks that allow calling the user
 670:Generated_Source\PSoC4/CapSense_INT.c ****     *  code from macros specified in Component's generated code. Refer to the
 671:Generated_Source\PSoC4/CapSense_INT.c ****     *  \ref group_c_macrocallbacks section of the PSoC Creator User Guide
 672:Generated_Source\PSoC4/CapSense_INT.c ****     *  for details.
 673:Generated_Source\PSoC4/CapSense_INT.c ****     *
 674:Generated_Source\PSoC4/CapSense_INT.c ****     *******************************************************************************/
 675:Generated_Source\PSoC4/CapSense_INT.c ****     CY_ISR(CapSense_CSDPostMultiScanGanged)
 676:Generated_Source\PSoC4/CapSense_INT.c ****     {
 677:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_ENTRY_CALLBACK
 678:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_EntryCallback();
 679:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_ENTRY_CALLBACK */
 680:Generated_Source\PSoC4/CapSense_INT.c **** 
 681:Generated_Source\PSoC4/CapSense_INT.c ****         /* Clear pending interrupt */
 682:Generated_Source\PSoC4/CapSense_INT.c ****         CY_SET_REG32(CapSense_INTR_PTR, CapSense_INTR_SET_MASK);
 683:Generated_Source\PSoC4/CapSense_INT.c **** 
 684:Generated_Source\PSoC4/CapSense_INT.c ****          /* Read Rawdata */
 685:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_SsCSDPostScan();
 686:Generated_Source\PSoC4/CapSense_INT.c **** 
 687:Generated_Source\PSoC4/CapSense_INT.c ****         /* Connect Vref Buffer to AMUX bus */
 688:Generated_Source\PSoC4/CapSense_INT.c ****         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECHARGE_CONFIG_CSD_
 689:Generated_Source\PSoC4/CapSense_INT.c **** 
 690:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 691:Generated_Source\PSoC4/CapSense_INT.c ****             if (CapSense_FREQ_CHANNEL_2 == CapSense_scanFreqIndex)
 692:Generated_Source\PSoC4/CapSense_INT.c ****             {
 693:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsCSDDisconnectSnsExt((uint32)CapSense_widgetIndex, (uint32)CapSense_senso
 694:Generated_Source\PSoC4/CapSense_INT.c ****             }
 695:Generated_Source\PSoC4/CapSense_INT.c ****         #else
 696:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_SsCSDDisconnectSnsExt((uint32)CapSense_widgetIndex, (uint32)CapSense_sensorInd
 697:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 698:Generated_Source\PSoC4/CapSense_INT.c **** 
 699:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccW8BzhS.s 			page 14


 700:Generated_Source\PSoC4/CapSense_INT.c ****             if (CapSense_FREQ_CHANNEL_2 > CapSense_scanFreqIndex)
 701:Generated_Source\PSoC4/CapSense_INT.c ****             {
 702:Generated_Source\PSoC4/CapSense_INT.c ****                  /* Scan the next channel */
 703:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsNextFrequencyScan();
 704:Generated_Source\PSoC4/CapSense_INT.c ****             }
 705:Generated_Source\PSoC4/CapSense_INT.c ****             else
 706:Generated_Source\PSoC4/CapSense_INT.c ****             {
 707:Generated_Source\PSoC4/CapSense_INT.c ****                 /* All channels are scanned. Set IMO to zero channel */
 708:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
 709:Generated_Source\PSoC4/CapSense_INT.c **** 
 710:Generated_Source\PSoC4/CapSense_INT.c ****                 #if (CapSense_MFS_IMO == CapSense_MFS_METHOD)
 711:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsChangeImoFreq(CapSense_FREQ_CHANNEL_0);
 712:Generated_Source\PSoC4/CapSense_INT.c ****                 #else
 713:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsChangeClkFreq(CapSense_FREQ_CHANNEL_0);
 714:Generated_Source\PSoC4/CapSense_INT.c ****                 #endif /* (CapSense_MFS_IMO == CapSense_MFS_METHOD) */
 715:Generated_Source\PSoC4/CapSense_INT.c **** 
 716:Generated_Source\PSoC4/CapSense_INT.c ****                  /* Scan the next sensor */
 717:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsCSDInitNextScan();
 718:Generated_Source\PSoC4/CapSense_INT.c ****             }
 719:Generated_Source\PSoC4/CapSense_INT.c ****         #else
 720:Generated_Source\PSoC4/CapSense_INT.c ****              /* Scan the next sensor */
 721:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_SsCSDInitNextScan();
 722:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 723:Generated_Source\PSoC4/CapSense_INT.c **** 
 724:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_EXIT_CALLBACK
 725:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_ExitCallback();
 726:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_EXIT_CALLBACK */
 727:Generated_Source\PSoC4/CapSense_INT.c ****     }
 728:Generated_Source\PSoC4/CapSense_INT.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
 729:Generated_Source\PSoC4/CapSense_INT.c **** 
 730:Generated_Source\PSoC4/CapSense_INT.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 731:Generated_Source\PSoC4/CapSense_INT.c **** 
 732:Generated_Source\PSoC4/CapSense_INT.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) || (CapSense_ENABLE == CapSense_CSD_CSX_EN)) */
 733:Generated_Source\PSoC4/CapSense_INT.c **** 
 734:Generated_Source\PSoC4/CapSense_INT.c **** /** \}
 735:Generated_Source\PSoC4/CapSense_INT.c ****  * \endcond */
 736:Generated_Source\PSoC4/CapSense_INT.c **** 
 737:Generated_Source\PSoC4/CapSense_INT.c **** 
 738:Generated_Source\PSoC4/CapSense_INT.c **** #if ((CapSense_ENABLE == CapSense_CSD_EN) || (CapSense_ENABLE == CapSense_CSD_CSX_EN))
 739:Generated_Source\PSoC4/CapSense_INT.c **** 
 740:Generated_Source\PSoC4/CapSense_INT.c **** /*******************************************************************************
 741:Generated_Source\PSoC4/CapSense_INT.c **** * Function Name: CapSense_SsCSDPostScan
 742:Generated_Source\PSoC4/CapSense_INT.c **** ****************************************************************************//**
 743:Generated_Source\PSoC4/CapSense_INT.c **** *
 744:Generated_Source\PSoC4/CapSense_INT.c **** * \brief
 745:Generated_Source\PSoC4/CapSense_INT.c **** *   This function reads rawdata and releases required HW resources after scan.
 746:Generated_Source\PSoC4/CapSense_INT.c **** *
 747:Generated_Source\PSoC4/CapSense_INT.c **** * \details
 748:Generated_Source\PSoC4/CapSense_INT.c **** *   This function performs following tasks after scan:
 749:Generated_Source\PSoC4/CapSense_INT.c **** *   - Reads SlotResult from Raw Counter;
 750:Generated_Source\PSoC4/CapSense_INT.c **** *   - Inits bad Conversions number;
 751:Generated_Source\PSoC4/CapSense_INT.c **** *   - Disconnects Vrefhi from AMUBUF positive input;
 752:Generated_Source\PSoC4/CapSense_INT.c **** *   - Disconnects AMUBUF output from CSDBUSB with sych PHI2+HSCMP;
 753:Generated_Source\PSoC4/CapSense_INT.c **** *   - Opens HCBV and HCBG switches.
 754:Generated_Source\PSoC4/CapSense_INT.c **** *
 755:Generated_Source\PSoC4/CapSense_INT.c **** *******************************************************************************/
 756:Generated_Source\PSoC4/CapSense_INT.c **** static void CapSense_SsCSDPostScan(void)
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccW8BzhS.s 			page 15


 757:Generated_Source\PSoC4/CapSense_INT.c **** {
 758:Generated_Source\PSoC4/CapSense_INT.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
 759:Generated_Source\PSoC4/CapSense_INT.c **** 
 760:Generated_Source\PSoC4/CapSense_INT.c ****         uint32 tmpRawData;
 761:Generated_Source\PSoC4/CapSense_INT.c ****         uint32 tmpMaxCount;
 762:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
 763:Generated_Source\PSoC4/CapSense_INT.c ****                                             CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2Wd
 764:Generated_Source\PSoC4/CapSense_INT.c **** 
 765:Generated_Source\PSoC4/CapSense_INT.c ****         /* Read SlotResult from Raw Counter */
 766:Generated_Source\PSoC4/CapSense_INT.c ****         tmpRawData = CapSense_RESULT_VAL1_VALUE_MASK & CY_GET_REG32(CapSense_COUNTER_PTR);
 767:Generated_Source\PSoC4/CapSense_INT.c **** 
 768:Generated_Source\PSoC4/CapSense_INT.c ****         tmpMaxCount = ((1uL << ptrWdgt->resolution) - 1uL);
 769:Generated_Source\PSoC4/CapSense_INT.c ****         if(tmpRawData < tmpMaxCount)
 770:Generated_Source\PSoC4/CapSense_INT.c ****         {
 771:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_curRamSnsPtr->raw[CapSense_scanFreqIndex] = LO16(tmpRawData);
 772:Generated_Source\PSoC4/CapSense_INT.c ****         }
 773:Generated_Source\PSoC4/CapSense_INT.c ****         else
 774:Generated_Source\PSoC4/CapSense_INT.c ****         {
 775:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_curRamSnsPtr->raw[CapSense_scanFreqIndex] = LO16(tmpMaxCount);
 776:Generated_Source\PSoC4/CapSense_INT.c ****         }
 777:Generated_Source\PSoC4/CapSense_INT.c **** 
 778:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN)
 779:Generated_Source\PSoC4/CapSense_INT.c ****             /* Init bad Conversions number */
 780:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_badConversionsNum = CapSense_BAD_CONVERSIONS_NUM;
 781:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN) */
 782:Generated_Source\PSoC4/CapSense_INT.c **** 
 783:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 784:Generated_Source\PSoC4/CapSense_INT.c ****             /* Open HCBV and HCBG switches */
 785:Generated_Source\PSoC4/CapSense_INT.c ****             CY_SET_REG32(CapSense_SW_SHIELD_SEL_PTR, CapSense_SW_SHIELD_SEL_SW_HCBV_STATIC_OPEN |
 786:Generated_Source\PSoC4/CapSense_INT.c ****                                                              CapSense_SW_SHIELD_SEL_SW_HCBG_STATIC_
 787:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 788:Generated_Source\PSoC4/CapSense_INT.c **** 
 789:Generated_Source\PSoC4/CapSense_INT.c ****     #else
 790:Generated_Source\PSoC4/CapSense_INT.c **** 
 791:Generated_Source\PSoC4/CapSense_INT.c ****         /* Read SlotResult from Raw Counter */
 792:Generated_Source\PSoC4/CapSense_INT.c ****        CapSense_curRamSnsPtr->raw[CapSense_scanFreqIndex] = (uint16)CY_GET_REG32(CapSense_COUNTER_P
  42              		.loc 1 792 0
  43 0006 0C4B     		ldr	r3, .L2+4
  44 0008 1968     		ldr	r1, [r3]
  45 000a 0C4B     		ldr	r3, .L2+8
  46 000c 1A68     		ldr	r2, [r3]
  47 000e 0C4B     		ldr	r3, .L2+12
  48 0010 1B78     		ldrb	r3, [r3]
  49 0012 5B00     		lsls	r3, r3, #1
  50 0014 9952     		strh	r1, [r3, r2]
  51              	.LBE5:
  52              	.LBE4:
 523:Generated_Source\PSoC4/CapSense_INT.c ****                 #endif
  53              		.loc 1 523 0
  54 0016 0B4B     		ldr	r3, .L2+16
  55 0018 0B4A     		ldr	r2, .L2+20
  56 001a 1B68     		ldr	r3, [r3]
  57 001c 1343     		orrs	r3, r2
  58 001e 0B4A     		ldr	r2, .L2+24
  59 0020 1360     		str	r3, [r2]
 527:Generated_Source\PSoC4/CapSense_INT.c **** 
  60              		.loc 1 527 0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccW8BzhS.s 			page 16


  61 0022 0B4B     		ldr	r3, .L2+28
  62 0024 1A89     		ldrh	r2, [r3, #8]
 530:Generated_Source\PSoC4/CapSense_INT.c ****             }
  63              		.loc 1 530 0
  64 0026 D968     		ldr	r1, [r3, #12]
 527:Generated_Source\PSoC4/CapSense_INT.c **** 
  65              		.loc 1 527 0
  66 0028 0132     		adds	r2, r2, #1
  67 002a 1A81     		strh	r2, [r3, #8]
 530:Generated_Source\PSoC4/CapSense_INT.c ****             }
  68              		.loc 1 530 0
  69 002c 094A     		ldr	r2, .L2+32
  70 002e 0A40     		ands	r2, r1
  71 0030 DA60     		str	r2, [r3, #12]
 537:Generated_Source\PSoC4/CapSense_INT.c **** 
  72              		.loc 1 537 0
  73 0032 7047     		bx	lr
  74              	.L3:
  75              		.align	2
  76              	.L2:
  77 0034 14002840 		.word	1076363284
  78 0038 0C002840 		.word	1076363276
  79 003c 00000000 		.word	CapSense_curRamSnsPtr
  80 0040 00000000 		.word	CapSense_scanFreqIndex
  81 0044 00000000 		.word	CapSense_configCsd
  82 0048 2028E881 		.word	-2115491808
  83 004c 04002840 		.word	1076363268
  84 0050 00000000 		.word	CapSense_dsRam
  85 0054 7FFFFEFF 		.word	-65665
  86              		.cfi_endproc
  87              	.LFE1:
  88              		.size	CapSense_CSDPostSingleScan, .-CapSense_CSDPostSingleScan
  89              		.section	.text.CapSense_CSDPostMultiScan,"ax",%progbits
  90              		.align	1
  91              		.global	CapSense_CSDPostMultiScan
  92              		.code	16
  93              		.thumb_func
  94              		.type	CapSense_CSDPostMultiScan, %function
  95              	CapSense_CSDPostMultiScan:
  96              	.LFB2:
 576:Generated_Source\PSoC4/CapSense_INT.c ****         /* Declare and initialize ptr to sensor IO structure to appropriate address        */
  97              		.loc 1 576 0
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 0, uses_anonymous_args = 0
 101 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 102              		.cfi_def_cfa_offset 24
 103              		.cfi_offset 3, -24
 104              		.cfi_offset 4, -20
 105              		.cfi_offset 5, -16
 106              		.cfi_offset 6, -12
 107              		.cfi_offset 7, -8
 108              		.cfi_offset 14, -4
 579:Generated_Source\PSoC4/CapSense_INT.c ****                                                           + CapSense_sensorIndex;
 109              		.loc 1 579 0
 110 0002 1C24     		movs	r4, #28
 578:Generated_Source\PSoC4/CapSense_INT.c ****                                                           CapSense_dsFlash.wdgtArray[CapSense_widge
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccW8BzhS.s 			page 17


 111              		.loc 1 578 0
 112 0004 2C4E     		ldr	r6, .L9
 113 0006 2D4A     		ldr	r2, .L9+4
 114 0008 3378     		ldrb	r3, [r6]
 580:Generated_Source\PSoC4/CapSense_INT.c **** 
 115              		.loc 1 580 0
 116 000a 2D4D     		ldr	r5, .L9+8
 579:Generated_Source\PSoC4/CapSense_INT.c ****                                                           + CapSense_sensorIndex;
 117              		.loc 1 579 0
 118 000c 6343     		muls	r3, r4
 578:Generated_Source\PSoC4/CapSense_INT.c ****                                                           CapSense_dsFlash.wdgtArray[CapSense_widge
 119              		.loc 1 578 0
 120 000e 9B58     		ldr	r3, [r3, r2]
 587:Generated_Source\PSoC4/CapSense_INT.c **** 
 121              		.loc 1 587 0
 122 0010 0122     		movs	r2, #1
 580:Generated_Source\PSoC4/CapSense_INT.c **** 
 123              		.loc 1 580 0
 124 0012 2878     		ldrb	r0, [r5]
 125              	.LBB10:
 126              	.LBB11:
 127              		.loc 1 792 0
 128 0014 2B4F     		ldr	r7, .L9+12
 129              	.LBE11:
 130              	.LBE10:
 578:Generated_Source\PSoC4/CapSense_INT.c ****                                                           CapSense_dsFlash.wdgtArray[CapSense_widge
 131              		.loc 1 578 0
 132 0016 6043     		muls	r0, r4
 133 0018 1818     		adds	r0, r3, r0
 134              	.LVL0:
 587:Generated_Source\PSoC4/CapSense_INT.c **** 
 135              		.loc 1 587 0
 136 001a 2B4B     		ldr	r3, .L9+16
 137              	.LBB14:
 138              	.LBB12:
 139              		.loc 1 792 0
 140 001c 3968     		ldr	r1, [r7]
 141              	.LBE12:
 142              	.LBE14:
 587:Generated_Source\PSoC4/CapSense_INT.c **** 
 143              		.loc 1 587 0
 144 001e 1A60     		str	r2, [r3]
 145              	.LBB15:
 146              	.LBB13:
 147              		.loc 1 792 0
 148 0020 2A4B     		ldr	r3, .L9+20
 149 0022 1A68     		ldr	r2, [r3]
 150 0024 2A4B     		ldr	r3, .L9+24
 151 0026 1B78     		ldrb	r3, [r3]
 152 0028 5B00     		lsls	r3, r3, #1
 153 002a 5A52     		strh	r2, [r3, r1]
 154              	.LBE13:
 155              	.LBE15:
 593:Generated_Source\PSoC4/CapSense_INT.c **** 
 156              		.loc 1 593 0
 157 002c 294B     		ldr	r3, .L9+28
 158 002e 2A4A     		ldr	r2, .L9+32
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccW8BzhS.s 			page 18


 159 0030 1B68     		ldr	r3, [r3]
 160 0032 1343     		orrs	r3, r2
 161 0034 294A     		ldr	r2, .L9+36
 162 0036 1360     		str	r3, [r2]
 604:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 163              		.loc 1 604 0
 164 0038 FFF7FEFF 		bl	CapSense_CSDDisconnectSns
 165              	.LVL1:
 166              	.LBB16:
 167              	.LBB17:
 793:Generated_Source\PSoC4/CapSense_INT.c **** 
 794:Generated_Source\PSoC4/CapSense_INT.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 795:Generated_Source\PSoC4/CapSense_INT.c **** }
 796:Generated_Source\PSoC4/CapSense_INT.c **** 
 797:Generated_Source\PSoC4/CapSense_INT.c **** 
 798:Generated_Source\PSoC4/CapSense_INT.c **** /*******************************************************************************
 799:Generated_Source\PSoC4/CapSense_INT.c **** * Function Name: CapSense_SsCSDInitNextScan
 800:Generated_Source\PSoC4/CapSense_INT.c **** ****************************************************************************//**
 801:Generated_Source\PSoC4/CapSense_INT.c **** *
 802:Generated_Source\PSoC4/CapSense_INT.c **** * \brief
 803:Generated_Source\PSoC4/CapSense_INT.c **** *   This function initializes the next sensor scan.
 804:Generated_Source\PSoC4/CapSense_INT.c **** *
 805:Generated_Source\PSoC4/CapSense_INT.c **** * \details
 806:Generated_Source\PSoC4/CapSense_INT.c **** *   The function increments the sensor index, updates sense clock for matrix
 807:Generated_Source\PSoC4/CapSense_INT.c **** *   or touchpad widgets only, sets up Compensation IDAC, enables the sensor and
 808:Generated_Source\PSoC4/CapSense_INT.c **** *   scans it. When all the sensors are scanned it continues to set up the next widget
 809:Generated_Source\PSoC4/CapSense_INT.c **** *   until all the widgets are scanned. The CSD block is disabled when all the widgets are
 810:Generated_Source\PSoC4/CapSense_INT.c **** *   scanned.
 811:Generated_Source\PSoC4/CapSense_INT.c **** *
 812:Generated_Source\PSoC4/CapSense_INT.c **** *******************************************************************************/
 813:Generated_Source\PSoC4/CapSense_INT.c **** static void CapSense_SsCSDInitNextScan(void)
 814:Generated_Source\PSoC4/CapSense_INT.c **** {
 815:Generated_Source\PSoC4/CapSense_INT.c ****     /* Declare and initialize ptr to widget and sensor structures to appropriate address */
 816:Generated_Source\PSoC4/CapSense_INT.c ****     #if (((CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) || \
 817:Generated_Source\PSoC4/CapSense_INT.c ****           (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)) || \
 818:Generated_Source\PSoC4/CapSense_INT.c ****           (((CapSense_DISABLE == CapSense_CSD_COMMON_SNS_CLK_EN) && \
 819:Generated_Source\PSoC4/CapSense_INT.c ****           (CapSense_ENABLE == CapSense_CSDV2) && \
 820:Generated_Source\PSoC4/CapSense_INT.c ****           (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN))))
 821:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_RAM_WD_BASE_STRUCT *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
 822:Generated_Source\PSoC4/CapSense_INT.c ****                                                         CapSense_dsFlash.wdgtArray[CapSense_widgetI
 168              		.loc 1 822 0
 169 003c 3378     		ldrb	r3, [r6]
 823:Generated_Source\PSoC4/CapSense_INT.c ****     #endif
 824:Generated_Source\PSoC4/CapSense_INT.c **** 
 825:Generated_Source\PSoC4/CapSense_INT.c ****     /* Check if all the sensors are scanned in widget */
 826:Generated_Source\PSoC4/CapSense_INT.c ****     if (((uint8)CapSense_dsFlash.wdgtArray[(CapSense_widgetIndex)].totalNumSns - 1u) > CapSense_sen
 170              		.loc 1 826 0
 171 003e 3278     		ldrb	r2, [r6]
 172 0040 1E48     		ldr	r0, .L9+4
 173 0042 6243     		muls	r2, r4
 174 0044 8218     		adds	r2, r0, r2
 175 0046 127E     		ldrb	r2, [r2, #24]
 176 0048 2978     		ldrb	r1, [r5]
 177 004a 013A     		subs	r2, r2, #1
 822:Generated_Source\PSoC4/CapSense_INT.c ****     #endif
 178              		.loc 1 822 0
 179 004c DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccW8BzhS.s 			page 19


 180              	.LVL2:
 181              		.loc 1 826 0
 182 004e 8A42     		cmp	r2, r1
 183 0050 1BD9     		bls	.L5
 821:Generated_Source\PSoC4/CapSense_INT.c ****                                                         CapSense_dsFlash.wdgtArray[CapSense_widgetI
 184              		.loc 1 821 0
 185 0052 6343     		muls	r3, r4
 186              	.LVL3:
 187 0054 C318     		adds	r3, r0, r3
 188 0056 5868     		ldr	r0, [r3, #4]
 827:Generated_Source\PSoC4/CapSense_INT.c ****     {
 828:Generated_Source\PSoC4/CapSense_INT.c ****         /* Increment sensor index to configure next sensor in widget */
 829:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_sensorIndex++;
 189              		.loc 1 829 0
 190 0058 2B78     		ldrb	r3, [r5]
 191 005a 0133     		adds	r3, r3, #1
 192 005c DBB2     		uxtb	r3, r3
 193 005e 2B70     		strb	r3, [r5]
 830:Generated_Source\PSoC4/CapSense_INT.c **** 
 831:Generated_Source\PSoC4/CapSense_INT.c ****         /* Update global pointer to CapSense_RAM_SNS_STRUCT to current sensor  */
 832:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_curRamSnsPtr = (CapSense_RAM_SNS_STRUCT *)
 194              		.loc 1 832 0
 195 0060 3378     		ldrb	r3, [r6]
 833:Generated_Source\PSoC4/CapSense_INT.c ****                                                   CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].
 834:Generated_Source\PSoC4/CapSense_INT.c ****                                                   + CapSense_sensorIndex;
 196              		.loc 1 834 0
 197 0062 2A78     		ldrb	r2, [r5]
 833:Generated_Source\PSoC4/CapSense_INT.c ****                                                   CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].
 198              		.loc 1 833 0
 199 0064 5C43     		muls	r4, r3
 200 0066 154B     		ldr	r3, .L9+4
 201 0068 1C19     		adds	r4, r3, r4
 832:Generated_Source\PSoC4/CapSense_INT.c ****                                                   CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].
 202              		.loc 1 832 0
 203 006a 0A23     		movs	r3, #10
 204 006c 5343     		muls	r3, r2
 205 006e A268     		ldr	r2, [r4, #8]
 206 0070 D318     		adds	r3, r2, r3
 207 0072 3B60     		str	r3, [r7]
 835:Generated_Source\PSoC4/CapSense_INT.c **** 
 836:Generated_Source\PSoC4/CapSense_INT.c ****         /* Configure clock divider to row or column */
 837:Generated_Source\PSoC4/CapSense_INT.c ****         #if ((CapSense_DISABLE == CapSense_CSD_COMMON_SNS_CLK_EN) && \
 838:Generated_Source\PSoC4/CapSense_INT.c ****              (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN))
 839:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_SsCSDConfigClock();
 840:Generated_Source\PSoC4/CapSense_INT.c **** 
 841:Generated_Source\PSoC4/CapSense_INT.c ****             #if (CapSense_ENABLE == CapSense_CSDV2)
 842:Generated_Source\PSoC4/CapSense_INT.c ****                  /* Set up scanning resolution */
 843:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsCSDCalculateScanDuration(ptrWdgt);
 844:Generated_Source\PSoC4/CapSense_INT.c ****             #endif
 845:Generated_Source\PSoC4/CapSense_INT.c ****         #endif
 846:Generated_Source\PSoC4/CapSense_INT.c **** 
 847:Generated_Source\PSoC4/CapSense_INT.c ****         /* Setup Compensation IDAC for next sensor in widget */
 848:Generated_Source\PSoC4/CapSense_INT.c ****         #if ((CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) || \
 849:Generated_Source\PSoC4/CapSense_INT.c ****              (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN))
 850:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_SsCSDSetUpIdacs(ptrWdgt);
 208              		.loc 1 850 0
 209 0074 FFF7FEFF 		bl	CapSense_SsCSDSetUpIdacs
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccW8BzhS.s 			page 20


 210              	.LVL4:
 851:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) || \
 852:Generated_Source\PSoC4/CapSense_INT.c ****                    (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)) */
 853:Generated_Source\PSoC4/CapSense_INT.c **** 
 854:Generated_Source\PSoC4/CapSense_INT.c ****         /* Enable sensor */
 855:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_SsCSDConnectSensorExt((uint32)CapSense_widgetIndex, (uint32)CapSense_sensorIndex);
 211              		.loc 1 855 0
 212 0078 3078     		ldrb	r0, [r6]
 213 007a 2978     		ldrb	r1, [r5]
 214 007c C0B2     		uxtb	r0, r0
 215 007e C9B2     		uxtb	r1, r1
 216 0080 FFF7FEFF 		bl	CapSense_SsCSDConnectSensorExt
 217              	.LVL5:
 856:Generated_Source\PSoC4/CapSense_INT.c **** 
 857:Generated_Source\PSoC4/CapSense_INT.c ****         /* Proceed scanning */
 858:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_SsCSDStartSample();
 218              		.loc 1 858 0
 219 0084 FFF7FEFF 		bl	CapSense_SsCSDStartSample
 220              	.LVL6:
 221 0088 14E0     		b	.L4
 222              	.LVL7:
 223              	.L5:
 859:Generated_Source\PSoC4/CapSense_INT.c ****     }
 860:Generated_Source\PSoC4/CapSense_INT.c ****     /* Call scan next widget API if requested, if not, complete the scan  */
 861:Generated_Source\PSoC4/CapSense_INT.c ****     else
 862:Generated_Source\PSoC4/CapSense_INT.c ****     {
 863:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_sensorIndex = 0u;
 224              		.loc 1 863 0
 225 008a 0023     		movs	r3, #0
 226              	.LVL8:
 227 008c 2B70     		strb	r3, [r5]
 864:Generated_Source\PSoC4/CapSense_INT.c **** 
 865:Generated_Source\PSoC4/CapSense_INT.c ****         /* Current widget is totally scanned. Reset WIDGET BUSY flag */
 866:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_dsRam.status &= ~CapSense_WDGT_SW_STS_BUSY;
 228              		.loc 1 866 0
 229 008e 144B     		ldr	r3, .L9+40
 230 0090 144A     		ldr	r2, .L9+44
 231 0092 D968     		ldr	r1, [r3, #12]
 232 0094 0A40     		ands	r2, r1
 233 0096 DA60     		str	r2, [r3, #12]
 867:Generated_Source\PSoC4/CapSense_INT.c **** 
 868:Generated_Source\PSoC4/CapSense_INT.c ****         /* Check if all the widgets have been scanned */
 869:Generated_Source\PSoC4/CapSense_INT.c ****         if (CapSense_ENABLE == CapSense_requestScanAllWidget)
 234              		.loc 1 869 0
 235 0098 134A     		ldr	r2, .L9+48
 236 009a 1278     		ldrb	r2, [r2]
 237 009c 012A     		cmp	r2, #1
 238 009e 02D1     		bne	.L7
 870:Generated_Source\PSoC4/CapSense_INT.c ****         {
 871:Generated_Source\PSoC4/CapSense_INT.c ****             /* Configure and begin scanning next widget */
 872:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_SsPostAllWidgetsScan();
 239              		.loc 1 872 0
 240 00a0 FFF7FEFF 		bl	CapSense_SsPostAllWidgetsScan
 241              	.LVL9:
 242 00a4 06E0     		b	.L4
 243              	.L7:
 873:Generated_Source\PSoC4/CapSense_INT.c ****         }
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccW8BzhS.s 			page 21


 874:Generated_Source\PSoC4/CapSense_INT.c ****         else
 875:Generated_Source\PSoC4/CapSense_INT.c ****         {
 876:Generated_Source\PSoC4/CapSense_INT.c ****             #if (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN)
 877:Generated_Source\PSoC4/CapSense_INT.c ****                 #if (CapSense_ENABLE == CapSense_CSDV2)
 878:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Disable the CSD block */
 879:Generated_Source\PSoC4/CapSense_INT.c ****                     CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd);
 880:Generated_Source\PSoC4/CapSense_INT.c ****                 #else
 881:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Disable the CSD block. Connect Vref Buffer to AMUX bus */
 882:Generated_Source\PSoC4/CapSense_INT.c ****                     #if ((CapSense_CSH_PRECHARGE_IO_BUF == CapSense_CSD_CSH_PRECHARGE_SRC) &&\
 883:Generated_Source\PSoC4/CapSense_INT.c ****                          (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
 884:Generated_Source\PSoC4/CapSense_INT.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CMOD_PRECHA
 885:Generated_Source\PSoC4/CapSense_INT.c ****                     #else
 886:Generated_Source\PSoC4/CapSense_INT.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECH
 887:Generated_Source\PSoC4/CapSense_INT.c ****                     #endif
 888:Generated_Source\PSoC4/CapSense_INT.c ****                 #endif
 889:Generated_Source\PSoC4/CapSense_INT.c ****             #endif
 890:Generated_Source\PSoC4/CapSense_INT.c **** 
 891:Generated_Source\PSoC4/CapSense_INT.c ****             /* All widgets are totally scanned. Reset BUSY flag */
 892:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_dsRam.status &= ~CapSense_SW_STS_BUSY;
 244              		.loc 1 892 0
 245 00a6 8021     		movs	r1, #128
 246 00a8 DA68     		ldr	r2, [r3, #12]
 247 00aa 8A43     		bics	r2, r1
 248 00ac DA60     		str	r2, [r3, #12]
 893:Generated_Source\PSoC4/CapSense_INT.c **** 
 894:Generated_Source\PSoC4/CapSense_INT.c ****             /* Update scan Counter */
 895:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_dsRam.scanCounter++;
 249              		.loc 1 895 0
 250 00ae 1A89     		ldrh	r2, [r3, #8]
 251 00b0 0132     		adds	r2, r2, #1
 252 00b2 1A81     		strh	r2, [r3, #8]
 253              	.L4:
 254              	.LBE17:
 255              	.LBE16:
 635:Generated_Source\PSoC4/CapSense_INT.c **** 
 256              		.loc 1 635 0
 257              		@ sp needed
 258 00b4 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 259              	.L10:
 260 00b6 C046     		.align	2
 261              	.L9:
 262 00b8 00000000 		.word	CapSense_widgetIndex
 263 00bc 00000000 		.word	CapSense_dsFlash
 264 00c0 00000000 		.word	CapSense_sensorIndex
 265 00c4 00000000 		.word	CapSense_curRamSnsPtr
 266 00c8 14002840 		.word	1076363284
 267 00cc 0C002840 		.word	1076363276
 268 00d0 00000000 		.word	CapSense_scanFreqIndex
 269 00d4 00000000 		.word	CapSense_configCsd
 270 00d8 2028E881 		.word	-2115491808
 271 00dc 04002840 		.word	1076363268
 272 00e0 00000000 		.word	CapSense_dsRam
 273 00e4 FFFFFEFF 		.word	-65537
 274 00e8 00000000 		.word	CapSense_requestScanAllWidget
 275              		.cfi_endproc
 276              	.LFE2:
 277              		.size	CapSense_CSDPostMultiScan, .-CapSense_CSDPostMultiScan
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccW8BzhS.s 			page 22


 278              		.text
 279              	.Letext0:
 280              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 281              		.file 3 "Generated_Source\\PSoC4\\CapSense_Configuration.h"
 282              		.file 4 "Generated_Source\\PSoC4\\CapSense_Structure.h"
 283              		.file 5 "Generated_Source\\PSoC4\\CapSense_Sensing.h"
 284              		.file 6 "Generated_Source\\PSoC4\\CapSense_SensingCSD_LL.h"
 285              		.section	.debug_info,"",%progbits
 286              	.Ldebug_info0:
 287 0000 61070000 		.4byte	0x761
 288 0004 0400     		.2byte	0x4
 289 0006 00000000 		.4byte	.Ldebug_abbrev0
 290 000a 04       		.byte	0x4
 291 000b 01       		.uleb128 0x1
 292 000c 6F050000 		.4byte	.LASF101
 293 0010 0C       		.byte	0xc
 294 0011 BC020000 		.4byte	.LASF102
 295 0015 43010000 		.4byte	.LASF103
 296 0019 20000000 		.4byte	.Ldebug_ranges0+0x20
 297 001d 00000000 		.4byte	0
 298 0021 00000000 		.4byte	.Ldebug_line0
 299 0025 02       		.uleb128 0x2
 300 0026 01       		.byte	0x1
 301 0027 06       		.byte	0x6
 302 0028 49050000 		.4byte	.LASF0
 303 002c 02       		.uleb128 0x2
 304 002d 01       		.byte	0x1
 305 002e 08       		.byte	0x8
 306 002f 83020000 		.4byte	.LASF1
 307 0033 02       		.uleb128 0x2
 308 0034 02       		.byte	0x2
 309 0035 05       		.byte	0x5
 310 0036 72000000 		.4byte	.LASF2
 311 003a 02       		.uleb128 0x2
 312 003b 02       		.byte	0x2
 313 003c 07       		.byte	0x7
 314 003d FD030000 		.4byte	.LASF3
 315 0041 02       		.uleb128 0x2
 316 0042 04       		.byte	0x4
 317 0043 05       		.byte	0x5
 318 0044 1E020000 		.4byte	.LASF4
 319 0048 02       		.uleb128 0x2
 320 0049 04       		.byte	0x4
 321 004a 07       		.byte	0x7
 322 004b B0040000 		.4byte	.LASF5
 323 004f 02       		.uleb128 0x2
 324 0050 08       		.byte	0x8
 325 0051 05       		.byte	0x5
 326 0052 D5000000 		.4byte	.LASF6
 327 0056 02       		.uleb128 0x2
 328 0057 08       		.byte	0x8
 329 0058 07       		.byte	0x7
 330 0059 56030000 		.4byte	.LASF7
 331 005d 03       		.uleb128 0x3
 332 005e 04       		.byte	0x4
 333 005f 05       		.byte	0x5
 334 0060 696E7400 		.ascii	"int\000"
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccW8BzhS.s 			page 23


 335 0064 02       		.uleb128 0x2
 336 0065 04       		.byte	0x4
 337 0066 07       		.byte	0x7
 338 0067 7A030000 		.4byte	.LASF8
 339 006b 04       		.uleb128 0x4
 340 006c 3D010000 		.4byte	.LASF9
 341 0070 02       		.byte	0x2
 342 0071 E401     		.2byte	0x1e4
 343 0073 2C000000 		.4byte	0x2c
 344 0077 04       		.uleb128 0x4
 345 0078 26010000 		.4byte	.LASF10
 346 007c 02       		.byte	0x2
 347 007d E501     		.2byte	0x1e5
 348 007f 3A000000 		.4byte	0x3a
 349 0083 04       		.uleb128 0x4
 350 0084 9E040000 		.4byte	.LASF11
 351 0088 02       		.byte	0x2
 352 0089 E601     		.2byte	0x1e6
 353 008b 48000000 		.4byte	0x48
 354 008f 02       		.uleb128 0x2
 355 0090 04       		.byte	0x4
 356 0091 04       		.byte	0x4
 357 0092 99010000 		.4byte	.LASF12
 358 0096 02       		.uleb128 0x2
 359 0097 08       		.byte	0x8
 360 0098 04       		.byte	0x4
 361 0099 C2040000 		.4byte	.LASF13
 362 009d 02       		.uleb128 0x2
 363 009e 01       		.byte	0x1
 364 009f 08       		.byte	0x8
 365 00a0 13020000 		.4byte	.LASF14
 366 00a4 05       		.uleb128 0x5
 367 00a5 6B000000 		.4byte	0x6b
 368 00a9 04       		.uleb128 0x4
 369 00aa 92030000 		.4byte	.LASF15
 370 00ae 02       		.byte	0x2
 371 00af 9002     		.2byte	0x290
 372 00b1 B5000000 		.4byte	0xb5
 373 00b5 05       		.uleb128 0x5
 374 00b6 83000000 		.4byte	0x83
 375 00ba 04       		.uleb128 0x4
 376 00bb 02030000 		.4byte	.LASF16
 377 00bf 03       		.byte	0x3
 378 00c0 2A01     		.2byte	0x12a
 379 00c2 77000000 		.4byte	0x77
 380 00c6 04       		.uleb128 0x4
 381 00c7 B0030000 		.4byte	.LASF17
 382 00cb 03       		.byte	0x3
 383 00cc 2E01     		.2byte	0x12e
 384 00ce 6B000000 		.4byte	0x6b
 385 00d2 06       		.uleb128 0x6
 386 00d3 10       		.byte	0x10
 387 00d4 04       		.byte	0x4
 388 00d5 AD       		.byte	0xad
 389 00d6 5F010000 		.4byte	0x15f
 390 00da 07       		.uleb128 0x7
 391 00db F2030000 		.4byte	.LASF18
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccW8BzhS.s 			page 24


 392 00df 04       		.byte	0x4
 393 00e0 B2       		.byte	0xb2
 394 00e1 77000000 		.4byte	0x77
 395 00e5 00       		.byte	0
 396 00e6 07       		.uleb128 0x7
 397 00e7 72020000 		.4byte	.LASF19
 398 00eb 04       		.byte	0x4
 399 00ec B7       		.byte	0xb7
 400 00ed BA000000 		.4byte	0xba
 401 00f1 02       		.byte	0x2
 402 00f2 07       		.uleb128 0x7
 403 00f3 15010000 		.4byte	.LASF20
 404 00f7 04       		.byte	0x4
 405 00f8 BC       		.byte	0xbc
 406 00f9 6B000000 		.4byte	0x6b
 407 00fd 04       		.byte	0x4
 408 00fe 07       		.uleb128 0x7
 409 00ff 66040000 		.4byte	.LASF21
 410 0103 04       		.byte	0x4
 411 0104 C1       		.byte	0xc1
 412 0105 6B000000 		.4byte	0x6b
 413 0109 05       		.byte	0x5
 414 010a 07       		.uleb128 0x7
 415 010b 91020000 		.4byte	.LASF22
 416 010f 04       		.byte	0x4
 417 0110 C7       		.byte	0xc7
 418 0111 6B000000 		.4byte	0x6b
 419 0115 06       		.byte	0x6
 420 0116 07       		.uleb128 0x7
 421 0117 85000000 		.4byte	.LASF23
 422 011b 04       		.byte	0x4
 423 011c CD       		.byte	0xcd
 424 011d 6B000000 		.4byte	0x6b
 425 0121 07       		.byte	0x7
 426 0122 07       		.uleb128 0x7
 427 0123 E2020000 		.4byte	.LASF24
 428 0127 04       		.byte	0x4
 429 0128 D4       		.byte	0xd4
 430 0129 C6000000 		.4byte	0xc6
 431 012d 08       		.byte	0x8
 432 012e 07       		.uleb128 0x7
 433 012f 62000000 		.4byte	.LASF25
 434 0133 04       		.byte	0x4
 435 0134 DB       		.byte	0xdb
 436 0135 5F010000 		.4byte	0x15f
 437 0139 09       		.byte	0x9
 438 013a 07       		.uleb128 0x7
 439 013b 43000000 		.4byte	.LASF26
 440 013f 04       		.byte	0x4
 441 0140 E0       		.byte	0xe0
 442 0141 6B000000 		.4byte	0x6b
 443 0145 0A       		.byte	0xa
 444 0146 07       		.uleb128 0x7
 445 0147 7B010000 		.4byte	.LASF27
 446 014b 04       		.byte	0x4
 447 014c E8       		.byte	0xe8
 448 014d 77000000 		.4byte	0x77
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccW8BzhS.s 			page 25


 449 0151 0C       		.byte	0xc
 450 0152 07       		.uleb128 0x7
 451 0153 ED000000 		.4byte	.LASF28
 452 0157 04       		.byte	0x4
 453 0158 ED       		.byte	0xed
 454 0159 6B000000 		.4byte	0x6b
 455 015d 0E       		.byte	0xe
 456 015e 00       		.byte	0
 457 015f 08       		.uleb128 0x8
 458 0160 6B000000 		.4byte	0x6b
 459 0164 6F010000 		.4byte	0x16f
 460 0168 09       		.uleb128 0x9
 461 0169 6F010000 		.4byte	0x16f
 462 016d 00       		.byte	0
 463 016e 00       		.byte	0
 464 016f 02       		.uleb128 0x2
 465 0170 04       		.byte	0x4
 466 0171 07       		.byte	0x7
 467 0172 90000000 		.4byte	.LASF29
 468 0176 0A       		.uleb128 0xa
 469 0177 0E060000 		.4byte	.LASF30
 470 017b 04       		.byte	0x4
 471 017c EE       		.byte	0xee
 472 017d D2000000 		.4byte	0xd2
 473 0181 06       		.uleb128 0x6
 474 0182 10       		.byte	0x10
 475 0183 04       		.byte	0x4
 476 0184 F3       		.byte	0xf3
 477 0185 17020000 		.4byte	0x217
 478 0189 07       		.uleb128 0x7
 479 018a F2030000 		.4byte	.LASF18
 480 018e 04       		.byte	0x4
 481 018f F8       		.byte	0xf8
 482 0190 77000000 		.4byte	0x77
 483 0194 00       		.byte	0
 484 0195 07       		.uleb128 0x7
 485 0196 72020000 		.4byte	.LASF19
 486 019a 04       		.byte	0x4
 487 019b FD       		.byte	0xfd
 488 019c BA000000 		.4byte	0xba
 489 01a0 02       		.byte	0x2
 490 01a1 0B       		.uleb128 0xb
 491 01a2 15010000 		.4byte	.LASF20
 492 01a6 04       		.byte	0x4
 493 01a7 0201     		.2byte	0x102
 494 01a9 6B000000 		.4byte	0x6b
 495 01ad 04       		.byte	0x4
 496 01ae 0B       		.uleb128 0xb
 497 01af 66040000 		.4byte	.LASF21
 498 01b3 04       		.byte	0x4
 499 01b4 0701     		.2byte	0x107
 500 01b6 6B000000 		.4byte	0x6b
 501 01ba 05       		.byte	0x5
 502 01bb 0B       		.uleb128 0xb
 503 01bc 91020000 		.4byte	.LASF22
 504 01c0 04       		.byte	0x4
 505 01c1 0D01     		.2byte	0x10d
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccW8BzhS.s 			page 26


 506 01c3 6B000000 		.4byte	0x6b
 507 01c7 06       		.byte	0x6
 508 01c8 0B       		.uleb128 0xb
 509 01c9 85000000 		.4byte	.LASF23
 510 01cd 04       		.byte	0x4
 511 01ce 1301     		.2byte	0x113
 512 01d0 6B000000 		.4byte	0x6b
 513 01d4 07       		.byte	0x7
 514 01d5 0B       		.uleb128 0xb
 515 01d6 E2020000 		.4byte	.LASF24
 516 01da 04       		.byte	0x4
 517 01db 1A01     		.2byte	0x11a
 518 01dd C6000000 		.4byte	0xc6
 519 01e1 08       		.byte	0x8
 520 01e2 0B       		.uleb128 0xb
 521 01e3 62000000 		.4byte	.LASF25
 522 01e7 04       		.byte	0x4
 523 01e8 2101     		.2byte	0x121
 524 01ea 5F010000 		.4byte	0x15f
 525 01ee 09       		.byte	0x9
 526 01ef 0B       		.uleb128 0xb
 527 01f0 43000000 		.4byte	.LASF26
 528 01f4 04       		.byte	0x4
 529 01f5 2601     		.2byte	0x126
 530 01f7 6B000000 		.4byte	0x6b
 531 01fb 0A       		.byte	0xa
 532 01fc 0B       		.uleb128 0xb
 533 01fd 7B010000 		.4byte	.LASF27
 534 0201 04       		.byte	0x4
 535 0202 2E01     		.2byte	0x12e
 536 0204 77000000 		.4byte	0x77
 537 0208 0C       		.byte	0xc
 538 0209 0B       		.uleb128 0xb
 539 020a ED000000 		.4byte	.LASF28
 540 020e 04       		.byte	0x4
 541 020f 3301     		.2byte	0x133
 542 0211 6B000000 		.4byte	0x6b
 543 0215 0E       		.byte	0xe
 544 0216 00       		.byte	0
 545 0217 04       		.uleb128 0x4
 546 0218 D7010000 		.4byte	.LASF31
 547 021c 04       		.byte	0x4
 548 021d 3401     		.2byte	0x134
 549 021f 81010000 		.4byte	0x181
 550 0223 0C       		.uleb128 0xc
 551 0224 40       		.byte	0x40
 552 0225 04       		.byte	0x4
 553 0226 3A01     		.2byte	0x13a
 554 0228 60020000 		.4byte	0x260
 555 022c 0D       		.uleb128 0xd
 556 022d 757000   		.ascii	"up\000"
 557 0230 04       		.byte	0x4
 558 0231 3F01     		.2byte	0x13f
 559 0233 17020000 		.4byte	0x217
 560 0237 00       		.byte	0
 561 0238 0B       		.uleb128 0xb
 562 0239 3A060000 		.4byte	.LASF32
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccW8BzhS.s 			page 27


 563 023d 04       		.byte	0x4
 564 023e 4401     		.2byte	0x144
 565 0240 17020000 		.4byte	0x217
 566 0244 10       		.byte	0x10
 567 0245 0B       		.uleb128 0xb
 568 0246 ED030000 		.4byte	.LASF33
 569 024a 04       		.byte	0x4
 570 024b 4901     		.2byte	0x149
 571 024d 17020000 		.4byte	0x217
 572 0251 20       		.byte	0x20
 573 0252 0B       		.uleb128 0xb
 574 0253 18020000 		.4byte	.LASF34
 575 0257 04       		.byte	0x4
 576 0258 4E01     		.2byte	0x14e
 577 025a 17020000 		.4byte	0x217
 578 025e 30       		.byte	0x30
 579 025f 00       		.byte	0
 580 0260 04       		.uleb128 0x4
 581 0261 AB010000 		.4byte	.LASF35
 582 0265 04       		.byte	0x4
 583 0266 4F01     		.2byte	0x14f
 584 0268 23020000 		.4byte	0x223
 585 026c 0C       		.uleb128 0xc
 586 026d 0A       		.byte	0xa
 587 026e 04       		.byte	0x4
 588 026f 5501     		.2byte	0x155
 589 0271 C4020000 		.4byte	0x2c4
 590 0275 0D       		.uleb128 0xd
 591 0276 72617700 		.ascii	"raw\000"
 592 027a 04       		.byte	0x4
 593 027b 5A01     		.2byte	0x15a
 594 027d C4020000 		.4byte	0x2c4
 595 0281 00       		.byte	0
 596 0282 0B       		.uleb128 0xb
 597 0283 3E000000 		.4byte	.LASF36
 598 0287 04       		.byte	0x4
 599 0288 5F01     		.2byte	0x15f
 600 028a C4020000 		.4byte	0x2c4
 601 028e 02       		.byte	0x2
 602 028f 0B       		.uleb128 0xb
 603 0290 E3040000 		.4byte	.LASF37
 604 0294 04       		.byte	0x4
 605 0295 6501     		.2byte	0x165
 606 0297 5F010000 		.4byte	0x15f
 607 029b 04       		.byte	0x4
 608 029c 0B       		.uleb128 0xb
 609 029d 51000000 		.4byte	.LASF38
 610 02a1 04       		.byte	0x4
 611 02a2 6A01     		.2byte	0x16a
 612 02a4 BA000000 		.4byte	0xba
 613 02a8 06       		.byte	0x6
 614 02a9 0B       		.uleb128 0xb
 615 02aa 17050000 		.4byte	.LASF39
 616 02ae 04       		.byte	0x4
 617 02af 6F01     		.2byte	0x16f
 618 02b1 D4020000 		.4byte	0x2d4
 619 02b5 08       		.byte	0x8
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccW8BzhS.s 			page 28


 620 02b6 0B       		.uleb128 0xb
 621 02b7 C1000000 		.4byte	.LASF40
 622 02bb 04       		.byte	0x4
 623 02bc 7401     		.2byte	0x174
 624 02be 5F010000 		.4byte	0x15f
 625 02c2 09       		.byte	0x9
 626 02c3 00       		.byte	0
 627 02c4 08       		.uleb128 0x8
 628 02c5 77000000 		.4byte	0x77
 629 02c9 D4020000 		.4byte	0x2d4
 630 02cd 09       		.uleb128 0x9
 631 02ce 6F010000 		.4byte	0x16f
 632 02d2 00       		.byte	0
 633 02d3 00       		.byte	0
 634 02d4 08       		.uleb128 0x8
 635 02d5 C6000000 		.4byte	0xc6
 636 02d9 E4020000 		.4byte	0x2e4
 637 02dd 09       		.uleb128 0x9
 638 02de 6F010000 		.4byte	0x16f
 639 02e2 00       		.byte	0
 640 02e3 00       		.byte	0
 641 02e4 04       		.uleb128 0x4
 642 02e5 98030000 		.4byte	.LASF41
 643 02e9 04       		.byte	0x4
 644 02ea 7501     		.2byte	0x175
 645 02ec 6C020000 		.4byte	0x26c
 646 02f0 0C       		.uleb128 0xc
 647 02f1 28       		.byte	0x28
 648 02f2 04       		.byte	0x4
 649 02f3 7B01     		.2byte	0x17b
 650 02f5 2D030000 		.4byte	0x32d
 651 02f9 0D       		.uleb128 0xd
 652 02fa 757000   		.ascii	"up\000"
 653 02fd 04       		.byte	0x4
 654 02fe 8001     		.2byte	0x180
 655 0300 2D030000 		.4byte	0x32d
 656 0304 00       		.byte	0
 657 0305 0B       		.uleb128 0xb
 658 0306 3A060000 		.4byte	.LASF32
 659 030a 04       		.byte	0x4
 660 030b 8501     		.2byte	0x185
 661 030d 2D030000 		.4byte	0x32d
 662 0311 0A       		.byte	0xa
 663 0312 0B       		.uleb128 0xb
 664 0313 ED030000 		.4byte	.LASF33
 665 0317 04       		.byte	0x4
 666 0318 8A01     		.2byte	0x18a
 667 031a 2D030000 		.4byte	0x32d
 668 031e 14       		.byte	0x14
 669 031f 0B       		.uleb128 0xb
 670 0320 18020000 		.4byte	.LASF34
 671 0324 04       		.byte	0x4
 672 0325 8F01     		.2byte	0x18f
 673 0327 2D030000 		.4byte	0x32d
 674 032b 1E       		.byte	0x1e
 675 032c 00       		.byte	0
 676 032d 08       		.uleb128 0x8
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccW8BzhS.s 			page 29


 677 032e E4020000 		.4byte	0x2e4
 678 0332 3D030000 		.4byte	0x33d
 679 0336 09       		.uleb128 0x9
 680 0337 6F010000 		.4byte	0x16f
 681 033b 00       		.byte	0
 682 033c 00       		.byte	0
 683 033d 04       		.uleb128 0x4
 684 033e 39030000 		.4byte	.LASF42
 685 0342 04       		.byte	0x4
 686 0343 9001     		.2byte	0x190
 687 0345 F0020000 		.4byte	0x2f0
 688 0349 0C       		.uleb128 0xc
 689 034a 90       		.byte	0x90
 690 034b 04       		.byte	0x4
 691 034c 9601     		.2byte	0x196
 692 034e 4A040000 		.4byte	0x44a
 693 0352 0B       		.uleb128 0xb
 694 0353 B2000000 		.4byte	.LASF43
 695 0357 04       		.byte	0x4
 696 0358 9D01     		.2byte	0x19d
 697 035a 77000000 		.4byte	0x77
 698 035e 00       		.byte	0
 699 035f 0B       		.uleb128 0xb
 700 0360 1D010000 		.4byte	.LASF44
 701 0364 04       		.byte	0x4
 702 0365 A201     		.2byte	0x1a2
 703 0367 77000000 		.4byte	0x77
 704 036b 02       		.byte	0x2
 705 036c 0B       		.uleb128 0xb
 706 036d D2030000 		.4byte	.LASF45
 707 0371 04       		.byte	0x4
 708 0372 A701     		.2byte	0x1a7
 709 0374 77000000 		.4byte	0x77
 710 0378 04       		.byte	0x4
 711 0379 0B       		.uleb128 0xb
 712 037a 9C020000 		.4byte	.LASF46
 713 037e 04       		.byte	0x4
 714 037f AD01     		.2byte	0x1ad
 715 0381 77000000 		.4byte	0x77
 716 0385 06       		.byte	0x6
 717 0386 0B       		.uleb128 0xb
 718 0387 5A040000 		.4byte	.LASF47
 719 038b 04       		.byte	0x4
 720 038c B201     		.2byte	0x1b2
 721 038e 77000000 		.4byte	0x77
 722 0392 08       		.byte	0x8
 723 0393 0B       		.uleb128 0xb
 724 0394 CB030000 		.4byte	.LASF48
 725 0398 04       		.byte	0x4
 726 0399 B701     		.2byte	0x1b7
 727 039b B5000000 		.4byte	0xb5
 728 039f 0C       		.byte	0xc
 729 03a0 0B       		.uleb128 0xb
 730 03a1 87030000 		.4byte	.LASF49
 731 03a5 04       		.byte	0x4
 732 03a6 BD01     		.2byte	0x1bd
 733 03a8 4A040000 		.4byte	0x44a
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccW8BzhS.s 			page 30


 734 03ac 10       		.byte	0x10
 735 03ad 0B       		.uleb128 0xb
 736 03ae B1020000 		.4byte	.LASF50
 737 03b2 04       		.byte	0x4
 738 03b3 C401     		.2byte	0x1c4
 739 03b5 4A040000 		.4byte	0x44a
 740 03b9 14       		.byte	0x14
 741 03ba 0B       		.uleb128 0xb
 742 03bb 76060000 		.4byte	.LASF51
 743 03bf 04       		.byte	0x4
 744 03c0 D401     		.2byte	0x1d4
 745 03c2 5A040000 		.4byte	0x45a
 746 03c6 18       		.byte	0x18
 747 03c7 0B       		.uleb128 0xb
 748 03c8 CA000000 		.4byte	.LASF52
 749 03cc 04       		.byte	0x4
 750 03cd DA01     		.2byte	0x1da
 751 03cf 77000000 		.4byte	0x77
 752 03d3 1C       		.byte	0x1c
 753 03d4 0B       		.uleb128 0xb
 754 03d5 50040000 		.4byte	.LASF53
 755 03d9 04       		.byte	0x4
 756 03da DF01     		.2byte	0x1df
 757 03dc 6B000000 		.4byte	0x6b
 758 03e0 1E       		.byte	0x1e
 759 03e1 0B       		.uleb128 0xb
 760 03e2 16000000 		.4byte	.LASF54
 761 03e6 04       		.byte	0x4
 762 03e7 E401     		.2byte	0x1e4
 763 03e9 60020000 		.4byte	0x260
 764 03ed 20       		.byte	0x20
 765 03ee 0B       		.uleb128 0xb
 766 03ef 2A040000 		.4byte	.LASF55
 767 03f3 04       		.byte	0x4
 768 03f4 E901     		.2byte	0x1e9
 769 03f6 3D030000 		.4byte	0x33d
 770 03fa 60       		.byte	0x60
 771 03fb 0B       		.uleb128 0xb
 772 03fc 2A060000 		.4byte	.LASF56
 773 0400 04       		.byte	0x4
 774 0401 EE01     		.2byte	0x1ee
 775 0403 6B000000 		.4byte	0x6b
 776 0407 88       		.byte	0x88
 777 0408 0B       		.uleb128 0xb
 778 0409 C7010000 		.4byte	.LASF57
 779 040d 04       		.byte	0x4
 780 040e F301     		.2byte	0x1f3
 781 0410 6B000000 		.4byte	0x6b
 782 0414 89       		.byte	0x89
 783 0415 0B       		.uleb128 0xb
 784 0416 DA030000 		.4byte	.LASF58
 785 041a 04       		.byte	0x4
 786 041b F801     		.2byte	0x1f8
 787 041d 77000000 		.4byte	0x77
 788 0421 8A       		.byte	0x8a
 789 0422 0B       		.uleb128 0xb
 790 0423 1F000000 		.4byte	.LASF59
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccW8BzhS.s 			page 31


 791 0427 04       		.byte	0x4
 792 0428 FD01     		.2byte	0x1fd
 793 042a C4020000 		.4byte	0x2c4
 794 042e 8C       		.byte	0x8c
 795 042f 0B       		.uleb128 0xb
 796 0430 A5040000 		.4byte	.LASF60
 797 0434 04       		.byte	0x4
 798 0435 0202     		.2byte	0x202
 799 0437 6B000000 		.4byte	0x6b
 800 043b 8E       		.byte	0x8e
 801 043c 0B       		.uleb128 0xb
 802 043d 2F000000 		.4byte	.LASF61
 803 0441 04       		.byte	0x4
 804 0442 0702     		.2byte	0x207
 805 0444 6B000000 		.4byte	0x6b
 806 0448 8F       		.byte	0x8f
 807 0449 00       		.byte	0
 808 044a 08       		.uleb128 0x8
 809 044b 83000000 		.4byte	0x83
 810 044f 5A040000 		.4byte	0x45a
 811 0453 09       		.uleb128 0x9
 812 0454 6F010000 		.4byte	0x16f
 813 0458 00       		.byte	0
 814 0459 00       		.byte	0
 815 045a 08       		.uleb128 0x8
 816 045b 6B000000 		.4byte	0x6b
 817 045f 6A040000 		.4byte	0x46a
 818 0463 09       		.uleb128 0x9
 819 0464 6F010000 		.4byte	0x16f
 820 0468 03       		.byte	0x3
 821 0469 00       		.byte	0
 822 046a 04       		.uleb128 0x4
 823 046b 6F040000 		.4byte	.LASF62
 824 046f 04       		.byte	0x4
 825 0470 0802     		.2byte	0x208
 826 0472 49030000 		.4byte	0x349
 827 0476 0C       		.uleb128 0xc
 828 0477 1C       		.byte	0x1c
 829 0478 04       		.byte	0x4
 830 0479 0E02     		.2byte	0x20e
 831 047b F5040000 		.4byte	0x4f5
 832 047f 0B       		.uleb128 0xb
 833 0480 7C000000 		.4byte	.LASF63
 834 0484 04       		.byte	0x4
 835 0485 1302     		.2byte	0x213
 836 0487 F5040000 		.4byte	0x4f5
 837 048b 00       		.byte	0
 838 048c 0B       		.uleb128 0xb
 839 048d BB000000 		.4byte	.LASF64
 840 0491 04       		.byte	0x4
 841 0492 1802     		.2byte	0x218
 842 0494 F5040000 		.4byte	0x4f5
 843 0498 04       		.byte	0x4
 844 0499 0B       		.uleb128 0xb
 845 049a 0C050000 		.4byte	.LASF65
 846 049e 04       		.byte	0x4
 847 049f 1D02     		.2byte	0x21d
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccW8BzhS.s 			page 32


 848 04a1 F5040000 		.4byte	0x4f5
 849 04a5 08       		.byte	0x8
 850 04a6 0B       		.uleb128 0xb
 851 04a7 75010000 		.4byte	.LASF66
 852 04ab 04       		.byte	0x4
 853 04ac 2202     		.2byte	0x222
 854 04ae F5040000 		.4byte	0x4f5
 855 04b2 0C       		.byte	0xc
 856 04b3 0B       		.uleb128 0xb
 857 04b4 E3000000 		.4byte	.LASF67
 858 04b8 04       		.byte	0x4
 859 04b9 2702     		.2byte	0x227
 860 04bb 83000000 		.4byte	0x83
 861 04bf 10       		.byte	0x10
 862 04c0 0B       		.uleb128 0xb
 863 04c1 12050000 		.4byte	.LASF68
 864 04c5 04       		.byte	0x4
 865 04c6 2C02     		.2byte	0x22c
 866 04c8 83000000 		.4byte	0x83
 867 04cc 14       		.byte	0x14
 868 04cd 0B       		.uleb128 0xb
 869 04ce EB040000 		.4byte	.LASF69
 870 04d2 04       		.byte	0x4
 871 04d3 3102     		.2byte	0x231
 872 04d5 6B000000 		.4byte	0x6b
 873 04d9 18       		.byte	0x18
 874 04da 0B       		.uleb128 0xb
 875 04db 6A000000 		.4byte	.LASF70
 876 04df 04       		.byte	0x4
 877 04e0 3602     		.2byte	0x236
 878 04e2 6B000000 		.4byte	0x6b
 879 04e6 19       		.byte	0x19
 880 04e7 0B       		.uleb128 0xb
 881 04e8 27020000 		.4byte	.LASF71
 882 04ec 04       		.byte	0x4
 883 04ed 3B02     		.2byte	0x23b
 884 04ef 6B000000 		.4byte	0x6b
 885 04f3 1A       		.byte	0x1a
 886 04f4 00       		.byte	0
 887 04f5 0E       		.uleb128 0xe
 888 04f6 04       		.byte	0x4
 889 04f7 A9000000 		.4byte	0xa9
 890 04fb 04       		.uleb128 0x4
 891 04fc 4A020000 		.4byte	.LASF72
 892 0500 04       		.byte	0x4
 893 0501 3C02     		.2byte	0x23c
 894 0503 76040000 		.4byte	0x476
 895 0507 0C       		.uleb128 0xc
 896 0508 1C       		.byte	0x1c
 897 0509 04       		.byte	0x4
 898 050a 6F02     		.2byte	0x26f
 899 050c 86050000 		.4byte	0x586
 900 0510 0B       		.uleb128 0xb
 901 0511 69060000 		.4byte	.LASF73
 902 0515 04       		.byte	0x4
 903 0516 7802     		.2byte	0x278
 904 0518 86050000 		.4byte	0x586
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccW8BzhS.s 			page 33


 905 051c 00       		.byte	0
 906 051d 0B       		.uleb128 0xb
 907 051e 3E020000 		.4byte	.LASF74
 908 0522 04       		.byte	0x4
 909 0523 7F02     		.2byte	0x27f
 910 0525 8D050000 		.4byte	0x58d
 911 0529 04       		.byte	0x4
 912 052a 0B       		.uleb128 0xb
 913 052b 3E050000 		.4byte	.LASF75
 914 052f 04       		.byte	0x4
 915 0530 8502     		.2byte	0x285
 916 0532 8F050000 		.4byte	0x58f
 917 0536 08       		.byte	0x8
 918 0537 0B       		.uleb128 0xb
 919 0538 55050000 		.4byte	.LASF76
 920 053c 04       		.byte	0x4
 921 053d 8B02     		.2byte	0x28b
 922 053f 8D050000 		.4byte	0x58d
 923 0543 0C       		.byte	0xc
 924 0544 0B       		.uleb128 0xb
 925 0545 2D010000 		.4byte	.LASF77
 926 0549 04       		.byte	0x4
 927 054a 9202     		.2byte	0x292
 928 054c 95050000 		.4byte	0x595
 929 0550 10       		.byte	0x10
 930 0551 0B       		.uleb128 0xb
 931 0552 6D030000 		.4byte	.LASF78
 932 0556 04       		.byte	0x4
 933 0557 9702     		.2byte	0x297
 934 0559 83000000 		.4byte	0x83
 935 055d 14       		.byte	0x14
 936 055e 0B       		.uleb128 0xb
 937 055f 56000000 		.4byte	.LASF79
 938 0563 04       		.byte	0x4
 939 0564 9E02     		.2byte	0x29e
 940 0566 77000000 		.4byte	0x77
 941 056a 18       		.byte	0x18
 942 056b 0B       		.uleb128 0xb
 943 056c 2D020000 		.4byte	.LASF80
 944 0570 04       		.byte	0x4
 945 0571 A502     		.2byte	0x2a5
 946 0573 6B000000 		.4byte	0x6b
 947 0577 1A       		.byte	0x1a
 948 0578 0B       		.uleb128 0xb
 949 0579 7B020000 		.4byte	.LASF81
 950 057d 04       		.byte	0x4
 951 057e AF02     		.2byte	0x2af
 952 0580 6B000000 		.4byte	0x6b
 953 0584 1B       		.byte	0x1b
 954 0585 00       		.byte	0
 955 0586 0E       		.uleb128 0xe
 956 0587 04       		.byte	0x4
 957 0588 8C050000 		.4byte	0x58c
 958 058c 0F       		.uleb128 0xf
 959 058d 10       		.uleb128 0x10
 960 058e 04       		.byte	0x4
 961 058f 0E       		.uleb128 0xe
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccW8BzhS.s 			page 34


 962 0590 04       		.byte	0x4
 963 0591 E4020000 		.4byte	0x2e4
 964 0595 0E       		.uleb128 0xe
 965 0596 04       		.byte	0x4
 966 0597 6B000000 		.4byte	0x6b
 967 059b 04       		.uleb128 0x4
 968 059c 99000000 		.4byte	.LASF82
 969 05a0 04       		.byte	0x4
 970 05a1 B002     		.2byte	0x2b0
 971 05a3 07050000 		.4byte	0x507
 972 05a7 0C       		.uleb128 0xc
 973 05a8 70       		.byte	0x70
 974 05a9 04       		.byte	0x4
 975 05aa B602     		.2byte	0x2b6
 976 05ac BE050000 		.4byte	0x5be
 977 05b0 0B       		.uleb128 0xb
 978 05b1 65050000 		.4byte	.LASF83
 979 05b5 04       		.byte	0x4
 980 05b6 BB02     		.2byte	0x2bb
 981 05b8 BE050000 		.4byte	0x5be
 982 05bc 00       		.byte	0
 983 05bd 00       		.byte	0
 984 05be 08       		.uleb128 0x8
 985 05bf 9B050000 		.4byte	0x59b
 986 05c3 CE050000 		.4byte	0x5ce
 987 05c7 09       		.uleb128 0x9
 988 05c8 6F010000 		.4byte	0x16f
 989 05cc 03       		.byte	0x3
 990 05cd 00       		.byte	0
 991 05ce 04       		.uleb128 0x4
 992 05cf 00000000 		.4byte	.LASF84
 993 05d3 04       		.byte	0x4
 994 05d4 BC02     		.2byte	0x2bc
 995 05d6 A7050000 		.4byte	0x5a7
 996 05da 02       		.uleb128 0x2
 997 05db 08       		.byte	0x8
 998 05dc 04       		.byte	0x4
 999 05dd A5020000 		.4byte	.LASF85
 1000 05e1 11       		.uleb128 0x11
 1001 05e2 82010000 		.4byte	.LASF104
 1002 05e6 01       		.byte	0x1
 1003 05e7 F402     		.2byte	0x2f4
 1004 05e9 01       		.byte	0x1
 1005 05ea 12       		.uleb128 0x12
 1006 05eb FA000000 		.4byte	.LASF86
 1007 05ef 01       		.byte	0x1
 1008 05f0 CE01     		.2byte	0x1ce
 1009 05f2 00000000 		.4byte	.LFB1
 1010 05f6 58000000 		.4byte	.LFE1-.LFB1
 1011 05fa 01       		.uleb128 0x1
 1012 05fb 9C       		.byte	0x9c
 1013 05fc 11060000 		.4byte	0x611
 1014 0600 13       		.uleb128 0x13
 1015 0601 E1050000 		.4byte	0x5e1
 1016 0605 06000000 		.4byte	.LBB4
 1017 0609 10000000 		.4byte	.LBE4-.LBB4
 1018 060d 01       		.byte	0x1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccW8BzhS.s 			page 35


 1019 060e D801     		.2byte	0x1d8
 1020 0610 00       		.byte	0
 1021 0611 14       		.uleb128 0x14
 1022 0612 83040000 		.4byte	.LASF105
 1023 0616 01       		.byte	0x1
 1024 0617 2D03     		.2byte	0x32d
 1025 0619 01       		.byte	0x1
 1026 061a 2B060000 		.4byte	0x62b
 1027 061e 15       		.uleb128 0x15
 1028 061f 36020000 		.4byte	.LASF106
 1029 0623 01       		.byte	0x1
 1030 0624 3503     		.2byte	0x335
 1031 0626 2B060000 		.4byte	0x62b
 1032 062a 00       		.byte	0
 1033 062b 0E       		.uleb128 0xe
 1034 062c 04       		.byte	0x4
 1035 062d 76010000 		.4byte	0x176
 1036 0631 12       		.uleb128 0x12
 1037 0632 C9040000 		.4byte	.LASF87
 1038 0636 01       		.byte	0x1
 1039 0637 3F02     		.2byte	0x23f
 1040 0639 00000000 		.4byte	.LFB2
 1041 063d EC000000 		.4byte	.LFE2-.LFB2
 1042 0641 01       		.uleb128 0x1
 1043 0642 9C       		.byte	0x9c
 1044 0643 B9060000 		.4byte	0x6b9
 1045 0647 16       		.uleb128 0x16
 1046 0648 9F010000 		.4byte	.LASF107
 1047 064c 01       		.byte	0x1
 1048 064d 4202     		.2byte	0x242
 1049 064f B9060000 		.4byte	0x6b9
 1050 0653 00000000 		.4byte	.LLST0
 1051 0657 17       		.uleb128 0x17
 1052 0658 E1050000 		.4byte	0x5e1
 1053 065c 14000000 		.4byte	.LBB10
 1054 0660 00000000 		.4byte	.Ldebug_ranges0+0
 1055 0664 01       		.byte	0x1
 1056 0665 4E02     		.2byte	0x24e
 1057 0667 18       		.uleb128 0x18
 1058 0668 11060000 		.4byte	0x611
 1059 066c 3C000000 		.4byte	.LBB16
 1060 0670 78000000 		.4byte	.LBE16-.LBB16
 1061 0674 01       		.byte	0x1
 1062 0675 7502     		.2byte	0x275
 1063 0677 AF060000 		.4byte	0x6af
 1064 067b 19       		.uleb128 0x19
 1065 067c 3C000000 		.4byte	.LBB17
 1066 0680 78000000 		.4byte	.LBE17-.LBB17
 1067 0684 1A       		.uleb128 0x1a
 1068 0685 1E060000 		.4byte	0x61e
 1069 0689 1B       		.uleb128 0x1b
 1070 068a 78000000 		.4byte	.LVL4
 1071 068e 29070000 		.4byte	0x729
 1072 0692 1B       		.uleb128 0x1b
 1073 0693 84000000 		.4byte	.LVL5
 1074 0697 35070000 		.4byte	0x735
 1075 069b 1B       		.uleb128 0x1b
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccW8BzhS.s 			page 36


 1076 069c 88000000 		.4byte	.LVL6
 1077 06a0 41070000 		.4byte	0x741
 1078 06a4 1B       		.uleb128 0x1b
 1079 06a5 A4000000 		.4byte	.LVL9
 1080 06a9 4D070000 		.4byte	0x74d
 1081 06ad 00       		.byte	0
 1082 06ae 00       		.byte	0
 1083 06af 1B       		.uleb128 0x1b
 1084 06b0 3C000000 		.4byte	.LVL1
 1085 06b4 58070000 		.4byte	0x758
 1086 06b8 00       		.byte	0
 1087 06b9 0E       		.uleb128 0xe
 1088 06ba 04       		.byte	0x4
 1089 06bb BF060000 		.4byte	0x6bf
 1090 06bf 1C       		.uleb128 0x1c
 1091 06c0 FB040000 		.4byte	0x4fb
 1092 06c4 1D       		.uleb128 0x1d
 1093 06c5 63020000 		.4byte	.LASF88
 1094 06c9 04       		.byte	0x4
 1095 06ca 8704     		.2byte	0x487
 1096 06cc 6A040000 		.4byte	0x46a
 1097 06d0 1D       		.uleb128 0x1d
 1098 06d1 FD050000 		.4byte	.LASF89
 1099 06d5 04       		.byte	0x4
 1100 06d6 8804     		.2byte	0x488
 1101 06d8 DC060000 		.4byte	0x6dc
 1102 06dc 1C       		.uleb128 0x1c
 1103 06dd CE050000 		.4byte	0x5ce
 1104 06e1 1E       		.uleb128 0x1e
 1105 06e2 ED020000 		.4byte	.LASF90
 1106 06e6 05       		.byte	0x5
 1107 06e7 B1       		.byte	0xb1
 1108 06e8 A4000000 		.4byte	0xa4
 1109 06ec 1E       		.uleb128 0x1e
 1110 06ed 80060000 		.4byte	.LASF91
 1111 06f1 05       		.byte	0x5
 1112 06f2 B2       		.byte	0xb2
 1113 06f3 A4000000 		.4byte	0xa4
 1114 06f7 1E       		.uleb128 0x1e
 1115 06f8 32040000 		.4byte	.LASF92
 1116 06fc 05       		.byte	0x5
 1117 06fd B3       		.byte	0xb3
 1118 06fe 6B000000 		.4byte	0x6b
 1119 0702 1E       		.uleb128 0x1e
 1120 0703 F6040000 		.4byte	.LASF93
 1121 0707 05       		.byte	0x5
 1122 0708 B5       		.byte	0xb5
 1123 0709 8F050000 		.4byte	0x58f
 1124 070d 1E       		.uleb128 0x1e
 1125 070e 3F060000 		.4byte	.LASF94
 1126 0712 05       		.byte	0x5
 1127 0713 BC       		.byte	0xbc
 1128 0714 18070000 		.4byte	0x718
 1129 0718 1C       		.uleb128 0x1c
 1130 0719 6B000000 		.4byte	0x6b
 1131 071d 1D       		.uleb128 0x1d
 1132 071e 56060000 		.4byte	.LASF95
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccW8BzhS.s 			page 37


 1133 0722 06       		.byte	0x6
 1134 0723 C101     		.2byte	0x1c1
 1135 0725 83000000 		.4byte	0x83
 1136 0729 1F       		.uleb128 0x1f
 1137 072a 25050000 		.4byte	.LASF96
 1138 072e 25050000 		.4byte	.LASF96
 1139 0732 06       		.byte	0x6
 1140 0733 A301     		.2byte	0x1a3
 1141 0735 1F       		.uleb128 0x1f
 1142 0736 1A030000 		.4byte	.LASF97
 1143 073a 1A030000 		.4byte	.LASF97
 1144 073e 06       		.byte	0x6
 1145 073f B101     		.2byte	0x1b1
 1146 0741 1F       		.uleb128 0x1f
 1147 0742 10040000 		.4byte	.LASF98
 1148 0746 10040000 		.4byte	.LASF98
 1149 074a 06       		.byte	0x6
 1150 074b A201     		.2byte	0x1a2
 1151 074d 20       		.uleb128 0x20
 1152 074e F5010000 		.4byte	.LASF99
 1153 0752 F5010000 		.4byte	.LASF99
 1154 0756 05       		.byte	0x5
 1155 0757 83       		.byte	0x83
 1156 0758 1F       		.uleb128 0x1f
 1157 0759 95060000 		.4byte	.LASF100
 1158 075d 95060000 		.4byte	.LASF100
 1159 0761 06       		.byte	0x6
 1160 0762 9201     		.2byte	0x192
 1161 0764 00       		.byte	0
 1162              		.section	.debug_abbrev,"",%progbits
 1163              	.Ldebug_abbrev0:
 1164 0000 01       		.uleb128 0x1
 1165 0001 11       		.uleb128 0x11
 1166 0002 01       		.byte	0x1
 1167 0003 25       		.uleb128 0x25
 1168 0004 0E       		.uleb128 0xe
 1169 0005 13       		.uleb128 0x13
 1170 0006 0B       		.uleb128 0xb
 1171 0007 03       		.uleb128 0x3
 1172 0008 0E       		.uleb128 0xe
 1173 0009 1B       		.uleb128 0x1b
 1174 000a 0E       		.uleb128 0xe
 1175 000b 55       		.uleb128 0x55
 1176 000c 17       		.uleb128 0x17
 1177 000d 11       		.uleb128 0x11
 1178 000e 01       		.uleb128 0x1
 1179 000f 10       		.uleb128 0x10
 1180 0010 17       		.uleb128 0x17
 1181 0011 00       		.byte	0
 1182 0012 00       		.byte	0
 1183 0013 02       		.uleb128 0x2
 1184 0014 24       		.uleb128 0x24
 1185 0015 00       		.byte	0
 1186 0016 0B       		.uleb128 0xb
 1187 0017 0B       		.uleb128 0xb
 1188 0018 3E       		.uleb128 0x3e
 1189 0019 0B       		.uleb128 0xb
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccW8BzhS.s 			page 38


 1190 001a 03       		.uleb128 0x3
 1191 001b 0E       		.uleb128 0xe
 1192 001c 00       		.byte	0
 1193 001d 00       		.byte	0
 1194 001e 03       		.uleb128 0x3
 1195 001f 24       		.uleb128 0x24
 1196 0020 00       		.byte	0
 1197 0021 0B       		.uleb128 0xb
 1198 0022 0B       		.uleb128 0xb
 1199 0023 3E       		.uleb128 0x3e
 1200 0024 0B       		.uleb128 0xb
 1201 0025 03       		.uleb128 0x3
 1202 0026 08       		.uleb128 0x8
 1203 0027 00       		.byte	0
 1204 0028 00       		.byte	0
 1205 0029 04       		.uleb128 0x4
 1206 002a 16       		.uleb128 0x16
 1207 002b 00       		.byte	0
 1208 002c 03       		.uleb128 0x3
 1209 002d 0E       		.uleb128 0xe
 1210 002e 3A       		.uleb128 0x3a
 1211 002f 0B       		.uleb128 0xb
 1212 0030 3B       		.uleb128 0x3b
 1213 0031 05       		.uleb128 0x5
 1214 0032 49       		.uleb128 0x49
 1215 0033 13       		.uleb128 0x13
 1216 0034 00       		.byte	0
 1217 0035 00       		.byte	0
 1218 0036 05       		.uleb128 0x5
 1219 0037 35       		.uleb128 0x35
 1220 0038 00       		.byte	0
 1221 0039 49       		.uleb128 0x49
 1222 003a 13       		.uleb128 0x13
 1223 003b 00       		.byte	0
 1224 003c 00       		.byte	0
 1225 003d 06       		.uleb128 0x6
 1226 003e 13       		.uleb128 0x13
 1227 003f 01       		.byte	0x1
 1228 0040 0B       		.uleb128 0xb
 1229 0041 0B       		.uleb128 0xb
 1230 0042 3A       		.uleb128 0x3a
 1231 0043 0B       		.uleb128 0xb
 1232 0044 3B       		.uleb128 0x3b
 1233 0045 0B       		.uleb128 0xb
 1234 0046 01       		.uleb128 0x1
 1235 0047 13       		.uleb128 0x13
 1236 0048 00       		.byte	0
 1237 0049 00       		.byte	0
 1238 004a 07       		.uleb128 0x7
 1239 004b 0D       		.uleb128 0xd
 1240 004c 00       		.byte	0
 1241 004d 03       		.uleb128 0x3
 1242 004e 0E       		.uleb128 0xe
 1243 004f 3A       		.uleb128 0x3a
 1244 0050 0B       		.uleb128 0xb
 1245 0051 3B       		.uleb128 0x3b
 1246 0052 0B       		.uleb128 0xb
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccW8BzhS.s 			page 39


 1247 0053 49       		.uleb128 0x49
 1248 0054 13       		.uleb128 0x13
 1249 0055 38       		.uleb128 0x38
 1250 0056 0B       		.uleb128 0xb
 1251 0057 00       		.byte	0
 1252 0058 00       		.byte	0
 1253 0059 08       		.uleb128 0x8
 1254 005a 01       		.uleb128 0x1
 1255 005b 01       		.byte	0x1
 1256 005c 49       		.uleb128 0x49
 1257 005d 13       		.uleb128 0x13
 1258 005e 01       		.uleb128 0x1
 1259 005f 13       		.uleb128 0x13
 1260 0060 00       		.byte	0
 1261 0061 00       		.byte	0
 1262 0062 09       		.uleb128 0x9
 1263 0063 21       		.uleb128 0x21
 1264 0064 00       		.byte	0
 1265 0065 49       		.uleb128 0x49
 1266 0066 13       		.uleb128 0x13
 1267 0067 2F       		.uleb128 0x2f
 1268 0068 0B       		.uleb128 0xb
 1269 0069 00       		.byte	0
 1270 006a 00       		.byte	0
 1271 006b 0A       		.uleb128 0xa
 1272 006c 16       		.uleb128 0x16
 1273 006d 00       		.byte	0
 1274 006e 03       		.uleb128 0x3
 1275 006f 0E       		.uleb128 0xe
 1276 0070 3A       		.uleb128 0x3a
 1277 0071 0B       		.uleb128 0xb
 1278 0072 3B       		.uleb128 0x3b
 1279 0073 0B       		.uleb128 0xb
 1280 0074 49       		.uleb128 0x49
 1281 0075 13       		.uleb128 0x13
 1282 0076 00       		.byte	0
 1283 0077 00       		.byte	0
 1284 0078 0B       		.uleb128 0xb
 1285 0079 0D       		.uleb128 0xd
 1286 007a 00       		.byte	0
 1287 007b 03       		.uleb128 0x3
 1288 007c 0E       		.uleb128 0xe
 1289 007d 3A       		.uleb128 0x3a
 1290 007e 0B       		.uleb128 0xb
 1291 007f 3B       		.uleb128 0x3b
 1292 0080 05       		.uleb128 0x5
 1293 0081 49       		.uleb128 0x49
 1294 0082 13       		.uleb128 0x13
 1295 0083 38       		.uleb128 0x38
 1296 0084 0B       		.uleb128 0xb
 1297 0085 00       		.byte	0
 1298 0086 00       		.byte	0
 1299 0087 0C       		.uleb128 0xc
 1300 0088 13       		.uleb128 0x13
 1301 0089 01       		.byte	0x1
 1302 008a 0B       		.uleb128 0xb
 1303 008b 0B       		.uleb128 0xb
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccW8BzhS.s 			page 40


 1304 008c 3A       		.uleb128 0x3a
 1305 008d 0B       		.uleb128 0xb
 1306 008e 3B       		.uleb128 0x3b
 1307 008f 05       		.uleb128 0x5
 1308 0090 01       		.uleb128 0x1
 1309 0091 13       		.uleb128 0x13
 1310 0092 00       		.byte	0
 1311 0093 00       		.byte	0
 1312 0094 0D       		.uleb128 0xd
 1313 0095 0D       		.uleb128 0xd
 1314 0096 00       		.byte	0
 1315 0097 03       		.uleb128 0x3
 1316 0098 08       		.uleb128 0x8
 1317 0099 3A       		.uleb128 0x3a
 1318 009a 0B       		.uleb128 0xb
 1319 009b 3B       		.uleb128 0x3b
 1320 009c 05       		.uleb128 0x5
 1321 009d 49       		.uleb128 0x49
 1322 009e 13       		.uleb128 0x13
 1323 009f 38       		.uleb128 0x38
 1324 00a0 0B       		.uleb128 0xb
 1325 00a1 00       		.byte	0
 1326 00a2 00       		.byte	0
 1327 00a3 0E       		.uleb128 0xe
 1328 00a4 0F       		.uleb128 0xf
 1329 00a5 00       		.byte	0
 1330 00a6 0B       		.uleb128 0xb
 1331 00a7 0B       		.uleb128 0xb
 1332 00a8 49       		.uleb128 0x49
 1333 00a9 13       		.uleb128 0x13
 1334 00aa 00       		.byte	0
 1335 00ab 00       		.byte	0
 1336 00ac 0F       		.uleb128 0xf
 1337 00ad 26       		.uleb128 0x26
 1338 00ae 00       		.byte	0
 1339 00af 00       		.byte	0
 1340 00b0 00       		.byte	0
 1341 00b1 10       		.uleb128 0x10
 1342 00b2 0F       		.uleb128 0xf
 1343 00b3 00       		.byte	0
 1344 00b4 0B       		.uleb128 0xb
 1345 00b5 0B       		.uleb128 0xb
 1346 00b6 00       		.byte	0
 1347 00b7 00       		.byte	0
 1348 00b8 11       		.uleb128 0x11
 1349 00b9 2E       		.uleb128 0x2e
 1350 00ba 00       		.byte	0
 1351 00bb 03       		.uleb128 0x3
 1352 00bc 0E       		.uleb128 0xe
 1353 00bd 3A       		.uleb128 0x3a
 1354 00be 0B       		.uleb128 0xb
 1355 00bf 3B       		.uleb128 0x3b
 1356 00c0 05       		.uleb128 0x5
 1357 00c1 27       		.uleb128 0x27
 1358 00c2 19       		.uleb128 0x19
 1359 00c3 20       		.uleb128 0x20
 1360 00c4 0B       		.uleb128 0xb
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccW8BzhS.s 			page 41


 1361 00c5 00       		.byte	0
 1362 00c6 00       		.byte	0
 1363 00c7 12       		.uleb128 0x12
 1364 00c8 2E       		.uleb128 0x2e
 1365 00c9 01       		.byte	0x1
 1366 00ca 3F       		.uleb128 0x3f
 1367 00cb 19       		.uleb128 0x19
 1368 00cc 03       		.uleb128 0x3
 1369 00cd 0E       		.uleb128 0xe
 1370 00ce 3A       		.uleb128 0x3a
 1371 00cf 0B       		.uleb128 0xb
 1372 00d0 3B       		.uleb128 0x3b
 1373 00d1 05       		.uleb128 0x5
 1374 00d2 27       		.uleb128 0x27
 1375 00d3 19       		.uleb128 0x19
 1376 00d4 11       		.uleb128 0x11
 1377 00d5 01       		.uleb128 0x1
 1378 00d6 12       		.uleb128 0x12
 1379 00d7 06       		.uleb128 0x6
 1380 00d8 40       		.uleb128 0x40
 1381 00d9 18       		.uleb128 0x18
 1382 00da 9742     		.uleb128 0x2117
 1383 00dc 19       		.uleb128 0x19
 1384 00dd 01       		.uleb128 0x1
 1385 00de 13       		.uleb128 0x13
 1386 00df 00       		.byte	0
 1387 00e0 00       		.byte	0
 1388 00e1 13       		.uleb128 0x13
 1389 00e2 1D       		.uleb128 0x1d
 1390 00e3 00       		.byte	0
 1391 00e4 31       		.uleb128 0x31
 1392 00e5 13       		.uleb128 0x13
 1393 00e6 11       		.uleb128 0x11
 1394 00e7 01       		.uleb128 0x1
 1395 00e8 12       		.uleb128 0x12
 1396 00e9 06       		.uleb128 0x6
 1397 00ea 58       		.uleb128 0x58
 1398 00eb 0B       		.uleb128 0xb
 1399 00ec 59       		.uleb128 0x59
 1400 00ed 05       		.uleb128 0x5
 1401 00ee 00       		.byte	0
 1402 00ef 00       		.byte	0
 1403 00f0 14       		.uleb128 0x14
 1404 00f1 2E       		.uleb128 0x2e
 1405 00f2 01       		.byte	0x1
 1406 00f3 03       		.uleb128 0x3
 1407 00f4 0E       		.uleb128 0xe
 1408 00f5 3A       		.uleb128 0x3a
 1409 00f6 0B       		.uleb128 0xb
 1410 00f7 3B       		.uleb128 0x3b
 1411 00f8 05       		.uleb128 0x5
 1412 00f9 27       		.uleb128 0x27
 1413 00fa 19       		.uleb128 0x19
 1414 00fb 20       		.uleb128 0x20
 1415 00fc 0B       		.uleb128 0xb
 1416 00fd 01       		.uleb128 0x1
 1417 00fe 13       		.uleb128 0x13
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccW8BzhS.s 			page 42


 1418 00ff 00       		.byte	0
 1419 0100 00       		.byte	0
 1420 0101 15       		.uleb128 0x15
 1421 0102 34       		.uleb128 0x34
 1422 0103 00       		.byte	0
 1423 0104 03       		.uleb128 0x3
 1424 0105 0E       		.uleb128 0xe
 1425 0106 3A       		.uleb128 0x3a
 1426 0107 0B       		.uleb128 0xb
 1427 0108 3B       		.uleb128 0x3b
 1428 0109 05       		.uleb128 0x5
 1429 010a 49       		.uleb128 0x49
 1430 010b 13       		.uleb128 0x13
 1431 010c 00       		.byte	0
 1432 010d 00       		.byte	0
 1433 010e 16       		.uleb128 0x16
 1434 010f 34       		.uleb128 0x34
 1435 0110 00       		.byte	0
 1436 0111 03       		.uleb128 0x3
 1437 0112 0E       		.uleb128 0xe
 1438 0113 3A       		.uleb128 0x3a
 1439 0114 0B       		.uleb128 0xb
 1440 0115 3B       		.uleb128 0x3b
 1441 0116 05       		.uleb128 0x5
 1442 0117 49       		.uleb128 0x49
 1443 0118 13       		.uleb128 0x13
 1444 0119 02       		.uleb128 0x2
 1445 011a 17       		.uleb128 0x17
 1446 011b 00       		.byte	0
 1447 011c 00       		.byte	0
 1448 011d 17       		.uleb128 0x17
 1449 011e 1D       		.uleb128 0x1d
 1450 011f 00       		.byte	0
 1451 0120 31       		.uleb128 0x31
 1452 0121 13       		.uleb128 0x13
 1453 0122 52       		.uleb128 0x52
 1454 0123 01       		.uleb128 0x1
 1455 0124 55       		.uleb128 0x55
 1456 0125 17       		.uleb128 0x17
 1457 0126 58       		.uleb128 0x58
 1458 0127 0B       		.uleb128 0xb
 1459 0128 59       		.uleb128 0x59
 1460 0129 05       		.uleb128 0x5
 1461 012a 00       		.byte	0
 1462 012b 00       		.byte	0
 1463 012c 18       		.uleb128 0x18
 1464 012d 1D       		.uleb128 0x1d
 1465 012e 01       		.byte	0x1
 1466 012f 31       		.uleb128 0x31
 1467 0130 13       		.uleb128 0x13
 1468 0131 11       		.uleb128 0x11
 1469 0132 01       		.uleb128 0x1
 1470 0133 12       		.uleb128 0x12
 1471 0134 06       		.uleb128 0x6
 1472 0135 58       		.uleb128 0x58
 1473 0136 0B       		.uleb128 0xb
 1474 0137 59       		.uleb128 0x59
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccW8BzhS.s 			page 43


 1475 0138 05       		.uleb128 0x5
 1476 0139 01       		.uleb128 0x1
 1477 013a 13       		.uleb128 0x13
 1478 013b 00       		.byte	0
 1479 013c 00       		.byte	0
 1480 013d 19       		.uleb128 0x19
 1481 013e 0B       		.uleb128 0xb
 1482 013f 01       		.byte	0x1
 1483 0140 11       		.uleb128 0x11
 1484 0141 01       		.uleb128 0x1
 1485 0142 12       		.uleb128 0x12
 1486 0143 06       		.uleb128 0x6
 1487 0144 00       		.byte	0
 1488 0145 00       		.byte	0
 1489 0146 1A       		.uleb128 0x1a
 1490 0147 34       		.uleb128 0x34
 1491 0148 00       		.byte	0
 1492 0149 31       		.uleb128 0x31
 1493 014a 13       		.uleb128 0x13
 1494 014b 00       		.byte	0
 1495 014c 00       		.byte	0
 1496 014d 1B       		.uleb128 0x1b
 1497 014e 898201   		.uleb128 0x4109
 1498 0151 00       		.byte	0
 1499 0152 11       		.uleb128 0x11
 1500 0153 01       		.uleb128 0x1
 1501 0154 31       		.uleb128 0x31
 1502 0155 13       		.uleb128 0x13
 1503 0156 00       		.byte	0
 1504 0157 00       		.byte	0
 1505 0158 1C       		.uleb128 0x1c
 1506 0159 26       		.uleb128 0x26
 1507 015a 00       		.byte	0
 1508 015b 49       		.uleb128 0x49
 1509 015c 13       		.uleb128 0x13
 1510 015d 00       		.byte	0
 1511 015e 00       		.byte	0
 1512 015f 1D       		.uleb128 0x1d
 1513 0160 34       		.uleb128 0x34
 1514 0161 00       		.byte	0
 1515 0162 03       		.uleb128 0x3
 1516 0163 0E       		.uleb128 0xe
 1517 0164 3A       		.uleb128 0x3a
 1518 0165 0B       		.uleb128 0xb
 1519 0166 3B       		.uleb128 0x3b
 1520 0167 05       		.uleb128 0x5
 1521 0168 49       		.uleb128 0x49
 1522 0169 13       		.uleb128 0x13
 1523 016a 3F       		.uleb128 0x3f
 1524 016b 19       		.uleb128 0x19
 1525 016c 3C       		.uleb128 0x3c
 1526 016d 19       		.uleb128 0x19
 1527 016e 00       		.byte	0
 1528 016f 00       		.byte	0
 1529 0170 1E       		.uleb128 0x1e
 1530 0171 34       		.uleb128 0x34
 1531 0172 00       		.byte	0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccW8BzhS.s 			page 44


 1532 0173 03       		.uleb128 0x3
 1533 0174 0E       		.uleb128 0xe
 1534 0175 3A       		.uleb128 0x3a
 1535 0176 0B       		.uleb128 0xb
 1536 0177 3B       		.uleb128 0x3b
 1537 0178 0B       		.uleb128 0xb
 1538 0179 49       		.uleb128 0x49
 1539 017a 13       		.uleb128 0x13
 1540 017b 3F       		.uleb128 0x3f
 1541 017c 19       		.uleb128 0x19
 1542 017d 3C       		.uleb128 0x3c
 1543 017e 19       		.uleb128 0x19
 1544 017f 00       		.byte	0
 1545 0180 00       		.byte	0
 1546 0181 1F       		.uleb128 0x1f
 1547 0182 2E       		.uleb128 0x2e
 1548 0183 00       		.byte	0
 1549 0184 3F       		.uleb128 0x3f
 1550 0185 19       		.uleb128 0x19
 1551 0186 3C       		.uleb128 0x3c
 1552 0187 19       		.uleb128 0x19
 1553 0188 6E       		.uleb128 0x6e
 1554 0189 0E       		.uleb128 0xe
 1555 018a 03       		.uleb128 0x3
 1556 018b 0E       		.uleb128 0xe
 1557 018c 3A       		.uleb128 0x3a
 1558 018d 0B       		.uleb128 0xb
 1559 018e 3B       		.uleb128 0x3b
 1560 018f 05       		.uleb128 0x5
 1561 0190 00       		.byte	0
 1562 0191 00       		.byte	0
 1563 0192 20       		.uleb128 0x20
 1564 0193 2E       		.uleb128 0x2e
 1565 0194 00       		.byte	0
 1566 0195 3F       		.uleb128 0x3f
 1567 0196 19       		.uleb128 0x19
 1568 0197 3C       		.uleb128 0x3c
 1569 0198 19       		.uleb128 0x19
 1570 0199 6E       		.uleb128 0x6e
 1571 019a 0E       		.uleb128 0xe
 1572 019b 03       		.uleb128 0x3
 1573 019c 0E       		.uleb128 0xe
 1574 019d 3A       		.uleb128 0x3a
 1575 019e 0B       		.uleb128 0xb
 1576 019f 3B       		.uleb128 0x3b
 1577 01a0 0B       		.uleb128 0xb
 1578 01a1 00       		.byte	0
 1579 01a2 00       		.byte	0
 1580 01a3 00       		.byte	0
 1581              		.section	.debug_loc,"",%progbits
 1582              	.Ldebug_loc0:
 1583              	.LLST0:
 1584 0000 1A000000 		.4byte	.LVL0
 1585 0004 3B000000 		.4byte	.LVL1-1
 1586 0008 0100     		.2byte	0x1
 1587 000a 50       		.byte	0x50
 1588 000b 00000000 		.4byte	0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccW8BzhS.s 			page 45


 1589 000f 00000000 		.4byte	0
 1590              		.section	.debug_aranges,"",%progbits
 1591 0000 24000000 		.4byte	0x24
 1592 0004 0200     		.2byte	0x2
 1593 0006 00000000 		.4byte	.Ldebug_info0
 1594 000a 04       		.byte	0x4
 1595 000b 00       		.byte	0
 1596 000c 0000     		.2byte	0
 1597 000e 0000     		.2byte	0
 1598 0010 00000000 		.4byte	.LFB1
 1599 0014 58000000 		.4byte	.LFE1-.LFB1
 1600 0018 00000000 		.4byte	.LFB2
 1601 001c EC000000 		.4byte	.LFE2-.LFB2
 1602 0020 00000000 		.4byte	0
 1603 0024 00000000 		.4byte	0
 1604              		.section	.debug_ranges,"",%progbits
 1605              	.Ldebug_ranges0:
 1606 0000 14000000 		.4byte	.LBB10
 1607 0004 16000000 		.4byte	.LBE10
 1608 0008 1C000000 		.4byte	.LBB14
 1609 000c 1E000000 		.4byte	.LBE14
 1610 0010 20000000 		.4byte	.LBB15
 1611 0014 2C000000 		.4byte	.LBE15
 1612 0018 00000000 		.4byte	0
 1613 001c 00000000 		.4byte	0
 1614 0020 00000000 		.4byte	.LFB1
 1615 0024 58000000 		.4byte	.LFE1
 1616 0028 00000000 		.4byte	.LFB2
 1617 002c EC000000 		.4byte	.LFE2
 1618 0030 00000000 		.4byte	0
 1619 0034 00000000 		.4byte	0
 1620              		.section	.debug_line,"",%progbits
 1621              	.Ldebug_line0:
 1622 0000 32010000 		.section	.debug_str,"MS",%progbits,1
 1622      0200AF00 
 1622      00000201 
 1622      FB0E0D00 
 1622      01010101 
 1623              	.LASF84:
 1624 0000 43617053 		.ascii	"CapSense_FLASH_STRUCT\000"
 1624      656E7365 
 1624      5F464C41 
 1624      53485F53 
 1624      54525543 
 1625              	.LASF54:
 1626 0016 77646774 		.ascii	"wdgtList\000"
 1626      4C697374 
 1626      00
 1627              	.LASF59:
 1628 001f 736E7254 		.ascii	"snrTestRawCount\000"
 1628      65737452 
 1628      6177436F 
 1628      756E7400 
 1629              	.LASF61:
 1630 002f 7363616E 		.ascii	"scanCurrentISC\000"
 1630      43757272 
 1630      656E7449 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccW8BzhS.s 			page 46


 1630      534300
 1631              	.LASF36:
 1632 003e 62736C6E 		.ascii	"bsln\000"
 1632      00
 1633              	.LASF26:
 1634 0043 69646163 		.ascii	"idacGainIndex\000"
 1634      4761696E 
 1634      496E6465 
 1634      7800
 1635              	.LASF38:
 1636 0051 64696666 		.ascii	"diff\000"
 1636      00
 1637              	.LASF79:
 1638 0056 746F7461 		.ascii	"totalNumSns\000"
 1638      6C4E756D 
 1638      536E7300 
 1639              	.LASF25:
 1640 0062 69646163 		.ascii	"idacMod\000"
 1640      4D6F6400 
 1641              	.LASF70:
 1642 006a 64725368 		.ascii	"drShift\000"
 1642      69667400 
 1643              	.LASF2:
 1644 0072 73686F72 		.ascii	"short int\000"
 1644      7420696E 
 1644      7400
 1645              	.LASF63:
 1646 007c 6873696F 		.ascii	"hsiomPtr\000"
 1646      6D507472 
 1646      00
 1647              	.LASF23:
 1648 0085 6F6E4465 		.ascii	"onDebounce\000"
 1648      626F756E 
 1648      636500
 1649              	.LASF29:
 1650 0090 73697A65 		.ascii	"sizetype\000"
 1650      74797065 
 1650      00
 1651              	.LASF82:
 1652 0099 43617053 		.ascii	"CapSense_FLASH_WD_STRUCT\000"
 1652      656E7365 
 1652      5F464C41 
 1652      53485F57 
 1652      445F5354 
 1653              	.LASF43:
 1654 00b2 636F6E66 		.ascii	"configId\000"
 1654      69674964 
 1654      00
 1655              	.LASF64:
 1656 00bb 70635074 		.ascii	"pcPtr\000"
 1656      7200
 1657              	.LASF40:
 1658 00c1 69646163 		.ascii	"idacComp\000"
 1658      436F6D70 
 1658      00
 1659              	.LASF52:
 1660 00ca 63736430 		.ascii	"csd0Config\000"
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccW8BzhS.s 			page 47


 1660      436F6E66 
 1660      696700
 1661              	.LASF6:
 1662 00d5 6C6F6E67 		.ascii	"long long int\000"
 1662      206C6F6E 
 1662      6720696E 
 1662      7400
 1663              	.LASF67:
 1664 00e3 6873696F 		.ascii	"hsiomMask\000"
 1664      6D4D6173 
 1664      6B00
 1665              	.LASF28:
 1666 00ed 736E7343 		.ascii	"snsClkSource\000"
 1666      6C6B536F 
 1666      75726365 
 1666      00
 1667              	.LASF86:
 1668 00fa 43617053 		.ascii	"CapSense_CSDPostSingleScan\000"
 1668      656E7365 
 1668      5F435344 
 1668      506F7374 
 1668      53696E67 
 1669              	.LASF20:
 1670 0115 6E6F6973 		.ascii	"noiseTh\000"
 1670      65546800 
 1671              	.LASF44:
 1672 011d 64657669 		.ascii	"deviceId\000"
 1672      63654964 
 1672      00
 1673              	.LASF10:
 1674 0126 75696E74 		.ascii	"uint16\000"
 1674      313600
 1675              	.LASF77:
 1676 012d 70747232 		.ascii	"ptr2DebounceArr\000"
 1676      4465626F 
 1676      756E6365 
 1676      41727200 
 1677              	.LASF9:
 1678 013d 75696E74 		.ascii	"uint8\000"
 1678      3800
 1679              	.LASF103:
 1680 0143 443A5C5F 		.ascii	"D:\\_Project\\_MD\\cypress_button\\EZIIC_button.cyd"
 1680      50726F6A 
 1680      6563745C 
 1680      5F4D445C 
 1680      63797072 
 1681 0172 736E00   		.ascii	"sn\000"
 1682              	.LASF66:
 1683 0175 70735074 		.ascii	"psPtr\000"
 1683      7200
 1684              	.LASF27:
 1685 017b 736E7343 		.ascii	"snsClk\000"
 1685      6C6B00
 1686              	.LASF104:
 1687 0182 43617053 		.ascii	"CapSense_SsCSDPostScan\000"
 1687      656E7365 
 1687      5F537343 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccW8BzhS.s 			page 48


 1687      5344506F 
 1687      73745363 
 1688              	.LASF12:
 1689 0199 666C6F61 		.ascii	"float\000"
 1689      7400
 1690              	.LASF107:
 1691 019f 63757253 		.ascii	"curSnsIOPtr\000"
 1691      6E73494F 
 1691      50747200 
 1692              	.LASF35:
 1693 01ab 43617053 		.ascii	"CapSense_RAM_WD_LIST_STRUCT\000"
 1693      656E7365 
 1693      5F52414D 
 1693      5F57445F 
 1693      4C495354 
 1694              	.LASF57:
 1695 01c7 736E7254 		.ascii	"snrTestSensorId\000"
 1695      65737453 
 1695      656E736F 
 1695      72496400 
 1696              	.LASF31:
 1697 01d7 43617053 		.ascii	"CapSense_RAM_WD_BUTTON_STRUCT\000"
 1697      656E7365 
 1697      5F52414D 
 1697      5F57445F 
 1697      42555454 
 1698              	.LASF99:
 1699 01f5 43617053 		.ascii	"CapSense_SsPostAllWidgetsScan\000"
 1699      656E7365 
 1699      5F537350 
 1699      6F737441 
 1699      6C6C5769 
 1700              	.LASF14:
 1701 0213 63686172 		.ascii	"char\000"
 1701      00
 1702              	.LASF34:
 1703 0218 72696768 		.ascii	"right\000"
 1703      7400
 1704              	.LASF4:
 1705 021e 6C6F6E67 		.ascii	"long int\000"
 1705      20696E74 
 1705      00
 1706              	.LASF71:
 1707 0227 73686966 		.ascii	"shift\000"
 1707      7400
 1708              	.LASF80:
 1709 022d 77646774 		.ascii	"wdgtType\000"
 1709      54797065 
 1709      00
 1710              	.LASF106:
 1711 0236 70747257 		.ascii	"ptrWdgt\000"
 1711      64677400 
 1712              	.LASF74:
 1713 023e 70747232 		.ascii	"ptr2WdgtRam\000"
 1713      57646774 
 1713      52616D00 
 1714              	.LASF72:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccW8BzhS.s 			page 49


 1715 024a 43617053 		.ascii	"CapSense_FLASH_IO_STRUCT\000"
 1715      656E7365 
 1715      5F464C41 
 1715      53485F49 
 1715      4F5F5354 
 1716              	.LASF88:
 1717 0263 43617053 		.ascii	"CapSense_dsRam\000"
 1717      656E7365 
 1717      5F647352 
 1717      616D00
 1718              	.LASF19:
 1719 0272 66696E67 		.ascii	"fingerTh\000"
 1719      65725468 
 1719      00
 1720              	.LASF81:
 1721 027b 6E756D43 		.ascii	"numCols\000"
 1721      6F6C7300 
 1722              	.LASF1:
 1723 0283 756E7369 		.ascii	"unsigned char\000"
 1723      676E6564 
 1723      20636861 
 1723      7200
 1724              	.LASF22:
 1725 0291 68797374 		.ascii	"hysteresis\000"
 1725      65726573 
 1725      697300
 1726              	.LASF46:
 1727 029c 74756E65 		.ascii	"tunerCmd\000"
 1727      72436D64 
 1727      00
 1728              	.LASF85:
 1729 02a5 6C6F6E67 		.ascii	"long double\000"
 1729      20646F75 
 1729      626C6500 
 1730              	.LASF50:
 1731 02b1 77646774 		.ascii	"wdgtStatus\000"
 1731      53746174 
 1731      757300
 1732              	.LASF102:
 1733 02bc 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_INT.c\000"
 1733      72617465 
 1733      645F536F 
 1733      75726365 
 1733      5C50536F 
 1734              	.LASF24:
 1735 02e2 6C6F7742 		.ascii	"lowBslnRst\000"
 1735      736C6E52 
 1735      737400
 1736              	.LASF90:
 1737 02ed 43617053 		.ascii	"CapSense_widgetIndex\000"
 1737      656E7365 
 1737      5F776964 
 1737      67657449 
 1737      6E646578 
 1738              	.LASF16:
 1739 0302 43617053 		.ascii	"CapSense_THRESHOLD_TYPE\000"
 1739      656E7365 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccW8BzhS.s 			page 50


 1739      5F544852 
 1739      4553484F 
 1739      4C445F54 
 1740              	.LASF97:
 1741 031a 43617053 		.ascii	"CapSense_SsCSDConnectSensorExt\000"
 1741      656E7365 
 1741      5F537343 
 1741      5344436F 
 1741      6E6E6563 
 1742              	.LASF42:
 1743 0339 43617053 		.ascii	"CapSense_RAM_SNS_LIST_STRUCT\000"
 1743      656E7365 
 1743      5F52414D 
 1743      5F534E53 
 1743      5F4C4953 
 1744              	.LASF7:
 1745 0356 6C6F6E67 		.ascii	"long long unsigned int\000"
 1745      206C6F6E 
 1745      6720756E 
 1745      7369676E 
 1745      65642069 
 1746              	.LASF78:
 1747 036d 73746174 		.ascii	"staticConfig\000"
 1747      6963436F 
 1747      6E666967 
 1747      00
 1748              	.LASF8:
 1749 037a 756E7369 		.ascii	"unsigned int\000"
 1749      676E6564 
 1749      20696E74 
 1749      00
 1750              	.LASF49:
 1751 0387 77646774 		.ascii	"wdgtEnable\000"
 1751      456E6162 
 1751      6C6500
 1752              	.LASF15:
 1753 0392 72656733 		.ascii	"reg32\000"
 1753      3200
 1754              	.LASF41:
 1755 0398 43617053 		.ascii	"CapSense_RAM_SNS_STRUCT\000"
 1755      656E7365 
 1755      5F52414D 
 1755      5F534E53 
 1755      5F535452 
 1756              	.LASF17:
 1757 03b0 43617053 		.ascii	"CapSense_LOW_BSLN_RST_TYPE\000"
 1757      656E7365 
 1757      5F4C4F57 
 1757      5F42534C 
 1757      4E5F5253 
 1758              	.LASF48:
 1759 03cb 73746174 		.ascii	"status\000"
 1759      757300
 1760              	.LASF45:
 1761 03d2 6877436C 		.ascii	"hwClock\000"
 1761      6F636B00 
 1762              	.LASF58:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccW8BzhS.s 			page 51


 1763 03da 736E7254 		.ascii	"snrTestScanCounter\000"
 1763      65737453 
 1763      63616E43 
 1763      6F756E74 
 1763      657200
 1764              	.LASF33:
 1765 03ed 6C656674 		.ascii	"left\000"
 1765      00
 1766              	.LASF18:
 1767 03f2 7265736F 		.ascii	"resolution\000"
 1767      6C757469 
 1767      6F6E00
 1768              	.LASF3:
 1769 03fd 73686F72 		.ascii	"short unsigned int\000"
 1769      7420756E 
 1769      7369676E 
 1769      65642069 
 1769      6E7400
 1770              	.LASF98:
 1771 0410 43617053 		.ascii	"CapSense_SsCSDStartSample\000"
 1771      656E7365 
 1771      5F537343 
 1771      53445374 
 1771      61727453 
 1772              	.LASF55:
 1773 042a 736E734C 		.ascii	"snsList\000"
 1773      69737400 
 1774              	.LASF92:
 1775 0432 43617053 		.ascii	"CapSense_requestScanAllWidget\000"
 1775      656E7365 
 1775      5F726571 
 1775      75657374 
 1775      5363616E 
 1776              	.LASF53:
 1777 0450 6D6F6443 		.ascii	"modCsdClk\000"
 1777      7364436C 
 1777      6B00
 1778              	.LASF47:
 1779 045a 7363616E 		.ascii	"scanCounter\000"
 1779      436F756E 
 1779      74657200 
 1780              	.LASF21:
 1781 0466 6E4E6F69 		.ascii	"nNoiseTh\000"
 1781      73655468 
 1781      00
 1782              	.LASF62:
 1783 046f 43617053 		.ascii	"CapSense_RAM_STRUCT\000"
 1783      656E7365 
 1783      5F52414D 
 1783      5F535452 
 1783      55435400 
 1784              	.LASF105:
 1785 0483 43617053 		.ascii	"CapSense_SsCSDInitNextScan\000"
 1785      656E7365 
 1785      5F537343 
 1785      5344496E 
 1785      69744E65 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccW8BzhS.s 			page 52


 1786              	.LASF11:
 1787 049e 75696E74 		.ascii	"uint32\000"
 1787      333200
 1788              	.LASF60:
 1789 04a5 7363616E 		.ascii	"scanCsdISC\000"
 1789      43736449 
 1789      534300
 1790              	.LASF5:
 1791 04b0 6C6F6E67 		.ascii	"long unsigned int\000"
 1791      20756E73 
 1791      69676E65 
 1791      6420696E 
 1791      7400
 1792              	.LASF13:
 1793 04c2 646F7562 		.ascii	"double\000"
 1793      6C6500
 1794              	.LASF87:
 1795 04c9 43617053 		.ascii	"CapSense_CSDPostMultiScan\000"
 1795      656E7365 
 1795      5F435344 
 1795      506F7374 
 1795      4D756C74 
 1796              	.LASF37:
 1797 04e3 62736C6E 		.ascii	"bslnExt\000"
 1797      45787400 
 1798              	.LASF69:
 1799 04eb 6873696F 		.ascii	"hsiomShift\000"
 1799      6D536869 
 1799      667400
 1800              	.LASF93:
 1801 04f6 43617053 		.ascii	"CapSense_curRamSnsPtr\000"
 1801      656E7365 
 1801      5F637572 
 1801      52616D53 
 1801      6E735074 
 1802              	.LASF65:
 1803 050c 64725074 		.ascii	"drPtr\000"
 1803      7200
 1804              	.LASF68:
 1805 0512 6D61736B 		.ascii	"mask\000"
 1805      00
 1806              	.LASF39:
 1807 0517 6E656742 		.ascii	"negBslnRstCnt\000"
 1807      736C6E52 
 1807      7374436E 
 1807      7400
 1808              	.LASF96:
 1809 0525 43617053 		.ascii	"CapSense_SsCSDSetUpIdacs\000"
 1809      656E7365 
 1809      5F537343 
 1809      53445365 
 1809      74557049 
 1810              	.LASF75:
 1811 053e 70747232 		.ascii	"ptr2SnsRam\000"
 1811      536E7352 
 1811      616D00
 1812              	.LASF0:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccW8BzhS.s 			page 53


 1813 0549 7369676E 		.ascii	"signed char\000"
 1813      65642063 
 1813      68617200 
 1814              	.LASF76:
 1815 0555 70747232 		.ascii	"ptr2FltrHistory\000"
 1815      466C7472 
 1815      48697374 
 1815      6F727900 
 1816              	.LASF83:
 1817 0565 77646774 		.ascii	"wdgtArray\000"
 1817      41727261 
 1817      7900
 1818              	.LASF101:
 1819 056f 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1819      43313120 
 1819      352E342E 
 1819      31203230 
 1819      31363036 
 1820 05a2 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1820      20726576 
 1820      6973696F 
 1820      6E203233 
 1820      37373135 
 1821 05d5 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 1821      66756E63 
 1821      74696F6E 
 1821      2D736563 
 1821      74696F6E 
 1822              	.LASF89:
 1823 05fd 43617053 		.ascii	"CapSense_dsFlash\000"
 1823      656E7365 
 1823      5F647346 
 1823      6C617368 
 1823      00
 1824              	.LASF30:
 1825 060e 43617053 		.ascii	"CapSense_RAM_WD_BASE_STRUCT\000"
 1825      656E7365 
 1825      5F52414D 
 1825      5F57445F 
 1825      42415345 
 1826              	.LASF56:
 1827 062a 736E7254 		.ascii	"snrTestWidgetId\000"
 1827      65737457 
 1827      69646765 
 1827      74496400 
 1828              	.LASF32:
 1829 063a 646F776E 		.ascii	"down\000"
 1829      00
 1830              	.LASF94:
 1831 063f 43617053 		.ascii	"CapSense_scanFreqIndex\000"
 1831      656E7365 
 1831      5F736361 
 1831      6E467265 
 1831      71496E64 
 1832              	.LASF95:
 1833 0656 43617053 		.ascii	"CapSense_configCsd\000"
 1833      656E7365 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccW8BzhS.s 			page 54


 1833      5F636F6E 
 1833      66696743 
 1833      736400
 1834              	.LASF73:
 1835 0669 70747232 		.ascii	"ptr2SnsFlash\000"
 1835      536E7346 
 1835      6C617368 
 1835      00
 1836              	.LASF51:
 1837 0676 736E7353 		.ascii	"snsStatus\000"
 1837      74617475 
 1837      7300
 1838              	.LASF91:
 1839 0680 43617053 		.ascii	"CapSense_sensorIndex\000"
 1839      656E7365 
 1839      5F73656E 
 1839      736F7249 
 1839      6E646578 
 1840              	.LASF100:
 1841 0695 43617053 		.ascii	"CapSense_CSDDisconnectSns\000"
 1841      656E7365 
 1841      5F435344 
 1841      44697363 
 1841      6F6E6E65 
 1842              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran

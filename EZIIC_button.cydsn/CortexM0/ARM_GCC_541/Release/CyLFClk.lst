ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLFClk.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CySysClkWcoSetHighPowerMode,"ax",%progbits
  20              		.align	1
  21              		.code	16
  22              		.thumb_func
  23              		.type	CySysClkWcoSetHighPowerMode, %function
  24              	CySysClkWcoSetHighPowerMode:
  25              	.LFB0:
  26              		.file 1 "Generated_Source\\PSoC4\\CyLFClk.h"
   1:Generated_Source\PSoC4/CyLFClk.h **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLFClk.h **** * \file .h
   3:Generated_Source\PSoC4/CyLFClk.h **** * \version 1.20
   4:Generated_Source\PSoC4/CyLFClk.h **** *
   5:Generated_Source\PSoC4/CyLFClk.h **** * \brief
   6:Generated_Source\PSoC4/CyLFClk.h **** *  This file provides the source code to API for the lfclk and wdt.
   7:Generated_Source\PSoC4/CyLFClk.h **** *
   8:Generated_Source\PSoC4/CyLFClk.h **** ********************************************************************************
   9:Generated_Source\PSoC4/CyLFClk.h **** * \copyright
  10:Generated_Source\PSoC4/CyLFClk.h **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  11:Generated_Source\PSoC4/CyLFClk.h **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC4/CyLFClk.h **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC4/CyLFClk.h **** * the software package with which this file was provided.
  14:Generated_Source\PSoC4/CyLFClk.h **** *******************************************************************************/
  15:Generated_Source\PSoC4/CyLFClk.h **** 
  16:Generated_Source\PSoC4/CyLFClk.h **** 
  17:Generated_Source\PSoC4/CyLFClk.h **** #if !defined(CY_LFCLK_CYLIB_H)
  18:Generated_Source\PSoC4/CyLFClk.h **** #define CY_LFCLK_CYLIB_H
  19:Generated_Source\PSoC4/CyLFClk.h **** 
  20:Generated_Source\PSoC4/CyLFClk.h **** #include "cytypes.h"
  21:Generated_Source\PSoC4/CyLFClk.h **** #include "cydevice_trm.h"
  22:Generated_Source\PSoC4/CyLFClk.h **** 
  23:Generated_Source\PSoC4/CyLFClk.h **** #define CY_IP_WCO_WDT_EN           (-1 == 1)
  24:Generated_Source\PSoC4/CyLFClk.h **** 
  25:Generated_Source\PSoC4/CyLFClk.h **** typedef enum
  26:Generated_Source\PSoC4/CyLFClk.h **** {
  27:Generated_Source\PSoC4/CyLFClk.h ****     CY_SYS_TIMER_WAIT = 0u,
  28:Generated_Source\PSoC4/CyLFClk.h ****     CY_SYS_TIMER_INTERRUPT = 1u
  29:Generated_Source\PSoC4/CyLFClk.h **** } cy_sys_timer_delaytype_enum;
  30:Generated_Source\PSoC4/CyLFClk.h **** 
  31:Generated_Source\PSoC4/CyLFClk.h **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 2


  32:Generated_Source\PSoC4/CyLFClk.h **** /***************************************
  33:Generated_Source\PSoC4/CyLFClk.h **** *    Function Prototypes
  34:Generated_Source\PSoC4/CyLFClk.h **** ***************************************/
  35:Generated_Source\PSoC4/CyLFClk.h **** /**
  36:Generated_Source\PSoC4/CyLFClk.h **** * \addtogroup group_general
  37:Generated_Source\PSoC4/CyLFClk.h **** * @{
  38:Generated_Source\PSoC4/CyLFClk.h **** */
  39:Generated_Source\PSoC4/CyLFClk.h **** /* Clocks API */
  40:Generated_Source\PSoC4/CyLFClk.h **** void CySysClkIloStart(void);
  41:Generated_Source\PSoC4/CyLFClk.h **** void CySysClkIloStop(void);
  42:Generated_Source\PSoC4/CyLFClk.h **** /** @} general */
  43:Generated_Source\PSoC4/CyLFClk.h **** 
  44:Generated_Source\PSoC4/CyLFClk.h **** /**
  45:Generated_Source\PSoC4/CyLFClk.h **** * \addtogroup group_compensate
  46:Generated_Source\PSoC4/CyLFClk.h **** * @{
  47:Generated_Source\PSoC4/CyLFClk.h **** */
  48:Generated_Source\PSoC4/CyLFClk.h **** cystatus CySysClkIloCompensate(uint32 desiredDelay, uint32 *compensatedCycles);
  49:Generated_Source\PSoC4/CyLFClk.h **** void CySysClkIloStartMeasurement(void);
  50:Generated_Source\PSoC4/CyLFClk.h **** void CySysClkIloStopMeasurement(void);
  51:Generated_Source\PSoC4/CyLFClk.h **** /** @} compensate */
  52:Generated_Source\PSoC4/CyLFClk.h **** 
  53:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2 && (!CY_IP_CPUSS))
  54:Generated_Source\PSoC4/CyLFClk.h ****     /**
  55:Generated_Source\PSoC4/CyLFClk.h ****     * \addtogroup group_compensate
  56:Generated_Source\PSoC4/CyLFClk.h ****     * @{
  57:Generated_Source\PSoC4/CyLFClk.h ****     */
  58:Generated_Source\PSoC4/CyLFClk.h ****     cystatus CySysClkIloTrim(uint32 mode, int32 *iloAccuracyInPPT);
  59:Generated_Source\PSoC4/CyLFClk.h ****     cystatus CySysClkIloRestoreFactoryTrim(void);
  60:Generated_Source\PSoC4/CyLFClk.h ****     /** @} compensate */
  61:Generated_Source\PSoC4/CyLFClk.h ****     cystatus CySysClkIloUpdateTrimReg(int32* iloAccuracyInPPT);
  62:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && (!CY_IP_CPUSS)) */
  63:Generated_Source\PSoC4/CyLFClk.h **** 
  64:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2 && CY_IP_WCO)
  65:Generated_Source\PSoC4/CyLFClk.h ****     /**
  66:Generated_Source\PSoC4/CyLFClk.h ****     * \addtogroup group_general
  67:Generated_Source\PSoC4/CyLFClk.h ****     * @{
  68:Generated_Source\PSoC4/CyLFClk.h ****     */
  69:Generated_Source\PSoC4/CyLFClk.h ****     void CySysClkSetLfclkSource(uint32 source);
  70:Generated_Source\PSoC4/CyLFClk.h ****     /** @} group_general */
  71:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && CY_IP_WCO) */
  72:Generated_Source\PSoC4/CyLFClk.h **** 
  73:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
  74:Generated_Source\PSoC4/CyLFClk.h ****     /**
  75:Generated_Source\PSoC4/CyLFClk.h ****     * \addtogroup group_wco
  76:Generated_Source\PSoC4/CyLFClk.h ****     * @{
  77:Generated_Source\PSoC4/CyLFClk.h ****     */
  78:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysClkWcoStart(void);
  79:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysClkWcoStop(void);
  80:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysClkWcoSetPowerMode(uint32 mode);
  81:Generated_Source\PSoC4/CyLFClk.h ****     void CySysClkWcoClockOutSelect(uint32 clockSel);
  82:Generated_Source\PSoC4/CyLFClk.h ****     /** @} wco */
  83:Generated_Source\PSoC4/CyLFClk.h **** 
  84:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysClkWcoEnabled(void);
  85:Generated_Source\PSoC4/CyLFClk.h **** 
  86:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_WCO) */
  87:Generated_Source\PSoC4/CyLFClk.h **** 
  88:Generated_Source\PSoC4/CyLFClk.h **** typedef void (*cyWdtCallback)(void);
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 3


  89:Generated_Source\PSoC4/CyLFClk.h **** 
  90:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
  91:Generated_Source\PSoC4/CyLFClk.h **** 
  92:Generated_Source\PSoC4/CyLFClk.h ****     typedef void (*cyTimerCallback)(void);
  93:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
  94:Generated_Source\PSoC4/CyLFClk.h **** 
  95:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2)
  96:Generated_Source\PSoC4/CyLFClk.h ****     /**
  97:Generated_Source\PSoC4/CyLFClk.h ****     * \addtogroup group_wdtsrssv2
  98:Generated_Source\PSoC4/CyLFClk.h ****     * @{
  99:Generated_Source\PSoC4/CyLFClk.h ****     */
 100:Generated_Source\PSoC4/CyLFClk.h ****     /* WDT API */
 101:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtLock(void);
 102:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtUnlock(void);
 103:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetMode(uint32 counterNum, uint32 mode);
 104:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetMode(uint32 counterNum);
 105:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetEnabledStatus(uint32 counterNum);
 106:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetClearOnMatch(uint32 counterNum, uint32 enable);
 107:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetClearOnMatch(uint32 counterNum);
 108:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtEnable(uint32 counterMask);
 109:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtDisable(uint32 counterMask);
 110:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetCascade(uint32 cascadeMask);
 111:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetCascade(void);
 112:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetMatch(uint32 counterNum, uint32 match);
 113:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetToggleBit(uint32 bits);
 114:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetToggleBit(void);
 115:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetMatch(uint32 counterNum);
 116:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetCount(uint32 counterNum);
 117:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetInterruptSource(void);
 118:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtClearInterrupt(uint32 counterMask);
 119:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtResetCounters(uint32 countersMask);
 120:Generated_Source\PSoC4/CyLFClk.h ****     cyWdtCallback  CySysWdtSetInterruptCallback(uint32 counterNum, cyWdtCallback function);
 121:Generated_Source\PSoC4/CyLFClk.h ****     cyWdtCallback  CySysWdtGetInterruptCallback(uint32 counterNum);
 122:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDelay(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint32 delay);
 123:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDelayUntilMatch(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint
 124:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWatchdogFeed(uint32 counterNum);
 125:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtEnableCounterIsr(uint32 counterNum);
 126:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtDisableCounterIsr(uint32 counterNum);
 127:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtIsr(void);
 128:Generated_Source\PSoC4/CyLFClk.h ****     /** @} wdtsrssv2 */
 129:Generated_Source\PSoC4/CyLFClk.h **** #else
 130:Generated_Source\PSoC4/CyLFClk.h ****     /**
 131:Generated_Source\PSoC4/CyLFClk.h ****     * \addtogroup group_wdtsrsslite
 132:Generated_Source\PSoC4/CyLFClk.h ****     * @{
 133:Generated_Source\PSoC4/CyLFClk.h ****     */
 134:Generated_Source\PSoC4/CyLFClk.h ****     /* WDT API */
 135:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetEnabledStatus(void);
 136:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtEnable(void);
 137:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtDisable(void);
 138:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetMatch(uint32 match);
 139:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetMatch(void);
 140:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetCount(void);
 141:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetIgnoreBits(uint32 bitsNum);
 142:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetIgnoreBits(void);
 143:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtClearInterrupt(void);
 144:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtMaskInterrupt(void);
 145:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtUnmaskInterrupt(void);
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 4


 146:Generated_Source\PSoC4/CyLFClk.h ****     cyWdtCallback CySysWdtSetInterruptCallback(cyWdtCallback function);
 147:Generated_Source\PSoC4/CyLFClk.h ****     cyWdtCallback CySysWdtGetInterruptCallback(void);
 148:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtIsr(void);
 149:Generated_Source\PSoC4/CyLFClk.h ****     /** @} wdtsrsslite*/
 150:Generated_Source\PSoC4/CyLFClk.h **** #endif  /* (CY_IP_SRSSV2) */
 151:Generated_Source\PSoC4/CyLFClk.h **** 
 152:Generated_Source\PSoC4/CyLFClk.h **** 
 153:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
 154:Generated_Source\PSoC4/CyLFClk.h ****     /**
 155:Generated_Source\PSoC4/CyLFClk.h ****     * \addtogroup group_deepsleepwdt
 156:Generated_Source\PSoC4/CyLFClk.h ****     * @{
 157:Generated_Source\PSoC4/CyLFClk.h ****     */
 158:Generated_Source\PSoC4/CyLFClk.h ****     /* WCO WDT APIs */
 159:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysClkSetTimerSource(uint32 source);
 160:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerSetMode(uint32 counterNum, uint32 mode);
 161:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetMode(uint32 counterNum);
 162:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetEnabledStatus(uint32 counterNum);
 163:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerSetClearOnMatch(uint32 counterNum, uint32 enable);
 164:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetClearOnMatch(uint32 counterNum);
 165:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerEnable(uint32 counterMask);
 166:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDisable(uint32 counterMask);
 167:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerSetCascade(uint32 cascadeMask);
 168:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetCascade(void);
 169:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerSetMatch(uint32 counterNum, uint32 match);
 170:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerSetToggleBit(uint32 bits);
 171:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetToggleBit(void);
 172:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetMatch(uint32 counterNum);
 173:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetCount(uint32 counterNum);
 174:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetInterruptSource(void);
 175:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerClearInterrupt(uint32 counterMask);
 176:Generated_Source\PSoC4/CyLFClk.h ****     cyTimerCallback CySysTimerSetInterruptCallback(uint32 counterNum, cyTimerCallback function);
 177:Generated_Source\PSoC4/CyLFClk.h ****     cyTimerCallback CySysTimerGetInterruptCallback(uint32 counterNum);
 178:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDelay(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint32 delay);
 179:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDelayUntilMatch(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint
 180:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerResetCounters(uint32 countersMask);
 181:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerEnableIsr(uint32 counterNum);
 182:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDisableIsr(uint32 counterNum);
 183:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerIsr(void);
 184:Generated_Source\PSoC4/CyLFClk.h ****     /** @} deepsleepwdt */
 185:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
 186:Generated_Source\PSoC4/CyLFClk.h **** 
 187:Generated_Source\PSoC4/CyLFClk.h **** 
 188:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 189:Generated_Source\PSoC4/CyLFClk.h **** * API Constants
 190:Generated_Source\PSoC4/CyLFClk.h **** *******************************************************************************/
 191:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_UINT16_MAX_VAL    (0xFFFFu)
 192:Generated_Source\PSoC4/CyLFClk.h **** 
 193:Generated_Source\PSoC4/CyLFClk.h **** 
 194:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 195:Generated_Source\PSoC4/CyLFClk.h **** * Clock API Constants
 196:Generated_Source\PSoC4/CyLFClk.h **** *******************************************************************************/
 197:Generated_Source\PSoC4/CyLFClk.h **** 
 198:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkIloStart()/CySysClkIloStop() - implementation definitions */
 199:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_CONFIG_ENABLE                    ((uint32)(( uint32 )0x01u << 31u))
 200:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_DFT_SELECT_DEFAULT_MASK              ((uint32)(( uint32 )0x0fu << 8u ))
 201:Generated_Source\PSoC4/CyLFClk.h **** 
 202:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkIloCompensate() - one ILO clock in uS multiplied on thousand */
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 5


 203:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2)
 204:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_PERIOD_PPH                   ((uint32) (0x0C35u))
 205:Generated_Source\PSoC4/CyLFClk.h **** #else
 206:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_PERIOD_PPH                   ((uint32) (0x09C4u))
 207:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2) */
 208:Generated_Source\PSoC4/CyLFClk.h **** 
 209:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkIloCompensate() - implementation definitions */
 210:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_CALIBR_COMPLETE_MASK             ((uint32)(( uint32 )0x01u << 31u))
 211:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_DFT_LSB_MASK                     ((uint32)(0x00000FFFu))
 212:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_TRIM_OR_COMP_STARTED                 (1u)
 213:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_TRIM_OR_COMP_FINISHED                (0u)
 214:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_COEF_PHUNDRED                        ((uint32) (0x64u))
 215:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_HALF_OF_CLOCK                        ((uint32) ((uint32) CY_SYS_CLK_ILO_PERIOD_P
 216:Generated_Source\PSoC4/CyLFClk.h **** 
 217:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkIloCompensate() - maximum value of desiredDelay argument */
 218:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2)
 219:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_MAX_DELAY_US                     ((uint32) (0xEE6B2800u))
 220:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_PERIOD                       ((uint32) (0x1Fu))
 221:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_FREQ_2MSB                    ((uint32) 5u)
 222:Generated_Source\PSoC4/CyLFClk.h **** #else
 223:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_MAX_DELAY_US                     ((uint32) (0x1E8480u))
 224:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_FREQ_2MSB                    ((uint32) (0x28u ))
 225:Generated_Source\PSoC4/CyLFClk.h **** 
 226:Generated_Source\PSoC4/CyLFClk.h ****     /**********************************************************************************
 227:Generated_Source\PSoC4/CyLFClk.h ****     * CySysClkIloCompensate() - value to walk over oversamling in calculations with 
 228:Generated_Source\PSoC4/CyLFClk.h ****     * srsslite. The oversample can be obtained when ilo frequency in equal 80 KHz and
 229:Generated_Source\PSoC4/CyLFClk.h ****     * desired clocks are 80 000 clocks.
 230:Generated_Source\PSoC4/CyLFClk.h ****     **********************************************************************************/
 231:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_MAX_LITE_NUMBER                     ((uint32) 53600u)
 232:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2) */
 233:Generated_Source\PSoC4/CyLFClk.h **** 
 234:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_FREQ_3LSB                       ((uint32) (0x3E8u))
 235:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_DELAY_COUNTS_LIMIT                  ((uint32) (0xD160u))
 236:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_MIN_DELAY_US                        ((uint32) (0x64u))
 237:Generated_Source\PSoC4/CyLFClk.h **** 
 238:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkSetLfclkSource() - parameter definitions */
 239:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2 && CY_IP_WCO)
 240:Generated_Source\PSoC4/CyLFClk.h **** 
 241:Generated_Source\PSoC4/CyLFClk.h ****     /** Internal Low Frequency (32 kHz) Oscillator (ILO) */
 242:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_LFCLK_SRC_ILO                    (0u)
 243:Generated_Source\PSoC4/CyLFClk.h **** 
 244:Generated_Source\PSoC4/CyLFClk.h ****     /** Low Frequency Watch Crystal Oscillator (WCO) */
 245:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_LFCLK_SRC_WCO                    ((uint32)(( uint32 )0x01u << 30u))
 246:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && CY_IP_WCO) */
 247:Generated_Source\PSoC4/CyLFClk.h **** 
 248:Generated_Source\PSoC4/CyLFClk.h **** 
 249:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 250:Generated_Source\PSoC4/CyLFClk.h **** 
 251:Generated_Source\PSoC4/CyLFClk.h ****     /* CySysClkSetLfclkSource() - implementation definitions */
 252:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_LFCLK_SEL_MASK                   ((uint32)(( uint32 )0x03u << 30u))
 253:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_WCO) */
 254:Generated_Source\PSoC4/CyLFClk.h **** 
 255:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkSetTimerSource() - implementation definitions */
 256:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
 257:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_TIMER_SEL_MASK                   ((uint32)(( uint32 )0x03u << 30u))
 258:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
 259:Generated_Source\PSoC4/CyLFClk.h **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 6


 260:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkSetTimerSource() - parameter definitions */
 261:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
 262:Generated_Source\PSoC4/CyLFClk.h **** 
 263:Generated_Source\PSoC4/CyLFClk.h ****     /** Internal Low Frequency (32 kHz) Oscillator (ILO) */
 264:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_TIMER_SRC_ILO                (0u)
 265:Generated_Source\PSoC4/CyLFClk.h **** 
 266:Generated_Source\PSoC4/CyLFClk.h ****     /** Low Frequency Watch Crystal Oscillator (WCO) */
 267:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_TIMER_SRC_WCO                ((uint32)(( uint32 )0x01u << 30u))
 268:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
 269:Generated_Source\PSoC4/CyLFClk.h **** 
 270:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkWcoClockOutSelect() - parameter definitions */
 271:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 272:Generated_Source\PSoC4/CyLFClk.h **** 
 273:Generated_Source\PSoC4/CyLFClk.h ****     /** Selects External crystal as WCO’s clock source */
 274:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_SEL_CRYSTAL                  (1u)
 275:Generated_Source\PSoC4/CyLFClk.h **** 
 276:Generated_Source\PSoC4/CyLFClk.h ****     /** Selects External clock input on wco_in pin as WCO’s clock source */
 277:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_SEL_PIN                      (0u)
 278:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_WCO) */
 279:Generated_Source\PSoC4/CyLFClk.h **** 
 280:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkWcoClockOutSelect() - implementation definitions */
 281:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 282:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_SELECT_PIN_MASK              ((uint32)(( uint32 )0x01u << 2u))
 283:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_SELECT_PIN_OFFSET            ((uint32) 0x02u)
 284:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_WCO) */
 285:Generated_Source\PSoC4/CyLFClk.h **** 
 286:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkIloRestoreFactoryTrim() - implementation definitions */
 287:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2 && CY_IP_WCO && (!CY_IP_CPUSS))
 288:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_TRIM_DEFAULT_VALUE           ((uint8 )(0xF0u))
 289:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_TRIM_DEFAULT_MASK            ((uint32)((uint32)0x01u << 3u))
 290:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_TRIM_MASK                    ((uint32)(0x0Fu))
 291:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && CY_IP_WCO && (!CY_IP_CPUSS)) */
 292:Generated_Source\PSoC4/CyLFClk.h **** 
 293:Generated_Source\PSoC4/CyLFClk.h **** /* CySysIloTrim() - parameter definitions and macros*/
 294:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2 && CY_IP_WCO && (!CY_IP_CPUSS))
 295:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_BLOCKING                         (0u)
 296:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_NON_BLOCKING                     (1u)
 297:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_PERTHOUSAND                      ((uint32) 0x000003E8u )
 298:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ABS_MACRO(x)                     ((0 > (x)) ? (-(x)) : (x))
 299:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ERROR_RANGE                      ((uint32) 0x38u)
 300:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_TIMEOUT                          ((uint8 ) 0x05u)
 301:Generated_Source\PSoC4/CyLFClk.h **** 
 302:Generated_Source\PSoC4/CyLFClk.h ****     /* ILO error step is 7,37 % error range */
 303:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ERROR_STEP                       (( int32) 0x02E1u)
 304:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ERROR_COEF                       ((uint32) 0x0Au)
 305:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && CY_IP_WCO && (!CY_IP_CPUSS)) */
 306:Generated_Source\PSoC4/CyLFClk.h **** 
 307:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 308:Generated_Source\PSoC4/CyLFClk.h **** 
 309:Generated_Source\PSoC4/CyLFClk.h ****     /* WCO Configuration Register */
 310:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_CONFIG_LPM_EN                (( uint32 )(( uint32 )0x01u <<  0u))
 311:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_CONFIG_LPM_AUTO              (( uint32 )(( uint32 )0x01u <<  1u))
 312:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE            (( uint32 )(( uint32 )0x01u << 31u))
 313:Generated_Source\PSoC4/CyLFClk.h **** 
 314:Generated_Source\PSoC4/CyLFClk.h ****     /* WCO Status Register */
 315:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_STATUS_OUT_BLNK_A            (( uint32 )(( uint32 )0x01u <<  0u))
 316:Generated_Source\PSoC4/CyLFClk.h **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 7


 317:Generated_Source\PSoC4/CyLFClk.h ****     /* WCO Trim Register */
 318:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_MASK                (( uint32 ) 0x07u)
 319:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_SHIFT               (( uint32 ) 0x00u)
 320:Generated_Source\PSoC4/CyLFClk.h **** 
 321:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_3370NA              (( uint32 ) 0x00u)
 322:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_2620NA              (( uint32 ) 0x01u)
 323:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_2250NA              (( uint32 ) 0x02u)
 324:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_1500NA              (( uint32 ) 0x03u)
 325:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_1870NA              (( uint32 ) 0x04u)
 326:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_1120NA              (( uint32 ) 0x05u)
 327:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_750NA               (( uint32 ) 0x06u)
 328:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_0NA                 (( uint32 ) 0x07u)
 329:Generated_Source\PSoC4/CyLFClk.h **** 
 330:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_GM_MASK                 (( uint32 )(( uint32 )0x03u << 4u))
 331:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_GM_SHIFT                (( uint32 ) 0x04u)
 332:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_GM_HPM                  (( uint32 ) 0x01u)
 333:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_GM_LPM                  (( uint32 ) 0x02u)
 334:Generated_Source\PSoC4/CyLFClk.h **** #endif  /* (CY_IP_WCO) */
 335:Generated_Source\PSoC4/CyLFClk.h **** 
 336:Generated_Source\PSoC4/CyLFClk.h **** 
 337:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 338:Generated_Source\PSoC4/CyLFClk.h **** * WDT API Constants
 339:Generated_Source\PSoC4/CyLFClk.h **** *******************************************************************************/
 340:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2)
 341:Generated_Source\PSoC4/CyLFClk.h **** 
 342:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MODE_NONE                (0u)
 343:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MODE_INT                 (1u)
 344:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MODE_RESET               (2u)
 345:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MODE_INT_RESET           (3u)
 346:Generated_Source\PSoC4/CyLFClk.h **** 
 347:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER0_MASK            ((uint32)((uint32)0x01u))           /**< Counter 0 
 348:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER1_MASK            ((uint32)((uint32)0x01u << 8u))     /**< Counter 1 
 349:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER2_MASK            ((uint32)((uint32)0x01u << 16u))    /**< Counter 2 
 350:Generated_Source\PSoC4/CyLFClk.h **** 
 351:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CASCADE_NONE             ((uint32)0x00u)             /**< Neither */
 352:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CASCADE_01               ((uint32)0x01u << 3u)       /**< Cascade 01 */
 353:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CASCADE_12               ((uint32)0x01u << 11u)      /**< Cascade 12 */
 354:Generated_Source\PSoC4/CyLFClk.h **** 
 355:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER0_INT             ((uint32)0x01u << 2u)
 356:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER1_INT             ((uint32)0x01u << 10u)
 357:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER2_INT             ((uint32)0x01u << 18u)
 358:Generated_Source\PSoC4/CyLFClk.h **** 
 359:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER0_RESET           ((uint32)0x01u << 3u)       /**< Counter 0 */
 360:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER1_RESET           ((uint32)0x01u << 11u)      /**< Counter 1 */
 361:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER2_RESET           ((uint32)0x01u << 19u)      /**< Counter 2 */
 362:Generated_Source\PSoC4/CyLFClk.h **** 
 363:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTERS_RESET           (CY_SYS_WDT_COUNTER0_RESET |\
 364:Generated_Source\PSoC4/CyLFClk.h ****                                                  CY_SYS_WDT_COUNTER1_RESET |\
 365:Generated_Source\PSoC4/CyLFClk.h ****                                                  CY_SYS_WDT_COUNTER2_RESET)
 366:Generated_Source\PSoC4/CyLFClk.h **** 
 367:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER0                 (0x00u)
 368:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER1                 (0x01u)
 369:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER2                 (0x02u)
 370:Generated_Source\PSoC4/CyLFClk.h **** 
 371:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER0_OFFSET          (0x00u)
 372:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER1_OFFSET          (0x02u)
 373:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER2_OFFSET          (0x04u)
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 8


 374:Generated_Source\PSoC4/CyLFClk.h **** 
 375:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MODE_MASK                ((uint32)(0x03u))
 376:Generated_Source\PSoC4/CyLFClk.h **** 
 377:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONFIG_BITS2_MASK        (uint32)(0x1Fu)
 378:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONFIG_BITS2_POS         (uint32)(24u)
 379:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_LOWER_16BITS_MASK        (uint32)(0x0000FFFFu)
 380:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_HIGHER_16BITS_MASK       (uint32)(0xFFFF0000u)
 381:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTERS_MAX             (0x03u)
 382:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CNT_SHIFT                (0x08u)
 383:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CNT_MATCH_CLR_SHIFT      (0x02u)
 384:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CNT_STTS_SHIFT           (0x01u)
 385:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CNT_MATCH_SHIFT          (0x10u)
 386:Generated_Source\PSoC4/CyLFClk.h **** 
 387:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CLK_LOCK_BITS_MASK       ((uint32)0x03u << 14u)
 388:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CLK_LOCK_BIT0            ((uint32)0x01u << 14u)
 389:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CLK_LOCK_BIT1            ((uint32)0x01u << 15u)
 390:Generated_Source\PSoC4/CyLFClk.h **** 
 391:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_WDT_NUM_OF_WDT                   (3u)
 392:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_WDT_NUM_OF_CALLBACKS             (3u)
 393:Generated_Source\PSoC4/CyLFClk.h **** 
 394:Generated_Source\PSoC4/CyLFClk.h ****     #else
 395:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_WDT_NUM_OF_WDT               (1u)
 396:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_WDT_NUM_OF_CALLBACKS         (3u)
 397:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_KEY                  ((uint32)(0xACED8865u))
 398:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_MATCH_MASK           ((uint32)(0x0000FFFFu))
 399:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_IGNORE_BITS_MASK     ((uint32)(0x000F0000u))
 400:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_IGNORE_BITS_SHIFT    ((uint32)(16u))
 401:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_LOWER_BIT_MASK       ((uint32)(0x00000001u))
 402:Generated_Source\PSoC4/CyLFClk.h **** 
 403:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_COUNTER0             (0x00u)
 404:Generated_Source\PSoC4/CyLFClk.h **** 
 405:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2) */
 406:Generated_Source\PSoC4/CyLFClk.h **** 
 407:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2 && CY_IP_WCO)
 408:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_1LFCLK_ILO_DELAY_US    ((uint16)( 67u))
 409:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_3LFCLK_ILO_DELAY_US    ((uint16)(201u))
 410:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_1LFCLK_WCO_DELAY_US    ((uint16)( 31u))
 411:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_3LFCLK_WCO_DELAY_US    ((uint16)( 93u))
 412:Generated_Source\PSoC4/CyLFClk.h **** 
 413:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_1LFCLK_DELAY_US      \
 414:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_LFCLK_SRC_ILO == (CY_SYS_WDT_CONFIG_REG & CY_SYS_CLK_LFCLK_SEL_MASK)) ? \
 415:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_WDT_1LFCLK_ILO_DELAY_US) : \
 416:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_WDT_1LFCLK_WCO_DELAY_US))
 417:Generated_Source\PSoC4/CyLFClk.h **** 
 418:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_3LFCLK_DELAY_US      \
 419:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_LFCLK_SRC_ILO == (CY_SYS_WDT_CONFIG_REG & CY_SYS_CLK_LFCLK_SEL_MASK)) ? \
 420:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_WDT_3LFCLK_ILO_DELAY_US) : \
 421:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_WDT_3LFCLK_WCO_DELAY_US))
 422:Generated_Source\PSoC4/CyLFClk.h ****     #else
 423:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_1LFCLK_DELAY_US      ((uint16)  (67u))
 424:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_3LFCLK_DELAY_US      ((uint16) (201u))
 425:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && CY_IP_WCO) */
 426:Generated_Source\PSoC4/CyLFClk.h **** 
 427:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
 428:Generated_Source\PSoC4/CyLFClk.h **** 
 429:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_MODE_NONE              (0u)
 430:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_MODE_INT               (1u)
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 9


 431:Generated_Source\PSoC4/CyLFClk.h **** 
 432:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER0_MASK                  ((uint32)((uint32)0x01u))           /**< Counter 0 
 433:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER1_MASK                  ((uint32)((uint32)0x01u << 8u))     /**< Counter 1 
 434:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER2_MASK                  ((uint32)((uint32)0x01u << 16u))    /**< Counter 2 
 435:Generated_Source\PSoC4/CyLFClk.h **** 
 436:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER0_RESET                 ((uint32)0x01u << 3u)       /**< Counter 0 */
 437:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER1_RESET                 ((uint32)0x01u << 11u)      /**< Counter 1 */
 438:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER2_RESET                 ((uint32)0x01u << 19u)      /**< Counter 2 */
 439:Generated_Source\PSoC4/CyLFClk.h **** 
 440:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_RESET                  (CY_SYS_TIMER0_RESET |\
 441:Generated_Source\PSoC4/CyLFClk.h ****                                                  CY_SYS_TIMER1_RESET |\
 442:Generated_Source\PSoC4/CyLFClk.h ****                                                  CY_SYS_TIMER2_RESET)
 443:Generated_Source\PSoC4/CyLFClk.h **** 
 444:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CASCADE_NONE           ((uint32)0x00u)             /**< Neither */
 445:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CASCADE_01             ((uint32)0x01u << 3u)       /**< Cascade 01 */
 446:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CASCADE_12             ((uint32)0x01u << 11u)      /**< Cascade 12 */
 447:Generated_Source\PSoC4/CyLFClk.h **** 
 448:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER0_INT                   ((uint32)0x01u << 2u)
 449:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER1_INT                   ((uint32)0x01u << 10u)
 450:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER2_INT                   ((uint32)0x01u << 18u)
 451:Generated_Source\PSoC4/CyLFClk.h **** 
 452:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER0                       (0x00u)
 453:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER1                       (0x01u)
 454:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER2                       (0x02u)
 455:Generated_Source\PSoC4/CyLFClk.h **** 
 456:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_MODE_MASK              ((uint32)(0x01u))
 457:Generated_Source\PSoC4/CyLFClk.h **** 
 458:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CONFIG_BITS2_MASK      (uint32)(0x1Fu)
 459:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CONFIG_BITS2_POS       (uint32)(24u)
 460:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_LOWER_16BITS_MASK      (uint32)(0x0000FFFFu)
 461:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_HIGHER_16BITS_MASK     (uint32)(0xFFFF0000u)
 462:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_COUNTERS_MAX           (0x03u)
 463:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CNT_SHIFT              (0x08u)
 464:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CNT_MATCH_CLR_SHIFT    (0x02u)
 465:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CNT_STTS_SHIFT         (0x01u)
 466:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CNT_MATCH_SHIFT        (0x10u)
 467:Generated_Source\PSoC4/CyLFClk.h **** 
 468:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_NUM_OF_TIMERS                (3u)
 469:Generated_Source\PSoC4/CyLFClk.h **** 
 470:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SET_NEW_TIMER_SOURCE_ILO     ((uint16)(0x02u))
 471:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SET_NEW_TIMER_SOURCE_WCO     ((uint16)(0x01u))
 472:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CLKEN_RESET_MASK     ((uint32)(0x03u))
 473:Generated_Source\PSoC4/CyLFClk.h **** 
 474:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_1ILO_DELAY_US          ((uint16)( 67u))
 475:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_4ILO_DELAY_US          ((uint16)(268u))
 476:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_3ILO_DELAY_US          ((uint16)(201u))
 477:Generated_Source\PSoC4/CyLFClk.h **** 
 478:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_1WCO_DELAY_US          ((uint16)( 31u))
 479:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_4WCO_DELAY_US          ((uint16)(124u))
 480:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_3WCO_DELAY_US          ((uint16)( 93u))
 481:Generated_Source\PSoC4/CyLFClk.h **** 
 482:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_1TIMER_DELAY_US      \
 483:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_TIMER_SRC_ILO == (CY_SYS_WCO_WDT_CONFIG_REG & CY_SYS_CLK_TIMER_SEL_MASK)) ? \
 484:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_1ILO_DELAY_US) : \
 485:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_1WCO_DELAY_US))
 486:Generated_Source\PSoC4/CyLFClk.h **** 
 487:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_4TIMER_DELAY_US      \
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 10


 488:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_TIMER_SRC_ILO == (CY_SYS_WCO_WDT_CONFIG_REG & CY_SYS_CLK_TIMER_SEL_MASK)) ? \
 489:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_4WCO_DELAY_US) : \
 490:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_4ILO_DELAY_US))
 491:Generated_Source\PSoC4/CyLFClk.h **** 
 492:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_3TIMER_DELAY_US      \
 493:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_TIMER_SRC_ILO == (CY_SYS_WCO_WDT_CONFIG_REG & CY_SYS_CLK_TIMER_SEL_MASK)) ? \
 494:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_3ILO_DELAY_US) : \
 495:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_3WCO_DELAY_US))
 496:Generated_Source\PSoC4/CyLFClk.h **** 
 497:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SET_CURRENT_TIMER_SOURCE_BIT      \
 498:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_TIMER_SRC_ILO == (CY_SYS_WCO_WDT_CONFIG_REG & CY_SYS_CLK_TIMER_SEL_MASK)) ? \
 499:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_SET_NEW_TIMER_SOURCE_ILO) : \
 500:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_SET_NEW_TIMER_SOURCE_WCO))
 501:Generated_Source\PSoC4/CyLFClk.h **** 
 502:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
 503:Generated_Source\PSoC4/CyLFClk.h **** 
 504:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkWcoSetPowerMode() */
 505:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_WCO_HPM                              (0x0u)     /**< WCO High power mode */
 506:Generated_Source\PSoC4/CyLFClk.h **** 
 507:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_BLESS)
 508:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_LPM                          (0x1u)     /**< WCO Low power mode */
 509:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_BLESS) */
 510:Generated_Source\PSoC4/CyLFClk.h **** 
 511:Generated_Source\PSoC4/CyLFClk.h **** 
 512:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 513:Generated_Source\PSoC4/CyLFClk.h **** *       Trim Registers Constants 
 514:Generated_Source\PSoC4/CyLFClk.h **** ********************************************************************************/
 515:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_SYS_CLK_DEVIDER                  ((uint32)0x0Au)
 516:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_SEL_ILO_DFT_SOURCE               ((uint32)0x00000100u)
 517:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_FOURBITS_MAX                     (( int32)0x0f)
 518:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_HALF_OF_STEP                     (( int32)((uint32) CY_SYS_CLK_ERROR_STEP >> 1u)
 519:Generated_Source\PSoC4/CyLFClk.h **** 
 520:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2)
 521:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_DESIRED_FREQ_HZ          (32000u)
 522:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_DFT_SELSIZE                  ((uint32) 0x3F)
 523:Generated_Source\PSoC4/CyLFClk.h **** #else
 524:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_DESIRED_FREQ_HZ          (40000u)
 525:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_DFT_SELSIZE                  ((uint32) 0x0F)
 526:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2) */
 527:Generated_Source\PSoC4/CyLFClk.h **** 
 528:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_TST_DDFT_CTRL_REG_DEFAULT_MASK    ((uint32)((CY_SYS_CLK_DFT_SELSIZE << 8u) | (CY_SYS
 529:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_TST_DDFT_SELECT_CLK1              ((uint32) ((uint32) CYDEV_DFT_SELECT_CLK1 << 8u))
 530:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1       ((uint32) (CY_SYS_TST_DDFT_SELECT_CLK1 | CYDEV_DFT
 531:Generated_Source\PSoC4/CyLFClk.h **** 
 532:Generated_Source\PSoC4/CyLFClk.h **** 
 533:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 534:Generated_Source\PSoC4/CyLFClk.h **** *       Trim Registers 
 535:Generated_Source\PSoC4/CyLFClk.h **** ********************************************************************************/
 536:Generated_Source\PSoC4/CyLFClk.h **** /* DFT TST Control Register*/
 537:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_TST_DDFT_CTRL_REG                         (*(reg32*) CYREG_TST_DDFT_CTRL)
 538:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CNT_CTRL_PTR                              ( (reg32*) CYREG_TST_DDFT_CTRL)
 539:Generated_Source\PSoC4/CyLFClk.h **** 
 540:Generated_Source\PSoC4/CyLFClk.h **** /* DFT TST Counter 1 Register*/
 541:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CNT_REG1_REG                              (*(reg32*) CYREG_TST_TRIM_CNTR1)
 542:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CNT_REG1_PTR                              ( (reg32*) CYREG_TST_TRIM_CNTR1)
 543:Generated_Source\PSoC4/CyLFClk.h **** 
 544:Generated_Source\PSoC4/CyLFClk.h **** /* DFT TST Counter 2 Register*/
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 11


 545:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CNT_REG2_REG                              (*(reg32*) CYREG_TST_TRIM_CNTR2)
 546:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CNT_REG2_PTR                              ( (reg32*) CYREG_TST_TRIM_CNTR2)
 547:Generated_Source\PSoC4/CyLFClk.h **** 
 548:Generated_Source\PSoC4/CyLFClk.h **** /* DFT Muxes Configuration Register*/
 549:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_DFT_REG                               (*(reg32*) CYREG_CLK_DFT_SELECT)
 550:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_DFT_PTR                               ( (reg32*) CYREG_CLK_DFT_SELECT)
 551:Generated_Source\PSoC4/CyLFClk.h **** 
 552:Generated_Source\PSoC4/CyLFClk.h **** /* ILO Configuration Register*/
 553:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_CONFIG_REG                        (*(reg32 *) CYREG_CLK_ILO_CONFIG)
 554:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_CONFIG_PTR                        ( (reg32 *) CYREG_CLK_ILO_CONFIG)
 555:Generated_Source\PSoC4/CyLFClk.h **** 
 556:Generated_Source\PSoC4/CyLFClk.h **** /* ILO Trim Register*/
 557:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2 && CY_IP_WCO)
 558:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_TRIM_REG                      (*(reg32 *) CYREG_CLK_ILO_TRIM)
 559:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_TRIM_PTR                      ( (reg32 *) CYREG_CLK_ILO_TRIM)
 560:Generated_Source\PSoC4/CyLFClk.h **** #endif  /* (CY_IP_SRSSV2) && CY_IP_WCO*/
 561:Generated_Source\PSoC4/CyLFClk.h **** 
 562:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 563:Generated_Source\PSoC4/CyLFClk.h ****     #if (CY_IP_BLESS)
 564:Generated_Source\PSoC4/CyLFClk.h **** 
 565:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Status Register */
 566:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_STATUS_REG               (*(reg32 *) CYREG_BLE_BLESS_WCO_STATUS)
 567:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_STATUS_PTR               ( (reg32 *) CYREG_BLE_BLESS_WCO_STATUS)
 568:Generated_Source\PSoC4/CyLFClk.h **** 
 569:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Configuration Register */
 570:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_CONFIG_REG               (*(reg32 *) CYREG_BLE_BLESS_WCO_CONFIG)
 571:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_CONFIG_PTR               ( (reg32 *) CYREG_BLE_BLESS_WCO_CONFIG)
 572:Generated_Source\PSoC4/CyLFClk.h **** 
 573:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Trim Register */
 574:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_TRIM_REG                 (*(reg32 *) CYREG_BLE_BLESS_WCO_TRIM)
 575:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_TRIM_PTR                 ( (reg32 *) CYREG_BLE_BLESS_WCO_TRIM)
 576:Generated_Source\PSoC4/CyLFClk.h ****     #else
 577:Generated_Source\PSoC4/CyLFClk.h **** 
 578:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Status Register */
 579:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_STATUS_REG               (*(reg32 *) CYREG_WCO_STATUS)
 580:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_STATUS_PTR               ( (reg32 *) CYREG_WCO_STATUS)
 581:Generated_Source\PSoC4/CyLFClk.h **** 
 582:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Configuration Register */
 583:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_CONFIG_REG               (*(reg32 *) CYREG_WCO_CONFIG)
 584:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_CONFIG_PTR               ( (reg32 *) CYREG_WCO_CONFIG)
 585:Generated_Source\PSoC4/CyLFClk.h **** 
 586:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Trim Register */
 587:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_TRIM_REG                 (*(reg32 *) CYREG_WCO_TRIM)
 588:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_TRIM_PTR                 ( (reg32 *) CYREG_WCO_TRIM)
 589:Generated_Source\PSoC4/CyLFClk.h ****     #endif /* (CY_IP_BLESS) */
 590:Generated_Source\PSoC4/CyLFClk.h **** #endif  /* (CY_IP_WCO) */
 591:Generated_Source\PSoC4/CyLFClk.h **** 
 592:Generated_Source\PSoC4/CyLFClk.h **** 
 593:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 594:Generated_Source\PSoC4/CyLFClk.h **** * WDT API Registers
 595:Generated_Source\PSoC4/CyLFClk.h **** *******************************************************************************/
 596:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2)
 597:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CTRLOW_REG               (*(reg32 *) CYREG_WDT_CTRLOW)
 598:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CTRLOW_PTR               ( (reg32 *) CYREG_WDT_CTRLOW)
 599:Generated_Source\PSoC4/CyLFClk.h **** 
 600:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CTRHIGH_REG              (*(reg32 *) CYREG_WDT_CTRHIGH)
 601:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CTRHIGH_PTR              ( (reg32 *) CYREG_WDT_CTRHIGH)
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 12


 602:Generated_Source\PSoC4/CyLFClk.h **** 
 603:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MATCH_REG                (*(reg32 *) CYREG_WDT_MATCH)
 604:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MATCH_PTR                ( (reg32 *) CYREG_WDT_MATCH)
 605:Generated_Source\PSoC4/CyLFClk.h **** 
 606:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONFIG_REG               (*(reg32 *) CYREG_WDT_CONFIG)
 607:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONFIG_PTR               ( (reg32 *) CYREG_WDT_CONFIG)
 608:Generated_Source\PSoC4/CyLFClk.h **** 
 609:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONTROL_REG              (*(reg32 *) CYREG_WDT_CONTROL)
 610:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONTROL_PTR              ( (reg32 *) CYREG_WDT_CONTROL)
 611:Generated_Source\PSoC4/CyLFClk.h **** #else
 612:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_DISABLE_KEY_REG          (*(reg32 *) CYREG_WDT_DISABLE_KEY)
 613:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_DISABLE_KEY_PTR          ( (reg32 *) CYREG_WDT_DISABLE_KEY)
 614:Generated_Source\PSoC4/CyLFClk.h **** 
 615:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MATCH_REG                (*(reg32 *) CYREG_WDT_MATCH)
 616:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MATCH_PTR                ( (reg32 *) CYREG_WDT_MATCH)
 617:Generated_Source\PSoC4/CyLFClk.h **** 
 618:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER_REG              (*(reg32 *) CYREG_WDT_COUNTER)
 619:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER_PTR              ( (reg32 *) CYREG_WDT_COUNTER)
 620:Generated_Source\PSoC4/CyLFClk.h **** 
 621:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SRSS_INTR_REG                (*(reg32 *) CYREG_SRSS_INTR)
 622:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SRSS_INTR_PTR                ( (reg32 *) CYREG_SRSS_INTR)
 623:Generated_Source\PSoC4/CyLFClk.h **** 
 624:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SRSS_INTR_MASK_REG           (*(reg32 *) CYREG_SRSS_INTR_MASK)
 625:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SRSS_INTR_MASK_PTR           ( (reg32 *) CYREG_SRSS_INTR_MASK)
 626:Generated_Source\PSoC4/CyLFClk.h **** #endif  /* (CY_IP_SRSSV2) */
 627:Generated_Source\PSoC4/CyLFClk.h **** 
 628:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
 629:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CTRLOW_REG           (*(reg32 *) CYREG_WCO_WDT_CTRLOW)
 630:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CTRLOW_PTR           ( (reg32 *) CYREG_WCO_WDT_CTRLOW)
 631:Generated_Source\PSoC4/CyLFClk.h **** 
 632:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CTRHIGH_REG          (*(reg32 *) CYREG_WCO_WDT_CTRHIGH)
 633:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CTRHIGH_PTR          ( (reg32 *) CYREG_WCO_WDT_CTRHIGH)
 634:Generated_Source\PSoC4/CyLFClk.h **** 
 635:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_MATCH_REG            (*(reg32 *) CYREG_WCO_WDT_MATCH)
 636:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_MATCH_PTR            ( (reg32 *) CYREG_WCO_WDT_MATCH)
 637:Generated_Source\PSoC4/CyLFClk.h **** 
 638:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CONFIG_REG           (*(reg32 *) CYREG_WCO_WDT_CONFIG)
 639:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CONFIG_PTR           ( (reg32 *) CYREG_WCO_WDT_CONFIG)
 640:Generated_Source\PSoC4/CyLFClk.h **** 
 641:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CONTROL_REG          (*(reg32 *) CYREG_WCO_WDT_CONTROL)
 642:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CONTROL_PTR          ( (reg32 *) CYREG_WCO_WDT_CONTROL)
 643:Generated_Source\PSoC4/CyLFClk.h **** 
 644:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CLKEN_REG            (*(reg32 *) CYREG_WCO_WDT_CLKEN)
 645:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CLKEN_PTR            ( (reg32 *) CYREG_WCO_WDT_CLKEN)
 646:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
 647:Generated_Source\PSoC4/CyLFClk.h **** 
 648:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 649:Generated_Source\PSoC4/CyLFClk.h **** 
 650:Generated_Source\PSoC4/CyLFClk.h ****     /*******************************************************************************
 651:Generated_Source\PSoC4/CyLFClk.h ****     * Function Name: CySysClkWcoSetHighPowerMode
 652:Generated_Source\PSoC4/CyLFClk.h ****     ********************************************************************************
 653:Generated_Source\PSoC4/CyLFClk.h ****     *
 654:Generated_Source\PSoC4/CyLFClk.h ****     * Summary:
 655:Generated_Source\PSoC4/CyLFClk.h ****     *  Sets the high power mode for the 32 KHz WCO.
 656:Generated_Source\PSoC4/CyLFClk.h ****     *
 657:Generated_Source\PSoC4/CyLFClk.h ****     *******************************************************************************/
 658:Generated_Source\PSoC4/CyLFClk.h ****     static CY_INLINE void CySysClkWcoSetHighPowerMode(void)
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 13


 659:Generated_Source\PSoC4/CyLFClk.h ****     {
  27              		.loc 1 659 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 660:Generated_Source\PSoC4/CyLFClk.h ****         /* Switch off low power mode for WCO */
 661:Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_LPM_EN;
  32              		.loc 1 661 0
  33 0000 0120     		movs	r0, #1
  34 0002 0A4A     		ldr	r2, .L2
 662:Generated_Source\PSoC4/CyLFClk.h **** 
 663:Generated_Source\PSoC4/CyLFClk.h ****         /* Switch off auto low power mode in WCO */
 664:Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_CONFIG_REG &= ((uint32)~CY_SYS_CLK_WCO_CONFIG_LPM_AUTO);
 665:Generated_Source\PSoC4/CyLFClk.h **** 
 666:Generated_Source\PSoC4/CyLFClk.h ****         /* Restore WCO trim register HPM settings */
 667:Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_TRIM_REG = (CY_SYS_CLK_WCO_TRIM_REG & (uint32)(~CY_SYS_CLK_WCO_TRIM_GM_MASK)
 668:Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_GM_HPM << CY_SYS_CLK_WCO_TRIM_GM_SHIFT);
 669:Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_TRIM_REG = (CY_SYS_CLK_WCO_TRIM_REG & (uint32)(~CY_SYS_CLK_WCO_TRIM_XGM_MASK
 670:Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_XGM_2620NA << CY_SYS_CLK_WCO_TRIM_XGM_SHIFT);
 671:Generated_Source\PSoC4/CyLFClk.h ****     }
  35              		.loc 1 671 0
  36              		@ sp needed
 661:Generated_Source\PSoC4/CyLFClk.h **** 
  37              		.loc 1 661 0
  38 0004 1368     		ldr	r3, [r2]
  39 0006 8343     		bics	r3, r0
  40 0008 1360     		str	r3, [r2]
 664:Generated_Source\PSoC4/CyLFClk.h **** 
  41              		.loc 1 664 0
  42 000a 0223     		movs	r3, #2
  43 000c 1168     		ldr	r1, [r2]
  44 000e 9943     		bics	r1, r3
  45 0010 1160     		str	r1, [r2]
 667:Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_GM_HPM << CY_SYS_CLK_WCO_TRIM_GM_SHIFT);
  46              		.loc 1 667 0
  47 0012 0749     		ldr	r1, .L2+4
 668:Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_TRIM_REG = (CY_SYS_CLK_WCO_TRIM_REG & (uint32)(~CY_SYS_CLK_WCO_TRIM_XGM_MASK
  48              		.loc 1 668 0
  49 0014 2E33     		adds	r3, r3, #46
 667:Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_GM_HPM << CY_SYS_CLK_WCO_TRIM_GM_SHIFT);
  50              		.loc 1 667 0
  51 0016 0A68     		ldr	r2, [r1]
 668:Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_TRIM_REG = (CY_SYS_CLK_WCO_TRIM_REG & (uint32)(~CY_SYS_CLK_WCO_TRIM_XGM_MASK
  52              		.loc 1 668 0
  53 0018 9A43     		bics	r2, r3
  54 001a 203B     		subs	r3, r3, #32
  55 001c 1A43     		orrs	r2, r3
 667:Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_GM_HPM << CY_SYS_CLK_WCO_TRIM_GM_SHIFT);
  56              		.loc 1 667 0
  57 001e 0A60     		str	r2, [r1]
 670:Generated_Source\PSoC4/CyLFClk.h ****     }
  58              		.loc 1 670 0
  59 0020 0722     		movs	r2, #7
 669:Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_XGM_2620NA << CY_SYS_CLK_WCO_TRIM_XGM_SHIFT);
  60              		.loc 1 669 0
  61 0022 0B68     		ldr	r3, [r1]
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 14


 670:Generated_Source\PSoC4/CyLFClk.h ****     }
  62              		.loc 1 670 0
  63 0024 9343     		bics	r3, r2
  64 0026 0343     		orrs	r3, r0
 669:Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_XGM_2620NA << CY_SYS_CLK_WCO_TRIM_XGM_SHIFT);
  65              		.loc 1 669 0
  66 0028 0B60     		str	r3, [r1]
  67              		.loc 1 671 0
  68 002a 7047     		bx	lr
  69              	.L3:
  70              		.align	2
  71              	.L2:
  72 002c 00002240 		.word	1075970048
  73 0030 000F2240 		.word	1075973888
  74              		.cfi_endproc
  75              	.LFE0:
  76              		.size	CySysClkWcoSetHighPowerMode, .-CySysClkWcoSetHighPowerMode
  77              		.section	.text.CySysClkIloStart,"ax",%progbits
  78              		.align	1
  79              		.global	CySysClkIloStart
  80              		.code	16
  81              		.thumb_func
  82              		.type	CySysClkIloStart, %function
  83              	CySysClkIloStart:
  84              	.LFB1:
  85              		.file 2 "Generated_Source\\PSoC4\\CyLFClk.c"
   1:Generated_Source\PSoC4/CyLFClk.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLFClk.c **** * \file .c
   3:Generated_Source\PSoC4/CyLFClk.c **** * \version 1.20
   4:Generated_Source\PSoC4/CyLFClk.c **** *
   5:Generated_Source\PSoC4/CyLFClk.c **** * \brief
   6:Generated_Source\PSoC4/CyLFClk.c **** *  This file provides the source code for configuring watchdog timers WDTs, 
   7:Generated_Source\PSoC4/CyLFClk.c **** *  low frequency clocks (LFCLK) and the Real-time Clock (RTC) component in
   8:Generated_Source\PSoC4/CyLFClk.c **** *  PSoC Creator for the PSoC 4 families.
   9:Generated_Source\PSoC4/CyLFClk.c **** *
  10:Generated_Source\PSoC4/CyLFClk.c **** ********************************************************************************
  11:Generated_Source\PSoC4/CyLFClk.c **** * \copyright
  12:Generated_Source\PSoC4/CyLFClk.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/CyLFClk.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/CyLFClk.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/CyLFClk.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/CyLFClk.c **** 
  18:Generated_Source\PSoC4/CyLFClk.c **** 
  19:Generated_Source\PSoC4/CyLFClk.c **** #include "CyLFClk.h"
  20:Generated_Source\PSoC4/CyLFClk.c **** #include "CyLib.h"
  21:Generated_Source\PSoC4/CyLFClk.c **** 
  22:Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_WCO && CY_IP_SRSSV2)
  23:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkGetLfclkSource(void);
  24:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_WCO && CY_IP_SRSSV2) */
  25:Generated_Source\PSoC4/CyLFClk.c **** 
  26:Generated_Source\PSoC4/CyLFClk.c **** 
  27:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 && (!CY_IP_CPUSS))
  28:Generated_Source\PSoC4/CyLFClk.c ****     /* Default Ilo Trim Register value for ILO trimming*/
  29:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint16 defaultIloTrimRegValue = CY_SYS_CLK_ILO_TRIM_DEFAULT_VALUE;
  30:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2 && (!CY_IP_CPUSS)) */
  31:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 15


  32:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
  33:Generated_Source\PSoC4/CyLFClk.c ****     /* CySysClkLfclkPosedgeCatch() / CySysClkLfclkPosedgeRestore() */
  34:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 lfclkPosedgeWdtCounter0Enabled = 0u;
  35:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 lfclkPosedgeWdtCounter0Mode    = CY_SYS_WDT_MODE_NONE;
  36:Generated_Source\PSoC4/CyLFClk.c **** 
  37:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 disableServicedIsr = 0uL;
  38:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 wdtIsrMask = CY_SYS_WDT_COUNTER0_INT |\
  39:Generated_Source\PSoC4/CyLFClk.c ****                                         CY_SYS_WDT_COUNTER1_INT |\
  40:Generated_Source\PSoC4/CyLFClk.c ****                                         CY_SYS_WDT_COUNTER2_INT;
  41:Generated_Source\PSoC4/CyLFClk.c **** 
  42:Generated_Source\PSoC4/CyLFClk.c ****     static const uint32 counterIntMaskTbl[CY_WDT_NUM_OF_WDT] = {CY_SYS_WDT_COUNTER0_INT,
  43:Generated_Source\PSoC4/CyLFClk.c ****                                                                 CY_SYS_WDT_COUNTER1_INT,
  44:Generated_Source\PSoC4/CyLFClk.c ****                                                                 CY_SYS_WDT_COUNTER2_INT};
  45:Generated_Source\PSoC4/CyLFClk.c **** 
  46:Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeCatch(void);
  47:Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeRestore(void);
  48:Generated_Source\PSoC4/CyLFClk.c **** 
  49:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysWdtLocked(void);
  50:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkIloEnabled(void);
  51:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2) */
  52:Generated_Source\PSoC4/CyLFClk.c **** 
  53:Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
  54:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkGetTimerSource(void);
  55:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 disableTimerServicedIsr = 0uL;
  56:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 timerIsrMask = CY_SYS_TIMER0_INT |\
  57:Generated_Source\PSoC4/CyLFClk.c ****                                           CY_SYS_TIMER1_INT |\
  58:Generated_Source\PSoC4/CyLFClk.c ****                                           CY_SYS_TIMER2_INT;
  59:Generated_Source\PSoC4/CyLFClk.c **** 
  60:Generated_Source\PSoC4/CyLFClk.c ****     static const uint32 counterTimerIntMaskTbl[CY_SYS_NUM_OF_TIMERS] = {CY_SYS_TIMER0_INT,
  61:Generated_Source\PSoC4/CyLFClk.c ****                                                                         CY_SYS_TIMER1_INT,
  62:Generated_Source\PSoC4/CyLFClk.c ****                                                                         CY_SYS_TIMER2_INT};
  63:Generated_Source\PSoC4/CyLFClk.c **** 
  64:Generated_Source\PSoC4/CyLFClk.c ****     static cyTimerCallback cySysTimerCallback[CY_SYS_NUM_OF_TIMERS] = {(void *)0, (void *)0, (void 
  65:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_DWT_EN) */
  66:Generated_Source\PSoC4/CyLFClk.c **** 
  67:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
  68:Generated_Source\PSoC4/CyLFClk.c ****     static cyWdtCallback cySysWdtCallback[CY_WDT_NUM_OF_WDT] = {(void *)0, (void *)0, (void *)0};
  69:Generated_Source\PSoC4/CyLFClk.c **** #else
  70:Generated_Source\PSoC4/CyLFClk.c ****     static cyWdtCallback cySysWdtCallback = (void *)0;
  71:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2) */
  72:Generated_Source\PSoC4/CyLFClk.c **** 
  73:Generated_Source\PSoC4/CyLFClk.c **** 
  74:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
  75:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStart
  76:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
  77:Generated_Source\PSoC4/CyLFClk.c **** * \brief
  78:Generated_Source\PSoC4/CyLFClk.c **** *  Enables ILO.
  79:Generated_Source\PSoC4/CyLFClk.c **** *
  80:Generated_Source\PSoC4/CyLFClk.c **** *  Refer to the device datasheet for the ILO startup time.
  81:Generated_Source\PSoC4/CyLFClk.c **** *
  82:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
  83:Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStart(void)
  84:Generated_Source\PSoC4/CyLFClk.c **** {
  86              		.loc 2 84 0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 0
  89              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 16


  90              		@ link register save eliminated.
  85:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_CLK_ILO_CONFIG_REG |= CY_SYS_CLK_ILO_CONFIG_ENABLE;
  91              		.loc 2 85 0
  92 0000 8021     		movs	r1, #128
  93 0002 034A     		ldr	r2, .L5
  94 0004 0906     		lsls	r1, r1, #24
  95 0006 1368     		ldr	r3, [r2]
  86:Generated_Source\PSoC4/CyLFClk.c **** }
  96              		.loc 2 86 0
  97              		@ sp needed
  85:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_CLK_ILO_CONFIG_REG |= CY_SYS_CLK_ILO_CONFIG_ENABLE;
  98              		.loc 2 85 0
  99 0008 0B43     		orrs	r3, r1
 100 000a 1360     		str	r3, [r2]
 101              		.loc 2 86 0
 102 000c 7047     		bx	lr
 103              	.L6:
 104 000e C046     		.align	2
 105              	.L5:
 106 0010 04010B40 		.word	1074462980
 107              		.cfi_endproc
 108              	.LFE1:
 109              		.size	CySysClkIloStart, .-CySysClkIloStart
 110              		.section	.text.CySysClkIloStartMeasurement,"ax",%progbits
 111              		.align	1
 112              		.global	CySysClkIloStartMeasurement
 113              		.code	16
 114              		.thumb_func
 115              		.type	CySysClkIloStartMeasurement, %function
 116              	CySysClkIloStartMeasurement:
 117              	.LFB3:
  87:Generated_Source\PSoC4/CyLFClk.c **** 
  88:Generated_Source\PSoC4/CyLFClk.c **** 
  89:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
  90:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStop
  91:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
  92:Generated_Source\PSoC4/CyLFClk.c **** * \brief
  93:Generated_Source\PSoC4/CyLFClk.c **** *  Disables the ILO.
  94:Generated_Source\PSoC4/CyLFClk.c **** *
  95:Generated_Source\PSoC4/CyLFClk.c **** *  This function has no effect if WDT is locked (CySysWdtLock() is
  96:Generated_Source\PSoC4/CyLFClk.c **** *  called). Call CySysWdtUnlock() to unlock WDT and stop ILO.
  97:Generated_Source\PSoC4/CyLFClk.c **** *
  98:Generated_Source\PSoC4/CyLFClk.c **** *  PSoC 4100 / PSoC 4200: Note that ILO is required for WDT's operation.
  99:Generated_Source\PSoC4/CyLFClk.c **** *
 100:Generated_Source\PSoC4/CyLFClk.c **** *  PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L / PSoC 4100M / 
 101:Generated_Source\PSoC4/CyLFClk.c **** *  PSoC 4200M:
 102:Generated_Source\PSoC4/CyLFClk.c **** *  Stopping ILO affects the peripheral clocked by LFCLK, if
 103:Generated_Source\PSoC4/CyLFClk.c **** *  LFCLK is configured to be sourced by ILO.
 104:Generated_Source\PSoC4/CyLFClk.c **** *
 105:Generated_Source\PSoC4/CyLFClk.c **** *  If the ILO is disabled, all blocks run by ILO will stop functioning.
 106:Generated_Source\PSoC4/CyLFClk.c **** *
 107:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
 108:Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStop(void)
 109:Generated_Source\PSoC4/CyLFClk.c **** {
 110:Generated_Source\PSoC4/CyLFClk.c ****     #if(CY_IP_SRSSV2)
 111:Generated_Source\PSoC4/CyLFClk.c ****         uint8  interruptState;
 112:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 17


 113:Generated_Source\PSoC4/CyLFClk.c ****         /* Do nothing if WDT is locked or ILO is disabled */
 114:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == CySysWdtLocked())
 115:Generated_Source\PSoC4/CyLFClk.c ****         {
 116:Generated_Source\PSoC4/CyLFClk.c ****             if (0u != CySysClkIloEnabled())
 117:Generated_Source\PSoC4/CyLFClk.c ****             {
 118:Generated_Source\PSoC4/CyLFClk.c **** 
 119:Generated_Source\PSoC4/CyLFClk.c ****             #if (CY_IP_WCO)
 120:Generated_Source\PSoC4/CyLFClk.c ****                 if (CY_SYS_CLK_LFCLK_SRC_ILO == CySysClkGetLfclkSource())
 121:Generated_Source\PSoC4/CyLFClk.c ****                 {
 122:Generated_Source\PSoC4/CyLFClk.c ****             #endif /* (CY_IP_WCO) */
 123:Generated_Source\PSoC4/CyLFClk.c **** 
 124:Generated_Source\PSoC4/CyLFClk.c ****                 interruptState = CyEnterCriticalSection();
 125:Generated_Source\PSoC4/CyLFClk.c ****                 CySysClkLfclkPosedgeCatch();
 126:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_ILO_CONFIG_REG &= (uint32) ( ~(uint32)CY_SYS_CLK_ILO_CONFIG_ENABLE);
 127:Generated_Source\PSoC4/CyLFClk.c ****                 CySysClkLfclkPosedgeRestore();
 128:Generated_Source\PSoC4/CyLFClk.c ****                 CyExitCriticalSection(interruptState);
 129:Generated_Source\PSoC4/CyLFClk.c **** 
 130:Generated_Source\PSoC4/CyLFClk.c ****             #if (CY_IP_WCO)
 131:Generated_Source\PSoC4/CyLFClk.c ****                 }
 132:Generated_Source\PSoC4/CyLFClk.c ****                 else /* Safe to disable - shortened pulse does not impact peripheral */
 133:Generated_Source\PSoC4/CyLFClk.c ****                 {
 134:Generated_Source\PSoC4/CyLFClk.c ****                     CY_SYS_CLK_ILO_CONFIG_REG &= (uint32) ( ~(uint32)CY_SYS_CLK_ILO_CONFIG_ENABLE);
 135:Generated_Source\PSoC4/CyLFClk.c ****                 }
 136:Generated_Source\PSoC4/CyLFClk.c ****             #endif /* (CY_IP_WCO) */
 137:Generated_Source\PSoC4/CyLFClk.c **** 
 138:Generated_Source\PSoC4/CyLFClk.c ****             }
 139:Generated_Source\PSoC4/CyLFClk.c ****         }
 140:Generated_Source\PSoC4/CyLFClk.c ****     #else
 141:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_ILO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_ILO_CONFIG_ENABLE);
 142:Generated_Source\PSoC4/CyLFClk.c ****     #endif /* (CY_IP_SRSSV2) */
 143:Generated_Source\PSoC4/CyLFClk.c **** }
 144:Generated_Source\PSoC4/CyLFClk.c **** 
 145:Generated_Source\PSoC4/CyLFClk.c **** 
 146:Generated_Source\PSoC4/CyLFClk.c **** /******************************************************************************
 147:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStartMeasurement
 148:Generated_Source\PSoC4/CyLFClk.c **** ***************************************************************************//**
 149:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 150:Generated_Source\PSoC4/CyLFClk.c **** * Starts the ILO accuracy measurement.
 151:Generated_Source\PSoC4/CyLFClk.c **** *
 152:Generated_Source\PSoC4/CyLFClk.c **** * This function is non-blocking and needs to be called before using the 
 153:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloTrim() and CySysClkIloCompensate() API.
 154:Generated_Source\PSoC4/CyLFClk.c **** *
 155:Generated_Source\PSoC4/CyLFClk.c **** * This API configures measurement counters to be sourced by SysClk (Counter 1)
 156:Generated_Source\PSoC4/CyLFClk.c **** * and ILO (Counter 2). 
 157:Generated_Source\PSoC4/CyLFClk.c **** *
 158:Generated_Source\PSoC4/CyLFClk.c **** * \note SysClk should be sourced by IMO. Otherwise CySysClkIloTrim() and 
 159:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloCompensate() API can give incorrect results.
 160:Generated_Source\PSoC4/CyLFClk.c **** *
 161:Generated_Source\PSoC4/CyLFClk.c **** * In addition, this API stores the factory ILO trim settings on the first call 
 162:Generated_Source\PSoC4/CyLFClk.c **** * after reset. This stored factory setting is used by the 
 163:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloRestoreFactoryTrim() API to restore the ILO factory trim. 
 164:Generated_Source\PSoC4/CyLFClk.c **** * Hence, it is important to call this API before restoring the ILO 
 165:Generated_Source\PSoC4/CyLFClk.c **** * factory trim settings.
 166:Generated_Source\PSoC4/CyLFClk.c **** *
 167:Generated_Source\PSoC4/CyLFClk.c **** ******************************************************************************/
 168:Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStartMeasurement(void)
 169:Generated_Source\PSoC4/CyLFClk.c **** {
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 18


 118              		.loc 2 169 0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122              		@ link register save eliminated.
 170:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 && (!CY_IP_CPUSS))
 171:Generated_Source\PSoC4/CyLFClk.c ****     static uint8 iloTrimTrig = 0u;
 172:Generated_Source\PSoC4/CyLFClk.c **** 
 173:Generated_Source\PSoC4/CyLFClk.c ****     /* Write default ILO trim value while ILO starting ( Cypress ID 225244 )*/
 174:Generated_Source\PSoC4/CyLFClk.c ****     if (0u == iloTrimTrig)
 123              		.loc 2 174 0
 124 0000 0D4A     		ldr	r2, .L10
 125 0002 1378     		ldrb	r3, [r2]
 126 0004 002B     		cmp	r3, #0
 127 0006 07D1     		bne	.L8
 175:Generated_Source\PSoC4/CyLFClk.c ****     {
 176:Generated_Source\PSoC4/CyLFClk.c ****         defaultIloTrimRegValue = ((uint8)(CY_SYS_CLK_ILO_TRIM_REG & CY_SYS_CLK_ILO_TRIM_MASK));
 128              		.loc 2 176 0
 129 0008 0C4B     		ldr	r3, .L10+4
 130 000a 1968     		ldr	r1, [r3]
 131 000c 0F23     		movs	r3, #15
 132 000e 0B40     		ands	r3, r1
 133 0010 0B49     		ldr	r1, .L10+8
 134 0012 0B80     		strh	r3, [r1]
 177:Generated_Source\PSoC4/CyLFClk.c ****         iloTrimTrig = 1u;
 135              		.loc 2 177 0
 136 0014 0123     		movs	r3, #1
 137 0016 1370     		strb	r3, [r2]
 138              	.L8:
 178:Generated_Source\PSoC4/CyLFClk.c ****     }
 179:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2 && (!CY_IP_CPUSS)) */
 180:Generated_Source\PSoC4/CyLFClk.c **** 
 181:Generated_Source\PSoC4/CyLFClk.c ****     /* Configure measurement counters to source by SysClk (Counter 1) and ILO (Counter 2)*/
 182:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_CLK_DFT_REG = (CY_SYS_CLK_DFT_REG & (uint32) ~CY_SYS_CLK_DFT_SELECT_DEFAULT_MASK) |
 139              		.loc 2 182 0
 140 0018 0A4A     		ldr	r2, .L10+12
 141 001a 0B4B     		ldr	r3, .L10+16
 142 001c 1168     		ldr	r1, [r2]
 183:Generated_Source\PSoC4/CyLFClk.c ****                             CY_SYS_CLK_SEL_ILO_DFT_SOURCE; 
 184:Generated_Source\PSoC4/CyLFClk.c **** 
 185:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_TST_DDFT_CTRL_REG = (CY_SYS_TST_DDFT_CTRL_REG & (uint32) ~ CY_SYS_TST_DDFT_CTRL_REG_DEFA
 186:Generated_Source\PSoC4/CyLFClk.c ****                             CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1;
 187:Generated_Source\PSoC4/CyLFClk.c **** }
 143              		.loc 2 187 0
 144              		@ sp needed
 182:Generated_Source\PSoC4/CyLFClk.c ****                             CY_SYS_CLK_SEL_ILO_DFT_SOURCE; 
 145              		.loc 2 182 0
 146 001e 0B40     		ands	r3, r1
 147 0020 8021     		movs	r1, #128
 148 0022 4900     		lsls	r1, r1, #1
 149 0024 0B43     		orrs	r3, r1
 150 0026 1360     		str	r3, [r2]
 185:Generated_Source\PSoC4/CyLFClk.c ****                             CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1;
 151              		.loc 2 185 0
 152 0028 084A     		ldr	r2, .L10+20
 153 002a 094B     		ldr	r3, .L10+24
 154 002c 1168     		ldr	r1, [r2]
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 19


 155 002e 0B40     		ands	r3, r1
 156 0030 0849     		ldr	r1, .L10+28
 157 0032 0B43     		orrs	r3, r1
 158 0034 1360     		str	r3, [r2]
 159              		.loc 2 187 0
 160 0036 7047     		bx	lr
 161              	.L11:
 162              		.align	2
 163              	.L10:
 164 0038 00000000 		.word	.LANCHOR0
 165 003c 24FF0B40 		.word	1074528036
 166 0040 00000000 		.word	.LANCHOR1
 167 0044 10010B40 		.word	1074462992
 168 0048 FFF0FFFF 		.word	-3841
 169 004c 08000340 		.word	1073938440
 170 0050 C0C0FFFF 		.word	-16192
 171 0054 0A0B0000 		.word	2826
 172              		.cfi_endproc
 173              	.LFE3:
 174              		.size	CySysClkIloStartMeasurement, .-CySysClkIloStartMeasurement
 175              		.section	.text.CySysClkIloStopMeasurement,"ax",%progbits
 176              		.align	1
 177              		.global	CySysClkIloStopMeasurement
 178              		.code	16
 179              		.thumb_func
 180              		.type	CySysClkIloStopMeasurement, %function
 181              	CySysClkIloStopMeasurement:
 182              	.LFB4:
 188:Generated_Source\PSoC4/CyLFClk.c **** 
 189:Generated_Source\PSoC4/CyLFClk.c **** 
 190:Generated_Source\PSoC4/CyLFClk.c **** /******************************************************************************
 191:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStopMeasurement
 192:Generated_Source\PSoC4/CyLFClk.c **** ***************************************************************************//**
 193:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 194:Generated_Source\PSoC4/CyLFClk.c **** * Stops the ILO accuracy measurement.
 195:Generated_Source\PSoC4/CyLFClk.c **** *
 196:Generated_Source\PSoC4/CyLFClk.c **** * Calling this function immediately stops the the ILO frequency measurement.
 197:Generated_Source\PSoC4/CyLFClk.c **** * This function should be called before placing the device to deepsleep, if 
 198:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloStartMeasurement() API was called before. 
 199:Generated_Source\PSoC4/CyLFClk.c **** *
 200:Generated_Source\PSoC4/CyLFClk.c **** ******************************************************************************/
 201:Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStopMeasurement(void)
 202:Generated_Source\PSoC4/CyLFClk.c **** {
 183              		.loc 2 202 0
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 0
 186              		@ frame_needed = 0, uses_anonymous_args = 0
 187              		@ link register save eliminated.
 203:Generated_Source\PSoC4/CyLFClk.c ****     /* Set default configurations in 11...8 DFT register bits to zero */
 204:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_CLK_DFT_REG &= ~CY_SYS_CLK_DFT_SELECT_DEFAULT_MASK;
 188              		.loc 2 204 0
 189 0000 024A     		ldr	r2, .L13
 190 0002 034B     		ldr	r3, .L13+4
 191 0004 1168     		ldr	r1, [r2]
 205:Generated_Source\PSoC4/CyLFClk.c ****     #if(CY_IP_SRSSLT)
 206:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_TST_DDFT_CTRL_REG &= ((uint32) CY_SYS_TST_DDFT_CTRL_REG_DEFAULT_MASK);
 207:Generated_Source\PSoC4/CyLFClk.c ****     #endif /* (CY_IP_SRSSLT) */
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 20


 208:Generated_Source\PSoC4/CyLFClk.c **** }
 192              		.loc 2 208 0
 193              		@ sp needed
 204:Generated_Source\PSoC4/CyLFClk.c ****     #if(CY_IP_SRSSLT)
 194              		.loc 2 204 0
 195 0006 0B40     		ands	r3, r1
 196 0008 1360     		str	r3, [r2]
 197              		.loc 2 208 0
 198 000a 7047     		bx	lr
 199              	.L14:
 200              		.align	2
 201              	.L13:
 202 000c 10010B40 		.word	1074462992
 203 0010 FFF0FFFF 		.word	-3841
 204              		.cfi_endproc
 205              	.LFE4:
 206              		.size	CySysClkIloStopMeasurement, .-CySysClkIloStopMeasurement
 207              		.global	__aeabi_uidiv
 208              		.section	.text.CySysClkIloCompensate,"ax",%progbits
 209              		.align	1
 210              		.global	CySysClkIloCompensate
 211              		.code	16
 212              		.thumb_func
 213              		.type	CySysClkIloCompensate, %function
 214              	CySysClkIloCompensate:
 215              	.LFB5:
 209:Generated_Source\PSoC4/CyLFClk.c **** 
 210:Generated_Source\PSoC4/CyLFClk.c **** 
 211:Generated_Source\PSoC4/CyLFClk.c **** /******************************************************************************
 212:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloCompensate
 213:Generated_Source\PSoC4/CyLFClk.c **** ***************************************************************************//**
 214:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 215:Generated_Source\PSoC4/CyLFClk.c **** * This API measures the current ILO accuracy.
 216:Generated_Source\PSoC4/CyLFClk.c **** *
 217:Generated_Source\PSoC4/CyLFClk.c **** * Basing on the measured frequency the required number of ILO cycles for a 
 218:Generated_Source\PSoC4/CyLFClk.c **** * given delay (in microseconds) is obtained. The desired delay that needs to 
 219:Generated_Source\PSoC4/CyLFClk.c **** * be compensated is passed through the desiredDelay parameter. The compensated 
 220:Generated_Source\PSoC4/CyLFClk.c **** * cycle count is returned through the compesatedCycles pointer.
 221:Generated_Source\PSoC4/CyLFClk.c **** * The compensated ILO cycles can then be used to define the WDT period value, 
 222:Generated_Source\PSoC4/CyLFClk.c **** * effectively compensating for the ILO inaccuracy and allowing a more 
 223:Generated_Source\PSoC4/CyLFClk.c **** * accurate WDT interrupt generation.
 224:Generated_Source\PSoC4/CyLFClk.c **** *
 225:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloStartMeasurement() API should be called prior to calling this API. 
 226:Generated_Source\PSoC4/CyLFClk.c **** *
 227:Generated_Source\PSoC4/CyLFClk.c **** * \note SysClk should be sourced by IMO. Otherwise CySysClkIloTrim() and 
 228:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloCompensate() API can give incorrect results.
 229:Generated_Source\PSoC4/CyLFClk.c **** *
 230:Generated_Source\PSoC4/CyLFClk.c **** * \note If the System clock frequency is changed in runtime, the CyDelayFreq() 
 231:Generated_Source\PSoC4/CyLFClk.c **** * with the appropriate parameter (Frequency of bus clock in Hertz) should be 
 232:Generated_Source\PSoC4/CyLFClk.c **** * called before calling a next CySysClkIloCompensate().
 233:Generated_Source\PSoC4/CyLFClk.c **** *
 234:Generated_Source\PSoC4/CyLFClk.c **** * \warning Do not enter deep sleep mode until the function returns CYRET_SUCCESS.
 235:Generated_Source\PSoC4/CyLFClk.c **** *
 236:Generated_Source\PSoC4/CyLFClk.c **** * \param desiredDelay Required delay in microseconds.
 237:Generated_Source\PSoC4/CyLFClk.c **** *
 238:Generated_Source\PSoC4/CyLFClk.c **** * \param *compensatedCycles The pointer to the variable in which the required
 239:Generated_Source\PSoC4/CyLFClk.c **** * number of ILO cycles for the given delay will be returned.
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 21


 240:Generated_Source\PSoC4/CyLFClk.c **** *
 241:Generated_Source\PSoC4/CyLFClk.c **** * \details
 242:Generated_Source\PSoC4/CyLFClk.c **** * The value returned in *compensatedCycles pointer is not valid until the 
 243:Generated_Source\PSoC4/CyLFClk.c **** * function returns CYRET_SUCCESS.
 244:Generated_Source\PSoC4/CyLFClk.c **** *
 245:Generated_Source\PSoC4/CyLFClk.c **** * The desiredDelay parameter value should be in next range: <br>From 100 to 
 246:Generated_Source\PSoC4/CyLFClk.c **** * 2 000 000 microseconds for PSoC 4000 / PSoC 4000S / PSoC 4100S / PSoC Analog 
 247:Generated_Source\PSoC4/CyLFClk.c **** * Coprocessor devices.<br>From 100 to 4 000 000 000 microseconds for 
 248:Generated_Source\PSoC4/CyLFClk.c **** * PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE /
 249:Generated_Source\PSoC4/CyLFClk.c **** * PSoC 4200L / PSoC 4100M /PSoC 4200M devices.
 250:Generated_Source\PSoC4/CyLFClk.c **** *
 251:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - The compensation process is complete and the 
 252:Generated_Source\PSoC4/CyLFClk.c **** * compensated cycles value is returned in the compensatedCycles pointer.
 253:Generated_Source\PSoC4/CyLFClk.c **** *
 254:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_STARTED - Indicates measurement is in progress. It is 
 255:Generated_Source\PSoC4/CyLFClk.c **** * strongly recommended to do not make pauses between API calling. The 
 256:Generated_Source\PSoC4/CyLFClk.c **** * function should be called repeatedly until the API returns CYRET_SUCCESS.
 257:Generated_Source\PSoC4/CyLFClk.c **** *
 258:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_INVALID_STATE - Indicates that measurement not started. 
 259:Generated_Source\PSoC4/CyLFClk.c **** * The user should call CySysClkIloStartMeasurement() API before calling 
 260:Generated_Source\PSoC4/CyLFClk.c **** * this API.
 261:Generated_Source\PSoC4/CyLFClk.c **** *
 262:Generated_Source\PSoC4/CyLFClk.c **** * \note For a correct WDT or DeepSleep Timers functioning with ILO compensating 
 263:Generated_Source\PSoC4/CyLFClk.c **** * the CySysClkIloCompensate() should be called before WDT or DeepSleep Timers 
 264:Generated_Source\PSoC4/CyLFClk.c **** * enabling.
 265:Generated_Source\PSoC4/CyLFClk.c **** *
 266:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
 267:Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloCompensate(uint32 desiredDelay , uint32* compensatedCycles)
 268:Generated_Source\PSoC4/CyLFClk.c **** {
 216              		.loc 2 268 0
 217              		.cfi_startproc
 218              		@ args = 0, pretend = 0, frame = 8
 219              		@ frame_needed = 0, uses_anonymous_args = 0
 220              	.LVL0:
 269:Generated_Source\PSoC4/CyLFClk.c ****     uint32 iloCompensatedCycles;
 270:Generated_Source\PSoC4/CyLFClk.c ****     uint32 desiredDelayInCounts;
 271:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 272:Generated_Source\PSoC4/CyLFClk.c ****     uint32 checkStatus;
 273:Generated_Source\PSoC4/CyLFClk.c ****     cystatus returnStatus;
 274:Generated_Source\PSoC4/CyLFClk.c **** 
 275:Generated_Source\PSoC4/CyLFClk.c ****     checkStatus = (uint32) (CY_SYS_CLK_DFT_REG & (uint32) CY_SYS_TST_DDFT_CTRL_REG_DEFAULT_MASK);
 221              		.loc 2 275 0
 222 0000 2C4B     		ldr	r3, .L27
 268:Generated_Source\PSoC4/CyLFClk.c ****     uint32 iloCompensatedCycles;
 223              		.loc 2 268 0
 224 0002 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 225              		.cfi_def_cfa_offset 32
 226              		.cfi_offset 0, -32
 227              		.cfi_offset 1, -28
 228              		.cfi_offset 2, -24
 229              		.cfi_offset 4, -20
 230              		.cfi_offset 5, -16
 231              		.cfi_offset 6, -12
 232              		.cfi_offset 7, -8
 233              		.cfi_offset 14, -4
 234              		.loc 2 275 0
 235 0004 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 22


 236              	.LVL1:
 276:Generated_Source\PSoC4/CyLFClk.c **** 
 277:Generated_Source\PSoC4/CyLFClk.c ****     /* Check if CySysStartMeasurement was called before */
 278:Generated_Source\PSoC4/CyLFClk.c ****     if((checkStatus == CY_SYS_CLK_SEL_ILO_DFT_SOURCE) && 
 237              		.loc 2 278 0
 238 0006 2C4B     		ldr	r3, .L27+4
 268:Generated_Source\PSoC4/CyLFClk.c ****     uint32 iloCompensatedCycles;
 239              		.loc 2 268 0
 240 0008 0500     		movs	r5, r0
 241              		.loc 2 278 0
 242 000a 1340     		ands	r3, r2
 243              	.LVL2:
 244 000c 8022     		movs	r2, #128
 268:Generated_Source\PSoC4/CyLFClk.c ****     uint32 iloCompensatedCycles;
 245              		.loc 2 268 0
 246 000e 0E00     		movs	r6, r1
 247              		.loc 2 278 0
 248 0010 5200     		lsls	r2, r2, #1
 279:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 280:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_CLK_MAX_DELAY_US >= desiredDelay) &&
 281:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_CLK_MIN_DELAY_US <= desiredDelay) &&
 282:Generated_Source\PSoC4/CyLFClk.c ****        (compensatedCycles !=  NULL))
 283:Generated_Source\PSoC4/CyLFClk.c ****     {
 284:Generated_Source\PSoC4/CyLFClk.c ****         if(CY_SYS_CLK_TRIM_OR_COMP_FINISHED != compensateRunningStatus)
 285:Generated_Source\PSoC4/CyLFClk.c ****         {
 286:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait until counter 1 stopped counting and after it calculate compensated cycles */
 287:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_CNT_REG1_REG & CY_SYS_CLK_ILO_CALIBR_COMPLETE_MASK))
 288:Generated_Source\PSoC4/CyLFClk.c ****             {
 289:Generated_Source\PSoC4/CyLFClk.c ****                 if (0u != CY_SYS_CNT_REG2_REG)
 290:Generated_Source\PSoC4/CyLFClk.c ****                 {
 291:Generated_Source\PSoC4/CyLFClk.c ****                     /* Calculate required number of ILO cycles for given delay */
 292:Generated_Source\PSoC4/CyLFClk.c ****                     #if(CY_IP_SRSSV2)
 293:Generated_Source\PSoC4/CyLFClk.c ****                         if (CY_SYS_CLK_DELAY_COUNTS_LIMIT < desiredDelay)
 294:Generated_Source\PSoC4/CyLFClk.c ****                         {
 295:Generated_Source\PSoC4/CyLFClk.c ****                             desiredDelayInCounts = (desiredDelay / CY_SYS_CLK_ILO_PERIOD);
 296:Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = 
 297:Generated_Source\PSoC4/CyLFClk.c ****                             (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / (cydelayFreqHz >> CY_SYS_CLK_
 298:Generated_Source\PSoC4/CyLFClk.c ****                                 CY_SYS_CLK_ILO_FREQ_2MSB) * (desiredDelayInCounts / CY_SYS_CLK_ILO_
 299:Generated_Source\PSoC4/CyLFClk.c ****                         }
 300:Generated_Source\PSoC4/CyLFClk.c ****                         else
 301:Generated_Source\PSoC4/CyLFClk.c ****                         {
 302:Generated_Source\PSoC4/CyLFClk.c ****                             desiredDelayInCounts = ((desiredDelay * CY_SYS_CLK_COEF_PHUNDRED) + 
 303:Generated_Source\PSoC4/CyLFClk.c ****                                                      CY_SYS_CLK_HALF_OF_CLOCK) / CY_SYS_CLK_ILO_PER
 304:Generated_Source\PSoC4/CyLFClk.c **** 
 305:Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / 
 306:Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 307:Generated_Source\PSoC4/CyLFClk.c ****                                                      desiredDelayInCounts) / CY_SYS_CLK_ILO_DESIRED
 308:Generated_Source\PSoC4/CyLFClk.c ****                         }
 309:Generated_Source\PSoC4/CyLFClk.c ****                     #else /* (CY_IP_SRSSLT) */
 310:Generated_Source\PSoC4/CyLFClk.c ****                         desiredDelayInCounts = ((desiredDelay * CY_SYS_CLK_COEF_PHUNDRED) + CY_SYS_
 311:Generated_Source\PSoC4/CyLFClk.c ****                                                                                            CY_SYS_C
 312:Generated_Source\PSoC4/CyLFClk.c ****                         if(CY_SYS_CLK_MAX_LITE_NUMBER < desiredDelayInCounts)
 313:Generated_Source\PSoC4/CyLFClk.c ****                         {
 314:Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / (cydel
 315:Generated_Source\PSoC4/CyLFClk.c ****                                                    CY_SYS_CLK_SYS_CLK_DEVIDER)) / CY_SYS_CLK_ILO_FR
 316:Generated_Source\PSoC4/CyLFClk.c ****                                                    (desiredDelayInCounts / CY_SYS_CLK_ILO_FREQ_3LSB
 317:Generated_Source\PSoC4/CyLFClk.c ****                         }
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 23


 318:Generated_Source\PSoC4/CyLFClk.c ****                         else
 319:Generated_Source\PSoC4/CyLFClk.c ****                         {
 320:Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / 
 321:Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 322:Generated_Source\PSoC4/CyLFClk.c ****                                                      desiredDelayInCounts) / CY_SYS_CLK_ILO_DESIRED
 323:Generated_Source\PSoC4/CyLFClk.c ****                         }
 324:Generated_Source\PSoC4/CyLFClk.c ****                     #endif /* (CY_IP_SRSSV2) */
 325:Generated_Source\PSoC4/CyLFClk.c **** 
 326:Generated_Source\PSoC4/CyLFClk.c ****                     *compensatedCycles = iloCompensatedCycles;
 327:Generated_Source\PSoC4/CyLFClk.c ****                     compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 328:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_SUCCESS;
 329:Generated_Source\PSoC4/CyLFClk.c ****                 }
 330:Generated_Source\PSoC4/CyLFClk.c ****                 else
 331:Generated_Source\PSoC4/CyLFClk.c ****                 {
 332:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus  = CYRET_INVALID_STATE;
 333:Generated_Source\PSoC4/CyLFClk.c ****                 }
 334:Generated_Source\PSoC4/CyLFClk.c ****             }
 335:Generated_Source\PSoC4/CyLFClk.c ****             else
 336:Generated_Source\PSoC4/CyLFClk.c ****             {
 337:Generated_Source\PSoC4/CyLFClk.c ****                 returnStatus = CYRET_STARTED;
 338:Generated_Source\PSoC4/CyLFClk.c ****             }
 339:Generated_Source\PSoC4/CyLFClk.c ****         }
 340:Generated_Source\PSoC4/CyLFClk.c ****         else
 341:Generated_Source\PSoC4/CyLFClk.c ****         {
 342:Generated_Source\PSoC4/CyLFClk.c ****             /* Reload CNTR 1 count value for next measurement cycle*/
 343:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_CNT_REG1_REG = (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER);
 344:Generated_Source\PSoC4/CyLFClk.c ****             compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_STARTED;
 345:Generated_Source\PSoC4/CyLFClk.c ****             returnStatus = CYRET_STARTED;
 346:Generated_Source\PSoC4/CyLFClk.c ****         }
 347:Generated_Source\PSoC4/CyLFClk.c ****     }
 348:Generated_Source\PSoC4/CyLFClk.c ****     else
 349:Generated_Source\PSoC4/CyLFClk.c ****     {
 350:Generated_Source\PSoC4/CyLFClk.c ****         returnStatus = CYRET_INVALID_STATE;
 249              		.loc 2 350 0
 250 0012 1120     		movs	r0, #17
 251              	.LVL3:
 278:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 252              		.loc 2 278 0
 253 0014 9342     		cmp	r3, r2
 254 0016 4BD1     		bne	.L16
 279:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 255              		.loc 2 279 0 discriminator 1
 256 0018 284B     		ldr	r3, .L27+8
 257              	.LVL4:
 258 001a 1A68     		ldr	r2, [r3]
 278:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 259              		.loc 2 278 0 discriminator 1
 260 001c 284B     		ldr	r3, .L27+12
 261 001e 9A42     		cmp	r2, r3
 262 0020 46D1     		bne	.L16
 280:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_CLK_MIN_DELAY_US <= desiredDelay) &&
 263              		.loc 2 280 0
 264 0022 2B00     		movs	r3, r5
 265 0024 274A     		ldr	r2, .L27+16
 266 0026 643B     		subs	r3, r3, #100
 267 0028 9342     		cmp	r3, r2
 268 002a 41D8     		bhi	.L16
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 24


 281:Generated_Source\PSoC4/CyLFClk.c ****        (compensatedCycles !=  NULL))
 269              		.loc 2 281 0
 270 002c 0029     		cmp	r1, #0
 271 002e 3FD0     		beq	.L16
 284:Generated_Source\PSoC4/CyLFClk.c ****         {
 272              		.loc 2 284 0
 273 0030 254B     		ldr	r3, .L27+20
 274 0032 2649     		ldr	r1, .L27+24
 275              	.LVL5:
 276 0034 5A68     		ldr	r2, [r3, #4]
 277 0036 1F00     		movs	r7, r3
 278 0038 002A     		cmp	r2, #0
 279 003a 32D0     		beq	.L17
 287:Generated_Source\PSoC4/CyLFClk.c ****             {
 280              		.loc 2 287 0
 281 003c 0B68     		ldr	r3, [r1]
 337:Generated_Source\PSoC4/CyLFClk.c ****             }
 282              		.loc 2 337 0
 283 003e 0A38     		subs	r0, r0, #10
 287:Generated_Source\PSoC4/CyLFClk.c ****             {
 284              		.loc 2 287 0
 285 0040 002B     		cmp	r3, #0
 286 0042 35DA     		bge	.L16
 289:Generated_Source\PSoC4/CyLFClk.c ****                 {
 287              		.loc 2 289 0
 288 0044 224B     		ldr	r3, .L27+28
 289              		.loc 2 350 0
 290 0046 0A30     		adds	r0, r0, #10
 289:Generated_Source\PSoC4/CyLFClk.c ****                 {
 291              		.loc 2 289 0
 292 0048 1A68     		ldr	r2, [r3]
 293 004a 002A     		cmp	r2, #0
 294 004c 30D0     		beq	.L16
 293:Generated_Source\PSoC4/CyLFClk.c ****                         {
 295              		.loc 2 293 0
 296 004e 2149     		ldr	r1, .L27+32
 297 0050 214A     		ldr	r2, .L27+36
 298 0052 8D42     		cmp	r5, r1
 299 0054 0CD9     		bls	.L18
 300              	.LVL6:
 297:Generated_Source\PSoC4/CyLFClk.c ****                                 CY_SYS_CLK_ILO_FREQ_2MSB) * (desiredDelayInCounts / CY_SYS_CLK_ILO_
 301              		.loc 2 297 0
 302 0056 1168     		ldr	r1, [r2]
 303 0058 1868     		ldr	r0, [r3]
 296:Generated_Source\PSoC4/CyLFClk.c ****                             (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / (cydelayFreqHz >> CY_SYS_CLK_
 304              		.loc 2 296 0
 305 005a 4843     		muls	r0, r1
 306 005c 890A     		lsrs	r1, r1, #10
 307 005e FFF7FEFF 		bl	__aeabi_uidiv
 308              	.LVL7:
 309 0062 1E49     		ldr	r1, .L27+40
 310 0064 4409     		lsrs	r4, r0, #5
 311 0066 2800     		movs	r0, r5
 312 0068 FFF7FEFF 		bl	__aeabi_uidiv
 313              	.LVL8:
 314 006c 6043     		muls	r0, r4
 315              	.LVL9:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 25


 316 006e 14E0     		b	.L19
 317              	.LVL10:
 318              	.L18:
 305:Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 319              		.loc 2 305 0
 320 0070 6420     		movs	r0, #100
 321 0072 1B68     		ldr	r3, [r3]
 322 0074 6843     		muls	r0, r5
 323 0076 0193     		str	r3, [sp, #4]
 324 0078 194B     		ldr	r3, .L27+44
 325 007a 1A49     		ldr	r1, .L27+48
 326 007c C018     		adds	r0, r0, r3
 327 007e 1468     		ldr	r4, [r2]
 328 0080 FFF7FEFF 		bl	__aeabi_uidiv
 329              	.LVL11:
 330 0084 0500     		movs	r5, r0
 331              	.LVL12:
 332 0086 0198     		ldr	r0, [sp, #4]
 333 0088 A10A     		lsrs	r1, r4, #10
 334 008a 6043     		muls	r0, r4
 335 008c FFF7FEFF 		bl	__aeabi_uidiv
 336              	.LVL13:
 337 0090 FA21     		movs	r1, #250
 338 0092 6843     		muls	r0, r5
 339 0094 C901     		lsls	r1, r1, #7
 340 0096 FFF7FEFF 		bl	__aeabi_uidiv
 341              	.LVL14:
 342              	.L19:
 326:Generated_Source\PSoC4/CyLFClk.c ****                     compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 343              		.loc 2 326 0
 344 009a 3060     		str	r0, [r6]
 327:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_SUCCESS;
 345              		.loc 2 327 0
 346 009c 0020     		movs	r0, #0
 347              	.LVL15:
 348 009e 7860     		str	r0, [r7, #4]
 349              	.LVL16:
 350 00a0 06E0     		b	.L16
 351              	.LVL17:
 352              	.L17:
 343:Generated_Source\PSoC4/CyLFClk.c ****             compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_STARTED;
 353              		.loc 2 343 0
 354 00a2 0D4A     		ldr	r2, .L27+36
 345:Generated_Source\PSoC4/CyLFClk.c ****         }
 355              		.loc 2 345 0
 356 00a4 0720     		movs	r0, #7
 343:Generated_Source\PSoC4/CyLFClk.c ****             compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_STARTED;
 357              		.loc 2 343 0
 358 00a6 1268     		ldr	r2, [r2]
 359 00a8 920A     		lsrs	r2, r2, #10
 360 00aa 0A60     		str	r2, [r1]
 344:Generated_Source\PSoC4/CyLFClk.c ****             returnStatus = CYRET_STARTED;
 361              		.loc 2 344 0
 362 00ac 0122     		movs	r2, #1
 363 00ae 5A60     		str	r2, [r3, #4]
 364              	.LVL18:
 365              	.L16:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 26


 351:Generated_Source\PSoC4/CyLFClk.c ****     }
 352:Generated_Source\PSoC4/CyLFClk.c **** 
 353:Generated_Source\PSoC4/CyLFClk.c ****     return (returnStatus);
 354:Generated_Source\PSoC4/CyLFClk.c **** }
 366              		.loc 2 354 0
 367              		@ sp needed
 368              	.LVL19:
 369 00b0 FEBD     		pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 370              	.L28:
 371 00b2 C046     		.align	2
 372              	.L27:
 373 00b4 10010B40 		.word	1074462992
 374 00b8 3F3F0000 		.word	16191
 375 00bc 08000340 		.word	1073938440
 376 00c0 0A0B0000 		.word	2826
 377 00c4 9C276BEE 		.word	-294967396
 378 00c8 00000000 		.word	.LANCHOR0
 379 00cc 18000340 		.word	1073938456
 380 00d0 1C000340 		.word	1073938460
 381 00d4 60D10000 		.word	53600
 382 00d8 00000000 		.word	cydelayFreqHz
 383 00dc 18790000 		.word	31000
 384 00e0 0D030000 		.word	781
 385 00e4 350C0000 		.word	3125
 386              		.cfi_endproc
 387              	.LFE5:
 388              		.size	CySysClkIloCompensate, .-CySysClkIloCompensate
 389              		.global	__aeabi_idiv
 390              		.section	.text.CySysClkIloUpdateTrimReg,"ax",%progbits
 391              		.align	1
 392              		.global	CySysClkIloUpdateTrimReg
 393              		.code	16
 394              		.thumb_func
 395              		.type	CySysClkIloUpdateTrimReg, %function
 396              	CySysClkIloUpdateTrimReg:
 397              	.LFB8:
 355:Generated_Source\PSoC4/CyLFClk.c **** 
 356:Generated_Source\PSoC4/CyLFClk.c **** 
 357:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
 358:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 359:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkIloEnabled
 360:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 361:Generated_Source\PSoC4/CyLFClk.c ****     *
 362:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
 363:Generated_Source\PSoC4/CyLFClk.c ****     * Reports the ILO enable state.
 364:Generated_Source\PSoC4/CyLFClk.c ****     *
 365:Generated_Source\PSoC4/CyLFClk.c ****     * \return
 366:Generated_Source\PSoC4/CyLFClk.c ****     * 1 if ILO is enabled, and 0 if ILO is disabled.
 367:Generated_Source\PSoC4/CyLFClk.c ****     *
 368:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
 369:Generated_Source\PSoC4/CyLFClk.c ****     ********************************************************************************/
 370:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkIloEnabled(void)
 371:Generated_Source\PSoC4/CyLFClk.c ****     {
 372:Generated_Source\PSoC4/CyLFClk.c ****         /* Prohibits writing to WDT registers and ILO/WCO registers when not equal to 0 */
 373:Generated_Source\PSoC4/CyLFClk.c ****         return ((0u != (CY_SYS_CLK_ILO_CONFIG_REG & (uint32)(CY_SYS_CLK_ILO_CONFIG_ENABLE))) ?
 374:Generated_Source\PSoC4/CyLFClk.c ****             (uint32) 1u :
 375:Generated_Source\PSoC4/CyLFClk.c ****             (uint32) 0u);
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 27


 376:Generated_Source\PSoC4/CyLFClk.c ****     }
 377:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2) */
 378:Generated_Source\PSoC4/CyLFClk.c **** 
 379:Generated_Source\PSoC4/CyLFClk.c **** 
 380:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 && (!CY_IP_CPUSS))
 381:Generated_Source\PSoC4/CyLFClk.c **** /********************************************************************************
 382:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloTrim
 383:Generated_Source\PSoC4/CyLFClk.c **** *****************************************************************************//**
 384:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 385:Generated_Source\PSoC4/CyLFClk.c **** * The API trims the ILO frequency to +/- 10% accuracy range using accurate 
 386:Generated_Source\PSoC4/CyLFClk.c **** * SysClk.
 387:Generated_Source\PSoC4/CyLFClk.c **** *
 388:Generated_Source\PSoC4/CyLFClk.c **** * The API can be blocking or non-blocking depending on the value of the mode 
 389:Generated_Source\PSoC4/CyLFClk.c **** * parameter passed. The accuracy of ILO after trimming in parts per thousand 
 390:Generated_Source\PSoC4/CyLFClk.c **** * is returned through the iloAccuracyInPPT pointer. A positive number indicates 
 391:Generated_Source\PSoC4/CyLFClk.c **** * that the ILO is running fast and a negative number indicates that the ILO is 
 392:Generated_Source\PSoC4/CyLFClk.c **** * running slowly. This error is relative to the error in the reference clock 
 393:Generated_Source\PSoC4/CyLFClk.c **** * (SysClk), so the absolute error will be higher and depends on the accuracy 
 394:Generated_Source\PSoC4/CyLFClk.c **** * of the reference.
 395:Generated_Source\PSoC4/CyLFClk.c **** *
 396:Generated_Source\PSoC4/CyLFClk.c **** * The CySysClkIloStartMeasurement() API should be called prior to calling this 
 397:Generated_Source\PSoC4/CyLFClk.c **** * API. Otherwise it will return CYRET_INVALID_STATE as the measurement was not 
 398:Generated_Source\PSoC4/CyLFClk.c **** * started.
 399:Generated_Source\PSoC4/CyLFClk.c **** *
 400:Generated_Source\PSoC4/CyLFClk.c **** * \note SysClk should be sourced by IMO. Otherwise CySysClkIloTrim() and 
 401:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloCompensate() API can give incorrect results.
 402:Generated_Source\PSoC4/CyLFClk.c **** *
 403:Generated_Source\PSoC4/CyLFClk.c **** * \note If System clock frequency is changed in runtime, the CyDelayFreq() 
 404:Generated_Source\PSoC4/CyLFClk.c **** * with the appropriate parameter (Frequency of bus clock in Hertz) should be 
 405:Generated_Source\PSoC4/CyLFClk.c **** * called before next CySysClkIloCompensate() usage.
 406:Generated_Source\PSoC4/CyLFClk.c **** *
 407:Generated_Source\PSoC4/CyLFClk.c **** * \warning Do not enter deep sleep mode until the function returns CYRET_SUCCESS
 408:Generated_Source\PSoC4/CyLFClk.c **** * or CYRET_TIMEOUT.
 409:Generated_Source\PSoC4/CyLFClk.c **** *
 410:Generated_Source\PSoC4/CyLFClk.c **** * Available for all PSoC 4 devices with ILO trim capability. This excludes 
 411:Generated_Source\PSoC4/CyLFClk.c **** * PSoC 4000 / PSoC 4100 / PSoC 4200 / PSoC 4000S / PSoC 4100S / PSoC
 412:Generated_Source\PSoC4/CyLFClk.c **** * Analog Coprocessor devices.
 413:Generated_Source\PSoC4/CyLFClk.c **** *
 414:Generated_Source\PSoC4/CyLFClk.c **** * \param mode
 415:Generated_Source\PSoC4/CyLFClk.c **** *  CY_SYS_CLK_BLOCKING -  The function does not return until the ILO is 
 416:Generated_Source\PSoC4/CyLFClk.c **** * within +/-10% accuracy range or time out has occurred.<br>
 417:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_NON_BLOCKING - The function returns immediately after 
 418:Generated_Source\PSoC4/CyLFClk.c **** * performing a single iteration of the trim process. The function should be 
 419:Generated_Source\PSoC4/CyLFClk.c **** * called repeatedly until the trimming is completed successfully.
 420:Generated_Source\PSoC4/CyLFClk.c **** *
 421:Generated_Source\PSoC4/CyLFClk.c **** * \param *iloAccuracyInPPT Pointer to an integer in which the trimmed ILO 
 422:Generated_Source\PSoC4/CyLFClk.c **** * accuracy will be returned.
 423:Generated_Source\PSoC4/CyLFClk.c **** *
 424:Generated_Source\PSoC4/CyLFClk.c **** * \details The value returned in *iloAccuracyInPPT pointer is not valid 
 425:Generated_Source\PSoC4/CyLFClk.c **** * until the function returns CYRET_SUCCESS. ILO accuracy in PPT is given by:
 426:Generated_Source\PSoC4/CyLFClk.c **** *
 427:Generated_Source\PSoC4/CyLFClk.c **** * IloAccuracyInPPT = ((MeasuredIloFreq - DesiredIloFreq) * 
 428:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_PERTHOUSAND) / DesiredIloFreq);
 429:Generated_Source\PSoC4/CyLFClk.c **** *
 430:Generated_Source\PSoC4/CyLFClk.c **** * DesiredIloFreq  = 32000, CY_SYS_CLK_PERTHOUSAND = 1000;
 431:Generated_Source\PSoC4/CyLFClk.c **** *
 432:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - Indicates trimming is complete. This value indicates 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 28


 433:Generated_Source\PSoC4/CyLFClk.c **** * trimming is successful and iloAccuracyInPPT is within +/- 10%.
 434:Generated_Source\PSoC4/CyLFClk.c **** *
 435:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_STARTED - Indicates measurement is in progress. This is applicable 
 436:Generated_Source\PSoC4/CyLFClk.c **** * only for non-blocking mode.
 437:Generated_Source\PSoC4/CyLFClk.c **** *
 438:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_INVALID_STATE - Indicates trimming was unsuccessful. You should 
 439:Generated_Source\PSoC4/CyLFClk.c **** * call CySysClkIloStartMeasurement() before calling this API.
 440:Generated_Source\PSoC4/CyLFClk.c **** *
 441:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_TIMEOUT - Indicates trimming was unsuccessful. This is applicable 
 442:Generated_Source\PSoC4/CyLFClk.c **** * only for blocking mode. Timeout means the trimming was tried 5 times without 
 443:Generated_Source\PSoC4/CyLFClk.c **** * success (i.e. ILO accuracy > +/- 10%). The user can call the API again for 
 444:Generated_Source\PSoC4/CyLFClk.c **** * another try or wait for some time before calling it again (to let the system 
 445:Generated_Source\PSoC4/CyLFClk.c **** * to settle to another operating point change in temperature etc.) and continue 
 446:Generated_Source\PSoC4/CyLFClk.c **** * using the previous trim value till the next call.
 447:Generated_Source\PSoC4/CyLFClk.c **** *
 448:Generated_Source\PSoC4/CyLFClk.c **** **********************************************************************************/
 449:Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloTrim(uint32 mode, int32* iloAccuracyInPPT)
 450:Generated_Source\PSoC4/CyLFClk.c **** {
 451:Generated_Source\PSoC4/CyLFClk.c ****     uint32 timeOutClocks = CY_SYS_CLK_TIMEOUT;
 452:Generated_Source\PSoC4/CyLFClk.c ****     uint32 waitUntilCntr1Stops;
 453:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 454:Generated_Source\PSoC4/CyLFClk.c ****     uint32 checkStatus;
 455:Generated_Source\PSoC4/CyLFClk.c ****     cystatus returnStatus;
 456:Generated_Source\PSoC4/CyLFClk.c **** 
 457:Generated_Source\PSoC4/CyLFClk.c ****     checkStatus = (uint32) (CY_SYS_CLK_DFT_REG & (uint32) CY_SYS_TST_DDFT_CTRL_REG_DEFAULT_MASK);
 458:Generated_Source\PSoC4/CyLFClk.c **** 
 459:Generated_Source\PSoC4/CyLFClk.c ****     /* Check if DFT and CTRL registers were configures in CySysStartMeasurement*/
 460:Generated_Source\PSoC4/CyLFClk.c ****     if((checkStatus == CY_SYS_CLK_SEL_ILO_DFT_SOURCE) &&
 461:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 462:Generated_Source\PSoC4/CyLFClk.c ****        (iloAccuracyInPPT != NULL))
 463:Generated_Source\PSoC4/CyLFClk.c ****     {
 464:Generated_Source\PSoC4/CyLFClk.c ****         if(CY_SYS_CLK_BLOCKING == mode)
 465:Generated_Source\PSoC4/CyLFClk.c ****         {
 466:Generated_Source\PSoC4/CyLFClk.c ****             waitUntilCntr1Stops = cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER;
 467:Generated_Source\PSoC4/CyLFClk.c ****             do
 468:Generated_Source\PSoC4/CyLFClk.c ****             {
 469:Generated_Source\PSoC4/CyLFClk.c ****                 /* Reload CNTR 1 count value for measuring cycle*/
 470:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CNT_REG1_REG = cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER; 
 471:Generated_Source\PSoC4/CyLFClk.c **** 
 472:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait until counter CNTR 1 will finish down-counting */
 473:Generated_Source\PSoC4/CyLFClk.c ****                 while (0u == (CY_SYS_CNT_REG1_REG & CY_SYS_CLK_ILO_CALIBR_COMPLETE_MASK))
 474:Generated_Source\PSoC4/CyLFClk.c ****                 {
 475:Generated_Source\PSoC4/CyLFClk.c ****                     waitUntilCntr1Stops--;
 476:Generated_Source\PSoC4/CyLFClk.c ****                     if (0u == waitUntilCntr1Stops)
 477:Generated_Source\PSoC4/CyLFClk.c ****                     {
 478:Generated_Source\PSoC4/CyLFClk.c ****                         break;
 479:Generated_Source\PSoC4/CyLFClk.c ****                     }
 480:Generated_Source\PSoC4/CyLFClk.c ****                 }
 481:Generated_Source\PSoC4/CyLFClk.c ****                 trimRunningStatus = CySysClkIloUpdateTrimReg(iloAccuracyInPPT);
 482:Generated_Source\PSoC4/CyLFClk.c ****                 timeOutClocks--;
 483:Generated_Source\PSoC4/CyLFClk.c **** 
 484:Generated_Source\PSoC4/CyLFClk.c ****             /* Untill ILO accuracy will be in range less than +/- 10% or timeout occurs*/
 485:Generated_Source\PSoC4/CyLFClk.c ****             } while((CYRET_SUCCESS != trimRunningStatus) && 
 486:Generated_Source\PSoC4/CyLFClk.c ****               (CYRET_INVALID_STATE != trimRunningStatus) && 
 487:Generated_Source\PSoC4/CyLFClk.c ****                                (0u != timeOutClocks));
 488:Generated_Source\PSoC4/CyLFClk.c **** 
 489:Generated_Source\PSoC4/CyLFClk.c ****             if (CYRET_SUCCESS == trimRunningStatus)
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 29


 490:Generated_Source\PSoC4/CyLFClk.c ****             {
 491:Generated_Source\PSoC4/CyLFClk.c ****                 returnStatus = CYRET_SUCCESS;
 492:Generated_Source\PSoC4/CyLFClk.c ****             }
 493:Generated_Source\PSoC4/CyLFClk.c ****             else
 494:Generated_Source\PSoC4/CyLFClk.c ****             {
 495:Generated_Source\PSoC4/CyLFClk.c ****                 if(0u == timeOutClocks)
 496:Generated_Source\PSoC4/CyLFClk.c ****                 {
 497:Generated_Source\PSoC4/CyLFClk.c ****                     trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 498:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_TIMEOUT;
 499:Generated_Source\PSoC4/CyLFClk.c ****                 }
 500:Generated_Source\PSoC4/CyLFClk.c ****                 else
 501:Generated_Source\PSoC4/CyLFClk.c ****                 {
 502:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_INVALID_STATE;
 503:Generated_Source\PSoC4/CyLFClk.c ****                 }
 504:Generated_Source\PSoC4/CyLFClk.c ****             }
 505:Generated_Source\PSoC4/CyLFClk.c ****         }
 506:Generated_Source\PSoC4/CyLFClk.c ****         /* Non - blocking mode */
 507:Generated_Source\PSoC4/CyLFClk.c ****         else
 508:Generated_Source\PSoC4/CyLFClk.c ****         {
 509:Generated_Source\PSoC4/CyLFClk.c ****             if (CY_SYS_CLK_TRIM_OR_COMP_FINISHED != trimRunningStatus)
 510:Generated_Source\PSoC4/CyLFClk.c ****             {
 511:Generated_Source\PSoC4/CyLFClk.c ****                 /* Checking if the counter CNTR 1 finished down-counting */
 512:Generated_Source\PSoC4/CyLFClk.c ****                 if(0u != (CY_SYS_CNT_REG1_REG & CY_SYS_CLK_ILO_CALIBR_COMPLETE_MASK))
 513:Generated_Source\PSoC4/CyLFClk.c ****                 {
 514:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CySysClkIloUpdateTrimReg(iloAccuracyInPPT);
 515:Generated_Source\PSoC4/CyLFClk.c ****                     trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 516:Generated_Source\PSoC4/CyLFClk.c ****                 }
 517:Generated_Source\PSoC4/CyLFClk.c ****                 else
 518:Generated_Source\PSoC4/CyLFClk.c ****                 {
 519:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_STARTED;
 520:Generated_Source\PSoC4/CyLFClk.c ****                 }
 521:Generated_Source\PSoC4/CyLFClk.c ****             }
 522:Generated_Source\PSoC4/CyLFClk.c ****             else
 523:Generated_Source\PSoC4/CyLFClk.c ****             {
 524:Generated_Source\PSoC4/CyLFClk.c ****                 /* Reload CNTR 1 count value for next measuring */
 525:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CNT_REG1_REG = cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER;
 526:Generated_Source\PSoC4/CyLFClk.c ****                 trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_STARTED;
 527:Generated_Source\PSoC4/CyLFClk.c ****                 returnStatus = CYRET_STARTED;
 528:Generated_Source\PSoC4/CyLFClk.c ****             }
 529:Generated_Source\PSoC4/CyLFClk.c ****         }
 530:Generated_Source\PSoC4/CyLFClk.c ****     }
 531:Generated_Source\PSoC4/CyLFClk.c ****     else
 532:Generated_Source\PSoC4/CyLFClk.c ****     {
 533:Generated_Source\PSoC4/CyLFClk.c ****         returnStatus = CYRET_INVALID_STATE;
 534:Generated_Source\PSoC4/CyLFClk.c ****     }
 535:Generated_Source\PSoC4/CyLFClk.c **** 
 536:Generated_Source\PSoC4/CyLFClk.c ****     return (returnStatus);
 537:Generated_Source\PSoC4/CyLFClk.c **** }
 538:Generated_Source\PSoC4/CyLFClk.c **** 
 539:Generated_Source\PSoC4/CyLFClk.c **** 
 540:Generated_Source\PSoC4/CyLFClk.c **** /********************************************************************************
 541:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloUpdateTrimReg
 542:Generated_Source\PSoC4/CyLFClk.c **** *********************************************************************************
 543:Generated_Source\PSoC4/CyLFClk.c **** *
 544:Generated_Source\PSoC4/CyLFClk.c **** * \internal
 545:Generated_Source\PSoC4/CyLFClk.c **** * Function calculates ILO accuracy and check is error range is higher than 
 546:Generated_Source\PSoC4/CyLFClk.c **** * +/- 10%. If Measured frequency is higher than +/- 10% function updates 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 30


 547:Generated_Source\PSoC4/CyLFClk.c **** * ILO Trim register.
 548:Generated_Source\PSoC4/CyLFClk.c **** *
 549:Generated_Source\PSoC4/CyLFClk.c **** * \param
 550:Generated_Source\PSoC4/CyLFClk.c **** * iloAccuracyInPPT Pointer to an integer in which the trimmed ILO 
 551:Generated_Source\PSoC4/CyLFClk.c **** * accuracy will be returned. The value returned in this pointer is not valid 
 552:Generated_Source\PSoC4/CyLFClk.c **** * until the function returns CYRET_SUCCESS. If ILO frequency error is lower 
 553:Generated_Source\PSoC4/CyLFClk.c **** * than +/- 10% then the value returned in this pointer will be updated.
 554:Generated_Source\PSoC4/CyLFClk.c **** *
 555:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - Indicates that ILO frequency error is lower than 
 556:Generated_Source\PSoC4/CyLFClk.c **** * +/- 10% and no actions are required.
 557:Generated_Source\PSoC4/CyLFClk.c **** *
 558:Generated_Source\PSoC4/CyLFClk.c **** * \return  CYRET_STARTED - Indicates that ILO frequency error is higher than 
 559:Generated_Source\PSoC4/CyLFClk.c **** * +/- 10% and ILO Trim register was updated.
 560:Generated_Source\PSoC4/CyLFClk.c **** *
 561:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_INVALID_STATE - Indicates trimming was unsuccessful.
 562:Generated_Source\PSoC4/CyLFClk.c **** *
 563:Generated_Source\PSoC4/CyLFClk.c **** * Post #1 - To obtain 10% ILO accuracy the calculated accuracy should be equal 
 564:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_ERROR_RANGE = 5.6%. Error value should take to account IMO error of 
 565:Generated_Source\PSoC4/CyLFClk.c **** * +/-2% (+/-0.64kHz), trim step of 2.36kHz (+/-1.18kHz) and error while ILO 
 566:Generated_Source\PSoC4/CyLFClk.c **** * frequency measuring.
 567:Generated_Source\PSoC4/CyLFClk.c **** *
 568:Generated_Source\PSoC4/CyLFClk.c **** * \endinternal
 569:Generated_Source\PSoC4/CyLFClk.c **** *
 570:Generated_Source\PSoC4/CyLFClk.c **** **********************************************************************************/
 571:Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloUpdateTrimReg(int32* iloAccuracyInPPT)
 572:Generated_Source\PSoC4/CyLFClk.c **** {
 398              		.loc 2 572 0
 399              		.cfi_startproc
 400              		@ args = 0, pretend = 0, frame = 0
 401              		@ frame_needed = 0, uses_anonymous_args = 0
 402              	.LVL20:
 573:Generated_Source\PSoC4/CyLFClk.c ****     uint32 measuredIloFreq;
 574:Generated_Source\PSoC4/CyLFClk.c ****     uint32 currentIloTrimValue;
 575:Generated_Source\PSoC4/CyLFClk.c ****     int32 iloAccuracyValue;
 576:Generated_Source\PSoC4/CyLFClk.c ****     int32 trimStep;
 577:Generated_Source\PSoC4/CyLFClk.c ****     cystatus errorRangeStatus;
 578:Generated_Source\PSoC4/CyLFClk.c **** 
 579:Generated_Source\PSoC4/CyLFClk.c ****     if(0u != CY_SYS_CNT_REG2_REG)
 403              		.loc 2 579 0
 404 0000 1E4B     		ldr	r3, .L41
 572:Generated_Source\PSoC4/CyLFClk.c ****     uint32 measuredIloFreq;
 405              		.loc 2 572 0
 406 0002 10B5     		push	{r4, lr}
 407              		.cfi_def_cfa_offset 8
 408              		.cfi_offset 4, -8
 409              		.cfi_offset 14, -4
 410              		.loc 2 579 0
 411 0004 1A68     		ldr	r2, [r3]
 572:Generated_Source\PSoC4/CyLFClk.c ****     uint32 measuredIloFreq;
 412              		.loc 2 572 0
 413 0006 0400     		movs	r4, r0
 580:Generated_Source\PSoC4/CyLFClk.c ****     {
 581:Generated_Source\PSoC4/CyLFClk.c ****         measuredIloFreq = (CY_SYS_CNT_REG2_REG * cydelayFreqHz) / (cydelayFreqHz >> CY_SYS_CLK_SYS_
 582:Generated_Source\PSoC4/CyLFClk.c **** 
 583:Generated_Source\PSoC4/CyLFClk.c ****         /* Calculate value of error in PPT according to formula - 
 584:Generated_Source\PSoC4/CyLFClk.c ****         *       ((measuredIlofrequency - iloDesired frequency) * 1000 / iloDesired frequency) */
 585:Generated_Source\PSoC4/CyLFClk.c ****         iloAccuracyValue = (((int32) measuredIloFreq - (int32) CY_SYS_CLK_ILO_DESIRED_FREQ_HZ) * \
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 31


 586:Generated_Source\PSoC4/CyLFClk.c ****                             ((int32) CY_SYS_CLK_PERTHOUSAND)) / ((int32) CY_SYS_CLK_ILO_DESIRED_FRE
 587:Generated_Source\PSoC4/CyLFClk.c **** 
 588:Generated_Source\PSoC4/CyLFClk.c ****         /* Check if ILO accuracy is more than +/- CY_SYS_CLK_ERROR_RANGE. See post #1 of API descri
 589:Generated_Source\PSoC4/CyLFClk.c ****         if(CY_SYS_CLK_ERROR_RANGE < (uint32) (CY_SYS_CLK_ABS_MACRO(iloAccuracyValue)))
 590:Generated_Source\PSoC4/CyLFClk.c ****         {
 591:Generated_Source\PSoC4/CyLFClk.c ****             if (0 < iloAccuracyValue)
 592:Generated_Source\PSoC4/CyLFClk.c ****             {
 593:Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = (int32) (((iloAccuracyValue * (int32) CY_SYS_CLK_ERROR_COEF) + 
 594:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_HALF_OF_STEP) / CY_SYS_CLK_ERROR_STEP);
 595:Generated_Source\PSoC4/CyLFClk.c ****             }
 596:Generated_Source\PSoC4/CyLFClk.c ****             else
 597:Generated_Source\PSoC4/CyLFClk.c ****             {
 598:Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = (int32) (((iloAccuracyValue * (int32) CY_SYS_CLK_ERROR_COEF) - 
 599:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_HALF_OF_STEP) / CY_SYS_CLK_ERROR_STEP);
 600:Generated_Source\PSoC4/CyLFClk.c ****             }
 601:Generated_Source\PSoC4/CyLFClk.c ****             currentIloTrimValue = (CY_SYS_CLK_ILO_TRIM_REG & CY_SYS_CLK_ILO_TRIM_MASK);
 602:Generated_Source\PSoC4/CyLFClk.c ****             trimStep = (int32) currentIloTrimValue - trimStep;
 603:Generated_Source\PSoC4/CyLFClk.c **** 
 604:Generated_Source\PSoC4/CyLFClk.c ****             if(trimStep > CY_SYS_CLK_FOURBITS_MAX)
 605:Generated_Source\PSoC4/CyLFClk.c ****             {
 606:Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = CY_SYS_CLK_FOURBITS_MAX;
 607:Generated_Source\PSoC4/CyLFClk.c ****             }
 608:Generated_Source\PSoC4/CyLFClk.c ****             if(trimStep < 0)
 609:Generated_Source\PSoC4/CyLFClk.c ****             {
 610:Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = 0;
 611:Generated_Source\PSoC4/CyLFClk.c ****             }
 612:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_CLK_ILO_TRIM_REG = (CY_SYS_CLK_ILO_TRIM_REG & (uint32)(~CY_SYS_CLK_ILO_TRIM_MASK
 613:Generated_Source\PSoC4/CyLFClk.c ****                                                                  ((uint32) trimStep);
 614:Generated_Source\PSoC4/CyLFClk.c ****             errorRangeStatus = CYRET_STARTED;
 615:Generated_Source\PSoC4/CyLFClk.c ****         } /* Else return success because error is in +/- 10% range*/
 616:Generated_Source\PSoC4/CyLFClk.c ****         else
 617:Generated_Source\PSoC4/CyLFClk.c ****         {
 618:Generated_Source\PSoC4/CyLFClk.c ****             /* Write trimmed ILO accuracy through pointer. */
 619:Generated_Source\PSoC4/CyLFClk.c ****             *iloAccuracyInPPT = iloAccuracyValue;
 620:Generated_Source\PSoC4/CyLFClk.c ****             errorRangeStatus = CYRET_SUCCESS;
 621:Generated_Source\PSoC4/CyLFClk.c ****         }
 622:Generated_Source\PSoC4/CyLFClk.c ****     }
 623:Generated_Source\PSoC4/CyLFClk.c ****     else
 624:Generated_Source\PSoC4/CyLFClk.c ****     {
 625:Generated_Source\PSoC4/CyLFClk.c ****         errorRangeStatus = CYRET_INVALID_STATE;
 414              		.loc 2 625 0
 415 0008 1120     		movs	r0, #17
 416              	.LVL21:
 579:Generated_Source\PSoC4/CyLFClk.c ****     {
 417              		.loc 2 579 0
 418 000a 002A     		cmp	r2, #0
 419 000c 35D0     		beq	.L30
 420              	.LVL22:
 421              	.LBB44:
 422              	.LBB45:
 581:Generated_Source\PSoC4/CyLFClk.c **** 
 423              		.loc 2 581 0
 424 000e 1868     		ldr	r0, [r3]
 425 0010 1B4B     		ldr	r3, .L41+4
 426 0012 1968     		ldr	r1, [r3]
 427              	.LVL23:
 585:Generated_Source\PSoC4/CyLFClk.c ****                             ((int32) CY_SYS_CLK_PERTHOUSAND)) / ((int32) CY_SYS_CLK_ILO_DESIRED_FRE
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 32


 428              		.loc 2 585 0
 429 0014 4843     		muls	r0, r1
 430              	.LVL24:
 431 0016 890A     		lsrs	r1, r1, #10
 432 0018 FFF7FEFF 		bl	__aeabi_uidiv
 433              	.LVL25:
 434 001c 194B     		ldr	r3, .L41+8
 435 001e C018     		adds	r0, r0, r3
 436 0020 1F23     		movs	r3, #31
 437 0022 C217     		asrs	r2, r0, #31
 438 0024 1340     		ands	r3, r2
 439 0026 1818     		adds	r0, r3, r0
 440 0028 4011     		asrs	r0, r0, #5
 441              	.LVL26:
 589:Generated_Source\PSoC4/CyLFClk.c ****         {
 442              		.loc 2 589 0
 443 002a C217     		asrs	r2, r0, #31
 444 002c 8318     		adds	r3, r0, r2
 445 002e 5340     		eors	r3, r2
 446 0030 382B     		cmp	r3, #56
 447 0032 20DD     		ble	.L31
 448 0034 0A23     		movs	r3, #10
 591:Generated_Source\PSoC4/CyLFClk.c ****             {
 449              		.loc 2 591 0
 450 0036 0028     		cmp	r0, #0
 451 0038 03DD     		ble	.L32
 593:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_HALF_OF_STEP) / CY_SYS_CLK_ERROR_STEP);
 452              		.loc 2 593 0
 453 003a 5843     		muls	r0, r3
 454              	.LVL27:
 455 003c 7130     		adds	r0, r0, #113
 456 003e FF30     		adds	r0, r0, #255
 457 0040 02E0     		b	.L40
 458              	.LVL28:
 459              	.L32:
 598:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_HALF_OF_STEP) / CY_SYS_CLK_ERROR_STEP);
 460              		.loc 2 598 0
 461 0042 5843     		muls	r0, r3
 462              	.LVL29:
 463 0044 7138     		subs	r0, r0, #113
 464 0046 FF38     		subs	r0, r0, #255
 465              	.L40:
 466 0048 0F49     		ldr	r1, .L41+12
 467 004a FFF7FEFF 		bl	__aeabi_idiv
 468              	.LVL30:
 602:Generated_Source\PSoC4/CyLFClk.c **** 
 469              		.loc 2 602 0
 470 004e 0F21     		movs	r1, #15
 601:Generated_Source\PSoC4/CyLFClk.c ****             trimStep = (int32) currentIloTrimValue - trimStep;
 471              		.loc 2 601 0
 472 0050 0E4A     		ldr	r2, .L41+16
 473 0052 1368     		ldr	r3, [r2]
 474              	.LVL31:
 602:Generated_Source\PSoC4/CyLFClk.c **** 
 475              		.loc 2 602 0
 476 0054 0B40     		ands	r3, r1
 477              	.LVL32:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 33


 478 0056 181A     		subs	r0, r3, r0
 479              	.LVL33:
 480 0058 1300     		movs	r3, r2
 481              	.LVL34:
 604:Generated_Source\PSoC4/CyLFClk.c ****             {
 482              		.loc 2 604 0
 483 005a 8842     		cmp	r0, r1
 484 005c 03DC     		bgt	.L37
 610:Generated_Source\PSoC4/CyLFClk.c ****             }
 485              		.loc 2 610 0
 486 005e C243     		mvns	r2, r0
 487 0060 D217     		asrs	r2, r2, #31
 488 0062 1040     		ands	r0, r2
 489              	.LVL35:
 490 0064 00E0     		b	.L35
 491              	.LVL36:
 492              	.L37:
 606:Generated_Source\PSoC4/CyLFClk.c ****             }
 493              		.loc 2 606 0
 494 0066 0800     		movs	r0, r1
 495              	.LVL37:
 496              	.L35:
 612:Generated_Source\PSoC4/CyLFClk.c ****                                                                  ((uint32) trimStep);
 497              		.loc 2 612 0
 498 0068 0F21     		movs	r1, #15
 499 006a 1A68     		ldr	r2, [r3]
 500 006c 8A43     		bics	r2, r1
 501 006e 1043     		orrs	r0, r2
 502              	.LVL38:
 503 0070 1860     		str	r0, [r3]
 504              	.LVL39:
 614:Generated_Source\PSoC4/CyLFClk.c ****         } /* Else return success because error is in +/- 10% range*/
 505              		.loc 2 614 0
 506 0072 0720     		movs	r0, #7
 507 0074 01E0     		b	.L30
 508              	.LVL40:
 509              	.L31:
 619:Generated_Source\PSoC4/CyLFClk.c ****             errorRangeStatus = CYRET_SUCCESS;
 510              		.loc 2 619 0
 511 0076 2060     		str	r0, [r4]
 512              	.LVL41:
 620:Generated_Source\PSoC4/CyLFClk.c ****         }
 513              		.loc 2 620 0
 514 0078 0020     		movs	r0, #0
 515              	.LVL42:
 516              	.L30:
 517              	.LBE45:
 518              	.LBE44:
 626:Generated_Source\PSoC4/CyLFClk.c ****     }
 627:Generated_Source\PSoC4/CyLFClk.c **** return (errorRangeStatus);
 628:Generated_Source\PSoC4/CyLFClk.c **** }
 519              		.loc 2 628 0
 520              		@ sp needed
 521              	.LVL43:
 522 007a 10BD     		pop	{r4, pc}
 523              	.L42:
 524              		.align	2
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 34


 525              	.L41:
 526 007c 1C000340 		.word	1073938460
 527 0080 00000000 		.word	cydelayFreqHz
 528 0084 0083FFFF 		.word	-32000
 529 0088 E1020000 		.word	737
 530 008c 24FF0B40 		.word	1074528036
 531              		.cfi_endproc
 532              	.LFE8:
 533              		.size	CySysClkIloUpdateTrimReg, .-CySysClkIloUpdateTrimReg
 534              		.section	.text.CySysClkIloTrim,"ax",%progbits
 535              		.align	1
 536              		.global	CySysClkIloTrim
 537              		.code	16
 538              		.thumb_func
 539              		.type	CySysClkIloTrim, %function
 540              	CySysClkIloTrim:
 541              	.LFB7:
 450:Generated_Source\PSoC4/CyLFClk.c ****     uint32 timeOutClocks = CY_SYS_CLK_TIMEOUT;
 542              		.loc 2 450 0
 543              		.cfi_startproc
 544              		@ args = 0, pretend = 0, frame = 8
 545              		@ frame_needed = 0, uses_anonymous_args = 0
 546              	.LVL44:
 457:Generated_Source\PSoC4/CyLFClk.c **** 
 547              		.loc 2 457 0
 548 0000 274B     		ldr	r3, .L68
 450:Generated_Source\PSoC4/CyLFClk.c ****     uint32 timeOutClocks = CY_SYS_CLK_TIMEOUT;
 549              		.loc 2 450 0
 550 0002 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 551              		.cfi_def_cfa_offset 32
 552              		.cfi_offset 0, -32
 553              		.cfi_offset 1, -28
 554              		.cfi_offset 2, -24
 555              		.cfi_offset 4, -20
 556              		.cfi_offset 5, -16
 557              		.cfi_offset 6, -12
 558              		.cfi_offset 7, -8
 559              		.cfi_offset 14, -4
 457:Generated_Source\PSoC4/CyLFClk.c **** 
 560              		.loc 2 457 0
 561 0004 1A68     		ldr	r2, [r3]
 562              	.LVL45:
 460:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 563              		.loc 2 460 0
 564 0006 274B     		ldr	r3, .L68+4
 450:Generated_Source\PSoC4/CyLFClk.c ****     uint32 timeOutClocks = CY_SYS_CLK_TIMEOUT;
 565              		.loc 2 450 0
 566 0008 0F00     		movs	r7, r1
 460:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 567              		.loc 2 460 0
 568 000a 1340     		ands	r3, r2
 569              	.LVL46:
 570 000c 8022     		movs	r2, #128
 571 000e 5200     		lsls	r2, r2, #1
 572 0010 9342     		cmp	r3, r2
 573 0012 01D0     		beq	.L44
 574              	.LVL47:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 35


 575              	.L46:
 533:Generated_Source\PSoC4/CyLFClk.c ****     }
 576              		.loc 2 533 0
 577 0014 1120     		movs	r0, #17
 578 0016 42E0     		b	.L63
 579              	.LVL48:
 580              	.L44:
 461:Generated_Source\PSoC4/CyLFClk.c ****        (iloAccuracyInPPT != NULL))
 581              		.loc 2 461 0 discriminator 1
 582 0018 234B     		ldr	r3, .L68+8
 583              	.LVL49:
 584 001a 1A68     		ldr	r2, [r3]
 460:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 585              		.loc 2 460 0 discriminator 1
 586 001c 234B     		ldr	r3, .L68+12
 587 001e 9A42     		cmp	r2, r3
 588 0020 F8D1     		bne	.L46
 461:Generated_Source\PSoC4/CyLFClk.c ****        (iloAccuracyInPPT != NULL))
 589              		.loc 2 461 0
 590 0022 0029     		cmp	r1, #0
 591 0024 F6D0     		beq	.L46
 592 0026 224D     		ldr	r5, .L68+16
 464:Generated_Source\PSoC4/CyLFClk.c ****         {
 593              		.loc 2 464 0
 594 0028 0028     		cmp	r0, #0
 595 002a 1FD1     		bne	.L47
 451:Generated_Source\PSoC4/CyLFClk.c ****     uint32 waitUntilCntr1Stops;
 596              		.loc 2 451 0
 597 002c 0524     		movs	r4, #5
 466:Generated_Source\PSoC4/CyLFClk.c ****             do
 598              		.loc 2 466 0
 599 002e 214E     		ldr	r6, .L68+20
 600 0030 3368     		ldr	r3, [r6]
 601 0032 9B0A     		lsrs	r3, r3, #10
 602 0034 0193     		str	r3, [sp, #4]
 603              	.LVL50:
 604              	.L52:
 470:Generated_Source\PSoC4/CyLFClk.c **** 
 605              		.loc 2 470 0
 606 0036 3368     		ldr	r3, [r6]
 607 0038 9B0A     		lsrs	r3, r3, #10
 608 003a 2B60     		str	r3, [r5]
 609              	.L48:
 473:Generated_Source\PSoC4/CyLFClk.c ****                 {
 610              		.loc 2 473 0
 611 003c 2B68     		ldr	r3, [r5]
 612 003e 002B     		cmp	r3, #0
 613 0040 04DB     		blt	.L49
 475:Generated_Source\PSoC4/CyLFClk.c ****                     if (0u == waitUntilCntr1Stops)
 614              		.loc 2 475 0
 615 0042 019B     		ldr	r3, [sp, #4]
 616 0044 013B     		subs	r3, r3, #1
 617 0046 0193     		str	r3, [sp, #4]
 618              	.LVL51:
 476:Generated_Source\PSoC4/CyLFClk.c ****                     {
 619              		.loc 2 476 0
 620 0048 002B     		cmp	r3, #0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 36


 621 004a F7D1     		bne	.L48
 622              	.LVL52:
 623              	.L49:
 481:Generated_Source\PSoC4/CyLFClk.c ****                 timeOutClocks--;
 624              		.loc 2 481 0
 625 004c 3800     		movs	r0, r7
 626 004e FFF7FEFF 		bl	CySysClkIloUpdateTrimReg
 627              	.LVL53:
 628 0052 194B     		ldr	r3, .L68+24
 482:Generated_Source\PSoC4/CyLFClk.c **** 
 629              		.loc 2 482 0
 630 0054 013C     		subs	r4, r4, #1
 631              	.LVL54:
 481:Generated_Source\PSoC4/CyLFClk.c ****                 timeOutClocks--;
 632              		.loc 2 481 0
 633 0056 9860     		str	r0, [r3, #8]
 487:Generated_Source\PSoC4/CyLFClk.c **** 
 634              		.loc 2 487 0
 635 0058 0028     		cmp	r0, #0
 636 005a 20D0     		beq	.L63
 485:Generated_Source\PSoC4/CyLFClk.c ****               (CYRET_INVALID_STATE != trimRunningStatus) && 
 637              		.loc 2 485 0
 638 005c 1128     		cmp	r0, #17
 639 005e 1BD0     		beq	.L51
 486:Generated_Source\PSoC4/CyLFClk.c ****                                (0u != timeOutClocks));
 640              		.loc 2 486 0
 641 0060 002C     		cmp	r4, #0
 642 0062 E8D1     		bne	.L52
 643              	.L54:
 497:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_TIMEOUT;
 644              		.loc 2 497 0
 645 0064 0022     		movs	r2, #0
 498:Generated_Source\PSoC4/CyLFClk.c ****                 }
 646              		.loc 2 498 0
 647 0066 1020     		movs	r0, #16
 497:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_TIMEOUT;
 648              		.loc 2 497 0
 649 0068 9A60     		str	r2, [r3, #8]
 650              	.LVL55:
 651 006a 18E0     		b	.L63
 652              	.LVL56:
 653              	.L47:
 509:Generated_Source\PSoC4/CyLFClk.c ****             {
 654              		.loc 2 509 0
 655 006c 124C     		ldr	r4, .L68+24
 656 006e A368     		ldr	r3, [r4, #8]
 657 0070 002B     		cmp	r3, #0
 658 0072 09D0     		beq	.L53
 512:Generated_Source\PSoC4/CyLFClk.c ****                 {
 659              		.loc 2 512 0
 660 0074 2B68     		ldr	r3, [r5]
 519:Generated_Source\PSoC4/CyLFClk.c ****                 }
 661              		.loc 2 519 0
 662 0076 0720     		movs	r0, #7
 663              	.LVL57:
 512:Generated_Source\PSoC4/CyLFClk.c ****                 {
 664              		.loc 2 512 0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 37


 665 0078 002B     		cmp	r3, #0
 666 007a 10DA     		bge	.L63
 514:Generated_Source\PSoC4/CyLFClk.c ****                     trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 667              		.loc 2 514 0
 668 007c 0800     		movs	r0, r1
 669 007e FFF7FEFF 		bl	CySysClkIloUpdateTrimReg
 670              	.LVL58:
 515:Generated_Source\PSoC4/CyLFClk.c ****                 }
 671              		.loc 2 515 0
 672 0082 0023     		movs	r3, #0
 673 0084 A360     		str	r3, [r4, #8]
 674 0086 0AE0     		b	.L63
 675              	.LVL59:
 676              	.L53:
 525:Generated_Source\PSoC4/CyLFClk.c ****                 trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_STARTED;
 677              		.loc 2 525 0
 678 0088 0A4B     		ldr	r3, .L68+20
 527:Generated_Source\PSoC4/CyLFClk.c ****             }
 679              		.loc 2 527 0
 680 008a 0720     		movs	r0, #7
 681              	.LVL60:
 525:Generated_Source\PSoC4/CyLFClk.c ****                 trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_STARTED;
 682              		.loc 2 525 0
 683 008c 1B68     		ldr	r3, [r3]
 684 008e 9B0A     		lsrs	r3, r3, #10
 685 0090 2B60     		str	r3, [r5]
 526:Generated_Source\PSoC4/CyLFClk.c ****                 returnStatus = CYRET_STARTED;
 686              		.loc 2 526 0
 687 0092 0123     		movs	r3, #1
 688 0094 A360     		str	r3, [r4, #8]
 689              	.LVL61:
 690 0096 02E0     		b	.L63
 691              	.LVL62:
 692              	.L51:
 495:Generated_Source\PSoC4/CyLFClk.c ****                 {
 693              		.loc 2 495 0
 694 0098 002C     		cmp	r4, #0
 695 009a BBD1     		bne	.L46
 696 009c E2E7     		b	.L54
 697              	.LVL63:
 698              	.L63:
 537:Generated_Source\PSoC4/CyLFClk.c **** 
 699              		.loc 2 537 0
 700              		@ sp needed
 701              	.LVL64:
 702 009e FEBD     		pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 703              	.L69:
 704              		.align	2
 705              	.L68:
 706 00a0 10010B40 		.word	1074462992
 707 00a4 3F3F0000 		.word	16191
 708 00a8 08000340 		.word	1073938440
 709 00ac 0A0B0000 		.word	2826
 710 00b0 18000340 		.word	1073938456
 711 00b4 00000000 		.word	cydelayFreqHz
 712 00b8 00000000 		.word	.LANCHOR0
 713              		.cfi_endproc
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 38


 714              	.LFE7:
 715              		.size	CySysClkIloTrim, .-CySysClkIloTrim
 716              		.section	.text.CySysClkIloRestoreFactoryTrim,"ax",%progbits
 717              		.align	1
 718              		.global	CySysClkIloRestoreFactoryTrim
 719              		.code	16
 720              		.thumb_func
 721              		.type	CySysClkIloRestoreFactoryTrim, %function
 722              	CySysClkIloRestoreFactoryTrim:
 723              	.LFB9:
 629:Generated_Source\PSoC4/CyLFClk.c **** 
 630:Generated_Source\PSoC4/CyLFClk.c **** 
 631:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
 632:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloRestoreFactoryTrim
 633:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
 634:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 635:Generated_Source\PSoC4/CyLFClk.c **** * Restores the ILO Trim Register to factory value.
 636:Generated_Source\PSoC4/CyLFClk.c **** *
 637:Generated_Source\PSoC4/CyLFClk.c **** * The CySysClkIloStartMeasurement() API should be called prior to 
 638:Generated_Source\PSoC4/CyLFClk.c **** * calling this API. Otherwise CYRET_UNKNOWN will be returned.
 639:Generated_Source\PSoC4/CyLFClk.c **** *
 640:Generated_Source\PSoC4/CyLFClk.c **** * Available for all PSoC 4 devices except for PSoC 4000 / PSoC 4100 / PSoC 4200 
 641:Generated_Source\PSoC4/CyLFClk.c **** * / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 642:Generated_Source\PSoC4/CyLFClk.c **** *
 643:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - Operation was successful. 
 644:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_UNKNOWN - CySysClkIloStartMeasurement() was not called 
 645:Generated_Source\PSoC4/CyLFClk.c **** * before this API. Hence the trim value cannot be updated.
 646:Generated_Source\PSoC4/CyLFClk.c **** *
 647:Generated_Source\PSoC4/CyLFClk.c **** ******************************************************************************/
 648:Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloRestoreFactoryTrim(void)
 649:Generated_Source\PSoC4/CyLFClk.c **** {
 724              		.loc 2 649 0
 725              		.cfi_startproc
 726              		@ args = 0, pretend = 0, frame = 0
 727              		@ frame_needed = 0, uses_anonymous_args = 0
 728              		@ link register save eliminated.
 729              	.LVL65:
 650:Generated_Source\PSoC4/CyLFClk.c ****     cystatus returnStatus = CYRET_SUCCESS;
 651:Generated_Source\PSoC4/CyLFClk.c **** 
 652:Generated_Source\PSoC4/CyLFClk.c ****     /* Check was defaultIloTrimRegValue modified in CySysClkIloStartMeasurement */
 653:Generated_Source\PSoC4/CyLFClk.c ****     if(CY_SYS_CLK_ILO_TRIM_DEFAULT_VALUE != defaultIloTrimRegValue)
 730              		.loc 2 653 0
 731 0000 084B     		ldr	r3, .L73
 732 0002 1A88     		ldrh	r2, [r3]
 733 0004 F02A     		cmp	r2, #240
 734 0006 09D0     		beq	.L72
 654:Generated_Source\PSoC4/CyLFClk.c ****         {
 655:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_CLK_ILO_TRIM_REG = ((CY_SYS_CLK_ILO_TRIM_REG & (uint32)(~CY_SYS_CLK_ILO_TRIM_MAS
 735              		.loc 2 655 0
 736 0008 0749     		ldr	r1, .L73+4
 737 000a 0A68     		ldr	r2, [r1]
 656:Generated_Source\PSoC4/CyLFClk.c ****                                        (defaultIloTrimRegValue & CY_SYS_CLK_ILO_TRIM_MASK));
 738              		.loc 2 656 0
 739 000c 1888     		ldrh	r0, [r3]
 655:Generated_Source\PSoC4/CyLFClk.c ****                                        (defaultIloTrimRegValue & CY_SYS_CLK_ILO_TRIM_MASK));
 740              		.loc 2 655 0
 741 000e 0F23     		movs	r3, #15
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 39


 742 0010 9A43     		bics	r2, r3
 743 0012 0340     		ands	r3, r0
 744 0014 1343     		orrs	r3, r2
 745 0016 0B60     		str	r3, [r1]
 650:Generated_Source\PSoC4/CyLFClk.c **** 
 746              		.loc 2 650 0
 747 0018 0020     		movs	r0, #0
 748 001a 01E0     		b	.L71
 749              	.L72:
 657:Generated_Source\PSoC4/CyLFClk.c ****         }
 658:Generated_Source\PSoC4/CyLFClk.c ****         else
 659:Generated_Source\PSoC4/CyLFClk.c ****         {
 660:Generated_Source\PSoC4/CyLFClk.c ****             returnStatus = CYRET_UNKNOWN;
 750              		.loc 2 660 0
 751 001c 0120     		movs	r0, #1
 752 001e 4042     		rsbs	r0, r0, #0
 753              	.L71:
 754              	.LVL66:
 661:Generated_Source\PSoC4/CyLFClk.c ****         }
 662:Generated_Source\PSoC4/CyLFClk.c **** 
 663:Generated_Source\PSoC4/CyLFClk.c ****         return (returnStatus);
 664:Generated_Source\PSoC4/CyLFClk.c **** }
 755              		.loc 2 664 0
 756              		@ sp needed
 757 0020 7047     		bx	lr
 758              	.L74:
 759 0022 C046     		.align	2
 760              	.L73:
 761 0024 00000000 		.word	.LANCHOR1
 762 0028 24FF0B40 		.word	1074528036
 763              		.cfi_endproc
 764              	.LFE9:
 765              		.size	CySysClkIloRestoreFactoryTrim, .-CySysClkIloRestoreFactoryTrim
 766              		.section	.text.CySysClkWcoStart,"ax",%progbits
 767              		.align	1
 768              		.global	CySysClkWcoStart
 769              		.code	16
 770              		.thumb_func
 771              		.type	CySysClkWcoStart, %function
 772              	CySysClkWcoStart:
 773              	.LFB12:
 665:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2 && (!CY_IP_CPUSS)) */
 666:Generated_Source\PSoC4/CyLFClk.c **** 
 667:Generated_Source\PSoC4/CyLFClk.c **** 
 668:Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_WCO && CY_IP_SRSSV2)
 669:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 670:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkGetLfclkSource
 671:Generated_Source\PSoC4/CyLFClk.c ****     ********************************************************************************
 672:Generated_Source\PSoC4/CyLFClk.c ****     *
 673:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
 674:Generated_Source\PSoC4/CyLFClk.c ****     *  Gets the clock source for the LFCLK clock.
 675:Generated_Source\PSoC4/CyLFClk.c ****     *  The function is applicable only for PSoC 4100 BLE / PSoC 4200 BLE / 
 676:Generated_Source\PSoC4/CyLFClk.c ****     *  PSoC 4100M / PSoC 4200M / PSoC 4200L.
 677:Generated_Source\PSoC4/CyLFClk.c ****     *
 678:Generated_Source\PSoC4/CyLFClk.c ****     * \return The LFCLK source:
 679:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_LFCLK_SRC_ILO Internal Low Frequency (32 kHz) Oscillator (ILO)
 680:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_LFCLK_SRC_WCO Low Frequency Watch Crystal Oscillator (WCO)
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 40


 681:Generated_Source\PSoC4/CyLFClk.c ****     *
 682:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
 683:Generated_Source\PSoC4/CyLFClk.c ****     *
 684:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 685:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkGetLfclkSource(void)
 686:Generated_Source\PSoC4/CyLFClk.c ****     {
 687:Generated_Source\PSoC4/CyLFClk.c ****         uint32 lfclkSource;
 688:Generated_Source\PSoC4/CyLFClk.c ****         lfclkSource = CY_SYS_WDT_CONFIG_REG & CY_SYS_CLK_LFCLK_SEL_MASK;
 689:Generated_Source\PSoC4/CyLFClk.c ****         return (lfclkSource);
 690:Generated_Source\PSoC4/CyLFClk.c ****     }
 691:Generated_Source\PSoC4/CyLFClk.c **** 
 692:Generated_Source\PSoC4/CyLFClk.c **** 
 693:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 694:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkSetLfclkSource
 695:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 696:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 697:Generated_Source\PSoC4/CyLFClk.c ****     *  Sets the clock source for the LFCLK clock.
 698:Generated_Source\PSoC4/CyLFClk.c ****     *
 699:Generated_Source\PSoC4/CyLFClk.c ****     * The switch between LFCLK sources must be done between the positive edges of
 700:Generated_Source\PSoC4/CyLFClk.c ****     * LFCLK, because the glitch risk is around the LFCLK positive edge. To ensure
 701:Generated_Source\PSoC4/CyLFClk.c ****     * that the switch can be done safely, the WDT counter value is read until it
 702:Generated_Source\PSoC4/CyLFClk.c ****     * changes.
 703:Generated_Source\PSoC4/CyLFClk.c ****     *
 704:Generated_Source\PSoC4/CyLFClk.c ****     * That means that the positive edge just finished and the switch is performed.
 705:Generated_Source\PSoC4/CyLFClk.c ****     * The enabled WDT counter is used for that purpose. If no counters are enabled,
 706:Generated_Source\PSoC4/CyLFClk.c ****     * counter 0 is enabled. And after the LFCLK source is switched, counter 0
 707:Generated_Source\PSoC4/CyLFClk.c ****     * configuration is restored.
 708:Generated_Source\PSoC4/CyLFClk.c ****     *
 709:Generated_Source\PSoC4/CyLFClk.c ****     *  The function is applicable only for devices with more than one source for 
 710:Generated_Source\PSoC4/CyLFClk.c ****     * LFCLK - PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 4100M / PSoC 4200M / 
 711:Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4200L.
 712:Generated_Source\PSoC4/CyLFClk.c ****     *
 713:Generated_Source\PSoC4/CyLFClk.c ****     * \note For PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices LFCLK can
 714:Generated_Source\PSoC4/CyLFClk.c ****     * only be sourced from ILO even though WCO is available.
 715:Generated_Source\PSoC4/CyLFClk.c ****     *
 716:Generated_Source\PSoC4/CyLFClk.c ****     * \param
 717:Generated_Source\PSoC4/CyLFClk.c ****     * source
 718:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_LFCLK_SRC_ILO - Internal Low Frequency (32 kHz) 
 719:Generated_Source\PSoC4/CyLFClk.c ****     * Oscillator (ILO).<br>
 720:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_LFCLK_SRC_WCO - Low Frequency Watch Crystal Oscillator (WCO).
 721:Generated_Source\PSoC4/CyLFClk.c ****     *
 722:Generated_Source\PSoC4/CyLFClk.c ****     * \details
 723:Generated_Source\PSoC4/CyLFClk.c ****     * This function has no effect if WDT is locked (CySysWdtLock() is called). 
 724:Generated_Source\PSoC4/CyLFClk.c ****     * Call CySysWdtUnlock() to unlock WDT.
 725:Generated_Source\PSoC4/CyLFClk.c ****     *
 726:Generated_Source\PSoC4/CyLFClk.c ****     * Both the current source and the new source must be running and stable before
 727:Generated_Source\PSoC4/CyLFClk.c ****     * calling this function.
 728:Generated_Source\PSoC4/CyLFClk.c ****     *
 729:Generated_Source\PSoC4/CyLFClk.c ****     * Changing the LFCLK clock source may change the LFCLK clock frequency and
 730:Generated_Source\PSoC4/CyLFClk.c ****     * affect the functionality that uses this clock. For example, watchdog timer
 731:Generated_Source\PSoC4/CyLFClk.c ****     * "uses this clock" or "this clock uses" (WDT) is clocked by LFCLK.
 732:Generated_Source\PSoC4/CyLFClk.c ****     *
 733:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 734:Generated_Source\PSoC4/CyLFClk.c ****     void CySysClkSetLfclkSource(uint32 source)
 735:Generated_Source\PSoC4/CyLFClk.c ****     {
 736:Generated_Source\PSoC4/CyLFClk.c ****         uint8  interruptState;
 737:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 41


 738:Generated_Source\PSoC4/CyLFClk.c ****         if (CySysClkGetLfclkSource() != source)
 739:Generated_Source\PSoC4/CyLFClk.c ****         {
 740:Generated_Source\PSoC4/CyLFClk.c ****             interruptState = CyEnterCriticalSection();
 741:Generated_Source\PSoC4/CyLFClk.c ****             CySysClkLfclkPosedgeCatch();
 742:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = (CY_SYS_WDT_CONFIG_REG & (uint32)(~CY_SYS_CLK_LFCLK_SEL_MASK)) 
 743:Generated_Source\PSoC4/CyLFClk.c ****                                     (source & CY_SYS_CLK_LFCLK_SEL_MASK);
 744:Generated_Source\PSoC4/CyLFClk.c ****             CySysClkLfclkPosedgeRestore();
 745:Generated_Source\PSoC4/CyLFClk.c ****             CyExitCriticalSection(interruptState);
 746:Generated_Source\PSoC4/CyLFClk.c ****         }
 747:Generated_Source\PSoC4/CyLFClk.c ****     }
 748:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_WCO && CY_IP_SRSSV2) */
 749:Generated_Source\PSoC4/CyLFClk.c **** 
 750:Generated_Source\PSoC4/CyLFClk.c **** 
 751:Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_WCO)
 752:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 753:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoStart
 754:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 755:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 756:Generated_Source\PSoC4/CyLFClk.c ****     *  Enables Watch Crystal Oscillator (WCO).
 757:Generated_Source\PSoC4/CyLFClk.c ****     * 
 758:Generated_Source\PSoC4/CyLFClk.c ****     * This API enables WCO which is used as a source for LFCLK. Similar to ILO, 
 759:Generated_Source\PSoC4/CyLFClk.c ****     * WCO is also available in all modes except Hibernate and Stop modes.
 760:Generated_Source\PSoC4/CyLFClk.c ****     * \note In PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices
 761:Generated_Source\PSoC4/CyLFClk.c ****     * WCO cannot be a source for the LFCLK. 
 762:Generated_Source\PSoC4/CyLFClk.c ****     *
 763:Generated_Source\PSoC4/CyLFClk.c ****     *  WCO is always enabled in High Power Mode (HPM). Refer to the device
 764:Generated_Source\PSoC4/CyLFClk.c ****     *  datasheet for the  WCO startup time. Once WCO becomes stable it can be
 765:Generated_Source\PSoC4/CyLFClk.c ****     *  switched to Low Power Mode (LPM). Note that oscillator can be unstable
 766:Generated_Source\PSoC4/CyLFClk.c ****     *  during a switch and hence its output should not be used at that moment.
 767:Generated_Source\PSoC4/CyLFClk.c ****     *
 768:Generated_Source\PSoC4/CyLFClk.c ****     *  The CySysClkWcoSetPowerMode() function configures the WCO power mode.
 769:Generated_Source\PSoC4/CyLFClk.c ****     *
 770:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 771:Generated_Source\PSoC4/CyLFClk.c ****     void CySysClkWcoStart(void)
 772:Generated_Source\PSoC4/CyLFClk.c ****     {
 774              		.loc 2 772 0
 775              		.cfi_startproc
 776              		@ args = 0, pretend = 0, frame = 0
 777              		@ frame_needed = 0, uses_anonymous_args = 0
 778 0000 10B5     		push	{r4, lr}
 779              		.cfi_def_cfa_offset 8
 780              		.cfi_offset 4, -8
 781              		.cfi_offset 14, -4
 773:Generated_Source\PSoC4/CyLFClk.c ****         CySysClkWcoSetHighPowerMode();
 782              		.loc 2 773 0
 783 0002 FFF7FEFF 		bl	CySysClkWcoSetHighPowerMode
 784              	.LVL67:
 774:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE;
 785              		.loc 2 774 0
 786 0006 8021     		movs	r1, #128
 787 0008 024A     		ldr	r2, .L76
 788 000a 0906     		lsls	r1, r1, #24
 789 000c 1368     		ldr	r3, [r2]
 775:Generated_Source\PSoC4/CyLFClk.c ****     }
 790              		.loc 2 775 0
 791              		@ sp needed
 774:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE;
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 42


 792              		.loc 2 774 0
 793 000e 0B43     		orrs	r3, r1
 794 0010 1360     		str	r3, [r2]
 795              		.loc 2 775 0
 796 0012 10BD     		pop	{r4, pc}
 797              	.L77:
 798              		.align	2
 799              	.L76:
 800 0014 00002240 		.word	1075970048
 801              		.cfi_endproc
 802              	.LFE12:
 803              		.size	CySysClkWcoStart, .-CySysClkWcoStart
 804              		.section	.text.CySysClkWcoEnabled,"ax",%progbits
 805              		.align	1
 806              		.global	CySysClkWcoEnabled
 807              		.code	16
 808              		.thumb_func
 809              		.type	CySysClkWcoEnabled, %function
 810              	CySysClkWcoEnabled:
 811              	.LFB14:
 776:Generated_Source\PSoC4/CyLFClk.c **** 
 777:Generated_Source\PSoC4/CyLFClk.c **** 
 778:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 779:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoStop
 780:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 781:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 782:Generated_Source\PSoC4/CyLFClk.c ****     * Disables the 32 KHz Crystal Oscillator.
 783:Generated_Source\PSoC4/CyLFClk.c ****     *
 784:Generated_Source\PSoC4/CyLFClk.c ****     * API switch of WCO.
 785:Generated_Source\PSoC4/CyLFClk.c ****     * \note PSoC 4100S / PSoC Analog Coprocessor: WCO is required for DeepSleep 
 786:Generated_Source\PSoC4/CyLFClk.c ****     * Timer's operation.
 787:Generated_Source\PSoC4/CyLFClk.c ****     *
 788:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 789:Generated_Source\PSoC4/CyLFClk.c ****     void  CySysClkWcoStop(void)
 790:Generated_Source\PSoC4/CyLFClk.c ****     {
 791:Generated_Source\PSoC4/CyLFClk.c ****         #if (CY_IP_SRSSV2)
 792:Generated_Source\PSoC4/CyLFClk.c ****             uint8  interruptState;
 793:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_SRSSV2) */
 794:Generated_Source\PSoC4/CyLFClk.c **** 
 795:Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysClkWcoEnabled())
 796:Generated_Source\PSoC4/CyLFClk.c ****         {
 797:Generated_Source\PSoC4/CyLFClk.c ****             #if (CY_IP_SRSSV2)
 798:Generated_Source\PSoC4/CyLFClk.c ****                 if (CY_SYS_CLK_LFCLK_SRC_WCO == CySysClkGetLfclkSource())
 799:Generated_Source\PSoC4/CyLFClk.c ****                 {
 800:Generated_Source\PSoC4/CyLFClk.c ****                     interruptState = CyEnterCriticalSection();
 801:Generated_Source\PSoC4/CyLFClk.c ****                     CySysClkLfclkPosedgeCatch();
 802:Generated_Source\PSoC4/CyLFClk.c ****                     CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE;
 803:Generated_Source\PSoC4/CyLFClk.c ****                     CySysClkLfclkPosedgeRestore();
 804:Generated_Source\PSoC4/CyLFClk.c ****                     CyExitCriticalSection(interruptState);
 805:Generated_Source\PSoC4/CyLFClk.c ****                 }
 806:Generated_Source\PSoC4/CyLFClk.c ****                 else /* Safe to disable - shortened pulse does not impact peripheral */
 807:Generated_Source\PSoC4/CyLFClk.c ****             #endif /* (CY_IP_SRSSV2) */
 808:Generated_Source\PSoC4/CyLFClk.c ****             {
 809:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE;
 810:Generated_Source\PSoC4/CyLFClk.c ****             }
 811:Generated_Source\PSoC4/CyLFClk.c ****         } /* Otherwise do nothing. WCO configuration cannot be changed. */
 812:Generated_Source\PSoC4/CyLFClk.c ****     }
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 43


 813:Generated_Source\PSoC4/CyLFClk.c **** 
 814:Generated_Source\PSoC4/CyLFClk.c **** 
 815:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 816:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoEnabled
 817:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 818:Generated_Source\PSoC4/CyLFClk.c ****     * \internal Reports the WCO enable state.
 819:Generated_Source\PSoC4/CyLFClk.c ****     *
 820:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 if WCO is enabled
 821:Generated_Source\PSoC4/CyLFClk.c ****     * \return 0 if WCO is disabled.
 822:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
 823:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 824:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysClkWcoEnabled(void)
 825:Generated_Source\PSoC4/CyLFClk.c ****     {
 812              		.loc 2 825 0
 813              		.cfi_startproc
 814              		@ args = 0, pretend = 0, frame = 0
 815              		@ frame_needed = 0, uses_anonymous_args = 0
 816              		@ link register save eliminated.
 826:Generated_Source\PSoC4/CyLFClk.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & (uint32)(CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE))) ?
 817              		.loc 2 826 0
 818 0000 014B     		ldr	r3, .L79
 827:Generated_Source\PSoC4/CyLFClk.c ****                 (uint32) 1u :
 828:Generated_Source\PSoC4/CyLFClk.c ****                 (uint32) 0u);
 829:Generated_Source\PSoC4/CyLFClk.c ****     }
 819              		.loc 2 829 0
 820              		@ sp needed
 826:Generated_Source\PSoC4/CyLFClk.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & (uint32)(CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE))) ?
 821              		.loc 2 826 0
 822 0002 1868     		ldr	r0, [r3]
 823 0004 C00F     		lsrs	r0, r0, #31
 824              		.loc 2 829 0
 825 0006 7047     		bx	lr
 826              	.L80:
 827              		.align	2
 828              	.L79:
 829 0008 00002240 		.word	1075970048
 830              		.cfi_endproc
 831              	.LFE14:
 832              		.size	CySysClkWcoEnabled, .-CySysClkWcoEnabled
 833              		.section	.text.CySysClkWcoSetPowerMode,"ax",%progbits
 834              		.align	1
 835              		.global	CySysClkWcoSetPowerMode
 836              		.code	16
 837              		.thumb_func
 838              		.type	CySysClkWcoSetPowerMode, %function
 839              	CySysClkWcoSetPowerMode:
 840              	.LFB15:
 830:Generated_Source\PSoC4/CyLFClk.c **** 
 831:Generated_Source\PSoC4/CyLFClk.c **** 
 832:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 833:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoSetPowerMode
 834:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 835:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 836:Generated_Source\PSoC4/CyLFClk.c ****     * Sets the power mode for the 32 KHz WCO.
 837:Generated_Source\PSoC4/CyLFClk.c ****     *
 838:Generated_Source\PSoC4/CyLFClk.c ****     * By default (if this function is not called), the WCO is in High power mode 
 839:Generated_Source\PSoC4/CyLFClk.c ****     * during Active and device's low power modes
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 44


 840:Generated_Source\PSoC4/CyLFClk.c ****     *
 841:Generated_Source\PSoC4/CyLFClk.c ****     * \param mode
 842:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_WCO_HPM - The High Power mode.<br>
 843:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_WCO_LPM - The Low Power mode.
 844:Generated_Source\PSoC4/CyLFClk.c ****     *
 845:Generated_Source\PSoC4/CyLFClk.c ****     * \return A previous power mode. The same as the parameters.
 846:Generated_Source\PSoC4/CyLFClk.c ****     *
 847:Generated_Source\PSoC4/CyLFClk.c ****     * \note
 848:Generated_Source\PSoC4/CyLFClk.c ****     * The WCO Low Power mode is applicable for PSoC 4100 BLE / PSoC 4200 BLE devices.
 849:Generated_Source\PSoC4/CyLFClk.c ****     *
 850:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 851:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysClkWcoSetPowerMode(uint32 mode)
 852:Generated_Source\PSoC4/CyLFClk.c ****     {
 841              		.loc 2 852 0
 842              		.cfi_startproc
 843              		@ args = 0, pretend = 0, frame = 0
 844              		@ frame_needed = 0, uses_anonymous_args = 0
 845              	.LVL68:
 853:Generated_Source\PSoC4/CyLFClk.c ****         uint32 powerModeStatus;
 854:Generated_Source\PSoC4/CyLFClk.c **** 
 855:Generated_Source\PSoC4/CyLFClk.c ****         powerModeStatus = CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_LPM_EN;
 846              		.loc 2 855 0
 847 0000 054B     		ldr	r3, .L84
 852:Generated_Source\PSoC4/CyLFClk.c ****         uint32 powerModeStatus;
 848              		.loc 2 852 0
 849 0002 10B5     		push	{r4, lr}
 850              		.cfi_def_cfa_offset 8
 851              		.cfi_offset 4, -8
 852              		.cfi_offset 14, -4
 853              		.loc 2 855 0
 854 0004 1C68     		ldr	r4, [r3]
 855 0006 0123     		movs	r3, #1
 856 0008 1C40     		ands	r4, r3
 857              	.LVL69:
 856:Generated_Source\PSoC4/CyLFClk.c **** 
 857:Generated_Source\PSoC4/CyLFClk.c ****         switch(mode)
 858              		.loc 2 857 0
 859 000a 0028     		cmp	r0, #0
 860 000c 01D1     		bne	.L82
 858:Generated_Source\PSoC4/CyLFClk.c ****         {
 859:Generated_Source\PSoC4/CyLFClk.c ****         case CY_SYS_CLK_WCO_HPM:
 860:Generated_Source\PSoC4/CyLFClk.c ****                 CySysClkWcoSetHighPowerMode();
 861              		.loc 2 860 0
 862 000e FFF7FEFF 		bl	CySysClkWcoSetHighPowerMode
 863              	.LVL70:
 864              	.L82:
 861:Generated_Source\PSoC4/CyLFClk.c ****             break;
 862:Generated_Source\PSoC4/CyLFClk.c **** 
 863:Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_IP_BLESS)
 864:Generated_Source\PSoC4/CyLFClk.c ****             case CY_SYS_CLK_WCO_LPM:
 865:Generated_Source\PSoC4/CyLFClk.c ****                     CySysClkWcoSetLowPowerMode();
 866:Generated_Source\PSoC4/CyLFClk.c ****                 break;
 867:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_BLESS) */
 868:Generated_Source\PSoC4/CyLFClk.c **** 
 869:Generated_Source\PSoC4/CyLFClk.c ****         default:
 870:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
 871:Generated_Source\PSoC4/CyLFClk.c ****             break;
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 45


 872:Generated_Source\PSoC4/CyLFClk.c ****         }
 873:Generated_Source\PSoC4/CyLFClk.c **** 
 874:Generated_Source\PSoC4/CyLFClk.c ****         return (powerModeStatus);
 875:Generated_Source\PSoC4/CyLFClk.c ****     }
 865              		.loc 2 875 0
 866 0012 2000     		movs	r0, r4
 867              		@ sp needed
 868              	.LVL71:
 869 0014 10BD     		pop	{r4, pc}
 870              	.L85:
 871 0016 C046     		.align	2
 872              	.L84:
 873 0018 00002240 		.word	1075970048
 874              		.cfi_endproc
 875              	.LFE15:
 876              		.size	CySysClkWcoSetPowerMode, .-CySysClkWcoSetPowerMode
 877              		.section	.text.CySysClkWcoClockOutSelect,"ax",%progbits
 878              		.align	1
 879              		.global	CySysClkWcoClockOutSelect
 880              		.code	16
 881              		.thumb_func
 882              		.type	CySysClkWcoClockOutSelect, %function
 883              	CySysClkWcoClockOutSelect:
 884              	.LFB16:
 876:Generated_Source\PSoC4/CyLFClk.c **** 
 877:Generated_Source\PSoC4/CyLFClk.c **** 
 878:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 879:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoClockOutSelect
 880:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 881:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 882:Generated_Source\PSoC4/CyLFClk.c ****     * Selects the WCO block output source.
 883:Generated_Source\PSoC4/CyLFClk.c ****     *
 884:Generated_Source\PSoC4/CyLFClk.c ****     * In addition to generating 32.768 kHz clock from external crystals, WCO 
 885:Generated_Source\PSoC4/CyLFClk.c ****     * can be sourced by external clock source using wco_out pin. The API help to
 886:Generated_Source\PSoC4/CyLFClk.c ****     * lets you select between the sources: External crystal or external pin.
 887:Generated_Source\PSoC4/CyLFClk.c ****     *
 888:Generated_Source\PSoC4/CyLFClk.c ****     * If you want to use external pin to drive WCO the next procedure is required:
 889:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 1) Disable the WCO.
 890:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 2) Drive the wco_out pin to an external signal source.
 891:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 3) Call CySysClkWcoClockOutSelect(CY_SYS_CLK_WCO_SEL_PIN).
 892:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 4) Enable the WCO and wait for 15 us before clocking the XO pad at the high 
 893:Generated_Source\PSoC4/CyLFClk.c ****     * potential. Let's assume you are using the 1.6v clock amplitude, then the
 894:Generated_Source\PSoC4/CyLFClk.c ****     * sequence would start at 1.6v, then 0v, then 1.6v etc at a chosen frequency.
 895:Generated_Source\PSoC4/CyLFClk.c ****     *
 896:Generated_Source\PSoC4/CyLFClk.c ****     * If you want to use WCO after using an external pin source:
 897:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 1) Disable the WCO.
 898:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 2) Drive off wco_out pin with external signal source.
 899:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 3) Call CySysClkWcoClockOutSelect(CY_SYS_CLK_WCO_SEL_CRYSTAL).
 900:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 4) Enable the WCO.
 901:Generated_Source\PSoC4/CyLFClk.c ****     *
 902:Generated_Source\PSoC4/CyLFClk.c ****     * \warning 
 903:Generated_Source\PSoC4/CyLFClk.c ****     * Do not use the oscillator output clock prior to a 15uS delay in your system.
 904:Generated_Source\PSoC4/CyLFClk.c ****     * There are no limitations on the external clock frequency.
 905:Generated_Source\PSoC4/CyLFClk.c ****     * \warning 
 906:Generated_Source\PSoC4/CyLFClk.c ****     * When external clock source was selected to drive WCO block the IMO can be 
 907:Generated_Source\PSoC4/CyLFClk.c ****     * trimmed only when external clock source period is equal to WCO external
 908:Generated_Source\PSoC4/CyLFClk.c ****     * crystal period. Also external clock source accuracy should be higher 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 46


 909:Generated_Source\PSoC4/CyLFClk.c ****     * or equal to WCO external crystal accuracy.
 910:Generated_Source\PSoC4/CyLFClk.c ****     *
 911:Generated_Source\PSoC4/CyLFClk.c ****     * \param clockSel
 912:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_WCO_SEL_CRYSTAL - Selects External crystal as clock 
 913:Generated_Source\PSoC4/CyLFClk.c ****     * source of WCO.<br>
 914:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_WCO_SEL_PIN - Selects External clock input on wco_in pin as 
 915:Generated_Source\PSoC4/CyLFClk.c ****     * clock source of WCO.
 916:Generated_Source\PSoC4/CyLFClk.c ****     *
 917:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 918:Generated_Source\PSoC4/CyLFClk.c ****     void CySysClkWcoClockOutSelect(uint32 clockSel)
 919:Generated_Source\PSoC4/CyLFClk.c ****     {
 885              		.loc 2 919 0
 886              		.cfi_startproc
 887              		@ args = 0, pretend = 0, frame = 0
 888              		@ frame_needed = 0, uses_anonymous_args = 0
 889              	.LVL72:
 890 0000 10B5     		push	{r4, lr}
 891              		.cfi_def_cfa_offset 8
 892              		.cfi_offset 4, -8
 893              		.cfi_offset 14, -4
 894              		.loc 2 919 0
 895 0002 0400     		movs	r4, r0
 920:Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysClkWcoEnabled())
 896              		.loc 2 920 0
 897 0004 FFF7FEFF 		bl	CySysClkWcoEnabled
 898              	.LVL73:
 899 0008 0028     		cmp	r0, #0
 900 000a 08D0     		beq	.L86
 921:Generated_Source\PSoC4/CyLFClk.c ****         {
 922:Generated_Source\PSoC4/CyLFClk.c ****             if (1u >= clockSel)
 901              		.loc 2 922 0
 902 000c 012C     		cmp	r4, #1
 903 000e 06D8     		bhi	.L86
 923:Generated_Source\PSoC4/CyLFClk.c ****             {
 924:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_WCO_CONFIG_REG = (CY_SYS_CLK_WCO_CONFIG_REG & (uint32)(~CY_SYS_CLK_WCO_S
 904              		.loc 2 924 0
 905 0010 0421     		movs	r1, #4
 906 0012 034A     		ldr	r2, .L91
 907 0014 A400     		lsls	r4, r4, #2
 908              	.LVL74:
 909 0016 1368     		ldr	r3, [r2]
 910 0018 8B43     		bics	r3, r1
 911 001a 1C43     		orrs	r4, r3
 912 001c 1460     		str	r4, [r2]
 913              	.L86:
 925:Generated_Source\PSoC4/CyLFClk.c ****                                         (clockSel << CY_SYS_CLK_WCO_SELECT_PIN_OFFSET);
 926:Generated_Source\PSoC4/CyLFClk.c ****             }
 927:Generated_Source\PSoC4/CyLFClk.c ****             else
 928:Generated_Source\PSoC4/CyLFClk.c ****             {
 929:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
 930:Generated_Source\PSoC4/CyLFClk.c ****             }
 931:Generated_Source\PSoC4/CyLFClk.c ****         }
 932:Generated_Source\PSoC4/CyLFClk.c ****     }
 914              		.loc 2 932 0
 915              		@ sp needed
 916 001e 10BD     		pop	{r4, pc}
 917              	.L92:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 47


 918              		.align	2
 919              	.L91:
 920 0020 00002240 		.word	1075970048
 921              		.cfi_endproc
 922              	.LFE16:
 923              		.size	CySysClkWcoClockOutSelect, .-CySysClkWcoClockOutSelect
 924              		.section	.text.CySysWdtLock,"ax",%progbits
 925              		.align	1
 926              		.global	CySysWdtLock
 927              		.code	16
 928              		.thumb_func
 929              		.type	CySysWdtLock, %function
 930              	CySysWdtLock:
 931              	.LFB17:
 933:Generated_Source\PSoC4/CyLFClk.c **** #endif  /* (CY_IP_WCO) */
 934:Generated_Source\PSoC4/CyLFClk.c **** 
 935:Generated_Source\PSoC4/CyLFClk.c **** 
 936:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
 937:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 938:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtLock
 939:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 940:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 941:Generated_Source\PSoC4/CyLFClk.c ****     * Locks out configuration changes to the Watchdog timer registers and ILO
 942:Generated_Source\PSoC4/CyLFClk.c ****     * configuration register.
 943:Generated_Source\PSoC4/CyLFClk.c ****     *
 944:Generated_Source\PSoC4/CyLFClk.c ****     * After this function is called, ILO clock can't be disabled until
 945:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtUnlock() is called.
 946:Generated_Source\PSoC4/CyLFClk.c ****     *
 947:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 948:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtLock(void)
 949:Generated_Source\PSoC4/CyLFClk.c ****     {
 932              		.loc 2 949 0
 933              		.cfi_startproc
 934              		@ args = 0, pretend = 0, frame = 0
 935              		@ frame_needed = 0, uses_anonymous_args = 0
 936 0000 10B5     		push	{r4, lr}
 937              		.cfi_def_cfa_offset 8
 938              		.cfi_offset 4, -8
 939              		.cfi_offset 14, -4
 950:Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
 951:Generated_Source\PSoC4/CyLFClk.c ****         interruptState = CyEnterCriticalSection();
 940              		.loc 2 951 0
 941 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 942              	.LVL75:
 952:Generated_Source\PSoC4/CyLFClk.c **** 
 953:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_SELECT_REG = (CY_SYS_CLK_SELECT_REG & (uint32)(~CY_SYS_WDT_CLK_LOCK_BITS_MASK)) 
 943              		.loc 2 953 0
 944 0006 C021     		movs	r1, #192
 945 0008 034A     		ldr	r2, .L94
 946 000a 0902     		lsls	r1, r1, #8
 947 000c 1368     		ldr	r3, [r2]
 954:Generated_Source\PSoC4/CyLFClk.c ****                  CY_SYS_WDT_CLK_LOCK_BITS_MASK;
 955:Generated_Source\PSoC4/CyLFClk.c **** 
 956:Generated_Source\PSoC4/CyLFClk.c ****         CyExitCriticalSection(interruptState);
 957:Generated_Source\PSoC4/CyLFClk.c ****     }
 948              		.loc 2 957 0
 949              		@ sp needed
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 48


 953:Generated_Source\PSoC4/CyLFClk.c ****                  CY_SYS_WDT_CLK_LOCK_BITS_MASK;
 950              		.loc 2 953 0
 951 000e 0B43     		orrs	r3, r1
 952 0010 1360     		str	r3, [r2]
 956:Generated_Source\PSoC4/CyLFClk.c ****     }
 953              		.loc 2 956 0
 954 0012 FFF7FEFF 		bl	CyExitCriticalSection
 955              	.LVL76:
 956              		.loc 2 957 0
 957 0016 10BD     		pop	{r4, pc}
 958              	.L95:
 959              		.align	2
 960              	.L94:
 961 0018 00010B40 		.word	1074462976
 962              		.cfi_endproc
 963              	.LFE17:
 964              		.size	CySysWdtLock, .-CySysWdtLock
 965              		.section	.text.CySysWdtUnlock,"ax",%progbits
 966              		.align	1
 967              		.global	CySysWdtUnlock
 968              		.code	16
 969              		.thumb_func
 970              		.type	CySysWdtUnlock, %function
 971              	CySysWdtUnlock:
 972              	.LFB19:
 958:Generated_Source\PSoC4/CyLFClk.c **** 
 959:Generated_Source\PSoC4/CyLFClk.c **** 
 960:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 961:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtLocked
 962:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 963:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
 964:Generated_Source\PSoC4/CyLFClk.c ****     * Reports the WDT lock state.
 965:Generated_Source\PSoC4/CyLFClk.c ****     *
 966:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 - WDT is locked, and 0 - WDT is unlocked.
 967:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
 968:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 969:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysWdtLocked(void)
 970:Generated_Source\PSoC4/CyLFClk.c ****     {
 971:Generated_Source\PSoC4/CyLFClk.c ****         /* Prohibits writing to WDT registers and ILO/WCO registers when not equal 0 */
 972:Generated_Source\PSoC4/CyLFClk.c ****         return ((0u != (CY_SYS_CLK_SELECT_REG & (uint32)(CY_SYS_WDT_CLK_LOCK_BITS_MASK))) ? (uint32
 973:Generated_Source\PSoC4/CyLFClk.c ****     }
 974:Generated_Source\PSoC4/CyLFClk.c **** 
 975:Generated_Source\PSoC4/CyLFClk.c **** 
 976:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 977:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtUnlock
 978:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 979:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 980:Generated_Source\PSoC4/CyLFClk.c ****     *  Unlocks the Watchdog Timer configuration register.
 981:Generated_Source\PSoC4/CyLFClk.c ****     *
 982:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 983:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtUnlock(void)
 984:Generated_Source\PSoC4/CyLFClk.c ****     {
 973              		.loc 2 984 0
 974              		.cfi_startproc
 975              		@ args = 0, pretend = 0, frame = 0
 976              		@ frame_needed = 0, uses_anonymous_args = 0
 977 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 49


 978              		.cfi_def_cfa_offset 8
 979              		.cfi_offset 4, -8
 980              		.cfi_offset 14, -4
 985:Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
 986:Generated_Source\PSoC4/CyLFClk.c ****         interruptState = CyEnterCriticalSection();
 987:Generated_Source\PSoC4/CyLFClk.c **** 
 988:Generated_Source\PSoC4/CyLFClk.c ****         /* Removing WDT lock requires two writes */
 989:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & (uint32)(~CY_SYS_WDT_CLK_LOCK_BITS_MASK))
 981              		.loc 2 989 0
 982 0002 8024     		movs	r4, #128
 986:Generated_Source\PSoC4/CyLFClk.c **** 
 983              		.loc 2 986 0
 984 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 985              	.LVL77:
 986              		.loc 2 989 0
 987 0008 0749     		ldr	r1, .L97
 988 000a 084B     		ldr	r3, .L97+4
 989 000c 0A68     		ldr	r2, [r1]
 990 000e E401     		lsls	r4, r4, #7
 991 0010 1A40     		ands	r2, r3
 992 0012 2243     		orrs	r2, r4
 993 0014 0A60     		str	r2, [r1]
 990:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_WDT_CLK_LOCK_BIT0);
 991:Generated_Source\PSoC4/CyLFClk.c **** 
 992:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & (uint32)(~CY_SYS_WDT_CLK_LOCK_BITS_MASK))
 994              		.loc 2 992 0
 995 0016 0A68     		ldr	r2, [r1]
 993:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_WDT_CLK_LOCK_BIT1);
 994:Generated_Source\PSoC4/CyLFClk.c **** 
 995:Generated_Source\PSoC4/CyLFClk.c ****         CyExitCriticalSection(interruptState);
 996:Generated_Source\PSoC4/CyLFClk.c ****     }
 996              		.loc 2 996 0
 997              		@ sp needed
 992:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_WDT_CLK_LOCK_BIT1);
 998              		.loc 2 992 0
 999 0018 1340     		ands	r3, r2
 1000 001a 8022     		movs	r2, #128
 1001 001c 1202     		lsls	r2, r2, #8
 1002 001e 1343     		orrs	r3, r2
 1003 0020 0B60     		str	r3, [r1]
 995:Generated_Source\PSoC4/CyLFClk.c ****     }
 1004              		.loc 2 995 0
 1005 0022 FFF7FEFF 		bl	CyExitCriticalSection
 1006              	.LVL78:
 1007              		.loc 2 996 0
 1008 0026 10BD     		pop	{r4, pc}
 1009              	.L98:
 1010              		.align	2
 1011              	.L97:
 1012 0028 00010B40 		.word	1074462976
 1013 002c FF3FFFFF 		.word	-49153
 1014              		.cfi_endproc
 1015              	.LFE19:
 1016              		.size	CySysWdtUnlock, .-CySysWdtUnlock
 1017              		.section	.text.CySysWdtGetEnabledStatus,"ax",%progbits
 1018              		.align	1
 1019              		.global	CySysWdtGetEnabledStatus
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 50


 1020              		.code	16
 1021              		.thumb_func
 1022              		.type	CySysWdtGetEnabledStatus, %function
 1023              	CySysWdtGetEnabledStatus:
 1024              	.LFB20:
 997:Generated_Source\PSoC4/CyLFClk.c **** 
 998:Generated_Source\PSoC4/CyLFClk.c **** 
 999:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1000:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetEnabledStatus
1001:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1002:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1003:Generated_Source\PSoC4/CyLFClk.c ****     *  Reads the enabled status of one of the three WDT counters.
1004:Generated_Source\PSoC4/CyLFClk.c ****     *
1005:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2].  The number of the WDT counter.
1006:Generated_Source\PSoC4/CyLFClk.c ****     *
1007:Generated_Source\PSoC4/CyLFClk.c ****     * \return The status of the WDT counter:
1008:Generated_Source\PSoC4/CyLFClk.c ****     * \return 0 - If the counter is disabled.
1009:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 - If the counter is enabled.
1010:Generated_Source\PSoC4/CyLFClk.c ****     *
1011:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1012:Generated_Source\PSoC4/CyLFClk.c ****     * This function returns an actual WDT counter status from the status register. It may
1013:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 LFCLK cycles for the WDT status register to contain actual data
1014:Generated_Source\PSoC4/CyLFClk.c ****     * after the WDT counter is enabled.
1015:Generated_Source\PSoC4/CyLFClk.c ****     *
1016:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1017:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetEnabledStatus(uint32 counterNum)
1018:Generated_Source\PSoC4/CyLFClk.c ****     {
 1025              		.loc 2 1018 0
 1026              		.cfi_startproc
 1027              		@ args = 0, pretend = 0, frame = 0
 1028              		@ frame_needed = 0, uses_anonymous_args = 0
 1029              		@ link register save eliminated.
 1030              	.LVL79:
 1031              		.loc 2 1018 0
 1032 0000 0300     		movs	r3, r0
1019:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(counterNum < CY_SYS_WDT_COUNTERS_MAX);
1020:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_CONTROL_REG >> ((CY_SYS_WDT_CNT_SHIFT * counterNum) + CY_SYS_WDT_CNT_ST
 1033              		.loc 2 1020 0
 1034 0002 044A     		ldr	r2, .L100
 1035 0004 DB00     		lsls	r3, r3, #3
 1036 0006 1068     		ldr	r0, [r2]
 1037              	.LVL80:
 1038 0008 0133     		adds	r3, r3, #1
 1039 000a D840     		lsrs	r0, r0, r3
 1040 000c 0123     		movs	r3, #1
1021:Generated_Source\PSoC4/CyLFClk.c ****     }
 1041              		.loc 2 1021 0
 1042              		@ sp needed
1020:Generated_Source\PSoC4/CyLFClk.c ****     }
 1043              		.loc 2 1020 0
 1044 000e 1840     		ands	r0, r3
 1045              		.loc 2 1021 0
 1046 0010 7047     		bx	lr
 1047              	.L101:
 1048 0012 C046     		.align	2
 1049              	.L100:
 1050 0014 10020B40 		.word	1074463248
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 51


 1051              		.cfi_endproc
 1052              	.LFE20:
 1053              		.size	CySysWdtGetEnabledStatus, .-CySysWdtGetEnabledStatus
 1054              		.section	.text.CySysWdtSetMode,"ax",%progbits
 1055              		.align	1
 1056              		.global	CySysWdtSetMode
 1057              		.code	16
 1058              		.thumb_func
 1059              		.type	CySysWdtSetMode, %function
 1060              	CySysWdtSetMode:
 1061              	.LFB21:
1022:Generated_Source\PSoC4/CyLFClk.c **** 
1023:Generated_Source\PSoC4/CyLFClk.c **** 
1024:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1025:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetMode
1026:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1027:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1028:Generated_Source\PSoC4/CyLFClk.c ****     * Writes the mode of one of the three WDT counters.
1029:Generated_Source\PSoC4/CyLFClk.c ****     *
1030:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2].  The number of the WDT counter.
1031:Generated_Source\PSoC4/CyLFClk.c ****     *
1032:Generated_Source\PSoC4/CyLFClk.c ****     * \param mode
1033:Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_WDT_MODE_NONE - Free running.<br>
1034:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_MODE_INT - The interrupt generated on match for counter 0
1035:Generated_Source\PSoC4/CyLFClk.c ****     * and 1, and on bit toggle for counter 2.<br>
1036:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_MODE_RESET - Reset on match (valid for counter 0 and 1 only).<br>
1037:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_MODE_INT_RESET - Generate an interrupt.  Generate a reset on
1038:Generated_Source\PSoC4/CyLFClk.c ****     * the 3rd non-handled interrupt (valid for counter 0 and counter 1 only).
1039:Generated_Source\PSoC4/CyLFClk.c ****     *
1040:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1041:Generated_Source\PSoC4/CyLFClk.c ****     * WDT counter counterNum should be disabled to set a mode. Otherwise, this
1042:Generated_Source\PSoC4/CyLFClk.c ****     * function call has no effect. If the specified counter is enabled,
1043:Generated_Source\PSoC4/CyLFClk.c ****     * call the CySysWdtDisable() function with the corresponding parameter to
1044:Generated_Source\PSoC4/CyLFClk.c ****     * disable the specified counter and wait for it to stop.
1045:Generated_Source\PSoC4/CyLFClk.c ****     *
1046:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1047:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetMode(uint32 counterNum, uint32 mode)
1048:Generated_Source\PSoC4/CyLFClk.c ****     {
 1062              		.loc 2 1048 0
 1063              		.cfi_startproc
 1064              		@ args = 0, pretend = 0, frame = 0
 1065              		@ frame_needed = 0, uses_anonymous_args = 0
 1066              	.LVL81:
 1067 0000 70B5     		push	{r4, r5, r6, lr}
 1068              		.cfi_def_cfa_offset 16
 1069              		.cfi_offset 4, -16
 1070              		.cfi_offset 5, -12
 1071              		.cfi_offset 6, -8
 1072              		.cfi_offset 14, -4
 1073              		.loc 2 1048 0
 1074 0002 0500     		movs	r5, r0
 1075 0004 0C00     		movs	r4, r1
1049:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1050:Generated_Source\PSoC4/CyLFClk.c **** 
1051:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(counterNum < CY_SYS_WDT_COUNTERS_MAX);
1052:Generated_Source\PSoC4/CyLFClk.c **** 
1053:Generated_Source\PSoC4/CyLFClk.c ****         if(0u == CySysWdtGetEnabledStatus(counterNum))
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 52


 1076              		.loc 2 1053 0
 1077 0006 FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 1078              	.LVL82:
 1079 000a 0028     		cmp	r0, #0
 1080 000c 0AD1     		bne	.L102
 1081              	.LVL83:
 1082              	.LBB48:
 1083              	.LBB49:
1054:Generated_Source\PSoC4/CyLFClk.c ****         {
1055:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG &
 1084              		.loc 2 1055 0
 1085 000e 0321     		movs	r1, #3
 1086 0010 0800     		movs	r0, r1
1056:Generated_Source\PSoC4/CyLFClk.c ****                                 (uint32)~((uint32)(CY_SYS_WDT_MODE_MASK << (counterNum * CY_SYS_WDT
 1087              		.loc 2 1056 0
 1088 0012 ED00     		lsls	r5, r5, #3
 1089              	.LVL84:
1055:Generated_Source\PSoC4/CyLFClk.c ****                                 (uint32)~((uint32)(CY_SYS_WDT_MODE_MASK << (counterNum * CY_SYS_WDT
 1090              		.loc 2 1055 0
 1091 0014 A840     		lsls	r0, r0, r5
1057:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= (uint32)((mode & CY_SYS_WDT_MODE_MASK) << (counterNum * CY_SYS_WDT_CN
 1092              		.loc 2 1057 0
 1093 0016 2140     		ands	r1, r4
 1094 0018 A940     		lsls	r1, r1, r5
1055:Generated_Source\PSoC4/CyLFClk.c ****                                 (uint32)~((uint32)(CY_SYS_WDT_MODE_MASK << (counterNum * CY_SYS_WDT
 1095              		.loc 2 1055 0
 1096 001a 034A     		ldr	r2, .L104
 1097 001c 1368     		ldr	r3, [r2]
 1098 001e 8343     		bics	r3, r0
 1099              	.LVL85:
 1100              		.loc 2 1057 0
 1101 0020 1943     		orrs	r1, r3
 1102              	.LVL86:
1058:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
 1103              		.loc 2 1058 0
 1104 0022 1160     		str	r1, [r2]
 1105              	.LVL87:
 1106              	.L102:
 1107              	.LBE49:
 1108              	.LBE48:
1059:Generated_Source\PSoC4/CyLFClk.c ****         }
1060:Generated_Source\PSoC4/CyLFClk.c ****     }
 1109              		.loc 2 1060 0
 1110              		@ sp needed
 1111              	.LVL88:
 1112 0024 70BD     		pop	{r4, r5, r6, pc}
 1113              	.L105:
 1114 0026 C046     		.align	2
 1115              	.L104:
 1116 0028 0C020B40 		.word	1074463244
 1117              		.cfi_endproc
 1118              	.LFE21:
 1119              		.size	CySysWdtSetMode, .-CySysWdtSetMode
 1120              		.section	.text.CySysClkLfclkPosedgeRestore,"ax",%progbits
 1121              		.align	1
 1122              		.code	16
 1123              		.thumb_func
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 53


 1124              		.type	CySysClkLfclkPosedgeRestore, %function
 1125              	CySysClkLfclkPosedgeRestore:
 1126              	.LFB44:
1061:Generated_Source\PSoC4/CyLFClk.c **** 
1062:Generated_Source\PSoC4/CyLFClk.c **** 
1063:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1064:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetMode
1065:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1066:Generated_Source\PSoC4/CyLFClk.c ****     * 
1067:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the mode of one of the three WDT counters.
1068:Generated_Source\PSoC4/CyLFClk.c ****     *
1069:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the WDT counter.
1070:Generated_Source\PSoC4/CyLFClk.c ****     *
1071:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mode of the counter. The same enumerated values as the mode 
1072:Generated_Source\PSoC4/CyLFClk.c ****     * parameter used in CySysWdtSetMode().
1073:Generated_Source\PSoC4/CyLFClk.c ****     *
1074:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1075:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetMode(uint32 counterNum)
1076:Generated_Source\PSoC4/CyLFClk.c ****     {
1077:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_CONFIG_REG >> (counterNum * CY_SYS_WDT_CNT_SHIFT)) & CY_SYS_WDT_MODE_MA
1078:Generated_Source\PSoC4/CyLFClk.c ****     }
1079:Generated_Source\PSoC4/CyLFClk.c **** 
1080:Generated_Source\PSoC4/CyLFClk.c **** 
1081:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1082:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetClearOnMatch
1083:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1084:Generated_Source\PSoC4/CyLFClk.c ****     * 
1085:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the WDT counter "clear on match" setting.
1086:Generated_Source\PSoC4/CyLFClk.c ****     *
1087:Generated_Source\PSoC4/CyLFClk.c ****     * If configured to "clear on match", the counter counts from 0 to MatchValue
1088:Generated_Source\PSoC4/CyLFClk.c ****     * giving it a period of (MatchValue + 1).
1089:Generated_Source\PSoC4/CyLFClk.c ****     *
1090:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum
1091:Generated_Source\PSoC4/CyLFClk.c ****     * Valid range [0-1]. The number of the WDT counter. The match values are not
1092:Generated_Source\PSoC4/CyLFClk.c ****     * supported by counter 2.
1093:Generated_Source\PSoC4/CyLFClk.c ****     *
1094:Generated_Source\PSoC4/CyLFClk.c ****     * \param enable 0 to disable appropriate counter <br>
1095:Generated_Source\PSoC4/CyLFClk.c ****     *  1 to enable appropriate counter
1096:Generated_Source\PSoC4/CyLFClk.c ****     *
1097:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1098:Generated_Source\PSoC4/CyLFClk.c ****     * WDT counter counterNum should be disabled. Otherwise this function call
1099:Generated_Source\PSoC4/CyLFClk.c ****     * has no effect. If the specified counter is enabled, call the CySysWdtDisable()
1100:Generated_Source\PSoC4/CyLFClk.c ****     * function with the corresponding parameter to disable the specified counter and
1101:Generated_Source\PSoC4/CyLFClk.c ****     * wait for it to stop. This may take up to three LFCLK cycles.
1102:Generated_Source\PSoC4/CyLFClk.c ****     *
1103:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1104:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetClearOnMatch(uint32 counterNum, uint32 enable)
1105:Generated_Source\PSoC4/CyLFClk.c ****     {
1106:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1107:Generated_Source\PSoC4/CyLFClk.c **** 
1108:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
1109:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1110:Generated_Source\PSoC4/CyLFClk.c **** 
1111:Generated_Source\PSoC4/CyLFClk.c ****         if(0u == CySysWdtGetEnabledStatus(counterNum))
1112:Generated_Source\PSoC4/CyLFClk.c ****         {
1113:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG & (uint32)~((uint32)((uint32)1u << 
1114:Generated_Source\PSoC4/CyLFClk.c ****                                      ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_CL
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 54


1115:Generated_Source\PSoC4/CyLFClk.c **** 
1116:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue
1117:Generated_Source\PSoC4/CyLFClk.c ****                 |= (uint32)(enable << ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_C
1118:Generated_Source\PSoC4/CyLFClk.c **** 
1119:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
1120:Generated_Source\PSoC4/CyLFClk.c ****         }
1121:Generated_Source\PSoC4/CyLFClk.c ****     }
1122:Generated_Source\PSoC4/CyLFClk.c **** 
1123:Generated_Source\PSoC4/CyLFClk.c **** 
1124:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1125:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetClearOnMatch
1126:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1127:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1128:Generated_Source\PSoC4/CyLFClk.c ****     * Reads the "clear on match" setting for the specified counter.
1129:Generated_Source\PSoC4/CyLFClk.c ****     *
1130:Generated_Source\PSoC4/CyLFClk.c ****     * \param
1131:Generated_Source\PSoC4/CyLFClk.c ****     * counterNum Valid range [0-1]. The number of the WDT counter. The match values
1132:Generated_Source\PSoC4/CyLFClk.c ****     * are not supported by counter 2.
1133:Generated_Source\PSoC4/CyLFClk.c ****     *
1134:Generated_Source\PSoC4/CyLFClk.c ****     * \return The "clear on match" status: <br>1 if enabled <br>0 if disabled
1135:Generated_Source\PSoC4/CyLFClk.c ****     *
1136:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1137:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetClearOnMatch(uint32 counterNum)
1138:Generated_Source\PSoC4/CyLFClk.c ****     {
1139:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
1140:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1141:Generated_Source\PSoC4/CyLFClk.c **** 
1142:Generated_Source\PSoC4/CyLFClk.c ****         return (uint32)((CY_SYS_WDT_CONFIG_REG >>
1143:Generated_Source\PSoC4/CyLFClk.c ****                         ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_CLR_SHIFT)) & 0
1144:Generated_Source\PSoC4/CyLFClk.c ****     }
1145:Generated_Source\PSoC4/CyLFClk.c **** 
1146:Generated_Source\PSoC4/CyLFClk.c **** 
1147:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1148:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtEnable
1149:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1150:Generated_Source\PSoC4/CyLFClk.c ****     *
1151:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Enables the specified WDT counters.
1152:Generated_Source\PSoC4/CyLFClk.c ****     *
1153:Generated_Source\PSoC4/CyLFClk.c ****     * All the counters specified in the mask are enabled.
1154:Generated_Source\PSoC4/CyLFClk.c ****     *
1155:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
1156:Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_WDT_COUNTER0_MASK - The mask for counter 0 to enable.<br>
1157:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_MASK - The mask for counter 1 to enable.<br>
1158:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_MASK - The mask for counter 2 to enable.
1159:Generated_Source\PSoC4/CyLFClk.c ****     *
1160:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1161:Generated_Source\PSoC4/CyLFClk.c ****     * Enabling or disabling WDT requires 3 LFCLK cycles to come into effect.
1162:Generated_Source\PSoC4/CyLFClk.c ****     * Therefore, the WDT enable state must not be changed more than once in
1163:Generated_Source\PSoC4/CyLFClk.c ****     * that period.
1164:Generated_Source\PSoC4/CyLFClk.c ****     *
1165:Generated_Source\PSoC4/CyLFClk.c ****     * After WDT is enabled, it is illegal to write WDT configuration (WDT_CONFIG)
1166:Generated_Source\PSoC4/CyLFClk.c ****     * and control (WDT_CONTROL) registers. This means that all WDT functions that
1167:Generated_Source\PSoC4/CyLFClk.c ****     * contain 'write' in the name (with the exception of CySysWdtSetMatch()
1168:Generated_Source\PSoC4/CyLFClk.c ****     * function) are illegal to call if WDT is enabled.
1169:Generated_Source\PSoC4/CyLFClk.c ****     *
1170:Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4100 / PSoC 4200: This function enables ILO.
1171:Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 55


1172:Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4100 BLE / PSoC 4200 BLE / PSoC4200L / PSoC 4100M 
1173:Generated_Source\PSoC4/CyLFClk.c ****     * / PSoC 4200M:
1174:Generated_Source\PSoC4/CyLFClk.c ****     * LFLCK should be configured before calling this function. The desired
1175:Generated_Source\PSoC4/CyLFClk.c ****     * source should be enabled and configured to be the source for LFCLK.
1176:Generated_Source\PSoC4/CyLFClk.c ****     *
1177:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1178:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtEnable(uint32 counterMask)
1179:Generated_Source\PSoC4/CyLFClk.c ****     {
1180:Generated_Source\PSoC4/CyLFClk.c ****         #if (!CY_IP_WCO)
1181:Generated_Source\PSoC4/CyLFClk.c ****             CySysClkIloStart();
1182:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (!CY_IP_WCO) */
1183:Generated_Source\PSoC4/CyLFClk.c **** 
1184:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_CONTROL_REG |= counterMask;
1185:Generated_Source\PSoC4/CyLFClk.c **** 
1186:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_WDT_COUNTER0_MASK))
1187:Generated_Source\PSoC4/CyLFClk.c ****         {
1188:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0))
1189:Generated_Source\PSoC4/CyLFClk.c ****             {
1190:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
1191:Generated_Source\PSoC4/CyLFClk.c ****             }
1192:Generated_Source\PSoC4/CyLFClk.c ****         }
1193:Generated_Source\PSoC4/CyLFClk.c **** 
1194:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_WDT_COUNTER1_MASK))
1195:Generated_Source\PSoC4/CyLFClk.c ****         {
1196:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1))
1197:Generated_Source\PSoC4/CyLFClk.c ****             {
1198:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
1199:Generated_Source\PSoC4/CyLFClk.c ****             }
1200:Generated_Source\PSoC4/CyLFClk.c ****         }
1201:Generated_Source\PSoC4/CyLFClk.c **** 
1202:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_WDT_COUNTER2_MASK))
1203:Generated_Source\PSoC4/CyLFClk.c ****         {
1204:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
1205:Generated_Source\PSoC4/CyLFClk.c ****             {
1206:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
1207:Generated_Source\PSoC4/CyLFClk.c ****             }
1208:Generated_Source\PSoC4/CyLFClk.c ****         }
1209:Generated_Source\PSoC4/CyLFClk.c ****     }
1210:Generated_Source\PSoC4/CyLFClk.c **** 
1211:Generated_Source\PSoC4/CyLFClk.c **** 
1212:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1213:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtDisable
1214:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1215:Generated_Source\PSoC4/CyLFClk.c ****     *
1216:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Disables the specified WDT counters.
1217:Generated_Source\PSoC4/CyLFClk.c ****     * All the counters specified in the mask are disabled. The function waits for 
1218:Generated_Source\PSoC4/CyLFClk.c ****     * the changes to come into effect.
1219:Generated_Source\PSoC4/CyLFClk.c ****     *
1220:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
1221:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0_MASK - The mask for counter 0 to disable. <br>
1222:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_MASK - The mask for counter 1 to disable. <br>
1223:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_MASK - The mask for counter 2 to disable.
1224:Generated_Source\PSoC4/CyLFClk.c ****     *
1225:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1226:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtDisable(uint32 counterMask)
1227:Generated_Source\PSoC4/CyLFClk.c ****     {
1228:Generated_Source\PSoC4/CyLFClk.c ****         if (0uL == CySysWdtLocked())
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 56


1229:Generated_Source\PSoC4/CyLFClk.c ****         {
1230:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONTROL_REG &= ~counterMask;
1231:Generated_Source\PSoC4/CyLFClk.c **** 
1232:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (counterMask & CY_SYS_WDT_COUNTER0_MASK))
1233:Generated_Source\PSoC4/CyLFClk.c ****             {
1234:Generated_Source\PSoC4/CyLFClk.c ****                 while (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0))
1235:Generated_Source\PSoC4/CyLFClk.c ****                 {
1236:Generated_Source\PSoC4/CyLFClk.c ****                     /* Wait for changes to come into effect */
1237:Generated_Source\PSoC4/CyLFClk.c ****                 }
1238:Generated_Source\PSoC4/CyLFClk.c ****             }
1239:Generated_Source\PSoC4/CyLFClk.c **** 
1240:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (counterMask & CY_SYS_WDT_COUNTER1_MASK))
1241:Generated_Source\PSoC4/CyLFClk.c ****             {
1242:Generated_Source\PSoC4/CyLFClk.c ****                 while (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1))
1243:Generated_Source\PSoC4/CyLFClk.c ****                 {
1244:Generated_Source\PSoC4/CyLFClk.c ****                     /* Wait for changes to come into effect */
1245:Generated_Source\PSoC4/CyLFClk.c ****                 }
1246:Generated_Source\PSoC4/CyLFClk.c ****             }
1247:Generated_Source\PSoC4/CyLFClk.c **** 
1248:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (counterMask & CY_SYS_WDT_COUNTER2_MASK))
1249:Generated_Source\PSoC4/CyLFClk.c ****             {
1250:Generated_Source\PSoC4/CyLFClk.c ****                 while (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
1251:Generated_Source\PSoC4/CyLFClk.c ****                 {
1252:Generated_Source\PSoC4/CyLFClk.c ****                     /* Wait for changes to come into effect */
1253:Generated_Source\PSoC4/CyLFClk.c ****                 }
1254:Generated_Source\PSoC4/CyLFClk.c ****             }
1255:Generated_Source\PSoC4/CyLFClk.c ****         }
1256:Generated_Source\PSoC4/CyLFClk.c ****     }
1257:Generated_Source\PSoC4/CyLFClk.c **** 
1258:Generated_Source\PSoC4/CyLFClk.c **** 
1259:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1260:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetCascade
1261:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1262:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1263:Generated_Source\PSoC4/CyLFClk.c ****     * Writes the two WDT cascade values based on the combination of mask values
1264:Generated_Source\PSoC4/CyLFClk.c ****     * specified.
1265:Generated_Source\PSoC4/CyLFClk.c ****     *
1266:Generated_Source\PSoC4/CyLFClk.c ****     * \param cascadeMask The mask value used to set or clear the cascade values:
1267:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_CASCADE_NONE - Neither <br>
1268:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_CASCADE_01 - Cascade 01 <br>
1269:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_CASCADE_12 - Cascade 12
1270:Generated_Source\PSoC4/CyLFClk.c ****     *
1271:Generated_Source\PSoC4/CyLFClk.c ****     * If only one cascade mask is specified, the second cascade is disabled.
1272:Generated_Source\PSoC4/CyLFClk.c ****     * To set both cascade modes, two defines should be ORed:
1273:Generated_Source\PSoC4/CyLFClk.c ****     * (CY_SYS_TIMER_CASCADE_01 | CY_SYS_TIMER_CASCADE_12).
1274:Generated_Source\PSoC4/CyLFClk.c ****     * \note If CySysWdtSetCascade() was called with ORed defines it is necessary 
1275:Generated_Source\PSoC4/CyLFClk.c ****     * to call CySysWdtSetClearOnMatch(1,1). It is needed to make sure that 
1276:Generated_Source\PSoC4/CyLFClk.c ****     * Counter 2 will be updated in the expected way.
1277:Generated_Source\PSoC4/CyLFClk.c ****     *
1278:Generated_Source\PSoC4/CyLFClk.c ****     * WDT counters that are part of the specified cascade should be disabled.
1279:Generated_Source\PSoC4/CyLFClk.c ****     * Otherwise this function call has no effect. If the specified
1280:Generated_Source\PSoC4/CyLFClk.c ****     * counter is enabled, call CySysWdtDisable() function with the corresponding
1281:Generated_Source\PSoC4/CyLFClk.c ****     * parameter to disable the specified counter and wait for it to stop. This may
1282:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 LFCLK cycles.
1283:Generated_Source\PSoC4/CyLFClk.c ****     *
1284:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1285:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetCascade(uint32 cascadeMask)
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 57


1286:Generated_Source\PSoC4/CyLFClk.c ****     {
1287:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1288:Generated_Source\PSoC4/CyLFClk.c ****         uint32 countersEnableStatus;
1289:Generated_Source\PSoC4/CyLFClk.c **** 
1290:Generated_Source\PSoC4/CyLFClk.c ****         countersEnableStatus = CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0) |
1291:Generated_Source\PSoC4/CyLFClk.c ****                             CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1) |
1292:Generated_Source\PSoC4/CyLFClk.c ****                             CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2);
1293:Generated_Source\PSoC4/CyLFClk.c **** 
1294:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == countersEnableStatus)
1295:Generated_Source\PSoC4/CyLFClk.c ****         {
1296:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG;
1297:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= ((uint32)(~(CY_SYS_WDT_CASCADE_01|CY_SYS_WDT_CASCADE_12)));
1298:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= cascadeMask;
1299:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
1300:Generated_Source\PSoC4/CyLFClk.c ****         }
1301:Generated_Source\PSoC4/CyLFClk.c ****     }
1302:Generated_Source\PSoC4/CyLFClk.c **** 
1303:Generated_Source\PSoC4/CyLFClk.c **** 
1304:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1305:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetCascade
1306:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1307:Generated_Source\PSoC4/CyLFClk.c ****     *
1308:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the two WDT cascade values returning a mask of the bits set.
1309:Generated_Source\PSoC4/CyLFClk.c ****     *
1310:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mask of the cascade values set.
1311:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_CASCADE_NONE - Neither
1312:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_CASCADE_01 - Cascade 01
1313:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_CASCADE_12 - Cascade 12
1314:Generated_Source\PSoC4/CyLFClk.c ****     *
1315:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1316:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetCascade(void)
1317:Generated_Source\PSoC4/CyLFClk.c ****     {
1318:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WDT_CONFIG_REG & (CY_SYS_WDT_CASCADE_01 | CY_SYS_WDT_CASCADE_12));
1319:Generated_Source\PSoC4/CyLFClk.c ****     }
1320:Generated_Source\PSoC4/CyLFClk.c **** 
1321:Generated_Source\PSoC4/CyLFClk.c **** 
1322:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1323:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetMatch
1324:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1325:Generated_Source\PSoC4/CyLFClk.c ****     *
1326:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the WDT counter match comparison value.
1327:Generated_Source\PSoC4/CyLFClk.c ****     *
1328:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum
1329:Generated_Source\PSoC4/CyLFClk.c ****     * Valid range [0-1]. The number of the WDT counter. The match values are not
1330:Generated_Source\PSoC4/CyLFClk.c ****     * supported by counter 2.
1331:Generated_Source\PSoC4/CyLFClk.c ****     *
1332:Generated_Source\PSoC4/CyLFClk.c ****     * \param match
1333:Generated_Source\PSoC4/CyLFClk.c ****     * Valid range [0-65535]. The value to be used to match against the counter.
1334:Generated_Source\PSoC4/CyLFClk.c ****     *
1335:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1336:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetMatch(uint32 counterNum, uint32 match)
1337:Generated_Source\PSoC4/CyLFClk.c ****     {
1338:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue;
1339:Generated_Source\PSoC4/CyLFClk.c **** 
1340:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
1341:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1342:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 58


1343:Generated_Source\PSoC4/CyLFClk.c ****         /* Wait for previous changes to come into effect */
1344:Generated_Source\PSoC4/CyLFClk.c ****         CyDelayUs(CY_SYS_WDT_3LFCLK_DELAY_US);
1345:Generated_Source\PSoC4/CyLFClk.c **** 
1346:Generated_Source\PSoC4/CyLFClk.c ****         regValue = CY_SYS_WDT_MATCH_REG;
1347:Generated_Source\PSoC4/CyLFClk.c ****         regValue &= (uint32)~((uint32)(CY_SYS_WDT_LOWER_16BITS_MASK << (counterNum * CY_SYS_WDT_CNT
1348:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_MATCH_REG = (regValue | (match << (counterNum * CY_SYS_WDT_CNT_MATCH_SHIFT)));
1349:Generated_Source\PSoC4/CyLFClk.c **** 
1350:Generated_Source\PSoC4/CyLFClk.c ****         /* Make sure match synchronization has started */
1351:Generated_Source\PSoC4/CyLFClk.c ****         CyDelayUs(CY_SYS_WDT_1LFCLK_DELAY_US);
1352:Generated_Source\PSoC4/CyLFClk.c ****     }
1353:Generated_Source\PSoC4/CyLFClk.c **** 
1354:Generated_Source\PSoC4/CyLFClk.c **** 
1355:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1356:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetToggleBit
1357:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1358:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1359:Generated_Source\PSoC4/CyLFClk.c ****     * Configures which bit in WDT counter 2 to monitor for a toggle.
1360:Generated_Source\PSoC4/CyLFClk.c ****     *
1361:Generated_Source\PSoC4/CyLFClk.c ****     * When that bit toggles, an interrupt is generated if the mode for counter 2 has
1362:Generated_Source\PSoC4/CyLFClk.c ****     * enabled interrupts.
1363:Generated_Source\PSoC4/CyLFClk.c ****     *
1364:Generated_Source\PSoC4/CyLFClk.c ****     * \param bits Valid range [0-31].  Counter 2 bit to monitor for a toggle.
1365:Generated_Source\PSoC4/CyLFClk.c ****     *
1366:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1367:Generated_Source\PSoC4/CyLFClk.c ****     * WDT Counter 2 should be disabled. Otherwise this function call has no
1368:Generated_Source\PSoC4/CyLFClk.c ****     * effect.
1369:Generated_Source\PSoC4/CyLFClk.c ****     *
1370:Generated_Source\PSoC4/CyLFClk.c ****     * If the specified counter is enabled, call the CySysWdtDisable() function with
1371:Generated_Source\PSoC4/CyLFClk.c ****     * the corresponding parameter to disable the specified counter and wait for it to
1372:Generated_Source\PSoC4/CyLFClk.c ****     * stop. This may take up to 3 LFCLK cycles.
1373:Generated_Source\PSoC4/CyLFClk.c ****     *
1374:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1375:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetToggleBit(uint32 bits)
1376:Generated_Source\PSoC4/CyLFClk.c ****     {
1377:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1378:Generated_Source\PSoC4/CyLFClk.c **** 
1379:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
1380:Generated_Source\PSoC4/CyLFClk.c ****         {
1381:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG;
1382:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= (uint32)(~((uint32)(CY_SYS_WDT_CONFIG_BITS2_MASK << CY_SYS_WDT_CONFIG
1383:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= ((bits & CY_SYS_WDT_CONFIG_BITS2_MASK) << CY_SYS_WDT_CONFIG_BITS2_POS
1384:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
1385:Generated_Source\PSoC4/CyLFClk.c ****         }
1386:Generated_Source\PSoC4/CyLFClk.c ****     }
1387:Generated_Source\PSoC4/CyLFClk.c **** 
1388:Generated_Source\PSoC4/CyLFClk.c **** 
1389:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1390:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetToggleBit
1391:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1392:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1393:Generated_Source\PSoC4/CyLFClk.c ****     * Reads which bit in WDT counter 2 is monitored for a toggle.
1394:Generated_Source\PSoC4/CyLFClk.c ****     *
1395:Generated_Source\PSoC4/CyLFClk.c ****     * \return The bit that is monitored (range of 0 to 31)
1396:Generated_Source\PSoC4/CyLFClk.c ****     *
1397:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1398:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetToggleBit(void)
1399:Generated_Source\PSoC4/CyLFClk.c ****     {
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 59


1400:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_CONFIG_REG >> CY_SYS_WDT_CONFIG_BITS2_POS) & CY_SYS_WDT_CONFIG_BITS2_MA
1401:Generated_Source\PSoC4/CyLFClk.c ****     }
1402:Generated_Source\PSoC4/CyLFClk.c **** 
1403:Generated_Source\PSoC4/CyLFClk.c **** 
1404:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1405:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetMatch
1406:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1407:Generated_Source\PSoC4/CyLFClk.c ****     *
1408:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the WDT counter match comparison value.
1409:Generated_Source\PSoC4/CyLFClk.c ****     *
1410:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1].  The number of the WDT counter. The match
1411:Generated_Source\PSoC4/CyLFClk.c ****     * values are not supported by counter 2.
1412:Generated_Source\PSoC4/CyLFClk.c ****     *
1413:Generated_Source\PSoC4/CyLFClk.c ****     * \return A 16-bit match value.
1414:Generated_Source\PSoC4/CyLFClk.c ****     *
1415:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1416:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetMatch(uint32 counterNum)
1417:Generated_Source\PSoC4/CyLFClk.c ****     {
1418:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
1419:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1420:Generated_Source\PSoC4/CyLFClk.c **** 
1421:Generated_Source\PSoC4/CyLFClk.c ****         return ((uint32)(CY_SYS_WDT_MATCH_REG >> 
1422:Generated_Source\PSoC4/CyLFClk.c ****                                             (counterNum * CY_SYS_WDT_CNT_MATCH_SHIFT)) & CY_SYS_WDT
1423:Generated_Source\PSoC4/CyLFClk.c ****     }
1424:Generated_Source\PSoC4/CyLFClk.c **** 
1425:Generated_Source\PSoC4/CyLFClk.c **** 
1426:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1427:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetCount
1428:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1429:Generated_Source\PSoC4/CyLFClk.c ****     *
1430:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the current WDT counter value.
1431:Generated_Source\PSoC4/CyLFClk.c ****     *
1432:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2]. The number of the WDT counter.
1433:Generated_Source\PSoC4/CyLFClk.c ****     *
1434:Generated_Source\PSoC4/CyLFClk.c ****     * \return A live counter value.  Counter 0 and Counter 1 are 16 bit counters 
1435:Generated_Source\PSoC4/CyLFClk.c ****     * and counter 2 is a 32 bit counter.
1436:Generated_Source\PSoC4/CyLFClk.c ****     *
1437:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1438:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetCount(uint32 counterNum)
1439:Generated_Source\PSoC4/CyLFClk.c ****     {
1440:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue = 0u;
1441:Generated_Source\PSoC4/CyLFClk.c **** 
1442:Generated_Source\PSoC4/CyLFClk.c ****         switch(counterNum)
1443:Generated_Source\PSoC4/CyLFClk.c ****         {
1444:Generated_Source\PSoC4/CyLFClk.c ****             /* WDT Counter 0 */
1445:Generated_Source\PSoC4/CyLFClk.c ****             case 0u:
1446:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = CY_SYS_WDT_CTRLOW_REG & CY_SYS_WDT_LOWER_16BITS_MASK;
1447:Generated_Source\PSoC4/CyLFClk.c ****             break;
1448:Generated_Source\PSoC4/CyLFClk.c **** 
1449:Generated_Source\PSoC4/CyLFClk.c ****             /* WDT Counter 1 */
1450:Generated_Source\PSoC4/CyLFClk.c ****             case 1u:
1451:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = (CY_SYS_WDT_CTRLOW_REG >> CY_SYS_WDT_CNT_MATCH_SHIFT) & CY_SYS_WDT_LOWER
1452:Generated_Source\PSoC4/CyLFClk.c ****             break;
1453:Generated_Source\PSoC4/CyLFClk.c **** 
1454:Generated_Source\PSoC4/CyLFClk.c ****             /* WDT Counter 2 */
1455:Generated_Source\PSoC4/CyLFClk.c ****             case 2u:
1456:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = CY_SYS_WDT_CTRHIGH_REG;
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 60


1457:Generated_Source\PSoC4/CyLFClk.c ****             break;
1458:Generated_Source\PSoC4/CyLFClk.c **** 
1459:Generated_Source\PSoC4/CyLFClk.c ****             default:
1460:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
1461:Generated_Source\PSoC4/CyLFClk.c ****             break;
1462:Generated_Source\PSoC4/CyLFClk.c ****         }
1463:Generated_Source\PSoC4/CyLFClk.c **** 
1464:Generated_Source\PSoC4/CyLFClk.c ****         return (regValue);
1465:Generated_Source\PSoC4/CyLFClk.c ****     }
1466:Generated_Source\PSoC4/CyLFClk.c **** 
1467:Generated_Source\PSoC4/CyLFClk.c **** 
1468:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1469:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetInterruptSource
1470:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1471:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1472:Generated_Source\PSoC4/CyLFClk.c ****     * Reads a mask containing all the WDT counters interrupts that are currently
1473:Generated_Source\PSoC4/CyLFClk.c ****     * set by the hardware, if a corresponding mode is selected.
1474:Generated_Source\PSoC4/CyLFClk.c ****     *
1475:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mask of interrupts set
1476:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_COUNTER0_INT - Counter 0
1477:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_COUNTER1_INT - Counter 1
1478:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_COUNTER2_INT - Counter 2
1479:Generated_Source\PSoC4/CyLFClk.c ****     *
1480:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1481:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetInterruptSource(void)
1482:Generated_Source\PSoC4/CyLFClk.c ****     {
1483:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WDT_CONTROL_REG & (CY_SYS_WDT_COUNTER0_INT | CY_SYS_WDT_COUNTER1_INT | CY_SY
1484:Generated_Source\PSoC4/CyLFClk.c ****     }
1485:Generated_Source\PSoC4/CyLFClk.c **** 
1486:Generated_Source\PSoC4/CyLFClk.c **** 
1487:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1488:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtClearInterrupt
1489:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1490:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1491:Generated_Source\PSoC4/CyLFClk.c ****     * Clears all the WDT counter interrupts set in the mask.
1492:Generated_Source\PSoC4/CyLFClk.c ****     *
1493:Generated_Source\PSoC4/CyLFClk.c ****     * Calling this function also prevents from Reset when the counter mode is set 
1494:Generated_Source\PSoC4/CyLFClk.c ****     * to generate 3 interrupts and then the device resets.
1495:Generated_Source\PSoC4/CyLFClk.c ****     *
1496:Generated_Source\PSoC4/CyLFClk.c ****     * All the WDT interrupts are to be cleared by the firmware, otherwise
1497:Generated_Source\PSoC4/CyLFClk.c ****     * interrupts are generated continuously.
1498:Generated_Source\PSoC4/CyLFClk.c ****     *
1499:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
1500:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0_INT - Clears counter 0 interrupts <br>
1501:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_INT - Clears counter 1 interrupts <br>
1502:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_INT - Clears counter 2 interrupts
1503:Generated_Source\PSoC4/CyLFClk.c ****     *
1504:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1505:Generated_Source\PSoC4/CyLFClk.c ****     * This function temporary removes the watchdog lock, if it was set, and
1506:Generated_Source\PSoC4/CyLFClk.c ****     * restores the lock state after cleaning the WDT interrupts that are set in
1507:Generated_Source\PSoC4/CyLFClk.c ****     * a mask.
1508:Generated_Source\PSoC4/CyLFClk.c ****     *
1509:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1510:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtClearInterrupt(uint32 counterMask)
1511:Generated_Source\PSoC4/CyLFClk.c ****     {
1512:Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
1513:Generated_Source\PSoC4/CyLFClk.c ****         uint32 wdtLockState;
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 61


1514:Generated_Source\PSoC4/CyLFClk.c **** 
1515:Generated_Source\PSoC4/CyLFClk.c ****         interruptState = CyEnterCriticalSection();
1516:Generated_Source\PSoC4/CyLFClk.c **** 
1517:Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysWdtLocked())
1518:Generated_Source\PSoC4/CyLFClk.c ****         {
1519:Generated_Source\PSoC4/CyLFClk.c ****             wdtLockState = 1u;
1520:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtUnlock();
1521:Generated_Source\PSoC4/CyLFClk.c ****         }
1522:Generated_Source\PSoC4/CyLFClk.c ****         else
1523:Generated_Source\PSoC4/CyLFClk.c ****         {
1524:Generated_Source\PSoC4/CyLFClk.c ****             wdtLockState = 0u;
1525:Generated_Source\PSoC4/CyLFClk.c ****         }
1526:Generated_Source\PSoC4/CyLFClk.c **** 
1527:Generated_Source\PSoC4/CyLFClk.c ****         /* Set new WDT control register value */
1528:Generated_Source\PSoC4/CyLFClk.c ****         counterMask &= (CY_SYS_WDT_COUNTER0_INT |
1529:Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_WDT_COUNTER1_INT |
1530:Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_WDT_COUNTER2_INT);
1531:Generated_Source\PSoC4/CyLFClk.c **** 
1532:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_CONTROL_REG = counterMask | (CY_SYS_WDT_CONTROL_REG & ~(CY_SYS_WDT_COUNTER0_INT 
1533:Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_WDT_COUNTER1_INT 
1534:Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_WDT_COUNTER2_INT)
1535:Generated_Source\PSoC4/CyLFClk.c **** 
1536:Generated_Source\PSoC4/CyLFClk.c ****         /* Read the CY_SYS_WDT_CONTROL_REG to clear the interrupt request.
1537:Generated_Source\PSoC4/CyLFClk.c ****          * Cypress ID #207093, #206231
1538:Generated_Source\PSoC4/CyLFClk.c ****         */
1539:Generated_Source\PSoC4/CyLFClk.c ****         (void)CY_SYS_WDT_CONTROL_REG;
1540:Generated_Source\PSoC4/CyLFClk.c **** 
1541:Generated_Source\PSoC4/CyLFClk.c ****         if (1u == wdtLockState)
1542:Generated_Source\PSoC4/CyLFClk.c ****         {
1543:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtLock();
1544:Generated_Source\PSoC4/CyLFClk.c ****         }
1545:Generated_Source\PSoC4/CyLFClk.c **** 
1546:Generated_Source\PSoC4/CyLFClk.c ****         CyExitCriticalSection(interruptState);
1547:Generated_Source\PSoC4/CyLFClk.c ****     }
1548:Generated_Source\PSoC4/CyLFClk.c **** 
1549:Generated_Source\PSoC4/CyLFClk.c **** 
1550:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1551:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtResetCounters
1552:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1553:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1554:Generated_Source\PSoC4/CyLFClk.c ****     * Resets all the WDT counters set in the mask.
1555:Generated_Source\PSoC4/CyLFClk.c ****     *
1556:Generated_Source\PSoC4/CyLFClk.c ****     * \param countersMask
1557:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0_RESET - Reset counter 0 <br>
1558:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_RESET - Reset counter 1 <br>
1559:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_RESET - Reset counter 2
1560:Generated_Source\PSoC4/CyLFClk.c ****     *
1561:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1562:Generated_Source\PSoC4/CyLFClk.c ****     * This function does not reset counter values if the Watchdog is locked.
1563:Generated_Source\PSoC4/CyLFClk.c ****     * This function waits while corresponding counters will be reset. This may
1564:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 LFCLK cycles.
1565:Generated_Source\PSoC4/CyLFClk.c ****     * The LFCLK source must be enabled. Otherwise, the function will never exit.
1566:Generated_Source\PSoC4/CyLFClk.c ****     *
1567:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1568:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtResetCounters(uint32 countersMask)
1569:Generated_Source\PSoC4/CyLFClk.c ****     {
1570:Generated_Source\PSoC4/CyLFClk.c ****         /* Set new WDT reset value */
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 62


1571:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_CONTROL_REG |= (countersMask & CY_SYS_WDT_COUNTERS_RESET);
1572:Generated_Source\PSoC4/CyLFClk.c **** 
1573:Generated_Source\PSoC4/CyLFClk.c ****         while (0uL != (CY_SYS_WDT_CONTROL_REG & CY_SYS_WDT_COUNTERS_RESET))
1574:Generated_Source\PSoC4/CyLFClk.c ****         {
1575:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait for reset to come into effect */
1576:Generated_Source\PSoC4/CyLFClk.c ****         }
1577:Generated_Source\PSoC4/CyLFClk.c ****     }
1578:Generated_Source\PSoC4/CyLFClk.c **** 
1579:Generated_Source\PSoC4/CyLFClk.c **** 
1580:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1581:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetInterruptCallback
1582:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1583:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1584:Generated_Source\PSoC4/CyLFClk.c ****     * Sets the ISR callback function for the particular WDT counter.
1585:Generated_Source\PSoC4/CyLFClk.c ****     * These functions are called on the WDT interrupt.
1586:Generated_Source\PSoC4/CyLFClk.c ****     *
1587:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum The number of the WDT counter.
1588:Generated_Source\PSoC4/CyLFClk.c ****     * \param function The pointer to the callback function.
1589:Generated_Source\PSoC4/CyLFClk.c ****     *
1590:Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to the previous callback function.
1591:Generated_Source\PSoC4/CyLFClk.c ****     * \return NULL is returned if the specified address is not set.
1592:Generated_Source\PSoC4/CyLFClk.c ****     *
1593:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1594:Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtSetInterruptCallback(uint32 counterNum, cyWdtCallback function)
1595:Generated_Source\PSoC4/CyLFClk.c ****     {
1596:Generated_Source\PSoC4/CyLFClk.c ****         cyWdtCallback prevCallback = (void *)0;
1597:Generated_Source\PSoC4/CyLFClk.c **** 
1598:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum < CY_WDT_NUM_OF_WDT)
1599:Generated_Source\PSoC4/CyLFClk.c ****         {
1600:Generated_Source\PSoC4/CyLFClk.c ****             prevCallback = cySysWdtCallback[counterNum];
1601:Generated_Source\PSoC4/CyLFClk.c ****             cySysWdtCallback[counterNum] = function;
1602:Generated_Source\PSoC4/CyLFClk.c ****         }
1603:Generated_Source\PSoC4/CyLFClk.c ****         else
1604:Generated_Source\PSoC4/CyLFClk.c ****         {
1605:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
1606:Generated_Source\PSoC4/CyLFClk.c ****         }
1607:Generated_Source\PSoC4/CyLFClk.c **** 
1608:Generated_Source\PSoC4/CyLFClk.c ****         return((cyWdtCallback)prevCallback);
1609:Generated_Source\PSoC4/CyLFClk.c ****     }
1610:Generated_Source\PSoC4/CyLFClk.c **** 
1611:Generated_Source\PSoC4/CyLFClk.c **** 
1612:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1613:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetInterruptCallback
1614:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1615:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1616:Generated_Source\PSoC4/CyLFClk.c ****     * Gets the ISR callback function for the particular WDT counter.
1617:Generated_Source\PSoC4/CyLFClk.c ****     *
1618:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum The number of the WDT counter.
1619:Generated_Source\PSoC4/CyLFClk.c ****     *
1620:Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to the callback function registered for a particular WDT by
1621:Generated_Source\PSoC4/CyLFClk.c ****     * a particular address that are passed through arguments.
1622:Generated_Source\PSoC4/CyLFClk.c ****     *
1623:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1624:Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtGetInterruptCallback(uint32 counterNum)
1625:Generated_Source\PSoC4/CyLFClk.c ****     {
1626:Generated_Source\PSoC4/CyLFClk.c ****         cyWdtCallback retCallback = (void *)0;
1627:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 63


1628:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum < CY_WDT_NUM_OF_WDT)
1629:Generated_Source\PSoC4/CyLFClk.c ****         {
1630:Generated_Source\PSoC4/CyLFClk.c ****             retCallback = (cyWdtCallback)cySysWdtCallback[counterNum];
1631:Generated_Source\PSoC4/CyLFClk.c ****         }
1632:Generated_Source\PSoC4/CyLFClk.c ****         else
1633:Generated_Source\PSoC4/CyLFClk.c ****         {
1634:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
1635:Generated_Source\PSoC4/CyLFClk.c ****         }
1636:Generated_Source\PSoC4/CyLFClk.c **** 
1637:Generated_Source\PSoC4/CyLFClk.c ****         return(retCallback);
1638:Generated_Source\PSoC4/CyLFClk.c ****     }
1639:Generated_Source\PSoC4/CyLFClk.c **** 
1640:Generated_Source\PSoC4/CyLFClk.c **** 
1641:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1642:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtEnableCounterIsr
1643:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1644:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1645:Generated_Source\PSoC4/CyLFClk.c ****     * Enables the ISR callback servicing for the particular WDT counter
1646:Generated_Source\PSoC4/CyLFClk.c ****     *
1647:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the WDT counter.
1648:Generated_Source\PSoC4/CyLFClk.c ****     *
1649:Generated_Source\PSoC4/CyLFClk.c ****     * Value corresponds to appropriate WDT counter. For example value 1 
1650:Generated_Source\PSoC4/CyLFClk.c ****     * corresponds to second WDT counter.
1651:Generated_Source\PSoC4/CyLFClk.c ****     *
1652:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1653:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtEnableCounterIsr(uint32 counterNum)
1654:Generated_Source\PSoC4/CyLFClk.c ****     {
1655:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum <= CY_SYS_WDT_COUNTER2)
1656:Generated_Source\PSoC4/CyLFClk.c ****         {
1657:Generated_Source\PSoC4/CyLFClk.c ****             disableServicedIsr &= ~counterIntMaskTbl[counterNum];
1658:Generated_Source\PSoC4/CyLFClk.c ****             wdtIsrMask |= counterIntMaskTbl[counterNum];
1659:Generated_Source\PSoC4/CyLFClk.c ****         }
1660:Generated_Source\PSoC4/CyLFClk.c ****         else
1661:Generated_Source\PSoC4/CyLFClk.c ****         {
1662:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
1663:Generated_Source\PSoC4/CyLFClk.c ****         }
1664:Generated_Source\PSoC4/CyLFClk.c ****     }
1665:Generated_Source\PSoC4/CyLFClk.c **** 
1666:Generated_Source\PSoC4/CyLFClk.c **** 
1667:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1668:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtDisableCounterIsr
1669:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1670:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1671:Generated_Source\PSoC4/CyLFClk.c ****     * Disables the ISR callback servicing for the particular WDT counter
1672:Generated_Source\PSoC4/CyLFClk.c ****     *
1673:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the WDT counter.
1674:Generated_Source\PSoC4/CyLFClk.c ****     *
1675:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1676:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtDisableCounterIsr(uint32 counterNum)
1677:Generated_Source\PSoC4/CyLFClk.c ****     {
1678:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum <= CY_SYS_WDT_COUNTER2)
1679:Generated_Source\PSoC4/CyLFClk.c ****         {
1680:Generated_Source\PSoC4/CyLFClk.c ****             wdtIsrMask &= ~counterIntMaskTbl[counterNum];
1681:Generated_Source\PSoC4/CyLFClk.c ****         }
1682:Generated_Source\PSoC4/CyLFClk.c ****         else
1683:Generated_Source\PSoC4/CyLFClk.c ****         {
1684:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 64


1685:Generated_Source\PSoC4/CyLFClk.c ****         }
1686:Generated_Source\PSoC4/CyLFClk.c ****     }
1687:Generated_Source\PSoC4/CyLFClk.c **** 
1688:Generated_Source\PSoC4/CyLFClk.c **** 
1689:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1690:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtIsr
1691:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1692:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1693:Generated_Source\PSoC4/CyLFClk.c ****     * This is the handler of the WDT interrupt in CPU NVIC.
1694:Generated_Source\PSoC4/CyLFClk.c ****     *
1695:Generated_Source\PSoC4/CyLFClk.c ****     * The handler checks which WDT triggered in the interrupt and calls the 
1696:Generated_Source\PSoC4/CyLFClk.c ****     * respective callback functions configured by the user by using 
1697:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtSetIsrCallback() API.
1698:Generated_Source\PSoC4/CyLFClk.c ****     *
1699:Generated_Source\PSoC4/CyLFClk.c ****     * The order of the callback execution is incremental. Callback-0 is
1700:Generated_Source\PSoC4/CyLFClk.c ****     * run as the first one and callback-2 is called as the last one.
1701:Generated_Source\PSoC4/CyLFClk.c ****     *
1702:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1703:Generated_Source\PSoC4/CyLFClk.c ****     * This function clears the WDT interrupt every time when it is called.
1704:Generated_Source\PSoC4/CyLFClk.c ****     * Reset after the 3rd interrupt does not happen if this function is registered
1705:Generated_Source\PSoC4/CyLFClk.c ****     * as the interrupt handler even if the "Watchdog with Interrupt" mode is
1706:Generated_Source\PSoC4/CyLFClk.c ****     * selected on the "Low Frequency Clocks" tab.
1707:Generated_Source\PSoC4/CyLFClk.c ****     *
1708:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1709:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtIsr(void)
1710:Generated_Source\PSoC4/CyLFClk.c ****     {
1711:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_WDT_COUNTER0_INT & CY_SYS_WDT_CONTROL_REG))
1712:Generated_Source\PSoC4/CyLFClk.c ****         {
1713:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_WDT_COUNTER0_INT & wdtIsrMask))
1714:Generated_Source\PSoC4/CyLFClk.c ****             {
1715:Generated_Source\PSoC4/CyLFClk.c ****                 wdtIsrMask &= ~(disableServicedIsr & CY_SYS_WDT_COUNTER0_INT);
1716:Generated_Source\PSoC4/CyLFClk.c ****                 disableServicedIsr  &= ~CY_SYS_WDT_COUNTER0_INT;
1717:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysWdtCallback[CY_SYS_WDT_COUNTER0] != (void *) 0)
1718:Generated_Source\PSoC4/CyLFClk.c ****                 {
1719:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysWdtCallback[CY_SYS_WDT_COUNTER0])();
1720:Generated_Source\PSoC4/CyLFClk.c ****                 }
1721:Generated_Source\PSoC4/CyLFClk.c ****             }
1722:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER0_INT);
1723:Generated_Source\PSoC4/CyLFClk.c ****         }
1724:Generated_Source\PSoC4/CyLFClk.c **** 
1725:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_WDT_COUNTER1_INT & CY_SYS_WDT_CONTROL_REG))
1726:Generated_Source\PSoC4/CyLFClk.c ****         {
1727:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_WDT_COUNTER1_INT & wdtIsrMask))
1728:Generated_Source\PSoC4/CyLFClk.c ****             {
1729:Generated_Source\PSoC4/CyLFClk.c ****                 wdtIsrMask &= ~(disableServicedIsr & CY_SYS_WDT_COUNTER1_INT);
1730:Generated_Source\PSoC4/CyLFClk.c ****                 disableServicedIsr  &= ~CY_SYS_WDT_COUNTER1_INT;
1731:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysWdtCallback[CY_SYS_WDT_COUNTER1] != (void *) 0)
1732:Generated_Source\PSoC4/CyLFClk.c ****                 {
1733:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysWdtCallback[CY_SYS_WDT_COUNTER1])();
1734:Generated_Source\PSoC4/CyLFClk.c ****                 }
1735:Generated_Source\PSoC4/CyLFClk.c ****             }
1736:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER1_INT);
1737:Generated_Source\PSoC4/CyLFClk.c ****         }
1738:Generated_Source\PSoC4/CyLFClk.c **** 
1739:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_WDT_COUNTER2_INT & CY_SYS_WDT_CONTROL_REG))
1740:Generated_Source\PSoC4/CyLFClk.c ****         {
1741:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_WDT_COUNTER2_INT & wdtIsrMask))
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 65


1742:Generated_Source\PSoC4/CyLFClk.c ****             {
1743:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysWdtCallback[CY_SYS_WDT_COUNTER2] != (void *) 0)
1744:Generated_Source\PSoC4/CyLFClk.c ****                 {
1745:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysWdtCallback[CY_SYS_WDT_COUNTER2])();
1746:Generated_Source\PSoC4/CyLFClk.c ****                 }
1747:Generated_Source\PSoC4/CyLFClk.c ****             }
1748:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER2_INT);
1749:Generated_Source\PSoC4/CyLFClk.c ****         }
1750:Generated_Source\PSoC4/CyLFClk.c ****     }
1751:Generated_Source\PSoC4/CyLFClk.c **** 
1752:Generated_Source\PSoC4/CyLFClk.c **** 
1753:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1754:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWatchdogFeed
1755:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1756:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1757:Generated_Source\PSoC4/CyLFClk.c ****     * Feeds the corresponded Watchdog Counter before it causes the device reset.
1758:Generated_Source\PSoC4/CyLFClk.c ****     *
1759:Generated_Source\PSoC4/CyLFClk.c ****     * Supported only for first WDT0 and second WDT1 counters in the "Watchdog" or 
1760:Generated_Source\PSoC4/CyLFClk.c ****     * "Watchdog w/ Interrupts" modes.
1761:Generated_Source\PSoC4/CyLFClk.c ****     *
1762:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum
1763:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0 - Feeds the Counter 0 <br>
1764:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1 - Feeds the Counter 1
1765:Generated_Source\PSoC4/CyLFClk.c ****     *
1766:Generated_Source\PSoC4/CyLFClk.c ****     * Value of counterNum corresponds to appropriate counter. For example value 1 
1767:Generated_Source\PSoC4/CyLFClk.c ****     * corresponds to second WDT1 Counter.
1768:Generated_Source\PSoC4/CyLFClk.c ****     *
1769:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1770:Generated_Source\PSoC4/CyLFClk.c ****     * Clears the WDT counter in the "Watchdog" mode or clears the WDT interrupt in
1771:Generated_Source\PSoC4/CyLFClk.c ****     * "Watchdog w/ Interrupts" mode. Does nothing in other modes.
1772:Generated_Source\PSoC4/CyLFClk.c ****     *
1773:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1774:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWatchdogFeed(uint32 counterNum)
1775:Generated_Source\PSoC4/CyLFClk.c ****     {
1776:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum == CY_SYS_WDT_COUNTER0)
1777:Generated_Source\PSoC4/CyLFClk.c ****         {
1778:Generated_Source\PSoC4/CyLFClk.c ****             if(CY_SYS_WDT_MODE_INT_RESET == CySysWdtGetMode(counterNum))
1779:Generated_Source\PSoC4/CyLFClk.c ****             {
1780:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER0_INT);
1781:Generated_Source\PSoC4/CyLFClk.c ****             }
1782:Generated_Source\PSoC4/CyLFClk.c ****             else if(CY_SYS_WDT_MODE_RESET == CySysWdtGetMode(counterNum))
1783:Generated_Source\PSoC4/CyLFClk.c ****             {
1784:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtResetCounters(CY_SYS_WDT_COUNTER0_RESET);
1785:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER0_INT);
1786:Generated_Source\PSoC4/CyLFClk.c ****             }
1787:Generated_Source\PSoC4/CyLFClk.c ****             else
1788:Generated_Source\PSoC4/CyLFClk.c ****             {
1789:Generated_Source\PSoC4/CyLFClk.c ****                 /* Do nothing. */
1790:Generated_Source\PSoC4/CyLFClk.c ****             }
1791:Generated_Source\PSoC4/CyLFClk.c ****         }
1792:Generated_Source\PSoC4/CyLFClk.c ****         else if(counterNum == CY_SYS_WDT_COUNTER1)
1793:Generated_Source\PSoC4/CyLFClk.c ****         {
1794:Generated_Source\PSoC4/CyLFClk.c ****             if(CY_SYS_WDT_MODE_INT_RESET == CySysWdtGetMode(counterNum))
1795:Generated_Source\PSoC4/CyLFClk.c ****             {
1796:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER1_INT);
1797:Generated_Source\PSoC4/CyLFClk.c ****             }
1798:Generated_Source\PSoC4/CyLFClk.c ****             else if(CY_SYS_WDT_MODE_RESET == CySysWdtGetMode(counterNum))
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 66


1799:Generated_Source\PSoC4/CyLFClk.c ****             {
1800:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtResetCounters(CY_SYS_WDT_COUNTER1_RESET);
1801:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER1_INT);
1802:Generated_Source\PSoC4/CyLFClk.c ****             }
1803:Generated_Source\PSoC4/CyLFClk.c ****             else
1804:Generated_Source\PSoC4/CyLFClk.c ****             {
1805:Generated_Source\PSoC4/CyLFClk.c ****                 /* Do nothing. */
1806:Generated_Source\PSoC4/CyLFClk.c ****             }
1807:Generated_Source\PSoC4/CyLFClk.c ****         }
1808:Generated_Source\PSoC4/CyLFClk.c ****         else
1809:Generated_Source\PSoC4/CyLFClk.c ****         {
1810:Generated_Source\PSoC4/CyLFClk.c ****             /* Do nothing. */
1811:Generated_Source\PSoC4/CyLFClk.c ****         }
1812:Generated_Source\PSoC4/CyLFClk.c ****     }
1813:Generated_Source\PSoC4/CyLFClk.c **** 
1814:Generated_Source\PSoC4/CyLFClk.c **** 
1815:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1816:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkLfclkPosedgeCatch
1817:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1818:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
1819:Generated_Source\PSoC4/CyLFClk.c ****     * Returns once the LFCLK positive edge occurred.
1820:Generated_Source\PSoC4/CyLFClk.c ****     *
1821:Generated_Source\PSoC4/CyLFClk.c ****     * CySysClkLfclkPosedgeRestore() should be called after this function
1822:Generated_Source\PSoC4/CyLFClk.c ****     * to restore the WDT configuration.
1823:Generated_Source\PSoC4/CyLFClk.c ****     *
1824:Generated_Source\PSoC4/CyLFClk.c ****     * A pair of the CySysClkLfclkPosedgeCatch() and CySysClkLfclkPosedgeRestore()
1825:Generated_Source\PSoC4/CyLFClk.c ****     * functions is expected to be called inside a critical section.
1826:Generated_Source\PSoC4/CyLFClk.c ****     *
1827:Generated_Source\PSoC4/CyLFClk.c ****     * To ensure that the WDT counter value is read until it changes, the enabled
1828:Generated_Source\PSoC4/CyLFClk.c ****     * WDT counter is used. If no counter is enabled, counter 0 is enabled.
1829:Generated_Source\PSoC4/CyLFClk.c ****     * And after the LFCLK source is switched, the counter 0 configuration
1830:Generated_Source\PSoC4/CyLFClk.c ****     * is restored.
1831:Generated_Source\PSoC4/CyLFClk.c ****     *
1832:Generated_Source\PSoC4/CyLFClk.c ****     * Not applicable for the PSoC 4000 / PSoC 4000S / PSoC 4100S / PSoC Analog 
1833:Generated_Source\PSoC4/CyLFClk.c ****     * Coprocessor devices.
1834:Generated_Source\PSoC4/CyLFClk.c ****     *
1835:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1836:Generated_Source\PSoC4/CyLFClk.c ****     * This function has no effect if WDT is locked (CySysWdtLock() is
1837:Generated_Source\PSoC4/CyLFClk.c ****     * called). Call CySysWdtUnlock() to unlock WDT.
1838:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
1839:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1840:Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeCatch(void)
1841:Generated_Source\PSoC4/CyLFClk.c ****     {
1842:Generated_Source\PSoC4/CyLFClk.c ****         uint32 firstCount;
1843:Generated_Source\PSoC4/CyLFClk.c ****         static uint32 lfclkPosedgeEnabledWdtCounter = 0u;
1844:Generated_Source\PSoC4/CyLFClk.c **** 
1845:Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0))
1846:Generated_Source\PSoC4/CyLFClk.c ****         {
1847:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER0;
1848:Generated_Source\PSoC4/CyLFClk.c ****         }
1849:Generated_Source\PSoC4/CyLFClk.c ****         else if (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1))
1850:Generated_Source\PSoC4/CyLFClk.c ****         {
1851:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER1;
1852:Generated_Source\PSoC4/CyLFClk.c ****         }
1853:Generated_Source\PSoC4/CyLFClk.c ****         else if (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
1854:Generated_Source\PSoC4/CyLFClk.c ****         {
1855:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER2;
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 67


1856:Generated_Source\PSoC4/CyLFClk.c ****         }
1857:Generated_Source\PSoC4/CyLFClk.c ****         else /* All WDT counters are disabled */
1858:Generated_Source\PSoC4/CyLFClk.c ****         {
1859:Generated_Source\PSoC4/CyLFClk.c ****             /* Configure WDT counter # 0 */
1860:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeWdtCounter0Enabled = 1u;
1861:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER0;
1862:Generated_Source\PSoC4/CyLFClk.c **** 
1863:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeWdtCounter0Mode = CySysWdtGetMode(CY_SYS_WDT_COUNTER0);
1864:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtSetMode(CY_SYS_WDT_COUNTER0, CY_SYS_WDT_MODE_NONE);
1865:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtEnable(CY_SYS_WDT_COUNTER0_MASK);
1866:Generated_Source\PSoC4/CyLFClk.c ****         }
1867:Generated_Source\PSoC4/CyLFClk.c **** 
1868:Generated_Source\PSoC4/CyLFClk.c ****         firstCount = CySysWdtGetCount(lfclkPosedgeEnabledWdtCounter);
1869:Generated_Source\PSoC4/CyLFClk.c ****         while (CySysWdtGetCount(lfclkPosedgeEnabledWdtCounter) == firstCount)
1870:Generated_Source\PSoC4/CyLFClk.c ****         {
1871:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait for counter to increment */
1872:Generated_Source\PSoC4/CyLFClk.c ****         }
1873:Generated_Source\PSoC4/CyLFClk.c ****     }
1874:Generated_Source\PSoC4/CyLFClk.c **** 
1875:Generated_Source\PSoC4/CyLFClk.c **** 
1876:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1877:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkLfclkPosedgeRestore
1878:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1879:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
1880:Generated_Source\PSoC4/CyLFClk.c ****     *  Restores the WDT configuration after a CySysClkLfclkPosedgeCatch() call.
1881:Generated_Source\PSoC4/CyLFClk.c ****     *
1882:Generated_Source\PSoC4/CyLFClk.c ****     *  A pair of the CySysClkLfclkPosedgeCatch() and CySysClkLfclkPosedgeRestore()
1883:Generated_Source\PSoC4/CyLFClk.c ****     *  functions is expected to be called inside a critical section.
1884:Generated_Source\PSoC4/CyLFClk.c ****     *
1885:Generated_Source\PSoC4/CyLFClk.c ****     * Not applicable for the PSoC 4000/PSoC 4000S / PSoC 4100S / PSoC Analog 
1886:Generated_Source\PSoC4/CyLFClk.c ****     * Coprocessor devices.
1887:Generated_Source\PSoC4/CyLFClk.c ****     *
1888:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1889:Generated_Source\PSoC4/CyLFClk.c ****     *  This function has no effect if WDT is locked (CySysWdtLock() is
1890:Generated_Source\PSoC4/CyLFClk.c ****     *  called). Call CySysWdtUnlock() to unlock WDT.
1891:Generated_Source\PSoC4/CyLFClk.c ****     *
1892:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
1893:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1894:Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeRestore(void)
1895:Generated_Source\PSoC4/CyLFClk.c ****     {
 1127              		.loc 2 1895 0
 1128              		.cfi_startproc
 1129              		@ args = 0, pretend = 0, frame = 0
 1130              		@ frame_needed = 0, uses_anonymous_args = 0
 1131 0000 10B5     		push	{r4, lr}
 1132              		.cfi_def_cfa_offset 8
 1133              		.cfi_offset 4, -8
 1134              		.cfi_offset 14, -4
1896:Generated_Source\PSoC4/CyLFClk.c ****         if (lfclkPosedgeWdtCounter0Enabled != 0u)
 1135              		.loc 2 1896 0
 1136 0002 084C     		ldr	r4, .L111
 1137 0004 E368     		ldr	r3, [r4, #12]
 1138 0006 002B     		cmp	r3, #0
 1139 0008 0AD0     		beq	.L106
 1140              	.LBB52:
 1141              	.LBB53:
1897:Generated_Source\PSoC4/CyLFClk.c ****         {
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 68


1898:Generated_Source\PSoC4/CyLFClk.c ****             /* Restore counter # 0 configuration and force its shutdown */
1899:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONTROL_REG &= (uint32)(~CY_SYS_WDT_COUNTER0_MASK);
 1142              		.loc 2 1899 0
 1143 000a 0121     		movs	r1, #1
 1144 000c 064A     		ldr	r2, .L111+4
1900:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtSetMode(CY_SYS_WDT_COUNTER0, lfclkPosedgeWdtCounter0Mode);
 1145              		.loc 2 1900 0
 1146 000e 0020     		movs	r0, #0
1899:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtSetMode(CY_SYS_WDT_COUNTER0, lfclkPosedgeWdtCounter0Mode);
 1147              		.loc 2 1899 0
 1148 0010 1368     		ldr	r3, [r2]
 1149 0012 8B43     		bics	r3, r1
 1150 0014 1360     		str	r3, [r2]
 1151              		.loc 2 1900 0
 1152 0016 2169     		ldr	r1, [r4, #16]
 1153 0018 FFF7FEFF 		bl	CySysWdtSetMode
 1154              	.LVL89:
1901:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeWdtCounter0Enabled = 0u;
 1155              		.loc 2 1901 0
 1156 001c 0023     		movs	r3, #0
 1157 001e E360     		str	r3, [r4, #12]
 1158              	.L106:
 1159              	.LBE53:
 1160              	.LBE52:
1902:Generated_Source\PSoC4/CyLFClk.c ****         }
1903:Generated_Source\PSoC4/CyLFClk.c ****     }
 1161              		.loc 2 1903 0
 1162              		@ sp needed
 1163 0020 10BD     		pop	{r4, pc}
 1164              	.L112:
 1165 0022 C046     		.align	2
 1166              	.L111:
 1167 0024 00000000 		.word	.LANCHOR0
 1168 0028 10020B40 		.word	1074463248
 1169              		.cfi_endproc
 1170              	.LFE44:
 1171              		.size	CySysClkLfclkPosedgeRestore, .-CySysClkLfclkPosedgeRestore
 1172              		.section	.text.CySysWdtGetMode,"ax",%progbits
 1173              		.align	1
 1174              		.global	CySysWdtGetMode
 1175              		.code	16
 1176              		.thumb_func
 1177              		.type	CySysWdtGetMode, %function
 1178              	CySysWdtGetMode:
 1179              	.LFB22:
1076:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_CONFIG_REG >> (counterNum * CY_SYS_WDT_CNT_SHIFT)) & CY_SYS_WDT_MODE_MA
 1180              		.loc 2 1076 0
 1181              		.cfi_startproc
 1182              		@ args = 0, pretend = 0, frame = 0
 1183              		@ frame_needed = 0, uses_anonymous_args = 0
 1184              		@ link register save eliminated.
 1185              	.LVL90:
1076:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_CONFIG_REG >> (counterNum * CY_SYS_WDT_CNT_SHIFT)) & CY_SYS_WDT_MODE_MA
 1186              		.loc 2 1076 0
 1187 0000 0300     		movs	r3, r0
1077:Generated_Source\PSoC4/CyLFClk.c ****     }
 1188              		.loc 2 1077 0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 69


 1189 0002 034A     		ldr	r2, .L114
 1190 0004 DB00     		lsls	r3, r3, #3
 1191 0006 1068     		ldr	r0, [r2]
 1192              	.LVL91:
1078:Generated_Source\PSoC4/CyLFClk.c **** 
 1193              		.loc 2 1078 0
 1194              		@ sp needed
1077:Generated_Source\PSoC4/CyLFClk.c ****     }
 1195              		.loc 2 1077 0
 1196 0008 D840     		lsrs	r0, r0, r3
 1197 000a 0323     		movs	r3, #3
 1198 000c 1840     		ands	r0, r3
1078:Generated_Source\PSoC4/CyLFClk.c **** 
 1199              		.loc 2 1078 0
 1200 000e 7047     		bx	lr
 1201              	.L115:
 1202              		.align	2
 1203              	.L114:
 1204 0010 0C020B40 		.word	1074463244
 1205              		.cfi_endproc
 1206              	.LFE22:
 1207              		.size	CySysWdtGetMode, .-CySysWdtGetMode
 1208              		.section	.text.CySysWdtSetClearOnMatch,"ax",%progbits
 1209              		.align	1
 1210              		.global	CySysWdtSetClearOnMatch
 1211              		.code	16
 1212              		.thumb_func
 1213              		.type	CySysWdtSetClearOnMatch, %function
 1214              	CySysWdtSetClearOnMatch:
 1215              	.LFB23:
1105:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
 1216              		.loc 2 1105 0
 1217              		.cfi_startproc
 1218              		@ args = 0, pretend = 0, frame = 0
 1219              		@ frame_needed = 0, uses_anonymous_args = 0
 1220              	.LVL92:
 1221 0000 70B5     		push	{r4, r5, r6, lr}
 1222              		.cfi_def_cfa_offset 16
 1223              		.cfi_offset 4, -16
 1224              		.cfi_offset 5, -12
 1225              		.cfi_offset 6, -8
 1226              		.cfi_offset 14, -4
1105:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
 1227              		.loc 2 1105 0
 1228 0002 0400     		movs	r4, r0
 1229 0004 0D00     		movs	r5, r1
1111:Generated_Source\PSoC4/CyLFClk.c ****         {
 1230              		.loc 2 1111 0
 1231 0006 FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 1232              	.LVL93:
 1233 000a 0028     		cmp	r0, #0
 1234 000c 0BD1     		bne	.L116
1113:Generated_Source\PSoC4/CyLFClk.c ****                                      ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_CL
 1235              		.loc 2 1113 0
 1236 000e 0123     		movs	r3, #1
1114:Generated_Source\PSoC4/CyLFClk.c **** 
 1237              		.loc 2 1114 0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 70


 1238 0010 E400     		lsls	r4, r4, #3
 1239              	.LVL94:
 1240 0012 0234     		adds	r4, r4, #2
1113:Generated_Source\PSoC4/CyLFClk.c ****                                      ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_CL
 1241              		.loc 2 1113 0
 1242 0014 A340     		lsls	r3, r3, r4
 1243 0016 044A     		ldr	r2, .L118
 1244 0018 1168     		ldr	r1, [r2]
 1245 001a 9943     		bics	r1, r3
 1246 001c 0B00     		movs	r3, r1
 1247              	.LVL95:
1117:Generated_Source\PSoC4/CyLFClk.c **** 
 1248              		.loc 2 1117 0
 1249 001e 2900     		movs	r1, r5
 1250              	.LVL96:
 1251 0020 A140     		lsls	r1, r1, r4
 1252 0022 1943     		orrs	r1, r3
 1253              	.LVL97:
1119:Generated_Source\PSoC4/CyLFClk.c ****         }
 1254              		.loc 2 1119 0
 1255 0024 1160     		str	r1, [r2]
 1256              	.LVL98:
 1257              	.L116:
1121:Generated_Source\PSoC4/CyLFClk.c **** 
 1258              		.loc 2 1121 0
 1259              		@ sp needed
 1260              	.LVL99:
 1261 0026 70BD     		pop	{r4, r5, r6, pc}
 1262              	.L119:
 1263              		.align	2
 1264              	.L118:
 1265 0028 0C020B40 		.word	1074463244
 1266              		.cfi_endproc
 1267              	.LFE23:
 1268              		.size	CySysWdtSetClearOnMatch, .-CySysWdtSetClearOnMatch
 1269              		.section	.text.CySysWdtGetClearOnMatch,"ax",%progbits
 1270              		.align	1
 1271              		.global	CySysWdtGetClearOnMatch
 1272              		.code	16
 1273              		.thumb_func
 1274              		.type	CySysWdtGetClearOnMatch, %function
 1275              	CySysWdtGetClearOnMatch:
 1276              	.LFB24:
1138:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
 1277              		.loc 2 1138 0
 1278              		.cfi_startproc
 1279              		@ args = 0, pretend = 0, frame = 0
 1280              		@ frame_needed = 0, uses_anonymous_args = 0
 1281              		@ link register save eliminated.
 1282              	.LVL100:
1138:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
 1283              		.loc 2 1138 0
 1284 0000 0300     		movs	r3, r0
1142:Generated_Source\PSoC4/CyLFClk.c ****                         ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_CLR_SHIFT)) & 0
 1285              		.loc 2 1142 0
 1286 0002 044A     		ldr	r2, .L121
 1287 0004 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 71


 1288 0006 1068     		ldr	r0, [r2]
 1289              	.LVL101:
 1290 0008 0233     		adds	r3, r3, #2
 1291 000a D840     		lsrs	r0, r0, r3
 1292 000c 0123     		movs	r3, #1
1144:Generated_Source\PSoC4/CyLFClk.c **** 
 1293              		.loc 2 1144 0
 1294              		@ sp needed
1142:Generated_Source\PSoC4/CyLFClk.c ****                         ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_CLR_SHIFT)) & 0
 1295              		.loc 2 1142 0
 1296 000e 1840     		ands	r0, r3
1144:Generated_Source\PSoC4/CyLFClk.c **** 
 1297              		.loc 2 1144 0
 1298 0010 7047     		bx	lr
 1299              	.L122:
 1300 0012 C046     		.align	2
 1301              	.L121:
 1302 0014 0C020B40 		.word	1074463244
 1303              		.cfi_endproc
 1304              	.LFE24:
 1305              		.size	CySysWdtGetClearOnMatch, .-CySysWdtGetClearOnMatch
 1306              		.section	.text.CySysWdtEnable,"ax",%progbits
 1307              		.align	1
 1308              		.global	CySysWdtEnable
 1309              		.code	16
 1310              		.thumb_func
 1311              		.type	CySysWdtEnable, %function
 1312              	CySysWdtEnable:
 1313              	.LFB25:
1179:Generated_Source\PSoC4/CyLFClk.c ****         #if (!CY_IP_WCO)
 1314              		.loc 2 1179 0
 1315              		.cfi_startproc
 1316              		@ args = 0, pretend = 0, frame = 0
 1317              		@ frame_needed = 0, uses_anonymous_args = 0
 1318              		@ link register save eliminated.
 1319              	.LVL102:
1184:Generated_Source\PSoC4/CyLFClk.c **** 
 1320              		.loc 2 1184 0
 1321 0000 0C4B     		ldr	r3, .L148
 1322 0002 1A68     		ldr	r2, [r3]
 1323 0004 0243     		orrs	r2, r0
 1324 0006 1A60     		str	r2, [r3]
1186:Generated_Source\PSoC4/CyLFClk.c ****         {
 1325              		.loc 2 1186 0
 1326 0008 C207     		lsls	r2, r0, #31
 1327 000a 03D5     		bpl	.L124
1188:Generated_Source\PSoC4/CyLFClk.c ****             {
 1328              		.loc 2 1188 0 discriminator 1
 1329 000c 0222     		movs	r2, #2
 1330              	.L139:
 1331              	.LVL103:
 1332              	.LBB66:
 1333              	.LBB67:
1020:Generated_Source\PSoC4/CyLFClk.c ****     }
 1334              		.loc 2 1020 0 discriminator 1
 1335 000e 1968     		ldr	r1, [r3]
 1336              	.LVL104:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 72


 1337              	.LBE67:
 1338              	.LBE66:
1188:Generated_Source\PSoC4/CyLFClk.c ****             {
 1339              		.loc 2 1188 0 discriminator 1
 1340 0010 1142     		tst	r1, r2
 1341 0012 FCD0     		beq	.L139
 1342              	.L124:
1194:Generated_Source\PSoC4/CyLFClk.c ****         {
 1343              		.loc 2 1194 0
 1344 0014 C205     		lsls	r2, r0, #23
 1345 0016 04D5     		bpl	.L126
1196:Generated_Source\PSoC4/CyLFClk.c ****             {
 1346              		.loc 2 1196 0 discriminator 1
 1347 0018 8022     		movs	r2, #128
 1348 001a 9200     		lsls	r2, r2, #2
 1349              	.L140:
 1350              	.LVL105:
 1351              	.LBB68:
 1352              	.LBB69:
1020:Generated_Source\PSoC4/CyLFClk.c ****     }
 1353              		.loc 2 1020 0 discriminator 1
 1354 001c 1968     		ldr	r1, [r3]
 1355              	.LVL106:
 1356              	.LBE69:
 1357              	.LBE68:
1196:Generated_Source\PSoC4/CyLFClk.c ****             {
 1358              		.loc 2 1196 0 discriminator 1
 1359 001e 1142     		tst	r1, r2
 1360 0020 FCD0     		beq	.L140
 1361              	.L126:
1202:Generated_Source\PSoC4/CyLFClk.c ****         {
 1362              		.loc 2 1202 0
 1363 0022 C203     		lsls	r2, r0, #15
 1364 0024 04D5     		bpl	.L123
 1365              	.LBB70:
 1366              	.LBB71:
1204:Generated_Source\PSoC4/CyLFClk.c ****             {
 1367              		.loc 2 1204 0
 1368 0026 8022     		movs	r2, #128
 1369 0028 9202     		lsls	r2, r2, #10
 1370              	.L141:
 1371              	.LVL107:
 1372              	.LBB72:
 1373              	.LBB73:
1020:Generated_Source\PSoC4/CyLFClk.c ****     }
 1374              		.loc 2 1020 0
 1375 002a 1968     		ldr	r1, [r3]
 1376              	.LVL108:
 1377              	.LBE73:
 1378              	.LBE72:
1204:Generated_Source\PSoC4/CyLFClk.c ****             {
 1379              		.loc 2 1204 0
 1380 002c 1142     		tst	r1, r2
 1381 002e FCD0     		beq	.L141
 1382              	.L123:
 1383              	.LBE71:
 1384              	.LBE70:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 73


1209:Generated_Source\PSoC4/CyLFClk.c **** 
 1385              		.loc 2 1209 0
 1386              		@ sp needed
 1387 0030 7047     		bx	lr
 1388              	.L149:
 1389 0032 C046     		.align	2
 1390              	.L148:
 1391 0034 10020B40 		.word	1074463248
 1392              		.cfi_endproc
 1393              	.LFE25:
 1394              		.size	CySysWdtEnable, .-CySysWdtEnable
 1395              		.section	.text.CySysWdtDisable,"ax",%progbits
 1396              		.align	1
 1397              		.global	CySysWdtDisable
 1398              		.code	16
 1399              		.thumb_func
 1400              		.type	CySysWdtDisable, %function
 1401              	CySysWdtDisable:
 1402              	.LFB26:
1227:Generated_Source\PSoC4/CyLFClk.c ****         if (0uL == CySysWdtLocked())
 1403              		.loc 2 1227 0
 1404              		.cfi_startproc
 1405              		@ args = 0, pretend = 0, frame = 0
 1406              		@ frame_needed = 0, uses_anonymous_args = 0
 1407              		@ link register save eliminated.
 1408              	.LVL109:
 1409              	.LBB82:
 1410              	.LBB83:
 972:Generated_Source\PSoC4/CyLFClk.c ****     }
 1411              		.loc 2 972 0
 1412 0000 0F4B     		ldr	r3, .L170
 1413 0002 1A68     		ldr	r2, [r3]
 1414 0004 C023     		movs	r3, #192
 1415 0006 1B02     		lsls	r3, r3, #8
 1416 0008 1A42     		tst	r2, r3
 1417 000a 17D1     		bne	.L150
 1418              	.LBE83:
 1419              	.LBE82:
1230:Generated_Source\PSoC4/CyLFClk.c **** 
 1420              		.loc 2 1230 0
 1421 000c 0D4B     		ldr	r3, .L170+4
 1422 000e 1A68     		ldr	r2, [r3]
 1423 0010 8243     		bics	r2, r0
 1424 0012 1A60     		str	r2, [r3]
1232:Generated_Source\PSoC4/CyLFClk.c ****             {
 1425              		.loc 2 1232 0
 1426 0014 C207     		lsls	r2, r0, #31
 1427 0016 03D5     		bpl	.L157
1234:Generated_Source\PSoC4/CyLFClk.c ****                 {
 1428              		.loc 2 1234 0 discriminator 1
 1429 0018 0222     		movs	r2, #2
 1430              	.L164:
 1431              	.LVL110:
 1432              	.LBB84:
 1433              	.LBB85:
1020:Generated_Source\PSoC4/CyLFClk.c ****     }
 1434              		.loc 2 1020 0 discriminator 1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 74


 1435 001a 1968     		ldr	r1, [r3]
 1436              	.LVL111:
 1437              	.LBE85:
 1438              	.LBE84:
1234:Generated_Source\PSoC4/CyLFClk.c ****                 {
 1439              		.loc 2 1234 0 discriminator 1
 1440 001c 1142     		tst	r1, r2
 1441 001e FCD1     		bne	.L164
 1442              	.L157:
1240:Generated_Source\PSoC4/CyLFClk.c ****             {
 1443              		.loc 2 1240 0
 1444 0020 C205     		lsls	r2, r0, #23
 1445 0022 04D5     		bpl	.L153
1242:Generated_Source\PSoC4/CyLFClk.c ****                 {
 1446              		.loc 2 1242 0 discriminator 1
 1447 0024 8022     		movs	r2, #128
 1448 0026 9200     		lsls	r2, r2, #2
 1449              	.L163:
 1450              	.LVL112:
 1451              	.LBB86:
 1452              	.LBB87:
1020:Generated_Source\PSoC4/CyLFClk.c ****     }
 1453              		.loc 2 1020 0 discriminator 1
 1454 0028 1968     		ldr	r1, [r3]
 1455              	.LVL113:
 1456              	.LBE87:
 1457              	.LBE86:
1242:Generated_Source\PSoC4/CyLFClk.c ****                 {
 1458              		.loc 2 1242 0 discriminator 1
 1459 002a 1142     		tst	r1, r2
 1460 002c FCD1     		bne	.L163
 1461              	.L153:
1248:Generated_Source\PSoC4/CyLFClk.c ****             {
 1462              		.loc 2 1248 0
 1463 002e C203     		lsls	r2, r0, #15
 1464 0030 04D5     		bpl	.L150
1250:Generated_Source\PSoC4/CyLFClk.c ****                 {
 1465              		.loc 2 1250 0 discriminator 1
 1466 0032 8022     		movs	r2, #128
 1467 0034 9202     		lsls	r2, r2, #10
 1468              	.L162:
 1469              	.LVL114:
 1470              	.LBB88:
 1471              	.LBB89:
1020:Generated_Source\PSoC4/CyLFClk.c ****     }
 1472              		.loc 2 1020 0 discriminator 1
 1473 0036 1968     		ldr	r1, [r3]
 1474              	.LVL115:
 1475              	.LBE89:
 1476              	.LBE88:
1250:Generated_Source\PSoC4/CyLFClk.c ****                 {
 1477              		.loc 2 1250 0 discriminator 1
 1478 0038 1142     		tst	r1, r2
 1479 003a FCD1     		bne	.L162
 1480              	.L150:
1256:Generated_Source\PSoC4/CyLFClk.c **** 
 1481              		.loc 2 1256 0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 75


 1482              		@ sp needed
 1483 003c 7047     		bx	lr
 1484              	.L171:
 1485 003e C046     		.align	2
 1486              	.L170:
 1487 0040 00010B40 		.word	1074462976
 1488 0044 10020B40 		.word	1074463248
 1489              		.cfi_endproc
 1490              	.LFE26:
 1491              		.size	CySysWdtDisable, .-CySysWdtDisable
 1492              		.section	.text.CySysWdtSetCascade,"ax",%progbits
 1493              		.align	1
 1494              		.global	CySysWdtSetCascade
 1495              		.code	16
 1496              		.thumb_func
 1497              		.type	CySysWdtSetCascade, %function
 1498              	CySysWdtSetCascade:
 1499              	.LFB27:
1286:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
 1500              		.loc 2 1286 0
 1501              		.cfi_startproc
 1502              		@ args = 0, pretend = 0, frame = 0
 1503              		@ frame_needed = 0, uses_anonymous_args = 0
 1504              	.LVL116:
 1505              	.LBB90:
 1506              	.LBB91:
1020:Generated_Source\PSoC4/CyLFClk.c ****     }
 1507              		.loc 2 1020 0
 1508 0000 094A     		ldr	r2, .L174
 1509              	.LBE91:
 1510              	.LBE90:
1286:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
 1511              		.loc 2 1286 0
 1512 0002 10B5     		push	{r4, lr}
 1513              		.cfi_def_cfa_offset 8
 1514              		.cfi_offset 4, -8
 1515              		.cfi_offset 14, -4
 1516              	.LBB93:
 1517              	.LBB92:
1020:Generated_Source\PSoC4/CyLFClk.c ****     }
 1518              		.loc 2 1020 0
 1519 0004 1168     		ldr	r1, [r2]
 1520              	.LVL117:
 1521              	.LBE92:
 1522              	.LBE93:
 1523              	.LBB94:
 1524              	.LBB95:
 1525 0006 1368     		ldr	r3, [r2]
 1526              	.LVL118:
 1527              	.LBE95:
 1528              	.LBE94:
 1529              	.LBB96:
 1530              	.LBB97:
 1531 0008 1268     		ldr	r2, [r2]
 1532              	.LVL119:
 1533              	.LBE97:
 1534              	.LBE96:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 76


1294:Generated_Source\PSoC4/CyLFClk.c ****         {
 1535              		.loc 2 1294 0
 1536 000a 5C0A     		lsrs	r4, r3, #9
 1537 000c 4B08     		lsrs	r3, r1, #1
 1538              	.LVL120:
 1539 000e 2343     		orrs	r3, r4
 1540 0010 520C     		lsrs	r2, r2, #17
 1541 0012 1343     		orrs	r3, r2
 1542 0014 DB07     		lsls	r3, r3, #31
 1543 0016 05D4     		bmi	.L172
1296:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= ((uint32)(~(CY_SYS_WDT_CASCADE_01|CY_SYS_WDT_CASCADE_12)));
 1544              		.loc 2 1296 0
 1545 0018 044A     		ldr	r2, .L174+4
1297:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= cascadeMask;
 1546              		.loc 2 1297 0
 1547 001a 054B     		ldr	r3, .L174+8
1296:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= ((uint32)(~(CY_SYS_WDT_CASCADE_01|CY_SYS_WDT_CASCADE_12)));
 1548              		.loc 2 1296 0
 1549 001c 1168     		ldr	r1, [r2]
 1550              	.LVL121:
1297:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= cascadeMask;
 1551              		.loc 2 1297 0
 1552 001e 0B40     		ands	r3, r1
 1553              	.LVL122:
1298:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
 1554              		.loc 2 1298 0
 1555 0020 1843     		orrs	r0, r3
 1556              	.LVL123:
1299:Generated_Source\PSoC4/CyLFClk.c ****         }
 1557              		.loc 2 1299 0
 1558 0022 1060     		str	r0, [r2]
 1559              	.LVL124:
 1560              	.L172:
1301:Generated_Source\PSoC4/CyLFClk.c **** 
 1561              		.loc 2 1301 0
 1562              		@ sp needed
 1563 0024 10BD     		pop	{r4, pc}
 1564              	.L175:
 1565 0026 C046     		.align	2
 1566              	.L174:
 1567 0028 10020B40 		.word	1074463248
 1568 002c 0C020B40 		.word	1074463244
 1569 0030 F7F7FFFF 		.word	-2057
 1570              		.cfi_endproc
 1571              	.LFE27:
 1572              		.size	CySysWdtSetCascade, .-CySysWdtSetCascade
 1573              		.section	.text.CySysWdtGetCascade,"ax",%progbits
 1574              		.align	1
 1575              		.global	CySysWdtGetCascade
 1576              		.code	16
 1577              		.thumb_func
 1578              		.type	CySysWdtGetCascade, %function
 1579              	CySysWdtGetCascade:
 1580              	.LFB28:
1317:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WDT_CONFIG_REG & (CY_SYS_WDT_CASCADE_01 | CY_SYS_WDT_CASCADE_12));
 1581              		.loc 2 1317 0
 1582              		.cfi_startproc
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 77


 1583              		@ args = 0, pretend = 0, frame = 0
 1584              		@ frame_needed = 0, uses_anonymous_args = 0
 1585              		@ link register save eliminated.
1318:Generated_Source\PSoC4/CyLFClk.c ****     }
 1586              		.loc 2 1318 0
 1587 0000 024B     		ldr	r3, .L177
1319:Generated_Source\PSoC4/CyLFClk.c **** 
 1588              		.loc 2 1319 0
 1589              		@ sp needed
1318:Generated_Source\PSoC4/CyLFClk.c ****     }
 1590              		.loc 2 1318 0
 1591 0002 1868     		ldr	r0, [r3]
 1592 0004 024B     		ldr	r3, .L177+4
 1593 0006 1840     		ands	r0, r3
1319:Generated_Source\PSoC4/CyLFClk.c **** 
 1594              		.loc 2 1319 0
 1595 0008 7047     		bx	lr
 1596              	.L178:
 1597 000a C046     		.align	2
 1598              	.L177:
 1599 000c 0C020B40 		.word	1074463244
 1600 0010 08080000 		.word	2056
 1601              		.cfi_endproc
 1602              	.LFE28:
 1603              		.size	CySysWdtGetCascade, .-CySysWdtGetCascade
 1604              		.section	.text.CySysWdtSetMatch,"ax",%progbits
 1605              		.align	1
 1606              		.global	CySysWdtSetMatch
 1607              		.code	16
 1608              		.thumb_func
 1609              		.type	CySysWdtSetMatch, %function
 1610              	CySysWdtSetMatch:
 1611              	.LFB29:
1337:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue;
 1612              		.loc 2 1337 0
 1613              		.cfi_startproc
 1614              		@ args = 0, pretend = 0, frame = 0
 1615              		@ frame_needed = 0, uses_anonymous_args = 0
 1616              	.LVL125:
 1617 0000 70B5     		push	{r4, r5, r6, lr}
 1618              		.cfi_def_cfa_offset 16
 1619              		.cfi_offset 4, -16
 1620              		.cfi_offset 5, -12
 1621              		.cfi_offset 6, -8
 1622              		.cfi_offset 14, -4
1344:Generated_Source\PSoC4/CyLFClk.c **** 
 1623              		.loc 2 1344 0
 1624 0002 0E4D     		ldr	r5, .L186
1337:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue;
 1625              		.loc 2 1337 0
 1626 0004 0600     		movs	r6, r0
1344:Generated_Source\PSoC4/CyLFClk.c **** 
 1627              		.loc 2 1344 0
 1628 0006 2B68     		ldr	r3, [r5]
1337:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue;
 1629              		.loc 2 1337 0
 1630 0008 0C00     		movs	r4, r1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 78


1344:Generated_Source\PSoC4/CyLFClk.c **** 
 1631              		.loc 2 1344 0
 1632 000a 9B0F     		lsrs	r3, r3, #30
 1633 000c C920     		movs	r0, #201
 1634              	.LVL126:
 1635 000e 002B     		cmp	r3, #0
 1636 0010 00D0     		beq	.L180
 1637 0012 6C38     		subs	r0, r0, #108
 1638              	.L180:
1344:Generated_Source\PSoC4/CyLFClk.c **** 
 1639              		.loc 2 1344 0 is_stmt 0 discriminator 4
 1640 0014 FFF7FEFF 		bl	CyDelayUs
 1641              	.LVL127:
1348:Generated_Source\PSoC4/CyLFClk.c **** 
 1642              		.loc 2 1348 0 is_stmt 1 discriminator 4
 1643 0018 0949     		ldr	r1, .L186+4
1347:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_MATCH_REG = (regValue | (match << (counterNum * CY_SYS_WDT_CNT_MATCH_SHIFT)));
 1644              		.loc 2 1347 0 discriminator 4
 1645 001a 3001     		lsls	r0, r6, #4
1348:Generated_Source\PSoC4/CyLFClk.c **** 
 1646              		.loc 2 1348 0 discriminator 4
 1647 001c 8140     		lsls	r1, r1, r0
 1648 001e 8440     		lsls	r4, r4, r0
 1649              	.LVL128:
1346:Generated_Source\PSoC4/CyLFClk.c ****         regValue &= (uint32)~((uint32)(CY_SYS_WDT_LOWER_16BITS_MASK << (counterNum * CY_SYS_WDT_CNT
 1650              		.loc 2 1346 0 discriminator 4
 1651 0020 084A     		ldr	r2, .L186+8
1351:Generated_Source\PSoC4/CyLFClk.c ****     }
 1652              		.loc 2 1351 0 discriminator 4
 1653 0022 4320     		movs	r0, #67
1346:Generated_Source\PSoC4/CyLFClk.c ****         regValue &= (uint32)~((uint32)(CY_SYS_WDT_LOWER_16BITS_MASK << (counterNum * CY_SYS_WDT_CNT
 1654              		.loc 2 1346 0 discriminator 4
 1655 0024 1368     		ldr	r3, [r2]
 1656              	.LVL129:
1348:Generated_Source\PSoC4/CyLFClk.c **** 
 1657              		.loc 2 1348 0 discriminator 4
 1658 0026 8B43     		bics	r3, r1
 1659 0028 1C43     		orrs	r4, r3
 1660 002a 1460     		str	r4, [r2]
1351:Generated_Source\PSoC4/CyLFClk.c ****     }
 1661              		.loc 2 1351 0 discriminator 4
 1662 002c 2B68     		ldr	r3, [r5]
 1663 002e 9B0F     		lsrs	r3, r3, #30
 1664 0030 00D0     		beq	.L181
1351:Generated_Source\PSoC4/CyLFClk.c ****     }
 1665              		.loc 2 1351 0 is_stmt 0
 1666 0032 2438     		subs	r0, r0, #36
 1667              	.L181:
1351:Generated_Source\PSoC4/CyLFClk.c ****     }
 1668              		.loc 2 1351 0 discriminator 4
 1669 0034 FFF7FEFF 		bl	CyDelayUs
 1670              	.LVL130:
1352:Generated_Source\PSoC4/CyLFClk.c **** 
 1671              		.loc 2 1352 0 is_stmt 1 discriminator 4
 1672              		@ sp needed
 1673              	.LVL131:
 1674 0038 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 79


 1675              	.L187:
 1676 003a C046     		.align	2
 1677              	.L186:
 1678 003c 0C020B40 		.word	1074463244
 1679 0040 FFFF0000 		.word	65535
 1680 0044 08020B40 		.word	1074463240
 1681              		.cfi_endproc
 1682              	.LFE29:
 1683              		.size	CySysWdtSetMatch, .-CySysWdtSetMatch
 1684              		.section	.text.CySysWdtSetToggleBit,"ax",%progbits
 1685              		.align	1
 1686              		.global	CySysWdtSetToggleBit
 1687              		.code	16
 1688              		.thumb_func
 1689              		.type	CySysWdtSetToggleBit, %function
 1690              	CySysWdtSetToggleBit:
 1691              	.LFB30:
1376:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
 1692              		.loc 2 1376 0
 1693              		.cfi_startproc
 1694              		@ args = 0, pretend = 0, frame = 0
 1695              		@ frame_needed = 0, uses_anonymous_args = 0
 1696              		@ link register save eliminated.
 1697              	.LVL132:
 1698              	.LBB98:
 1699              	.LBB99:
1020:Generated_Source\PSoC4/CyLFClk.c ****     }
 1700              		.loc 2 1020 0
 1701 0000 074B     		ldr	r3, .L190
 1702 0002 1B68     		ldr	r3, [r3]
 1703              	.LVL133:
 1704              	.LBE99:
 1705              	.LBE98:
1379:Generated_Source\PSoC4/CyLFClk.c ****         {
 1706              		.loc 2 1379 0
 1707 0004 9B03     		lsls	r3, r3, #14
 1708 0006 09D4     		bmi	.L188
1381:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= (uint32)(~((uint32)(CY_SYS_WDT_CONFIG_BITS2_MASK << CY_SYS_WDT_CONFIG
 1709              		.loc 2 1381 0
 1710 0008 0649     		ldr	r1, .L190+4
1382:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= ((bits & CY_SYS_WDT_CONFIG_BITS2_MASK) << CY_SYS_WDT_CONFIG_BITS2_POS
 1711              		.loc 2 1382 0
 1712 000a 074B     		ldr	r3, .L190+8
1381:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= (uint32)(~((uint32)(CY_SYS_WDT_CONFIG_BITS2_MASK << CY_SYS_WDT_CONFIG
 1713              		.loc 2 1381 0
 1714 000c 0A68     		ldr	r2, [r1]
 1715              	.LVL134:
1383:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
 1716              		.loc 2 1383 0
 1717 000e 0006     		lsls	r0, r0, #24
 1718              	.LVL135:
1382:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= ((bits & CY_SYS_WDT_CONFIG_BITS2_MASK) << CY_SYS_WDT_CONFIG_BITS2_POS
 1719              		.loc 2 1382 0
 1720 0010 1340     		ands	r3, r2
 1721              	.LVL136:
1383:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
 1722              		.loc 2 1383 0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 80


 1723 0012 F822     		movs	r2, #248
 1724 0014 5205     		lsls	r2, r2, #21
 1725 0016 1040     		ands	r0, r2
 1726 0018 1843     		orrs	r0, r3
 1727              	.LVL137:
1384:Generated_Source\PSoC4/CyLFClk.c ****         }
 1728              		.loc 2 1384 0
 1729 001a 0860     		str	r0, [r1]
 1730              	.LVL138:
 1731              	.L188:
1386:Generated_Source\PSoC4/CyLFClk.c **** 
 1732              		.loc 2 1386 0
 1733              		@ sp needed
 1734 001c 7047     		bx	lr
 1735              	.L191:
 1736 001e C046     		.align	2
 1737              	.L190:
 1738 0020 10020B40 		.word	1074463248
 1739 0024 0C020B40 		.word	1074463244
 1740 0028 FFFFFFE0 		.word	-520093697
 1741              		.cfi_endproc
 1742              	.LFE30:
 1743              		.size	CySysWdtSetToggleBit, .-CySysWdtSetToggleBit
 1744              		.section	.text.CySysWdtGetToggleBit,"ax",%progbits
 1745              		.align	1
 1746              		.global	CySysWdtGetToggleBit
 1747              		.code	16
 1748              		.thumb_func
 1749              		.type	CySysWdtGetToggleBit, %function
 1750              	CySysWdtGetToggleBit:
 1751              	.LFB31:
1399:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_CONFIG_REG >> CY_SYS_WDT_CONFIG_BITS2_POS) & CY_SYS_WDT_CONFIG_BITS2_MA
 1752              		.loc 2 1399 0
 1753              		.cfi_startproc
 1754              		@ args = 0, pretend = 0, frame = 0
 1755              		@ frame_needed = 0, uses_anonymous_args = 0
 1756              		@ link register save eliminated.
1400:Generated_Source\PSoC4/CyLFClk.c ****     }
 1757              		.loc 2 1400 0
 1758 0000 024B     		ldr	r3, .L193
1401:Generated_Source\PSoC4/CyLFClk.c **** 
 1759              		.loc 2 1401 0
 1760              		@ sp needed
1400:Generated_Source\PSoC4/CyLFClk.c ****     }
 1761              		.loc 2 1400 0
 1762 0002 1868     		ldr	r0, [r3]
 1763 0004 C000     		lsls	r0, r0, #3
 1764 0006 C00E     		lsrs	r0, r0, #27
1401:Generated_Source\PSoC4/CyLFClk.c **** 
 1765              		.loc 2 1401 0
 1766 0008 7047     		bx	lr
 1767              	.L194:
 1768 000a C046     		.align	2
 1769              	.L193:
 1770 000c 0C020B40 		.word	1074463244
 1771              		.cfi_endproc
 1772              	.LFE31:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 81


 1773              		.size	CySysWdtGetToggleBit, .-CySysWdtGetToggleBit
 1774              		.section	.text.CySysWdtGetMatch,"ax",%progbits
 1775              		.align	1
 1776              		.global	CySysWdtGetMatch
 1777              		.code	16
 1778              		.thumb_func
 1779              		.type	CySysWdtGetMatch, %function
 1780              	CySysWdtGetMatch:
 1781              	.LFB32:
1417:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
 1782              		.loc 2 1417 0
 1783              		.cfi_startproc
 1784              		@ args = 0, pretend = 0, frame = 0
 1785              		@ frame_needed = 0, uses_anonymous_args = 0
 1786              		@ link register save eliminated.
 1787              	.LVL139:
1417:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
 1788              		.loc 2 1417 0
 1789 0000 0300     		movs	r3, r0
1421:Generated_Source\PSoC4/CyLFClk.c ****                                             (counterNum * CY_SYS_WDT_CNT_MATCH_SHIFT)) & CY_SYS_WDT
 1790              		.loc 2 1421 0
 1791 0002 034A     		ldr	r2, .L196
 1792 0004 1B01     		lsls	r3, r3, #4
 1793 0006 1068     		ldr	r0, [r2]
 1794              	.LVL140:
1423:Generated_Source\PSoC4/CyLFClk.c **** 
 1795              		.loc 2 1423 0
 1796              		@ sp needed
1421:Generated_Source\PSoC4/CyLFClk.c ****                                             (counterNum * CY_SYS_WDT_CNT_MATCH_SHIFT)) & CY_SYS_WDT
 1797              		.loc 2 1421 0
 1798 0008 D840     		lsrs	r0, r0, r3
 1799 000a 80B2     		uxth	r0, r0
1423:Generated_Source\PSoC4/CyLFClk.c **** 
 1800              		.loc 2 1423 0
 1801 000c 7047     		bx	lr
 1802              	.L197:
 1803 000e C046     		.align	2
 1804              	.L196:
 1805 0010 08020B40 		.word	1074463240
 1806              		.cfi_endproc
 1807              	.LFE32:
 1808              		.size	CySysWdtGetMatch, .-CySysWdtGetMatch
 1809              		.section	.text.CySysWdtGetCount,"ax",%progbits
 1810              		.align	1
 1811              		.global	CySysWdtGetCount
 1812              		.code	16
 1813              		.thumb_func
 1814              		.type	CySysWdtGetCount, %function
 1815              	CySysWdtGetCount:
 1816              	.LFB33:
1439:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue = 0u;
 1817              		.loc 2 1439 0
 1818              		.cfi_startproc
 1819              		@ args = 0, pretend = 0, frame = 0
 1820              		@ frame_needed = 0, uses_anonymous_args = 0
 1821              		@ link register save eliminated.
 1822              	.LVL141:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 82


1442:Generated_Source\PSoC4/CyLFClk.c ****         {
 1823              		.loc 2 1442 0
 1824 0000 0128     		cmp	r0, #1
 1825 0002 0AD0     		beq	.L200
 1826 0004 0028     		cmp	r0, #0
 1827 0006 04D0     		beq	.L201
 1828 0008 0228     		cmp	r0, #2
 1829 000a 0AD1     		bne	.L205
1456:Generated_Source\PSoC4/CyLFClk.c ****             break;
 1830              		.loc 2 1456 0
 1831 000c 064B     		ldr	r3, .L206
 1832 000e 1868     		ldr	r0, [r3]
 1833              	.LVL142:
1457:Generated_Source\PSoC4/CyLFClk.c **** 
 1834              		.loc 2 1457 0
 1835 0010 08E0     		b	.L199
 1836              	.LVL143:
 1837              	.L201:
1446:Generated_Source\PSoC4/CyLFClk.c ****             break;
 1838              		.loc 2 1446 0
 1839 0012 064B     		ldr	r3, .L206+4
 1840 0014 1868     		ldr	r0, [r3]
 1841              	.LVL144:
 1842 0016 80B2     		uxth	r0, r0
 1843              	.LVL145:
1447:Generated_Source\PSoC4/CyLFClk.c **** 
 1844              		.loc 2 1447 0
 1845 0018 04E0     		b	.L199
 1846              	.LVL146:
 1847              	.L200:
1451:Generated_Source\PSoC4/CyLFClk.c ****             break;
 1848              		.loc 2 1451 0
 1849 001a 044B     		ldr	r3, .L206+4
 1850 001c 1868     		ldr	r0, [r3]
 1851              	.LVL147:
 1852 001e 000C     		lsrs	r0, r0, #16
 1853              	.LVL148:
1452:Generated_Source\PSoC4/CyLFClk.c **** 
 1854              		.loc 2 1452 0
 1855 0020 00E0     		b	.L199
 1856              	.LVL149:
 1857              	.L205:
1440:Generated_Source\PSoC4/CyLFClk.c **** 
 1858              		.loc 2 1440 0
 1859 0022 0020     		movs	r0, #0
 1860              	.LVL150:
 1861              	.L199:
1465:Generated_Source\PSoC4/CyLFClk.c **** 
 1862              		.loc 2 1465 0
 1863              		@ sp needed
 1864 0024 7047     		bx	lr
 1865              	.L207:
 1866 0026 C046     		.align	2
 1867              	.L206:
 1868 0028 04020B40 		.word	1074463236
 1869 002c 00020B40 		.word	1074463232
 1870              		.cfi_endproc
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 83


 1871              	.LFE33:
 1872              		.size	CySysWdtGetCount, .-CySysWdtGetCount
 1873              		.section	.text.CySysClkLfclkPosedgeCatch,"ax",%progbits
 1874              		.align	1
 1875              		.code	16
 1876              		.thumb_func
 1877              		.type	CySysClkLfclkPosedgeCatch, %function
 1878              	CySysClkLfclkPosedgeCatch:
 1879              	.LFB43:
1841:Generated_Source\PSoC4/CyLFClk.c ****         uint32 firstCount;
 1880              		.loc 2 1841 0
 1881              		.cfi_startproc
 1882              		@ args = 0, pretend = 0, frame = 0
 1883              		@ frame_needed = 0, uses_anonymous_args = 0
 1884              	.LVL151:
 1885              	.LBB100:
 1886              	.LBB101:
1020:Generated_Source\PSoC4/CyLFClk.c ****     }
 1887              		.loc 2 1020 0
 1888 0000 164B     		ldr	r3, .L216
 1889              	.LBE101:
 1890              	.LBE100:
1841:Generated_Source\PSoC4/CyLFClk.c ****         uint32 firstCount;
 1891              		.loc 2 1841 0
 1892 0002 70B5     		push	{r4, r5, r6, lr}
 1893              		.cfi_def_cfa_offset 16
 1894              		.cfi_offset 4, -16
 1895              		.cfi_offset 5, -12
 1896              		.cfi_offset 6, -8
 1897              		.cfi_offset 14, -4
 1898              	.LBB103:
 1899              	.LBB102:
1020:Generated_Source\PSoC4/CyLFClk.c ****     }
 1900              		.loc 2 1020 0
 1901 0004 1A68     		ldr	r2, [r3]
 1902              	.LVL152:
 1903              	.LBE102:
 1904              	.LBE103:
1845:Generated_Source\PSoC4/CyLFClk.c ****         {
 1905              		.loc 2 1845 0
 1906 0006 0125     		movs	r5, #1
 1907 0008 154C     		ldr	r4, .L216+4
 1908 000a 9207     		lsls	r2, r2, #30
 1909 000c 01D5     		bpl	.L209
1847:Generated_Source\PSoC4/CyLFClk.c ****         }
 1910              		.loc 2 1847 0
 1911 000e 0023     		movs	r3, #0
 1912 0010 0AE0     		b	.L215
 1913              	.L209:
 1914              	.LVL153:
 1915              	.LBB104:
 1916              	.LBB105:
1020:Generated_Source\PSoC4/CyLFClk.c ****     }
 1917              		.loc 2 1020 0
 1918 0012 1A68     		ldr	r2, [r3]
 1919              	.LVL154:
 1920              	.LBE105:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 84


 1921              	.LBE104:
1849:Generated_Source\PSoC4/CyLFClk.c ****         {
 1922              		.loc 2 1849 0
 1923 0014 520A     		lsrs	r2, r2, #9
 1924 0016 2A42     		tst	r2, r5
 1925 0018 01D0     		beq	.L211
1851:Generated_Source\PSoC4/CyLFClk.c ****         }
 1926              		.loc 2 1851 0
 1927 001a 6561     		str	r5, [r4, #20]
 1928 001c 13E0     		b	.L210
 1929              	.L211:
 1930              	.LVL155:
 1931              	.LBB106:
 1932              	.LBB107:
1020:Generated_Source\PSoC4/CyLFClk.c ****     }
 1933              		.loc 2 1020 0
 1934 001e 1868     		ldr	r0, [r3]
 1935              	.LVL156:
 1936              	.LBE107:
 1937              	.LBE106:
1853:Generated_Source\PSoC4/CyLFClk.c ****         {
 1938              		.loc 2 1853 0
 1939 0020 400C     		lsrs	r0, r0, #17
 1940 0022 2840     		ands	r0, r5
 1941 0024 02D0     		beq	.L212
1855:Generated_Source\PSoC4/CyLFClk.c ****         }
 1942              		.loc 2 1855 0
 1943 0026 0223     		movs	r3, #2
 1944              	.L215:
 1945 0028 6361     		str	r3, [r4, #20]
 1946 002a 0CE0     		b	.L210
 1947              	.L212:
 1948              	.LBB108:
 1949              	.LBB109:
1077:Generated_Source\PSoC4/CyLFClk.c ****     }
 1950              		.loc 2 1077 0
 1951 002c 0D4B     		ldr	r3, .L216+8
 1952              	.LBE109:
 1953              	.LBE108:
1861:Generated_Source\PSoC4/CyLFClk.c **** 
 1954              		.loc 2 1861 0
 1955 002e 6061     		str	r0, [r4, #20]
 1956              	.LVL157:
1860:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER0;
 1957              		.loc 2 1860 0
 1958 0030 E560     		str	r5, [r4, #12]
 1959              	.LBB111:
 1960              	.LBB110:
1077:Generated_Source\PSoC4/CyLFClk.c ****     }
 1961              		.loc 2 1077 0
 1962 0032 1A68     		ldr	r2, [r3]
 1963              	.LVL158:
 1964              	.LBE110:
 1965              	.LBE111:
1863:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtSetMode(CY_SYS_WDT_COUNTER0, CY_SYS_WDT_MODE_NONE);
 1966              		.loc 2 1863 0
 1967 0034 0323     		movs	r3, #3
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 85


1864:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtEnable(CY_SYS_WDT_COUNTER0_MASK);
 1968              		.loc 2 1864 0
 1969 0036 0100     		movs	r1, r0
1863:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtSetMode(CY_SYS_WDT_COUNTER0, CY_SYS_WDT_MODE_NONE);
 1970              		.loc 2 1863 0
 1971 0038 1340     		ands	r3, r2
 1972 003a 2361     		str	r3, [r4, #16]
1864:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtEnable(CY_SYS_WDT_COUNTER0_MASK);
 1973              		.loc 2 1864 0
 1974 003c FFF7FEFF 		bl	CySysWdtSetMode
 1975              	.LVL159:
1865:Generated_Source\PSoC4/CyLFClk.c ****         }
 1976              		.loc 2 1865 0
 1977 0040 2800     		movs	r0, r5
 1978 0042 FFF7FEFF 		bl	CySysWdtEnable
 1979              	.LVL160:
 1980              	.L210:
1868:Generated_Source\PSoC4/CyLFClk.c ****         while (CySysWdtGetCount(lfclkPosedgeEnabledWdtCounter) == firstCount)
 1981              		.loc 2 1868 0
 1982 0046 6469     		ldr	r4, [r4, #20]
 1983 0048 2000     		movs	r0, r4
 1984 004a FFF7FEFF 		bl	CySysWdtGetCount
 1985              	.LVL161:
 1986 004e 0500     		movs	r5, r0
 1987              	.LVL162:
 1988              	.L213:
1869:Generated_Source\PSoC4/CyLFClk.c ****         {
 1989              		.loc 2 1869 0 discriminator 1
 1990 0050 2000     		movs	r0, r4
 1991 0052 FFF7FEFF 		bl	CySysWdtGetCount
 1992              	.LVL163:
 1993 0056 8542     		cmp	r5, r0
 1994 0058 FAD0     		beq	.L213
1873:Generated_Source\PSoC4/CyLFClk.c **** 
 1995              		.loc 2 1873 0
 1996              		@ sp needed
 1997              	.LVL164:
 1998 005a 70BD     		pop	{r4, r5, r6, pc}
 1999              	.L217:
 2000              		.align	2
 2001              	.L216:
 2002 005c 10020B40 		.word	1074463248
 2003 0060 00000000 		.word	.LANCHOR0
 2004 0064 0C020B40 		.word	1074463244
 2005              		.cfi_endproc
 2006              	.LFE43:
 2007              		.size	CySysClkLfclkPosedgeCatch, .-CySysClkLfclkPosedgeCatch
 2008              		.section	.text.CySysClkIloStop,"ax",%progbits
 2009              		.align	1
 2010              		.global	CySysClkIloStop
 2011              		.code	16
 2012              		.thumb_func
 2013              		.type	CySysClkIloStop, %function
 2014              	CySysClkIloStop:
 2015              	.LFB2:
 109:Generated_Source\PSoC4/CyLFClk.c ****     #if(CY_IP_SRSSV2)
 2016              		.loc 2 109 0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 86


 2017              		.cfi_startproc
 2018              		@ args = 0, pretend = 0, frame = 0
 2019              		@ frame_needed = 0, uses_anonymous_args = 0
 2020              	.LBB118:
 2021              	.LBB119:
 972:Generated_Source\PSoC4/CyLFClk.c ****     }
 2022              		.loc 2 972 0
 2023 0000 114B     		ldr	r3, .L225
 2024              	.LBE119:
 2025              	.LBE118:
 109:Generated_Source\PSoC4/CyLFClk.c ****     #if(CY_IP_SRSSV2)
 2026              		.loc 2 109 0
 2027 0002 70B5     		push	{r4, r5, r6, lr}
 2028              		.cfi_def_cfa_offset 16
 2029              		.cfi_offset 4, -16
 2030              		.cfi_offset 5, -12
 2031              		.cfi_offset 6, -8
 2032              		.cfi_offset 14, -4
 2033              	.LBB121:
 2034              	.LBB120:
 972:Generated_Source\PSoC4/CyLFClk.c ****     }
 2035              		.loc 2 972 0
 2036 0004 1A68     		ldr	r2, [r3]
 2037 0006 C023     		movs	r3, #192
 2038 0008 1B02     		lsls	r3, r3, #8
 2039 000a 1A42     		tst	r2, r3
 2040 000c 1AD1     		bne	.L218
 2041              	.LBE120:
 2042              	.LBE121:
 2043              	.LBB122:
 2044              	.LBB123:
 373:Generated_Source\PSoC4/CyLFClk.c ****             (uint32) 1u :
 2045              		.loc 2 373 0
 2046 000e 0F4C     		ldr	r4, .L225+4
 2047 0010 2368     		ldr	r3, [r4]
 374:Generated_Source\PSoC4/CyLFClk.c ****             (uint32) 0u);
 2048              		.loc 2 374 0
 2049 0012 002B     		cmp	r3, #0
 2050 0014 16DA     		bge	.L218
 2051              	.LBE123:
 2052              	.LBE122:
 2053              	.LBB124:
 2054              	.LBB125:
 688:Generated_Source\PSoC4/CyLFClk.c ****         return (lfclkSource);
 2055              		.loc 2 688 0
 2056 0016 0E4B     		ldr	r3, .L225+8
 2057 0018 1B68     		ldr	r3, [r3]
 2058              	.LBE125:
 2059              	.LBE124:
 120:Generated_Source\PSoC4/CyLFClk.c ****                 {
 2060              		.loc 2 120 0
 2061 001a 9B0F     		lsrs	r3, r3, #30
 2062 001c 0ED1     		bne	.L224
 124:Generated_Source\PSoC4/CyLFClk.c ****                 CySysClkLfclkPosedgeCatch();
 2063              		.loc 2 124 0
 2064 001e FFF7FEFF 		bl	CyEnterCriticalSection
 2065              	.LVL165:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 87


 2066 0022 0500     		movs	r5, r0
 2067              	.LVL166:
 125:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_ILO_CONFIG_REG &= (uint32) ( ~(uint32)CY_SYS_CLK_ILO_CONFIG_ENABLE);
 2068              		.loc 2 125 0
 2069 0024 FFF7FEFF 		bl	CySysClkLfclkPosedgeCatch
 2070              	.LVL167:
 126:Generated_Source\PSoC4/CyLFClk.c ****                 CySysClkLfclkPosedgeRestore();
 2071              		.loc 2 126 0
 2072 0028 2368     		ldr	r3, [r4]
 2073 002a 5B00     		lsls	r3, r3, #1
 2074 002c 5B08     		lsrs	r3, r3, #1
 2075 002e 2360     		str	r3, [r4]
 127:Generated_Source\PSoC4/CyLFClk.c ****                 CyExitCriticalSection(interruptState);
 2076              		.loc 2 127 0
 2077 0030 FFF7FEFF 		bl	CySysClkLfclkPosedgeRestore
 2078              	.LVL168:
 128:Generated_Source\PSoC4/CyLFClk.c **** 
 2079              		.loc 2 128 0
 2080 0034 2800     		movs	r0, r5
 2081 0036 FFF7FEFF 		bl	CyExitCriticalSection
 2082              	.LVL169:
 2083 003a 03E0     		b	.L218
 2084              	.LVL170:
 2085              	.L224:
 134:Generated_Source\PSoC4/CyLFClk.c ****                 }
 2086              		.loc 2 134 0
 2087 003c 2368     		ldr	r3, [r4]
 2088 003e 5B00     		lsls	r3, r3, #1
 2089 0040 5B08     		lsrs	r3, r3, #1
 2090 0042 2360     		str	r3, [r4]
 2091              	.L218:
 143:Generated_Source\PSoC4/CyLFClk.c **** 
 2092              		.loc 2 143 0
 2093              		@ sp needed
 2094 0044 70BD     		pop	{r4, r5, r6, pc}
 2095              	.L226:
 2096 0046 C046     		.align	2
 2097              	.L225:
 2098 0048 00010B40 		.word	1074462976
 2099 004c 04010B40 		.word	1074462980
 2100 0050 0C020B40 		.word	1074463244
 2101              		.cfi_endproc
 2102              	.LFE2:
 2103              		.size	CySysClkIloStop, .-CySysClkIloStop
 2104              		.section	.text.CySysClkSetLfclkSource,"ax",%progbits
 2105              		.align	1
 2106              		.global	CySysClkSetLfclkSource
 2107              		.code	16
 2108              		.thumb_func
 2109              		.type	CySysClkSetLfclkSource, %function
 2110              	CySysClkSetLfclkSource:
 2111              	.LFB11:
 735:Generated_Source\PSoC4/CyLFClk.c ****         uint8  interruptState;
 2112              		.loc 2 735 0
 2113              		.cfi_startproc
 2114              		@ args = 0, pretend = 0, frame = 0
 2115              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 88


 2116              	.LVL171:
 2117 0000 70B5     		push	{r4, r5, r6, lr}
 2118              		.cfi_def_cfa_offset 16
 2119              		.cfi_offset 4, -16
 2120              		.cfi_offset 5, -12
 2121              		.cfi_offset 6, -8
 2122              		.cfi_offset 14, -4
 2123              	.LBB126:
 2124              	.LBB127:
 688:Generated_Source\PSoC4/CyLFClk.c ****         return (lfclkSource);
 2125              		.loc 2 688 0
 2126 0002 0C4D     		ldr	r5, .L229
 2127              	.LBE127:
 2128              	.LBE126:
 735:Generated_Source\PSoC4/CyLFClk.c ****         uint8  interruptState;
 2129              		.loc 2 735 0
 2130 0004 0400     		movs	r4, r0
 2131              	.LBB129:
 2132              	.LBB128:
 688:Generated_Source\PSoC4/CyLFClk.c ****         return (lfclkSource);
 2133              		.loc 2 688 0
 2134 0006 2B68     		ldr	r3, [r5]
 2135              	.LBE128:
 2136              	.LBE129:
 738:Generated_Source\PSoC4/CyLFClk.c ****         {
 2137              		.loc 2 738 0
 2138 0008 9B0F     		lsrs	r3, r3, #30
 2139 000a 9B07     		lsls	r3, r3, #30
 2140 000c 9842     		cmp	r0, r3
 2141 000e 10D0     		beq	.L227
 740:Generated_Source\PSoC4/CyLFClk.c ****             CySysClkLfclkPosedgeCatch();
 2142              		.loc 2 740 0
 2143 0010 FFF7FEFF 		bl	CyEnterCriticalSection
 2144              	.LVL172:
 2145 0014 0600     		movs	r6, r0
 2146              	.LVL173:
 741:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = (CY_SYS_WDT_CONFIG_REG & (uint32)(~CY_SYS_CLK_LFCLK_SEL_MASK)) 
 2147              		.loc 2 741 0
 2148 0016 FFF7FEFF 		bl	CySysClkLfclkPosedgeCatch
 2149              	.LVL174:
 742:Generated_Source\PSoC4/CyLFClk.c ****                                     (source & CY_SYS_CLK_LFCLK_SEL_MASK);
 2150              		.loc 2 742 0
 2151 001a 2B68     		ldr	r3, [r5]
 2152 001c A40F     		lsrs	r4, r4, #30
 2153              	.LVL175:
 2154 001e 9B00     		lsls	r3, r3, #2
 2155 0020 9B08     		lsrs	r3, r3, #2
 2156 0022 A407     		lsls	r4, r4, #30
 2157 0024 1C43     		orrs	r4, r3
 2158 0026 2C60     		str	r4, [r5]
 744:Generated_Source\PSoC4/CyLFClk.c ****             CyExitCriticalSection(interruptState);
 2159              		.loc 2 744 0
 2160 0028 FFF7FEFF 		bl	CySysClkLfclkPosedgeRestore
 2161              	.LVL176:
 745:Generated_Source\PSoC4/CyLFClk.c ****         }
 2162              		.loc 2 745 0
 2163 002c 3000     		movs	r0, r6
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 89


 2164 002e FFF7FEFF 		bl	CyExitCriticalSection
 2165              	.LVL177:
 2166              	.L227:
 747:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_WCO && CY_IP_SRSSV2) */
 2167              		.loc 2 747 0
 2168              		@ sp needed
 2169 0032 70BD     		pop	{r4, r5, r6, pc}
 2170              	.L230:
 2171              		.align	2
 2172              	.L229:
 2173 0034 0C020B40 		.word	1074463244
 2174              		.cfi_endproc
 2175              	.LFE11:
 2176              		.size	CySysClkSetLfclkSource, .-CySysClkSetLfclkSource
 2177              		.section	.text.CySysClkWcoStop,"ax",%progbits
 2178              		.align	1
 2179              		.global	CySysClkWcoStop
 2180              		.code	16
 2181              		.thumb_func
 2182              		.type	CySysClkWcoStop, %function
 2183              	CySysClkWcoStop:
 2184              	.LFB13:
 790:Generated_Source\PSoC4/CyLFClk.c ****         #if (CY_IP_SRSSV2)
 2185              		.loc 2 790 0
 2186              		.cfi_startproc
 2187              		@ args = 0, pretend = 0, frame = 0
 2188              		@ frame_needed = 0, uses_anonymous_args = 0
 2189 0000 70B5     		push	{r4, r5, r6, lr}
 2190              		.cfi_def_cfa_offset 16
 2191              		.cfi_offset 4, -16
 2192              		.cfi_offset 5, -12
 2193              		.cfi_offset 6, -8
 2194              		.cfi_offset 14, -4
 795:Generated_Source\PSoC4/CyLFClk.c ****         {
 2195              		.loc 2 795 0
 2196 0002 FFF7FEFF 		bl	CySysClkWcoEnabled
 2197              	.LVL178:
 2198 0006 0028     		cmp	r0, #0
 2199 0008 18D0     		beq	.L231
 2200              	.LBB130:
 2201              	.LBB131:
 688:Generated_Source\PSoC4/CyLFClk.c ****         return (lfclkSource);
 2202              		.loc 2 688 0
 2203 000a 0D4B     		ldr	r3, .L237
 2204 000c 0D4C     		ldr	r4, .L237+4
 2205 000e 1B68     		ldr	r3, [r3]
 2206              	.LBE131:
 2207              	.LBE130:
 798:Generated_Source\PSoC4/CyLFClk.c ****                 {
 2208              		.loc 2 798 0
 2209 0010 9B0F     		lsrs	r3, r3, #30
 2210 0012 012B     		cmp	r3, #1
 2211 0014 0ED1     		bne	.L233
 800:Generated_Source\PSoC4/CyLFClk.c ****                     CySysClkLfclkPosedgeCatch();
 2212              		.loc 2 800 0
 2213 0016 FFF7FEFF 		bl	CyEnterCriticalSection
 2214              	.LVL179:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 90


 2215 001a 0500     		movs	r5, r0
 2216              	.LVL180:
 801:Generated_Source\PSoC4/CyLFClk.c ****                     CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE;
 2217              		.loc 2 801 0
 2218 001c FFF7FEFF 		bl	CySysClkLfclkPosedgeCatch
 2219              	.LVL181:
 802:Generated_Source\PSoC4/CyLFClk.c ****                     CySysClkLfclkPosedgeRestore();
 2220              		.loc 2 802 0
 2221 0020 2368     		ldr	r3, [r4]
 2222 0022 5B00     		lsls	r3, r3, #1
 2223 0024 5B08     		lsrs	r3, r3, #1
 2224 0026 2360     		str	r3, [r4]
 803:Generated_Source\PSoC4/CyLFClk.c ****                     CyExitCriticalSection(interruptState);
 2225              		.loc 2 803 0
 2226 0028 FFF7FEFF 		bl	CySysClkLfclkPosedgeRestore
 2227              	.LVL182:
 804:Generated_Source\PSoC4/CyLFClk.c ****                 }
 2228              		.loc 2 804 0
 2229 002c 2800     		movs	r0, r5
 2230 002e FFF7FEFF 		bl	CyExitCriticalSection
 2231              	.LVL183:
 2232 0032 03E0     		b	.L231
 2233              	.LVL184:
 2234              	.L233:
 809:Generated_Source\PSoC4/CyLFClk.c ****             }
 2235              		.loc 2 809 0
 2236 0034 2368     		ldr	r3, [r4]
 2237 0036 5B00     		lsls	r3, r3, #1
 2238 0038 5B08     		lsrs	r3, r3, #1
 2239 003a 2360     		str	r3, [r4]
 2240              	.L231:
 812:Generated_Source\PSoC4/CyLFClk.c **** 
 2241              		.loc 2 812 0
 2242              		@ sp needed
 2243 003c 70BD     		pop	{r4, r5, r6, pc}
 2244              	.L238:
 2245 003e C046     		.align	2
 2246              	.L237:
 2247 0040 0C020B40 		.word	1074463244
 2248 0044 00002240 		.word	1075970048
 2249              		.cfi_endproc
 2250              	.LFE13:
 2251              		.size	CySysClkWcoStop, .-CySysClkWcoStop
 2252              		.section	.text.CySysWdtGetInterruptSource,"ax",%progbits
 2253              		.align	1
 2254              		.global	CySysWdtGetInterruptSource
 2255              		.code	16
 2256              		.thumb_func
 2257              		.type	CySysWdtGetInterruptSource, %function
 2258              	CySysWdtGetInterruptSource:
 2259              	.LFB34:
1482:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WDT_CONTROL_REG & (CY_SYS_WDT_COUNTER0_INT | CY_SYS_WDT_COUNTER1_INT | CY_SY
 2260              		.loc 2 1482 0
 2261              		.cfi_startproc
 2262              		@ args = 0, pretend = 0, frame = 0
 2263              		@ frame_needed = 0, uses_anonymous_args = 0
 2264              		@ link register save eliminated.
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 91


1483:Generated_Source\PSoC4/CyLFClk.c ****     }
 2265              		.loc 2 1483 0
 2266 0000 024B     		ldr	r3, .L240
1484:Generated_Source\PSoC4/CyLFClk.c **** 
 2267              		.loc 2 1484 0
 2268              		@ sp needed
1483:Generated_Source\PSoC4/CyLFClk.c ****     }
 2269              		.loc 2 1483 0
 2270 0002 1868     		ldr	r0, [r3]
 2271 0004 024B     		ldr	r3, .L240+4
 2272 0006 1840     		ands	r0, r3
1484:Generated_Source\PSoC4/CyLFClk.c **** 
 2273              		.loc 2 1484 0
 2274 0008 7047     		bx	lr
 2275              	.L241:
 2276 000a C046     		.align	2
 2277              	.L240:
 2278 000c 10020B40 		.word	1074463248
 2279 0010 04040400 		.word	263172
 2280              		.cfi_endproc
 2281              	.LFE34:
 2282              		.size	CySysWdtGetInterruptSource, .-CySysWdtGetInterruptSource
 2283              		.section	.text.CySysWdtClearInterrupt,"ax",%progbits
 2284              		.align	1
 2285              		.global	CySysWdtClearInterrupt
 2286              		.code	16
 2287              		.thumb_func
 2288              		.type	CySysWdtClearInterrupt, %function
 2289              	CySysWdtClearInterrupt:
 2290              	.LFB35:
1511:Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
 2291              		.loc 2 1511 0
 2292              		.cfi_startproc
 2293              		@ args = 0, pretend = 0, frame = 0
 2294              		@ frame_needed = 0, uses_anonymous_args = 0
 2295              	.LVL185:
 2296 0000 70B5     		push	{r4, r5, r6, lr}
 2297              		.cfi_def_cfa_offset 16
 2298              		.cfi_offset 4, -16
 2299              		.cfi_offset 5, -12
 2300              		.cfi_offset 6, -8
 2301              		.cfi_offset 14, -4
1511:Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
 2302              		.loc 2 1511 0
 2303 0002 0500     		movs	r5, r0
1515:Generated_Source\PSoC4/CyLFClk.c **** 
 2304              		.loc 2 1515 0
 2305 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 2306              	.LVL186:
 2307              	.LBB134:
 2308              	.LBB135:
 972:Generated_Source\PSoC4/CyLFClk.c ****     }
 2309              		.loc 2 972 0
 2310 0008 0E4B     		ldr	r3, .L247
 2311              	.LBE135:
 2312              	.LBE134:
1515:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 92


 2313              		.loc 2 1515 0
 2314 000a 0400     		movs	r4, r0
 2315              	.LVL187:
 2316              	.LBB137:
 2317              	.LBB136:
 972:Generated_Source\PSoC4/CyLFClk.c ****     }
 2318              		.loc 2 972 0
 2319 000c 1A68     		ldr	r2, [r3]
 2320 000e C023     		movs	r3, #192
 2321 0010 1B02     		lsls	r3, r3, #8
 2322 0012 1340     		ands	r3, r2
 2323 0014 11D1     		bne	.L243
 2324              	.L245:
 2325              	.LVL188:
 2326              	.LBE136:
 2327              	.LBE137:
1532:Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_WDT_COUNTER1_INT 
 2328              		.loc 2 1532 0
 2329 0016 0C48     		ldr	r0, .L247+4
 2330 0018 0C49     		ldr	r1, .L247+8
 2331 001a 0540     		ands	r5, r0
 2332              	.LVL189:
 2333 001c 2800     		movs	r0, r5
 2334 001e 0E68     		ldr	r6, [r1]
 2335 0020 0B4A     		ldr	r2, .L247+12
 2336 0022 3240     		ands	r2, r6
 2337 0024 1043     		orrs	r0, r2
 2338 0026 0860     		str	r0, [r1]
1539:Generated_Source\PSoC4/CyLFClk.c **** 
 2339              		.loc 2 1539 0
 2340 0028 0A68     		ldr	r2, [r1]
1541:Generated_Source\PSoC4/CyLFClk.c ****         {
 2341              		.loc 2 1541 0
 2342 002a 012B     		cmp	r3, #1
 2343 002c 01D1     		bne	.L244
 2344              	.LVL190:
1543:Generated_Source\PSoC4/CyLFClk.c ****         }
 2345              		.loc 2 1543 0
 2346 002e FFF7FEFF 		bl	CySysWdtLock
 2347              	.LVL191:
 2348              	.L244:
1546:Generated_Source\PSoC4/CyLFClk.c ****     }
 2349              		.loc 2 1546 0
 2350 0032 2000     		movs	r0, r4
 2351 0034 FFF7FEFF 		bl	CyExitCriticalSection
 2352              	.LVL192:
1547:Generated_Source\PSoC4/CyLFClk.c **** 
 2353              		.loc 2 1547 0
 2354              		@ sp needed
 2355              	.LVL193:
 2356 0038 70BD     		pop	{r4, r5, r6, pc}
 2357              	.LVL194:
 2358              	.L243:
1520:Generated_Source\PSoC4/CyLFClk.c ****         }
 2359              		.loc 2 1520 0
 2360 003a FFF7FEFF 		bl	CySysWdtUnlock
 2361              	.LVL195:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 93


1519:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtUnlock();
 2362              		.loc 2 1519 0
 2363 003e 0123     		movs	r3, #1
 2364 0040 E9E7     		b	.L245
 2365              	.L248:
 2366 0042 C046     		.align	2
 2367              	.L247:
 2368 0044 00010B40 		.word	1074462976
 2369 0048 04040400 		.word	263172
 2370 004c 10020B40 		.word	1074463248
 2371 0050 FBFBFBFF 		.word	-263173
 2372              		.cfi_endproc
 2373              	.LFE35:
 2374              		.size	CySysWdtClearInterrupt, .-CySysWdtClearInterrupt
 2375              		.section	.text.CySysWdtResetCounters,"ax",%progbits
 2376              		.align	1
 2377              		.global	CySysWdtResetCounters
 2378              		.code	16
 2379              		.thumb_func
 2380              		.type	CySysWdtResetCounters, %function
 2381              	CySysWdtResetCounters:
 2382              	.LFB36:
1569:Generated_Source\PSoC4/CyLFClk.c ****         /* Set new WDT reset value */
 2383              		.loc 2 1569 0
 2384              		.cfi_startproc
 2385              		@ args = 0, pretend = 0, frame = 0
 2386              		@ frame_needed = 0, uses_anonymous_args = 0
 2387              		@ link register save eliminated.
 2388              	.LVL196:
1571:Generated_Source\PSoC4/CyLFClk.c **** 
 2389              		.loc 2 1571 0
 2390 0000 044B     		ldr	r3, .L252
 2391 0002 054A     		ldr	r2, .L252+4
 2392 0004 1968     		ldr	r1, [r3]
 2393 0006 1040     		ands	r0, r2
 2394              	.LVL197:
 2395 0008 0843     		orrs	r0, r1
 2396 000a 1860     		str	r0, [r3]
 2397              	.L250:
1573:Generated_Source\PSoC4/CyLFClk.c ****         {
 2398              		.loc 2 1573 0 discriminator 1
 2399 000c 1968     		ldr	r1, [r3]
 2400 000e 1142     		tst	r1, r2
 2401 0010 FCD1     		bne	.L250
1577:Generated_Source\PSoC4/CyLFClk.c **** 
 2402              		.loc 2 1577 0
 2403              		@ sp needed
 2404 0012 7047     		bx	lr
 2405              	.L253:
 2406              		.align	2
 2407              	.L252:
 2408 0014 10020B40 		.word	1074463248
 2409 0018 08080800 		.word	526344
 2410              		.cfi_endproc
 2411              	.LFE36:
 2412              		.size	CySysWdtResetCounters, .-CySysWdtResetCounters
 2413              		.section	.text.CySysWdtSetInterruptCallback,"ax",%progbits
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 94


 2414              		.align	1
 2415              		.global	CySysWdtSetInterruptCallback
 2416              		.code	16
 2417              		.thumb_func
 2418              		.type	CySysWdtSetInterruptCallback, %function
 2419              	CySysWdtSetInterruptCallback:
 2420              	.LFB37:
1595:Generated_Source\PSoC4/CyLFClk.c ****         cyWdtCallback prevCallback = (void *)0;
 2421              		.loc 2 1595 0
 2422              		.cfi_startproc
 2423              		@ args = 0, pretend = 0, frame = 0
 2424              		@ frame_needed = 0, uses_anonymous_args = 0
 2425              		@ link register save eliminated.
 2426              	.LVL198:
1596:Generated_Source\PSoC4/CyLFClk.c **** 
 2427              		.loc 2 1596 0
 2428 0000 0022     		movs	r2, #0
1598:Generated_Source\PSoC4/CyLFClk.c ****         {
 2429              		.loc 2 1598 0
 2430 0002 0228     		cmp	r0, #2
 2431 0004 04D8     		bhi	.L255
1600:Generated_Source\PSoC4/CyLFClk.c ****             cySysWdtCallback[counterNum] = function;
 2432              		.loc 2 1600 0
 2433 0006 034B     		ldr	r3, .L257
 2434 0008 8000     		lsls	r0, r0, #2
 2435              	.LVL199:
 2436 000a 1B18     		adds	r3, r3, r0
 2437 000c 9A69     		ldr	r2, [r3, #24]
 2438              	.LVL200:
1601:Generated_Source\PSoC4/CyLFClk.c ****         }
 2439              		.loc 2 1601 0
 2440 000e 9961     		str	r1, [r3, #24]
 2441              	.LVL201:
 2442              	.L255:
1609:Generated_Source\PSoC4/CyLFClk.c **** 
 2443              		.loc 2 1609 0
 2444 0010 1000     		movs	r0, r2
 2445              		@ sp needed
 2446 0012 7047     		bx	lr
 2447              	.L258:
 2448              		.align	2
 2449              	.L257:
 2450 0014 00000000 		.word	.LANCHOR0
 2451              		.cfi_endproc
 2452              	.LFE37:
 2453              		.size	CySysWdtSetInterruptCallback, .-CySysWdtSetInterruptCallback
 2454              		.section	.text.CySysWdtGetInterruptCallback,"ax",%progbits
 2455              		.align	1
 2456              		.global	CySysWdtGetInterruptCallback
 2457              		.code	16
 2458              		.thumb_func
 2459              		.type	CySysWdtGetInterruptCallback, %function
 2460              	CySysWdtGetInterruptCallback:
 2461              	.LFB38:
1625:Generated_Source\PSoC4/CyLFClk.c ****         cyWdtCallback retCallback = (void *)0;
 2462              		.loc 2 1625 0
 2463              		.cfi_startproc
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 95


 2464              		@ args = 0, pretend = 0, frame = 0
 2465              		@ frame_needed = 0, uses_anonymous_args = 0
 2466              		@ link register save eliminated.
 2467              	.LVL202:
1626:Generated_Source\PSoC4/CyLFClk.c **** 
 2468              		.loc 2 1626 0
 2469 0000 0023     		movs	r3, #0
1628:Generated_Source\PSoC4/CyLFClk.c ****         {
 2470              		.loc 2 1628 0
 2471 0002 0228     		cmp	r0, #2
 2472 0004 03D8     		bhi	.L260
1630:Generated_Source\PSoC4/CyLFClk.c ****         }
 2473              		.loc 2 1630 0
 2474 0006 034B     		ldr	r3, .L262
 2475 0008 8000     		lsls	r0, r0, #2
 2476              	.LVL203:
 2477 000a 1818     		adds	r0, r3, r0
 2478 000c 8369     		ldr	r3, [r0, #24]
 2479              	.LVL204:
 2480              	.L260:
1638:Generated_Source\PSoC4/CyLFClk.c **** 
 2481              		.loc 2 1638 0
 2482 000e 1800     		movs	r0, r3
 2483              		@ sp needed
 2484 0010 7047     		bx	lr
 2485              	.L263:
 2486 0012 C046     		.align	2
 2487              	.L262:
 2488 0014 00000000 		.word	.LANCHOR0
 2489              		.cfi_endproc
 2490              	.LFE38:
 2491              		.size	CySysWdtGetInterruptCallback, .-CySysWdtGetInterruptCallback
 2492              		.section	.text.CySysWdtEnableCounterIsr,"ax",%progbits
 2493              		.align	1
 2494              		.global	CySysWdtEnableCounterIsr
 2495              		.code	16
 2496              		.thumb_func
 2497              		.type	CySysWdtEnableCounterIsr, %function
 2498              	CySysWdtEnableCounterIsr:
 2499              	.LFB39:
1654:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum <= CY_SYS_WDT_COUNTER2)
 2500              		.loc 2 1654 0
 2501              		.cfi_startproc
 2502              		@ args = 0, pretend = 0, frame = 0
 2503              		@ frame_needed = 0, uses_anonymous_args = 0
 2504              		@ link register save eliminated.
 2505              	.LVL205:
1655:Generated_Source\PSoC4/CyLFClk.c ****         {
 2506              		.loc 2 1655 0
 2507 0000 0228     		cmp	r0, #2
 2508 0002 0AD8     		bhi	.L264
1657:Generated_Source\PSoC4/CyLFClk.c ****             wdtIsrMask |= counterIntMaskTbl[counterNum];
 2509              		.loc 2 1657 0
 2510 0004 054B     		ldr	r3, .L266
 2511 0006 8000     		lsls	r0, r0, #2
 2512              	.LVL206:
 2513 0008 C158     		ldr	r1, [r0, r3]
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 96


 2514 000a 054B     		ldr	r3, .L266+4
 2515 000c 5A6A     		ldr	r2, [r3, #36]
 2516 000e 8A43     		bics	r2, r1
 2517 0010 5A62     		str	r2, [r3, #36]
1658:Generated_Source\PSoC4/CyLFClk.c ****         }
 2518              		.loc 2 1658 0
 2519 0012 044A     		ldr	r2, .L266+8
 2520 0014 5368     		ldr	r3, [r2, #4]
 2521 0016 0B43     		orrs	r3, r1
 2522 0018 5360     		str	r3, [r2, #4]
 2523              	.L264:
1664:Generated_Source\PSoC4/CyLFClk.c **** 
 2524              		.loc 2 1664 0
 2525              		@ sp needed
 2526 001a 7047     		bx	lr
 2527              	.L267:
 2528              		.align	2
 2529              	.L266:
 2530 001c 00000000 		.word	.LANCHOR2
 2531 0020 00000000 		.word	.LANCHOR0
 2532 0024 00000000 		.word	.LANCHOR1
 2533              		.cfi_endproc
 2534              	.LFE39:
 2535              		.size	CySysWdtEnableCounterIsr, .-CySysWdtEnableCounterIsr
 2536              		.section	.text.CySysWdtDisableCounterIsr,"ax",%progbits
 2537              		.align	1
 2538              		.global	CySysWdtDisableCounterIsr
 2539              		.code	16
 2540              		.thumb_func
 2541              		.type	CySysWdtDisableCounterIsr, %function
 2542              	CySysWdtDisableCounterIsr:
 2543              	.LFB40:
1677:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum <= CY_SYS_WDT_COUNTER2)
 2544              		.loc 2 1677 0
 2545              		.cfi_startproc
 2546              		@ args = 0, pretend = 0, frame = 0
 2547              		@ frame_needed = 0, uses_anonymous_args = 0
 2548              		@ link register save eliminated.
 2549              	.LVL207:
1678:Generated_Source\PSoC4/CyLFClk.c ****         {
 2550              		.loc 2 1678 0
 2551 0000 0228     		cmp	r0, #2
 2552 0002 06D8     		bhi	.L268
1680:Generated_Source\PSoC4/CyLFClk.c ****         }
 2553              		.loc 2 1680 0
 2554 0004 034A     		ldr	r2, .L270
 2555 0006 0449     		ldr	r1, .L270+4
 2556 0008 8000     		lsls	r0, r0, #2
 2557              	.LVL208:
 2558 000a 5368     		ldr	r3, [r2, #4]
 2559 000c 4158     		ldr	r1, [r0, r1]
 2560 000e 8B43     		bics	r3, r1
 2561 0010 5360     		str	r3, [r2, #4]
 2562              	.L268:
1686:Generated_Source\PSoC4/CyLFClk.c **** 
 2563              		.loc 2 1686 0
 2564              		@ sp needed
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 97


 2565 0012 7047     		bx	lr
 2566              	.L271:
 2567              		.align	2
 2568              	.L270:
 2569 0014 00000000 		.word	.LANCHOR1
 2570 0018 00000000 		.word	.LANCHOR2
 2571              		.cfi_endproc
 2572              	.LFE40:
 2573              		.size	CySysWdtDisableCounterIsr, .-CySysWdtDisableCounterIsr
 2574              		.section	.text.CySysWdtIsr,"ax",%progbits
 2575              		.align	1
 2576              		.global	CySysWdtIsr
 2577              		.code	16
 2578              		.thumb_func
 2579              		.type	CySysWdtIsr, %function
 2580              	CySysWdtIsr:
 2581              	.LFB41:
1710:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_WDT_COUNTER0_INT & CY_SYS_WDT_CONTROL_REG))
 2582              		.loc 2 1710 0
 2583              		.cfi_startproc
 2584              		@ args = 0, pretend = 0, frame = 0
 2585              		@ frame_needed = 0, uses_anonymous_args = 0
1711:Generated_Source\PSoC4/CyLFClk.c ****         {
 2586              		.loc 2 1711 0
 2587 0000 0422     		movs	r2, #4
1710:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_WDT_COUNTER0_INT & CY_SYS_WDT_CONTROL_REG))
 2588              		.loc 2 1710 0
 2589 0002 70B5     		push	{r4, r5, r6, lr}
 2590              		.cfi_def_cfa_offset 16
 2591              		.cfi_offset 4, -16
 2592              		.cfi_offset 5, -12
 2593              		.cfi_offset 6, -8
 2594              		.cfi_offset 14, -4
1711:Generated_Source\PSoC4/CyLFClk.c ****         {
 2595              		.loc 2 1711 0
 2596 0004 224C     		ldr	r4, .L304
 2597 0006 2368     		ldr	r3, [r4]
 2598 0008 1342     		tst	r3, r2
 2599 000a 13D0     		beq	.L273
1713:Generated_Source\PSoC4/CyLFClk.c ****             {
 2600              		.loc 2 1713 0
 2601 000c 2149     		ldr	r1, .L304+4
 2602 000e 4B68     		ldr	r3, [r1, #4]
 2603 0010 1342     		tst	r3, r2
 2604 0012 0CD0     		beq	.L275
1715:Generated_Source\PSoC4/CyLFClk.c ****                 disableServicedIsr  &= ~CY_SYS_WDT_COUNTER0_INT;
 2605              		.loc 2 1715 0
 2606 0014 204B     		ldr	r3, .L304+8
 2607 0016 5D6A     		ldr	r5, [r3, #36]
 2608 0018 4868     		ldr	r0, [r1, #4]
 2609 001a 1540     		ands	r5, r2
 2610 001c A843     		bics	r0, r5
 2611 001e 4860     		str	r0, [r1, #4]
1716:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysWdtCallback[CY_SYS_WDT_COUNTER0] != (void *) 0)
 2612              		.loc 2 1716 0
 2613 0020 596A     		ldr	r1, [r3, #36]
 2614 0022 9143     		bics	r1, r2
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 98


 2615 0024 5962     		str	r1, [r3, #36]
1717:Generated_Source\PSoC4/CyLFClk.c ****                 {
 2616              		.loc 2 1717 0
 2617 0026 9B69     		ldr	r3, [r3, #24]
 2618 0028 002B     		cmp	r3, #0
 2619 002a 00D0     		beq	.L275
1719:Generated_Source\PSoC4/CyLFClk.c ****                 }
 2620              		.loc 2 1719 0
 2621 002c 9847     		blx	r3
 2622              	.LVL209:
 2623              	.L275:
1722:Generated_Source\PSoC4/CyLFClk.c ****         }
 2624              		.loc 2 1722 0
 2625 002e 0420     		movs	r0, #4
 2626 0030 FFF7FEFF 		bl	CySysWdtClearInterrupt
 2627              	.LVL210:
 2628              	.L273:
1725:Generated_Source\PSoC4/CyLFClk.c ****         {
 2629              		.loc 2 1725 0
 2630 0034 8023     		movs	r3, #128
 2631 0036 2268     		ldr	r2, [r4]
 2632 0038 DB00     		lsls	r3, r3, #3
 2633 003a 1A42     		tst	r2, r3
 2634 003c 15D0     		beq	.L277
1727:Generated_Source\PSoC4/CyLFClk.c ****             {
 2635              		.loc 2 1727 0
 2636 003e 1549     		ldr	r1, .L304+4
 2637 0040 4A68     		ldr	r2, [r1, #4]
 2638 0042 1A42     		tst	r2, r3
 2639 0044 0DD0     		beq	.L279
1729:Generated_Source\PSoC4/CyLFClk.c ****                 disableServicedIsr  &= ~CY_SYS_WDT_COUNTER1_INT;
 2640              		.loc 2 1729 0
 2641 0046 144A     		ldr	r2, .L304+8
 2642 0048 556A     		ldr	r5, [r2, #36]
 2643 004a 4868     		ldr	r0, [r1, #4]
 2644 004c 2B40     		ands	r3, r5
 2645 004e 9843     		bics	r0, r3
 2646 0050 4860     		str	r0, [r1, #4]
1730:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysWdtCallback[CY_SYS_WDT_COUNTER1] != (void *) 0)
 2647              		.loc 2 1730 0
 2648 0052 516A     		ldr	r1, [r2, #36]
 2649 0054 114B     		ldr	r3, .L304+12
 2650 0056 0B40     		ands	r3, r1
 2651 0058 5362     		str	r3, [r2, #36]
1731:Generated_Source\PSoC4/CyLFClk.c ****                 {
 2652              		.loc 2 1731 0
 2653 005a D369     		ldr	r3, [r2, #28]
 2654 005c 002B     		cmp	r3, #0
 2655 005e 00D0     		beq	.L279
1733:Generated_Source\PSoC4/CyLFClk.c ****                 }
 2656              		.loc 2 1733 0
 2657 0060 9847     		blx	r3
 2658              	.LVL211:
 2659              	.L279:
1736:Generated_Source\PSoC4/CyLFClk.c ****         }
 2660              		.loc 2 1736 0
 2661 0062 8020     		movs	r0, #128
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 99


 2662 0064 C000     		lsls	r0, r0, #3
 2663 0066 FFF7FEFF 		bl	CySysWdtClearInterrupt
 2664              	.LVL212:
 2665              	.L277:
1739:Generated_Source\PSoC4/CyLFClk.c ****         {
 2666              		.loc 2 1739 0
 2667 006a 8023     		movs	r3, #128
 2668 006c 2268     		ldr	r2, [r4]
 2669 006e DB02     		lsls	r3, r3, #11
 2670 0070 1A42     		tst	r2, r3
 2671 0072 0CD0     		beq	.L272
1741:Generated_Source\PSoC4/CyLFClk.c ****             {
 2672              		.loc 2 1741 0
 2673 0074 074A     		ldr	r2, .L304+4
 2674 0076 5268     		ldr	r2, [r2, #4]
 2675 0078 1A42     		tst	r2, r3
 2676 007a 04D0     		beq	.L282
1743:Generated_Source\PSoC4/CyLFClk.c ****                 {
 2677              		.loc 2 1743 0
 2678 007c 064B     		ldr	r3, .L304+8
 2679 007e 1B6A     		ldr	r3, [r3, #32]
 2680 0080 002B     		cmp	r3, #0
 2681 0082 00D0     		beq	.L282
1745:Generated_Source\PSoC4/CyLFClk.c ****                 }
 2682              		.loc 2 1745 0
 2683 0084 9847     		blx	r3
 2684              	.LVL213:
 2685              	.L282:
1748:Generated_Source\PSoC4/CyLFClk.c ****         }
 2686              		.loc 2 1748 0
 2687 0086 8020     		movs	r0, #128
 2688 0088 C002     		lsls	r0, r0, #11
 2689 008a FFF7FEFF 		bl	CySysWdtClearInterrupt
 2690              	.LVL214:
 2691              	.L272:
1750:Generated_Source\PSoC4/CyLFClk.c **** 
 2692              		.loc 2 1750 0
 2693              		@ sp needed
 2694 008e 70BD     		pop	{r4, r5, r6, pc}
 2695              	.L305:
 2696              		.align	2
 2697              	.L304:
 2698 0090 10020B40 		.word	1074463248
 2699 0094 00000000 		.word	.LANCHOR1
 2700 0098 00000000 		.word	.LANCHOR0
 2701 009c FFFBFFFF 		.word	-1025
 2702              		.cfi_endproc
 2703              	.LFE41:
 2704              		.size	CySysWdtIsr, .-CySysWdtIsr
 2705              		.section	.text.CySysWatchdogFeed,"ax",%progbits
 2706              		.align	1
 2707              		.global	CySysWatchdogFeed
 2708              		.code	16
 2709              		.thumb_func
 2710              		.type	CySysWatchdogFeed, %function
 2711              	CySysWatchdogFeed:
 2712              	.LFB42:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 100


1775:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum == CY_SYS_WDT_COUNTER0)
 2713              		.loc 2 1775 0
 2714              		.cfi_startproc
 2715              		@ args = 0, pretend = 0, frame = 0
 2716              		@ frame_needed = 0, uses_anonymous_args = 0
 2717              	.LVL215:
 2718 0000 10B5     		push	{r4, lr}
 2719              		.cfi_def_cfa_offset 8
 2720              		.cfi_offset 4, -8
 2721              		.cfi_offset 14, -4
1775:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum == CY_SYS_WDT_COUNTER0)
 2722              		.loc 2 1775 0
 2723 0002 041E     		subs	r4, r0, #0
1776:Generated_Source\PSoC4/CyLFClk.c ****         {
 2724              		.loc 2 1776 0
 2725 0004 0FD1     		bne	.L307
1778:Generated_Source\PSoC4/CyLFClk.c ****             {
 2726              		.loc 2 1778 0
 2727 0006 FFF7FEFF 		bl	CySysWdtGetMode
 2728              	.LVL216:
 2729 000a 0328     		cmp	r0, #3
 2730 000c 01D1     		bne	.L308
1780:Generated_Source\PSoC4/CyLFClk.c ****             }
 2731              		.loc 2 1780 0
 2732 000e 0130     		adds	r0, r0, #1
 2733 0010 1AE0     		b	.L313
 2734              	.L308:
1782:Generated_Source\PSoC4/CyLFClk.c ****             {
 2735              		.loc 2 1782 0
 2736 0012 2000     		movs	r0, r4
 2737 0014 FFF7FEFF 		bl	CySysWdtGetMode
 2738              	.LVL217:
 2739 0018 0228     		cmp	r0, #2
 2740 001a 17D1     		bne	.L306
1784:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER0_INT);
 2741              		.loc 2 1784 0
 2742 001c 0630     		adds	r0, r0, #6
 2743 001e FFF7FEFF 		bl	CySysWdtResetCounters
 2744              	.LVL218:
1785:Generated_Source\PSoC4/CyLFClk.c ****             }
 2745              		.loc 2 1785 0
 2746 0022 0420     		movs	r0, #4
 2747 0024 10E0     		b	.L313
 2748              	.LVL219:
 2749              	.L307:
1792:Generated_Source\PSoC4/CyLFClk.c ****         {
 2750              		.loc 2 1792 0
 2751 0026 0128     		cmp	r0, #1
 2752 0028 10D1     		bne	.L306
1794:Generated_Source\PSoC4/CyLFClk.c ****             {
 2753              		.loc 2 1794 0
 2754 002a FFF7FEFF 		bl	CySysWdtGetMode
 2755              	.LVL220:
 2756 002e 0328     		cmp	r0, #3
 2757 0030 08D0     		beq	.L314
1798:Generated_Source\PSoC4/CyLFClk.c ****             {
 2758              		.loc 2 1798 0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 101


 2759 0032 2000     		movs	r0, r4
 2760 0034 FFF7FEFF 		bl	CySysWdtGetMode
 2761              	.LVL221:
 2762 0038 0228     		cmp	r0, #2
 2763 003a 07D1     		bne	.L306
1800:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER1_INT);
 2764              		.loc 2 1800 0
 2765 003c 8020     		movs	r0, #128
 2766 003e 0001     		lsls	r0, r0, #4
 2767 0040 FFF7FEFF 		bl	CySysWdtResetCounters
 2768              	.LVL222:
 2769              	.L314:
1801:Generated_Source\PSoC4/CyLFClk.c ****             }
 2770              		.loc 2 1801 0
 2771 0044 8020     		movs	r0, #128
 2772 0046 C000     		lsls	r0, r0, #3
 2773              	.L313:
 2774 0048 FFF7FEFF 		bl	CySysWdtClearInterrupt
 2775              	.LVL223:
 2776              	.L306:
1812:Generated_Source\PSoC4/CyLFClk.c **** 
 2777              		.loc 2 1812 0
 2778              		@ sp needed
 2779              	.LVL224:
 2780 004c 10BD     		pop	{r4, pc}
 2781              		.cfi_endproc
 2782              	.LFE42:
 2783              		.size	CySysWatchdogFeed, .-CySysWatchdogFeed
 2784              		.section	.text.CySysTimerDelayUntilMatch,"ax",%progbits
 2785              		.align	1
 2786              		.global	CySysTimerDelayUntilMatch
 2787              		.code	16
 2788              		.thumb_func
 2789              		.type	CySysTimerDelayUntilMatch, %function
 2790              	CySysTimerDelayUntilMatch:
 2791              	.LFB46:
1904:Generated_Source\PSoC4/CyLFClk.c **** 
1905:Generated_Source\PSoC4/CyLFClk.c **** #else
1906:Generated_Source\PSoC4/CyLFClk.c **** 
1907:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1908:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetEnabledStatus
1909:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1910:Generated_Source\PSoC4/CyLFClk.c ****     *
1911:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the enabled status of the WDT counter.
1912:Generated_Source\PSoC4/CyLFClk.c ****     *
1913:Generated_Source\PSoC4/CyLFClk.c ****     * \return The status of the WDT counter:
1914:Generated_Source\PSoC4/CyLFClk.c ****     * \return 0 - Counter is disabled
1915:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 - Counter is enabled
1916:Generated_Source\PSoC4/CyLFClk.c ****     *
1917:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1918:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetEnabledStatus(void)
1919:Generated_Source\PSoC4/CyLFClk.c ****     {
1920:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_DISABLE_KEY_REG == CY_SYS_WDT_KEY) ? (uint32) 0u : (uint32) 1u);
1921:Generated_Source\PSoC4/CyLFClk.c ****     }
1922:Generated_Source\PSoC4/CyLFClk.c **** 
1923:Generated_Source\PSoC4/CyLFClk.c **** 
1924:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 102


1925:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtEnable
1926:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1927:Generated_Source\PSoC4/CyLFClk.c ****     *
1928:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1929:Generated_Source\PSoC4/CyLFClk.c ****     * Enables watchdog timer reset generation.
1930:Generated_Source\PSoC4/CyLFClk.c ****     *
1931:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtClearInterrupt() feeds the watchdog. Two unserviced interrupts lead 
1932:Generated_Source\PSoC4/CyLFClk.c ****     * to a system reset (i.e. at the third match).
1933:Generated_Source\PSoC4/CyLFClk.c ****     *
1934:Generated_Source\PSoC4/CyLFClk.c ****     * ILO is enabled by the hardware once WDT is started.
1935:Generated_Source\PSoC4/CyLFClk.c ****     *
1936:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1937:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtEnable(void)
1938:Generated_Source\PSoC4/CyLFClk.c ****     {
1939:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_DISABLE_KEY_REG = 0u;
1940:Generated_Source\PSoC4/CyLFClk.c ****     }
1941:Generated_Source\PSoC4/CyLFClk.c **** 
1942:Generated_Source\PSoC4/CyLFClk.c **** 
1943:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1944:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtDisable
1945:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1946:Generated_Source\PSoC4/CyLFClk.c ****     *
1947:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Disables the WDT reset generation.
1948:Generated_Source\PSoC4/CyLFClk.c ****     *
1949:Generated_Source\PSoC4/CyLFClk.c ****     * This function unlocks the ENABLE bit in the CLK_ILO_CONFIG registers and
1950:Generated_Source\PSoC4/CyLFClk.c ****     * enables the user to disable ILO.
1951:Generated_Source\PSoC4/CyLFClk.c ****     *
1952:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1953:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtDisable(void)
1954:Generated_Source\PSoC4/CyLFClk.c ****     {
1955:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_DISABLE_KEY_REG = CY_SYS_WDT_KEY;
1956:Generated_Source\PSoC4/CyLFClk.c ****     }
1957:Generated_Source\PSoC4/CyLFClk.c **** 
1958:Generated_Source\PSoC4/CyLFClk.c **** 
1959:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1960:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetMatch
1961:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1962:Generated_Source\PSoC4/CyLFClk.c ****     *
1963:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the WDT counter match comparison value.
1964:Generated_Source\PSoC4/CyLFClk.c ****     *
1965:Generated_Source\PSoC4/CyLFClk.c ****     * \param match Valid range [0-65535]. The value to be used to match against 
1966:Generated_Source\PSoC4/CyLFClk.c ****     * the counter.
1967:Generated_Source\PSoC4/CyLFClk.c ****     *
1968:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1969:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetMatch(uint32 match)
1970:Generated_Source\PSoC4/CyLFClk.c ****     {
1971:Generated_Source\PSoC4/CyLFClk.c ****         match &= CY_SYS_WDT_MATCH_MASK;
1972:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_MATCH_REG = (CY_SYS_WDT_MATCH_REG & (uint32)(~CY_SYS_WDT_MATCH_MASK)) | match;
1973:Generated_Source\PSoC4/CyLFClk.c ****     }
1974:Generated_Source\PSoC4/CyLFClk.c **** 
1975:Generated_Source\PSoC4/CyLFClk.c **** 
1976:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1977:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetMatch
1978:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1979:Generated_Source\PSoC4/CyLFClk.c ****     *
1980:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the WDT counter match comparison value.
1981:Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 103


1982:Generated_Source\PSoC4/CyLFClk.c ****     * \return The counter match value.
1983:Generated_Source\PSoC4/CyLFClk.c ****     *
1984:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1985:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetMatch(void)
1986:Generated_Source\PSoC4/CyLFClk.c ****     {
1987:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WDT_MATCH_REG & CY_SYS_WDT_MATCH_MASK);
1988:Generated_Source\PSoC4/CyLFClk.c ****     }
1989:Generated_Source\PSoC4/CyLFClk.c **** 
1990:Generated_Source\PSoC4/CyLFClk.c **** 
1991:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1992:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetCount
1993:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1994:Generated_Source\PSoC4/CyLFClk.c ****     *
1995:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the current WDT counter value.
1996:Generated_Source\PSoC4/CyLFClk.c ****     *
1997:Generated_Source\PSoC4/CyLFClk.c ****     * \return A live counter value.
1998:Generated_Source\PSoC4/CyLFClk.c ****     *
1999:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2000:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetCount(void)
2001:Generated_Source\PSoC4/CyLFClk.c ****     {
2002:Generated_Source\PSoC4/CyLFClk.c ****         return ((uint32)CY_SYS_WDT_COUNTER_REG);
2003:Generated_Source\PSoC4/CyLFClk.c ****     }
2004:Generated_Source\PSoC4/CyLFClk.c **** 
2005:Generated_Source\PSoC4/CyLFClk.c **** 
2006:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2007:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetIgnoreBits
2008:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2009:Generated_Source\PSoC4/CyLFClk.c ****     *
2010:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2011:Generated_Source\PSoC4/CyLFClk.c ****     * Configures the number of the MSB bits of the watchdog timer that are not
2012:Generated_Source\PSoC4/CyLFClk.c ****     * checked against the match.
2013:Generated_Source\PSoC4/CyLFClk.c ****     *
2014:Generated_Source\PSoC4/CyLFClk.c ****     * \param bitsNum Valid range [0-15]. The number of the MSB bits.
2015:Generated_Source\PSoC4/CyLFClk.c ****     *
2016:Generated_Source\PSoC4/CyLFClk.c ****     * \details The value of bitsNum controls the time-to-reset of the watchdog
2017:Generated_Source\PSoC4/CyLFClk.c ****     * (which happens after 3 successive matches).
2018:Generated_Source\PSoC4/CyLFClk.c ****     *
2019:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2020:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetIgnoreBits(uint32 bitsNum)
2021:Generated_Source\PSoC4/CyLFClk.c ****     {
2022:Generated_Source\PSoC4/CyLFClk.c ****         bitsNum = ((uint32)(bitsNum << CY_SYS_WDT_IGNORE_BITS_SHIFT) & CY_SYS_WDT_IGNORE_BITS_MASK)
2023:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_MATCH_REG = (CY_SYS_WDT_MATCH_REG & (uint32)(~CY_SYS_WDT_IGNORE_BITS_MASK)) | bi
2024:Generated_Source\PSoC4/CyLFClk.c ****     }
2025:Generated_Source\PSoC4/CyLFClk.c **** 
2026:Generated_Source\PSoC4/CyLFClk.c **** 
2027:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2028:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetIgnoreBits
2029:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2030:Generated_Source\PSoC4/CyLFClk.c ****     *
2031:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2032:Generated_Source\PSoC4/CyLFClk.c ****     * Reads the number of the  MSB bits of the watchdog timer that are not
2033:Generated_Source\PSoC4/CyLFClk.c ****     * checked against the match.
2034:Generated_Source\PSoC4/CyLFClk.c ****     *
2035:Generated_Source\PSoC4/CyLFClk.c ****     * \return The number of the MSB bits.
2036:Generated_Source\PSoC4/CyLFClk.c ****     *
2037:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2038:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetIgnoreBits(void)
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 104


2039:Generated_Source\PSoC4/CyLFClk.c ****     {
2040:Generated_Source\PSoC4/CyLFClk.c ****         return((uint32)((CY_SYS_WDT_MATCH_REG & CY_SYS_WDT_IGNORE_BITS_MASK) >> CY_SYS_WDT_IGNORE_B
2041:Generated_Source\PSoC4/CyLFClk.c ****     }
2042:Generated_Source\PSoC4/CyLFClk.c **** 
2043:Generated_Source\PSoC4/CyLFClk.c **** 
2044:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2045:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtClearInterrupt
2046:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2047:Generated_Source\PSoC4/CyLFClk.c ****     *
2048:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2049:Generated_Source\PSoC4/CyLFClk.c ****     * Feeds the watchdog.
2050:Generated_Source\PSoC4/CyLFClk.c ****     * Cleans the WDT match flag which is set every time the WDT counter reaches a 
2051:Generated_Source\PSoC4/CyLFClk.c ****     * WDT match value. Two unserviced interrupts lead to a system reset 
2052:Generated_Source\PSoC4/CyLFClk.c ****     * (i.e. at the third match).
2053:Generated_Source\PSoC4/CyLFClk.c ****     *
2054:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2055:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtClearInterrupt(void)
2056:Generated_Source\PSoC4/CyLFClk.c ****     {
2057:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_REG |= CY_SYS_WDT_LOWER_BIT_MASK;
2058:Generated_Source\PSoC4/CyLFClk.c ****     }
2059:Generated_Source\PSoC4/CyLFClk.c **** 
2060:Generated_Source\PSoC4/CyLFClk.c **** 
2061:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2062:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtMaskInterrupt
2063:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2064:Generated_Source\PSoC4/CyLFClk.c ****     *
2065:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2066:Generated_Source\PSoC4/CyLFClk.c ****     * After masking interrupts from WDT, they are not passed to CPU.
2067:Generated_Source\PSoC4/CyLFClk.c ****     * This function does not disable WDT reset generation.
2068:Generated_Source\PSoC4/CyLFClk.c ****     *
2069:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2070:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtMaskInterrupt(void)
2071:Generated_Source\PSoC4/CyLFClk.c ****     {
2072:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_MASK_REG &= (uint32)(~ (uint32)CY_SYS_WDT_LOWER_BIT_MASK);
2073:Generated_Source\PSoC4/CyLFClk.c ****     }
2074:Generated_Source\PSoC4/CyLFClk.c **** 
2075:Generated_Source\PSoC4/CyLFClk.c **** 
2076:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2077:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtUnmaskInterrupt
2078:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2079:Generated_Source\PSoC4/CyLFClk.c ****     *
2080:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2081:Generated_Source\PSoC4/CyLFClk.c ****     * After unmasking interrupts from WDT, they are passed to CPU.
2082:Generated_Source\PSoC4/CyLFClk.c ****     * This function does not impact the reset generation.
2083:Generated_Source\PSoC4/CyLFClk.c ****     *
2084:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2085:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtUnmaskInterrupt(void)
2086:Generated_Source\PSoC4/CyLFClk.c ****     {
2087:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_MASK_REG |= CY_SYS_WDT_LOWER_BIT_MASK;
2088:Generated_Source\PSoC4/CyLFClk.c ****     }
2089:Generated_Source\PSoC4/CyLFClk.c **** 
2090:Generated_Source\PSoC4/CyLFClk.c **** 
2091:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2092:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetIsrCallback
2093:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2094:Generated_Source\PSoC4/CyLFClk.c ****     *
2095:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 105


2096:Generated_Source\PSoC4/CyLFClk.c ****     * Sets the ISR callback function for the WDT counter
2097:Generated_Source\PSoC4/CyLFClk.c ****     *
2098:Generated_Source\PSoC4/CyLFClk.c ****     * \param function The pointer to the callback function.
2099:Generated_Source\PSoC4/CyLFClk.c ****     *
2100:Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to a previous callback function.
2101:Generated_Source\PSoC4/CyLFClk.c ****     *
2102:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2103:Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtSetInterruptCallback(cyWdtCallback function)
2104:Generated_Source\PSoC4/CyLFClk.c ****     {
2105:Generated_Source\PSoC4/CyLFClk.c ****         cyWdtCallback prevCallback = (void *)0;
2106:Generated_Source\PSoC4/CyLFClk.c **** 
2107:Generated_Source\PSoC4/CyLFClk.c ****         prevCallback = cySysWdtCallback;
2108:Generated_Source\PSoC4/CyLFClk.c ****         cySysWdtCallback = function;
2109:Generated_Source\PSoC4/CyLFClk.c **** 
2110:Generated_Source\PSoC4/CyLFClk.c ****         return(prevCallback);
2111:Generated_Source\PSoC4/CyLFClk.c ****     }
2112:Generated_Source\PSoC4/CyLFClk.c **** 
2113:Generated_Source\PSoC4/CyLFClk.c **** 
2114:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2115:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetIsrCallback
2116:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2117:Generated_Source\PSoC4/CyLFClk.c ****     *
2118:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2119:Generated_Source\PSoC4/CyLFClk.c ****     * Gets the ISR callback function for the WDT counter
2120:Generated_Source\PSoC4/CyLFClk.c ****     *
2121:Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to the callback function registered for WDT.
2122:Generated_Source\PSoC4/CyLFClk.c ****     *
2123:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2124:Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtGetInterruptCallback(void)
2125:Generated_Source\PSoC4/CyLFClk.c ****     {
2126:Generated_Source\PSoC4/CyLFClk.c ****         return(cySysWdtCallback);
2127:Generated_Source\PSoC4/CyLFClk.c ****     }
2128:Generated_Source\PSoC4/CyLFClk.c **** 
2129:Generated_Source\PSoC4/CyLFClk.c **** 
2130:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2131:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtIsr
2132:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2133:Generated_Source\PSoC4/CyLFClk.c ****     *
2134:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2135:Generated_Source\PSoC4/CyLFClk.c ****     * This is the handler of the WDT interrupt in CPU NVIC.
2136:Generated_Source\PSoC4/CyLFClk.c ****     *
2137:Generated_Source\PSoC4/CyLFClk.c ****     * The handler calls the respective callback functions configured by the user 
2138:Generated_Source\PSoC4/CyLFClk.c ****     * by using CySysWdtSetIsrCallback() API.
2139:Generated_Source\PSoC4/CyLFClk.c ****     *
2140:Generated_Source\PSoC4/CyLFClk.c ****     *
2141:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2142:Generated_Source\PSoC4/CyLFClk.c ****     * This function clears the WDT interrupt every time when it is called.
2143:Generated_Source\PSoC4/CyLFClk.c ****     * Reset after the 3rd interrupt does not happen if this function is registered
2144:Generated_Source\PSoC4/CyLFClk.c ****     * as the interrupt handler even if the "Watchdog with Interrupt" mode is
2145:Generated_Source\PSoC4/CyLFClk.c ****     * selected on the "Low Frequency Clocks" tab.
2146:Generated_Source\PSoC4/CyLFClk.c ****     *
2147:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2148:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtIsr(void)
2149:Generated_Source\PSoC4/CyLFClk.c ****     {
2150:Generated_Source\PSoC4/CyLFClk.c ****         if(cySysWdtCallback != (void *) 0)
2151:Generated_Source\PSoC4/CyLFClk.c ****         {
2152:Generated_Source\PSoC4/CyLFClk.c ****             (void)(cySysWdtCallback)();
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 106


2153:Generated_Source\PSoC4/CyLFClk.c ****         }
2154:Generated_Source\PSoC4/CyLFClk.c **** 
2155:Generated_Source\PSoC4/CyLFClk.c ****         CySysWdtClearInterrupt();
2156:Generated_Source\PSoC4/CyLFClk.c ****     }
2157:Generated_Source\PSoC4/CyLFClk.c **** 
2158:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2) */
2159:Generated_Source\PSoC4/CyLFClk.c **** 
2160:Generated_Source\PSoC4/CyLFClk.c **** 
2161:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
2162:Generated_Source\PSoC4/CyLFClk.c **** 
2163:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
2164:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkGetTimerSource
2165:Generated_Source\PSoC4/CyLFClk.c **** ********************************************************************************
2166:Generated_Source\PSoC4/CyLFClk.c **** *
2167:Generated_Source\PSoC4/CyLFClk.c **** * \brief Gets the clock source for the DeepSleep Timers.
2168:Generated_Source\PSoC4/CyLFClk.c **** *
2169:Generated_Source\PSoC4/CyLFClk.c **** * The function is applicable only for PSoC 4100S / PSoC Analog Coprocessor.
2170:Generated_Source\PSoC4/CyLFClk.c **** *
2171:Generated_Source\PSoC4/CyLFClk.c **** * \return The DeepSleep Timer source
2172:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_TIMER_SRC_ILO Internal Low Frequency (32 kHz) Oscillator (ILO)
2173:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_TIMER_SRC_WCO Low Frequency Watch Crystal Oscillator (WCO)
2174:Generated_Source\PSoC4/CyLFClk.c **** *
2175:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
2176:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkGetTimerSource(void)
2177:Generated_Source\PSoC4/CyLFClk.c ****     {
2178:Generated_Source\PSoC4/CyLFClk.c ****         uint32 timerSource;
2179:Generated_Source\PSoC4/CyLFClk.c ****         timerSource = CY_SYS_WCO_WDT_CONFIG_REG & CY_SYS_CLK_TIMER_SEL_MASK;
2180:Generated_Source\PSoC4/CyLFClk.c ****         return (timerSource);
2181:Generated_Source\PSoC4/CyLFClk.c ****     }    
2182:Generated_Source\PSoC4/CyLFClk.c **** 
2183:Generated_Source\PSoC4/CyLFClk.c **** 
2184:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
2185:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkSetTimerSource
2186:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
2187:Generated_Source\PSoC4/CyLFClk.c **** *
2188:Generated_Source\PSoC4/CyLFClk.c **** * \brief Sets the clock source for the DeepSleep Timers.
2189:Generated_Source\PSoC4/CyLFClk.c **** *
2190:Generated_Source\PSoC4/CyLFClk.c **** * The function is applicable only for PSoC 4100S / PSoC Analog Coprocessor 
2191:Generated_Source\PSoC4/CyLFClk.c **** * devices.
2192:Generated_Source\PSoC4/CyLFClk.c **** *
2193:Generated_Source\PSoC4/CyLFClk.c **** * \param source
2194:Generated_Source\PSoC4/CyLFClk.c **** *  CY_SYS_CLK_TIMER_SRC_ILO - Internal Low Frequency (32 kHz) Oscillator 
2195:Generated_Source\PSoC4/CyLFClk.c **** * (ILO).<br>
2196:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_TIMER_SRC_WCO - Low Frequency Watch Crystal Oscillator 
2197:Generated_Source\PSoC4/CyLFClk.c **** * (WCO).
2198:Generated_Source\PSoC4/CyLFClk.c **** *
2199:Generated_Source\PSoC4/CyLFClk.c **** * \details Both the current source and the new source must be running and stable 
2200:Generated_Source\PSoC4/CyLFClk.c **** * before calling this function.
2201:Generated_Source\PSoC4/CyLFClk.c **** *
2202:Generated_Source\PSoC4/CyLFClk.c **** * \warning DeepSleep Timer reset is required if Timer source was switched while 
2203:Generated_Source\PSoC4/CyLFClk.c **** * DeepSleep Timers were running. Call CySysTimerResetCounters() API after 
2204:Generated_Source\PSoC4/CyLFClk.c **** * Timer source switching.
2205:Generated_Source\PSoC4/CyLFClk.c **** * It is highly recommended to disable DeepSleep Timers before Timer source 
2206:Generated_Source\PSoC4/CyLFClk.c **** * switching. Changing the Timer source may change the functionality that uses 
2207:Generated_Source\PSoC4/CyLFClk.c **** * this Timers as clock source.
2208:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
2209:Generated_Source\PSoC4/CyLFClk.c ****     void CySysClkSetTimerSource(uint32 source)
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 107


2210:Generated_Source\PSoC4/CyLFClk.c ****     {
2211:Generated_Source\PSoC4/CyLFClk.c ****         uint8  interruptState;
2212:Generated_Source\PSoC4/CyLFClk.c **** 
2213:Generated_Source\PSoC4/CyLFClk.c ****         if (CySysClkGetTimerSource() != source)
2214:Generated_Source\PSoC4/CyLFClk.c ****         {
2215:Generated_Source\PSoC4/CyLFClk.c **** 
2216:Generated_Source\PSoC4/CyLFClk.c ****             /* Reset both _EN bits in WCO_WDT_CLKEN register */
2217:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CLKEN_REG &= ~CY_SYS_WCO_WDT_CLKEN_RESET_MASK;
2218:Generated_Source\PSoC4/CyLFClk.c ****             
2219:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait 4 new clock source-cycles for change to come into effect */
2220:Generated_Source\PSoC4/CyLFClk.c ****             CyDelayUs(CY_SYS_4TIMER_DELAY_US);
2221:Generated_Source\PSoC4/CyLFClk.c **** 
2222:Generated_Source\PSoC4/CyLFClk.c ****             interruptState = CyEnterCriticalSection();
2223:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = (CY_SYS_WCO_WDT_CONFIG_REG & (uint32)(~CY_SYS_CLK_TIMER_SEL
2224:Generated_Source\PSoC4/CyLFClk.c ****                                     (source & CY_SYS_CLK_TIMER_SEL_MASK);
2225:Generated_Source\PSoC4/CyLFClk.c ****             CyExitCriticalSection(interruptState);
2226:Generated_Source\PSoC4/CyLFClk.c ****         }
2227:Generated_Source\PSoC4/CyLFClk.c **** 
2228:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_CLKEN_REG = (CY_SYS_WCO_WDT_CLKEN_REG & (uint32)(~CY_SYS_WCO_WDT_CLKEN_RESET
2229:Generated_Source\PSoC4/CyLFClk.c ****                                     CY_SYS_SET_CURRENT_TIMER_SOURCE_BIT;
2230:Generated_Source\PSoC4/CyLFClk.c ****     }
2231:Generated_Source\PSoC4/CyLFClk.c **** 
2232:Generated_Source\PSoC4/CyLFClk.c **** 
2233:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2234:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetEnabledStatus
2235:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2236:Generated_Source\PSoC4/CyLFClk.c ****     *
2237:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the enabled status of one of the three DeepSleep Timer 
2238:Generated_Source\PSoC4/CyLFClk.c ****     * counters.
2239:Generated_Source\PSoC4/CyLFClk.c ****     *
2240:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2]. The number of the DeepSleep Timer 
2241:Generated_Source\PSoC4/CyLFClk.c ****     * counter.
2242:Generated_Source\PSoC4/CyLFClk.c ****     *
2243:Generated_Source\PSoC4/CyLFClk.c ****     * \return The status of the Timers counter:
2244:Generated_Source\PSoC4/CyLFClk.c ****     * \return 0 - If the Counter is disabled.
2245:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 - If the Counter is enabled.
2246:Generated_Source\PSoC4/CyLFClk.c ****     *
2247:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2248:Generated_Source\PSoC4/CyLFClk.c ****     * This function returns an actual DeepSleep Timer counter status from the 
2249:Generated_Source\PSoC4/CyLFClk.c ****     * status register. It may take up to 3 LFCLK cycles for the Timer status 
2250:Generated_Source\PSoC4/CyLFClk.c ****     * register to contain actual data after the Timer counter is enabled.
2251:Generated_Source\PSoC4/CyLFClk.c ****     *
2252:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2253:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetEnabledStatus(uint32 counterNum)
2254:Generated_Source\PSoC4/CyLFClk.c ****     {
2255:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(counterNum < CY_SYS_TIMER_COUNTERS_MAX);
2256:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WCO_WDT_CONTROL_REG >> ((CY_SYS_TIMER_CNT_SHIFT * counterNum) + 
2257:Generated_Source\PSoC4/CyLFClk.c ****                                                  CY_SYS_TIMER_CNT_STTS_SHIFT)) & 0x01u);
2258:Generated_Source\PSoC4/CyLFClk.c ****     }
2259:Generated_Source\PSoC4/CyLFClk.c **** 
2260:Generated_Source\PSoC4/CyLFClk.c **** 
2261:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2262:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetMode
2263:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2264:Generated_Source\PSoC4/CyLFClk.c ****     *
2265:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Writes the mode of one of the three DeepSleep Timer counters.
2266:Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 108


2267:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2]. The number of the DeepSleep Timer 
2268:Generated_Source\PSoC4/CyLFClk.c ****     * counter.
2269:Generated_Source\PSoC4/CyLFClk.c ****     *
2270:Generated_Source\PSoC4/CyLFClk.c ****     * \param mode
2271:Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_TIMER_MODE_NONE - Free running.<br>
2272:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_MODE_INT - The interrupt generated on match for counter 0
2273:Generated_Source\PSoC4/CyLFClk.c ****     * and 1, and on bit toggle for counter 2.
2274:Generated_Source\PSoC4/CyLFClk.c ****     *
2275:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2276:Generated_Source\PSoC4/CyLFClk.c ****     * DeepSleep Timer counter counterNum should be disabled to set a mode. 
2277:Generated_Source\PSoC4/CyLFClk.c ****     * Otherwise, this function call has no effect. If the specified counter is 
2278:Generated_Source\PSoC4/CyLFClk.c ****     * enabled, call the CySysTimerDisable() function with the corresponding 
2279:Generated_Source\PSoC4/CyLFClk.c ****     * parameter to disable the specified counter and wait for it to stop.
2280:Generated_Source\PSoC4/CyLFClk.c ****     *
2281:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2282:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerSetMode(uint32 counterNum, uint32 mode)
2283:Generated_Source\PSoC4/CyLFClk.c ****     {
2284:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
2285:Generated_Source\PSoC4/CyLFClk.c **** 
2286:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(counterNum < CY_SYS_TIMER_COUNTERS_MAX);
2287:Generated_Source\PSoC4/CyLFClk.c **** 
2288:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(mode <= CY_SYS_TIMER_MODE_MASK);
2289:Generated_Source\PSoC4/CyLFClk.c **** 
2290:Generated_Source\PSoC4/CyLFClk.c ****         if(0u == CySysTimerGetEnabledStatus(counterNum))
2291:Generated_Source\PSoC4/CyLFClk.c ****         {
2292:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WCO_WDT_CONFIG_REG &
2293:Generated_Source\PSoC4/CyLFClk.c ****                                 (uint32)~((uint32)(CY_SYS_TIMER_MODE_MASK << (counterNum * CY_SYS_T
2294:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= (uint32)((mode & CY_SYS_TIMER_MODE_MASK) << (counterNum * CY_SYS_TIME
2295:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = configRegValue;
2296:Generated_Source\PSoC4/CyLFClk.c ****         }
2297:Generated_Source\PSoC4/CyLFClk.c ****     }
2298:Generated_Source\PSoC4/CyLFClk.c **** 
2299:Generated_Source\PSoC4/CyLFClk.c **** 
2300:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2301:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetMode
2302:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2303:Generated_Source\PSoC4/CyLFClk.c ****     *
2304:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the mode of one of the three DeepSleep Timer counters.
2305:Generated_Source\PSoC4/CyLFClk.c ****     *
2306:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the Timer counter.
2307:Generated_Source\PSoC4/CyLFClk.c ****     *
2308:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mode of the counter. The same enumerated values as the mode 
2309:Generated_Source\PSoC4/CyLFClk.c ****     * parameter used in CySysTimerSetMode().
2310:Generated_Source\PSoC4/CyLFClk.c ****     *
2311:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2312:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetMode(uint32 counterNum)
2313:Generated_Source\PSoC4/CyLFClk.c ****     {
2314:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WCO_WDT_CONFIG_REG >> (counterNum * CY_SYS_TIMER_CNT_SHIFT)) & CY_SYS_TIMER
2315:Generated_Source\PSoC4/CyLFClk.c ****     }
2316:Generated_Source\PSoC4/CyLFClk.c **** 
2317:Generated_Source\PSoC4/CyLFClk.c **** 
2318:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2319:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetClearOnMatch
2320:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2321:Generated_Source\PSoC4/CyLFClk.c ****     *
2322:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the DeepSleep Timer counter "clear on match" setting.
2323:Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 109


2324:Generated_Source\PSoC4/CyLFClk.c ****     * If configured to "clear on match", the counter counts from 0 to MatchValue 
2325:Generated_Source\PSoC4/CyLFClk.c ****     * giving it a period of (MatchValue + 1).
2326:Generated_Source\PSoC4/CyLFClk.c ****     *
2327:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum
2328:Generated_Source\PSoC4/CyLFClk.c ****     * Valid range [0-1]. The number of the Timer counter. The match values are not
2329:Generated_Source\PSoC4/CyLFClk.c ****     * supported by counter 2.
2330:Generated_Source\PSoC4/CyLFClk.c ****     * \param enable 0 to disable appropriate counter <br>
2331:Generated_Source\PSoC4/CyLFClk.c ****     * 1 to enable appropriate counter
2332:Generated_Source\PSoC4/CyLFClk.c ****     *
2333:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2334:Generated_Source\PSoC4/CyLFClk.c ****     * Timer counter counterNum should be disabled. Otherwise this function call
2335:Generated_Source\PSoC4/CyLFClk.c ****     * has no effect. If the specified counter is enabled, call the CySysTimerDisable()
2336:Generated_Source\PSoC4/CyLFClk.c ****     * function with the corresponding parameter to disable the specified counter and
2337:Generated_Source\PSoC4/CyLFClk.c ****     * wait for it to stop. This may take up to three Timer source-cycles.
2338:Generated_Source\PSoC4/CyLFClk.c ****     *
2339:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2340:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerSetClearOnMatch(uint32 counterNum, uint32 enable)
2341:Generated_Source\PSoC4/CyLFClk.c ****     {
2342:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
2343:Generated_Source\PSoC4/CyLFClk.c **** 
2344:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_TIMER0) ||
2345:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_TIMER1));
2346:Generated_Source\PSoC4/CyLFClk.c **** 
2347:Generated_Source\PSoC4/CyLFClk.c ****         if(0u == CySysTimerGetEnabledStatus(counterNum))
2348:Generated_Source\PSoC4/CyLFClk.c ****         {
2349:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WCO_WDT_CONFIG_REG & (uint32)~((uint32)((uint32)1u << 
2350:Generated_Source\PSoC4/CyLFClk.c ****              ((counterNum * CY_SYS_TIMER_CNT_SHIFT) + CY_SYS_TIMER_CNT_MATCH_CLR_SHIFT)));
2351:Generated_Source\PSoC4/CyLFClk.c **** 
2352:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue
2353:Generated_Source\PSoC4/CyLFClk.c ****                 |= (uint32)(enable << ((counterNum * CY_SYS_TIMER_CNT_SHIFT) + CY_SYS_TIMER_CNT_MAT
2354:Generated_Source\PSoC4/CyLFClk.c **** 
2355:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = configRegValue;
2356:Generated_Source\PSoC4/CyLFClk.c ****         }
2357:Generated_Source\PSoC4/CyLFClk.c ****     }
2358:Generated_Source\PSoC4/CyLFClk.c **** 
2359:Generated_Source\PSoC4/CyLFClk.c **** 
2360:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2361:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetClearOnMatch
2362:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2363:Generated_Source\PSoC4/CyLFClk.c ****     *
2364:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the "clear on match" setting for the specified DeepSleep Timer 
2365:Generated_Source\PSoC4/CyLFClk.c ****     * counter.
2366:Generated_Source\PSoC4/CyLFClk.c ****     *
2367:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1].  The number of the Timer counter. The 
2368:Generated_Source\PSoC4/CyLFClk.c ****     * match values are not supported by counter 2.
2369:Generated_Source\PSoC4/CyLFClk.c ****     *
2370:Generated_Source\PSoC4/CyLFClk.c ****     * \return The "clear on match" status: <br>1 if enabled <br>0 if disabled
2371:Generated_Source\PSoC4/CyLFClk.c ****     *
2372:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2373:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetClearOnMatch(uint32 counterNum)
2374:Generated_Source\PSoC4/CyLFClk.c ****     {
2375:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_TIMER0) ||
2376:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_TIMER1));
2377:Generated_Source\PSoC4/CyLFClk.c **** 
2378:Generated_Source\PSoC4/CyLFClk.c ****         return (uint32)((CY_SYS_WCO_WDT_CONFIG_REG >>
2379:Generated_Source\PSoC4/CyLFClk.c ****                         ((counterNum * CY_SYS_TIMER_CNT_SHIFT) + CY_SYS_TIMER_CNT_MATCH_CLR_SHIFT))
2380:Generated_Source\PSoC4/CyLFClk.c ****     }
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 110


2381:Generated_Source\PSoC4/CyLFClk.c **** 
2382:Generated_Source\PSoC4/CyLFClk.c **** 
2383:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2384:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerEnable
2385:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2386:Generated_Source\PSoC4/CyLFClk.c ****     *
2387:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Enables the specified DeepSleep Timer counters. All the counters 
2388:Generated_Source\PSoC4/CyLFClk.c ****     * specified in the mask are enabled.
2389:Generated_Source\PSoC4/CyLFClk.c ****     *
2390:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask  CY_SYS_TIMER0_MASK - The mask for counter 0 to enable.<br>
2391:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER1_MASK - The mask for counter 1 to enable.<br>
2392:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER2_MASK - The mask for counter 2 to enable.
2393:Generated_Source\PSoC4/CyLFClk.c ****     *
2394:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2395:Generated_Source\PSoC4/CyLFClk.c ****     * Enabling or disabling Timer requires 3 Timer source-cycles to come into effect.
2396:Generated_Source\PSoC4/CyLFClk.c ****     * Therefore, the Timer enable state must not be changed more than once in
2397:Generated_Source\PSoC4/CyLFClk.c ****     * that period.
2398:Generated_Source\PSoC4/CyLFClk.c ****     *
2399:Generated_Source\PSoC4/CyLFClk.c ****     * After Timer is enabled, it is illegal to write Timer configuration 
2400:Generated_Source\PSoC4/CyLFClk.c ****     * (WCO_WDT_CONFIG) and control (WCO_WDT_CONTROL) registers. This means that all
2401:Generated_Source\PSoC4/CyLFClk.c ****     * Timer functions that contain 'write' in the name (with the exception of 
2402:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerSetMatch() function) are illegal to call once Timer enabled.
2403:Generated_Source\PSoC4/CyLFClk.c ****     *
2404:Generated_Source\PSoC4/CyLFClk.c ****     * Timer current source must be running and stable before calling this 
2405:Generated_Source\PSoC4/CyLFClk.c ****     * function.
2406:Generated_Source\PSoC4/CyLFClk.c ****     *
2407:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2408:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerEnable(uint32 counterMask)
2409:Generated_Source\PSoC4/CyLFClk.c ****     {
2410:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_CONTROL_REG |= counterMask;
2411:Generated_Source\PSoC4/CyLFClk.c **** 
2412:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER0_MASK))
2413:Generated_Source\PSoC4/CyLFClk.c ****         {
2414:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysTimerGetEnabledStatus(CY_SYS_TIMER0))
2415:Generated_Source\PSoC4/CyLFClk.c ****             {
2416:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2417:Generated_Source\PSoC4/CyLFClk.c ****             }
2418:Generated_Source\PSoC4/CyLFClk.c ****         }
2419:Generated_Source\PSoC4/CyLFClk.c **** 
2420:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER1_MASK))
2421:Generated_Source\PSoC4/CyLFClk.c ****         {
2422:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysTimerGetEnabledStatus(CY_SYS_TIMER1))
2423:Generated_Source\PSoC4/CyLFClk.c ****             {
2424:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2425:Generated_Source\PSoC4/CyLFClk.c ****             }
2426:Generated_Source\PSoC4/CyLFClk.c ****         }
2427:Generated_Source\PSoC4/CyLFClk.c **** 
2428:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER2_MASK))
2429:Generated_Source\PSoC4/CyLFClk.c ****         {
2430:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysTimerGetEnabledStatus(CY_SYS_TIMER2))
2431:Generated_Source\PSoC4/CyLFClk.c ****             {
2432:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2433:Generated_Source\PSoC4/CyLFClk.c ****             }
2434:Generated_Source\PSoC4/CyLFClk.c ****         }
2435:Generated_Source\PSoC4/CyLFClk.c ****     }
2436:Generated_Source\PSoC4/CyLFClk.c **** 
2437:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 111


2438:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2439:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerDisable
2440:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2441:Generated_Source\PSoC4/CyLFClk.c ****     *
2442:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Disables the specified DeepSleep Timer counters.
2443:Generated_Source\PSoC4/CyLFClk.c ****     *
2444:Generated_Source\PSoC4/CyLFClk.c ****     * All the counters specified in the mask are disabled. The function waits for 
2445:Generated_Source\PSoC4/CyLFClk.c ****     * the changes to come into effect.
2446:Generated_Source\PSoC4/CyLFClk.c ****     *
2447:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
2448:Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_TIMER0_MASK - The mask for Counter 0 to disable.<br>
2449:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER1_MASK - The mask for Counter 1 to disable.<br>
2450:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER2_MASK - The mask for Counter 2 to disable.
2451:Generated_Source\PSoC4/CyLFClk.c ****     *
2452:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2453:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerDisable(uint32 counterMask)
2454:Generated_Source\PSoC4/CyLFClk.c ****     {
2455:Generated_Source\PSoC4/CyLFClk.c **** 
2456:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_CONTROL_REG &= ~counterMask;
2457:Generated_Source\PSoC4/CyLFClk.c **** 
2458:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER0_MASK))
2459:Generated_Source\PSoC4/CyLFClk.c ****         {
2460:Generated_Source\PSoC4/CyLFClk.c ****             while (0u != CySysTimerGetEnabledStatus(CY_SYS_TIMER0))
2461:Generated_Source\PSoC4/CyLFClk.c ****             {
2462:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2463:Generated_Source\PSoC4/CyLFClk.c ****             }
2464:Generated_Source\PSoC4/CyLFClk.c ****         }
2465:Generated_Source\PSoC4/CyLFClk.c **** 
2466:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER1_MASK))
2467:Generated_Source\PSoC4/CyLFClk.c ****         {
2468:Generated_Source\PSoC4/CyLFClk.c ****             while (0u != CySysTimerGetEnabledStatus(CY_SYS_TIMER1))
2469:Generated_Source\PSoC4/CyLFClk.c ****             {
2470:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2471:Generated_Source\PSoC4/CyLFClk.c ****             }
2472:Generated_Source\PSoC4/CyLFClk.c ****         }
2473:Generated_Source\PSoC4/CyLFClk.c **** 
2474:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER2_MASK))
2475:Generated_Source\PSoC4/CyLFClk.c ****         {
2476:Generated_Source\PSoC4/CyLFClk.c ****             while (0u != CySysTimerGetEnabledStatus(CY_SYS_TIMER2))
2477:Generated_Source\PSoC4/CyLFClk.c ****             {
2478:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2479:Generated_Source\PSoC4/CyLFClk.c ****             }
2480:Generated_Source\PSoC4/CyLFClk.c ****         }
2481:Generated_Source\PSoC4/CyLFClk.c **** 
2482:Generated_Source\PSoC4/CyLFClk.c ****     }
2483:Generated_Source\PSoC4/CyLFClk.c **** 
2484:Generated_Source\PSoC4/CyLFClk.c **** 
2485:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2486:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetCascade
2487:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2488:Generated_Source\PSoC4/CyLFClk.c ****     *
2489:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2490:Generated_Source\PSoC4/CyLFClk.c ****     * Writes the two DeepSleep Timers cascade values based on the combination of 
2491:Generated_Source\PSoC4/CyLFClk.c ****     * mask values specified.
2492:Generated_Source\PSoC4/CyLFClk.c ****     *
2493:Generated_Source\PSoC4/CyLFClk.c ****     * \param cascadeMask The mask value used to set or clear the cascade values:
2494:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_CASCADE_NONE - Neither<br>
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 112


2495:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_CASCADE_01 - Cascade 01<br>
2496:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_CASCADE_12 - Cascade 12
2497:Generated_Source\PSoC4/CyLFClk.c ****     *
2498:Generated_Source\PSoC4/CyLFClk.c ****     * If only one cascade mask is specified, the second cascade is disabled.
2499:Generated_Source\PSoC4/CyLFClk.c ****     * To set both cascade modes, two defines should be ORed:
2500:Generated_Source\PSoC4/CyLFClk.c ****     * (CY_SYS_TIMER_CASCADE_01 | CY_SYS_TIMER_CASCADE_12).
2501:Generated_Source\PSoC4/CyLFClk.c ****     * \note If CySysTimerSetCascade() was called with ORed defines it is necessary 
2502:Generated_Source\PSoC4/CyLFClk.c ****     * to call CySysTimeSetClearOnMatch(1,1). It is needed to make sure that 
2503:Generated_Source\PSoC4/CyLFClk.c ****     * Counter 2 will be updated in the expected way.
2504:Generated_Source\PSoC4/CyLFClk.c ****     *
2505:Generated_Source\PSoC4/CyLFClk.c ****     * Timer counters that are part of the specified cascade should be disabled.
2506:Generated_Source\PSoC4/CyLFClk.c ****     * Otherwise this function call has no effect. If the specified
2507:Generated_Source\PSoC4/CyLFClk.c ****     * counter is enabled, call CySysTimerDisable() function with the corresponding
2508:Generated_Source\PSoC4/CyLFClk.c ****     * parameter to disable the specified counter and wait for it to stop. This may
2509:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 Timers source-cycles.
2510:Generated_Source\PSoC4/CyLFClk.c ****     *
2511:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2512:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerSetCascade(uint32 cascadeMask)
2513:Generated_Source\PSoC4/CyLFClk.c ****     {
2514:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
2515:Generated_Source\PSoC4/CyLFClk.c ****         uint32 countersEnableStatus;
2516:Generated_Source\PSoC4/CyLFClk.c **** 
2517:Generated_Source\PSoC4/CyLFClk.c ****         countersEnableStatus = CySysTimerGetEnabledStatus(CY_SYS_TIMER0) |
2518:Generated_Source\PSoC4/CyLFClk.c ****                             CySysTimerGetEnabledStatus(CY_SYS_TIMER1) |
2519:Generated_Source\PSoC4/CyLFClk.c ****                             CySysTimerGetEnabledStatus(CY_SYS_TIMER2);
2520:Generated_Source\PSoC4/CyLFClk.c **** 
2521:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == countersEnableStatus)
2522:Generated_Source\PSoC4/CyLFClk.c ****         {
2523:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WCO_WDT_CONFIG_REG;
2524:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= ((uint32)(~(CY_SYS_TIMER_CASCADE_01|CY_SYS_TIMER_CASCADE_12)));
2525:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= cascadeMask;
2526:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = configRegValue;
2527:Generated_Source\PSoC4/CyLFClk.c ****         }
2528:Generated_Source\PSoC4/CyLFClk.c ****     }
2529:Generated_Source\PSoC4/CyLFClk.c **** 
2530:Generated_Source\PSoC4/CyLFClk.c **** 
2531:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2532:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetCascade
2533:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2534:Generated_Source\PSoC4/CyLFClk.c ****     *
2535:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the two DeepSleep Timer cascade values returning a mask of the 
2536:Generated_Source\PSoC4/CyLFClk.c ****     * bits set.
2537:Generated_Source\PSoC4/CyLFClk.c ****     *
2538:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mask of the cascade values set.
2539:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER_CASCADE_NONE - Neither
2540:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER_CASCADE_01 - Cascade 01
2541:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER_CASCADE_12 - Cascade 12
2542:Generated_Source\PSoC4/CyLFClk.c ****     *
2543:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2544:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetCascade(void)
2545:Generated_Source\PSoC4/CyLFClk.c ****     {
2546:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WCO_WDT_CONFIG_REG & (CY_SYS_TIMER_CASCADE_01 | CY_SYS_TIMER_CASCADE_12));
2547:Generated_Source\PSoC4/CyLFClk.c ****     }
2548:Generated_Source\PSoC4/CyLFClk.c **** 
2549:Generated_Source\PSoC4/CyLFClk.c **** 
2550:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2551:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetMatch
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 113


2552:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2553:Generated_Source\PSoC4/CyLFClk.c ****     *
2554:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the Timer counter match comparison value.
2555:Generated_Source\PSoC4/CyLFClk.c ****     *
2556:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1]. The number of the Timer counter. The 
2557:Generated_Source\PSoC4/CyLFClk.c ****     * match values are not supported by counter 2.
2558:Generated_Source\PSoC4/CyLFClk.c ****     *
2559:Generated_Source\PSoC4/CyLFClk.c ****     * \param match Valid range [0-65535]. The value to be used to match against 
2560:Generated_Source\PSoC4/CyLFClk.c ****     * the counter.
2561:Generated_Source\PSoC4/CyLFClk.c ****     *
2562:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2563:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerSetMatch(uint32 counterNum, uint32 match)
2564:Generated_Source\PSoC4/CyLFClk.c ****     {
2565:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue;
2566:Generated_Source\PSoC4/CyLFClk.c **** 
2567:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_TIMER0) ||
2568:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_TIMER1));
2569:Generated_Source\PSoC4/CyLFClk.c **** 
2570:Generated_Source\PSoC4/CyLFClk.c ****         /* Wait for previous changes to come into effect */
2571:Generated_Source\PSoC4/CyLFClk.c ****         CyDelayUs(CY_SYS_3TIMER_DELAY_US);
2572:Generated_Source\PSoC4/CyLFClk.c **** 
2573:Generated_Source\PSoC4/CyLFClk.c ****         regValue = CY_SYS_WCO_WDT_MATCH_REG;
2574:Generated_Source\PSoC4/CyLFClk.c ****         regValue &= (uint32)~((uint32)(CY_SYS_TIMER_LOWER_16BITS_MASK << (counterNum * CY_SYS_TIMER
2575:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_MATCH_REG = (regValue | (match << (counterNum * CY_SYS_TIMER_CNT_MATCH_SHIFT
2576:Generated_Source\PSoC4/CyLFClk.c **** 
2577:Generated_Source\PSoC4/CyLFClk.c ****         /* Make sure match synchronization has started */
2578:Generated_Source\PSoC4/CyLFClk.c ****         CyDelayUs(CY_SYS_1TIMER_DELAY_US);
2579:Generated_Source\PSoC4/CyLFClk.c ****     }
2580:Generated_Source\PSoC4/CyLFClk.c **** 
2581:Generated_Source\PSoC4/CyLFClk.c **** 
2582:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2583:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetToggleBit
2584:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2585:Generated_Source\PSoC4/CyLFClk.c ****     *
2586:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures which bit in Timer counter 2 to monitor for a toggle.
2587:Generated_Source\PSoC4/CyLFClk.c ****     *
2588:Generated_Source\PSoC4/CyLFClk.c ****     * When that bit toggles, an interrupt is generated if mode for counter 2 has
2589:Generated_Source\PSoC4/CyLFClk.c ****     * enabled interrupts.
2590:Generated_Source\PSoC4/CyLFClk.c ****     *
2591:Generated_Source\PSoC4/CyLFClk.c ****     * \param bits Valid range [0-31]. Counter 2 bit to monitor for a toggle.
2592:Generated_Source\PSoC4/CyLFClk.c ****     *
2593:Generated_Source\PSoC4/CyLFClk.c ****     * \details Timer counter 2 should be disabled. Otherwise this function call has
2594:Generated_Source\PSoC4/CyLFClk.c ****     * no effect.
2595:Generated_Source\PSoC4/CyLFClk.c ****     *
2596:Generated_Source\PSoC4/CyLFClk.c ****     * If the specified counter is enabled, call the CySysTimerDisable() function with
2597:Generated_Source\PSoC4/CyLFClk.c ****     * the corresponding parameter to disable the specified counter and wait for it to
2598:Generated_Source\PSoC4/CyLFClk.c ****     * stop. This may take up to three Timer source-cycles.
2599:Generated_Source\PSoC4/CyLFClk.c ****     *
2600:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2601:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerSetToggleBit(uint32 bits)
2602:Generated_Source\PSoC4/CyLFClk.c ****     {
2603:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
2604:Generated_Source\PSoC4/CyLFClk.c **** 
2605:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == CySysTimerGetEnabledStatus(CY_SYS_TIMER2))
2606:Generated_Source\PSoC4/CyLFClk.c ****         {
2607:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WCO_WDT_CONFIG_REG;
2608:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= (uint32)(~((uint32)(CY_SYS_TIMER_CONFIG_BITS2_MASK << CY_SYS_TIMER_CO
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 114


2609:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= ((bits & CY_SYS_TIMER_CONFIG_BITS2_MASK) << CY_SYS_TIMER_CONFIG_BITS2
2610:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = configRegValue;
2611:Generated_Source\PSoC4/CyLFClk.c ****         }
2612:Generated_Source\PSoC4/CyLFClk.c ****     }
2613:Generated_Source\PSoC4/CyLFClk.c **** 
2614:Generated_Source\PSoC4/CyLFClk.c **** 
2615:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2616:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetToggleBit
2617:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2618:Generated_Source\PSoC4/CyLFClk.c ****     *
2619:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads which bit in Timer counter 2 is monitored for a toggle.
2620:Generated_Source\PSoC4/CyLFClk.c ****     *
2621:Generated_Source\PSoC4/CyLFClk.c ****     * \return The bit that is monitored (range of 0 to 31)
2622:Generated_Source\PSoC4/CyLFClk.c ****     *
2623:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2624:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetToggleBit(void)
2625:Generated_Source\PSoC4/CyLFClk.c ****     {
2626:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WCO_WDT_CONFIG_REG >> CY_SYS_TIMER_CONFIG_BITS2_POS) & CY_SYS_TIMER_CONFIG_
2627:Generated_Source\PSoC4/CyLFClk.c ****     }
2628:Generated_Source\PSoC4/CyLFClk.c **** 
2629:Generated_Source\PSoC4/CyLFClk.c **** 
2630:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2631:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetMatch
2632:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2633:Generated_Source\PSoC4/CyLFClk.c ****     *
2634:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the Timer counter match comparison value.
2635:Generated_Source\PSoC4/CyLFClk.c ****     *
2636:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1]. The number of the DeepSleep Timer 
2637:Generated_Source\PSoC4/CyLFClk.c ****     * counter. The match values are not supported by counter 2.
2638:Generated_Source\PSoC4/CyLFClk.c ****     *
2639:Generated_Source\PSoC4/CyLFClk.c ****     * \return A 16-bit match value.
2640:Generated_Source\PSoC4/CyLFClk.c ****     *
2641:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2642:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetMatch(uint32 counterNum)
2643:Generated_Source\PSoC4/CyLFClk.c ****     {
2644:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_TIMER0) ||
2645:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_TIMER1));
2646:Generated_Source\PSoC4/CyLFClk.c **** 
2647:Generated_Source\PSoC4/CyLFClk.c ****         return ((uint32)(CY_SYS_WCO_WDT_MATCH_REG >> (counterNum * CY_SYS_TIMER_CNT_MATCH_SHIFT)) &
2648:Generated_Source\PSoC4/CyLFClk.c ****                                                                   CY_SYS_TIMER_LOWER_16BITS_MASK);
2649:Generated_Source\PSoC4/CyLFClk.c ****     }
2650:Generated_Source\PSoC4/CyLFClk.c **** 
2651:Generated_Source\PSoC4/CyLFClk.c **** 
2652:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2653:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetCount
2654:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2655:Generated_Source\PSoC4/CyLFClk.c ****     *
2656:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the current DeepSleep Timer counter value.
2657:Generated_Source\PSoC4/CyLFClk.c ****     *
2658:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the Timer counter.
2659:Generated_Source\PSoC4/CyLFClk.c ****     *
2660:Generated_Source\PSoC4/CyLFClk.c ****     * \return A live counter value. Counter 0 and Counter 1 are 16 bit counters 
2661:Generated_Source\PSoC4/CyLFClk.c ****     * and counter 2 is a 32 bit counter.
2662:Generated_Source\PSoC4/CyLFClk.c ****     *
2663:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2664:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetCount(uint32 counterNum)
2665:Generated_Source\PSoC4/CyLFClk.c ****     {
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 115


2666:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue = 0u;
2667:Generated_Source\PSoC4/CyLFClk.c **** 
2668:Generated_Source\PSoC4/CyLFClk.c ****         switch(counterNum)
2669:Generated_Source\PSoC4/CyLFClk.c ****         {
2670:Generated_Source\PSoC4/CyLFClk.c ****             /* Timer Counter 0 */
2671:Generated_Source\PSoC4/CyLFClk.c ****             case 0u:
2672:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = CY_SYS_WCO_WDT_CTRLOW_REG & CY_SYS_TIMER_LOWER_16BITS_MASK;
2673:Generated_Source\PSoC4/CyLFClk.c ****             break;
2674:Generated_Source\PSoC4/CyLFClk.c **** 
2675:Generated_Source\PSoC4/CyLFClk.c ****             /* Timer Counter 1 */
2676:Generated_Source\PSoC4/CyLFClk.c ****             case 1u:
2677:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = (CY_SYS_WCO_WDT_CTRLOW_REG >> CY_SYS_TIMER_CNT_MATCH_SHIFT) & CY_SYS_TIM
2678:Generated_Source\PSoC4/CyLFClk.c ****             break;
2679:Generated_Source\PSoC4/CyLFClk.c **** 
2680:Generated_Source\PSoC4/CyLFClk.c ****             /* Timer Counter 2 */
2681:Generated_Source\PSoC4/CyLFClk.c ****             case 2u:
2682:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = CY_SYS_WCO_WDT_CTRHIGH_REG;
2683:Generated_Source\PSoC4/CyLFClk.c ****             break;
2684:Generated_Source\PSoC4/CyLFClk.c **** 
2685:Generated_Source\PSoC4/CyLFClk.c ****             default:
2686:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
2687:Generated_Source\PSoC4/CyLFClk.c ****             break;
2688:Generated_Source\PSoC4/CyLFClk.c ****         }
2689:Generated_Source\PSoC4/CyLFClk.c **** 
2690:Generated_Source\PSoC4/CyLFClk.c ****         return (regValue);
2691:Generated_Source\PSoC4/CyLFClk.c ****     }
2692:Generated_Source\PSoC4/CyLFClk.c **** 
2693:Generated_Source\PSoC4/CyLFClk.c **** 
2694:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2695:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetInterruptSource
2696:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2697:Generated_Source\PSoC4/CyLFClk.c ****     *
2698:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2699:Generated_Source\PSoC4/CyLFClk.c ****     * Reads a mask containing all the DeepSleep Timer counters interrupts that are 
2700:Generated_Source\PSoC4/CyLFClk.c ****     * currently set by the hardware, if a corresponding mode is selected.
2701:Generated_Source\PSoC4/CyLFClk.c ****     *
2702:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mask of interrupts set
2703:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER0_INT - Set interrupt for Counter 0
2704:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER1_INT - Set interrupt for Counter 1
2705:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER2_INT - Set interrupt for Counter 2
2706:Generated_Source\PSoC4/CyLFClk.c ****     *
2707:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2708:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetInterruptSource(void)
2709:Generated_Source\PSoC4/CyLFClk.c ****     {
2710:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WCO_WDT_CONTROL_REG & (CY_SYS_TIMER0_INT | CY_SYS_TIMER1_INT | CY_SYS_TIMER2
2711:Generated_Source\PSoC4/CyLFClk.c ****     }
2712:Generated_Source\PSoC4/CyLFClk.c **** 
2713:Generated_Source\PSoC4/CyLFClk.c **** 
2714:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2715:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerClearInterrupt
2716:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2717:Generated_Source\PSoC4/CyLFClk.c ****     *
2718:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Clears all the DeepSleep Timer counter interrupts set in the mask.
2719:Generated_Source\PSoC4/CyLFClk.c ****     *
2720:Generated_Source\PSoC4/CyLFClk.c ****     * All the Timer interrupts are to be cleared by the firmware, otherwise
2721:Generated_Source\PSoC4/CyLFClk.c ****     * interrupts are generated continuously.
2722:Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 116


2723:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
2724:Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_TIMER0_INT - Clear counter 0<br>
2725:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER1_INT - Clear counter 1<br>
2726:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER2_INT - Clear counter 2
2727:Generated_Source\PSoC4/CyLFClk.c ****     *
2728:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2729:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerClearInterrupt(uint32 counterMask)
2730:Generated_Source\PSoC4/CyLFClk.c ****     {
2731:Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
2732:Generated_Source\PSoC4/CyLFClk.c ****         interruptState = CyEnterCriticalSection();
2733:Generated_Source\PSoC4/CyLFClk.c **** 
2734:Generated_Source\PSoC4/CyLFClk.c ****         /* Set new WCO_TIMER control register value */
2735:Generated_Source\PSoC4/CyLFClk.c ****         counterMask &= (CY_SYS_TIMER0_INT |
2736:Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_TIMER1_INT |
2737:Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_TIMER2_INT);
2738:Generated_Source\PSoC4/CyLFClk.c **** 
2739:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_CONTROL_REG = counterMask | (CY_SYS_WCO_WDT_CONTROL_REG & ~(CY_SYS_TIMER0_IN
2740:Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_TIMER1_INT |
2741:Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_TIMER2_INT));
2742:Generated_Source\PSoC4/CyLFClk.c **** 
2743:Generated_Source\PSoC4/CyLFClk.c ****         /* Read the CY_SYS_WDT_CONTROL_REG to clear the interrupt request.
2744:Generated_Source\PSoC4/CyLFClk.c ****          * Cypress ID #207093, #206231
2745:Generated_Source\PSoC4/CyLFClk.c ****         */
2746:Generated_Source\PSoC4/CyLFClk.c ****         (void)CY_SYS_WCO_WDT_CONTROL_REG;
2747:Generated_Source\PSoC4/CyLFClk.c **** 
2748:Generated_Source\PSoC4/CyLFClk.c ****         CyExitCriticalSection(interruptState);
2749:Generated_Source\PSoC4/CyLFClk.c ****     }
2750:Generated_Source\PSoC4/CyLFClk.c **** 
2751:Generated_Source\PSoC4/CyLFClk.c **** 
2752:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2753:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetInterruptCallback
2754:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2755:Generated_Source\PSoC4/CyLFClk.c ****     *
2756:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2757:Generated_Source\PSoC4/CyLFClk.c ****     * Sets the ISR callback function for the particular DeepSleep Timer counter.
2758:Generated_Source\PSoC4/CyLFClk.c ****     *
2759:Generated_Source\PSoC4/CyLFClk.c ****     * These functions are called on the Timer interrupt.
2760:Generated_Source\PSoC4/CyLFClk.c ****     *
2761:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum The number of the Timer counter.
2762:Generated_Source\PSoC4/CyLFClk.c ****     * \param function The pointer to the callback function.
2763:Generated_Source\PSoC4/CyLFClk.c ****     *
2764:Generated_Source\PSoC4/CyLFClk.c ****     * \return  The pointer to the previous callback function. 
2765:Generated_Source\PSoC4/CyLFClk.c ****     * \return NULL is returned if the specified address is not set.
2766:Generated_Source\PSoC4/CyLFClk.c ****     *
2767:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2768:Generated_Source\PSoC4/CyLFClk.c ****     cyTimerCallback CySysTimerSetInterruptCallback(uint32 counterNum, cyTimerCallback function)
2769:Generated_Source\PSoC4/CyLFClk.c ****     {
2770:Generated_Source\PSoC4/CyLFClk.c ****         cyTimerCallback prevCallback = (void *)0;
2771:Generated_Source\PSoC4/CyLFClk.c **** 
2772:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum < CY_SYS_NUM_OF_TIMERS)
2773:Generated_Source\PSoC4/CyLFClk.c ****         {
2774:Generated_Source\PSoC4/CyLFClk.c ****             prevCallback = cySysTimerCallback[counterNum];
2775:Generated_Source\PSoC4/CyLFClk.c ****             cySysTimerCallback[counterNum] = function;
2776:Generated_Source\PSoC4/CyLFClk.c ****         }
2777:Generated_Source\PSoC4/CyLFClk.c ****         else
2778:Generated_Source\PSoC4/CyLFClk.c ****         {
2779:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 117


2780:Generated_Source\PSoC4/CyLFClk.c ****         }
2781:Generated_Source\PSoC4/CyLFClk.c **** 
2782:Generated_Source\PSoC4/CyLFClk.c ****         return((cyTimerCallback)prevCallback);
2783:Generated_Source\PSoC4/CyLFClk.c ****     }
2784:Generated_Source\PSoC4/CyLFClk.c **** 
2785:Generated_Source\PSoC4/CyLFClk.c **** 
2786:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2787:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetInterruptCallback
2788:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2789:Generated_Source\PSoC4/CyLFClk.c ****     *
2790:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Gets the ISR callback function for the particular DeepSleep Timer 
2791:Generated_Source\PSoC4/CyLFClk.c ****     * counter.
2792:Generated_Source\PSoC4/CyLFClk.c ****     *
2793:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum The number of the Timer counter.
2794:Generated_Source\PSoC4/CyLFClk.c ****     *
2795:Generated_Source\PSoC4/CyLFClk.c ****     * \return
2796:Generated_Source\PSoC4/CyLFClk.c ****     * The pointer to the callback function registered for a particular Timer by
2797:Generated_Source\PSoC4/CyLFClk.c ****     * a particular address that are passed through arguments.
2798:Generated_Source\PSoC4/CyLFClk.c ****     *
2799:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2800:Generated_Source\PSoC4/CyLFClk.c ****     cyTimerCallback CySysTimerGetInterruptCallback(uint32 counterNum)
2801:Generated_Source\PSoC4/CyLFClk.c ****     {
2802:Generated_Source\PSoC4/CyLFClk.c ****         cyTimerCallback retCallback = (void *)0;
2803:Generated_Source\PSoC4/CyLFClk.c **** 
2804:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum < CY_SYS_NUM_OF_TIMERS)
2805:Generated_Source\PSoC4/CyLFClk.c ****         {
2806:Generated_Source\PSoC4/CyLFClk.c ****             retCallback = (cyTimerCallback)cySysTimerCallback[counterNum];
2807:Generated_Source\PSoC4/CyLFClk.c ****         }
2808:Generated_Source\PSoC4/CyLFClk.c ****         else
2809:Generated_Source\PSoC4/CyLFClk.c ****         {
2810:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
2811:Generated_Source\PSoC4/CyLFClk.c ****         }
2812:Generated_Source\PSoC4/CyLFClk.c **** 
2813:Generated_Source\PSoC4/CyLFClk.c ****         return(retCallback);
2814:Generated_Source\PSoC4/CyLFClk.c ****     }
2815:Generated_Source\PSoC4/CyLFClk.c **** 
2816:Generated_Source\PSoC4/CyLFClk.c **** 
2817:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2818:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerEnableIsr
2819:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2820:Generated_Source\PSoC4/CyLFClk.c ****     *
2821:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Enables the ISR callback servicing for the particular Timer counter
2822:Generated_Source\PSoC4/CyLFClk.c ****     *
2823:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the Timer counter.
2824:Generated_Source\PSoC4/CyLFClk.c ****     *
2825:Generated_Source\PSoC4/CyLFClk.c ****     * Value corresponds to appropriate Timer counter. For example value 1 
2826:Generated_Source\PSoC4/CyLFClk.c ****     * corresponds to second Timer counter.
2827:Generated_Source\PSoC4/CyLFClk.c ****     *
2828:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2829:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerEnableIsr(uint32 counterNum)
2830:Generated_Source\PSoC4/CyLFClk.c ****     {
2831:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum <= CY_SYS_TIMER2)
2832:Generated_Source\PSoC4/CyLFClk.c ****         {
2833:Generated_Source\PSoC4/CyLFClk.c ****             disableTimerServicedIsr &= ~counterTimerIntMaskTbl[counterNum];
2834:Generated_Source\PSoC4/CyLFClk.c ****             timerIsrMask |= counterTimerIntMaskTbl[counterNum];
2835:Generated_Source\PSoC4/CyLFClk.c ****         }
2836:Generated_Source\PSoC4/CyLFClk.c ****         else
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 118


2837:Generated_Source\PSoC4/CyLFClk.c ****         {
2838:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
2839:Generated_Source\PSoC4/CyLFClk.c ****         }
2840:Generated_Source\PSoC4/CyLFClk.c ****     }
2841:Generated_Source\PSoC4/CyLFClk.c **** 
2842:Generated_Source\PSoC4/CyLFClk.c **** 
2843:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2844:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerDisableIsr
2845:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2846:Generated_Source\PSoC4/CyLFClk.c ****     *
2847:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Disables the ISR callback servicing for the particular Timer counter
2848:Generated_Source\PSoC4/CyLFClk.c ****     *
2849:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the Timer counter.
2850:Generated_Source\PSoC4/CyLFClk.c ****     *
2851:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2852:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerDisableIsr(uint32 counterNum)
2853:Generated_Source\PSoC4/CyLFClk.c ****     {
2854:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum <= CY_SYS_TIMER2)
2855:Generated_Source\PSoC4/CyLFClk.c ****         {
2856:Generated_Source\PSoC4/CyLFClk.c ****             timerIsrMask &= ~counterTimerIntMaskTbl[counterNum];
2857:Generated_Source\PSoC4/CyLFClk.c ****         }
2858:Generated_Source\PSoC4/CyLFClk.c ****         else
2859:Generated_Source\PSoC4/CyLFClk.c ****         {
2860:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
2861:Generated_Source\PSoC4/CyLFClk.c ****         }
2862:Generated_Source\PSoC4/CyLFClk.c ****     }
2863:Generated_Source\PSoC4/CyLFClk.c **** 
2864:Generated_Source\PSoC4/CyLFClk.c **** 
2865:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2866:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerIsr
2867:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2868:Generated_Source\PSoC4/CyLFClk.c ****     *
2869:Generated_Source\PSoC4/CyLFClk.c ****     * \brief This is the handler of the DeepSleep Timer interrupt in CPU NVIC.
2870:Generated_Source\PSoC4/CyLFClk.c ****     *
2871:Generated_Source\PSoC4/CyLFClk.c ****     * The handler checks which Timer triggered in the interrupt and calls the 
2872:Generated_Source\PSoC4/CyLFClk.c ****     * respective callback functions configured by the user by using 
2873:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerSetIsrCallback() API.
2874:Generated_Source\PSoC4/CyLFClk.c ****     *
2875:Generated_Source\PSoC4/CyLFClk.c ****     * The order of the callback execution is incremental. Callback-0 is
2876:Generated_Source\PSoC4/CyLFClk.c ****     * run as the first one and callback-2 is called as the last one.
2877:Generated_Source\PSoC4/CyLFClk.c ****     *
2878:Generated_Source\PSoC4/CyLFClk.c ****     * \details This function clears the DeepSleep Timer interrupt every time when 
2879:Generated_Source\PSoC4/CyLFClk.c ****     * it is called.
2880:Generated_Source\PSoC4/CyLFClk.c ****     *
2881:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2882:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerIsr(void)
2883:Generated_Source\PSoC4/CyLFClk.c ****     {
2884:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_TIMER0_INT & CY_SYS_WCO_WDT_CONTROL_REG))
2885:Generated_Source\PSoC4/CyLFClk.c ****         {
2886:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_TIMER0_INT & timerIsrMask))
2887:Generated_Source\PSoC4/CyLFClk.c ****             {
2888:Generated_Source\PSoC4/CyLFClk.c ****                 timerIsrMask &= ~(disableTimerServicedIsr & CY_SYS_TIMER0_INT);
2889:Generated_Source\PSoC4/CyLFClk.c ****                 disableTimerServicedIsr  &= ~CY_SYS_TIMER0_INT;
2890:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysTimerCallback[CY_SYS_TIMER0] != (void *) 0)
2891:Generated_Source\PSoC4/CyLFClk.c ****                 {
2892:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysTimerCallback[CY_SYS_TIMER0])();
2893:Generated_Source\PSoC4/CyLFClk.c ****                 }
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 119


2894:Generated_Source\PSoC4/CyLFClk.c ****             }
2895:Generated_Source\PSoC4/CyLFClk.c ****             CySysTimerClearInterrupt(CY_SYS_TIMER0_INT);
2896:Generated_Source\PSoC4/CyLFClk.c ****         }
2897:Generated_Source\PSoC4/CyLFClk.c **** 
2898:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_TIMER1_INT & CY_SYS_WCO_WDT_CONTROL_REG))
2899:Generated_Source\PSoC4/CyLFClk.c ****         {
2900:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_TIMER1_INT & timerIsrMask))
2901:Generated_Source\PSoC4/CyLFClk.c ****             {
2902:Generated_Source\PSoC4/CyLFClk.c ****                 timerIsrMask &= ~(disableTimerServicedIsr & CY_SYS_TIMER1_INT);
2903:Generated_Source\PSoC4/CyLFClk.c ****                 disableTimerServicedIsr  &= ~CY_SYS_TIMER1_INT;
2904:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysTimerCallback[CY_SYS_TIMER1] != (void *) 0)
2905:Generated_Source\PSoC4/CyLFClk.c ****                 {
2906:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysTimerCallback[CY_SYS_TIMER1])();
2907:Generated_Source\PSoC4/CyLFClk.c ****                 }
2908:Generated_Source\PSoC4/CyLFClk.c ****             }
2909:Generated_Source\PSoC4/CyLFClk.c ****             CySysTimerClearInterrupt(CY_SYS_TIMER1_INT);
2910:Generated_Source\PSoC4/CyLFClk.c ****         }
2911:Generated_Source\PSoC4/CyLFClk.c **** 
2912:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_TIMER2_INT & CY_SYS_WCO_WDT_CONTROL_REG))
2913:Generated_Source\PSoC4/CyLFClk.c ****         {
2914:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_TIMER2_INT & timerIsrMask))
2915:Generated_Source\PSoC4/CyLFClk.c ****             {
2916:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysTimerCallback[CY_SYS_TIMER2] != (void *) 0)
2917:Generated_Source\PSoC4/CyLFClk.c ****                 {
2918:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysTimerCallback[CY_SYS_TIMER2])();
2919:Generated_Source\PSoC4/CyLFClk.c ****                 }
2920:Generated_Source\PSoC4/CyLFClk.c ****             }
2921:Generated_Source\PSoC4/CyLFClk.c ****             CySysTimerClearInterrupt(CY_SYS_TIMER2_INT);
2922:Generated_Source\PSoC4/CyLFClk.c ****         }
2923:Generated_Source\PSoC4/CyLFClk.c ****     }
2924:Generated_Source\PSoC4/CyLFClk.c **** 
2925:Generated_Source\PSoC4/CyLFClk.c **** 
2926:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2927:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerResetCounters
2928:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2929:Generated_Source\PSoC4/CyLFClk.c ****     *
2930:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Resets all the Timer counters set in the mask.
2931:Generated_Source\PSoC4/CyLFClk.c ****     *
2932:Generated_Source\PSoC4/CyLFClk.c ****     * \param countersMask
2933:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER0_RESET - Reset the Counter 0<br>
2934:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER1_RESET - Reset the Counter 1<br>
2935:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER2_RESET - Reset the Counter 2
2936:Generated_Source\PSoC4/CyLFClk.c ****     *
2937:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2938:Generated_Source\PSoC4/CyLFClk.c ****     * This function waits while corresponding counters will be reset. This may
2939:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 DeepSleep Timer source-cycles. DeepSleep Timer source must be 
2940:Generated_Source\PSoC4/CyLFClk.c ****     * enabled. Otherwise, the function will never exit.
2941:Generated_Source\PSoC4/CyLFClk.c ****     *
2942:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2943:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerResetCounters(uint32 countersMask)
2944:Generated_Source\PSoC4/CyLFClk.c ****     {
2945:Generated_Source\PSoC4/CyLFClk.c ****         /* Set new Timer reset value */
2946:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_CONTROL_REG |= (countersMask & CY_SYS_TIMER_RESET);
2947:Generated_Source\PSoC4/CyLFClk.c **** 
2948:Generated_Source\PSoC4/CyLFClk.c ****         while (0uL != (CY_SYS_WCO_WDT_CONTROL_REG & CY_SYS_TIMER_RESET))
2949:Generated_Source\PSoC4/CyLFClk.c ****         {
2950:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait for reset to come into effect */
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 120


2951:Generated_Source\PSoC4/CyLFClk.c ****         }
2952:Generated_Source\PSoC4/CyLFClk.c ****     }
2953:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
2954:Generated_Source\PSoC4/CyLFClk.c **** 
2955:Generated_Source\PSoC4/CyLFClk.c **** 
2956:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 || (CY_IP_WCO_WDT_EN && CY_IP_SRSSLT))
2957:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2958:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerDelay
2959:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2960:Generated_Source\PSoC4/CyLFClk.c ****     *
2961:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2962:Generated_Source\PSoC4/CyLFClk.c ****     * The function implements the delay specified in the LFCLK clock ticks.
2963:Generated_Source\PSoC4/CyLFClk.c ****     *
2964:Generated_Source\PSoC4/CyLFClk.c ****     * This API is applicable for PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / 
2965:Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4200 BLE / PRoC BLE / PSoC 4200L / PSoC 4100M / PSoC 4200M devices to 
2966:Generated_Source\PSoC4/CyLFClk.c ****     * use WDT. Also this API is available to use for PSoC4100S and / PSoC Analog 
2967:Generated_Source\PSoC4/CyLFClk.c ****     * Coprocessor devices to use DeepSleep Timers.
2968:Generated_Source\PSoC4/CyLFClk.c ****     *
2969:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 
2970:Generated_Source\PSoC4/CyLFClk.c ****     * 4200L / PSoC 4100M / PSoC 4200M devices:
2971:Generated_Source\PSoC4/CyLFClk.c ****     * The specified WDT counter should be configured as described below and started.
2972:Generated_Source\PSoC4/CyLFClk.c ****     *
2973:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100S / PSoC Analog Coprocessor devices:
2974:Generated_Source\PSoC4/CyLFClk.c ****     * The specified DeepSleep Timer counter should be configured as described below
2975:Generated_Source\PSoC4/CyLFClk.c ****     * and started.
2976:Generated_Source\PSoC4/CyLFClk.c ****     *
2977:Generated_Source\PSoC4/CyLFClk.c ****     * This function can operate in two modes: the "WAIT" and "INTERRUPT" modes. In
2978:Generated_Source\PSoC4/CyLFClk.c ****     * the "WAIT" mode, the function waits for the specified number of ticks. In the
2979:Generated_Source\PSoC4/CyLFClk.c ****     * "INTERRUPT" mode, the interrupt is generated after the specified number of
2980:Generated_Source\PSoC4/CyLFClk.c ****     * ticks.
2981:Generated_Source\PSoC4/CyLFClk.c ****     *
2982:Generated_Source\PSoC4/CyLFClk.c ****     * For the correct function operation, the "Clear On Match" option should be
2983:Generated_Source\PSoC4/CyLFClk.c ****     * disabled for the specified WDT or DeepSleep Timer counter. Use 
2984:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtSetClearOnMatch() for WDT or CySysTimerSetClearOnMatch() for DeepSleep
2985:Generated_Source\PSoC4/CyLFClk.c ****     * Timer function with the "enable" parameter equal to zero for the used WDT 
2986:Generated_Source\PSoC4/CyLFClk.c ****     * counter or DeepSleep Timer counter.
2987:Generated_Source\PSoC4/CyLFClk.c ****     *
2988:Generated_Source\PSoC4/CyLFClk.c ****     * The corresponding WDT counter should be configured to match the selected
2989:Generated_Source\PSoC4/CyLFClk.c ****     * mode: "Free running Timer" for the "WAIT" mode, and
2990:Generated_Source\PSoC4/CyLFClk.c ****     * "Periodic Timer" / "Watchdog (w/Interrupt)" for the "INTERRUPT" mode.
2991:Generated_Source\PSoC4/CyLFClk.c ****     *
2992:Generated_Source\PSoC4/CyLFClk.c ****     * Or the corresponding DeepSleep Timer counter should be configured to match the
2993:Generated_Source\PSoC4/CyLFClk.c ****     * selected mode: "Free running Timer" for the "WAIT" mode, and
2994:Generated_Source\PSoC4/CyLFClk.c ****     * "Periodic Timer" for the "INTERRUPT" mode.
2995:Generated_Source\PSoC4/CyLFClk.c ****     *
2996:Generated_Source\PSoC4/CyLFClk.c ****     * This can be configured in two ways:
2997:Generated_Source\PSoC4/CyLFClk.c ****     * - Through the DWR page. Open the "Clocks" tab, click the "Edit Clocks..."
2998:Generated_Source\PSoC4/CyLFClk.c ****     * button, in the "Configure System Clocks" window click on the
2999:Generated_Source\PSoC4/CyLFClk.c ****     * "Low Frequency Clocks" tab and choose the appropriate option for the used
3000:Generated_Source\PSoC4/CyLFClk.c ****     * WDT or DeepSleep Timer counter.
3001:Generated_Source\PSoC4/CyLFClk.c ****     *
3002:Generated_Source\PSoC4/CyLFClk.c ****     * - Through the CySysWdtSetMode() for WDT or CySysTimerSetMode() for DeepSleep
3003:Generated_Source\PSoC4/CyLFClk.c ****     * Timer function. Call it with the appropriate "mode" parameter for the 
3004:Generated_Source\PSoC4/CyLFClk.c ****     * used WDT or DeepSleep Timer counter.
3005:Generated_Source\PSoC4/CyLFClk.c ****     *
3006:Generated_Source\PSoC4/CyLFClk.c ****     * For the "INTERRUPT" mode, the recommended sequence is the following:
3007:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysWdtDisableCounterIsr() for WDT or 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 121


3008:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerDisableIsr() for DeepSleep Timer function to disable servicing
3009:Generated_Source\PSoC4/CyLFClk.c ****     * interrupts of the specified WDT or DeepSleep Timer counter.
3010:Generated_Source\PSoC4/CyLFClk.c ****     *
3011:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysWdtSetInterruptCallback() for WDT or 
3012:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerSetIsrCallback() for DeepSleep Timer function to register 
3013:Generated_Source\PSoC4/CyLFClk.c ****     * the callback function for the corresponding WDT or DeepSleep Timer counter.
3014:Generated_Source\PSoC4/CyLFClk.c ****     *
3015:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysTimerDelay() function.
3016:Generated_Source\PSoC4/CyLFClk.c ****     *
3017:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1]. The number of the counter 
3018:Generated_Source\PSoC4/CyLFClk.c ****     * (Timer0 or Timer1).
3019:Generated_Source\PSoC4/CyLFClk.c ****     * \param delayType
3020:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_WAIT - "WAIT" mode. <br>
3021:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_INTERRUPT - "INTERRUPT" mode.
3022:Generated_Source\PSoC4/CyLFClk.c ****     * \param delay The delay value in the LFCLK ticks 
3023:Generated_Source\PSoC4/CyLFClk.c ****     * (allowable range - 16-bit value).
3024:Generated_Source\PSoC4/CyLFClk.c ****     *
3025:Generated_Source\PSoC4/CyLFClk.c ****     * \details
3026:Generated_Source\PSoC4/CyLFClk.c ****     * In the "INTERRUPT" mode, this function enables ISR callback servicing
3027:Generated_Source\PSoC4/CyLFClk.c ****     * from the corresponding WDT or DeepSleep Timer counter. Servicing of this ISR 
3028:Generated_Source\PSoC4/CyLFClk.c ****     * callback will be disabled after the expiration of the delay time.
3029:Generated_Source\PSoC4/CyLFClk.c ****     *
3030:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
3031:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerDelay(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint32 delay)
3032:Generated_Source\PSoC4/CyLFClk.c ****     {
3033:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue;
3034:Generated_Source\PSoC4/CyLFClk.c ****         uint32 matchValue;
3035:Generated_Source\PSoC4/CyLFClk.c **** 
3036:Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_IP_SRSSV2)
3037:Generated_Source\PSoC4/CyLFClk.c ****             if((counterNum < CY_SYS_WDT_COUNTER2) && (0uL == CySysWdtGetClearOnMatch(counterNum)) &
3038:Generated_Source\PSoC4/CyLFClk.c ****                                                                 (delay <= CY_SYS_UINT16_MAX_VAL))
3039:Generated_Source\PSoC4/CyLFClk.c ****             {
3040:Generated_Source\PSoC4/CyLFClk.c ****                 regValue   = CySysWdtGetCount(counterNum);
3041:Generated_Source\PSoC4/CyLFClk.c ****                 matchValue = (regValue + delay) & (uint32)CY_SYS_UINT16_MAX_VAL;
3042:Generated_Source\PSoC4/CyLFClk.c **** 
3043:Generated_Source\PSoC4/CyLFClk.c ****                 CySysTimerDelayUntilMatch(counterNum, delayType, matchValue);
3044:Generated_Source\PSoC4/CyLFClk.c ****             }
3045:Generated_Source\PSoC4/CyLFClk.c ****             else
3046:Generated_Source\PSoC4/CyLFClk.c ****             {
3047:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
3048:Generated_Source\PSoC4/CyLFClk.c ****             }
3049:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_SRSSV2) */
3050:Generated_Source\PSoC4/CyLFClk.c **** 
3051:Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_IP_WCO_WDT_EN && CY_IP_SRSSLT)
3052:Generated_Source\PSoC4/CyLFClk.c ****             if((counterNum < CY_SYS_TIMER2) && (0uL == CySysTimerGetClearOnMatch(counterNum)) && 
3053:Generated_Source\PSoC4/CyLFClk.c ****                                                             (delay <= CY_SYS_UINT16_MAX_VAL))
3054:Generated_Source\PSoC4/CyLFClk.c ****             {
3055:Generated_Source\PSoC4/CyLFClk.c ****                 regValue   = CySysTimerGetCount(counterNum);
3056:Generated_Source\PSoC4/CyLFClk.c ****                 matchValue = (regValue + delay) & (uint32)CY_SYS_UINT16_MAX_VAL;
3057:Generated_Source\PSoC4/CyLFClk.c **** 
3058:Generated_Source\PSoC4/CyLFClk.c ****                 CySysTimerDelayUntilMatch(counterNum, delayType, matchValue);
3059:Generated_Source\PSoC4/CyLFClk.c ****             }
3060:Generated_Source\PSoC4/CyLFClk.c ****             else
3061:Generated_Source\PSoC4/CyLFClk.c ****             {
3062:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
3063:Generated_Source\PSoC4/CyLFClk.c ****             }
3064:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_WCO_WDT_EN) */
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 122


3065:Generated_Source\PSoC4/CyLFClk.c ****     }
3066:Generated_Source\PSoC4/CyLFClk.c **** 
3067:Generated_Source\PSoC4/CyLFClk.c **** 
3068:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
3069:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerDelayUntilMatch
3070:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
3071:Generated_Source\PSoC4/CyLFClk.c ****     *
3072:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
3073:Generated_Source\PSoC4/CyLFClk.c ****     * The function implements the delay specified as the number of WDT or DeepSleep
3074:Generated_Source\PSoC4/CyLFClk.c ****     * Timer clock source ticks between WDT or DeepSleep Timer current value and 
3075:Generated_Source\PSoC4/CyLFClk.c ****     * match" value.
3076:Generated_Source\PSoC4/CyLFClk.c ****     *
3077:Generated_Source\PSoC4/CyLFClk.c ****     * This API is applicable for PSoC 4100 / PSoC 4200 / PRoC BLE / PSoC 4100 BLE /
3078:Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4200 BLE / PSoC 4200L / PSoC 4100M / PSoC 4200M devices to use WDT.
3079:Generated_Source\PSoC4/CyLFClk.c ****     * Also this API is available to use for PSoC4100S / Analog Coprocessor devices
3080:Generated_Source\PSoC4/CyLFClk.c ****     * to use DeepSleep Timers.
3081:Generated_Source\PSoC4/CyLFClk.c ****     * 
3082:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 
3083:Generated_Source\PSoC4/CyLFClk.c ****     * 4200L / PSoC 4100M / PSoC 4200M devices:
3084:Generated_Source\PSoC4/CyLFClk.c ****     * The function implements the delay specified as the number of LFCLK ticks
3085:Generated_Source\PSoC4/CyLFClk.c ****     * between the specified WDT counter's current value and the "match"
3086:Generated_Source\PSoC4/CyLFClk.c ****     * passed as the parameter to this function. The current WDT counter value can 
3087:Generated_Source\PSoC4/CyLFClk.c ****     * be obtained using the CySysWdtGetCount() function.
3088:Generated_Source\PSoC4/CyLFClk.c ****     *
3089:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC4100 S and Analog Coprocessor devices:
3090:Generated_Source\PSoC4/CyLFClk.c ****     * The function implements the delay specified as the number of DeepSleep Timer 
3091:Generated_Source\PSoC4/CyLFClk.c ****     * input clock ticks for Timer0/Timer1 counter's current value and the "match" 
3092:Generated_Source\PSoC4/CyLFClk.c ****     * passed as the parameter to this function. The current DeepSleep Timer counter
3093:Generated_Source\PSoC4/CyLFClk.c ****     * value can be obtained using the CySysWdtGetCount() function.
3094:Generated_Source\PSoC4/CyLFClk.c ****     *
3095:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 
3096:Generated_Source\PSoC4/CyLFClk.c ****     * 4200L / PSoC 4100M / PSoC 4200M devices:
3097:Generated_Source\PSoC4/CyLFClk.c ****     * The specified WDT counter should be configured as described below and started.
3098:Generated_Source\PSoC4/CyLFClk.c ****     *
3099:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC PSoC 4100S / PSoC Analog Coprocessor devices:
3100:Generated_Source\PSoC4/CyLFClk.c ****     * The specified DeepSleep Timer counter should be configured as described below
3101:Generated_Source\PSoC4/CyLFClk.c ****     * and started.
3102:Generated_Source\PSoC4/CyLFClk.c ****     *
3103:Generated_Source\PSoC4/CyLFClk.c ****     * This function can operate in two modes: the "WAIT" and "INTERRUPT" modes. In
3104:Generated_Source\PSoC4/CyLFClk.c ****     * the "WAIT" mode, the function waits for the specified number of ticks. In the
3105:Generated_Source\PSoC4/CyLFClk.c ****     * "INTERRUPT" mode, the interrupt is generated after the specified number of
3106:Generated_Source\PSoC4/CyLFClk.c ****     * ticks.
3107:Generated_Source\PSoC4/CyLFClk.c ****     *
3108:Generated_Source\PSoC4/CyLFClk.c ****     * For the correct function operation, the "Clear On Match" option should be
3109:Generated_Source\PSoC4/CyLFClk.c ****     * disabled for the specified WDT or DeepSleep Timer counter. Use 
3110:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtSetClearOnMatch() for WDT or CySysTimerSetClearOnMatch() for DeepSleep
3111:Generated_Source\PSoC4/CyLFClk.c ****     * Timer function with the "enable" parameter equal to zero for the used WDT 
3112:Generated_Source\PSoC4/CyLFClk.c ****     * or DeepSleep Timer counter.
3113:Generated_Source\PSoC4/CyLFClk.c ****     *
3114:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 
3115:Generated_Source\PSoC4/CyLFClk.c ****     * 4200L / PSoC 4100M/PSoC 4200M devices:
3116:Generated_Source\PSoC4/CyLFClk.c ****     * The corresponding WDT counter should be configured to match the selected
3117:Generated_Source\PSoC4/CyLFClk.c ****     * mode: "Free running Timer" for the "WAIT" mode, and
3118:Generated_Source\PSoC4/CyLFClk.c ****     * "Periodic Timer" / "Watchdog (w/Interrupt)" for the "INTERRUPT" mode.
3119:Generated_Source\PSoC4/CyLFClk.c ****     *
3120:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100S / PSoC Analog Coprocessor devices:
3121:Generated_Source\PSoC4/CyLFClk.c ****     * Corresponding DeepSleep Timer counter should be configured to match the 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 123


3122:Generated_Source\PSoC4/CyLFClk.c ****     * selected mode: "Free running Timer" for the "WAIT" mode, and
3123:Generated_Source\PSoC4/CyLFClk.c ****     * "Periodic Timer" for the "INTERRUPT" mode.
3124:Generated_Source\PSoC4/CyLFClk.c ****     *
3125:Generated_Source\PSoC4/CyLFClk.c ****     * This can be configured in two ways:
3126:Generated_Source\PSoC4/CyLFClk.c ****     * - Through the DWR page. Open the "Clocks" tab, click the "Edit Clocks..."
3127:Generated_Source\PSoC4/CyLFClk.c ****     * button, in the "Configure System Clocks" window click on the
3128:Generated_Source\PSoC4/CyLFClk.c ****     * "Low Frequency Clocks" tab and choose the appropriate option for the used
3129:Generated_Source\PSoC4/CyLFClk.c ****     * WDT or DeepSleep Timer counter.
3130:Generated_Source\PSoC4/CyLFClk.c ****     *
3131:Generated_Source\PSoC4/CyLFClk.c ****     * - Through the CySysWdtSetMode() for WDT or CySysTimerSetMode() for DeepSleep
3132:Generated_Source\PSoC4/CyLFClk.c ****     * Timer function. Call it with the appropriate "mode" parameter for the 
3133:Generated_Source\PSoC4/CyLFClk.c ****     * used WDT or DeepSleep Timer counter.
3134:Generated_Source\PSoC4/CyLFClk.c ****     *
3135:Generated_Source\PSoC4/CyLFClk.c ****     * For the "INTERRUPT" mode, the recommended sequence is the following:
3136:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysWdtDisableCounterIsr() for WDT or 
3137:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerDisableIsr() for DeepSleep Timer function to disable servicing
3138:Generated_Source\PSoC4/CyLFClk.c ****     * interrupts of the specified WDT or DeepSleep Timer counter.
3139:Generated_Source\PSoC4/CyLFClk.c ****     *
3140:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysWdtSetInterruptCallback() for WDT or 
3141:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerSetInterruptCallback() for DeepSleep Timer function to register 
3142:Generated_Source\PSoC4/CyLFClk.c ****     * the callback function for the corresponding WDT or DeepSleep Timer counter.
3143:Generated_Source\PSoC4/CyLFClk.c ****     *
3144:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysTimerDelay() function.
3145:Generated_Source\PSoC4/CyLFClk.c ****     *
3146:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1]. The number of the WDT or DeepSleep 
3147:Generated_Source\PSoC4/CyLFClk.c ****     * Timer.
3148:Generated_Source\PSoC4/CyLFClk.c ****     * counter (Timer0 or Timer1).
3149:Generated_Source\PSoC4/CyLFClk.c ****     * \param delayType  CY_SYS_TIMER_WAIT - "WAIT" mode.<br>
3150:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_INTERRUPT - "INTERRUPT" mode.
3151:Generated_Source\PSoC4/CyLFClk.c ****     * \param delay The delay value in the LFCLK ticks
3152:Generated_Source\PSoC4/CyLFClk.c ****     * (allowable range - 16-bit value).
3153:Generated_Source\PSoC4/CyLFClk.c ****     *
3154:Generated_Source\PSoC4/CyLFClk.c ****     * \details
3155:Generated_Source\PSoC4/CyLFClk.c ****     * In the "INTERRUPT" mode, this function enables ISR callback servicing
3156:Generated_Source\PSoC4/CyLFClk.c ****     * from the corresponding WDT counter. Servicing of this ISR callback will be
3157:Generated_Source\PSoC4/CyLFClk.c ****     * disabled after the expiration of the delay time.
3158:Generated_Source\PSoC4/CyLFClk.c ****     *
3159:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
3160:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerDelayUntilMatch(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint32
3161:Generated_Source\PSoC4/CyLFClk.c ****     {
 2792              		.loc 2 3161 0
 2793              		.cfi_startproc
 2794              		@ args = 0, pretend = 0, frame = 0
 2795              		@ frame_needed = 0, uses_anonymous_args = 0
 2796              	.LVL225:
 2797 0000 70B5     		push	{r4, r5, r6, lr}
 2798              		.cfi_def_cfa_offset 16
 2799              		.cfi_offset 4, -16
 2800              		.cfi_offset 5, -12
 2801              		.cfi_offset 6, -8
 2802              		.cfi_offset 14, -4
 2803              		.loc 2 3161 0
 2804 0002 0400     		movs	r4, r0
 2805 0004 0E00     		movs	r6, r1
 2806 0006 1500     		movs	r5, r2
3162:Generated_Source\PSoC4/CyLFClk.c ****         uint32 tmpValue;
3163:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 124


3164:Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_IP_SRSSV2)
3165:Generated_Source\PSoC4/CyLFClk.c ****             if((counterNum < CY_SYS_WDT_COUNTER2) && (0uL == CySysWdtGetClearOnMatch(counterNum)) &
 2807              		.loc 2 3165 0
 2808 0008 0128     		cmp	r0, #1
 2809 000a 22D8     		bhi	.L315
 2810              		.loc 2 3165 0 is_stmt 0 discriminator 1
 2811 000c FFF7FEFF 		bl	CySysWdtGetClearOnMatch
 2812              	.LVL226:
 2813 0010 0028     		cmp	r0, #0
 2814 0012 1ED1     		bne	.L315
 2815              		.loc 2 3165 0 discriminator 2
 2816 0014 0F4B     		ldr	r3, .L325
 2817 0016 9D42     		cmp	r5, r3
 2818 0018 1BD8     		bhi	.L315
3166:Generated_Source\PSoC4/CyLFClk.c ****                                                                 (match <= CY_SYS_UINT16_MAX_VAL))
3167:Generated_Source\PSoC4/CyLFClk.c ****             {
3168:Generated_Source\PSoC4/CyLFClk.c ****                 if(delayType == CY_SYS_TIMER_WAIT)
 2819              		.loc 2 3168 0 is_stmt 1
 2820 001a 002E     		cmp	r6, #0
 2821 001c 0AD1     		bne	.L319
 2822              	.L320:
3169:Generated_Source\PSoC4/CyLFClk.c ****                 {
3170:Generated_Source\PSoC4/CyLFClk.c ****                     do
3171:Generated_Source\PSoC4/CyLFClk.c ****                     {
3172:Generated_Source\PSoC4/CyLFClk.c ****                         tmpValue = CySysWdtGetCount(counterNum);
 2823              		.loc 2 3172 0 discriminator 1
 2824 001e 2000     		movs	r0, r4
 2825 0020 FFF7FEFF 		bl	CySysWdtGetCount
 2826              	.LVL227:
3173:Generated_Source\PSoC4/CyLFClk.c ****                     }while(tmpValue > match);
 2827              		.loc 2 3173 0 discriminator 1
 2828 0024 8542     		cmp	r5, r0
 2829 0026 FAD3     		bcc	.L320
 2830              	.L322:
3174:Generated_Source\PSoC4/CyLFClk.c **** 
3175:Generated_Source\PSoC4/CyLFClk.c ****                     do
3176:Generated_Source\PSoC4/CyLFClk.c ****                     {
3177:Generated_Source\PSoC4/CyLFClk.c ****                         tmpValue = CySysWdtGetCount(counterNum);
 2831              		.loc 2 3177 0 discriminator 1
 2832 0028 2000     		movs	r0, r4
 2833              	.LVL228:
 2834 002a FFF7FEFF 		bl	CySysWdtGetCount
 2835              	.LVL229:
3178:Generated_Source\PSoC4/CyLFClk.c ****                     }while(tmpValue < match);
 2836              		.loc 2 3178 0 discriminator 1
 2837 002e 8542     		cmp	r5, r0
 2838 0030 FAD8     		bhi	.L322
 2839 0032 0EE0     		b	.L315
 2840              	.LVL230:
 2841              	.L319:
 2842              	.LBB140:
 2843              	.LBB141:
3179:Generated_Source\PSoC4/CyLFClk.c ****                 }
3180:Generated_Source\PSoC4/CyLFClk.c ****                 else
3181:Generated_Source\PSoC4/CyLFClk.c ****                 {
3182:Generated_Source\PSoC4/CyLFClk.c ****                     tmpValue = counterIntMaskTbl[counterNum];
 2844              		.loc 2 3182 0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 125


 2845 0034 084B     		ldr	r3, .L325+4
 2846 0036 A200     		lsls	r2, r4, #2
3183:Generated_Source\PSoC4/CyLFClk.c ****                     CySysWdtSetMatch(counterNum, match);
 2847              		.loc 2 3183 0
 2848 0038 2900     		movs	r1, r5
 2849 003a 2000     		movs	r0, r4
3182:Generated_Source\PSoC4/CyLFClk.c ****                     CySysWdtSetMatch(counterNum, match);
 2850              		.loc 2 3182 0
 2851 003c D658     		ldr	r6, [r2, r3]
 2852              	.LVL231:
 2853              		.loc 2 3183 0
 2854 003e FFF7FEFF 		bl	CySysWdtSetMatch
 2855              	.LVL232:
3184:Generated_Source\PSoC4/CyLFClk.c **** 
3185:Generated_Source\PSoC4/CyLFClk.c ****                     disableServicedIsr  |= tmpValue;
 2856              		.loc 2 3185 0
 2857 0042 064A     		ldr	r2, .L325+8
 2858 0044 536A     		ldr	r3, [r2, #36]
 2859 0046 3343     		orrs	r3, r6
 2860 0048 5362     		str	r3, [r2, #36]
3186:Generated_Source\PSoC4/CyLFClk.c ****                     wdtIsrMask |= tmpValue;
 2861              		.loc 2 3186 0
 2862 004a 054A     		ldr	r2, .L325+12
 2863 004c 5368     		ldr	r3, [r2, #4]
 2864 004e 3343     		orrs	r3, r6
 2865 0050 5360     		str	r3, [r2, #4]
 2866              	.LVL233:
 2867              	.L315:
 2868              	.LBE141:
 2869              	.LBE140:
3187:Generated_Source\PSoC4/CyLFClk.c ****                 }
3188:Generated_Source\PSoC4/CyLFClk.c ****             }
3189:Generated_Source\PSoC4/CyLFClk.c ****             else
3190:Generated_Source\PSoC4/CyLFClk.c ****             {
3191:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
3192:Generated_Source\PSoC4/CyLFClk.c ****             }
3193:Generated_Source\PSoC4/CyLFClk.c **** 
3194:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_SRSSV2) */  
3195:Generated_Source\PSoC4/CyLFClk.c **** 
3196:Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_IP_WCO_WDT_EN && CY_IP_SRSSLT)
3197:Generated_Source\PSoC4/CyLFClk.c ****         if((counterNum < CY_SYS_TIMER2) && (0uL == CySysTimerGetClearOnMatch(counterNum)) &&
3198:Generated_Source\PSoC4/CyLFClk.c ****                                                         (match <= CY_SYS_UINT16_MAX_VAL))
3199:Generated_Source\PSoC4/CyLFClk.c ****         {
3200:Generated_Source\PSoC4/CyLFClk.c ****             if(delayType == CY_SYS_TIMER_WAIT)
3201:Generated_Source\PSoC4/CyLFClk.c ****             {
3202:Generated_Source\PSoC4/CyLFClk.c ****                 do
3203:Generated_Source\PSoC4/CyLFClk.c ****                 {
3204:Generated_Source\PSoC4/CyLFClk.c ****                     tmpValue = CySysTimerGetCount(counterNum);
3205:Generated_Source\PSoC4/CyLFClk.c ****                 }while(tmpValue > match);
3206:Generated_Source\PSoC4/CyLFClk.c **** 
3207:Generated_Source\PSoC4/CyLFClk.c ****                 do
3208:Generated_Source\PSoC4/CyLFClk.c ****                 {
3209:Generated_Source\PSoC4/CyLFClk.c ****                     tmpValue = CySysTimerGetCount(counterNum);
3210:Generated_Source\PSoC4/CyLFClk.c ****                 }while(tmpValue < match);
3211:Generated_Source\PSoC4/CyLFClk.c ****             }
3212:Generated_Source\PSoC4/CyLFClk.c ****             else
3213:Generated_Source\PSoC4/CyLFClk.c ****             {
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 126


3214:Generated_Source\PSoC4/CyLFClk.c ****                 tmpValue = counterTimerIntMaskTbl[counterNum];
3215:Generated_Source\PSoC4/CyLFClk.c ****                 CySysTimerSetMatch(counterNum, match);
3216:Generated_Source\PSoC4/CyLFClk.c **** 
3217:Generated_Source\PSoC4/CyLFClk.c ****                 disableTimerServicedIsr  |= tmpValue;
3218:Generated_Source\PSoC4/CyLFClk.c ****                 timerIsrMask |= tmpValue;
3219:Generated_Source\PSoC4/CyLFClk.c ****             }
3220:Generated_Source\PSoC4/CyLFClk.c ****         }
3221:Generated_Source\PSoC4/CyLFClk.c ****         else
3222:Generated_Source\PSoC4/CyLFClk.c ****         {
3223:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
3224:Generated_Source\PSoC4/CyLFClk.c ****         }
3225:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_WCO_WDT_EN && CY_IP_SRSSLT) */
3226:Generated_Source\PSoC4/CyLFClk.c ****     }
 2870              		.loc 2 3226 0
 2871              		@ sp needed
 2872              	.LVL234:
 2873              	.LVL235:
 2874 0052 70BD     		pop	{r4, r5, r6, pc}
 2875              	.L326:
 2876              		.align	2
 2877              	.L325:
 2878 0054 FFFF0000 		.word	65535
 2879 0058 00000000 		.word	.LANCHOR2
 2880 005c 00000000 		.word	.LANCHOR0
 2881 0060 00000000 		.word	.LANCHOR1
 2882              		.cfi_endproc
 2883              	.LFE46:
 2884              		.size	CySysTimerDelayUntilMatch, .-CySysTimerDelayUntilMatch
 2885              		.section	.text.CySysTimerDelay,"ax",%progbits
 2886              		.align	1
 2887              		.global	CySysTimerDelay
 2888              		.code	16
 2889              		.thumb_func
 2890              		.type	CySysTimerDelay, %function
 2891              	CySysTimerDelay:
 2892              	.LFB45:
3032:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue;
 2893              		.loc 2 3032 0
 2894              		.cfi_startproc
 2895              		@ args = 0, pretend = 0, frame = 0
 2896              		@ frame_needed = 0, uses_anonymous_args = 0
 2897              	.LVL236:
 2898 0000 70B5     		push	{r4, r5, r6, lr}
 2899              		.cfi_def_cfa_offset 16
 2900              		.cfi_offset 4, -16
 2901              		.cfi_offset 5, -12
 2902              		.cfi_offset 6, -8
 2903              		.cfi_offset 14, -4
3032:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue;
 2904              		.loc 2 3032 0
 2905 0002 0400     		movs	r4, r0
 2906 0004 0D00     		movs	r5, r1
 2907 0006 1600     		movs	r6, r2
3037:Generated_Source\PSoC4/CyLFClk.c ****                                                                 (delay <= CY_SYS_UINT16_MAX_VAL))
 2908              		.loc 2 3037 0
 2909 0008 0128     		cmp	r0, #1
 2910 000a 0FD8     		bhi	.L327
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 127


3037:Generated_Source\PSoC4/CyLFClk.c ****                                                                 (delay <= CY_SYS_UINT16_MAX_VAL))
 2911              		.loc 2 3037 0 is_stmt 0 discriminator 1
 2912 000c FFF7FEFF 		bl	CySysWdtGetClearOnMatch
 2913              	.LVL237:
 2914 0010 0028     		cmp	r0, #0
 2915 0012 0BD1     		bne	.L327
3037:Generated_Source\PSoC4/CyLFClk.c ****                                                                 (delay <= CY_SYS_UINT16_MAX_VAL))
 2916              		.loc 2 3037 0 discriminator 2
 2917 0014 064B     		ldr	r3, .L331
 2918 0016 9E42     		cmp	r6, r3
 2919 0018 08D8     		bhi	.L327
3040:Generated_Source\PSoC4/CyLFClk.c ****                 matchValue = (regValue + delay) & (uint32)CY_SYS_UINT16_MAX_VAL;
 2920              		.loc 2 3040 0 is_stmt 1
 2921 001a 2000     		movs	r0, r4
 2922 001c FFF7FEFF 		bl	CySysWdtGetCount
 2923              	.LVL238:
3043:Generated_Source\PSoC4/CyLFClk.c ****             }
 2924              		.loc 2 3043 0
 2925 0020 3018     		adds	r0, r6, r0
 2926              	.LVL239:
 2927 0022 82B2     		uxth	r2, r0
 2928 0024 2900     		movs	r1, r5
 2929 0026 2000     		movs	r0, r4
 2930 0028 FFF7FEFF 		bl	CySysTimerDelayUntilMatch
 2931              	.LVL240:
 2932              	.L327:
3065:Generated_Source\PSoC4/CyLFClk.c **** 
 2933              		.loc 2 3065 0
 2934              		@ sp needed
 2935              	.LVL241:
 2936              	.LVL242:
 2937 002c 70BD     		pop	{r4, r5, r6, pc}
 2938              	.L332:
 2939 002e C046     		.align	2
 2940              	.L331:
 2941 0030 FFFF0000 		.word	65535
 2942              		.cfi_endproc
 2943              	.LFE45:
 2944              		.size	CySysTimerDelay, .-CySysTimerDelay
 2945              		.section	.rodata
 2946              		.align	2
 2947              		.set	.LANCHOR2,. + 0
 2948              		.type	counterIntMaskTbl, %object
 2949              		.size	counterIntMaskTbl, 12
 2950              	counterIntMaskTbl:
 2951 0000 04000000 		.word	4
 2952 0004 00040000 		.word	1024
 2953 0008 00000400 		.word	262144
 2954              		.data
 2955              		.align	2
 2956              		.set	.LANCHOR1,. + 0
 2957              		.type	defaultIloTrimRegValue, %object
 2958              		.size	defaultIloTrimRegValue, 2
 2959              	defaultIloTrimRegValue:
 2960 0000 F000     		.short	240
 2961 0002 0000     		.space	2
 2962              		.type	wdtIsrMask, %object
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 128


 2963              		.size	wdtIsrMask, 4
 2964              	wdtIsrMask:
 2965 0004 04040400 		.word	263172
 2966              		.bss
 2967              		.align	2
 2968              		.set	.LANCHOR0,. + 0
 2969              		.type	iloTrimTrig.4871, %object
 2970              		.size	iloTrimTrig.4871, 1
 2971              	iloTrimTrig.4871:
 2972 0000 00       		.space	1
 2973 0001 000000   		.space	3
 2974              		.type	compensateRunningStatus.4881, %object
 2975              		.size	compensateRunningStatus.4881, 4
 2976              	compensateRunningStatus.4881:
 2977 0004 00000000 		.space	4
 2978              		.type	trimRunningStatus.4893, %object
 2979              		.size	trimRunningStatus.4893, 4
 2980              	trimRunningStatus.4893:
 2981 0008 00000000 		.space	4
 2982              		.type	lfclkPosedgeWdtCounter0Enabled, %object
 2983              		.size	lfclkPosedgeWdtCounter0Enabled, 4
 2984              	lfclkPosedgeWdtCounter0Enabled:
 2985 000c 00000000 		.space	4
 2986              		.type	lfclkPosedgeWdtCounter0Mode, %object
 2987              		.size	lfclkPosedgeWdtCounter0Mode, 4
 2988              	lfclkPosedgeWdtCounter0Mode:
 2989 0010 00000000 		.space	4
 2990              		.type	lfclkPosedgeEnabledWdtCounter.5066, %object
 2991              		.size	lfclkPosedgeEnabledWdtCounter.5066, 4
 2992              	lfclkPosedgeEnabledWdtCounter.5066:
 2993 0014 00000000 		.space	4
 2994              		.type	cySysWdtCallback, %object
 2995              		.size	cySysWdtCallback, 12
 2996              	cySysWdtCallback:
 2997 0018 00000000 		.space	12
 2997      00000000 
 2997      00000000 
 2998              		.type	disableServicedIsr, %object
 2999              		.size	disableServicedIsr, 4
 3000              	disableServicedIsr:
 3001 0024 00000000 		.space	4
 3002              		.text
 3003              	.Letext0:
 3004              		.file 3 "Generated_Source\\PSoC4\\cytypes.h"
 3005              		.file 4 "Generated_Source\\PSoC4\\CyLib.h"
 3006              		.section	.debug_info,"",%progbits
 3007              	.Ldebug_info0:
 3008 0000 3F110000 		.4byte	0x113f
 3009 0004 0400     		.2byte	0x4
 3010 0006 00000000 		.4byte	.Ldebug_abbrev0
 3011 000a 04       		.byte	0x4
 3012 000b 01       		.uleb128 0x1
 3013 000c 2C050000 		.4byte	.LASF120
 3014 0010 0C       		.byte	0xc
 3015 0011 68070000 		.4byte	.LASF121
 3016 0015 7B060000 		.4byte	.LASF122
 3017 0019 90000000 		.4byte	.Ldebug_ranges0+0x90
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 129


 3018 001d 00000000 		.4byte	0
 3019 0021 00000000 		.4byte	.Ldebug_line0
 3020 0025 02       		.uleb128 0x2
 3021 0026 04       		.byte	0x4
 3022 0027 07       		.byte	0x7
 3023 0028 2B030000 		.4byte	.LASF0
 3024 002c 02       		.uleb128 0x2
 3025 002d 01       		.byte	0x1
 3026 002e 06       		.byte	0x6
 3027 002f 96010000 		.4byte	.LASF1
 3028 0033 02       		.uleb128 0x2
 3029 0034 01       		.byte	0x1
 3030 0035 08       		.byte	0x8
 3031 0036 BC060000 		.4byte	.LASF2
 3032 003a 02       		.uleb128 0x2
 3033 003b 02       		.byte	0x2
 3034 003c 05       		.byte	0x5
 3035 003d 06070000 		.4byte	.LASF3
 3036 0041 02       		.uleb128 0x2
 3037 0042 02       		.byte	0x2
 3038 0043 07       		.byte	0x7
 3039 0044 DD030000 		.4byte	.LASF4
 3040 0048 02       		.uleb128 0x2
 3041 0049 04       		.byte	0x4
 3042 004a 05       		.byte	0x5
 3043 004b 08020000 		.4byte	.LASF5
 3044 004f 02       		.uleb128 0x2
 3045 0050 04       		.byte	0x4
 3046 0051 07       		.byte	0x7
 3047 0052 73030000 		.4byte	.LASF6
 3048 0056 02       		.uleb128 0x2
 3049 0057 08       		.byte	0x8
 3050 0058 05       		.byte	0x5
 3051 0059 88010000 		.4byte	.LASF7
 3052 005d 02       		.uleb128 0x2
 3053 005e 08       		.byte	0x8
 3054 005f 07       		.byte	0x7
 3055 0060 05010000 		.4byte	.LASF8
 3056 0064 03       		.uleb128 0x3
 3057 0065 04       		.byte	0x4
 3058 0066 05       		.byte	0x5
 3059 0067 696E7400 		.ascii	"int\000"
 3060 006b 04       		.uleb128 0x4
 3061 006c 23020000 		.4byte	.LASF9
 3062 0070 03       		.byte	0x3
 3063 0071 E401     		.2byte	0x1e4
 3064 0073 33000000 		.4byte	0x33
 3065 0077 04       		.uleb128 0x4
 3066 0078 00000000 		.4byte	.LASF10
 3067 007c 03       		.byte	0x3
 3068 007d E501     		.2byte	0x1e5
 3069 007f 41000000 		.4byte	0x41
 3070 0083 04       		.uleb128 0x4
 3071 0084 7B020000 		.4byte	.LASF11
 3072 0088 03       		.byte	0x3
 3073 0089 E601     		.2byte	0x1e6
 3074 008b 4F000000 		.4byte	0x4f
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 130


 3075 008f 04       		.uleb128 0x4
 3076 0090 C6010000 		.4byte	.LASF12
 3077 0094 03       		.byte	0x3
 3078 0095 E901     		.2byte	0x1e9
 3079 0097 48000000 		.4byte	0x48
 3080 009b 02       		.uleb128 0x2
 3081 009c 04       		.byte	0x4
 3082 009d 04       		.byte	0x4
 3083 009e 4B060000 		.4byte	.LASF13
 3084 00a2 02       		.uleb128 0x2
 3085 00a3 08       		.byte	0x8
 3086 00a4 04       		.byte	0x4
 3087 00a5 30020000 		.4byte	.LASF14
 3088 00a9 02       		.uleb128 0x2
 3089 00aa 01       		.byte	0x1
 3090 00ab 08       		.byte	0x8
 3091 00ac DC070000 		.4byte	.LASF15
 3092 00b0 04       		.uleb128 0x4
 3093 00b1 AF080000 		.4byte	.LASF16
 3094 00b5 03       		.byte	0x3
 3095 00b6 8602     		.2byte	0x286
 3096 00b8 4F000000 		.4byte	0x4f
 3097 00bc 05       		.uleb128 0x5
 3098 00bd 77000000 		.4byte	0x77
 3099 00c1 04       		.uleb128 0x4
 3100 00c2 93040000 		.4byte	.LASF17
 3101 00c6 03       		.byte	0x3
 3102 00c7 9002     		.2byte	0x290
 3103 00c9 CD000000 		.4byte	0xcd
 3104 00cd 05       		.uleb128 0x5
 3105 00ce 83000000 		.4byte	0x83
 3106 00d2 06       		.uleb128 0x6
 3107 00d3 04       		.byte	0x4
 3108 00d4 D8000000 		.4byte	0xd8
 3109 00d8 07       		.uleb128 0x7
 3110 00d9 08       		.uleb128 0x8
 3111 00da 01       		.byte	0x1
 3112 00db 33000000 		.4byte	0x33
 3113 00df 01       		.byte	0x1
 3114 00e0 1A       		.byte	0x1a
 3115 00e1 F2000000 		.4byte	0xf2
 3116 00e5 09       		.uleb128 0x9
 3117 00e6 DE050000 		.4byte	.LASF18
 3118 00ea 00       		.byte	0
 3119 00eb 09       		.uleb128 0x9
 3120 00ec EF080000 		.4byte	.LASF19
 3121 00f0 01       		.byte	0x1
 3122 00f1 00       		.byte	0
 3123 00f2 0A       		.uleb128 0xa
 3124 00f3 E7010000 		.4byte	.LASF20
 3125 00f7 01       		.byte	0x1
 3126 00f8 1D       		.byte	0x1d
 3127 00f9 D9000000 		.4byte	0xd9
 3128 00fd 0A       		.uleb128 0xa
 3129 00fe B8010000 		.4byte	.LASF21
 3130 0102 01       		.byte	0x1
 3131 0103 58       		.byte	0x58
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 131


 3132 0104 D2000000 		.4byte	0xd2
 3133 0108 02       		.uleb128 0x2
 3134 0109 08       		.byte	0x8
 3135 010a 04       		.byte	0x4
 3136 010b 0F050000 		.4byte	.LASF22
 3137 010f 02       		.uleb128 0x2
 3138 0110 04       		.byte	0x4
 3139 0111 07       		.byte	0x7
 3140 0112 06050000 		.4byte	.LASF23
 3141 0116 0B       		.uleb128 0xb
 3142 0117 32040000 		.4byte	.LASF33
 3143 011b 02       		.byte	0x2
 3144 011c 3B02     		.2byte	0x23b
 3145 011e B0000000 		.4byte	0xb0
 3146 0122 01       		.byte	0x1
 3147 0123 70010000 		.4byte	0x170
 3148 0127 0C       		.uleb128 0xc
 3149 0128 89070000 		.4byte	.LASF29
 3150 012c 02       		.byte	0x2
 3151 012d 3B02     		.2byte	0x23b
 3152 012f 70010000 		.4byte	0x170
 3153 0133 0D       		.uleb128 0xd
 3154 0134 6B000000 		.4byte	.LASF24
 3155 0138 02       		.byte	0x2
 3156 0139 3D02     		.2byte	0x23d
 3157 013b 83000000 		.4byte	0x83
 3158 013f 0D       		.uleb128 0xd
 3159 0140 34010000 		.4byte	.LASF25
 3160 0144 02       		.byte	0x2
 3161 0145 3E02     		.2byte	0x23e
 3162 0147 83000000 		.4byte	0x83
 3163 014b 0D       		.uleb128 0xd
 3164 014c D6010000 		.4byte	.LASF26
 3165 0150 02       		.byte	0x2
 3166 0151 3F02     		.2byte	0x23f
 3167 0153 8F000000 		.4byte	0x8f
 3168 0157 0D       		.uleb128 0xd
 3169 0158 D4030000 		.4byte	.LASF27
 3170 015c 02       		.byte	0x2
 3171 015d 4002     		.2byte	0x240
 3172 015f 8F000000 		.4byte	0x8f
 3173 0163 0D       		.uleb128 0xd
 3174 0164 5B010000 		.4byte	.LASF28
 3175 0168 02       		.byte	0x2
 3176 0169 4102     		.2byte	0x241
 3177 016b B0000000 		.4byte	0xb0
 3178 016f 00       		.byte	0
 3179 0170 06       		.uleb128 0x6
 3180 0171 04       		.byte	0x4
 3181 0172 8F000000 		.4byte	0x8f
 3182 0176 0E       		.uleb128 0xe
 3183 0177 4C000000 		.4byte	.LASF35
 3184 017b 02       		.byte	0x2
 3185 017c 1704     		.2byte	0x417
 3186 017e 01       		.byte	0x1
 3187 017f A8010000 		.4byte	0x1a8
 3188 0183 0C       		.uleb128 0xc
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 132


 3189 0184 7B000000 		.4byte	.LASF30
 3190 0188 02       		.byte	0x2
 3191 0189 1704     		.2byte	0x417
 3192 018b 83000000 		.4byte	0x83
 3193 018f 0C       		.uleb128 0xc
 3194 0190 E1070000 		.4byte	.LASF31
 3195 0194 02       		.byte	0x2
 3196 0195 1704     		.2byte	0x417
 3197 0197 83000000 		.4byte	0x83
 3198 019b 0D       		.uleb128 0xd
 3199 019c 6B080000 		.4byte	.LASF32
 3200 01a0 02       		.byte	0x2
 3201 01a1 1904     		.2byte	0x419
 3202 01a3 83000000 		.4byte	0x83
 3203 01a7 00       		.byte	0
 3204 01a8 0F       		.uleb128 0xf
 3205 01a9 9F030000 		.4byte	.LASF123
 3206 01ad 02       		.byte	0x2
 3207 01ae 6607     		.2byte	0x766
 3208 01b0 01       		.byte	0x1
 3209 01b1 0B       		.uleb128 0xb
 3210 01b2 F0030000 		.4byte	.LASF34
 3211 01b6 02       		.byte	0x2
 3212 01b7 F903     		.2byte	0x3f9
 3213 01b9 83000000 		.4byte	0x83
 3214 01bd 01       		.byte	0x1
 3215 01be CF010000 		.4byte	0x1cf
 3216 01c2 0C       		.uleb128 0xc
 3217 01c3 7B000000 		.4byte	.LASF30
 3218 01c7 02       		.byte	0x2
 3219 01c8 F903     		.2byte	0x3f9
 3220 01ca 83000000 		.4byte	0x83
 3221 01ce 00       		.byte	0
 3222 01cf 0E       		.uleb128 0xe
 3223 01d0 DB020000 		.4byte	.LASF36
 3224 01d4 02       		.byte	0x2
 3225 01d5 9A04     		.2byte	0x49a
 3226 01d7 01       		.byte	0x1
 3227 01d8 E9010000 		.4byte	0x1e9
 3228 01dc 0C       		.uleb128 0xc
 3229 01dd 07030000 		.4byte	.LASF37
 3230 01e1 02       		.byte	0x2
 3231 01e2 9A04     		.2byte	0x49a
 3232 01e4 83000000 		.4byte	0x83
 3233 01e8 00       		.byte	0
 3234 01e9 0B       		.uleb128 0xb
 3235 01ea 46080000 		.4byte	.LASF38
 3236 01ee 02       		.byte	0x2
 3237 01ef 3304     		.2byte	0x433
 3238 01f1 83000000 		.4byte	0x83
 3239 01f5 01       		.byte	0x1
 3240 01f6 07020000 		.4byte	0x207
 3241 01fa 0C       		.uleb128 0xc
 3242 01fb 7B000000 		.4byte	.LASF30
 3243 01ff 02       		.byte	0x2
 3244 0200 3304     		.2byte	0x433
 3245 0202 83000000 		.4byte	0x83
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 133


 3246 0206 00       		.byte	0
 3247 0207 10       		.uleb128 0x10
 3248 0208 B3000000 		.4byte	.LASF124
 3249 020c 02       		.byte	0x2
 3250 020d AD02     		.2byte	0x2ad
 3251 020f 83000000 		.4byte	0x83
 3252 0213 01       		.byte	0x1
 3253 0214 25020000 		.4byte	0x225
 3254 0218 0D       		.uleb128 0xd
 3255 0219 1D000000 		.4byte	.LASF39
 3256 021d 02       		.byte	0x2
 3257 021e AF02     		.2byte	0x2af
 3258 0220 83000000 		.4byte	0x83
 3259 0224 00       		.byte	0
 3260 0225 0E       		.uleb128 0xe
 3261 0226 51060000 		.4byte	.LASF40
 3262 022a 02       		.byte	0x2
 3263 022b 580C     		.2byte	0xc58
 3264 022d 01       		.byte	0x1
 3265 022e 63020000 		.4byte	0x263
 3266 0232 0C       		.uleb128 0xc
 3267 0233 7B000000 		.4byte	.LASF30
 3268 0237 02       		.byte	0x2
 3269 0238 580C     		.2byte	0xc58
 3270 023a 83000000 		.4byte	0x83
 3271 023e 0C       		.uleb128 0xc
 3272 023f 10070000 		.4byte	.LASF41
 3273 0243 02       		.byte	0x2
 3274 0244 580C     		.2byte	0xc58
 3275 0246 F2000000 		.4byte	0xf2
 3276 024a 0C       		.uleb128 0xc
 3277 024b BA050000 		.4byte	.LASF42
 3278 024f 02       		.byte	0x2
 3279 0250 580C     		.2byte	0xc58
 3280 0252 83000000 		.4byte	0x83
 3281 0256 0D       		.uleb128 0xd
 3282 0257 0A080000 		.4byte	.LASF43
 3283 025b 02       		.byte	0x2
 3284 025c 5A0C     		.2byte	0xc5a
 3285 025e 83000000 		.4byte	0x83
 3286 0262 00       		.byte	0
 3287 0263 11       		.uleb128 0x11
 3288 0264 6C010000 		.4byte	.LASF125
 3289 0268 01       		.byte	0x1
 3290 0269 9202     		.2byte	0x292
 3291 026b 00000000 		.4byte	.LFB0
 3292 026f 34000000 		.4byte	.LFE0-.LFB0
 3293 0273 01       		.uleb128 0x1
 3294 0274 9C       		.byte	0x9c
 3295 0275 12       		.uleb128 0x12
 3296 0276 4B040000 		.4byte	.LASF44
 3297 027a 02       		.byte	0x2
 3298 027b 53       		.byte	0x53
 3299 027c 00000000 		.4byte	.LFB1
 3300 0280 14000000 		.4byte	.LFE1-.LFB1
 3301 0284 01       		.uleb128 0x1
 3302 0285 9C       		.byte	0x9c
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 134


 3303 0286 13       		.uleb128 0x13
 3304 0287 CA000000 		.4byte	.LASF60
 3305 028b 02       		.byte	0x2
 3306 028c A8       		.byte	0xa8
 3307 028d 00000000 		.4byte	.LFB3
 3308 0291 58000000 		.4byte	.LFE3-.LFB3
 3309 0295 01       		.uleb128 0x1
 3310 0296 9C       		.byte	0x9c
 3311 0297 AD020000 		.4byte	0x2ad
 3312 029b 14       		.uleb128 0x14
 3313 029c 26040000 		.4byte	.LASF48
 3314 02a0 02       		.byte	0x2
 3315 02a1 AB       		.byte	0xab
 3316 02a2 6B000000 		.4byte	0x6b
 3317 02a6 05       		.uleb128 0x5
 3318 02a7 03       		.byte	0x3
 3319 02a8 00000000 		.4byte	iloTrimTrig.4871
 3320 02ac 00       		.byte	0
 3321 02ad 12       		.uleb128 0x12
 3322 02ae 82020000 		.4byte	.LASF45
 3323 02b2 02       		.byte	0x2
 3324 02b3 C9       		.byte	0xc9
 3325 02b4 00000000 		.4byte	.LFB4
 3326 02b8 14000000 		.4byte	.LFE4-.LFB4
 3327 02bc 01       		.uleb128 0x1
 3328 02bd 9C       		.byte	0x9c
 3329 02be 15       		.uleb128 0x15
 3330 02bf D9080000 		.4byte	.LASF54
 3331 02c3 02       		.byte	0x2
 3332 02c4 0B01     		.2byte	0x10b
 3333 02c6 B0000000 		.4byte	0xb0
 3334 02ca 00000000 		.4byte	.LFB5
 3335 02ce E8000000 		.4byte	.LFE5-.LFB5
 3336 02d2 01       		.uleb128 0x1
 3337 02d3 9C       		.byte	0x9c
 3338 02d4 4B030000 		.4byte	0x34b
 3339 02d8 16       		.uleb128 0x16
 3340 02d9 66030000 		.4byte	.LASF46
 3341 02dd 02       		.byte	0x2
 3342 02de 0B01     		.2byte	0x10b
 3343 02e0 83000000 		.4byte	0x83
 3344 02e4 00000000 		.4byte	.LLST0
 3345 02e8 16       		.uleb128 0x16
 3346 02e9 37020000 		.4byte	.LASF47
 3347 02ed 02       		.byte	0x2
 3348 02ee 0B01     		.2byte	0x10b
 3349 02f0 4B030000 		.4byte	0x34b
 3350 02f4 45000000 		.4byte	.LLST1
 3351 02f8 17       		.uleb128 0x17
 3352 02f9 59020000 		.4byte	.LASF49
 3353 02fd 02       		.byte	0x2
 3354 02fe 0D01     		.2byte	0x10d
 3355 0300 83000000 		.4byte	0x83
 3356 0304 71000000 		.4byte	.LLST2
 3357 0308 17       		.uleb128 0x17
 3358 0309 56080000 		.4byte	.LASF50
 3359 030d 02       		.byte	0x2
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 135


 3360 030e 0E01     		.2byte	0x10e
 3361 0310 83000000 		.4byte	0x83
 3362 0314 9B000000 		.4byte	.LLST3
 3363 0318 18       		.uleb128 0x18
 3364 0319 CA060000 		.4byte	.LASF51
 3365 031d 02       		.byte	0x2
 3366 031e 0F01     		.2byte	0x10f
 3367 0320 83000000 		.4byte	0x83
 3368 0324 05       		.uleb128 0x5
 3369 0325 03       		.byte	0x3
 3370 0326 04000000 		.4byte	compensateRunningStatus.4881
 3371 032a 17       		.uleb128 0x17
 3372 032b F0050000 		.4byte	.LASF52
 3373 032f 02       		.byte	0x2
 3374 0330 1001     		.2byte	0x110
 3375 0332 83000000 		.4byte	0x83
 3376 0336 F3000000 		.4byte	.LLST4
 3377 033a 17       		.uleb128 0x17
 3378 033b D8040000 		.4byte	.LASF53
 3379 033f 02       		.byte	0x2
 3380 0340 1101     		.2byte	0x111
 3381 0342 B0000000 		.4byte	0xb0
 3382 0346 17010000 		.4byte	.LLST5
 3383 034a 00       		.byte	0
 3384 034b 06       		.uleb128 0x6
 3385 034c 04       		.byte	0x4
 3386 034d 83000000 		.4byte	0x83
 3387 0351 19       		.uleb128 0x19
 3388 0352 16010000 		.4byte	0x116
 3389 0356 00000000 		.4byte	.LFB8
 3390 035a 90000000 		.4byte	.LFE8-.LFB8
 3391 035e 01       		.uleb128 0x1
 3392 035f 9C       		.byte	0x9c
 3393 0360 D3030000 		.4byte	0x3d3
 3394 0364 1A       		.uleb128 0x1a
 3395 0365 27010000 		.4byte	0x127
 3396 0369 36010000 		.4byte	.LLST6
 3397 036d 1B       		.uleb128 0x1b
 3398 036e 33010000 		.4byte	0x133
 3399 0372 1B       		.uleb128 0x1b
 3400 0373 3F010000 		.4byte	0x13f
 3401 0377 1B       		.uleb128 0x1b
 3402 0378 4B010000 		.4byte	0x14b
 3403 037c 1B       		.uleb128 0x1b
 3404 037d 57010000 		.4byte	0x157
 3405 0381 1C       		.uleb128 0x1c
 3406 0382 63010000 		.4byte	0x163
 3407 0386 01       		.uleb128 0x1
 3408 0387 50       		.byte	0x50
 3409 0388 1D       		.uleb128 0x1d
 3410 0389 0E000000 		.4byte	.LBB44
 3411 038d 6C000000 		.4byte	.LBE44-.LBB44
 3412 0391 1A       		.uleb128 0x1a
 3413 0392 27010000 		.4byte	0x127
 3414 0396 62010000 		.4byte	.LLST7
 3415 039a 1D       		.uleb128 0x1d
 3416 039b 0E000000 		.4byte	.LBB45
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 136


 3417 039f 6C000000 		.4byte	.LBE45-.LBB45
 3418 03a3 1E       		.uleb128 0x1e
 3419 03a4 33010000 		.4byte	0x133
 3420 03a8 75010000 		.4byte	.LLST8
 3421 03ac 1E       		.uleb128 0x1e
 3422 03ad 3F010000 		.4byte	0x13f
 3423 03b1 98010000 		.4byte	.LLST9
 3424 03b5 1E       		.uleb128 0x1e
 3425 03b6 4B010000 		.4byte	0x14b
 3426 03ba BA010000 		.4byte	.LLST10
 3427 03be 1E       		.uleb128 0x1e
 3428 03bf 57010000 		.4byte	0x157
 3429 03c3 E3010000 		.4byte	.LLST11
 3430 03c7 1E       		.uleb128 0x1e
 3431 03c8 63010000 		.4byte	0x163
 3432 03cc 01020000 		.4byte	.LLST12
 3433 03d0 00       		.byte	0
 3434 03d1 00       		.byte	0
 3435 03d2 00       		.byte	0
 3436 03d3 1F       		.uleb128 0x1f
 3437 03d4 2A070000 		.4byte	.LASF55
 3438 03d8 02       		.byte	0x2
 3439 03d9 C101     		.2byte	0x1c1
 3440 03db B0000000 		.4byte	0xb0
 3441 03df 00000000 		.4byte	.LFB7
 3442 03e3 BC000000 		.4byte	.LFE7-.LFB7
 3443 03e7 01       		.uleb128 0x1
 3444 03e8 9C       		.byte	0x9c
 3445 03e9 84040000 		.4byte	0x484
 3446 03ed 16       		.uleb128 0x16
 3447 03ee E1070000 		.4byte	.LASF31
 3448 03f2 02       		.byte	0x2
 3449 03f3 C101     		.2byte	0x1c1
 3450 03f5 83000000 		.4byte	0x83
 3451 03f9 21020000 		.4byte	.LLST13
 3452 03fd 16       		.uleb128 0x16
 3453 03fe 89070000 		.4byte	.LASF29
 3454 0402 02       		.byte	0x2
 3455 0403 C101     		.2byte	0x1c1
 3456 0405 70010000 		.4byte	0x170
 3457 0409 8D020000 		.4byte	.LLST14
 3458 040d 17       		.uleb128 0x17
 3459 040e 26080000 		.4byte	.LASF56
 3460 0412 02       		.byte	0x2
 3461 0413 C301     		.2byte	0x1c3
 3462 0415 83000000 		.4byte	0x83
 3463 0419 FB020000 		.4byte	.LLST15
 3464 041d 17       		.uleb128 0x17
 3465 041e 20060000 		.4byte	.LASF57
 3466 0422 02       		.byte	0x2
 3467 0423 C401     		.2byte	0x1c4
 3468 0425 83000000 		.4byte	0x83
 3469 0429 3D030000 		.4byte	.LLST16
 3470 042d 18       		.uleb128 0x18
 3471 042e 34080000 		.4byte	.LASF58
 3472 0432 02       		.byte	0x2
 3473 0433 C501     		.2byte	0x1c5
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 137


 3474 0435 83000000 		.4byte	0x83
 3475 0439 05       		.uleb128 0x5
 3476 043a 03       		.byte	0x3
 3477 043b 08000000 		.4byte	trimRunningStatus.4893
 3478 043f 17       		.uleb128 0x17
 3479 0440 F0050000 		.4byte	.LASF52
 3480 0444 02       		.byte	0x2
 3481 0445 C601     		.2byte	0x1c6
 3482 0447 83000000 		.4byte	0x83
 3483 044b 74030000 		.4byte	.LLST17
 3484 044f 17       		.uleb128 0x17
 3485 0450 D8040000 		.4byte	.LASF53
 3486 0454 02       		.byte	0x2
 3487 0455 C701     		.2byte	0x1c7
 3488 0457 B0000000 		.4byte	0xb0
 3489 045b A3030000 		.4byte	.LLST18
 3490 045f 20       		.uleb128 0x20
 3491 0460 52000000 		.4byte	.LVL53
 3492 0464 16010000 		.4byte	0x116
 3493 0468 73040000 		.4byte	0x473
 3494 046c 21       		.uleb128 0x21
 3495 046d 01       		.uleb128 0x1
 3496 046e 50       		.byte	0x50
 3497 046f 02       		.uleb128 0x2
 3498 0470 77       		.byte	0x77
 3499 0471 00       		.sleb128 0
 3500 0472 00       		.byte	0
 3501 0473 22       		.uleb128 0x22
 3502 0474 82000000 		.4byte	.LVL58
 3503 0478 16010000 		.4byte	0x116
 3504 047c 21       		.uleb128 0x21
 3505 047d 01       		.uleb128 0x1
 3506 047e 50       		.byte	0x50
 3507 047f 02       		.uleb128 0x2
 3508 0480 77       		.byte	0x77
 3509 0481 00       		.sleb128 0
 3510 0482 00       		.byte	0
 3511 0483 00       		.byte	0
 3512 0484 1F       		.uleb128 0x1f
 3513 0485 C0050000 		.4byte	.LASF59
 3514 0489 02       		.byte	0x2
 3515 048a 8802     		.2byte	0x288
 3516 048c B0000000 		.4byte	0xb0
 3517 0490 00000000 		.4byte	.LFB9
 3518 0494 2C000000 		.4byte	.LFE9-.LFB9
 3519 0498 01       		.uleb128 0x1
 3520 0499 9C       		.byte	0x9c
 3521 049a AF040000 		.4byte	0x4af
 3522 049e 17       		.uleb128 0x17
 3523 049f D8040000 		.4byte	.LASF53
 3524 04a3 02       		.byte	0x2
 3525 04a4 8A02     		.2byte	0x28a
 3526 04a6 B0000000 		.4byte	0xb0
 3527 04aa CE030000 		.4byte	.LLST19
 3528 04ae 00       		.byte	0
 3529 04af 23       		.uleb128 0x23
 3530 04b0 C7040000 		.4byte	.LASF61
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 138


 3531 04b4 02       		.byte	0x2
 3532 04b5 0303     		.2byte	0x303
 3533 04b7 00000000 		.4byte	.LFB12
 3534 04bb 18000000 		.4byte	.LFE12-.LFB12
 3535 04bf 01       		.uleb128 0x1
 3536 04c0 9C       		.byte	0x9c
 3537 04c1 CF040000 		.4byte	0x4cf
 3538 04c5 24       		.uleb128 0x24
 3539 04c6 06000000 		.4byte	.LVL67
 3540 04ca 63020000 		.4byte	0x263
 3541 04ce 00       		.byte	0
 3542 04cf 25       		.uleb128 0x25
 3543 04d0 48010000 		.4byte	.LASF76
 3544 04d4 02       		.byte	0x2
 3545 04d5 3803     		.2byte	0x338
 3546 04d7 83000000 		.4byte	0x83
 3547 04db 00000000 		.4byte	.LFB14
 3548 04df 0C000000 		.4byte	.LFE14-.LFB14
 3549 04e3 01       		.uleb128 0x1
 3550 04e4 9C       		.byte	0x9c
 3551 04e5 1F       		.uleb128 0x1f
 3552 04e6 AA070000 		.4byte	.LASF62
 3553 04ea 02       		.byte	0x2
 3554 04eb 5303     		.2byte	0x353
 3555 04ed 83000000 		.4byte	0x83
 3556 04f1 00000000 		.4byte	.LFB15
 3557 04f5 1C000000 		.4byte	.LFE15-.LFB15
 3558 04f9 01       		.uleb128 0x1
 3559 04fa 9C       		.byte	0x9c
 3560 04fb 29050000 		.4byte	0x529
 3561 04ff 16       		.uleb128 0x16
 3562 0500 E1070000 		.4byte	.LASF31
 3563 0504 02       		.byte	0x2
 3564 0505 5303     		.2byte	0x353
 3565 0507 83000000 		.4byte	0x83
 3566 050b ED030000 		.4byte	.LLST20
 3567 050f 17       		.uleb128 0x17
 3568 0510 71040000 		.4byte	.LASF63
 3569 0514 02       		.byte	0x2
 3570 0515 5503     		.2byte	0x355
 3571 0517 83000000 		.4byte	0x83
 3572 051b 0E040000 		.4byte	.LLST21
 3573 051f 24       		.uleb128 0x24
 3574 0520 12000000 		.4byte	.LVL70
 3575 0524 63020000 		.4byte	0x263
 3576 0528 00       		.byte	0
 3577 0529 23       		.uleb128 0x23
 3578 052a EC040000 		.4byte	.LASF64
 3579 052e 02       		.byte	0x2
 3580 052f 9603     		.2byte	0x396
 3581 0531 00000000 		.4byte	.LFB16
 3582 0535 24000000 		.4byte	.LFE16-.LFB16
 3583 0539 01       		.uleb128 0x1
 3584 053a 9C       		.byte	0x9c
 3585 053b 59050000 		.4byte	0x559
 3586 053f 16       		.uleb128 0x16
 3587 0540 1A020000 		.4byte	.LASF65
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 139


 3588 0544 02       		.byte	0x2
 3589 0545 9603     		.2byte	0x396
 3590 0547 83000000 		.4byte	0x83
 3591 054b 2C040000 		.4byte	.LLST22
 3592 054f 24       		.uleb128 0x24
 3593 0550 08000000 		.4byte	.LVL73
 3594 0554 CF040000 		.4byte	0x4cf
 3595 0558 00       		.byte	0
 3596 0559 23       		.uleb128 0x23
 3597 055a AB010000 		.4byte	.LASF66
 3598 055e 02       		.byte	0x2
 3599 055f B403     		.2byte	0x3b4
 3600 0561 00000000 		.4byte	.LFB17
 3601 0565 1C000000 		.4byte	.LFE17-.LFB17
 3602 0569 01       		.uleb128 0x1
 3603 056a 9C       		.byte	0x9c
 3604 056b 92050000 		.4byte	0x592
 3605 056f 17       		.uleb128 0x17
 3606 0570 85030000 		.4byte	.LASF67
 3607 0574 02       		.byte	0x2
 3608 0575 B603     		.2byte	0x3b6
 3609 0577 6B000000 		.4byte	0x6b
 3610 057b 58040000 		.4byte	.LLST23
 3611 057f 24       		.uleb128 0x24
 3612 0580 06000000 		.4byte	.LVL75
 3613 0584 21110000 		.4byte	0x1121
 3614 0588 24       		.uleb128 0x24
 3615 0589 16000000 		.4byte	.LVL76
 3616 058d 2C110000 		.4byte	0x112c
 3617 0591 00       		.byte	0
 3618 0592 23       		.uleb128 0x23
 3619 0593 5C000000 		.4byte	.LASF68
 3620 0597 02       		.byte	0x2
 3621 0598 D703     		.2byte	0x3d7
 3622 059a 00000000 		.4byte	.LFB19
 3623 059e 30000000 		.4byte	.LFE19-.LFB19
 3624 05a2 01       		.uleb128 0x1
 3625 05a3 9C       		.byte	0x9c
 3626 05a4 CB050000 		.4byte	0x5cb
 3627 05a8 17       		.uleb128 0x17
 3628 05a9 85030000 		.4byte	.LASF67
 3629 05ad 02       		.byte	0x2
 3630 05ae D903     		.2byte	0x3d9
 3631 05b0 6B000000 		.4byte	0x6b
 3632 05b4 6B040000 		.4byte	.LLST24
 3633 05b8 24       		.uleb128 0x24
 3634 05b9 08000000 		.4byte	.LVL77
 3635 05bd 21110000 		.4byte	0x1121
 3636 05c1 24       		.uleb128 0x24
 3637 05c2 26000000 		.4byte	.LVL78
 3638 05c6 2C110000 		.4byte	0x112c
 3639 05ca 00       		.byte	0
 3640 05cb 26       		.uleb128 0x26
 3641 05cc B1010000 		.4byte	0x1b1
 3642 05d0 00000000 		.4byte	.LFB20
 3643 05d4 18000000 		.4byte	.LFE20-.LFB20
 3644 05d8 01       		.uleb128 0x1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 140


 3645 05d9 9C       		.byte	0x9c
 3646 05da E8050000 		.4byte	0x5e8
 3647 05de 1A       		.uleb128 0x1a
 3648 05df C2010000 		.4byte	0x1c2
 3649 05e3 7E040000 		.4byte	.LLST25
 3650 05e7 00       		.byte	0
 3651 05e8 26       		.uleb128 0x26
 3652 05e9 76010000 		.4byte	0x176
 3653 05ed 00000000 		.4byte	.LFB21
 3654 05f1 2C000000 		.4byte	.LFE21-.LFB21
 3655 05f5 01       		.uleb128 0x1
 3656 05f6 9C       		.byte	0x9c
 3657 05f7 56060000 		.4byte	0x656
 3658 05fb 1A       		.uleb128 0x1a
 3659 05fc 83010000 		.4byte	0x183
 3660 0600 9F040000 		.4byte	.LLST26
 3661 0604 1A       		.uleb128 0x1a
 3662 0605 8F010000 		.4byte	0x18f
 3663 0609 CB040000 		.4byte	.LLST27
 3664 060d 1B       		.uleb128 0x1b
 3665 060e 9B010000 		.4byte	0x19b
 3666 0612 27       		.uleb128 0x27
 3667 0613 0E000000 		.4byte	.LBB48
 3668 0617 16000000 		.4byte	.LBE48-.LBB48
 3669 061b 45060000 		.4byte	0x645
 3670 061f 1A       		.uleb128 0x1a
 3671 0620 8F010000 		.4byte	0x18f
 3672 0624 F7040000 		.4byte	.LLST28
 3673 0628 1A       		.uleb128 0x1a
 3674 0629 83010000 		.4byte	0x183
 3675 062d 0A050000 		.4byte	.LLST29
 3676 0631 1D       		.uleb128 0x1d
 3677 0632 0E000000 		.4byte	.LBB49
 3678 0636 16000000 		.4byte	.LBE49-.LBB49
 3679 063a 1E       		.uleb128 0x1e
 3680 063b 9B010000 		.4byte	0x19b
 3681 063f 2B050000 		.4byte	.LLST30
 3682 0643 00       		.byte	0
 3683 0644 00       		.byte	0
 3684 0645 22       		.uleb128 0x22
 3685 0646 0A000000 		.4byte	.LVL82
 3686 064a B1010000 		.4byte	0x1b1
 3687 064e 21       		.uleb128 0x21
 3688 064f 01       		.uleb128 0x1
 3689 0650 50       		.byte	0x50
 3690 0651 02       		.uleb128 0x2
 3691 0652 75       		.byte	0x75
 3692 0653 00       		.sleb128 0
 3693 0654 00       		.byte	0
 3694 0655 00       		.byte	0
 3695 0656 26       		.uleb128 0x26
 3696 0657 A8010000 		.4byte	0x1a8
 3697 065b 00000000 		.4byte	.LFB44
 3698 065f 2C000000 		.4byte	.LFE44-.LFB44
 3699 0663 01       		.uleb128 0x1
 3700 0664 9C       		.byte	0x9c
 3701 0665 79060000 		.4byte	0x679
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 141


 3702 0669 22       		.uleb128 0x22
 3703 066a 1C000000 		.4byte	.LVL89
 3704 066e 76010000 		.4byte	0x176
 3705 0672 21       		.uleb128 0x21
 3706 0673 01       		.uleb128 0x1
 3707 0674 50       		.byte	0x50
 3708 0675 01       		.uleb128 0x1
 3709 0676 30       		.byte	0x30
 3710 0677 00       		.byte	0
 3711 0678 00       		.byte	0
 3712 0679 26       		.uleb128 0x26
 3713 067a E9010000 		.4byte	0x1e9
 3714 067e 00000000 		.4byte	.LFB22
 3715 0682 14000000 		.4byte	.LFE22-.LFB22
 3716 0686 01       		.uleb128 0x1
 3717 0687 9C       		.byte	0x9c
 3718 0688 96060000 		.4byte	0x696
 3719 068c 1A       		.uleb128 0x1a
 3720 068d FA010000 		.4byte	0x1fa
 3721 0691 49050000 		.4byte	.LLST31
 3722 0695 00       		.byte	0
 3723 0696 23       		.uleb128 0x23
 3724 0697 1C010000 		.4byte	.LASF69
 3725 069b 02       		.byte	0x2
 3726 069c 5004     		.2byte	0x450
 3727 069e 00000000 		.4byte	.LFB23
 3728 06a2 2C000000 		.4byte	.LFE23-.LFB23
 3729 06a6 01       		.uleb128 0x1
 3730 06a7 9C       		.byte	0x9c
 3731 06a8 ED060000 		.4byte	0x6ed
 3732 06ac 16       		.uleb128 0x16
 3733 06ad 7B000000 		.4byte	.LASF30
 3734 06b1 02       		.byte	0x2
 3735 06b2 5004     		.2byte	0x450
 3736 06b4 83000000 		.4byte	0x83
 3737 06b8 6A050000 		.4byte	.LLST32
 3738 06bc 16       		.uleb128 0x16
 3739 06bd 29020000 		.4byte	.LASF70
 3740 06c1 02       		.byte	0x2
 3741 06c2 5004     		.2byte	0x450
 3742 06c4 83000000 		.4byte	0x83
 3743 06c8 96050000 		.4byte	.LLST33
 3744 06cc 17       		.uleb128 0x17
 3745 06cd 6B080000 		.4byte	.LASF32
 3746 06d1 02       		.byte	0x2
 3747 06d2 5204     		.2byte	0x452
 3748 06d4 83000000 		.4byte	0x83
 3749 06d8 C2050000 		.4byte	.LLST34
 3750 06dc 22       		.uleb128 0x22
 3751 06dd 0A000000 		.4byte	.LVL93
 3752 06e1 B1010000 		.4byte	0x1b1
 3753 06e5 21       		.uleb128 0x21
 3754 06e6 01       		.uleb128 0x1
 3755 06e7 50       		.byte	0x50
 3756 06e8 02       		.uleb128 0x2
 3757 06e9 74       		.byte	0x74
 3758 06ea 00       		.sleb128 0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 142


 3759 06eb 00       		.byte	0
 3760 06ec 00       		.byte	0
 3761 06ed 1F       		.uleb128 0x1f
 3762 06ee 13030000 		.4byte	.LASF71
 3763 06f2 02       		.byte	0x2
 3764 06f3 7104     		.2byte	0x471
 3765 06f5 83000000 		.4byte	0x83
 3766 06f9 00000000 		.4byte	.LFB24
 3767 06fd 18000000 		.4byte	.LFE24-.LFB24
 3768 0701 01       		.uleb128 0x1
 3769 0702 9C       		.byte	0x9c
 3770 0703 18070000 		.4byte	0x718
 3771 0707 16       		.uleb128 0x16
 3772 0708 7B000000 		.4byte	.LASF30
 3773 070c 02       		.byte	0x2
 3774 070d 7104     		.2byte	0x471
 3775 070f 83000000 		.4byte	0x83
 3776 0713 EB050000 		.4byte	.LLST35
 3777 0717 00       		.byte	0
 3778 0718 26       		.uleb128 0x26
 3779 0719 CF010000 		.4byte	0x1cf
 3780 071d 00000000 		.4byte	.LFB25
 3781 0721 38000000 		.4byte	.LFE25-.LFB25
 3782 0725 01       		.uleb128 0x1
 3783 0726 9C       		.byte	0x9c
 3784 0727 98070000 		.4byte	0x798
 3785 072b 28       		.uleb128 0x28
 3786 072c DC010000 		.4byte	0x1dc
 3787 0730 01       		.uleb128 0x1
 3788 0731 50       		.byte	0x50
 3789 0732 29       		.uleb128 0x29
 3790 0733 B1010000 		.4byte	0x1b1
 3791 0737 0E000000 		.4byte	.LBB66
 3792 073b 02000000 		.4byte	.LBE66-.LBB66
 3793 073f 02       		.byte	0x2
 3794 0740 A404     		.2byte	0x4a4
 3795 0742 50070000 		.4byte	0x750
 3796 0746 1A       		.uleb128 0x1a
 3797 0747 C2010000 		.4byte	0x1c2
 3798 074b 0C060000 		.4byte	.LLST36
 3799 074f 00       		.byte	0
 3800 0750 29       		.uleb128 0x29
 3801 0751 B1010000 		.4byte	0x1b1
 3802 0755 1C000000 		.4byte	.LBB68
 3803 0759 02000000 		.4byte	.LBE68-.LBB68
 3804 075d 02       		.byte	0x2
 3805 075e AC04     		.2byte	0x4ac
 3806 0760 6E070000 		.4byte	0x76e
 3807 0764 1A       		.uleb128 0x1a
 3808 0765 C2010000 		.4byte	0x1c2
 3809 0769 20060000 		.4byte	.LLST37
 3810 076d 00       		.byte	0
 3811 076e 1D       		.uleb128 0x1d
 3812 076f 26000000 		.4byte	.LBB70
 3813 0773 0A000000 		.4byte	.LBE70-.LBB70
 3814 0777 2A       		.uleb128 0x2a
 3815 0778 DC010000 		.4byte	0x1dc
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 143


 3816 077c 2B       		.uleb128 0x2b
 3817 077d B1010000 		.4byte	0x1b1
 3818 0781 2A000000 		.4byte	.LBB72
 3819 0785 02000000 		.4byte	.LBE72-.LBB72
 3820 0789 02       		.byte	0x2
 3821 078a B404     		.2byte	0x4b4
 3822 078c 1A       		.uleb128 0x1a
 3823 078d C2010000 		.4byte	0x1c2
 3824 0791 34060000 		.4byte	.LLST38
 3825 0795 00       		.byte	0
 3826 0796 00       		.byte	0
 3827 0797 00       		.byte	0
 3828 0798 2C       		.uleb128 0x2c
 3829 0799 AD060000 		.4byte	.LASF87
 3830 079d 02       		.byte	0x2
 3831 079e C903     		.2byte	0x3c9
 3832 07a0 83000000 		.4byte	0x83
 3833 07a4 01       		.byte	0x1
 3834 07a5 23       		.uleb128 0x23
 3835 07a6 1A070000 		.4byte	.LASF72
 3836 07aa 02       		.byte	0x2
 3837 07ab CA04     		.2byte	0x4ca
 3838 07ad 00000000 		.4byte	.LFB26
 3839 07b1 48000000 		.4byte	.LFE26-.LFB26
 3840 07b5 01       		.uleb128 0x1
 3841 07b6 9C       		.byte	0x9c
 3842 07b7 30080000 		.4byte	0x830
 3843 07bb 2D       		.uleb128 0x2d
 3844 07bc 07030000 		.4byte	.LASF37
 3845 07c0 02       		.byte	0x2
 3846 07c1 CA04     		.2byte	0x4ca
 3847 07c3 83000000 		.4byte	0x83
 3848 07c7 01       		.uleb128 0x1
 3849 07c8 50       		.byte	0x50
 3850 07c9 2E       		.uleb128 0x2e
 3851 07ca 98070000 		.4byte	0x798
 3852 07ce 00000000 		.4byte	.LBB82
 3853 07d2 0C000000 		.4byte	.LBE82-.LBB82
 3854 07d6 02       		.byte	0x2
 3855 07d7 CC04     		.2byte	0x4cc
 3856 07d9 29       		.uleb128 0x29
 3857 07da B1010000 		.4byte	0x1b1
 3858 07de 1A000000 		.4byte	.LBB84
 3859 07e2 02000000 		.4byte	.LBE84-.LBB84
 3860 07e6 02       		.byte	0x2
 3861 07e7 D204     		.2byte	0x4d2
 3862 07e9 F7070000 		.4byte	0x7f7
 3863 07ed 1A       		.uleb128 0x1a
 3864 07ee C2010000 		.4byte	0x1c2
 3865 07f2 48060000 		.4byte	.LLST39
 3866 07f6 00       		.byte	0
 3867 07f7 29       		.uleb128 0x29
 3868 07f8 B1010000 		.4byte	0x1b1
 3869 07fc 28000000 		.4byte	.LBB86
 3870 0800 02000000 		.4byte	.LBE86-.LBB86
 3871 0804 02       		.byte	0x2
 3872 0805 DA04     		.2byte	0x4da
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 144


 3873 0807 15080000 		.4byte	0x815
 3874 080b 1A       		.uleb128 0x1a
 3875 080c C2010000 		.4byte	0x1c2
 3876 0810 5C060000 		.4byte	.LLST40
 3877 0814 00       		.byte	0
 3878 0815 2B       		.uleb128 0x2b
 3879 0816 B1010000 		.4byte	0x1b1
 3880 081a 36000000 		.4byte	.LBB88
 3881 081e 02000000 		.4byte	.LBE88-.LBB88
 3882 0822 02       		.byte	0x2
 3883 0823 E204     		.2byte	0x4e2
 3884 0825 1A       		.uleb128 0x1a
 3885 0826 C2010000 		.4byte	0x1c2
 3886 082a 70060000 		.4byte	.LLST41
 3887 082e 00       		.byte	0
 3888 082f 00       		.byte	0
 3889 0830 23       		.uleb128 0x23
 3890 0831 13080000 		.4byte	.LASF73
 3891 0835 02       		.byte	0x2
 3892 0836 0505     		.2byte	0x505
 3893 0838 00000000 		.4byte	.LFB27
 3894 083c 34000000 		.4byte	.LFE27-.LFB27
 3895 0840 01       		.uleb128 0x1
 3896 0841 9C       		.byte	0x9c
 3897 0842 CD080000 		.4byte	0x8cd
 3898 0846 16       		.uleb128 0x16
 3899 0847 A3080000 		.4byte	.LASF74
 3900 084b 02       		.byte	0x2
 3901 084c 0505     		.2byte	0x505
 3902 084e 83000000 		.4byte	0x83
 3903 0852 84060000 		.4byte	.LLST42
 3904 0856 17       		.uleb128 0x17
 3905 0857 6B080000 		.4byte	.LASF32
 3906 085b 02       		.byte	0x2
 3907 085c 0705     		.2byte	0x507
 3908 085e 83000000 		.4byte	0x83
 3909 0862 A5060000 		.4byte	.LLST43
 3910 0866 17       		.uleb128 0x17
 3911 0867 BB020000 		.4byte	.LASF75
 3912 086b 02       		.byte	0x2
 3913 086c 0805     		.2byte	0x508
 3914 086e 83000000 		.4byte	0x83
 3915 0872 CE060000 		.4byte	.LLST44
 3916 0876 2F       		.uleb128 0x2f
 3917 0877 B1010000 		.4byte	0x1b1
 3918 087b 00000000 		.4byte	.LBB90
 3919 087f 00000000 		.4byte	.Ldebug_ranges0+0
 3920 0883 02       		.byte	0x2
 3921 0884 0A05     		.2byte	0x50a
 3922 0886 94080000 		.4byte	0x894
 3923 088a 1A       		.uleb128 0x1a
 3924 088b C2010000 		.4byte	0x1c2
 3925 088f F1060000 		.4byte	.LLST45
 3926 0893 00       		.byte	0
 3927 0894 29       		.uleb128 0x29
 3928 0895 B1010000 		.4byte	0x1b1
 3929 0899 06000000 		.4byte	.LBB94
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 145


 3930 089d 02000000 		.4byte	.LBE94-.LBB94
 3931 08a1 02       		.byte	0x2
 3932 08a2 0B05     		.2byte	0x50b
 3933 08a4 B2080000 		.4byte	0x8b2
 3934 08a8 1A       		.uleb128 0x1a
 3935 08a9 C2010000 		.4byte	0x1c2
 3936 08ad 05070000 		.4byte	.LLST46
 3937 08b1 00       		.byte	0
 3938 08b2 2B       		.uleb128 0x2b
 3939 08b3 B1010000 		.4byte	0x1b1
 3940 08b7 08000000 		.4byte	.LBB96
 3941 08bb 02000000 		.4byte	.LBE96-.LBB96
 3942 08bf 02       		.byte	0x2
 3943 08c0 0C05     		.2byte	0x50c
 3944 08c2 1A       		.uleb128 0x1a
 3945 08c3 C2010000 		.4byte	0x1c2
 3946 08c7 19070000 		.4byte	.LLST47
 3947 08cb 00       		.byte	0
 3948 08cc 00       		.byte	0
 3949 08cd 25       		.uleb128 0x25
 3950 08ce A0000000 		.4byte	.LASF77
 3951 08d2 02       		.byte	0x2
 3952 08d3 2405     		.2byte	0x524
 3953 08d5 83000000 		.4byte	0x83
 3954 08d9 00000000 		.4byte	.LFB28
 3955 08dd 14000000 		.4byte	.LFE28-.LFB28
 3956 08e1 01       		.uleb128 0x1
 3957 08e2 9C       		.byte	0x9c
 3958 08e3 23       		.uleb128 0x23
 3959 08e4 AA020000 		.4byte	.LASF78
 3960 08e8 02       		.byte	0x2
 3961 08e9 3805     		.2byte	0x538
 3962 08eb 00000000 		.4byte	.LFB29
 3963 08ef 48000000 		.4byte	.LFE29-.LFB29
 3964 08f3 01       		.uleb128 0x1
 3965 08f4 9C       		.byte	0x9c
 3966 08f5 38090000 		.4byte	0x938
 3967 08f9 16       		.uleb128 0x16
 3968 08fa 7B000000 		.4byte	.LASF30
 3969 08fe 02       		.byte	0x2
 3970 08ff 3805     		.2byte	0x538
 3971 0901 83000000 		.4byte	0x83
 3972 0905 2D070000 		.4byte	.LLST48
 3973 0909 16       		.uleb128 0x16
 3974 090a BA050000 		.4byte	.LASF42
 3975 090e 02       		.byte	0x2
 3976 090f 3805     		.2byte	0x538
 3977 0911 83000000 		.4byte	0x83
 3978 0915 59070000 		.4byte	.LLST49
 3979 0919 0D       		.uleb128 0xd
 3980 091a 11020000 		.4byte	.LASF79
 3981 091e 02       		.byte	0x2
 3982 091f 3A05     		.2byte	0x53a
 3983 0921 83000000 		.4byte	0x83
 3984 0925 24       		.uleb128 0x24
 3985 0926 18000000 		.4byte	.LVL127
 3986 092a 37110000 		.4byte	0x1137
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 146


 3987 092e 24       		.uleb128 0x24
 3988 092f 38000000 		.4byte	.LVL130
 3989 0933 37110000 		.4byte	0x1137
 3990 0937 00       		.byte	0
 3991 0938 23       		.uleb128 0x23
 3992 0939 5C040000 		.4byte	.LASF80
 3993 093d 02       		.byte	0x2
 3994 093e 5F05     		.2byte	0x55f
 3995 0940 00000000 		.4byte	.LFB30
 3996 0944 2C000000 		.4byte	.LFE30-.LFB30
 3997 0948 01       		.uleb128 0x1
 3998 0949 9C       		.byte	0x9c
 3999 094a 89090000 		.4byte	0x989
 4000 094e 16       		.uleb128 0x16
 4001 094f 03020000 		.4byte	.LASF81
 4002 0953 02       		.byte	0x2
 4003 0954 5F05     		.2byte	0x55f
 4004 0956 83000000 		.4byte	0x83
 4005 095a 85070000 		.4byte	.LLST50
 4006 095e 17       		.uleb128 0x17
 4007 095f 6B080000 		.4byte	.LASF32
 4008 0963 02       		.byte	0x2
 4009 0964 6105     		.2byte	0x561
 4010 0966 83000000 		.4byte	0x83
 4011 096a A6070000 		.4byte	.LLST51
 4012 096e 2B       		.uleb128 0x2b
 4013 096f B1010000 		.4byte	0x1b1
 4014 0973 00000000 		.4byte	.LBB98
 4015 0977 04000000 		.4byte	.LBE98-.LBB98
 4016 097b 02       		.byte	0x2
 4017 097c 6305     		.2byte	0x563
 4018 097e 1A       		.uleb128 0x1a
 4019 097f C2010000 		.4byte	0x1c2
 4020 0983 CF070000 		.4byte	.LLST52
 4021 0987 00       		.byte	0
 4022 0988 00       		.byte	0
 4023 0989 25       		.uleb128 0x25
 4024 098a C4080000 		.4byte	.LASF82
 4025 098e 02       		.byte	0x2
 4026 098f 7605     		.2byte	0x576
 4027 0991 83000000 		.4byte	0x83
 4028 0995 00000000 		.4byte	.LFB31
 4029 0999 10000000 		.4byte	.LFE31-.LFB31
 4030 099d 01       		.uleb128 0x1
 4031 099e 9C       		.byte	0x9c
 4032 099f 1F       		.uleb128 0x1f
 4033 09a0 1B050000 		.4byte	.LASF83
 4034 09a4 02       		.byte	0x2
 4035 09a5 8805     		.2byte	0x588
 4036 09a7 83000000 		.4byte	0x83
 4037 09ab 00000000 		.4byte	.LFB32
 4038 09af 14000000 		.4byte	.LFE32-.LFB32
 4039 09b3 01       		.uleb128 0x1
 4040 09b4 9C       		.byte	0x9c
 4041 09b5 CA090000 		.4byte	0x9ca
 4042 09b9 16       		.uleb128 0x16
 4043 09ba 7B000000 		.4byte	.LASF30
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 147


 4044 09be 02       		.byte	0x2
 4045 09bf 8805     		.2byte	0x588
 4046 09c1 83000000 		.4byte	0x83
 4047 09c5 E3070000 		.4byte	.LLST53
 4048 09c9 00       		.byte	0
 4049 09ca 1F       		.uleb128 0x1f
 4050 09cb E6070000 		.4byte	.LASF84
 4051 09cf 02       		.byte	0x2
 4052 09d0 9E05     		.2byte	0x59e
 4053 09d2 83000000 		.4byte	0x83
 4054 09d6 00000000 		.4byte	.LFB33
 4055 09da 30000000 		.4byte	.LFE33-.LFB33
 4056 09de 01       		.uleb128 0x1
 4057 09df 9C       		.byte	0x9c
 4058 09e0 050A0000 		.4byte	0xa05
 4059 09e4 16       		.uleb128 0x16
 4060 09e5 7B000000 		.4byte	.LASF30
 4061 09e9 02       		.byte	0x2
 4062 09ea 9E05     		.2byte	0x59e
 4063 09ec 83000000 		.4byte	0x83
 4064 09f0 04080000 		.4byte	.LLST54
 4065 09f4 17       		.uleb128 0x17
 4066 09f5 11020000 		.4byte	.LASF79
 4067 09f9 02       		.byte	0x2
 4068 09fa A005     		.2byte	0x5a0
 4069 09fc 83000000 		.4byte	0x83
 4070 0a00 70080000 		.4byte	.LLST55
 4071 0a04 00       		.byte	0
 4072 0a05 30       		.uleb128 0x30
 4073 0a06 86000000 		.4byte	.LASF126
 4074 0a0a 02       		.byte	0x2
 4075 0a0b 3007     		.2byte	0x730
 4076 0a0d 00000000 		.4byte	.LFB43
 4077 0a11 68000000 		.4byte	.LFE43-.LFB43
 4078 0a15 01       		.uleb128 0x1
 4079 0a16 9C       		.byte	0x9c
 4080 0a17 F70A0000 		.4byte	0xaf7
 4081 0a1b 17       		.uleb128 0x17
 4082 0a1c 4F030000 		.4byte	.LASF85
 4083 0a20 02       		.byte	0x2
 4084 0a21 3207     		.2byte	0x732
 4085 0a23 83000000 		.4byte	0x83
 4086 0a27 D4080000 		.4byte	.LLST56
 4087 0a2b 18       		.uleb128 0x18
 4088 0a2c E2060000 		.4byte	.LASF86
 4089 0a30 02       		.byte	0x2
 4090 0a31 3307     		.2byte	0x733
 4091 0a33 83000000 		.4byte	0x83
 4092 0a37 05       		.uleb128 0x5
 4093 0a38 03       		.byte	0x3
 4094 0a39 14000000 		.4byte	lfclkPosedgeEnabledWdtCounter.5066
 4095 0a3d 2F       		.uleb128 0x2f
 4096 0a3e B1010000 		.4byte	0x1b1
 4097 0a42 00000000 		.4byte	.LBB100
 4098 0a46 18000000 		.4byte	.Ldebug_ranges0+0x18
 4099 0a4a 02       		.byte	0x2
 4100 0a4b 3507     		.2byte	0x735
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 148


 4101 0a4d 5B0A0000 		.4byte	0xa5b
 4102 0a51 1A       		.uleb128 0x1a
 4103 0a52 C2010000 		.4byte	0x1c2
 4104 0a56 E7080000 		.4byte	.LLST57
 4105 0a5a 00       		.byte	0
 4106 0a5b 29       		.uleb128 0x29
 4107 0a5c B1010000 		.4byte	0x1b1
 4108 0a60 12000000 		.4byte	.LBB104
 4109 0a64 02000000 		.4byte	.LBE104-.LBB104
 4110 0a68 02       		.byte	0x2
 4111 0a69 3907     		.2byte	0x739
 4112 0a6b 790A0000 		.4byte	0xa79
 4113 0a6f 1A       		.uleb128 0x1a
 4114 0a70 C2010000 		.4byte	0x1c2
 4115 0a74 FB080000 		.4byte	.LLST58
 4116 0a78 00       		.byte	0
 4117 0a79 29       		.uleb128 0x29
 4118 0a7a B1010000 		.4byte	0x1b1
 4119 0a7e 1E000000 		.4byte	.LBB106
 4120 0a82 02000000 		.4byte	.LBE106-.LBB106
 4121 0a86 02       		.byte	0x2
 4122 0a87 3D07     		.2byte	0x73d
 4123 0a89 970A0000 		.4byte	0xa97
 4124 0a8d 1A       		.uleb128 0x1a
 4125 0a8e C2010000 		.4byte	0x1c2
 4126 0a92 0F090000 		.4byte	.LLST59
 4127 0a96 00       		.byte	0
 4128 0a97 2F       		.uleb128 0x2f
 4129 0a98 E9010000 		.4byte	0x1e9
 4130 0a9c 2C000000 		.4byte	.LBB108
 4131 0aa0 30000000 		.4byte	.Ldebug_ranges0+0x30
 4132 0aa4 02       		.byte	0x2
 4133 0aa5 4707     		.2byte	0x747
 4134 0aa7 B50A0000 		.4byte	0xab5
 4135 0aab 1A       		.uleb128 0x1a
 4136 0aac FA010000 		.4byte	0x1fa
 4137 0ab0 23090000 		.4byte	.LLST60
 4138 0ab4 00       		.byte	0
 4139 0ab5 24       		.uleb128 0x24
 4140 0ab6 40000000 		.4byte	.LVL159
 4141 0aba 76010000 		.4byte	0x176
 4142 0abe 20       		.uleb128 0x20
 4143 0abf 46000000 		.4byte	.LVL160
 4144 0ac3 CF010000 		.4byte	0x1cf
 4145 0ac7 D20A0000 		.4byte	0xad2
 4146 0acb 21       		.uleb128 0x21
 4147 0acc 01       		.uleb128 0x1
 4148 0acd 50       		.byte	0x50
 4149 0ace 02       		.uleb128 0x2
 4150 0acf 75       		.byte	0x75
 4151 0ad0 00       		.sleb128 0
 4152 0ad1 00       		.byte	0
 4153 0ad2 20       		.uleb128 0x20
 4154 0ad3 4E000000 		.4byte	.LVL161
 4155 0ad7 CA090000 		.4byte	0x9ca
 4156 0adb E60A0000 		.4byte	0xae6
 4157 0adf 21       		.uleb128 0x21
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 149


 4158 0ae0 01       		.uleb128 0x1
 4159 0ae1 50       		.byte	0x50
 4160 0ae2 02       		.uleb128 0x2
 4161 0ae3 74       		.byte	0x74
 4162 0ae4 00       		.sleb128 0
 4163 0ae5 00       		.byte	0
 4164 0ae6 22       		.uleb128 0x22
 4165 0ae7 56000000 		.4byte	.LVL163
 4166 0aeb CA090000 		.4byte	0x9ca
 4167 0aef 21       		.uleb128 0x21
 4168 0af0 01       		.uleb128 0x1
 4169 0af1 50       		.byte	0x50
 4170 0af2 02       		.uleb128 0x2
 4171 0af3 74       		.byte	0x74
 4172 0af4 00       		.sleb128 0
 4173 0af5 00       		.byte	0
 4174 0af6 00       		.byte	0
 4175 0af7 2C       		.uleb128 0x2c
 4176 0af8 3A070000 		.4byte	.LASF88
 4177 0afc 02       		.byte	0x2
 4178 0afd 7201     		.2byte	0x172
 4179 0aff 83000000 		.4byte	0x83
 4180 0b03 01       		.byte	0x1
 4181 0b04 13       		.uleb128 0x13
 4182 0b05 49020000 		.4byte	.LASF89
 4183 0b09 02       		.byte	0x2
 4184 0b0a 6C       		.byte	0x6c
 4185 0b0b 00000000 		.4byte	.LFB2
 4186 0b0f 54000000 		.4byte	.LFE2-.LFB2
 4187 0b13 01       		.uleb128 0x1
 4188 0b14 9C       		.byte	0x9c
 4189 0b15 950B0000 		.4byte	0xb95
 4190 0b19 31       		.uleb128 0x31
 4191 0b1a 85030000 		.4byte	.LASF67
 4192 0b1e 02       		.byte	0x2
 4193 0b1f 6F       		.byte	0x6f
 4194 0b20 6B000000 		.4byte	0x6b
 4195 0b24 37090000 		.4byte	.LLST61
 4196 0b28 32       		.uleb128 0x32
 4197 0b29 98070000 		.4byte	0x798
 4198 0b2d 00000000 		.4byte	.LBB118
 4199 0b31 48000000 		.4byte	.Ldebug_ranges0+0x48
 4200 0b35 02       		.byte	0x2
 4201 0b36 72       		.byte	0x72
 4202 0b37 33       		.uleb128 0x33
 4203 0b38 F70A0000 		.4byte	0xaf7
 4204 0b3c 0E000000 		.4byte	.LBB122
 4205 0b40 08000000 		.4byte	.LBE122-.LBB122
 4206 0b44 02       		.byte	0x2
 4207 0b45 74       		.byte	0x74
 4208 0b46 34       		.uleb128 0x34
 4209 0b47 07020000 		.4byte	0x207
 4210 0b4b 16000000 		.4byte	.LBB124
 4211 0b4f 04000000 		.4byte	.LBE124-.LBB124
 4212 0b53 02       		.byte	0x2
 4213 0b54 78       		.byte	0x78
 4214 0b55 690B0000 		.4byte	0xb69
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 150


 4215 0b59 1D       		.uleb128 0x1d
 4216 0b5a 16000000 		.4byte	.LBB125
 4217 0b5e 04000000 		.4byte	.LBE125-.LBB125
 4218 0b62 1B       		.uleb128 0x1b
 4219 0b63 18020000 		.4byte	0x218
 4220 0b67 00       		.byte	0
 4221 0b68 00       		.byte	0
 4222 0b69 24       		.uleb128 0x24
 4223 0b6a 22000000 		.4byte	.LVL165
 4224 0b6e 21110000 		.4byte	0x1121
 4225 0b72 24       		.uleb128 0x24
 4226 0b73 28000000 		.4byte	.LVL167
 4227 0b77 050A0000 		.4byte	0xa05
 4228 0b7b 24       		.uleb128 0x24
 4229 0b7c 34000000 		.4byte	.LVL168
 4230 0b80 A8010000 		.4byte	0x1a8
 4231 0b84 22       		.uleb128 0x22
 4232 0b85 3A000000 		.4byte	.LVL169
 4233 0b89 2C110000 		.4byte	0x112c
 4234 0b8d 21       		.uleb128 0x21
 4235 0b8e 01       		.uleb128 0x1
 4236 0b8f 50       		.byte	0x50
 4237 0b90 02       		.uleb128 0x2
 4238 0b91 75       		.byte	0x75
 4239 0b92 00       		.sleb128 0
 4240 0b93 00       		.byte	0
 4241 0b94 00       		.byte	0
 4242 0b95 23       		.uleb128 0x23
 4243 0b96 38030000 		.4byte	.LASF90
 4244 0b9a 02       		.byte	0x2
 4245 0b9b DE02     		.2byte	0x2de
 4246 0b9d 00000000 		.4byte	.LFB11
 4247 0ba1 38000000 		.4byte	.LFE11-.LFB11
 4248 0ba5 01       		.uleb128 0x1
 4249 0ba6 9C       		.byte	0x9c
 4250 0ba7 170C0000 		.4byte	0xc17
 4251 0bab 16       		.uleb128 0x16
 4252 0bac E5040000 		.4byte	.LASF91
 4253 0bb0 02       		.byte	0x2
 4254 0bb1 DE02     		.2byte	0x2de
 4255 0bb3 83000000 		.4byte	0x83
 4256 0bb7 4A090000 		.4byte	.LLST62
 4257 0bbb 17       		.uleb128 0x17
 4258 0bbc 85030000 		.4byte	.LASF67
 4259 0bc0 02       		.byte	0x2
 4260 0bc1 E002     		.2byte	0x2e0
 4261 0bc3 6B000000 		.4byte	0x6b
 4262 0bc7 76090000 		.4byte	.LLST63
 4263 0bcb 2F       		.uleb128 0x2f
 4264 0bcc 07020000 		.4byte	0x207
 4265 0bd0 02000000 		.4byte	.LBB126
 4266 0bd4 60000000 		.4byte	.Ldebug_ranges0+0x60
 4267 0bd8 02       		.byte	0x2
 4268 0bd9 E202     		.2byte	0x2e2
 4269 0bdb EB0B0000 		.4byte	0xbeb
 4270 0bdf 35       		.uleb128 0x35
 4271 0be0 60000000 		.4byte	.Ldebug_ranges0+0x60
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 151


 4272 0be4 1B       		.uleb128 0x1b
 4273 0be5 18020000 		.4byte	0x218
 4274 0be9 00       		.byte	0
 4275 0bea 00       		.byte	0
 4276 0beb 24       		.uleb128 0x24
 4277 0bec 14000000 		.4byte	.LVL172
 4278 0bf0 21110000 		.4byte	0x1121
 4279 0bf4 24       		.uleb128 0x24
 4280 0bf5 1A000000 		.4byte	.LVL174
 4281 0bf9 050A0000 		.4byte	0xa05
 4282 0bfd 24       		.uleb128 0x24
 4283 0bfe 2C000000 		.4byte	.LVL176
 4284 0c02 A8010000 		.4byte	0x1a8
 4285 0c06 22       		.uleb128 0x22
 4286 0c07 32000000 		.4byte	.LVL177
 4287 0c0b 2C110000 		.4byte	0x112c
 4288 0c0f 21       		.uleb128 0x21
 4289 0c10 01       		.uleb128 0x1
 4290 0c11 50       		.byte	0x50
 4291 0c12 02       		.uleb128 0x2
 4292 0c13 76       		.byte	0x76
 4293 0c14 00       		.sleb128 0
 4294 0c15 00       		.byte	0
 4295 0c16 00       		.byte	0
 4296 0c17 23       		.uleb128 0x23
 4297 0c18 9A070000 		.4byte	.LASF92
 4298 0c1c 02       		.byte	0x2
 4299 0c1d 1503     		.2byte	0x315
 4300 0c1f 00000000 		.4byte	.LFB13
 4301 0c23 48000000 		.4byte	.LFE13-.LFB13
 4302 0c27 01       		.uleb128 0x1
 4303 0c28 9C       		.byte	0x9c
 4304 0c29 960C0000 		.4byte	0xc96
 4305 0c2d 17       		.uleb128 0x17
 4306 0c2e 85030000 		.4byte	.LASF67
 4307 0c32 02       		.byte	0x2
 4308 0c33 1803     		.2byte	0x318
 4309 0c35 6B000000 		.4byte	0x6b
 4310 0c39 89090000 		.4byte	.LLST64
 4311 0c3d 29       		.uleb128 0x29
 4312 0c3e 07020000 		.4byte	0x207
 4313 0c42 0A000000 		.4byte	.LBB130
 4314 0c46 06000000 		.4byte	.LBE130-.LBB130
 4315 0c4a 02       		.byte	0x2
 4316 0c4b 1E03     		.2byte	0x31e
 4317 0c4d 610C0000 		.4byte	0xc61
 4318 0c51 1D       		.uleb128 0x1d
 4319 0c52 0A000000 		.4byte	.LBB131
 4320 0c56 06000000 		.4byte	.LBE131-.LBB131
 4321 0c5a 1B       		.uleb128 0x1b
 4322 0c5b 18020000 		.4byte	0x218
 4323 0c5f 00       		.byte	0
 4324 0c60 00       		.byte	0
 4325 0c61 24       		.uleb128 0x24
 4326 0c62 06000000 		.4byte	.LVL178
 4327 0c66 CF040000 		.4byte	0x4cf
 4328 0c6a 24       		.uleb128 0x24
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 152


 4329 0c6b 1A000000 		.4byte	.LVL179
 4330 0c6f 21110000 		.4byte	0x1121
 4331 0c73 24       		.uleb128 0x24
 4332 0c74 20000000 		.4byte	.LVL181
 4333 0c78 050A0000 		.4byte	0xa05
 4334 0c7c 24       		.uleb128 0x24
 4335 0c7d 2C000000 		.4byte	.LVL182
 4336 0c81 A8010000 		.4byte	0x1a8
 4337 0c85 22       		.uleb128 0x22
 4338 0c86 32000000 		.4byte	.LVL183
 4339 0c8a 2C110000 		.4byte	0x112c
 4340 0c8e 21       		.uleb128 0x21
 4341 0c8f 01       		.uleb128 0x1
 4342 0c90 50       		.byte	0x50
 4343 0c91 02       		.uleb128 0x2
 4344 0c92 75       		.byte	0x75
 4345 0c93 00       		.sleb128 0
 4346 0c94 00       		.byte	0
 4347 0c95 00       		.byte	0
 4348 0c96 25       		.uleb128 0x25
 4349 0c97 4D070000 		.4byte	.LASF93
 4350 0c9b 02       		.byte	0x2
 4351 0c9c C905     		.2byte	0x5c9
 4352 0c9e 83000000 		.4byte	0x83
 4353 0ca2 00000000 		.4byte	.LFB34
 4354 0ca6 14000000 		.4byte	.LFE34-.LFB34
 4355 0caa 01       		.uleb128 0x1
 4356 0cab 9C       		.byte	0x9c
 4357 0cac 23       		.uleb128 0x23
 4358 0cad 34060000 		.4byte	.LASF94
 4359 0cb1 02       		.byte	0x2
 4360 0cb2 E605     		.2byte	0x5e6
 4361 0cb4 00000000 		.4byte	.LFB35
 4362 0cb8 54000000 		.4byte	.LFE35-.LFB35
 4363 0cbc 01       		.uleb128 0x1
 4364 0cbd 9C       		.byte	0x9c
 4365 0cbe 320D0000 		.4byte	0xd32
 4366 0cc2 16       		.uleb128 0x16
 4367 0cc3 07030000 		.4byte	.LASF37
 4368 0cc7 02       		.byte	0x2
 4369 0cc8 E605     		.2byte	0x5e6
 4370 0cca 83000000 		.4byte	0x83
 4371 0cce 9C090000 		.4byte	.LLST65
 4372 0cd2 17       		.uleb128 0x17
 4373 0cd3 85030000 		.4byte	.LASF67
 4374 0cd7 02       		.byte	0x2
 4375 0cd8 E805     		.2byte	0x5e8
 4376 0cda 6B000000 		.4byte	0x6b
 4377 0cde E3090000 		.4byte	.LLST66
 4378 0ce2 17       		.uleb128 0x17
 4379 0ce3 7A080000 		.4byte	.LASF95
 4380 0ce7 02       		.byte	0x2
 4381 0ce8 E905     		.2byte	0x5e9
 4382 0cea 83000000 		.4byte	0x83
 4383 0cee 010A0000 		.4byte	.LLST67
 4384 0cf2 36       		.uleb128 0x36
 4385 0cf3 98070000 		.4byte	0x798
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 153


 4386 0cf7 08000000 		.4byte	.LBB134
 4387 0cfb 78000000 		.4byte	.Ldebug_ranges0+0x78
 4388 0cff 02       		.byte	0x2
 4389 0d00 ED05     		.2byte	0x5ed
 4390 0d02 24       		.uleb128 0x24
 4391 0d03 08000000 		.4byte	.LVL186
 4392 0d07 21110000 		.4byte	0x1121
 4393 0d0b 24       		.uleb128 0x24
 4394 0d0c 32000000 		.4byte	.LVL191
 4395 0d10 59050000 		.4byte	0x559
 4396 0d14 20       		.uleb128 0x20
 4397 0d15 38000000 		.4byte	.LVL192
 4398 0d19 2C110000 		.4byte	0x112c
 4399 0d1d 280D0000 		.4byte	0xd28
 4400 0d21 21       		.uleb128 0x21
 4401 0d22 01       		.uleb128 0x1
 4402 0d23 50       		.byte	0x50
 4403 0d24 02       		.uleb128 0x2
 4404 0d25 74       		.byte	0x74
 4405 0d26 00       		.sleb128 0
 4406 0d27 00       		.byte	0
 4407 0d28 24       		.uleb128 0x24
 4408 0d29 3E000000 		.4byte	.LVL195
 4409 0d2d 92050000 		.4byte	0x592
 4410 0d31 00       		.byte	0
 4411 0d32 23       		.uleb128 0x23
 4412 0d33 0A060000 		.4byte	.LASF96
 4413 0d37 02       		.byte	0x2
 4414 0d38 2006     		.2byte	0x620
 4415 0d3a 00000000 		.4byte	.LFB36
 4416 0d3e 1C000000 		.4byte	.LFE36-.LFB36
 4417 0d42 01       		.uleb128 0x1
 4418 0d43 9C       		.byte	0x9c
 4419 0d44 590D0000 		.4byte	0xd59
 4420 0d48 16       		.uleb128 0x16
 4421 0d49 6E020000 		.4byte	.LASF97
 4422 0d4d 02       		.byte	0x2
 4423 0d4e 2006     		.2byte	0x620
 4424 0d50 83000000 		.4byte	0x83
 4425 0d54 2C0A0000 		.4byte	.LLST68
 4426 0d58 00       		.byte	0
 4427 0d59 1F       		.uleb128 0x1f
 4428 0d5a EA020000 		.4byte	.LASF98
 4429 0d5e 02       		.byte	0x2
 4430 0d5f 3A06     		.2byte	0x63a
 4431 0d61 FD000000 		.4byte	0xfd
 4432 0d65 00000000 		.4byte	.LFB37
 4433 0d69 18000000 		.4byte	.LFE37-.LFB37
 4434 0d6d 01       		.uleb128 0x1
 4435 0d6e 9C       		.byte	0x9c
 4436 0d6f A20D0000 		.4byte	0xda2
 4437 0d73 16       		.uleb128 0x16
 4438 0d74 7B000000 		.4byte	.LASF30
 4439 0d78 02       		.byte	0x2
 4440 0d79 3A06     		.2byte	0x63a
 4441 0d7b 83000000 		.4byte	0x83
 4442 0d7f 4D0A0000 		.4byte	.LLST69
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 154


 4443 0d83 2D       		.uleb128 0x2d
 4444 0d84 A2010000 		.4byte	.LASF99
 4445 0d88 02       		.byte	0x2
 4446 0d89 3A06     		.2byte	0x63a
 4447 0d8b FD000000 		.4byte	0xfd
 4448 0d8f 01       		.uleb128 0x1
 4449 0d90 51       		.byte	0x51
 4450 0d91 17       		.uleb128 0x17
 4451 0d92 9D020000 		.4byte	.LASF100
 4452 0d96 02       		.byte	0x2
 4453 0d97 3C06     		.2byte	0x63c
 4454 0d99 FD000000 		.4byte	0xfd
 4455 0d9d 6E0A0000 		.4byte	.LLST70
 4456 0da1 00       		.byte	0
 4457 0da2 1F       		.uleb128 0x1f
 4458 0da3 09040000 		.4byte	.LASF101
 4459 0da7 02       		.byte	0x2
 4460 0da8 5806     		.2byte	0x658
 4461 0daa FD000000 		.4byte	0xfd
 4462 0dae 00000000 		.4byte	.LFB38
 4463 0db2 18000000 		.4byte	.LFE38-.LFB38
 4464 0db6 01       		.uleb128 0x1
 4465 0db7 9C       		.byte	0x9c
 4466 0db8 DD0D0000 		.4byte	0xddd
 4467 0dbc 16       		.uleb128 0x16
 4468 0dbd 7B000000 		.4byte	.LASF30
 4469 0dc1 02       		.byte	0x2
 4470 0dc2 5806     		.2byte	0x658
 4471 0dc4 83000000 		.4byte	0x83
 4472 0dc8 8D0A0000 		.4byte	.LLST71
 4473 0dcc 17       		.uleb128 0x17
 4474 0dcd 5A030000 		.4byte	.LASF102
 4475 0dd1 02       		.byte	0x2
 4476 0dd2 5A06     		.2byte	0x65a
 4477 0dd4 FD000000 		.4byte	0xfd
 4478 0dd8 AE0A0000 		.4byte	.LLST72
 4479 0ddc 00       		.byte	0
 4480 0ddd 23       		.uleb128 0x23
 4481 0dde BB030000 		.4byte	.LASF103
 4482 0de2 02       		.byte	0x2
 4483 0de3 7506     		.2byte	0x675
 4484 0de5 00000000 		.4byte	.LFB39
 4485 0de9 28000000 		.4byte	.LFE39-.LFB39
 4486 0ded 01       		.uleb128 0x1
 4487 0dee 9C       		.byte	0x9c
 4488 0def 040E0000 		.4byte	0xe04
 4489 0df3 16       		.uleb128 0x16
 4490 0df4 7B000000 		.4byte	.LASF30
 4491 0df8 02       		.byte	0x2
 4492 0df9 7506     		.2byte	0x675
 4493 0dfb 83000000 		.4byte	0x83
 4494 0dff CD0A0000 		.4byte	.LLST73
 4495 0e03 00       		.byte	0
 4496 0e04 23       		.uleb128 0x23
 4497 0e05 C2070000 		.4byte	.LASF104
 4498 0e09 02       		.byte	0x2
 4499 0e0a 8C06     		.2byte	0x68c
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 155


 4500 0e0c 00000000 		.4byte	.LFB40
 4501 0e10 1C000000 		.4byte	.LFE40-.LFB40
 4502 0e14 01       		.uleb128 0x1
 4503 0e15 9C       		.byte	0x9c
 4504 0e16 2B0E0000 		.4byte	0xe2b
 4505 0e1a 16       		.uleb128 0x16
 4506 0e1b 7B000000 		.4byte	.LASF30
 4507 0e1f 02       		.byte	0x2
 4508 0e20 8C06     		.2byte	0x68c
 4509 0e22 83000000 		.4byte	0x83
 4510 0e26 EE0A0000 		.4byte	.LLST74
 4511 0e2a 00       		.byte	0
 4512 0e2b 37       		.uleb128 0x37
 4513 0e2c B8080000 		.4byte	.LASF105
 4514 0e30 02       		.byte	0x2
 4515 0e31 AD06     		.2byte	0x6ad
 4516 0e33 00000000 		.4byte	.LFB41
 4517 0e37 A0000000 		.4byte	.LFE41-.LFB41
 4518 0e3b 01       		.uleb128 0x1
 4519 0e3c 9C       		.byte	0x9c
 4520 0e3d 7B0E0000 		.4byte	0xe7b
 4521 0e41 20       		.uleb128 0x20
 4522 0e42 34000000 		.4byte	.LVL210
 4523 0e46 AC0C0000 		.4byte	0xcac
 4524 0e4a 540E0000 		.4byte	0xe54
 4525 0e4e 21       		.uleb128 0x21
 4526 0e4f 01       		.uleb128 0x1
 4527 0e50 50       		.byte	0x50
 4528 0e51 01       		.uleb128 0x1
 4529 0e52 34       		.byte	0x34
 4530 0e53 00       		.byte	0
 4531 0e54 20       		.uleb128 0x20
 4532 0e55 6A000000 		.4byte	.LVL212
 4533 0e59 AC0C0000 		.4byte	0xcac
 4534 0e5d 690E0000 		.4byte	0xe69
 4535 0e61 21       		.uleb128 0x21
 4536 0e62 01       		.uleb128 0x1
 4537 0e63 50       		.byte	0x50
 4538 0e64 03       		.uleb128 0x3
 4539 0e65 0A       		.byte	0xa
 4540 0e66 0004     		.2byte	0x400
 4541 0e68 00       		.byte	0
 4542 0e69 22       		.uleb128 0x22
 4543 0e6a 8E000000 		.4byte	.LVL214
 4544 0e6e AC0C0000 		.4byte	0xcac
 4545 0e72 21       		.uleb128 0x21
 4546 0e73 01       		.uleb128 0x1
 4547 0e74 50       		.byte	0x50
 4548 0e75 03       		.uleb128 0x3
 4549 0e76 40       		.byte	0x40
 4550 0e77 3E       		.byte	0x3e
 4551 0e78 24       		.byte	0x24
 4552 0e79 00       		.byte	0
 4553 0e7a 00       		.byte	0
 4554 0e7b 23       		.uleb128 0x23
 4555 0e7c 81040000 		.4byte	.LASF106
 4556 0e80 02       		.byte	0x2
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 156


 4557 0e81 EE06     		.2byte	0x6ee
 4558 0e83 00000000 		.4byte	.LFB42
 4559 0e87 4E000000 		.4byte	.LFE42-.LFB42
 4560 0e8b 01       		.uleb128 0x1
 4561 0e8c 9C       		.byte	0x9c
 4562 0e8d 0E0F0000 		.4byte	0xf0e
 4563 0e91 16       		.uleb128 0x16
 4564 0e92 7B000000 		.4byte	.LASF30
 4565 0e96 02       		.byte	0x2
 4566 0e97 EE06     		.2byte	0x6ee
 4567 0e99 83000000 		.4byte	0x83
 4568 0e9d 0F0B0000 		.4byte	.LLST75
 4569 0ea1 20       		.uleb128 0x20
 4570 0ea2 0A000000 		.4byte	.LVL216
 4571 0ea6 E9010000 		.4byte	0x1e9
 4572 0eaa B50E0000 		.4byte	0xeb5
 4573 0eae 21       		.uleb128 0x21
 4574 0eaf 01       		.uleb128 0x1
 4575 0eb0 50       		.byte	0x50
 4576 0eb1 02       		.uleb128 0x2
 4577 0eb2 74       		.byte	0x74
 4578 0eb3 00       		.sleb128 0
 4579 0eb4 00       		.byte	0
 4580 0eb5 20       		.uleb128 0x20
 4581 0eb6 18000000 		.4byte	.LVL217
 4582 0eba E9010000 		.4byte	0x1e9
 4583 0ebe C90E0000 		.4byte	0xec9
 4584 0ec2 21       		.uleb128 0x21
 4585 0ec3 01       		.uleb128 0x1
 4586 0ec4 50       		.byte	0x50
 4587 0ec5 02       		.uleb128 0x2
 4588 0ec6 74       		.byte	0x74
 4589 0ec7 00       		.sleb128 0
 4590 0ec8 00       		.byte	0
 4591 0ec9 24       		.uleb128 0x24
 4592 0eca 22000000 		.4byte	.LVL218
 4593 0ece 320D0000 		.4byte	0xd32
 4594 0ed2 24       		.uleb128 0x24
 4595 0ed3 2E000000 		.4byte	.LVL220
 4596 0ed7 E9010000 		.4byte	0x1e9
 4597 0edb 20       		.uleb128 0x20
 4598 0edc 38000000 		.4byte	.LVL221
 4599 0ee0 E9010000 		.4byte	0x1e9
 4600 0ee4 EF0E0000 		.4byte	0xeef
 4601 0ee8 21       		.uleb128 0x21
 4602 0ee9 01       		.uleb128 0x1
 4603 0eea 50       		.byte	0x50
 4604 0eeb 02       		.uleb128 0x2
 4605 0eec 74       		.byte	0x74
 4606 0eed 00       		.sleb128 0
 4607 0eee 00       		.byte	0
 4608 0eef 20       		.uleb128 0x20
 4609 0ef0 44000000 		.4byte	.LVL222
 4610 0ef4 320D0000 		.4byte	0xd32
 4611 0ef8 040F0000 		.4byte	0xf04
 4612 0efc 21       		.uleb128 0x21
 4613 0efd 01       		.uleb128 0x1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 157


 4614 0efe 50       		.byte	0x50
 4615 0eff 03       		.uleb128 0x3
 4616 0f00 0A       		.byte	0xa
 4617 0f01 0008     		.2byte	0x800
 4618 0f03 00       		.byte	0
 4619 0f04 24       		.uleb128 0x24
 4620 0f05 4C000000 		.4byte	.LVL223
 4621 0f09 AC0C0000 		.4byte	0xcac
 4622 0f0d 00       		.byte	0
 4623 0f0e 26       		.uleb128 0x26
 4624 0f0f 25020000 		.4byte	0x225
 4625 0f13 00000000 		.4byte	.LFB46
 4626 0f17 64000000 		.4byte	.LFE46-.LFB46
 4627 0f1b 01       		.uleb128 0x1
 4628 0f1c 9C       		.byte	0x9c
 4629 0f1d D00F0000 		.4byte	0xfd0
 4630 0f21 1A       		.uleb128 0x1a
 4631 0f22 32020000 		.4byte	0x232
 4632 0f26 510B0000 		.4byte	.LLST76
 4633 0f2a 1A       		.uleb128 0x1a
 4634 0f2b 3E020000 		.4byte	0x23e
 4635 0f2f 7D0B0000 		.4byte	.LLST77
 4636 0f33 1A       		.uleb128 0x1a
 4637 0f34 4A020000 		.4byte	0x24a
 4638 0f38 9E0B0000 		.4byte	.LLST78
 4639 0f3c 1E       		.uleb128 0x1e
 4640 0f3d 56020000 		.4byte	0x256
 4641 0f41 CA0B0000 		.4byte	.LLST79
 4642 0f45 27       		.uleb128 0x27
 4643 0f46 34000000 		.4byte	.LBB140
 4644 0f4a 1E000000 		.4byte	.LBE140-.LBB140
 4645 0f4e 970F0000 		.4byte	0xf97
 4646 0f52 1A       		.uleb128 0x1a
 4647 0f53 3E020000 		.4byte	0x23e
 4648 0f57 E80B0000 		.4byte	.LLST80
 4649 0f5b 1A       		.uleb128 0x1a
 4650 0f5c 4A020000 		.4byte	0x24a
 4651 0f60 FB0B0000 		.4byte	.LLST81
 4652 0f64 1A       		.uleb128 0x1a
 4653 0f65 32020000 		.4byte	0x232
 4654 0f69 0E0C0000 		.4byte	.LLST82
 4655 0f6d 1D       		.uleb128 0x1d
 4656 0f6e 34000000 		.4byte	.LBB141
 4657 0f72 1E000000 		.4byte	.LBE141-.LBB141
 4658 0f76 1E       		.uleb128 0x1e
 4659 0f77 56020000 		.4byte	0x256
 4660 0f7b 210C0000 		.4byte	.LLST83
 4661 0f7f 22       		.uleb128 0x22
 4662 0f80 42000000 		.4byte	.LVL232
 4663 0f84 E3080000 		.4byte	0x8e3
 4664 0f88 21       		.uleb128 0x21
 4665 0f89 01       		.uleb128 0x1
 4666 0f8a 50       		.byte	0x50
 4667 0f8b 02       		.uleb128 0x2
 4668 0f8c 74       		.byte	0x74
 4669 0f8d 00       		.sleb128 0
 4670 0f8e 21       		.uleb128 0x21
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 158


 4671 0f8f 01       		.uleb128 0x1
 4672 0f90 51       		.byte	0x51
 4673 0f91 02       		.uleb128 0x2
 4674 0f92 75       		.byte	0x75
 4675 0f93 00       		.sleb128 0
 4676 0f94 00       		.byte	0
 4677 0f95 00       		.byte	0
 4678 0f96 00       		.byte	0
 4679 0f97 20       		.uleb128 0x20
 4680 0f98 10000000 		.4byte	.LVL226
 4681 0f9c ED060000 		.4byte	0x6ed
 4682 0fa0 AB0F0000 		.4byte	0xfab
 4683 0fa4 21       		.uleb128 0x21
 4684 0fa5 01       		.uleb128 0x1
 4685 0fa6 50       		.byte	0x50
 4686 0fa7 02       		.uleb128 0x2
 4687 0fa8 74       		.byte	0x74
 4688 0fa9 00       		.sleb128 0
 4689 0faa 00       		.byte	0
 4690 0fab 20       		.uleb128 0x20
 4691 0fac 24000000 		.4byte	.LVL227
 4692 0fb0 CA090000 		.4byte	0x9ca
 4693 0fb4 BF0F0000 		.4byte	0xfbf
 4694 0fb8 21       		.uleb128 0x21
 4695 0fb9 01       		.uleb128 0x1
 4696 0fba 50       		.byte	0x50
 4697 0fbb 02       		.uleb128 0x2
 4698 0fbc 74       		.byte	0x74
 4699 0fbd 00       		.sleb128 0
 4700 0fbe 00       		.byte	0
 4701 0fbf 22       		.uleb128 0x22
 4702 0fc0 2E000000 		.4byte	.LVL229
 4703 0fc4 CA090000 		.4byte	0x9ca
 4704 0fc8 21       		.uleb128 0x21
 4705 0fc9 01       		.uleb128 0x1
 4706 0fca 50       		.byte	0x50
 4707 0fcb 02       		.uleb128 0x2
 4708 0fcc 74       		.byte	0x74
 4709 0fcd 00       		.sleb128 0
 4710 0fce 00       		.byte	0
 4711 0fcf 00       		.byte	0
 4712 0fd0 23       		.uleb128 0x23
 4713 0fd1 6B060000 		.4byte	.LASF107
 4714 0fd5 02       		.byte	0x2
 4715 0fd6 D70B     		.2byte	0xbd7
 4716 0fd8 00000000 		.4byte	.LFB45
 4717 0fdc 34000000 		.4byte	.LFE45-.LFB45
 4718 0fe0 01       		.uleb128 0x1
 4719 0fe1 9C       		.byte	0x9c
 4720 0fe2 75100000 		.4byte	0x1075
 4721 0fe6 16       		.uleb128 0x16
 4722 0fe7 7B000000 		.4byte	.LASF30
 4723 0feb 02       		.byte	0x2
 4724 0fec D70B     		.2byte	0xbd7
 4725 0fee 83000000 		.4byte	0x83
 4726 0ff2 340C0000 		.4byte	.LLST84
 4727 0ff6 16       		.uleb128 0x16
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 159


 4728 0ff7 10070000 		.4byte	.LASF41
 4729 0ffb 02       		.byte	0x2
 4730 0ffc D70B     		.2byte	0xbd7
 4731 0ffe F2000000 		.4byte	0xf2
 4732 1002 600C0000 		.4byte	.LLST85
 4733 1006 16       		.uleb128 0x16
 4734 1007 00070000 		.4byte	.LASF108
 4735 100b 02       		.byte	0x2
 4736 100c D70B     		.2byte	0xbd7
 4737 100e 83000000 		.4byte	0x83
 4738 1012 810C0000 		.4byte	.LLST86
 4739 1016 17       		.uleb128 0x17
 4740 1017 11020000 		.4byte	.LASF79
 4741 101b 02       		.byte	0x2
 4742 101c D90B     		.2byte	0xbd9
 4743 101e 83000000 		.4byte	0x83
 4744 1022 AD0C0000 		.4byte	.LLST87
 4745 1026 17       		.uleb128 0x17
 4746 1027 94030000 		.4byte	.LASF109
 4747 102b 02       		.byte	0x2
 4748 102c DA0B     		.2byte	0xbda
 4749 102e 83000000 		.4byte	0x83
 4750 1032 C00C0000 		.4byte	.LLST88
 4751 1036 20       		.uleb128 0x20
 4752 1037 10000000 		.4byte	.LVL237
 4753 103b ED060000 		.4byte	0x6ed
 4754 103f 4A100000 		.4byte	0x104a
 4755 1043 21       		.uleb128 0x21
 4756 1044 01       		.uleb128 0x1
 4757 1045 50       		.byte	0x50
 4758 1046 02       		.uleb128 0x2
 4759 1047 74       		.byte	0x74
 4760 1048 00       		.sleb128 0
 4761 1049 00       		.byte	0
 4762 104a 20       		.uleb128 0x20
 4763 104b 20000000 		.4byte	.LVL238
 4764 104f CA090000 		.4byte	0x9ca
 4765 1053 5E100000 		.4byte	0x105e
 4766 1057 21       		.uleb128 0x21
 4767 1058 01       		.uleb128 0x1
 4768 1059 50       		.byte	0x50
 4769 105a 02       		.uleb128 0x2
 4770 105b 74       		.byte	0x74
 4771 105c 00       		.sleb128 0
 4772 105d 00       		.byte	0
 4773 105e 22       		.uleb128 0x22
 4774 105f 2C000000 		.4byte	.LVL240
 4775 1063 25020000 		.4byte	0x225
 4776 1067 21       		.uleb128 0x21
 4777 1068 01       		.uleb128 0x1
 4778 1069 50       		.byte	0x50
 4779 106a 02       		.uleb128 0x2
 4780 106b 74       		.byte	0x74
 4781 106c 00       		.sleb128 0
 4782 106d 21       		.uleb128 0x21
 4783 106e 01       		.uleb128 0x1
 4784 106f 51       		.byte	0x51
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 160


 4785 1070 02       		.uleb128 0x2
 4786 1071 75       		.byte	0x75
 4787 1072 00       		.sleb128 0
 4788 1073 00       		.byte	0
 4789 1074 00       		.byte	0
 4790 1075 14       		.uleb128 0x14
 4791 1076 99040000 		.4byte	.LASF110
 4792 107a 02       		.byte	0x2
 4793 107b 1D       		.byte	0x1d
 4794 107c BC000000 		.4byte	0xbc
 4795 1080 05       		.uleb128 0x5
 4796 1081 03       		.byte	0x3
 4797 1082 00000000 		.4byte	defaultIloTrimRegValue
 4798 1086 14       		.uleb128 0x14
 4799 1087 E6000000 		.4byte	.LASF111
 4800 108b 02       		.byte	0x2
 4801 108c 22       		.byte	0x22
 4802 108d 83000000 		.4byte	0x83
 4803 1091 05       		.uleb128 0x5
 4804 1092 03       		.byte	0x3
 4805 1093 0C000000 		.4byte	lfclkPosedgeWdtCounter0Enabled
 4806 1097 14       		.uleb128 0x14
 4807 1098 87080000 		.4byte	.LASF112
 4808 109c 02       		.byte	0x2
 4809 109d 23       		.byte	0x23
 4810 109e 83000000 		.4byte	0x83
 4811 10a2 05       		.uleb128 0x5
 4812 10a3 03       		.byte	0x3
 4813 10a4 10000000 		.4byte	lfclkPosedgeWdtCounter0Mode
 4814 10a8 14       		.uleb128 0x14
 4815 10a9 F7070000 		.4byte	.LASF113
 4816 10ad 02       		.byte	0x2
 4817 10ae 25       		.byte	0x25
 4818 10af CD000000 		.4byte	0xcd
 4819 10b3 05       		.uleb128 0x5
 4820 10b4 03       		.byte	0x3
 4821 10b5 24000000 		.4byte	disableServicedIsr
 4822 10b9 14       		.uleb128 0x14
 4823 10ba D0020000 		.4byte	.LASF114
 4824 10be 02       		.byte	0x2
 4825 10bf 26       		.byte	0x26
 4826 10c0 CD000000 		.4byte	0xcd
 4827 10c4 05       		.uleb128 0x5
 4828 10c5 03       		.byte	0x3
 4829 10c6 04000000 		.4byte	wdtIsrMask
 4830 10ca 38       		.uleb128 0x38
 4831 10cb DA100000 		.4byte	0x10da
 4832 10cf DA100000 		.4byte	0x10da
 4833 10d3 39       		.uleb128 0x39
 4834 10d4 0F010000 		.4byte	0x10f
 4835 10d8 02       		.byte	0x2
 4836 10d9 00       		.byte	0
 4837 10da 3A       		.uleb128 0x3a
 4838 10db 83000000 		.4byte	0x83
 4839 10df 14       		.uleb128 0x14
 4840 10e0 29000000 		.4byte	.LASF115
 4841 10e4 02       		.byte	0x2
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 161


 4842 10e5 2A       		.byte	0x2a
 4843 10e6 F0100000 		.4byte	0x10f0
 4844 10ea 05       		.uleb128 0x5
 4845 10eb 03       		.byte	0x3
 4846 10ec 00000000 		.4byte	counterIntMaskTbl
 4847 10f0 3A       		.uleb128 0x3a
 4848 10f1 CA100000 		.4byte	0x10ca
 4849 10f5 38       		.uleb128 0x38
 4850 10f6 FD000000 		.4byte	0xfd
 4851 10fa 05110000 		.4byte	0x1105
 4852 10fe 39       		.uleb128 0x39
 4853 10ff 0F010000 		.4byte	0x10f
 4854 1103 02       		.byte	0x2
 4855 1104 00       		.byte	0
 4856 1105 14       		.uleb128 0x14
 4857 1106 3B000000 		.4byte	.LASF116
 4858 110a 02       		.byte	0x2
 4859 110b 44       		.byte	0x44
 4860 110c F5100000 		.4byte	0x10f5
 4861 1110 05       		.uleb128 0x5
 4862 1111 03       		.byte	0x3
 4863 1112 18000000 		.4byte	cySysWdtCallback
 4864 1116 3B       		.uleb128 0x3b
 4865 1117 FC050000 		.4byte	.LASF127
 4866 111b 04       		.byte	0x4
 4867 111c D4       		.byte	0xd4
 4868 111d 83000000 		.4byte	0x83
 4869 1121 3C       		.uleb128 0x3c
 4870 1122 B0040000 		.4byte	.LASF117
 4871 1126 B0040000 		.4byte	.LASF117
 4872 112a 04       		.byte	0x4
 4873 112b E5       		.byte	0xe5
 4874 112c 3C       		.uleb128 0x3c
 4875 112d 07000000 		.4byte	.LASF118
 4876 1131 07000000 		.4byte	.LASF118
 4877 1135 04       		.byte	0x4
 4878 1136 E6       		.byte	0xe6
 4879 1137 3C       		.uleb128 0x3c
 4880 1138 CC010000 		.4byte	.LASF119
 4881 113c CC010000 		.4byte	.LASF119
 4882 1140 04       		.byte	0x4
 4883 1141 DA       		.byte	0xda
 4884 1142 00       		.byte	0
 4885              		.section	.debug_abbrev,"",%progbits
 4886              	.Ldebug_abbrev0:
 4887 0000 01       		.uleb128 0x1
 4888 0001 11       		.uleb128 0x11
 4889 0002 01       		.byte	0x1
 4890 0003 25       		.uleb128 0x25
 4891 0004 0E       		.uleb128 0xe
 4892 0005 13       		.uleb128 0x13
 4893 0006 0B       		.uleb128 0xb
 4894 0007 03       		.uleb128 0x3
 4895 0008 0E       		.uleb128 0xe
 4896 0009 1B       		.uleb128 0x1b
 4897 000a 0E       		.uleb128 0xe
 4898 000b 55       		.uleb128 0x55
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 162


 4899 000c 17       		.uleb128 0x17
 4900 000d 11       		.uleb128 0x11
 4901 000e 01       		.uleb128 0x1
 4902 000f 10       		.uleb128 0x10
 4903 0010 17       		.uleb128 0x17
 4904 0011 00       		.byte	0
 4905 0012 00       		.byte	0
 4906 0013 02       		.uleb128 0x2
 4907 0014 24       		.uleb128 0x24
 4908 0015 00       		.byte	0
 4909 0016 0B       		.uleb128 0xb
 4910 0017 0B       		.uleb128 0xb
 4911 0018 3E       		.uleb128 0x3e
 4912 0019 0B       		.uleb128 0xb
 4913 001a 03       		.uleb128 0x3
 4914 001b 0E       		.uleb128 0xe
 4915 001c 00       		.byte	0
 4916 001d 00       		.byte	0
 4917 001e 03       		.uleb128 0x3
 4918 001f 24       		.uleb128 0x24
 4919 0020 00       		.byte	0
 4920 0021 0B       		.uleb128 0xb
 4921 0022 0B       		.uleb128 0xb
 4922 0023 3E       		.uleb128 0x3e
 4923 0024 0B       		.uleb128 0xb
 4924 0025 03       		.uleb128 0x3
 4925 0026 08       		.uleb128 0x8
 4926 0027 00       		.byte	0
 4927 0028 00       		.byte	0
 4928 0029 04       		.uleb128 0x4
 4929 002a 16       		.uleb128 0x16
 4930 002b 00       		.byte	0
 4931 002c 03       		.uleb128 0x3
 4932 002d 0E       		.uleb128 0xe
 4933 002e 3A       		.uleb128 0x3a
 4934 002f 0B       		.uleb128 0xb
 4935 0030 3B       		.uleb128 0x3b
 4936 0031 05       		.uleb128 0x5
 4937 0032 49       		.uleb128 0x49
 4938 0033 13       		.uleb128 0x13
 4939 0034 00       		.byte	0
 4940 0035 00       		.byte	0
 4941 0036 05       		.uleb128 0x5
 4942 0037 35       		.uleb128 0x35
 4943 0038 00       		.byte	0
 4944 0039 49       		.uleb128 0x49
 4945 003a 13       		.uleb128 0x13
 4946 003b 00       		.byte	0
 4947 003c 00       		.byte	0
 4948 003d 06       		.uleb128 0x6
 4949 003e 0F       		.uleb128 0xf
 4950 003f 00       		.byte	0
 4951 0040 0B       		.uleb128 0xb
 4952 0041 0B       		.uleb128 0xb
 4953 0042 49       		.uleb128 0x49
 4954 0043 13       		.uleb128 0x13
 4955 0044 00       		.byte	0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 163


 4956 0045 00       		.byte	0
 4957 0046 07       		.uleb128 0x7
 4958 0047 15       		.uleb128 0x15
 4959 0048 00       		.byte	0
 4960 0049 27       		.uleb128 0x27
 4961 004a 19       		.uleb128 0x19
 4962 004b 00       		.byte	0
 4963 004c 00       		.byte	0
 4964 004d 08       		.uleb128 0x8
 4965 004e 04       		.uleb128 0x4
 4966 004f 01       		.byte	0x1
 4967 0050 0B       		.uleb128 0xb
 4968 0051 0B       		.uleb128 0xb
 4969 0052 49       		.uleb128 0x49
 4970 0053 13       		.uleb128 0x13
 4971 0054 3A       		.uleb128 0x3a
 4972 0055 0B       		.uleb128 0xb
 4973 0056 3B       		.uleb128 0x3b
 4974 0057 0B       		.uleb128 0xb
 4975 0058 01       		.uleb128 0x1
 4976 0059 13       		.uleb128 0x13
 4977 005a 00       		.byte	0
 4978 005b 00       		.byte	0
 4979 005c 09       		.uleb128 0x9
 4980 005d 28       		.uleb128 0x28
 4981 005e 00       		.byte	0
 4982 005f 03       		.uleb128 0x3
 4983 0060 0E       		.uleb128 0xe
 4984 0061 1C       		.uleb128 0x1c
 4985 0062 0B       		.uleb128 0xb
 4986 0063 00       		.byte	0
 4987 0064 00       		.byte	0
 4988 0065 0A       		.uleb128 0xa
 4989 0066 16       		.uleb128 0x16
 4990 0067 00       		.byte	0
 4991 0068 03       		.uleb128 0x3
 4992 0069 0E       		.uleb128 0xe
 4993 006a 3A       		.uleb128 0x3a
 4994 006b 0B       		.uleb128 0xb
 4995 006c 3B       		.uleb128 0x3b
 4996 006d 0B       		.uleb128 0xb
 4997 006e 49       		.uleb128 0x49
 4998 006f 13       		.uleb128 0x13
 4999 0070 00       		.byte	0
 5000 0071 00       		.byte	0
 5001 0072 0B       		.uleb128 0xb
 5002 0073 2E       		.uleb128 0x2e
 5003 0074 01       		.byte	0x1
 5004 0075 3F       		.uleb128 0x3f
 5005 0076 19       		.uleb128 0x19
 5006 0077 03       		.uleb128 0x3
 5007 0078 0E       		.uleb128 0xe
 5008 0079 3A       		.uleb128 0x3a
 5009 007a 0B       		.uleb128 0xb
 5010 007b 3B       		.uleb128 0x3b
 5011 007c 05       		.uleb128 0x5
 5012 007d 27       		.uleb128 0x27
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 164


 5013 007e 19       		.uleb128 0x19
 5014 007f 49       		.uleb128 0x49
 5015 0080 13       		.uleb128 0x13
 5016 0081 20       		.uleb128 0x20
 5017 0082 0B       		.uleb128 0xb
 5018 0083 01       		.uleb128 0x1
 5019 0084 13       		.uleb128 0x13
 5020 0085 00       		.byte	0
 5021 0086 00       		.byte	0
 5022 0087 0C       		.uleb128 0xc
 5023 0088 05       		.uleb128 0x5
 5024 0089 00       		.byte	0
 5025 008a 03       		.uleb128 0x3
 5026 008b 0E       		.uleb128 0xe
 5027 008c 3A       		.uleb128 0x3a
 5028 008d 0B       		.uleb128 0xb
 5029 008e 3B       		.uleb128 0x3b
 5030 008f 05       		.uleb128 0x5
 5031 0090 49       		.uleb128 0x49
 5032 0091 13       		.uleb128 0x13
 5033 0092 00       		.byte	0
 5034 0093 00       		.byte	0
 5035 0094 0D       		.uleb128 0xd
 5036 0095 34       		.uleb128 0x34
 5037 0096 00       		.byte	0
 5038 0097 03       		.uleb128 0x3
 5039 0098 0E       		.uleb128 0xe
 5040 0099 3A       		.uleb128 0x3a
 5041 009a 0B       		.uleb128 0xb
 5042 009b 3B       		.uleb128 0x3b
 5043 009c 05       		.uleb128 0x5
 5044 009d 49       		.uleb128 0x49
 5045 009e 13       		.uleb128 0x13
 5046 009f 00       		.byte	0
 5047 00a0 00       		.byte	0
 5048 00a1 0E       		.uleb128 0xe
 5049 00a2 2E       		.uleb128 0x2e
 5050 00a3 01       		.byte	0x1
 5051 00a4 3F       		.uleb128 0x3f
 5052 00a5 19       		.uleb128 0x19
 5053 00a6 03       		.uleb128 0x3
 5054 00a7 0E       		.uleb128 0xe
 5055 00a8 3A       		.uleb128 0x3a
 5056 00a9 0B       		.uleb128 0xb
 5057 00aa 3B       		.uleb128 0x3b
 5058 00ab 05       		.uleb128 0x5
 5059 00ac 27       		.uleb128 0x27
 5060 00ad 19       		.uleb128 0x19
 5061 00ae 20       		.uleb128 0x20
 5062 00af 0B       		.uleb128 0xb
 5063 00b0 01       		.uleb128 0x1
 5064 00b1 13       		.uleb128 0x13
 5065 00b2 00       		.byte	0
 5066 00b3 00       		.byte	0
 5067 00b4 0F       		.uleb128 0xf
 5068 00b5 2E       		.uleb128 0x2e
 5069 00b6 00       		.byte	0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 165


 5070 00b7 03       		.uleb128 0x3
 5071 00b8 0E       		.uleb128 0xe
 5072 00b9 3A       		.uleb128 0x3a
 5073 00ba 0B       		.uleb128 0xb
 5074 00bb 3B       		.uleb128 0x3b
 5075 00bc 05       		.uleb128 0x5
 5076 00bd 27       		.uleb128 0x27
 5077 00be 19       		.uleb128 0x19
 5078 00bf 20       		.uleb128 0x20
 5079 00c0 0B       		.uleb128 0xb
 5080 00c1 00       		.byte	0
 5081 00c2 00       		.byte	0
 5082 00c3 10       		.uleb128 0x10
 5083 00c4 2E       		.uleb128 0x2e
 5084 00c5 01       		.byte	0x1
 5085 00c6 03       		.uleb128 0x3
 5086 00c7 0E       		.uleb128 0xe
 5087 00c8 3A       		.uleb128 0x3a
 5088 00c9 0B       		.uleb128 0xb
 5089 00ca 3B       		.uleb128 0x3b
 5090 00cb 05       		.uleb128 0x5
 5091 00cc 27       		.uleb128 0x27
 5092 00cd 19       		.uleb128 0x19
 5093 00ce 49       		.uleb128 0x49
 5094 00cf 13       		.uleb128 0x13
 5095 00d0 20       		.uleb128 0x20
 5096 00d1 0B       		.uleb128 0xb
 5097 00d2 01       		.uleb128 0x1
 5098 00d3 13       		.uleb128 0x13
 5099 00d4 00       		.byte	0
 5100 00d5 00       		.byte	0
 5101 00d6 11       		.uleb128 0x11
 5102 00d7 2E       		.uleb128 0x2e
 5103 00d8 00       		.byte	0
 5104 00d9 03       		.uleb128 0x3
 5105 00da 0E       		.uleb128 0xe
 5106 00db 3A       		.uleb128 0x3a
 5107 00dc 0B       		.uleb128 0xb
 5108 00dd 3B       		.uleb128 0x3b
 5109 00de 05       		.uleb128 0x5
 5110 00df 27       		.uleb128 0x27
 5111 00e0 19       		.uleb128 0x19
 5112 00e1 11       		.uleb128 0x11
 5113 00e2 01       		.uleb128 0x1
 5114 00e3 12       		.uleb128 0x12
 5115 00e4 06       		.uleb128 0x6
 5116 00e5 40       		.uleb128 0x40
 5117 00e6 18       		.uleb128 0x18
 5118 00e7 9742     		.uleb128 0x2117
 5119 00e9 19       		.uleb128 0x19
 5120 00ea 00       		.byte	0
 5121 00eb 00       		.byte	0
 5122 00ec 12       		.uleb128 0x12
 5123 00ed 2E       		.uleb128 0x2e
 5124 00ee 00       		.byte	0
 5125 00ef 3F       		.uleb128 0x3f
 5126 00f0 19       		.uleb128 0x19
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 166


 5127 00f1 03       		.uleb128 0x3
 5128 00f2 0E       		.uleb128 0xe
 5129 00f3 3A       		.uleb128 0x3a
 5130 00f4 0B       		.uleb128 0xb
 5131 00f5 3B       		.uleb128 0x3b
 5132 00f6 0B       		.uleb128 0xb
 5133 00f7 27       		.uleb128 0x27
 5134 00f8 19       		.uleb128 0x19
 5135 00f9 11       		.uleb128 0x11
 5136 00fa 01       		.uleb128 0x1
 5137 00fb 12       		.uleb128 0x12
 5138 00fc 06       		.uleb128 0x6
 5139 00fd 40       		.uleb128 0x40
 5140 00fe 18       		.uleb128 0x18
 5141 00ff 9742     		.uleb128 0x2117
 5142 0101 19       		.uleb128 0x19
 5143 0102 00       		.byte	0
 5144 0103 00       		.byte	0
 5145 0104 13       		.uleb128 0x13
 5146 0105 2E       		.uleb128 0x2e
 5147 0106 01       		.byte	0x1
 5148 0107 3F       		.uleb128 0x3f
 5149 0108 19       		.uleb128 0x19
 5150 0109 03       		.uleb128 0x3
 5151 010a 0E       		.uleb128 0xe
 5152 010b 3A       		.uleb128 0x3a
 5153 010c 0B       		.uleb128 0xb
 5154 010d 3B       		.uleb128 0x3b
 5155 010e 0B       		.uleb128 0xb
 5156 010f 27       		.uleb128 0x27
 5157 0110 19       		.uleb128 0x19
 5158 0111 11       		.uleb128 0x11
 5159 0112 01       		.uleb128 0x1
 5160 0113 12       		.uleb128 0x12
 5161 0114 06       		.uleb128 0x6
 5162 0115 40       		.uleb128 0x40
 5163 0116 18       		.uleb128 0x18
 5164 0117 9742     		.uleb128 0x2117
 5165 0119 19       		.uleb128 0x19
 5166 011a 01       		.uleb128 0x1
 5167 011b 13       		.uleb128 0x13
 5168 011c 00       		.byte	0
 5169 011d 00       		.byte	0
 5170 011e 14       		.uleb128 0x14
 5171 011f 34       		.uleb128 0x34
 5172 0120 00       		.byte	0
 5173 0121 03       		.uleb128 0x3
 5174 0122 0E       		.uleb128 0xe
 5175 0123 3A       		.uleb128 0x3a
 5176 0124 0B       		.uleb128 0xb
 5177 0125 3B       		.uleb128 0x3b
 5178 0126 0B       		.uleb128 0xb
 5179 0127 49       		.uleb128 0x49
 5180 0128 13       		.uleb128 0x13
 5181 0129 02       		.uleb128 0x2
 5182 012a 18       		.uleb128 0x18
 5183 012b 00       		.byte	0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 167


 5184 012c 00       		.byte	0
 5185 012d 15       		.uleb128 0x15
 5186 012e 2E       		.uleb128 0x2e
 5187 012f 01       		.byte	0x1
 5188 0130 3F       		.uleb128 0x3f
 5189 0131 19       		.uleb128 0x19
 5190 0132 03       		.uleb128 0x3
 5191 0133 0E       		.uleb128 0xe
 5192 0134 3A       		.uleb128 0x3a
 5193 0135 0B       		.uleb128 0xb
 5194 0136 3B       		.uleb128 0x3b
 5195 0137 05       		.uleb128 0x5
 5196 0138 27       		.uleb128 0x27
 5197 0139 19       		.uleb128 0x19
 5198 013a 49       		.uleb128 0x49
 5199 013b 13       		.uleb128 0x13
 5200 013c 11       		.uleb128 0x11
 5201 013d 01       		.uleb128 0x1
 5202 013e 12       		.uleb128 0x12
 5203 013f 06       		.uleb128 0x6
 5204 0140 40       		.uleb128 0x40
 5205 0141 18       		.uleb128 0x18
 5206 0142 9642     		.uleb128 0x2116
 5207 0144 19       		.uleb128 0x19
 5208 0145 01       		.uleb128 0x1
 5209 0146 13       		.uleb128 0x13
 5210 0147 00       		.byte	0
 5211 0148 00       		.byte	0
 5212 0149 16       		.uleb128 0x16
 5213 014a 05       		.uleb128 0x5
 5214 014b 00       		.byte	0
 5215 014c 03       		.uleb128 0x3
 5216 014d 0E       		.uleb128 0xe
 5217 014e 3A       		.uleb128 0x3a
 5218 014f 0B       		.uleb128 0xb
 5219 0150 3B       		.uleb128 0x3b
 5220 0151 05       		.uleb128 0x5
 5221 0152 49       		.uleb128 0x49
 5222 0153 13       		.uleb128 0x13
 5223 0154 02       		.uleb128 0x2
 5224 0155 17       		.uleb128 0x17
 5225 0156 00       		.byte	0
 5226 0157 00       		.byte	0
 5227 0158 17       		.uleb128 0x17
 5228 0159 34       		.uleb128 0x34
 5229 015a 00       		.byte	0
 5230 015b 03       		.uleb128 0x3
 5231 015c 0E       		.uleb128 0xe
 5232 015d 3A       		.uleb128 0x3a
 5233 015e 0B       		.uleb128 0xb
 5234 015f 3B       		.uleb128 0x3b
 5235 0160 05       		.uleb128 0x5
 5236 0161 49       		.uleb128 0x49
 5237 0162 13       		.uleb128 0x13
 5238 0163 02       		.uleb128 0x2
 5239 0164 17       		.uleb128 0x17
 5240 0165 00       		.byte	0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 168


 5241 0166 00       		.byte	0
 5242 0167 18       		.uleb128 0x18
 5243 0168 34       		.uleb128 0x34
 5244 0169 00       		.byte	0
 5245 016a 03       		.uleb128 0x3
 5246 016b 0E       		.uleb128 0xe
 5247 016c 3A       		.uleb128 0x3a
 5248 016d 0B       		.uleb128 0xb
 5249 016e 3B       		.uleb128 0x3b
 5250 016f 05       		.uleb128 0x5
 5251 0170 49       		.uleb128 0x49
 5252 0171 13       		.uleb128 0x13
 5253 0172 02       		.uleb128 0x2
 5254 0173 18       		.uleb128 0x18
 5255 0174 00       		.byte	0
 5256 0175 00       		.byte	0
 5257 0176 19       		.uleb128 0x19
 5258 0177 2E       		.uleb128 0x2e
 5259 0178 01       		.byte	0x1
 5260 0179 31       		.uleb128 0x31
 5261 017a 13       		.uleb128 0x13
 5262 017b 11       		.uleb128 0x11
 5263 017c 01       		.uleb128 0x1
 5264 017d 12       		.uleb128 0x12
 5265 017e 06       		.uleb128 0x6
 5266 017f 40       		.uleb128 0x40
 5267 0180 18       		.uleb128 0x18
 5268 0181 9642     		.uleb128 0x2116
 5269 0183 19       		.uleb128 0x19
 5270 0184 01       		.uleb128 0x1
 5271 0185 13       		.uleb128 0x13
 5272 0186 00       		.byte	0
 5273 0187 00       		.byte	0
 5274 0188 1A       		.uleb128 0x1a
 5275 0189 05       		.uleb128 0x5
 5276 018a 00       		.byte	0
 5277 018b 31       		.uleb128 0x31
 5278 018c 13       		.uleb128 0x13
 5279 018d 02       		.uleb128 0x2
 5280 018e 17       		.uleb128 0x17
 5281 018f 00       		.byte	0
 5282 0190 00       		.byte	0
 5283 0191 1B       		.uleb128 0x1b
 5284 0192 34       		.uleb128 0x34
 5285 0193 00       		.byte	0
 5286 0194 31       		.uleb128 0x31
 5287 0195 13       		.uleb128 0x13
 5288 0196 00       		.byte	0
 5289 0197 00       		.byte	0
 5290 0198 1C       		.uleb128 0x1c
 5291 0199 34       		.uleb128 0x34
 5292 019a 00       		.byte	0
 5293 019b 31       		.uleb128 0x31
 5294 019c 13       		.uleb128 0x13
 5295 019d 02       		.uleb128 0x2
 5296 019e 18       		.uleb128 0x18
 5297 019f 00       		.byte	0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 169


 5298 01a0 00       		.byte	0
 5299 01a1 1D       		.uleb128 0x1d
 5300 01a2 0B       		.uleb128 0xb
 5301 01a3 01       		.byte	0x1
 5302 01a4 11       		.uleb128 0x11
 5303 01a5 01       		.uleb128 0x1
 5304 01a6 12       		.uleb128 0x12
 5305 01a7 06       		.uleb128 0x6
 5306 01a8 00       		.byte	0
 5307 01a9 00       		.byte	0
 5308 01aa 1E       		.uleb128 0x1e
 5309 01ab 34       		.uleb128 0x34
 5310 01ac 00       		.byte	0
 5311 01ad 31       		.uleb128 0x31
 5312 01ae 13       		.uleb128 0x13
 5313 01af 02       		.uleb128 0x2
 5314 01b0 17       		.uleb128 0x17
 5315 01b1 00       		.byte	0
 5316 01b2 00       		.byte	0
 5317 01b3 1F       		.uleb128 0x1f
 5318 01b4 2E       		.uleb128 0x2e
 5319 01b5 01       		.byte	0x1
 5320 01b6 3F       		.uleb128 0x3f
 5321 01b7 19       		.uleb128 0x19
 5322 01b8 03       		.uleb128 0x3
 5323 01b9 0E       		.uleb128 0xe
 5324 01ba 3A       		.uleb128 0x3a
 5325 01bb 0B       		.uleb128 0xb
 5326 01bc 3B       		.uleb128 0x3b
 5327 01bd 05       		.uleb128 0x5
 5328 01be 27       		.uleb128 0x27
 5329 01bf 19       		.uleb128 0x19
 5330 01c0 49       		.uleb128 0x49
 5331 01c1 13       		.uleb128 0x13
 5332 01c2 11       		.uleb128 0x11
 5333 01c3 01       		.uleb128 0x1
 5334 01c4 12       		.uleb128 0x12
 5335 01c5 06       		.uleb128 0x6
 5336 01c6 40       		.uleb128 0x40
 5337 01c7 18       		.uleb128 0x18
 5338 01c8 9742     		.uleb128 0x2117
 5339 01ca 19       		.uleb128 0x19
 5340 01cb 01       		.uleb128 0x1
 5341 01cc 13       		.uleb128 0x13
 5342 01cd 00       		.byte	0
 5343 01ce 00       		.byte	0
 5344 01cf 20       		.uleb128 0x20
 5345 01d0 898201   		.uleb128 0x4109
 5346 01d3 01       		.byte	0x1
 5347 01d4 11       		.uleb128 0x11
 5348 01d5 01       		.uleb128 0x1
 5349 01d6 31       		.uleb128 0x31
 5350 01d7 13       		.uleb128 0x13
 5351 01d8 01       		.uleb128 0x1
 5352 01d9 13       		.uleb128 0x13
 5353 01da 00       		.byte	0
 5354 01db 00       		.byte	0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 170


 5355 01dc 21       		.uleb128 0x21
 5356 01dd 8A8201   		.uleb128 0x410a
 5357 01e0 00       		.byte	0
 5358 01e1 02       		.uleb128 0x2
 5359 01e2 18       		.uleb128 0x18
 5360 01e3 9142     		.uleb128 0x2111
 5361 01e5 18       		.uleb128 0x18
 5362 01e6 00       		.byte	0
 5363 01e7 00       		.byte	0
 5364 01e8 22       		.uleb128 0x22
 5365 01e9 898201   		.uleb128 0x4109
 5366 01ec 01       		.byte	0x1
 5367 01ed 11       		.uleb128 0x11
 5368 01ee 01       		.uleb128 0x1
 5369 01ef 31       		.uleb128 0x31
 5370 01f0 13       		.uleb128 0x13
 5371 01f1 00       		.byte	0
 5372 01f2 00       		.byte	0
 5373 01f3 23       		.uleb128 0x23
 5374 01f4 2E       		.uleb128 0x2e
 5375 01f5 01       		.byte	0x1
 5376 01f6 3F       		.uleb128 0x3f
 5377 01f7 19       		.uleb128 0x19
 5378 01f8 03       		.uleb128 0x3
 5379 01f9 0E       		.uleb128 0xe
 5380 01fa 3A       		.uleb128 0x3a
 5381 01fb 0B       		.uleb128 0xb
 5382 01fc 3B       		.uleb128 0x3b
 5383 01fd 05       		.uleb128 0x5
 5384 01fe 27       		.uleb128 0x27
 5385 01ff 19       		.uleb128 0x19
 5386 0200 11       		.uleb128 0x11
 5387 0201 01       		.uleb128 0x1
 5388 0202 12       		.uleb128 0x12
 5389 0203 06       		.uleb128 0x6
 5390 0204 40       		.uleb128 0x40
 5391 0205 18       		.uleb128 0x18
 5392 0206 9742     		.uleb128 0x2117
 5393 0208 19       		.uleb128 0x19
 5394 0209 01       		.uleb128 0x1
 5395 020a 13       		.uleb128 0x13
 5396 020b 00       		.byte	0
 5397 020c 00       		.byte	0
 5398 020d 24       		.uleb128 0x24
 5399 020e 898201   		.uleb128 0x4109
 5400 0211 00       		.byte	0
 5401 0212 11       		.uleb128 0x11
 5402 0213 01       		.uleb128 0x1
 5403 0214 31       		.uleb128 0x31
 5404 0215 13       		.uleb128 0x13
 5405 0216 00       		.byte	0
 5406 0217 00       		.byte	0
 5407 0218 25       		.uleb128 0x25
 5408 0219 2E       		.uleb128 0x2e
 5409 021a 00       		.byte	0
 5410 021b 3F       		.uleb128 0x3f
 5411 021c 19       		.uleb128 0x19
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 171


 5412 021d 03       		.uleb128 0x3
 5413 021e 0E       		.uleb128 0xe
 5414 021f 3A       		.uleb128 0x3a
 5415 0220 0B       		.uleb128 0xb
 5416 0221 3B       		.uleb128 0x3b
 5417 0222 05       		.uleb128 0x5
 5418 0223 27       		.uleb128 0x27
 5419 0224 19       		.uleb128 0x19
 5420 0225 49       		.uleb128 0x49
 5421 0226 13       		.uleb128 0x13
 5422 0227 11       		.uleb128 0x11
 5423 0228 01       		.uleb128 0x1
 5424 0229 12       		.uleb128 0x12
 5425 022a 06       		.uleb128 0x6
 5426 022b 40       		.uleb128 0x40
 5427 022c 18       		.uleb128 0x18
 5428 022d 9742     		.uleb128 0x2117
 5429 022f 19       		.uleb128 0x19
 5430 0230 00       		.byte	0
 5431 0231 00       		.byte	0
 5432 0232 26       		.uleb128 0x26
 5433 0233 2E       		.uleb128 0x2e
 5434 0234 01       		.byte	0x1
 5435 0235 31       		.uleb128 0x31
 5436 0236 13       		.uleb128 0x13
 5437 0237 11       		.uleb128 0x11
 5438 0238 01       		.uleb128 0x1
 5439 0239 12       		.uleb128 0x12
 5440 023a 06       		.uleb128 0x6
 5441 023b 40       		.uleb128 0x40
 5442 023c 18       		.uleb128 0x18
 5443 023d 9742     		.uleb128 0x2117
 5444 023f 19       		.uleb128 0x19
 5445 0240 01       		.uleb128 0x1
 5446 0241 13       		.uleb128 0x13
 5447 0242 00       		.byte	0
 5448 0243 00       		.byte	0
 5449 0244 27       		.uleb128 0x27
 5450 0245 0B       		.uleb128 0xb
 5451 0246 01       		.byte	0x1
 5452 0247 11       		.uleb128 0x11
 5453 0248 01       		.uleb128 0x1
 5454 0249 12       		.uleb128 0x12
 5455 024a 06       		.uleb128 0x6
 5456 024b 01       		.uleb128 0x1
 5457 024c 13       		.uleb128 0x13
 5458 024d 00       		.byte	0
 5459 024e 00       		.byte	0
 5460 024f 28       		.uleb128 0x28
 5461 0250 05       		.uleb128 0x5
 5462 0251 00       		.byte	0
 5463 0252 31       		.uleb128 0x31
 5464 0253 13       		.uleb128 0x13
 5465 0254 02       		.uleb128 0x2
 5466 0255 18       		.uleb128 0x18
 5467 0256 00       		.byte	0
 5468 0257 00       		.byte	0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 172


 5469 0258 29       		.uleb128 0x29
 5470 0259 1D       		.uleb128 0x1d
 5471 025a 01       		.byte	0x1
 5472 025b 31       		.uleb128 0x31
 5473 025c 13       		.uleb128 0x13
 5474 025d 11       		.uleb128 0x11
 5475 025e 01       		.uleb128 0x1
 5476 025f 12       		.uleb128 0x12
 5477 0260 06       		.uleb128 0x6
 5478 0261 58       		.uleb128 0x58
 5479 0262 0B       		.uleb128 0xb
 5480 0263 59       		.uleb128 0x59
 5481 0264 05       		.uleb128 0x5
 5482 0265 01       		.uleb128 0x1
 5483 0266 13       		.uleb128 0x13
 5484 0267 00       		.byte	0
 5485 0268 00       		.byte	0
 5486 0269 2A       		.uleb128 0x2a
 5487 026a 05       		.uleb128 0x5
 5488 026b 00       		.byte	0
 5489 026c 31       		.uleb128 0x31
 5490 026d 13       		.uleb128 0x13
 5491 026e 00       		.byte	0
 5492 026f 00       		.byte	0
 5493 0270 2B       		.uleb128 0x2b
 5494 0271 1D       		.uleb128 0x1d
 5495 0272 01       		.byte	0x1
 5496 0273 31       		.uleb128 0x31
 5497 0274 13       		.uleb128 0x13
 5498 0275 11       		.uleb128 0x11
 5499 0276 01       		.uleb128 0x1
 5500 0277 12       		.uleb128 0x12
 5501 0278 06       		.uleb128 0x6
 5502 0279 58       		.uleb128 0x58
 5503 027a 0B       		.uleb128 0xb
 5504 027b 59       		.uleb128 0x59
 5505 027c 05       		.uleb128 0x5
 5506 027d 00       		.byte	0
 5507 027e 00       		.byte	0
 5508 027f 2C       		.uleb128 0x2c
 5509 0280 2E       		.uleb128 0x2e
 5510 0281 00       		.byte	0
 5511 0282 03       		.uleb128 0x3
 5512 0283 0E       		.uleb128 0xe
 5513 0284 3A       		.uleb128 0x3a
 5514 0285 0B       		.uleb128 0xb
 5515 0286 3B       		.uleb128 0x3b
 5516 0287 05       		.uleb128 0x5
 5517 0288 27       		.uleb128 0x27
 5518 0289 19       		.uleb128 0x19
 5519 028a 49       		.uleb128 0x49
 5520 028b 13       		.uleb128 0x13
 5521 028c 20       		.uleb128 0x20
 5522 028d 0B       		.uleb128 0xb
 5523 028e 00       		.byte	0
 5524 028f 00       		.byte	0
 5525 0290 2D       		.uleb128 0x2d
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 173


 5526 0291 05       		.uleb128 0x5
 5527 0292 00       		.byte	0
 5528 0293 03       		.uleb128 0x3
 5529 0294 0E       		.uleb128 0xe
 5530 0295 3A       		.uleb128 0x3a
 5531 0296 0B       		.uleb128 0xb
 5532 0297 3B       		.uleb128 0x3b
 5533 0298 05       		.uleb128 0x5
 5534 0299 49       		.uleb128 0x49
 5535 029a 13       		.uleb128 0x13
 5536 029b 02       		.uleb128 0x2
 5537 029c 18       		.uleb128 0x18
 5538 029d 00       		.byte	0
 5539 029e 00       		.byte	0
 5540 029f 2E       		.uleb128 0x2e
 5541 02a0 1D       		.uleb128 0x1d
 5542 02a1 00       		.byte	0
 5543 02a2 31       		.uleb128 0x31
 5544 02a3 13       		.uleb128 0x13
 5545 02a4 11       		.uleb128 0x11
 5546 02a5 01       		.uleb128 0x1
 5547 02a6 12       		.uleb128 0x12
 5548 02a7 06       		.uleb128 0x6
 5549 02a8 58       		.uleb128 0x58
 5550 02a9 0B       		.uleb128 0xb
 5551 02aa 59       		.uleb128 0x59
 5552 02ab 05       		.uleb128 0x5
 5553 02ac 00       		.byte	0
 5554 02ad 00       		.byte	0
 5555 02ae 2F       		.uleb128 0x2f
 5556 02af 1D       		.uleb128 0x1d
 5557 02b0 01       		.byte	0x1
 5558 02b1 31       		.uleb128 0x31
 5559 02b2 13       		.uleb128 0x13
 5560 02b3 52       		.uleb128 0x52
 5561 02b4 01       		.uleb128 0x1
 5562 02b5 55       		.uleb128 0x55
 5563 02b6 17       		.uleb128 0x17
 5564 02b7 58       		.uleb128 0x58
 5565 02b8 0B       		.uleb128 0xb
 5566 02b9 59       		.uleb128 0x59
 5567 02ba 05       		.uleb128 0x5
 5568 02bb 01       		.uleb128 0x1
 5569 02bc 13       		.uleb128 0x13
 5570 02bd 00       		.byte	0
 5571 02be 00       		.byte	0
 5572 02bf 30       		.uleb128 0x30
 5573 02c0 2E       		.uleb128 0x2e
 5574 02c1 01       		.byte	0x1
 5575 02c2 03       		.uleb128 0x3
 5576 02c3 0E       		.uleb128 0xe
 5577 02c4 3A       		.uleb128 0x3a
 5578 02c5 0B       		.uleb128 0xb
 5579 02c6 3B       		.uleb128 0x3b
 5580 02c7 05       		.uleb128 0x5
 5581 02c8 27       		.uleb128 0x27
 5582 02c9 19       		.uleb128 0x19
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 174


 5583 02ca 11       		.uleb128 0x11
 5584 02cb 01       		.uleb128 0x1
 5585 02cc 12       		.uleb128 0x12
 5586 02cd 06       		.uleb128 0x6
 5587 02ce 40       		.uleb128 0x40
 5588 02cf 18       		.uleb128 0x18
 5589 02d0 9742     		.uleb128 0x2117
 5590 02d2 19       		.uleb128 0x19
 5591 02d3 01       		.uleb128 0x1
 5592 02d4 13       		.uleb128 0x13
 5593 02d5 00       		.byte	0
 5594 02d6 00       		.byte	0
 5595 02d7 31       		.uleb128 0x31
 5596 02d8 34       		.uleb128 0x34
 5597 02d9 00       		.byte	0
 5598 02da 03       		.uleb128 0x3
 5599 02db 0E       		.uleb128 0xe
 5600 02dc 3A       		.uleb128 0x3a
 5601 02dd 0B       		.uleb128 0xb
 5602 02de 3B       		.uleb128 0x3b
 5603 02df 0B       		.uleb128 0xb
 5604 02e0 49       		.uleb128 0x49
 5605 02e1 13       		.uleb128 0x13
 5606 02e2 02       		.uleb128 0x2
 5607 02e3 17       		.uleb128 0x17
 5608 02e4 00       		.byte	0
 5609 02e5 00       		.byte	0
 5610 02e6 32       		.uleb128 0x32
 5611 02e7 1D       		.uleb128 0x1d
 5612 02e8 00       		.byte	0
 5613 02e9 31       		.uleb128 0x31
 5614 02ea 13       		.uleb128 0x13
 5615 02eb 52       		.uleb128 0x52
 5616 02ec 01       		.uleb128 0x1
 5617 02ed 55       		.uleb128 0x55
 5618 02ee 17       		.uleb128 0x17
 5619 02ef 58       		.uleb128 0x58
 5620 02f0 0B       		.uleb128 0xb
 5621 02f1 59       		.uleb128 0x59
 5622 02f2 0B       		.uleb128 0xb
 5623 02f3 00       		.byte	0
 5624 02f4 00       		.byte	0
 5625 02f5 33       		.uleb128 0x33
 5626 02f6 1D       		.uleb128 0x1d
 5627 02f7 00       		.byte	0
 5628 02f8 31       		.uleb128 0x31
 5629 02f9 13       		.uleb128 0x13
 5630 02fa 11       		.uleb128 0x11
 5631 02fb 01       		.uleb128 0x1
 5632 02fc 12       		.uleb128 0x12
 5633 02fd 06       		.uleb128 0x6
 5634 02fe 58       		.uleb128 0x58
 5635 02ff 0B       		.uleb128 0xb
 5636 0300 59       		.uleb128 0x59
 5637 0301 0B       		.uleb128 0xb
 5638 0302 00       		.byte	0
 5639 0303 00       		.byte	0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 175


 5640 0304 34       		.uleb128 0x34
 5641 0305 1D       		.uleb128 0x1d
 5642 0306 01       		.byte	0x1
 5643 0307 31       		.uleb128 0x31
 5644 0308 13       		.uleb128 0x13
 5645 0309 11       		.uleb128 0x11
 5646 030a 01       		.uleb128 0x1
 5647 030b 12       		.uleb128 0x12
 5648 030c 06       		.uleb128 0x6
 5649 030d 58       		.uleb128 0x58
 5650 030e 0B       		.uleb128 0xb
 5651 030f 59       		.uleb128 0x59
 5652 0310 0B       		.uleb128 0xb
 5653 0311 01       		.uleb128 0x1
 5654 0312 13       		.uleb128 0x13
 5655 0313 00       		.byte	0
 5656 0314 00       		.byte	0
 5657 0315 35       		.uleb128 0x35
 5658 0316 0B       		.uleb128 0xb
 5659 0317 01       		.byte	0x1
 5660 0318 55       		.uleb128 0x55
 5661 0319 17       		.uleb128 0x17
 5662 031a 00       		.byte	0
 5663 031b 00       		.byte	0
 5664 031c 36       		.uleb128 0x36
 5665 031d 1D       		.uleb128 0x1d
 5666 031e 00       		.byte	0
 5667 031f 31       		.uleb128 0x31
 5668 0320 13       		.uleb128 0x13
 5669 0321 52       		.uleb128 0x52
 5670 0322 01       		.uleb128 0x1
 5671 0323 55       		.uleb128 0x55
 5672 0324 17       		.uleb128 0x17
 5673 0325 58       		.uleb128 0x58
 5674 0326 0B       		.uleb128 0xb
 5675 0327 59       		.uleb128 0x59
 5676 0328 05       		.uleb128 0x5
 5677 0329 00       		.byte	0
 5678 032a 00       		.byte	0
 5679 032b 37       		.uleb128 0x37
 5680 032c 2E       		.uleb128 0x2e
 5681 032d 01       		.byte	0x1
 5682 032e 3F       		.uleb128 0x3f
 5683 032f 19       		.uleb128 0x19
 5684 0330 03       		.uleb128 0x3
 5685 0331 0E       		.uleb128 0xe
 5686 0332 3A       		.uleb128 0x3a
 5687 0333 0B       		.uleb128 0xb
 5688 0334 3B       		.uleb128 0x3b
 5689 0335 05       		.uleb128 0x5
 5690 0336 27       		.uleb128 0x27
 5691 0337 19       		.uleb128 0x19
 5692 0338 11       		.uleb128 0x11
 5693 0339 01       		.uleb128 0x1
 5694 033a 12       		.uleb128 0x12
 5695 033b 06       		.uleb128 0x6
 5696 033c 40       		.uleb128 0x40
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 176


 5697 033d 18       		.uleb128 0x18
 5698 033e 9642     		.uleb128 0x2116
 5699 0340 19       		.uleb128 0x19
 5700 0341 01       		.uleb128 0x1
 5701 0342 13       		.uleb128 0x13
 5702 0343 00       		.byte	0
 5703 0344 00       		.byte	0
 5704 0345 38       		.uleb128 0x38
 5705 0346 01       		.uleb128 0x1
 5706 0347 01       		.byte	0x1
 5707 0348 49       		.uleb128 0x49
 5708 0349 13       		.uleb128 0x13
 5709 034a 01       		.uleb128 0x1
 5710 034b 13       		.uleb128 0x13
 5711 034c 00       		.byte	0
 5712 034d 00       		.byte	0
 5713 034e 39       		.uleb128 0x39
 5714 034f 21       		.uleb128 0x21
 5715 0350 00       		.byte	0
 5716 0351 49       		.uleb128 0x49
 5717 0352 13       		.uleb128 0x13
 5718 0353 2F       		.uleb128 0x2f
 5719 0354 0B       		.uleb128 0xb
 5720 0355 00       		.byte	0
 5721 0356 00       		.byte	0
 5722 0357 3A       		.uleb128 0x3a
 5723 0358 26       		.uleb128 0x26
 5724 0359 00       		.byte	0
 5725 035a 49       		.uleb128 0x49
 5726 035b 13       		.uleb128 0x13
 5727 035c 00       		.byte	0
 5728 035d 00       		.byte	0
 5729 035e 3B       		.uleb128 0x3b
 5730 035f 34       		.uleb128 0x34
 5731 0360 00       		.byte	0
 5732 0361 03       		.uleb128 0x3
 5733 0362 0E       		.uleb128 0xe
 5734 0363 3A       		.uleb128 0x3a
 5735 0364 0B       		.uleb128 0xb
 5736 0365 3B       		.uleb128 0x3b
 5737 0366 0B       		.uleb128 0xb
 5738 0367 49       		.uleb128 0x49
 5739 0368 13       		.uleb128 0x13
 5740 0369 3F       		.uleb128 0x3f
 5741 036a 19       		.uleb128 0x19
 5742 036b 3C       		.uleb128 0x3c
 5743 036c 19       		.uleb128 0x19
 5744 036d 00       		.byte	0
 5745 036e 00       		.byte	0
 5746 036f 3C       		.uleb128 0x3c
 5747 0370 2E       		.uleb128 0x2e
 5748 0371 00       		.byte	0
 5749 0372 3F       		.uleb128 0x3f
 5750 0373 19       		.uleb128 0x19
 5751 0374 3C       		.uleb128 0x3c
 5752 0375 19       		.uleb128 0x19
 5753 0376 6E       		.uleb128 0x6e
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 177


 5754 0377 0E       		.uleb128 0xe
 5755 0378 03       		.uleb128 0x3
 5756 0379 0E       		.uleb128 0xe
 5757 037a 3A       		.uleb128 0x3a
 5758 037b 0B       		.uleb128 0xb
 5759 037c 3B       		.uleb128 0x3b
 5760 037d 0B       		.uleb128 0xb
 5761 037e 00       		.byte	0
 5762 037f 00       		.byte	0
 5763 0380 00       		.byte	0
 5764              		.section	.debug_loc,"",%progbits
 5765              	.Ldebug_loc0:
 5766              	.LLST0:
 5767 0000 00000000 		.4byte	.LVL0
 5768 0004 14000000 		.4byte	.LVL3
 5769 0008 0100     		.2byte	0x1
 5770 000a 50       		.byte	0x50
 5771 000b 14000000 		.4byte	.LVL3
 5772 000f 86000000 		.4byte	.LVL12
 5773 0013 0100     		.2byte	0x1
 5774 0015 55       		.byte	0x55
 5775 0016 86000000 		.4byte	.LVL12
 5776 001a A2000000 		.4byte	.LVL17
 5777 001e 0400     		.2byte	0x4
 5778 0020 F3       		.byte	0xf3
 5779 0021 01       		.uleb128 0x1
 5780 0022 50       		.byte	0x50
 5781 0023 9F       		.byte	0x9f
 5782 0024 A2000000 		.4byte	.LVL17
 5783 0028 B0000000 		.4byte	.LVL18
 5784 002c 0100     		.2byte	0x1
 5785 002e 55       		.byte	0x55
 5786 002f B0000000 		.4byte	.LVL18
 5787 0033 E8000000 		.4byte	.LFE5
 5788 0037 0400     		.2byte	0x4
 5789 0039 F3       		.byte	0xf3
 5790 003a 01       		.uleb128 0x1
 5791 003b 50       		.byte	0x50
 5792 003c 9F       		.byte	0x9f
 5793 003d 00000000 		.4byte	0
 5794 0041 00000000 		.4byte	0
 5795              	.LLST1:
 5796 0045 00000000 		.4byte	.LVL0
 5797 0049 34000000 		.4byte	.LVL5
 5798 004d 0100     		.2byte	0x1
 5799 004f 51       		.byte	0x51
 5800 0050 34000000 		.4byte	.LVL5
 5801 0054 B0000000 		.4byte	.LVL19
 5802 0058 0100     		.2byte	0x1
 5803 005a 56       		.byte	0x56
 5804 005b B0000000 		.4byte	.LVL19
 5805 005f E8000000 		.4byte	.LFE5
 5806 0063 0400     		.2byte	0x4
 5807 0065 F3       		.byte	0xf3
 5808 0066 01       		.uleb128 0x1
 5809 0067 51       		.byte	0x51
 5810 0068 9F       		.byte	0x9f
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 178


 5811 0069 00000000 		.4byte	0
 5812 006d 00000000 		.4byte	0
 5813              	.LLST2:
 5814 0071 6E000000 		.4byte	.LVL9
 5815 0075 70000000 		.4byte	.LVL10
 5816 0079 0100     		.2byte	0x1
 5817 007b 50       		.byte	0x50
 5818 007c 9A000000 		.4byte	.LVL14
 5819 0080 9E000000 		.4byte	.LVL15
 5820 0084 0100     		.2byte	0x1
 5821 0086 50       		.byte	0x50
 5822 0087 9E000000 		.4byte	.LVL15
 5823 008b A2000000 		.4byte	.LVL17
 5824 008f 0200     		.2byte	0x2
 5825 0091 76       		.byte	0x76
 5826 0092 00       		.sleb128 0
 5827 0093 00000000 		.4byte	0
 5828 0097 00000000 		.4byte	0
 5829              	.LLST3:
 5830 009b 56000000 		.4byte	.LVL6
 5831 009f 70000000 		.4byte	.LVL10
 5832 00a3 0B00     		.2byte	0xb
 5833 00a5 75       		.byte	0x75
 5834 00a6 00       		.sleb128 0
 5835 00a7 F7       		.byte	0xf7
 5836 00a8 25       		.uleb128 0x25
 5837 00a9 4F       		.byte	0x4f
 5838 00aa F7       		.byte	0xf7
 5839 00ab 25       		.uleb128 0x25
 5840 00ac 1B       		.byte	0x1b
 5841 00ad F7       		.byte	0xf7
 5842 00ae 00       		.uleb128 0
 5843 00af 9F       		.byte	0x9f
 5844 00b0 70000000 		.4byte	.LVL10
 5845 00b4 86000000 		.4byte	.LVL12
 5846 00b8 1300     		.2byte	0x13
 5847 00ba 75       		.byte	0x75
 5848 00bb 00       		.sleb128 0
 5849 00bc 08       		.byte	0x8
 5850 00bd 64       		.byte	0x64
 5851 00be 1E       		.byte	0x1e
 5852 00bf 23       		.byte	0x23
 5853 00c0 8D06     		.uleb128 0x30d
 5854 00c2 F7       		.byte	0xf7
 5855 00c3 25       		.uleb128 0x25
 5856 00c4 0A       		.byte	0xa
 5857 00c5 350C     		.2byte	0xc35
 5858 00c7 F7       		.byte	0xf7
 5859 00c8 25       		.uleb128 0x25
 5860 00c9 1B       		.byte	0x1b
 5861 00ca F7       		.byte	0xf7
 5862 00cb 00       		.uleb128 0
 5863 00cc 9F       		.byte	0x9f
 5864 00cd 86000000 		.4byte	.LVL12
 5865 00d1 9A000000 		.4byte	.LVL14
 5866 00d5 1400     		.2byte	0x14
 5867 00d7 F3       		.byte	0xf3
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 179


 5868 00d8 01       		.uleb128 0x1
 5869 00d9 50       		.byte	0x50
 5870 00da 08       		.byte	0x8
 5871 00db 64       		.byte	0x64
 5872 00dc 1E       		.byte	0x1e
 5873 00dd 23       		.byte	0x23
 5874 00de 8D06     		.uleb128 0x30d
 5875 00e0 F7       		.byte	0xf7
 5876 00e1 25       		.uleb128 0x25
 5877 00e2 0A       		.byte	0xa
 5878 00e3 350C     		.2byte	0xc35
 5879 00e5 F7       		.byte	0xf7
 5880 00e6 25       		.uleb128 0x25
 5881 00e7 1B       		.byte	0x1b
 5882 00e8 F7       		.byte	0xf7
 5883 00e9 00       		.uleb128 0
 5884 00ea 9F       		.byte	0x9f
 5885 00eb 00000000 		.4byte	0
 5886 00ef 00000000 		.4byte	0
 5887              	.LLST4:
 5888 00f3 06000000 		.4byte	.LVL1
 5889 00f7 0C000000 		.4byte	.LVL2
 5890 00fb 0700     		.2byte	0x7
 5891 00fd 72       		.byte	0x72
 5892 00fe 00       		.sleb128 0
 5893 00ff 0A       		.byte	0xa
 5894 0100 3F3F     		.2byte	0x3f3f
 5895 0102 1A       		.byte	0x1a
 5896 0103 9F       		.byte	0x9f
 5897 0104 0C000000 		.4byte	.LVL2
 5898 0108 1A000000 		.4byte	.LVL4
 5899 010c 0100     		.2byte	0x1
 5900 010e 53       		.byte	0x53
 5901 010f 00000000 		.4byte	0
 5902 0113 00000000 		.4byte	0
 5903              	.LLST5:
 5904 0117 A0000000 		.4byte	.LVL16
 5905 011b A2000000 		.4byte	.LVL17
 5906 011f 0200     		.2byte	0x2
 5907 0121 30       		.byte	0x30
 5908 0122 9F       		.byte	0x9f
 5909 0123 B0000000 		.4byte	.LVL18
 5910 0127 E8000000 		.4byte	.LFE5
 5911 012b 0100     		.2byte	0x1
 5912 012d 50       		.byte	0x50
 5913 012e 00000000 		.4byte	0
 5914 0132 00000000 		.4byte	0
 5915              	.LLST6:
 5916 0136 00000000 		.4byte	.LVL20
 5917 013a 0A000000 		.4byte	.LVL21
 5918 013e 0100     		.2byte	0x1
 5919 0140 50       		.byte	0x50
 5920 0141 0A000000 		.4byte	.LVL21
 5921 0145 7A000000 		.4byte	.LVL43
 5922 0149 0100     		.2byte	0x1
 5923 014b 54       		.byte	0x54
 5924 014c 7A000000 		.4byte	.LVL43
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 180


 5925 0150 90000000 		.4byte	.LFE8
 5926 0154 0400     		.2byte	0x4
 5927 0156 F3       		.byte	0xf3
 5928 0157 01       		.uleb128 0x1
 5929 0158 50       		.byte	0x50
 5930 0159 9F       		.byte	0x9f
 5931 015a 00000000 		.4byte	0
 5932 015e 00000000 		.4byte	0
 5933              	.LLST7:
 5934 0162 0E000000 		.4byte	.LVL22
 5935 0166 7A000000 		.4byte	.LVL42
 5936 016a 0100     		.2byte	0x1
 5937 016c 54       		.byte	0x54
 5938 016d 00000000 		.4byte	0
 5939 0171 00000000 		.4byte	0
 5940              	.LLST8:
 5941 0175 14000000 		.4byte	.LVL23
 5942 0179 16000000 		.4byte	.LVL24
 5943 017d 1100     		.2byte	0x11
 5944 017f 70       		.byte	0x70
 5945 0180 00       		.sleb128 0
 5946 0181 71       		.byte	0x71
 5947 0182 00       		.sleb128 0
 5948 0183 1E       		.byte	0x1e
 5949 0184 F7       		.byte	0xf7
 5950 0185 25       		.uleb128 0x25
 5951 0186 71       		.byte	0x71
 5952 0187 00       		.sleb128 0
 5953 0188 3A       		.byte	0x3a
 5954 0189 25       		.byte	0x25
 5955 018a F7       		.byte	0xf7
 5956 018b 25       		.uleb128 0x25
 5957 018c 1B       		.byte	0x1b
 5958 018d F7       		.byte	0xf7
 5959 018e 00       		.uleb128 0
 5960 018f 9F       		.byte	0x9f
 5961 0190 00000000 		.4byte	0
 5962 0194 00000000 		.4byte	0
 5963              	.LLST9:
 5964 0198 54000000 		.4byte	.LVL31
 5965 019c 56000000 		.4byte	.LVL32
 5966 01a0 0500     		.2byte	0x5
 5967 01a2 73       		.byte	0x73
 5968 01a3 00       		.sleb128 0
 5969 01a4 3F       		.byte	0x3f
 5970 01a5 1A       		.byte	0x1a
 5971 01a6 9F       		.byte	0x9f
 5972 01a7 56000000 		.4byte	.LVL32
 5973 01ab 5A000000 		.4byte	.LVL34
 5974 01af 0100     		.2byte	0x1
 5975 01b1 53       		.byte	0x53
 5976 01b2 00000000 		.4byte	0
 5977 01b6 00000000 		.4byte	0
 5978              	.LLST10:
 5979 01ba 2A000000 		.4byte	.LVL26
 5980 01be 3C000000 		.4byte	.LVL27
 5981 01c2 0100     		.2byte	0x1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 181


 5982 01c4 50       		.byte	0x50
 5983 01c5 42000000 		.4byte	.LVL28
 5984 01c9 44000000 		.4byte	.LVL29
 5985 01cd 0100     		.2byte	0x1
 5986 01cf 50       		.byte	0x50
 5987 01d0 76000000 		.4byte	.LVL40
 5988 01d4 7A000000 		.4byte	.LVL42
 5989 01d8 0100     		.2byte	0x1
 5990 01da 50       		.byte	0x50
 5991 01db 00000000 		.4byte	0
 5992 01df 00000000 		.4byte	0
 5993              	.LLST11:
 5994 01e3 4E000000 		.4byte	.LVL30
 5995 01e7 64000000 		.4byte	.LVL35
 5996 01eb 0100     		.2byte	0x1
 5997 01ed 50       		.byte	0x50
 5998 01ee 66000000 		.4byte	.LVL36
 5999 01f2 70000000 		.4byte	.LVL38
 6000 01f6 0100     		.2byte	0x1
 6001 01f8 50       		.byte	0x50
 6002 01f9 00000000 		.4byte	0
 6003 01fd 00000000 		.4byte	0
 6004              	.LLST12:
 6005 0201 72000000 		.4byte	.LVL39
 6006 0205 76000000 		.4byte	.LVL40
 6007 0209 0200     		.2byte	0x2
 6008 020b 37       		.byte	0x37
 6009 020c 9F       		.byte	0x9f
 6010 020d 78000000 		.4byte	.LVL41
 6011 0211 7A000000 		.4byte	.LVL42
 6012 0215 0200     		.2byte	0x2
 6013 0217 30       		.byte	0x30
 6014 0218 9F       		.byte	0x9f
 6015 0219 00000000 		.4byte	0
 6016 021d 00000000 		.4byte	0
 6017              	.LLST13:
 6018 0221 00000000 		.4byte	.LVL44
 6019 0225 14000000 		.4byte	.LVL47
 6020 0229 0100     		.2byte	0x1
 6021 022b 50       		.byte	0x50
 6022 022c 14000000 		.4byte	.LVL47
 6023 0230 18000000 		.4byte	.LVL48
 6024 0234 0400     		.2byte	0x4
 6025 0236 F3       		.byte	0xf3
 6026 0237 01       		.uleb128 0x1
 6027 0238 50       		.byte	0x50
 6028 0239 9F       		.byte	0x9f
 6029 023a 18000000 		.4byte	.LVL48
 6030 023e 36000000 		.4byte	.LVL50
 6031 0242 0100     		.2byte	0x1
 6032 0244 50       		.byte	0x50
 6033 0245 36000000 		.4byte	.LVL50
 6034 0249 6C000000 		.4byte	.LVL56
 6035 024d 0400     		.2byte	0x4
 6036 024f F3       		.byte	0xf3
 6037 0250 01       		.uleb128 0x1
 6038 0251 50       		.byte	0x50
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 182


 6039 0252 9F       		.byte	0x9f
 6040 0253 6C000000 		.4byte	.LVL56
 6041 0257 78000000 		.4byte	.LVL57
 6042 025b 0100     		.2byte	0x1
 6043 025d 50       		.byte	0x50
 6044 025e 78000000 		.4byte	.LVL57
 6045 0262 88000000 		.4byte	.LVL59
 6046 0266 0400     		.2byte	0x4
 6047 0268 F3       		.byte	0xf3
 6048 0269 01       		.uleb128 0x1
 6049 026a 50       		.byte	0x50
 6050 026b 9F       		.byte	0x9f
 6051 026c 88000000 		.4byte	.LVL59
 6052 0270 8C000000 		.4byte	.LVL60
 6053 0274 0100     		.2byte	0x1
 6054 0276 50       		.byte	0x50
 6055 0277 8C000000 		.4byte	.LVL60
 6056 027b BC000000 		.4byte	.LFE7
 6057 027f 0400     		.2byte	0x4
 6058 0281 F3       		.byte	0xf3
 6059 0282 01       		.uleb128 0x1
 6060 0283 50       		.byte	0x50
 6061 0284 9F       		.byte	0x9f
 6062 0285 00000000 		.4byte	0
 6063 0289 00000000 		.4byte	0
 6064              	.LLST14:
 6065 028d 00000000 		.4byte	.LVL44
 6066 0291 14000000 		.4byte	.LVL47
 6067 0295 0100     		.2byte	0x1
 6068 0297 51       		.byte	0x51
 6069 0298 14000000 		.4byte	.LVL47
 6070 029c 18000000 		.4byte	.LVL48
 6071 02a0 0100     		.2byte	0x1
 6072 02a2 57       		.byte	0x57
 6073 02a3 18000000 		.4byte	.LVL48
 6074 02a7 36000000 		.4byte	.LVL50
 6075 02ab 0100     		.2byte	0x1
 6076 02ad 51       		.byte	0x51
 6077 02ae 36000000 		.4byte	.LVL50
 6078 02b2 6C000000 		.4byte	.LVL56
 6079 02b6 0100     		.2byte	0x1
 6080 02b8 57       		.byte	0x57
 6081 02b9 6C000000 		.4byte	.LVL56
 6082 02bd 81000000 		.4byte	.LVL58-1
 6083 02c1 0100     		.2byte	0x1
 6084 02c3 51       		.byte	0x51
 6085 02c4 81000000 		.4byte	.LVL58-1
 6086 02c8 88000000 		.4byte	.LVL59
 6087 02cc 0100     		.2byte	0x1
 6088 02ce 57       		.byte	0x57
 6089 02cf 88000000 		.4byte	.LVL59
 6090 02d3 98000000 		.4byte	.LVL62
 6091 02d7 0100     		.2byte	0x1
 6092 02d9 51       		.byte	0x51
 6093 02da 98000000 		.4byte	.LVL62
 6094 02de 9E000000 		.4byte	.LVL64
 6095 02e2 0100     		.2byte	0x1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 183


 6096 02e4 57       		.byte	0x57
 6097 02e5 9E000000 		.4byte	.LVL64
 6098 02e9 BC000000 		.4byte	.LFE7
 6099 02ed 0400     		.2byte	0x4
 6100 02ef F3       		.byte	0xf3
 6101 02f0 01       		.uleb128 0x1
 6102 02f1 51       		.byte	0x51
 6103 02f2 9F       		.byte	0x9f
 6104 02f3 00000000 		.4byte	0
 6105 02f7 00000000 		.4byte	0
 6106              	.LLST15:
 6107 02fb 00000000 		.4byte	.LVL44
 6108 02ff 14000000 		.4byte	.LVL47
 6109 0303 0200     		.2byte	0x2
 6110 0305 35       		.byte	0x35
 6111 0306 9F       		.byte	0x9f
 6112 0307 18000000 		.4byte	.LVL48
 6113 030b 36000000 		.4byte	.LVL50
 6114 030f 0200     		.2byte	0x2
 6115 0311 35       		.byte	0x35
 6116 0312 9F       		.byte	0x9f
 6117 0313 36000000 		.4byte	.LVL50
 6118 0317 6C000000 		.4byte	.LVL56
 6119 031b 0100     		.2byte	0x1
 6120 031d 54       		.byte	0x54
 6121 031e 6C000000 		.4byte	.LVL56
 6122 0322 98000000 		.4byte	.LVL62
 6123 0326 0200     		.2byte	0x2
 6124 0328 35       		.byte	0x35
 6125 0329 9F       		.byte	0x9f
 6126 032a 98000000 		.4byte	.LVL62
 6127 032e 9E000000 		.4byte	.LVL63
 6128 0332 0100     		.2byte	0x1
 6129 0334 54       		.byte	0x54
 6130 0335 00000000 		.4byte	0
 6131 0339 00000000 		.4byte	0
 6132              	.LLST16:
 6133 033d 36000000 		.4byte	.LVL50
 6134 0341 48000000 		.4byte	.LVL51
 6135 0345 0200     		.2byte	0x2
 6136 0347 91       		.byte	0x91
 6137 0348 64       		.sleb128 -28
 6138 0349 48000000 		.4byte	.LVL51
 6139 034d 4C000000 		.4byte	.LVL52
 6140 0351 0100     		.2byte	0x1
 6141 0353 53       		.byte	0x53
 6142 0354 4C000000 		.4byte	.LVL52
 6143 0358 6C000000 		.4byte	.LVL56
 6144 035c 0200     		.2byte	0x2
 6145 035e 91       		.byte	0x91
 6146 035f 64       		.sleb128 -28
 6147 0360 98000000 		.4byte	.LVL62
 6148 0364 9E000000 		.4byte	.LVL63
 6149 0368 0200     		.2byte	0x2
 6150 036a 91       		.byte	0x91
 6151 036b 64       		.sleb128 -28
 6152 036c 00000000 		.4byte	0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 184


 6153 0370 00000000 		.4byte	0
 6154              	.LLST17:
 6155 0374 06000000 		.4byte	.LVL45
 6156 0378 0C000000 		.4byte	.LVL46
 6157 037c 0700     		.2byte	0x7
 6158 037e 72       		.byte	0x72
 6159 037f 00       		.sleb128 0
 6160 0380 0A       		.byte	0xa
 6161 0381 3F3F     		.2byte	0x3f3f
 6162 0383 1A       		.byte	0x1a
 6163 0384 9F       		.byte	0x9f
 6164 0385 0C000000 		.4byte	.LVL46
 6165 0389 14000000 		.4byte	.LVL47
 6166 038d 0100     		.2byte	0x1
 6167 038f 53       		.byte	0x53
 6168 0390 18000000 		.4byte	.LVL48
 6169 0394 1A000000 		.4byte	.LVL49
 6170 0398 0100     		.2byte	0x1
 6171 039a 53       		.byte	0x53
 6172 039b 00000000 		.4byte	0
 6173 039f 00000000 		.4byte	0
 6174              	.LLST18:
 6175 03a3 6A000000 		.4byte	.LVL55
 6176 03a7 6C000000 		.4byte	.LVL56
 6177 03ab 0200     		.2byte	0x2
 6178 03ad 40       		.byte	0x40
 6179 03ae 9F       		.byte	0x9f
 6180 03af 82000000 		.4byte	.LVL58
 6181 03b3 88000000 		.4byte	.LVL59
 6182 03b7 0100     		.2byte	0x1
 6183 03b9 50       		.byte	0x50
 6184 03ba 96000000 		.4byte	.LVL61
 6185 03be 98000000 		.4byte	.LVL62
 6186 03c2 0200     		.2byte	0x2
 6187 03c4 37       		.byte	0x37
 6188 03c5 9F       		.byte	0x9f
 6189 03c6 00000000 		.4byte	0
 6190 03ca 00000000 		.4byte	0
 6191              	.LLST19:
 6192 03ce 00000000 		.4byte	.LVL65
 6193 03d2 20000000 		.4byte	.LVL66
 6194 03d6 0200     		.2byte	0x2
 6195 03d8 30       		.byte	0x30
 6196 03d9 9F       		.byte	0x9f
 6197 03da 20000000 		.4byte	.LVL66
 6198 03de 2C000000 		.4byte	.LFE9
 6199 03e2 0100     		.2byte	0x1
 6200 03e4 50       		.byte	0x50
 6201 03e5 00000000 		.4byte	0
 6202 03e9 00000000 		.4byte	0
 6203              	.LLST20:
 6204 03ed 00000000 		.4byte	.LVL68
 6205 03f1 11000000 		.4byte	.LVL70-1
 6206 03f5 0100     		.2byte	0x1
 6207 03f7 50       		.byte	0x50
 6208 03f8 11000000 		.4byte	.LVL70-1
 6209 03fc 1C000000 		.4byte	.LFE15
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 185


 6210 0400 0400     		.2byte	0x4
 6211 0402 F3       		.byte	0xf3
 6212 0403 01       		.uleb128 0x1
 6213 0404 50       		.byte	0x50
 6214 0405 9F       		.byte	0x9f
 6215 0406 00000000 		.4byte	0
 6216 040a 00000000 		.4byte	0
 6217              	.LLST21:
 6218 040e 0A000000 		.4byte	.LVL69
 6219 0412 14000000 		.4byte	.LVL71
 6220 0416 0100     		.2byte	0x1
 6221 0418 54       		.byte	0x54
 6222 0419 14000000 		.4byte	.LVL71
 6223 041d 1C000000 		.4byte	.LFE15
 6224 0421 0100     		.2byte	0x1
 6225 0423 50       		.byte	0x50
 6226 0424 00000000 		.4byte	0
 6227 0428 00000000 		.4byte	0
 6228              	.LLST22:
 6229 042c 00000000 		.4byte	.LVL72
 6230 0430 07000000 		.4byte	.LVL73-1
 6231 0434 0100     		.2byte	0x1
 6232 0436 50       		.byte	0x50
 6233 0437 07000000 		.4byte	.LVL73-1
 6234 043b 16000000 		.4byte	.LVL74
 6235 043f 0100     		.2byte	0x1
 6236 0441 54       		.byte	0x54
 6237 0442 16000000 		.4byte	.LVL74
 6238 0446 24000000 		.4byte	.LFE16
 6239 044a 0400     		.2byte	0x4
 6240 044c F3       		.byte	0xf3
 6241 044d 01       		.uleb128 0x1
 6242 044e 50       		.byte	0x50
 6243 044f 9F       		.byte	0x9f
 6244 0450 00000000 		.4byte	0
 6245 0454 00000000 		.4byte	0
 6246              	.LLST23:
 6247 0458 06000000 		.4byte	.LVL75
 6248 045c 15000000 		.4byte	.LVL76-1
 6249 0460 0100     		.2byte	0x1
 6250 0462 50       		.byte	0x50
 6251 0463 00000000 		.4byte	0
 6252 0467 00000000 		.4byte	0
 6253              	.LLST24:
 6254 046b 08000000 		.4byte	.LVL77
 6255 046f 25000000 		.4byte	.LVL78-1
 6256 0473 0100     		.2byte	0x1
 6257 0475 50       		.byte	0x50
 6258 0476 00000000 		.4byte	0
 6259 047a 00000000 		.4byte	0
 6260              	.LLST25:
 6261 047e 00000000 		.4byte	.LVL79
 6262 0482 08000000 		.4byte	.LVL80
 6263 0486 0100     		.2byte	0x1
 6264 0488 50       		.byte	0x50
 6265 0489 08000000 		.4byte	.LVL80
 6266 048d 18000000 		.4byte	.LFE20
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 186


 6267 0491 0400     		.2byte	0x4
 6268 0493 F3       		.byte	0xf3
 6269 0494 01       		.uleb128 0x1
 6270 0495 50       		.byte	0x50
 6271 0496 9F       		.byte	0x9f
 6272 0497 00000000 		.4byte	0
 6273 049b 00000000 		.4byte	0
 6274              	.LLST26:
 6275 049f 00000000 		.4byte	.LVL81
 6276 04a3 09000000 		.4byte	.LVL82-1
 6277 04a7 0100     		.2byte	0x1
 6278 04a9 50       		.byte	0x50
 6279 04aa 09000000 		.4byte	.LVL82-1
 6280 04ae 14000000 		.4byte	.LVL84
 6281 04b2 0100     		.2byte	0x1
 6282 04b4 55       		.byte	0x55
 6283 04b5 14000000 		.4byte	.LVL84
 6284 04b9 2C000000 		.4byte	.LFE21
 6285 04bd 0400     		.2byte	0x4
 6286 04bf F3       		.byte	0xf3
 6287 04c0 01       		.uleb128 0x1
 6288 04c1 50       		.byte	0x50
 6289 04c2 9F       		.byte	0x9f
 6290 04c3 00000000 		.4byte	0
 6291 04c7 00000000 		.4byte	0
 6292              	.LLST27:
 6293 04cb 00000000 		.4byte	.LVL81
 6294 04cf 09000000 		.4byte	.LVL82-1
 6295 04d3 0100     		.2byte	0x1
 6296 04d5 51       		.byte	0x51
 6297 04d6 09000000 		.4byte	.LVL82-1
 6298 04da 24000000 		.4byte	.LVL88
 6299 04de 0100     		.2byte	0x1
 6300 04e0 54       		.byte	0x54
 6301 04e1 24000000 		.4byte	.LVL88
 6302 04e5 2C000000 		.4byte	.LFE21
 6303 04e9 0400     		.2byte	0x4
 6304 04eb F3       		.byte	0xf3
 6305 04ec 01       		.uleb128 0x1
 6306 04ed 51       		.byte	0x51
 6307 04ee 9F       		.byte	0x9f
 6308 04ef 00000000 		.4byte	0
 6309 04f3 00000000 		.4byte	0
 6310              	.LLST28:
 6311 04f7 0E000000 		.4byte	.LVL83
 6312 04fb 24000000 		.4byte	.LVL87
 6313 04ff 0100     		.2byte	0x1
 6314 0501 54       		.byte	0x54
 6315 0502 00000000 		.4byte	0
 6316 0506 00000000 		.4byte	0
 6317              	.LLST29:
 6318 050a 0E000000 		.4byte	.LVL83
 6319 050e 14000000 		.4byte	.LVL84
 6320 0512 0100     		.2byte	0x1
 6321 0514 55       		.byte	0x55
 6322 0515 14000000 		.4byte	.LVL84
 6323 0519 24000000 		.4byte	.LVL87
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 187


 6324 051d 0400     		.2byte	0x4
 6325 051f F3       		.byte	0xf3
 6326 0520 01       		.uleb128 0x1
 6327 0521 50       		.byte	0x50
 6328 0522 9F       		.byte	0x9f
 6329 0523 00000000 		.4byte	0
 6330 0527 00000000 		.4byte	0
 6331              	.LLST30:
 6332 052b 20000000 		.4byte	.LVL85
 6333 052f 22000000 		.4byte	.LVL86
 6334 0533 0100     		.2byte	0x1
 6335 0535 53       		.byte	0x53
 6336 0536 22000000 		.4byte	.LVL86
 6337 053a 24000000 		.4byte	.LVL87
 6338 053e 0100     		.2byte	0x1
 6339 0540 51       		.byte	0x51
 6340 0541 00000000 		.4byte	0
 6341 0545 00000000 		.4byte	0
 6342              	.LLST31:
 6343 0549 00000000 		.4byte	.LVL90
 6344 054d 08000000 		.4byte	.LVL91
 6345 0551 0100     		.2byte	0x1
 6346 0553 50       		.byte	0x50
 6347 0554 08000000 		.4byte	.LVL91
 6348 0558 14000000 		.4byte	.LFE22
 6349 055c 0400     		.2byte	0x4
 6350 055e F3       		.byte	0xf3
 6351 055f 01       		.uleb128 0x1
 6352 0560 50       		.byte	0x50
 6353 0561 9F       		.byte	0x9f
 6354 0562 00000000 		.4byte	0
 6355 0566 00000000 		.4byte	0
 6356              	.LLST32:
 6357 056a 00000000 		.4byte	.LVL92
 6358 056e 09000000 		.4byte	.LVL93-1
 6359 0572 0100     		.2byte	0x1
 6360 0574 50       		.byte	0x50
 6361 0575 09000000 		.4byte	.LVL93-1
 6362 0579 12000000 		.4byte	.LVL94
 6363 057d 0100     		.2byte	0x1
 6364 057f 54       		.byte	0x54
 6365 0580 12000000 		.4byte	.LVL94
 6366 0584 2C000000 		.4byte	.LFE23
 6367 0588 0400     		.2byte	0x4
 6368 058a F3       		.byte	0xf3
 6369 058b 01       		.uleb128 0x1
 6370 058c 50       		.byte	0x50
 6371 058d 9F       		.byte	0x9f
 6372 058e 00000000 		.4byte	0
 6373 0592 00000000 		.4byte	0
 6374              	.LLST33:
 6375 0596 00000000 		.4byte	.LVL92
 6376 059a 09000000 		.4byte	.LVL93-1
 6377 059e 0100     		.2byte	0x1
 6378 05a0 51       		.byte	0x51
 6379 05a1 09000000 		.4byte	.LVL93-1
 6380 05a5 26000000 		.4byte	.LVL99
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 188


 6381 05a9 0100     		.2byte	0x1
 6382 05ab 55       		.byte	0x55
 6383 05ac 26000000 		.4byte	.LVL99
 6384 05b0 2C000000 		.4byte	.LFE23
 6385 05b4 0400     		.2byte	0x4
 6386 05b6 F3       		.byte	0xf3
 6387 05b7 01       		.uleb128 0x1
 6388 05b8 51       		.byte	0x51
 6389 05b9 9F       		.byte	0x9f
 6390 05ba 00000000 		.4byte	0
 6391 05be 00000000 		.4byte	0
 6392              	.LLST34:
 6393 05c2 1E000000 		.4byte	.LVL95
 6394 05c6 20000000 		.4byte	.LVL96
 6395 05ca 0100     		.2byte	0x1
 6396 05cc 51       		.byte	0x51
 6397 05cd 20000000 		.4byte	.LVL96
 6398 05d1 24000000 		.4byte	.LVL97
 6399 05d5 0100     		.2byte	0x1
 6400 05d7 53       		.byte	0x53
 6401 05d8 24000000 		.4byte	.LVL97
 6402 05dc 26000000 		.4byte	.LVL98
 6403 05e0 0100     		.2byte	0x1
 6404 05e2 51       		.byte	0x51
 6405 05e3 00000000 		.4byte	0
 6406 05e7 00000000 		.4byte	0
 6407              	.LLST35:
 6408 05eb 00000000 		.4byte	.LVL100
 6409 05ef 08000000 		.4byte	.LVL101
 6410 05f3 0100     		.2byte	0x1
 6411 05f5 50       		.byte	0x50
 6412 05f6 08000000 		.4byte	.LVL101
 6413 05fa 18000000 		.4byte	.LFE24
 6414 05fe 0400     		.2byte	0x4
 6415 0600 F3       		.byte	0xf3
 6416 0601 01       		.uleb128 0x1
 6417 0602 50       		.byte	0x50
 6418 0603 9F       		.byte	0x9f
 6419 0604 00000000 		.4byte	0
 6420 0608 00000000 		.4byte	0
 6421              	.LLST36:
 6422 060c 0E000000 		.4byte	.LVL103
 6423 0610 10000000 		.4byte	.LVL104
 6424 0614 0200     		.2byte	0x2
 6425 0616 30       		.byte	0x30
 6426 0617 9F       		.byte	0x9f
 6427 0618 00000000 		.4byte	0
 6428 061c 00000000 		.4byte	0
 6429              	.LLST37:
 6430 0620 1C000000 		.4byte	.LVL105
 6431 0624 1E000000 		.4byte	.LVL106
 6432 0628 0200     		.2byte	0x2
 6433 062a 31       		.byte	0x31
 6434 062b 9F       		.byte	0x9f
 6435 062c 00000000 		.4byte	0
 6436 0630 00000000 		.4byte	0
 6437              	.LLST38:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 189


 6438 0634 2A000000 		.4byte	.LVL107
 6439 0638 2C000000 		.4byte	.LVL108
 6440 063c 0200     		.2byte	0x2
 6441 063e 32       		.byte	0x32
 6442 063f 9F       		.byte	0x9f
 6443 0640 00000000 		.4byte	0
 6444 0644 00000000 		.4byte	0
 6445              	.LLST39:
 6446 0648 1A000000 		.4byte	.LVL110
 6447 064c 1C000000 		.4byte	.LVL111
 6448 0650 0200     		.2byte	0x2
 6449 0652 30       		.byte	0x30
 6450 0653 9F       		.byte	0x9f
 6451 0654 00000000 		.4byte	0
 6452 0658 00000000 		.4byte	0
 6453              	.LLST40:
 6454 065c 28000000 		.4byte	.LVL112
 6455 0660 2A000000 		.4byte	.LVL113
 6456 0664 0200     		.2byte	0x2
 6457 0666 31       		.byte	0x31
 6458 0667 9F       		.byte	0x9f
 6459 0668 00000000 		.4byte	0
 6460 066c 00000000 		.4byte	0
 6461              	.LLST41:
 6462 0670 36000000 		.4byte	.LVL114
 6463 0674 38000000 		.4byte	.LVL115
 6464 0678 0200     		.2byte	0x2
 6465 067a 32       		.byte	0x32
 6466 067b 9F       		.byte	0x9f
 6467 067c 00000000 		.4byte	0
 6468 0680 00000000 		.4byte	0
 6469              	.LLST42:
 6470 0684 00000000 		.4byte	.LVL116
 6471 0688 22000000 		.4byte	.LVL123
 6472 068c 0100     		.2byte	0x1
 6473 068e 50       		.byte	0x50
 6474 068f 22000000 		.4byte	.LVL123
 6475 0693 34000000 		.4byte	.LFE27
 6476 0697 0400     		.2byte	0x4
 6477 0699 F3       		.byte	0xf3
 6478 069a 01       		.uleb128 0x1
 6479 069b 50       		.byte	0x50
 6480 069c 9F       		.byte	0x9f
 6481 069d 00000000 		.4byte	0
 6482 06a1 00000000 		.4byte	0
 6483              	.LLST43:
 6484 06a5 1E000000 		.4byte	.LVL121
 6485 06a9 20000000 		.4byte	.LVL122
 6486 06ad 0100     		.2byte	0x1
 6487 06af 51       		.byte	0x51
 6488 06b0 20000000 		.4byte	.LVL122
 6489 06b4 22000000 		.4byte	.LVL123
 6490 06b8 0100     		.2byte	0x1
 6491 06ba 53       		.byte	0x53
 6492 06bb 22000000 		.4byte	.LVL123
 6493 06bf 24000000 		.4byte	.LVL124
 6494 06c3 0100     		.2byte	0x1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 190


 6495 06c5 50       		.byte	0x50
 6496 06c6 00000000 		.4byte	0
 6497 06ca 00000000 		.4byte	0
 6498              	.LLST44:
 6499 06ce 0A000000 		.4byte	.LVL119
 6500 06d2 0E000000 		.4byte	.LVL120
 6501 06d6 1100     		.2byte	0x11
 6502 06d8 73       		.byte	0x73
 6503 06d9 00       		.sleb128 0
 6504 06da 39       		.byte	0x39
 6505 06db 25       		.byte	0x25
 6506 06dc 71       		.byte	0x71
 6507 06dd 00       		.sleb128 0
 6508 06de 31       		.byte	0x31
 6509 06df 25       		.byte	0x25
 6510 06e0 21       		.byte	0x21
 6511 06e1 72       		.byte	0x72
 6512 06e2 00       		.sleb128 0
 6513 06e3 41       		.byte	0x41
 6514 06e4 25       		.byte	0x25
 6515 06e5 21       		.byte	0x21
 6516 06e6 31       		.byte	0x31
 6517 06e7 1A       		.byte	0x1a
 6518 06e8 9F       		.byte	0x9f
 6519 06e9 00000000 		.4byte	0
 6520 06ed 00000000 		.4byte	0
 6521              	.LLST45:
 6522 06f1 00000000 		.4byte	.LVL116
 6523 06f5 06000000 		.4byte	.LVL117
 6524 06f9 0200     		.2byte	0x2
 6525 06fb 30       		.byte	0x30
 6526 06fc 9F       		.byte	0x9f
 6527 06fd 00000000 		.4byte	0
 6528 0701 00000000 		.4byte	0
 6529              	.LLST46:
 6530 0705 06000000 		.4byte	.LVL117
 6531 0709 08000000 		.4byte	.LVL118
 6532 070d 0200     		.2byte	0x2
 6533 070f 31       		.byte	0x31
 6534 0710 9F       		.byte	0x9f
 6535 0711 00000000 		.4byte	0
 6536 0715 00000000 		.4byte	0
 6537              	.LLST47:
 6538 0719 08000000 		.4byte	.LVL118
 6539 071d 0A000000 		.4byte	.LVL119
 6540 0721 0200     		.2byte	0x2
 6541 0723 32       		.byte	0x32
 6542 0724 9F       		.byte	0x9f
 6543 0725 00000000 		.4byte	0
 6544 0729 00000000 		.4byte	0
 6545              	.LLST48:
 6546 072d 00000000 		.4byte	.LVL125
 6547 0731 0E000000 		.4byte	.LVL126
 6548 0735 0100     		.2byte	0x1
 6549 0737 50       		.byte	0x50
 6550 0738 0E000000 		.4byte	.LVL126
 6551 073c 38000000 		.4byte	.LVL131
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 191


 6552 0740 0100     		.2byte	0x1
 6553 0742 56       		.byte	0x56
 6554 0743 38000000 		.4byte	.LVL131
 6555 0747 48000000 		.4byte	.LFE29
 6556 074b 0400     		.2byte	0x4
 6557 074d F3       		.byte	0xf3
 6558 074e 01       		.uleb128 0x1
 6559 074f 50       		.byte	0x50
 6560 0750 9F       		.byte	0x9f
 6561 0751 00000000 		.4byte	0
 6562 0755 00000000 		.4byte	0
 6563              	.LLST49:
 6564 0759 00000000 		.4byte	.LVL125
 6565 075d 17000000 		.4byte	.LVL127-1
 6566 0761 0100     		.2byte	0x1
 6567 0763 51       		.byte	0x51
 6568 0764 17000000 		.4byte	.LVL127-1
 6569 0768 20000000 		.4byte	.LVL128
 6570 076c 0100     		.2byte	0x1
 6571 076e 54       		.byte	0x54
 6572 076f 20000000 		.4byte	.LVL128
 6573 0773 48000000 		.4byte	.LFE29
 6574 0777 0400     		.2byte	0x4
 6575 0779 F3       		.byte	0xf3
 6576 077a 01       		.uleb128 0x1
 6577 077b 51       		.byte	0x51
 6578 077c 9F       		.byte	0x9f
 6579 077d 00000000 		.4byte	0
 6580 0781 00000000 		.4byte	0
 6581              	.LLST50:
 6582 0785 00000000 		.4byte	.LVL132
 6583 0789 10000000 		.4byte	.LVL135
 6584 078d 0100     		.2byte	0x1
 6585 078f 50       		.byte	0x50
 6586 0790 10000000 		.4byte	.LVL135
 6587 0794 2C000000 		.4byte	.LFE30
 6588 0798 0400     		.2byte	0x4
 6589 079a F3       		.byte	0xf3
 6590 079b 01       		.uleb128 0x1
 6591 079c 50       		.byte	0x50
 6592 079d 9F       		.byte	0x9f
 6593 079e 00000000 		.4byte	0
 6594 07a2 00000000 		.4byte	0
 6595              	.LLST51:
 6596 07a6 0E000000 		.4byte	.LVL134
 6597 07aa 12000000 		.4byte	.LVL136
 6598 07ae 0100     		.2byte	0x1
 6599 07b0 52       		.byte	0x52
 6600 07b1 12000000 		.4byte	.LVL136
 6601 07b5 1A000000 		.4byte	.LVL137
 6602 07b9 0100     		.2byte	0x1
 6603 07bb 53       		.byte	0x53
 6604 07bc 1A000000 		.4byte	.LVL137
 6605 07c0 1C000000 		.4byte	.LVL138
 6606 07c4 0100     		.2byte	0x1
 6607 07c6 50       		.byte	0x50
 6608 07c7 00000000 		.4byte	0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 192


 6609 07cb 00000000 		.4byte	0
 6610              	.LLST52:
 6611 07cf 00000000 		.4byte	.LVL132
 6612 07d3 04000000 		.4byte	.LVL133
 6613 07d7 0200     		.2byte	0x2
 6614 07d9 32       		.byte	0x32
 6615 07da 9F       		.byte	0x9f
 6616 07db 00000000 		.4byte	0
 6617 07df 00000000 		.4byte	0
 6618              	.LLST53:
 6619 07e3 00000000 		.4byte	.LVL139
 6620 07e7 08000000 		.4byte	.LVL140
 6621 07eb 0100     		.2byte	0x1
 6622 07ed 50       		.byte	0x50
 6623 07ee 08000000 		.4byte	.LVL140
 6624 07f2 14000000 		.4byte	.LFE32
 6625 07f6 0400     		.2byte	0x4
 6626 07f8 F3       		.byte	0xf3
 6627 07f9 01       		.uleb128 0x1
 6628 07fa 50       		.byte	0x50
 6629 07fb 9F       		.byte	0x9f
 6630 07fc 00000000 		.4byte	0
 6631 0800 00000000 		.4byte	0
 6632              	.LLST54:
 6633 0804 00000000 		.4byte	.LVL141
 6634 0808 10000000 		.4byte	.LVL142
 6635 080c 0100     		.2byte	0x1
 6636 080e 50       		.byte	0x50
 6637 080f 10000000 		.4byte	.LVL142
 6638 0813 12000000 		.4byte	.LVL143
 6639 0817 0400     		.2byte	0x4
 6640 0819 F3       		.byte	0xf3
 6641 081a 01       		.uleb128 0x1
 6642 081b 50       		.byte	0x50
 6643 081c 9F       		.byte	0x9f
 6644 081d 12000000 		.4byte	.LVL143
 6645 0821 16000000 		.4byte	.LVL144
 6646 0825 0100     		.2byte	0x1
 6647 0827 50       		.byte	0x50
 6648 0828 16000000 		.4byte	.LVL144
 6649 082c 1A000000 		.4byte	.LVL146
 6650 0830 0400     		.2byte	0x4
 6651 0832 F3       		.byte	0xf3
 6652 0833 01       		.uleb128 0x1
 6653 0834 50       		.byte	0x50
 6654 0835 9F       		.byte	0x9f
 6655 0836 1A000000 		.4byte	.LVL146
 6656 083a 1E000000 		.4byte	.LVL147
 6657 083e 0100     		.2byte	0x1
 6658 0840 50       		.byte	0x50
 6659 0841 1E000000 		.4byte	.LVL147
 6660 0845 22000000 		.4byte	.LVL149
 6661 0849 0400     		.2byte	0x4
 6662 084b F3       		.byte	0xf3
 6663 084c 01       		.uleb128 0x1
 6664 084d 50       		.byte	0x50
 6665 084e 9F       		.byte	0x9f
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 193


 6666 084f 22000000 		.4byte	.LVL149
 6667 0853 24000000 		.4byte	.LVL150
 6668 0857 0100     		.2byte	0x1
 6669 0859 50       		.byte	0x50
 6670 085a 24000000 		.4byte	.LVL150
 6671 085e 30000000 		.4byte	.LFE33
 6672 0862 0400     		.2byte	0x4
 6673 0864 F3       		.byte	0xf3
 6674 0865 01       		.uleb128 0x1
 6675 0866 50       		.byte	0x50
 6676 0867 9F       		.byte	0x9f
 6677 0868 00000000 		.4byte	0
 6678 086c 00000000 		.4byte	0
 6679              	.LLST55:
 6680 0870 00000000 		.4byte	.LVL141
 6681 0874 10000000 		.4byte	.LVL142
 6682 0878 0200     		.2byte	0x2
 6683 087a 30       		.byte	0x30
 6684 087b 9F       		.byte	0x9f
 6685 087c 10000000 		.4byte	.LVL142
 6686 0880 12000000 		.4byte	.LVL143
 6687 0884 0100     		.2byte	0x1
 6688 0886 50       		.byte	0x50
 6689 0887 12000000 		.4byte	.LVL143
 6690 088b 18000000 		.4byte	.LVL145
 6691 088f 0200     		.2byte	0x2
 6692 0891 30       		.byte	0x30
 6693 0892 9F       		.byte	0x9f
 6694 0893 18000000 		.4byte	.LVL145
 6695 0897 1A000000 		.4byte	.LVL146
 6696 089b 0100     		.2byte	0x1
 6697 089d 50       		.byte	0x50
 6698 089e 1A000000 		.4byte	.LVL146
 6699 08a2 20000000 		.4byte	.LVL148
 6700 08a6 0200     		.2byte	0x2
 6701 08a8 30       		.byte	0x30
 6702 08a9 9F       		.byte	0x9f
 6703 08aa 20000000 		.4byte	.LVL148
 6704 08ae 22000000 		.4byte	.LVL149
 6705 08b2 0100     		.2byte	0x1
 6706 08b4 50       		.byte	0x50
 6707 08b5 22000000 		.4byte	.LVL149
 6708 08b9 24000000 		.4byte	.LVL150
 6709 08bd 0200     		.2byte	0x2
 6710 08bf 30       		.byte	0x30
 6711 08c0 9F       		.byte	0x9f
 6712 08c1 24000000 		.4byte	.LVL150
 6713 08c5 30000000 		.4byte	.LFE33
 6714 08c9 0100     		.2byte	0x1
 6715 08cb 50       		.byte	0x50
 6716 08cc 00000000 		.4byte	0
 6717 08d0 00000000 		.4byte	0
 6718              	.LLST56:
 6719 08d4 50000000 		.4byte	.LVL162
 6720 08d8 5A000000 		.4byte	.LVL164
 6721 08dc 0100     		.2byte	0x1
 6722 08de 55       		.byte	0x55
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 194


 6723 08df 00000000 		.4byte	0
 6724 08e3 00000000 		.4byte	0
 6725              	.LLST57:
 6726 08e7 00000000 		.4byte	.LVL151
 6727 08eb 06000000 		.4byte	.LVL152
 6728 08ef 0200     		.2byte	0x2
 6729 08f1 30       		.byte	0x30
 6730 08f2 9F       		.byte	0x9f
 6731 08f3 00000000 		.4byte	0
 6732 08f7 00000000 		.4byte	0
 6733              	.LLST58:
 6734 08fb 12000000 		.4byte	.LVL153
 6735 08ff 14000000 		.4byte	.LVL154
 6736 0903 0200     		.2byte	0x2
 6737 0905 31       		.byte	0x31
 6738 0906 9F       		.byte	0x9f
 6739 0907 00000000 		.4byte	0
 6740 090b 00000000 		.4byte	0
 6741              	.LLST59:
 6742 090f 1E000000 		.4byte	.LVL155
 6743 0913 20000000 		.4byte	.LVL156
 6744 0917 0200     		.2byte	0x2
 6745 0919 32       		.byte	0x32
 6746 091a 9F       		.byte	0x9f
 6747 091b 00000000 		.4byte	0
 6748 091f 00000000 		.4byte	0
 6749              	.LLST60:
 6750 0923 30000000 		.4byte	.LVL157
 6751 0927 34000000 		.4byte	.LVL158
 6752 092b 0200     		.2byte	0x2
 6753 092d 30       		.byte	0x30
 6754 092e 9F       		.byte	0x9f
 6755 092f 00000000 		.4byte	0
 6756 0933 00000000 		.4byte	0
 6757              	.LLST61:
 6758 0937 24000000 		.4byte	.LVL166
 6759 093b 3C000000 		.4byte	.LVL170
 6760 093f 0100     		.2byte	0x1
 6761 0941 55       		.byte	0x55
 6762 0942 00000000 		.4byte	0
 6763 0946 00000000 		.4byte	0
 6764              	.LLST62:
 6765 094a 00000000 		.4byte	.LVL171
 6766 094e 13000000 		.4byte	.LVL172-1
 6767 0952 0100     		.2byte	0x1
 6768 0954 50       		.byte	0x50
 6769 0955 13000000 		.4byte	.LVL172-1
 6770 0959 1E000000 		.4byte	.LVL175
 6771 095d 0100     		.2byte	0x1
 6772 095f 54       		.byte	0x54
 6773 0960 1E000000 		.4byte	.LVL175
 6774 0964 38000000 		.4byte	.LFE11
 6775 0968 0400     		.2byte	0x4
 6776 096a F3       		.byte	0xf3
 6777 096b 01       		.uleb128 0x1
 6778 096c 50       		.byte	0x50
 6779 096d 9F       		.byte	0x9f
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 195


 6780 096e 00000000 		.4byte	0
 6781 0972 00000000 		.4byte	0
 6782              	.LLST63:
 6783 0976 16000000 		.4byte	.LVL173
 6784 097a 32000000 		.4byte	.LVL177
 6785 097e 0100     		.2byte	0x1
 6786 0980 56       		.byte	0x56
 6787 0981 00000000 		.4byte	0
 6788 0985 00000000 		.4byte	0
 6789              	.LLST64:
 6790 0989 1C000000 		.4byte	.LVL180
 6791 098d 34000000 		.4byte	.LVL184
 6792 0991 0100     		.2byte	0x1
 6793 0993 55       		.byte	0x55
 6794 0994 00000000 		.4byte	0
 6795 0998 00000000 		.4byte	0
 6796              	.LLST65:
 6797 099c 00000000 		.4byte	.LVL185
 6798 09a0 07000000 		.4byte	.LVL186-1
 6799 09a4 0100     		.2byte	0x1
 6800 09a6 50       		.byte	0x50
 6801 09a7 07000000 		.4byte	.LVL186-1
 6802 09ab 16000000 		.4byte	.LVL188
 6803 09af 0100     		.2byte	0x1
 6804 09b1 55       		.byte	0x55
 6805 09b2 16000000 		.4byte	.LVL188
 6806 09b6 1C000000 		.4byte	.LVL189
 6807 09ba 0900     		.2byte	0x9
 6808 09bc 75       		.byte	0x75
 6809 09bd 00       		.sleb128 0
 6810 09be 0C       		.byte	0xc
 6811 09bf 04040400 		.4byte	0x40404
 6812 09c3 1A       		.byte	0x1a
 6813 09c4 9F       		.byte	0x9f
 6814 09c5 1C000000 		.4byte	.LVL189
 6815 09c9 2E000000 		.4byte	.LVL190
 6816 09cd 0100     		.2byte	0x1
 6817 09cf 55       		.byte	0x55
 6818 09d0 3A000000 		.4byte	.LVL194
 6819 09d4 54000000 		.4byte	.LFE35
 6820 09d8 0100     		.2byte	0x1
 6821 09da 55       		.byte	0x55
 6822 09db 00000000 		.4byte	0
 6823 09df 00000000 		.4byte	0
 6824              	.LLST66:
 6825 09e3 0C000000 		.4byte	.LVL187
 6826 09e7 38000000 		.4byte	.LVL193
 6827 09eb 0100     		.2byte	0x1
 6828 09ed 54       		.byte	0x54
 6829 09ee 3A000000 		.4byte	.LVL194
 6830 09f2 54000000 		.4byte	.LFE35
 6831 09f6 0100     		.2byte	0x1
 6832 09f8 54       		.byte	0x54
 6833 09f9 00000000 		.4byte	0
 6834 09fd 00000000 		.4byte	0
 6835              	.LLST67:
 6836 0a01 16000000 		.4byte	.LVL188
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 196


 6837 0a05 2E000000 		.4byte	.LVL190
 6838 0a09 0100     		.2byte	0x1
 6839 0a0b 53       		.byte	0x53
 6840 0a0c 2E000000 		.4byte	.LVL190
 6841 0a10 32000000 		.4byte	.LVL191
 6842 0a14 0200     		.2byte	0x2
 6843 0a16 31       		.byte	0x31
 6844 0a17 9F       		.byte	0x9f
 6845 0a18 3A000000 		.4byte	.LVL194
 6846 0a1c 54000000 		.4byte	.LFE35
 6847 0a20 0200     		.2byte	0x2
 6848 0a22 31       		.byte	0x31
 6849 0a23 9F       		.byte	0x9f
 6850 0a24 00000000 		.4byte	0
 6851 0a28 00000000 		.4byte	0
 6852              	.LLST68:
 6853 0a2c 00000000 		.4byte	.LVL196
 6854 0a30 08000000 		.4byte	.LVL197
 6855 0a34 0100     		.2byte	0x1
 6856 0a36 50       		.byte	0x50
 6857 0a37 08000000 		.4byte	.LVL197
 6858 0a3b 1C000000 		.4byte	.LFE36
 6859 0a3f 0400     		.2byte	0x4
 6860 0a41 F3       		.byte	0xf3
 6861 0a42 01       		.uleb128 0x1
 6862 0a43 50       		.byte	0x50
 6863 0a44 9F       		.byte	0x9f
 6864 0a45 00000000 		.4byte	0
 6865 0a49 00000000 		.4byte	0
 6866              	.LLST69:
 6867 0a4d 00000000 		.4byte	.LVL198
 6868 0a51 0A000000 		.4byte	.LVL199
 6869 0a55 0100     		.2byte	0x1
 6870 0a57 50       		.byte	0x50
 6871 0a58 0A000000 		.4byte	.LVL199
 6872 0a5c 18000000 		.4byte	.LFE37
 6873 0a60 0400     		.2byte	0x4
 6874 0a62 F3       		.byte	0xf3
 6875 0a63 01       		.uleb128 0x1
 6876 0a64 50       		.byte	0x50
 6877 0a65 9F       		.byte	0x9f
 6878 0a66 00000000 		.4byte	0
 6879 0a6a 00000000 		.4byte	0
 6880              	.LLST70:
 6881 0a6e 00000000 		.4byte	.LVL198
 6882 0a72 0E000000 		.4byte	.LVL200
 6883 0a76 0200     		.2byte	0x2
 6884 0a78 30       		.byte	0x30
 6885 0a79 9F       		.byte	0x9f
 6886 0a7a 0E000000 		.4byte	.LVL200
 6887 0a7e 18000000 		.4byte	.LFE37
 6888 0a82 0100     		.2byte	0x1
 6889 0a84 52       		.byte	0x52
 6890 0a85 00000000 		.4byte	0
 6891 0a89 00000000 		.4byte	0
 6892              	.LLST71:
 6893 0a8d 00000000 		.4byte	.LVL202
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 197


 6894 0a91 0A000000 		.4byte	.LVL203
 6895 0a95 0100     		.2byte	0x1
 6896 0a97 50       		.byte	0x50
 6897 0a98 0A000000 		.4byte	.LVL203
 6898 0a9c 18000000 		.4byte	.LFE38
 6899 0aa0 0400     		.2byte	0x4
 6900 0aa2 F3       		.byte	0xf3
 6901 0aa3 01       		.uleb128 0x1
 6902 0aa4 50       		.byte	0x50
 6903 0aa5 9F       		.byte	0x9f
 6904 0aa6 00000000 		.4byte	0
 6905 0aaa 00000000 		.4byte	0
 6906              	.LLST72:
 6907 0aae 00000000 		.4byte	.LVL202
 6908 0ab2 0E000000 		.4byte	.LVL204
 6909 0ab6 0200     		.2byte	0x2
 6910 0ab8 30       		.byte	0x30
 6911 0ab9 9F       		.byte	0x9f
 6912 0aba 0E000000 		.4byte	.LVL204
 6913 0abe 18000000 		.4byte	.LFE38
 6914 0ac2 0100     		.2byte	0x1
 6915 0ac4 53       		.byte	0x53
 6916 0ac5 00000000 		.4byte	0
 6917 0ac9 00000000 		.4byte	0
 6918              	.LLST73:
 6919 0acd 00000000 		.4byte	.LVL205
 6920 0ad1 08000000 		.4byte	.LVL206
 6921 0ad5 0100     		.2byte	0x1
 6922 0ad7 50       		.byte	0x50
 6923 0ad8 08000000 		.4byte	.LVL206
 6924 0adc 28000000 		.4byte	.LFE39
 6925 0ae0 0400     		.2byte	0x4
 6926 0ae2 F3       		.byte	0xf3
 6927 0ae3 01       		.uleb128 0x1
 6928 0ae4 50       		.byte	0x50
 6929 0ae5 9F       		.byte	0x9f
 6930 0ae6 00000000 		.4byte	0
 6931 0aea 00000000 		.4byte	0
 6932              	.LLST74:
 6933 0aee 00000000 		.4byte	.LVL207
 6934 0af2 0A000000 		.4byte	.LVL208
 6935 0af6 0100     		.2byte	0x1
 6936 0af8 50       		.byte	0x50
 6937 0af9 0A000000 		.4byte	.LVL208
 6938 0afd 1C000000 		.4byte	.LFE40
 6939 0b01 0400     		.2byte	0x4
 6940 0b03 F3       		.byte	0xf3
 6941 0b04 01       		.uleb128 0x1
 6942 0b05 50       		.byte	0x50
 6943 0b06 9F       		.byte	0x9f
 6944 0b07 00000000 		.4byte	0
 6945 0b0b 00000000 		.4byte	0
 6946              	.LLST75:
 6947 0b0f 00000000 		.4byte	.LVL215
 6948 0b13 09000000 		.4byte	.LVL216-1
 6949 0b17 0100     		.2byte	0x1
 6950 0b19 50       		.byte	0x50
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 198


 6951 0b1a 09000000 		.4byte	.LVL216-1
 6952 0b1e 26000000 		.4byte	.LVL219
 6953 0b22 0100     		.2byte	0x1
 6954 0b24 54       		.byte	0x54
 6955 0b25 26000000 		.4byte	.LVL219
 6956 0b29 2D000000 		.4byte	.LVL220-1
 6957 0b2d 0100     		.2byte	0x1
 6958 0b2f 50       		.byte	0x50
 6959 0b30 2D000000 		.4byte	.LVL220-1
 6960 0b34 4C000000 		.4byte	.LVL224
 6961 0b38 0100     		.2byte	0x1
 6962 0b3a 54       		.byte	0x54
 6963 0b3b 4C000000 		.4byte	.LVL224
 6964 0b3f 4E000000 		.4byte	.LFE42
 6965 0b43 0400     		.2byte	0x4
 6966 0b45 F3       		.byte	0xf3
 6967 0b46 01       		.uleb128 0x1
 6968 0b47 50       		.byte	0x50
 6969 0b48 9F       		.byte	0x9f
 6970 0b49 00000000 		.4byte	0
 6971 0b4d 00000000 		.4byte	0
 6972              	.LLST76:
 6973 0b51 00000000 		.4byte	.LVL225
 6974 0b55 0F000000 		.4byte	.LVL226-1
 6975 0b59 0100     		.2byte	0x1
 6976 0b5b 50       		.byte	0x50
 6977 0b5c 0F000000 		.4byte	.LVL226-1
 6978 0b60 52000000 		.4byte	.LVL234
 6979 0b64 0100     		.2byte	0x1
 6980 0b66 54       		.byte	0x54
 6981 0b67 52000000 		.4byte	.LVL234
 6982 0b6b 64000000 		.4byte	.LFE46
 6983 0b6f 0400     		.2byte	0x4
 6984 0b71 F3       		.byte	0xf3
 6985 0b72 01       		.uleb128 0x1
 6986 0b73 50       		.byte	0x50
 6987 0b74 9F       		.byte	0x9f
 6988 0b75 00000000 		.4byte	0
 6989 0b79 00000000 		.4byte	0
 6990              	.LLST77:
 6991 0b7d 00000000 		.4byte	.LVL225
 6992 0b81 0F000000 		.4byte	.LVL226-1
 6993 0b85 0100     		.2byte	0x1
 6994 0b87 51       		.byte	0x51
 6995 0b88 0F000000 		.4byte	.LVL226-1
 6996 0b8c 64000000 		.4byte	.LFE46
 6997 0b90 0400     		.2byte	0x4
 6998 0b92 F3       		.byte	0xf3
 6999 0b93 01       		.uleb128 0x1
 7000 0b94 51       		.byte	0x51
 7001 0b95 9F       		.byte	0x9f
 7002 0b96 00000000 		.4byte	0
 7003 0b9a 00000000 		.4byte	0
 7004              	.LLST78:
 7005 0b9e 00000000 		.4byte	.LVL225
 7006 0ba2 0F000000 		.4byte	.LVL226-1
 7007 0ba6 0100     		.2byte	0x1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 199


 7008 0ba8 52       		.byte	0x52
 7009 0ba9 0F000000 		.4byte	.LVL226-1
 7010 0bad 52000000 		.4byte	.LVL235
 7011 0bb1 0100     		.2byte	0x1
 7012 0bb3 55       		.byte	0x55
 7013 0bb4 52000000 		.4byte	.LVL235
 7014 0bb8 64000000 		.4byte	.LFE46
 7015 0bbc 0400     		.2byte	0x4
 7016 0bbe F3       		.byte	0xf3
 7017 0bbf 01       		.uleb128 0x1
 7018 0bc0 52       		.byte	0x52
 7019 0bc1 9F       		.byte	0x9f
 7020 0bc2 00000000 		.4byte	0
 7021 0bc6 00000000 		.4byte	0
 7022              	.LLST79:
 7023 0bca 24000000 		.4byte	.LVL227
 7024 0bce 2A000000 		.4byte	.LVL228
 7025 0bd2 0100     		.2byte	0x1
 7026 0bd4 50       		.byte	0x50
 7027 0bd5 2E000000 		.4byte	.LVL229
 7028 0bd9 34000000 		.4byte	.LVL230
 7029 0bdd 0100     		.2byte	0x1
 7030 0bdf 50       		.byte	0x50
 7031 0be0 00000000 		.4byte	0
 7032 0be4 00000000 		.4byte	0
 7033              	.LLST80:
 7034 0be8 34000000 		.4byte	.LVL230
 7035 0bec 3E000000 		.4byte	.LVL231
 7036 0bf0 0100     		.2byte	0x1
 7037 0bf2 56       		.byte	0x56
 7038 0bf3 00000000 		.4byte	0
 7039 0bf7 00000000 		.4byte	0
 7040              	.LLST81:
 7041 0bfb 34000000 		.4byte	.LVL230
 7042 0bff 52000000 		.4byte	.LVL233
 7043 0c03 0100     		.2byte	0x1
 7044 0c05 55       		.byte	0x55
 7045 0c06 00000000 		.4byte	0
 7046 0c0a 00000000 		.4byte	0
 7047              	.LLST82:
 7048 0c0e 34000000 		.4byte	.LVL230
 7049 0c12 52000000 		.4byte	.LVL233
 7050 0c16 0100     		.2byte	0x1
 7051 0c18 54       		.byte	0x54
 7052 0c19 00000000 		.4byte	0
 7053 0c1d 00000000 		.4byte	0
 7054              	.LLST83:
 7055 0c21 3E000000 		.4byte	.LVL231
 7056 0c25 52000000 		.4byte	.LVL233
 7057 0c29 0100     		.2byte	0x1
 7058 0c2b 56       		.byte	0x56
 7059 0c2c 00000000 		.4byte	0
 7060 0c30 00000000 		.4byte	0
 7061              	.LLST84:
 7062 0c34 00000000 		.4byte	.LVL236
 7063 0c38 0F000000 		.4byte	.LVL237-1
 7064 0c3c 0100     		.2byte	0x1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 200


 7065 0c3e 50       		.byte	0x50
 7066 0c3f 0F000000 		.4byte	.LVL237-1
 7067 0c43 2C000000 		.4byte	.LVL241
 7068 0c47 0100     		.2byte	0x1
 7069 0c49 54       		.byte	0x54
 7070 0c4a 2C000000 		.4byte	.LVL241
 7071 0c4e 34000000 		.4byte	.LFE45
 7072 0c52 0400     		.2byte	0x4
 7073 0c54 F3       		.byte	0xf3
 7074 0c55 01       		.uleb128 0x1
 7075 0c56 50       		.byte	0x50
 7076 0c57 9F       		.byte	0x9f
 7077 0c58 00000000 		.4byte	0
 7078 0c5c 00000000 		.4byte	0
 7079              	.LLST85:
 7080 0c60 00000000 		.4byte	.LVL236
 7081 0c64 0F000000 		.4byte	.LVL237-1
 7082 0c68 0100     		.2byte	0x1
 7083 0c6a 51       		.byte	0x51
 7084 0c6b 0F000000 		.4byte	.LVL237-1
 7085 0c6f 34000000 		.4byte	.LFE45
 7086 0c73 0400     		.2byte	0x4
 7087 0c75 F3       		.byte	0xf3
 7088 0c76 01       		.uleb128 0x1
 7089 0c77 51       		.byte	0x51
 7090 0c78 9F       		.byte	0x9f
 7091 0c79 00000000 		.4byte	0
 7092 0c7d 00000000 		.4byte	0
 7093              	.LLST86:
 7094 0c81 00000000 		.4byte	.LVL236
 7095 0c85 0F000000 		.4byte	.LVL237-1
 7096 0c89 0100     		.2byte	0x1
 7097 0c8b 52       		.byte	0x52
 7098 0c8c 0F000000 		.4byte	.LVL237-1
 7099 0c90 2C000000 		.4byte	.LVL242
 7100 0c94 0100     		.2byte	0x1
 7101 0c96 56       		.byte	0x56
 7102 0c97 2C000000 		.4byte	.LVL242
 7103 0c9b 34000000 		.4byte	.LFE45
 7104 0c9f 0400     		.2byte	0x4
 7105 0ca1 F3       		.byte	0xf3
 7106 0ca2 01       		.uleb128 0x1
 7107 0ca3 52       		.byte	0x52
 7108 0ca4 9F       		.byte	0x9f
 7109 0ca5 00000000 		.4byte	0
 7110 0ca9 00000000 		.4byte	0
 7111              	.LLST87:
 7112 0cad 20000000 		.4byte	.LVL238
 7113 0cb1 22000000 		.4byte	.LVL239
 7114 0cb5 0100     		.2byte	0x1
 7115 0cb7 50       		.byte	0x50
 7116 0cb8 00000000 		.4byte	0
 7117 0cbc 00000000 		.4byte	0
 7118              	.LLST88:
 7119 0cc0 20000000 		.4byte	.LVL238
 7120 0cc4 22000000 		.4byte	.LVL239
 7121 0cc8 0A00     		.2byte	0xa
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 201


 7122 0cca 76       		.byte	0x76
 7123 0ccb 00       		.sleb128 0
 7124 0ccc 70       		.byte	0x70
 7125 0ccd 00       		.sleb128 0
 7126 0cce 22       		.byte	0x22
 7127 0ccf 0A       		.byte	0xa
 7128 0cd0 FFFF     		.2byte	0xffff
 7129 0cd2 1A       		.byte	0x1a
 7130 0cd3 9F       		.byte	0x9f
 7131 0cd4 00000000 		.4byte	0
 7132 0cd8 00000000 		.4byte	0
 7133              		.section	.debug_aranges,"",%progbits
 7134 0000 74010000 		.4byte	0x174
 7135 0004 0200     		.2byte	0x2
 7136 0006 00000000 		.4byte	.Ldebug_info0
 7137 000a 04       		.byte	0x4
 7138 000b 00       		.byte	0
 7139 000c 0000     		.2byte	0
 7140 000e 0000     		.2byte	0
 7141 0010 00000000 		.4byte	.LFB0
 7142 0014 34000000 		.4byte	.LFE0-.LFB0
 7143 0018 00000000 		.4byte	.LFB1
 7144 001c 14000000 		.4byte	.LFE1-.LFB1
 7145 0020 00000000 		.4byte	.LFB3
 7146 0024 58000000 		.4byte	.LFE3-.LFB3
 7147 0028 00000000 		.4byte	.LFB4
 7148 002c 14000000 		.4byte	.LFE4-.LFB4
 7149 0030 00000000 		.4byte	.LFB5
 7150 0034 E8000000 		.4byte	.LFE5-.LFB5
 7151 0038 00000000 		.4byte	.LFB8
 7152 003c 90000000 		.4byte	.LFE8-.LFB8
 7153 0040 00000000 		.4byte	.LFB7
 7154 0044 BC000000 		.4byte	.LFE7-.LFB7
 7155 0048 00000000 		.4byte	.LFB9
 7156 004c 2C000000 		.4byte	.LFE9-.LFB9
 7157 0050 00000000 		.4byte	.LFB12
 7158 0054 18000000 		.4byte	.LFE12-.LFB12
 7159 0058 00000000 		.4byte	.LFB14
 7160 005c 0C000000 		.4byte	.LFE14-.LFB14
 7161 0060 00000000 		.4byte	.LFB15
 7162 0064 1C000000 		.4byte	.LFE15-.LFB15
 7163 0068 00000000 		.4byte	.LFB16
 7164 006c 24000000 		.4byte	.LFE16-.LFB16
 7165 0070 00000000 		.4byte	.LFB17
 7166 0074 1C000000 		.4byte	.LFE17-.LFB17
 7167 0078 00000000 		.4byte	.LFB19
 7168 007c 30000000 		.4byte	.LFE19-.LFB19
 7169 0080 00000000 		.4byte	.LFB20
 7170 0084 18000000 		.4byte	.LFE20-.LFB20
 7171 0088 00000000 		.4byte	.LFB21
 7172 008c 2C000000 		.4byte	.LFE21-.LFB21
 7173 0090 00000000 		.4byte	.LFB44
 7174 0094 2C000000 		.4byte	.LFE44-.LFB44
 7175 0098 00000000 		.4byte	.LFB22
 7176 009c 14000000 		.4byte	.LFE22-.LFB22
 7177 00a0 00000000 		.4byte	.LFB23
 7178 00a4 2C000000 		.4byte	.LFE23-.LFB23
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 202


 7179 00a8 00000000 		.4byte	.LFB24
 7180 00ac 18000000 		.4byte	.LFE24-.LFB24
 7181 00b0 00000000 		.4byte	.LFB25
 7182 00b4 38000000 		.4byte	.LFE25-.LFB25
 7183 00b8 00000000 		.4byte	.LFB26
 7184 00bc 48000000 		.4byte	.LFE26-.LFB26
 7185 00c0 00000000 		.4byte	.LFB27
 7186 00c4 34000000 		.4byte	.LFE27-.LFB27
 7187 00c8 00000000 		.4byte	.LFB28
 7188 00cc 14000000 		.4byte	.LFE28-.LFB28
 7189 00d0 00000000 		.4byte	.LFB29
 7190 00d4 48000000 		.4byte	.LFE29-.LFB29
 7191 00d8 00000000 		.4byte	.LFB30
 7192 00dc 2C000000 		.4byte	.LFE30-.LFB30
 7193 00e0 00000000 		.4byte	.LFB31
 7194 00e4 10000000 		.4byte	.LFE31-.LFB31
 7195 00e8 00000000 		.4byte	.LFB32
 7196 00ec 14000000 		.4byte	.LFE32-.LFB32
 7197 00f0 00000000 		.4byte	.LFB33
 7198 00f4 30000000 		.4byte	.LFE33-.LFB33
 7199 00f8 00000000 		.4byte	.LFB43
 7200 00fc 68000000 		.4byte	.LFE43-.LFB43
 7201 0100 00000000 		.4byte	.LFB2
 7202 0104 54000000 		.4byte	.LFE2-.LFB2
 7203 0108 00000000 		.4byte	.LFB11
 7204 010c 38000000 		.4byte	.LFE11-.LFB11
 7205 0110 00000000 		.4byte	.LFB13
 7206 0114 48000000 		.4byte	.LFE13-.LFB13
 7207 0118 00000000 		.4byte	.LFB34
 7208 011c 14000000 		.4byte	.LFE34-.LFB34
 7209 0120 00000000 		.4byte	.LFB35
 7210 0124 54000000 		.4byte	.LFE35-.LFB35
 7211 0128 00000000 		.4byte	.LFB36
 7212 012c 1C000000 		.4byte	.LFE36-.LFB36
 7213 0130 00000000 		.4byte	.LFB37
 7214 0134 18000000 		.4byte	.LFE37-.LFB37
 7215 0138 00000000 		.4byte	.LFB38
 7216 013c 18000000 		.4byte	.LFE38-.LFB38
 7217 0140 00000000 		.4byte	.LFB39
 7218 0144 28000000 		.4byte	.LFE39-.LFB39
 7219 0148 00000000 		.4byte	.LFB40
 7220 014c 1C000000 		.4byte	.LFE40-.LFB40
 7221 0150 00000000 		.4byte	.LFB41
 7222 0154 A0000000 		.4byte	.LFE41-.LFB41
 7223 0158 00000000 		.4byte	.LFB42
 7224 015c 4E000000 		.4byte	.LFE42-.LFB42
 7225 0160 00000000 		.4byte	.LFB46
 7226 0164 64000000 		.4byte	.LFE46-.LFB46
 7227 0168 00000000 		.4byte	.LFB45
 7228 016c 34000000 		.4byte	.LFE45-.LFB45
 7229 0170 00000000 		.4byte	0
 7230 0174 00000000 		.4byte	0
 7231              		.section	.debug_ranges,"",%progbits
 7232              	.Ldebug_ranges0:
 7233 0000 00000000 		.4byte	.LBB90
 7234 0004 02000000 		.4byte	.LBE90
 7235 0008 04000000 		.4byte	.LBB93
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 203


 7236 000c 06000000 		.4byte	.LBE93
 7237 0010 00000000 		.4byte	0
 7238 0014 00000000 		.4byte	0
 7239 0018 00000000 		.4byte	.LBB100
 7240 001c 02000000 		.4byte	.LBE100
 7241 0020 04000000 		.4byte	.LBB103
 7242 0024 06000000 		.4byte	.LBE103
 7243 0028 00000000 		.4byte	0
 7244 002c 00000000 		.4byte	0
 7245 0030 2C000000 		.4byte	.LBB108
 7246 0034 2E000000 		.4byte	.LBE108
 7247 0038 32000000 		.4byte	.LBB111
 7248 003c 34000000 		.4byte	.LBE111
 7249 0040 00000000 		.4byte	0
 7250 0044 00000000 		.4byte	0
 7251 0048 00000000 		.4byte	.LBB118
 7252 004c 02000000 		.4byte	.LBE118
 7253 0050 04000000 		.4byte	.LBB121
 7254 0054 0E000000 		.4byte	.LBE121
 7255 0058 00000000 		.4byte	0
 7256 005c 00000000 		.4byte	0
 7257 0060 02000000 		.4byte	.LBB126
 7258 0064 04000000 		.4byte	.LBE126
 7259 0068 06000000 		.4byte	.LBB129
 7260 006c 08000000 		.4byte	.LBE129
 7261 0070 00000000 		.4byte	0
 7262 0074 00000000 		.4byte	0
 7263 0078 08000000 		.4byte	.LBB134
 7264 007c 0A000000 		.4byte	.LBE134
 7265 0080 0C000000 		.4byte	.LBB137
 7266 0084 16000000 		.4byte	.LBE137
 7267 0088 00000000 		.4byte	0
 7268 008c 00000000 		.4byte	0
 7269 0090 00000000 		.4byte	.LFB0
 7270 0094 34000000 		.4byte	.LFE0
 7271 0098 00000000 		.4byte	.LFB1
 7272 009c 14000000 		.4byte	.LFE1
 7273 00a0 00000000 		.4byte	.LFB3
 7274 00a4 58000000 		.4byte	.LFE3
 7275 00a8 00000000 		.4byte	.LFB4
 7276 00ac 14000000 		.4byte	.LFE4
 7277 00b0 00000000 		.4byte	.LFB5
 7278 00b4 E8000000 		.4byte	.LFE5
 7279 00b8 00000000 		.4byte	.LFB8
 7280 00bc 90000000 		.4byte	.LFE8
 7281 00c0 00000000 		.4byte	.LFB7
 7282 00c4 BC000000 		.4byte	.LFE7
 7283 00c8 00000000 		.4byte	.LFB9
 7284 00cc 2C000000 		.4byte	.LFE9
 7285 00d0 00000000 		.4byte	.LFB12
 7286 00d4 18000000 		.4byte	.LFE12
 7287 00d8 00000000 		.4byte	.LFB14
 7288 00dc 0C000000 		.4byte	.LFE14
 7289 00e0 00000000 		.4byte	.LFB15
 7290 00e4 1C000000 		.4byte	.LFE15
 7291 00e8 00000000 		.4byte	.LFB16
 7292 00ec 24000000 		.4byte	.LFE16
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 204


 7293 00f0 00000000 		.4byte	.LFB17
 7294 00f4 1C000000 		.4byte	.LFE17
 7295 00f8 00000000 		.4byte	.LFB19
 7296 00fc 30000000 		.4byte	.LFE19
 7297 0100 00000000 		.4byte	.LFB20
 7298 0104 18000000 		.4byte	.LFE20
 7299 0108 00000000 		.4byte	.LFB21
 7300 010c 2C000000 		.4byte	.LFE21
 7301 0110 00000000 		.4byte	.LFB44
 7302 0114 2C000000 		.4byte	.LFE44
 7303 0118 00000000 		.4byte	.LFB22
 7304 011c 14000000 		.4byte	.LFE22
 7305 0120 00000000 		.4byte	.LFB23
 7306 0124 2C000000 		.4byte	.LFE23
 7307 0128 00000000 		.4byte	.LFB24
 7308 012c 18000000 		.4byte	.LFE24
 7309 0130 00000000 		.4byte	.LFB25
 7310 0134 38000000 		.4byte	.LFE25
 7311 0138 00000000 		.4byte	.LFB26
 7312 013c 48000000 		.4byte	.LFE26
 7313 0140 00000000 		.4byte	.LFB27
 7314 0144 34000000 		.4byte	.LFE27
 7315 0148 00000000 		.4byte	.LFB28
 7316 014c 14000000 		.4byte	.LFE28
 7317 0150 00000000 		.4byte	.LFB29
 7318 0154 48000000 		.4byte	.LFE29
 7319 0158 00000000 		.4byte	.LFB30
 7320 015c 2C000000 		.4byte	.LFE30
 7321 0160 00000000 		.4byte	.LFB31
 7322 0164 10000000 		.4byte	.LFE31
 7323 0168 00000000 		.4byte	.LFB32
 7324 016c 14000000 		.4byte	.LFE32
 7325 0170 00000000 		.4byte	.LFB33
 7326 0174 30000000 		.4byte	.LFE33
 7327 0178 00000000 		.4byte	.LFB43
 7328 017c 68000000 		.4byte	.LFE43
 7329 0180 00000000 		.4byte	.LFB2
 7330 0184 54000000 		.4byte	.LFE2
 7331 0188 00000000 		.4byte	.LFB11
 7332 018c 38000000 		.4byte	.LFE11
 7333 0190 00000000 		.4byte	.LFB13
 7334 0194 48000000 		.4byte	.LFE13
 7335 0198 00000000 		.4byte	.LFB34
 7336 019c 14000000 		.4byte	.LFE34
 7337 01a0 00000000 		.4byte	.LFB35
 7338 01a4 54000000 		.4byte	.LFE35
 7339 01a8 00000000 		.4byte	.LFB36
 7340 01ac 1C000000 		.4byte	.LFE36
 7341 01b0 00000000 		.4byte	.LFB37
 7342 01b4 18000000 		.4byte	.LFE37
 7343 01b8 00000000 		.4byte	.LFB38
 7344 01bc 18000000 		.4byte	.LFE38
 7345 01c0 00000000 		.4byte	.LFB39
 7346 01c4 28000000 		.4byte	.LFE39
 7347 01c8 00000000 		.4byte	.LFB40
 7348 01cc 1C000000 		.4byte	.LFE40
 7349 01d0 00000000 		.4byte	.LFB41
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 205


 7350 01d4 A0000000 		.4byte	.LFE41
 7351 01d8 00000000 		.4byte	.LFB42
 7352 01dc 4E000000 		.4byte	.LFE42
 7353 01e0 00000000 		.4byte	.LFB46
 7354 01e4 64000000 		.4byte	.LFE46
 7355 01e8 00000000 		.4byte	.LFB45
 7356 01ec 34000000 		.4byte	.LFE45
 7357 01f0 00000000 		.4byte	0
 7358 01f4 00000000 		.4byte	0
 7359              		.section	.debug_line,"",%progbits
 7360              	.Ldebug_line0:
 7361 0000 CA060000 		.section	.debug_str,"MS",%progbits,1
 7361      02005C00 
 7361      00000201 
 7361      FB0E0D00 
 7361      01010101 
 7362              	.LASF10:
 7363 0000 75696E74 		.ascii	"uint16\000"
 7363      313600
 7364              	.LASF118:
 7365 0007 43794578 		.ascii	"CyExitCriticalSection\000"
 7365      69744372 
 7365      69746963 
 7365      616C5365 
 7365      6374696F 
 7366              	.LASF39:
 7367 001d 6C66636C 		.ascii	"lfclkSource\000"
 7367      6B536F75 
 7367      72636500 
 7368              	.LASF115:
 7369 0029 636F756E 		.ascii	"counterIntMaskTbl\000"
 7369      74657249 
 7369      6E744D61 
 7369      736B5462 
 7369      6C00
 7370              	.LASF116:
 7371 003b 63795379 		.ascii	"cySysWdtCallback\000"
 7371      73576474 
 7371      43616C6C 
 7371      6261636B 
 7371      00
 7372              	.LASF35:
 7373 004c 43795379 		.ascii	"CySysWdtSetMode\000"
 7373      73576474 
 7373      5365744D 
 7373      6F646500 
 7374              	.LASF68:
 7375 005c 43795379 		.ascii	"CySysWdtUnlock\000"
 7375      73576474 
 7375      556E6C6F 
 7375      636B00
 7376              	.LASF24:
 7377 006b 6D656173 		.ascii	"measuredIloFreq\000"
 7377      75726564 
 7377      496C6F46 
 7377      72657100 
 7378              	.LASF30:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 206


 7379 007b 636F756E 		.ascii	"counterNum\000"
 7379      7465724E 
 7379      756D00
 7380              	.LASF126:
 7381 0086 43795379 		.ascii	"CySysClkLfclkPosedgeCatch\000"
 7381      73436C6B 
 7381      4C66636C 
 7381      6B506F73 
 7381      65646765 
 7382              	.LASF77:
 7383 00a0 43795379 		.ascii	"CySysWdtGetCascade\000"
 7383      73576474 
 7383      47657443 
 7383      61736361 
 7383      646500
 7384              	.LASF124:
 7385 00b3 43795379 		.ascii	"CySysClkGetLfclkSource\000"
 7385      73436C6B 
 7385      4765744C 
 7385      66636C6B 
 7385      536F7572 
 7386              	.LASF60:
 7387 00ca 43795379 		.ascii	"CySysClkIloStartMeasurement\000"
 7387      73436C6B 
 7387      496C6F53 
 7387      74617274 
 7387      4D656173 
 7388              	.LASF111:
 7389 00e6 6C66636C 		.ascii	"lfclkPosedgeWdtCounter0Enabled\000"
 7389      6B506F73 
 7389      65646765 
 7389      57647443 
 7389      6F756E74 
 7390              	.LASF8:
 7391 0105 6C6F6E67 		.ascii	"long long unsigned int\000"
 7391      206C6F6E 
 7391      6720756E 
 7391      7369676E 
 7391      65642069 
 7392              	.LASF69:
 7393 011c 43795379 		.ascii	"CySysWdtSetClearOnMatch\000"
 7393      73576474 
 7393      53657443 
 7393      6C656172 
 7393      4F6E4D61 
 7394              	.LASF25:
 7395 0134 63757272 		.ascii	"currentIloTrimValue\000"
 7395      656E7449 
 7395      6C6F5472 
 7395      696D5661 
 7395      6C756500 
 7396              	.LASF76:
 7397 0148 43795379 		.ascii	"CySysClkWcoEnabled\000"
 7397      73436C6B 
 7397      57636F45 
 7397      6E61626C 
 7397      656400
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 207


 7398              	.LASF28:
 7399 015b 6572726F 		.ascii	"errorRangeStatus\000"
 7399      7252616E 
 7399      67655374 
 7399      61747573 
 7399      00
 7400              	.LASF125:
 7401 016c 43795379 		.ascii	"CySysClkWcoSetHighPowerMode\000"
 7401      73436C6B 
 7401      57636F53 
 7401      65744869 
 7401      6768506F 
 7402              	.LASF7:
 7403 0188 6C6F6E67 		.ascii	"long long int\000"
 7403      206C6F6E 
 7403      6720696E 
 7403      7400
 7404              	.LASF1:
 7405 0196 7369676E 		.ascii	"signed char\000"
 7405      65642063 
 7405      68617200 
 7406              	.LASF99:
 7407 01a2 66756E63 		.ascii	"function\000"
 7407      74696F6E 
 7407      00
 7408              	.LASF66:
 7409 01ab 43795379 		.ascii	"CySysWdtLock\000"
 7409      73576474 
 7409      4C6F636B 
 7409      00
 7410              	.LASF21:
 7411 01b8 63795764 		.ascii	"cyWdtCallback\000"
 7411      7443616C 
 7411      6C626163 
 7411      6B00
 7412              	.LASF12:
 7413 01c6 696E7433 		.ascii	"int32\000"
 7413      3200
 7414              	.LASF119:
 7415 01cc 43794465 		.ascii	"CyDelayUs\000"
 7415      6C617955 
 7415      7300
 7416              	.LASF26:
 7417 01d6 696C6F41 		.ascii	"iloAccuracyValue\000"
 7417      63637572 
 7417      61637956 
 7417      616C7565 
 7417      00
 7418              	.LASF20:
 7419 01e7 63795F73 		.ascii	"cy_sys_timer_delaytype_enum\000"
 7419      79735F74 
 7419      696D6572 
 7419      5F64656C 
 7419      61797479 
 7420              	.LASF81:
 7421 0203 62697473 		.ascii	"bits\000"
 7421      00
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 208


 7422              	.LASF5:
 7423 0208 6C6F6E67 		.ascii	"long int\000"
 7423      20696E74 
 7423      00
 7424              	.LASF79:
 7425 0211 72656756 		.ascii	"regValue\000"
 7425      616C7565 
 7425      00
 7426              	.LASF65:
 7427 021a 636C6F63 		.ascii	"clockSel\000"
 7427      6B53656C 
 7427      00
 7428              	.LASF9:
 7429 0223 75696E74 		.ascii	"uint8\000"
 7429      3800
 7430              	.LASF70:
 7431 0229 656E6162 		.ascii	"enable\000"
 7431      6C6500
 7432              	.LASF14:
 7433 0230 646F7562 		.ascii	"double\000"
 7433      6C6500
 7434              	.LASF47:
 7435 0237 636F6D70 		.ascii	"compensatedCycles\000"
 7435      656E7361 
 7435      74656443 
 7435      79636C65 
 7435      7300
 7436              	.LASF89:
 7437 0249 43795379 		.ascii	"CySysClkIloStop\000"
 7437      73436C6B 
 7437      496C6F53 
 7437      746F7000 
 7438              	.LASF49:
 7439 0259 696C6F43 		.ascii	"iloCompensatedCycles\000"
 7439      6F6D7065 
 7439      6E736174 
 7439      65644379 
 7439      636C6573 
 7440              	.LASF97:
 7441 026e 636F756E 		.ascii	"countersMask\000"
 7441      74657273 
 7441      4D61736B 
 7441      00
 7442              	.LASF11:
 7443 027b 75696E74 		.ascii	"uint32\000"
 7443      333200
 7444              	.LASF45:
 7445 0282 43795379 		.ascii	"CySysClkIloStopMeasurement\000"
 7445      73436C6B 
 7445      496C6F53 
 7445      746F704D 
 7445      65617375 
 7446              	.LASF100:
 7447 029d 70726576 		.ascii	"prevCallback\000"
 7447      43616C6C 
 7447      6261636B 
 7447      00
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 209


 7448              	.LASF78:
 7449 02aa 43795379 		.ascii	"CySysWdtSetMatch\000"
 7449      73576474 
 7449      5365744D 
 7449      61746368 
 7449      00
 7450              	.LASF75:
 7451 02bb 636F756E 		.ascii	"countersEnableStatus\000"
 7451      74657273 
 7451      456E6162 
 7451      6C655374 
 7451      61747573 
 7452              	.LASF114:
 7453 02d0 77647449 		.ascii	"wdtIsrMask\000"
 7453      73724D61 
 7453      736B00
 7454              	.LASF36:
 7455 02db 43795379 		.ascii	"CySysWdtEnable\000"
 7455      73576474 
 7455      456E6162 
 7455      6C6500
 7456              	.LASF98:
 7457 02ea 43795379 		.ascii	"CySysWdtSetInterruptCallback\000"
 7457      73576474 
 7457      53657449 
 7457      6E746572 
 7457      72757074 
 7458              	.LASF37:
 7459 0307 636F756E 		.ascii	"counterMask\000"
 7459      7465724D 
 7459      61736B00 
 7460              	.LASF71:
 7461 0313 43795379 		.ascii	"CySysWdtGetClearOnMatch\000"
 7461      73576474 
 7461      47657443 
 7461      6C656172 
 7461      4F6E4D61 
 7462              	.LASF0:
 7463 032b 756E7369 		.ascii	"unsigned int\000"
 7463      676E6564 
 7463      20696E74 
 7463      00
 7464              	.LASF90:
 7465 0338 43795379 		.ascii	"CySysClkSetLfclkSource\000"
 7465      73436C6B 
 7465      5365744C 
 7465      66636C6B 
 7465      536F7572 
 7466              	.LASF85:
 7467 034f 66697273 		.ascii	"firstCount\000"
 7467      74436F75 
 7467      6E7400
 7468              	.LASF102:
 7469 035a 72657443 		.ascii	"retCallback\000"
 7469      616C6C62 
 7469      61636B00 
 7470              	.LASF46:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 210


 7471 0366 64657369 		.ascii	"desiredDelay\000"
 7471      72656444 
 7471      656C6179 
 7471      00
 7472              	.LASF6:
 7473 0373 6C6F6E67 		.ascii	"long unsigned int\000"
 7473      20756E73 
 7473      69676E65 
 7473      6420696E 
 7473      7400
 7474              	.LASF67:
 7475 0385 696E7465 		.ascii	"interruptState\000"
 7475      72727570 
 7475      74537461 
 7475      746500
 7476              	.LASF109:
 7477 0394 6D617463 		.ascii	"matchValue\000"
 7477      6856616C 
 7477      756500
 7478              	.LASF123:
 7479 039f 43795379 		.ascii	"CySysClkLfclkPosedgeRestore\000"
 7479      73436C6B 
 7479      4C66636C 
 7479      6B506F73 
 7479      65646765 
 7480              	.LASF103:
 7481 03bb 43795379 		.ascii	"CySysWdtEnableCounterIsr\000"
 7481      73576474 
 7481      456E6162 
 7481      6C65436F 
 7481      756E7465 
 7482              	.LASF27:
 7483 03d4 7472696D 		.ascii	"trimStep\000"
 7483      53746570 
 7483      00
 7484              	.LASF4:
 7485 03dd 73686F72 		.ascii	"short unsigned int\000"
 7485      7420756E 
 7485      7369676E 
 7485      65642069 
 7485      6E7400
 7486              	.LASF34:
 7487 03f0 43795379 		.ascii	"CySysWdtGetEnabledStatus\000"
 7487      73576474 
 7487      47657445 
 7487      6E61626C 
 7487      65645374 
 7488              	.LASF101:
 7489 0409 43795379 		.ascii	"CySysWdtGetInterruptCallback\000"
 7489      73576474 
 7489      47657449 
 7489      6E746572 
 7489      72757074 
 7490              	.LASF48:
 7491 0426 696C6F54 		.ascii	"iloTrimTrig\000"
 7491      72696D54 
 7491      72696700 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 211


 7492              	.LASF33:
 7493 0432 43795379 		.ascii	"CySysClkIloUpdateTrimReg\000"
 7493      73436C6B 
 7493      496C6F55 
 7493      70646174 
 7493      65547269 
 7494              	.LASF44:
 7495 044b 43795379 		.ascii	"CySysClkIloStart\000"
 7495      73436C6B 
 7495      496C6F53 
 7495      74617274 
 7495      00
 7496              	.LASF80:
 7497 045c 43795379 		.ascii	"CySysWdtSetToggleBit\000"
 7497      73576474 
 7497      53657454 
 7497      6F67676C 
 7497      65426974 
 7498              	.LASF63:
 7499 0471 706F7765 		.ascii	"powerModeStatus\000"
 7499      724D6F64 
 7499      65537461 
 7499      74757300 
 7500              	.LASF106:
 7501 0481 43795379 		.ascii	"CySysWatchdogFeed\000"
 7501      73576174 
 7501      6368646F 
 7501      67466565 
 7501      6400
 7502              	.LASF17:
 7503 0493 72656733 		.ascii	"reg32\000"
 7503      3200
 7504              	.LASF110:
 7505 0499 64656661 		.ascii	"defaultIloTrimRegValue\000"
 7505      756C7449 
 7505      6C6F5472 
 7505      696D5265 
 7505      6756616C 
 7506              	.LASF117:
 7507 04b0 4379456E 		.ascii	"CyEnterCriticalSection\000"
 7507      74657243 
 7507      72697469 
 7507      63616C53 
 7507      65637469 
 7508              	.LASF61:
 7509 04c7 43795379 		.ascii	"CySysClkWcoStart\000"
 7509      73436C6B 
 7509      57636F53 
 7509      74617274 
 7509      00
 7510              	.LASF53:
 7511 04d8 72657475 		.ascii	"returnStatus\000"
 7511      726E5374 
 7511      61747573 
 7511      00
 7512              	.LASF91:
 7513 04e5 736F7572 		.ascii	"source\000"
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 212


 7513      636500
 7514              	.LASF64:
 7515 04ec 43795379 		.ascii	"CySysClkWcoClockOutSelect\000"
 7515      73436C6B 
 7515      57636F43 
 7515      6C6F636B 
 7515      4F757453 
 7516              	.LASF23:
 7517 0506 73697A65 		.ascii	"sizetype\000"
 7517      74797065 
 7517      00
 7518              	.LASF22:
 7519 050f 6C6F6E67 		.ascii	"long double\000"
 7519      20646F75 
 7519      626C6500 
 7520              	.LASF83:
 7521 051b 43795379 		.ascii	"CySysWdtGetMatch\000"
 7521      73576474 
 7521      4765744D 
 7521      61746368 
 7521      00
 7522              	.LASF120:
 7523 052c 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 7523      43313120 
 7523      352E342E 
 7523      31203230 
 7523      31363036 
 7524 055f 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 7524      20726576 
 7524      6973696F 
 7524      6E203233 
 7524      37373135 
 7525 0592 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 7525      66756E63 
 7525      74696F6E 
 7525      2D736563 
 7525      74696F6E 
 7526              	.LASF42:
 7527 05ba 6D617463 		.ascii	"match\000"
 7527      6800
 7528              	.LASF59:
 7529 05c0 43795379 		.ascii	"CySysClkIloRestoreFactoryTrim\000"
 7529      73436C6B 
 7529      496C6F52 
 7529      6573746F 
 7529      72654661 
 7530              	.LASF18:
 7531 05de 43595F53 		.ascii	"CY_SYS_TIMER_WAIT\000"
 7531      59535F54 
 7531      494D4552 
 7531      5F574149 
 7531      5400
 7532              	.LASF52:
 7533 05f0 63686563 		.ascii	"checkStatus\000"
 7533      6B537461 
 7533      74757300 
 7534              	.LASF127:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 213


 7535 05fc 63796465 		.ascii	"cydelayFreqHz\000"
 7535      6C617946 
 7535      72657148 
 7535      7A00
 7536              	.LASF96:
 7537 060a 43795379 		.ascii	"CySysWdtResetCounters\000"
 7537      73576474 
 7537      52657365 
 7537      74436F75 
 7537      6E746572 
 7538              	.LASF57:
 7539 0620 77616974 		.ascii	"waitUntilCntr1Stops\000"
 7539      556E7469 
 7539      6C436E74 
 7539      72315374 
 7539      6F707300 
 7540              	.LASF94:
 7541 0634 43795379 		.ascii	"CySysWdtClearInterrupt\000"
 7541      73576474 
 7541      436C6561 
 7541      72496E74 
 7541      65727275 
 7542              	.LASF13:
 7543 064b 666C6F61 		.ascii	"float\000"
 7543      7400
 7544              	.LASF40:
 7545 0651 43795379 		.ascii	"CySysTimerDelayUntilMatch\000"
 7545      7354696D 
 7545      65724465 
 7545      6C617955 
 7545      6E74696C 
 7546              	.LASF107:
 7547 066b 43795379 		.ascii	"CySysTimerDelay\000"
 7547      7354696D 
 7547      65724465 
 7547      6C617900 
 7548              	.LASF122:
 7549 067b 443A5C5F 		.ascii	"D:\\_Project\\_MD\\cypress_button\\EZIIC_button.cyd"
 7549      50726F6A 
 7549      6563745C 
 7549      5F4D445C 
 7549      63797072 
 7550 06aa 736E00   		.ascii	"sn\000"
 7551              	.LASF87:
 7552 06ad 43795379 		.ascii	"CySysWdtLocked\000"
 7552      73576474 
 7552      4C6F636B 
 7552      656400
 7553              	.LASF2:
 7554 06bc 756E7369 		.ascii	"unsigned char\000"
 7554      676E6564 
 7554      20636861 
 7554      7200
 7555              	.LASF51:
 7556 06ca 636F6D70 		.ascii	"compensateRunningStatus\000"
 7556      656E7361 
 7556      74655275 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 214


 7556      6E6E696E 
 7556      67537461 
 7557              	.LASF86:
 7558 06e2 6C66636C 		.ascii	"lfclkPosedgeEnabledWdtCounter\000"
 7558      6B506F73 
 7558      65646765 
 7558      456E6162 
 7558      6C656457 
 7559              	.LASF108:
 7560 0700 64656C61 		.ascii	"delay\000"
 7560      7900
 7561              	.LASF3:
 7562 0706 73686F72 		.ascii	"short int\000"
 7562      7420696E 
 7562      7400
 7563              	.LASF41:
 7564 0710 64656C61 		.ascii	"delayType\000"
 7564      79547970 
 7564      6500
 7565              	.LASF72:
 7566 071a 43795379 		.ascii	"CySysWdtDisable\000"
 7566      73576474 
 7566      44697361 
 7566      626C6500 
 7567              	.LASF55:
 7568 072a 43795379 		.ascii	"CySysClkIloTrim\000"
 7568      73436C6B 
 7568      496C6F54 
 7568      72696D00 
 7569              	.LASF88:
 7570 073a 43795379 		.ascii	"CySysClkIloEnabled\000"
 7570      73436C6B 
 7570      496C6F45 
 7570      6E61626C 
 7570      656400
 7571              	.LASF93:
 7572 074d 43795379 		.ascii	"CySysWdtGetInterruptSource\000"
 7572      73576474 
 7572      47657449 
 7572      6E746572 
 7572      72757074 
 7573              	.LASF121:
 7574 0768 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLFClk.c\000"
 7574      72617465 
 7574      645F536F 
 7574      75726365 
 7574      5C50536F 
 7575              	.LASF29:
 7576 0789 696C6F41 		.ascii	"iloAccuracyInPPT\000"
 7576      63637572 
 7576      61637949 
 7576      6E505054 
 7576      00
 7577              	.LASF92:
 7578 079a 43795379 		.ascii	"CySysClkWcoStop\000"
 7578      73436C6B 
 7578      57636F53 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 215


 7578      746F7000 
 7579              	.LASF62:
 7580 07aa 43795379 		.ascii	"CySysClkWcoSetPowerMode\000"
 7580      73436C6B 
 7580      57636F53 
 7580      6574506F 
 7580      7765724D 
 7581              	.LASF104:
 7582 07c2 43795379 		.ascii	"CySysWdtDisableCounterIsr\000"
 7582      73576474 
 7582      44697361 
 7582      626C6543 
 7582      6F756E74 
 7583              	.LASF15:
 7584 07dc 63686172 		.ascii	"char\000"
 7584      00
 7585              	.LASF31:
 7586 07e1 6D6F6465 		.ascii	"mode\000"
 7586      00
 7587              	.LASF84:
 7588 07e6 43795379 		.ascii	"CySysWdtGetCount\000"
 7588      73576474 
 7588      47657443 
 7588      6F756E74 
 7588      00
 7589              	.LASF113:
 7590 07f7 64697361 		.ascii	"disableServicedIsr\000"
 7590      626C6553 
 7590      65727669 
 7590      63656449 
 7590      737200
 7591              	.LASF43:
 7592 080a 746D7056 		.ascii	"tmpValue\000"
 7592      616C7565 
 7592      00
 7593              	.LASF73:
 7594 0813 43795379 		.ascii	"CySysWdtSetCascade\000"
 7594      73576474 
 7594      53657443 
 7594      61736361 
 7594      646500
 7595              	.LASF56:
 7596 0826 74696D65 		.ascii	"timeOutClocks\000"
 7596      4F757443 
 7596      6C6F636B 
 7596      7300
 7597              	.LASF58:
 7598 0834 7472696D 		.ascii	"trimRunningStatus\000"
 7598      52756E6E 
 7598      696E6753 
 7598      74617475 
 7598      7300
 7599              	.LASF38:
 7600 0846 43795379 		.ascii	"CySysWdtGetMode\000"
 7600      73576474 
 7600      4765744D 
 7600      6F646500 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccmm58eb.s 			page 216


 7601              	.LASF50:
 7602 0856 64657369 		.ascii	"desiredDelayInCounts\000"
 7602      72656444 
 7602      656C6179 
 7602      496E436F 
 7602      756E7473 
 7603              	.LASF32:
 7604 086b 636F6E66 		.ascii	"configRegValue\000"
 7604      69675265 
 7604      6756616C 
 7604      756500
 7605              	.LASF95:
 7606 087a 7764744C 		.ascii	"wdtLockState\000"
 7606      6F636B53 
 7606      74617465 
 7606      00
 7607              	.LASF112:
 7608 0887 6C66636C 		.ascii	"lfclkPosedgeWdtCounter0Mode\000"
 7608      6B506F73 
 7608      65646765 
 7608      57647443 
 7608      6F756E74 
 7609              	.LASF74:
 7610 08a3 63617363 		.ascii	"cascadeMask\000"
 7610      6164654D 
 7610      61736B00 
 7611              	.LASF16:
 7612 08af 63797374 		.ascii	"cystatus\000"
 7612      61747573 
 7612      00
 7613              	.LASF105:
 7614 08b8 43795379 		.ascii	"CySysWdtIsr\000"
 7614      73576474 
 7614      49737200 
 7615              	.LASF82:
 7616 08c4 43795379 		.ascii	"CySysWdtGetToggleBit\000"
 7616      73576474 
 7616      47657454 
 7616      6F67676C 
 7616      65426974 
 7617              	.LASF54:
 7618 08d9 43795379 		.ascii	"CySysClkIloCompensate\000"
 7618      73436C6B 
 7618      496C6F43 
 7618      6F6D7065 
 7618      6E736174 
 7619              	.LASF19:
 7620 08ef 43595F53 		.ascii	"CY_SYS_TIMER_INTERRUPT\000"
 7620      59535F54 
 7620      494D4552 
 7620      5F494E54 
 7620      45525255 
 7621              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran

ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_Sensing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_IsBusy,"ax",%progbits
  20              		.align	1
  21              		.global	CapSense_IsBusy
  22              		.code	16
  23              		.thumb_func
  24              		.type	CapSense_IsBusy, %function
  25              	CapSense_IsBusy:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC4\\CapSense_Sensing.c"
   1:Generated_Source\PSoC4/CapSense_Sensing.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CapSense_Sensing.c **** * \file CapSense_Sensing.c
   3:Generated_Source\PSoC4/CapSense_Sensing.c **** * \version 7.0
   4:Generated_Source\PSoC4/CapSense_Sensing.c **** *
   5:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
   6:Generated_Source\PSoC4/CapSense_Sensing.c **** *   This file contains the source of functions common for
   7:Generated_Source\PSoC4/CapSense_Sensing.c **** *   different sensing methods.
   8:Generated_Source\PSoC4/CapSense_Sensing.c **** *
   9:Generated_Source\PSoC4/CapSense_Sensing.c **** * \see CapSense v7.0 Datasheet
  10:Generated_Source\PSoC4/CapSense_Sensing.c **** *
  11:Generated_Source\PSoC4/CapSense_Sensing.c **** *//*****************************************************************************
  12:Generated_Source\PSoC4/CapSense_Sensing.c **** * Copyright (2016-2019), Cypress Semiconductor Corporation.
  13:Generated_Source\PSoC4/CapSense_Sensing.c **** ********************************************************************************
  14:Generated_Source\PSoC4/CapSense_Sensing.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  15:Generated_Source\PSoC4/CapSense_Sensing.c **** * protected by and subject to worldwide patent protection (United States and
  16:Generated_Source\PSoC4/CapSense_Sensing.c **** * foreign), United States copyright laws and international treaty provisions.
  17:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  18:Generated_Source\PSoC4/CapSense_Sensing.c **** * license to copy, use, modify, create derivative works of, and compile the
  19:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  20:Generated_Source\PSoC4/CapSense_Sensing.c **** * custom software in support of licensee product to be used only in conjunction
  21:Generated_Source\PSoC4/CapSense_Sensing.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  22:Generated_Source\PSoC4/CapSense_Sensing.c **** * Any reproduction, modification, translation, compilation, or representation of
  23:Generated_Source\PSoC4/CapSense_Sensing.c **** * this software except as specified above is prohibited without the express
  24:Generated_Source\PSoC4/CapSense_Sensing.c **** * written permission of Cypress.
  25:Generated_Source\PSoC4/CapSense_Sensing.c **** *
  26:Generated_Source\PSoC4/CapSense_Sensing.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  27:Generated_Source\PSoC4/CapSense_Sensing.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  28:Generated_Source\PSoC4/CapSense_Sensing.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  29:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress reserves the right to make changes without further notice to the
  30:Generated_Source\PSoC4/CapSense_Sensing.c **** * materials described herein. Cypress does not assume any liability arising out
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 2


  31:Generated_Source\PSoC4/CapSense_Sensing.c **** * of the application or use of any product or circuit described herein. Cypress
  32:Generated_Source\PSoC4/CapSense_Sensing.c **** * does not authorize its products for use as critical components in life-support
  33:Generated_Source\PSoC4/CapSense_Sensing.c **** * systems where a malfunction or failure may reasonably be expected to result in
  34:Generated_Source\PSoC4/CapSense_Sensing.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  35:Generated_Source\PSoC4/CapSense_Sensing.c **** * support systems application implies that the manufacturer assumes all risk of
  36:Generated_Source\PSoC4/CapSense_Sensing.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  37:Generated_Source\PSoC4/CapSense_Sensing.c **** * limited by and subject to the applicable Cypress software license agreement.
  38:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  40:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "cyfitter.h"
  41:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Configuration.h"
  42:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Structure.h"
  43:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Sensing.h"
  44:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
  45:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingCSX_LL.h"
  46:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  47:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
  48:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingISX_LL.h"
  49:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  50:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
  51:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingCSD_LL.h"
  52:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  53:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)
  54:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SmartSense_LL.h"
  55:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  56:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ADC_EN)
  57:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_Adc.h"
  58:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  59:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
  60:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SelfTest.h"
  61:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  62:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  63:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (0u != CapSense_ISX_EN)
  64:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_DigPrt2.h"
  65:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_USES_PORT_3)
  66:Generated_Source\PSoC4/CapSense_Sensing.c ****         #include "CapSense_DigPrt3.h"
  67:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
  68:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  69:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  70:Generated_Source\PSoC4/CapSense_Sensing.c **** /***************************************
  71:Generated_Source\PSoC4/CapSense_Sensing.c **** * API Constants
  72:Generated_Source\PSoC4/CapSense_Sensing.c **** ***************************************/
  73:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  74:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_IMO_FREQUENCY_OFFSET_MIN               (0u)
  75:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_IMO_FREQUENCY_OFFSET_MAX               (255u)
  76:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_AUTOTUNE_CALIBRATION_RESOLUTION        (12u)
  77:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_AUTOTUNE_CALIBRATION_FREQ_KHZ          (1500u)
  78:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_AUTOTUNE_CAL_LEVEL                     (CapSense_CSD_RAWCOUNT_CAL_LEVEL)
  79:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_AUTOTUNE_CAL_UNITS                     (1000u)
  80:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_AUTOTUNE_CP_MAX                        (69000Lu)
  81:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CLK_SOURCE_LFSR_SCALE_OFFSET           (4u)
  82:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  83:Generated_Source\PSoC4/CapSense_Sensing.c **** /* HW IP Block limitation */
  84:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
  85:Generated_Source\PSoC4/CapSense_Sensing.c ****     #define CapSense_CSD_SNS_FREQ_KHZ_MAX               (6000u)
  86:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
  87:Generated_Source\PSoC4/CapSense_Sensing.c ****     #define CapSense_CSD_SNS_FREQ_KHZ_MAX               (12600u)
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 3


  88:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
  89:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  90:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_FLIP_FLOP_DIV                          (1u)
  91:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  92:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_12000KHZ                   (12000uL)
  93:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_24000KHZ                   (24000uL)
  94:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_48000KHZ                   (48000uL)
  95:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  96:Generated_Source\PSoC4/CapSense_Sensing.c **** /*****************************************************************************/
  97:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Enumeration types definition                                              */
  98:Generated_Source\PSoC4/CapSense_Sensing.c **** /*****************************************************************************/
  99:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 100:Generated_Source\PSoC4/CapSense_Sensing.c **** typedef enum
 101:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 102:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RES_PULLUP_E   = 0x02u,
 103:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RES_PULLDOWN_E = 0x03u
 104:Generated_Source\PSoC4/CapSense_Sensing.c **** } CapSense_PORT_TEST_DM;
 105:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 106:Generated_Source\PSoC4/CapSense_Sensing.c **** typedef enum
 107:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 108:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_STS_RESET      = 0x01u,
 109:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_STS_NO_RESET   = 0x02u
 110:Generated_Source\PSoC4/CapSense_Sensing.c **** } CapSense_TEST_TYPE;
 111:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 112:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 113:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 114:Generated_Source\PSoC4/CapSense_Sensing.c **** * Static Function Prototypes
 115:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 116:Generated_Source\PSoC4/CapSense_Sensing.c **** /**
 117:Generated_Source\PSoC4/CapSense_Sensing.c **** * \cond SECTION_C_INTERNAL
 118:Generated_Source\PSoC4/CapSense_Sensing.c **** * \addtogroup group_c_internal
 119:Generated_Source\PSoC4/CapSense_Sensing.c **** * \{
 120:Generated_Source\PSoC4/CapSense_Sensing.c **** */
 121:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 122:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_DISABLE == CapSense_CSDV2)
 123:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsTrimIdacs(void);
 124:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 125:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_ENABLE == CapSense_ISX_EN) || \
 126:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG))
 127:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSinking(void);
 128:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
 129:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)) */
 130:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 131:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_ENABLE == CapSense_ISX_EN) || \
 132:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG))
 133:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSourcing(void);
 134:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
 135:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)) */
 136:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 137:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 138:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 139:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsCSDDisableMode(void);
 140:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 141:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
 142:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableCSXMode(void);
 143:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
 144:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 4


 145:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableISXMode(void);
 146:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
 147:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 148:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(((CapSense_ENABLE == CapSense_CSX_EN) && \
 149:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
 150:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) && \
 151:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)) ||\
 152:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSD_EN) && \
 153:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
 154:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)))
 155:Generated_Source\PSoC4/CapSense_Sensing.c ****     static uint8 CapSense_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum);
 156:Generated_Source\PSoC4/CapSense_Sensing.c ****     static uint8 CapSense_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize);
 157:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 158:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 159:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 160:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptr
 161:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 162:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 163:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
 164:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetTxClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptrWdg
 165:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 166:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 167:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 168:Generated_Source\PSoC4/CapSense_Sensing.c **** /** \}
 169:Generated_Source\PSoC4/CapSense_Sensing.c **** * \endcond */
 170:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 171:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 172:Generated_Source\PSoC4/CapSense_Sensing.c **** * Defines module variables
 173:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 174:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 175:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_SENSE_METHOD_ENUM CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
 176:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 177:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 178:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Module variable keep track of multi-frequency scan channel index */
 179:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 CapSense_scanFreqIndex = 0u;
 180:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Variable keep frequency offsets */
 181:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 CapSense_immunity[CapSense_NUM_SCAN_FREQS] = {0u, 0u, 0u};
 182:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
 183:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* const allows C-compiler to do optimization */
 184:Generated_Source\PSoC4/CapSense_Sensing.c ****     const uint8 CapSense_scanFreqIndex = 0u;
 185:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 186:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 187:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Global software variables */
 188:Generated_Source\PSoC4/CapSense_Sensing.c **** volatile uint8 CapSense_widgetIndex = 0u;    /* Index of the scanning widget */
 189:Generated_Source\PSoC4/CapSense_Sensing.c **** volatile uint8 CapSense_sensorIndex = 0u;    /* Index of the scanning sensor */
 190:Generated_Source\PSoC4/CapSense_Sensing.c **** uint8 CapSense_requestScanAllWidget = 0u;
 191:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 192:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Pointer to RAM_SNS_STRUCT structure */
 193:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_RAM_SNS_STRUCT *CapSense_curRamSnsPtr;
 194:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 195:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) || \
 196:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSX_EN) || \
 197:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_ISX_EN))
 198:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Pointer to Flash structure holding configuration of widget to be scanned */
 199:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_WD_STRUCT const *CapSense_curFlashWdgtPtr = 0u;
 200:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 201:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 5


 202:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
 203:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Pointer to Flash structure holding info of sensor to be scanned */
 204:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_SNS_STRUCT const *CapSense_curFlashSnsPtr = 0u;
 205:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 206:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 207:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Pointer to Flash structure to hold Sns electrode that was connected previously */
 208:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_FLASH_IO_STRUCT const *CapSense_curSnsIOPtr;
 209:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 210:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_IDAC_GAIN_TABLE_STRUCT const CapSense_idacGainTable[CapSense_IDAC_GAIN_NUMBER] = CapSense_
 211:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 212:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 213:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 214:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_IsBusy
 215:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 216:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 217:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 218:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the current status of the Component (Scan is completed or Scan is in
 219:Generated_Source\PSoC4/CapSense_Sensing.c **** *  progress).
 220:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 221:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 222:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function returns a status of the hardware block whether a scan is
 223:Generated_Source\PSoC4/CapSense_Sensing.c **** *  currently in progress or not. If the Component is busy, no new scan or Widget
 224:Generated_Source\PSoC4/CapSense_Sensing.c **** *  setup is made. The critical section (i.e. disable global interrupt)
 225:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is recommended for the application when the device transitions from
 226:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the active mode to sleep or deep sleep modes.
 227:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 228:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 229:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the current status of the Component:
 230:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CapSense_NOT_BUSY - No scan is in progress and a next scan
 231:Generated_Source\PSoC4/CapSense_Sensing.c **** *      can be initiated.
 232:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CapSense_SW_STS_BUSY - The previous scanning is not completed
 233:Generated_Source\PSoC4/CapSense_Sensing.c **** *      and the hardware block is busy.
 234:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 235:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 236:Generated_Source\PSoC4/CapSense_Sensing.c **** uint32 CapSense_IsBusy(void)
 237:Generated_Source\PSoC4/CapSense_Sensing.c **** {
  28              		.loc 1 237 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 238:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (CapSense_dsRam.status & CapSense_SW_STS_BUSY);
  33              		.loc 1 238 0
  34 0000 024B     		ldr	r3, .L2
 239:Generated_Source\PSoC4/CapSense_Sensing.c **** }
  35              		.loc 1 239 0
  36              		@ sp needed
 238:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (CapSense_dsRam.status & CapSense_SW_STS_BUSY);
  37              		.loc 1 238 0
  38 0002 D868     		ldr	r0, [r3, #12]
  39 0004 8023     		movs	r3, #128
  40 0006 1840     		ands	r0, r3
  41              		.loc 1 239 0
  42 0008 7047     		bx	lr
  43              	.L3:
  44 000a C046     		.align	2
  45              	.L2:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 6


  46 000c 00000000 		.word	CapSense_dsRam
  47              		.cfi_endproc
  48              	.LFE1:
  49              		.size	CapSense_IsBusy, .-CapSense_IsBusy
  50              		.section	.text.CapSense_SetupWidget,"ax",%progbits
  51              		.align	1
  52              		.global	CapSense_SetupWidget
  53              		.code	16
  54              		.thumb_func
  55              		.type	CapSense_SetupWidget, %function
  56              	CapSense_SetupWidget:
  57              	.LFB2:
 240:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 241:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 242:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SetupWidget
 243:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 244:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 245:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 246:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs the initialization required to scan the specified widget.
 247:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 248:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 249:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function prepares the Component to scan all the sensors in the specified
 250:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget by executing the following tasks:
 251:Generated_Source\PSoC4/CapSense_Sensing.c **** *    1. Re-initialize the hardware if it is not configured to perform the
 252:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensing method used by the specified widget, this happens only if multiple
 253:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensing methods are used in the Component.
 254:Generated_Source\PSoC4/CapSense_Sensing.c **** *    2. Initialize the hardware with specific sensing configuration (e.g.
 255:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensor clock, scan resolution) used by the widget.
 256:Generated_Source\PSoC4/CapSense_Sensing.c **** *    3. Disconnect all previously connected electrodes, if the electrodes
 257:Generated_Source\PSoC4/CapSense_Sensing.c **** *       connected by the lower level SetupWidgetExt() or ConnectSns() functions
 258:Generated_Source\PSoC4/CapSense_Sensing.c ****         and not disconnected.
 259:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 260:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function does not start sensor scanning, the CapSense_Scan()
 261:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function must be called to start the scan sensors in the widget. If this
 262:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function is called more than once, it does not break the Component operation,
 263:Generated_Source\PSoC4/CapSense_Sensing.c **** *  but only the last initialized widget is in effect.
 264:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 265:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param widgetId
 266:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID number of the widget to be initialized for scanning.
 267:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the widget ID can be found in the
 268:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as
 269:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_<WidgetName>_WDGT_ID.
 270:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 271:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 272:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the widget setting up operation:
 273:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_SUCCESS - The operation is successfully completed.
 274:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_BAD_PARAM - The widget is invalid or if the specified widget is
 275:Generated_Source\PSoC4/CapSense_Sensing.c **** *      disabled
 276:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_INVALID_STATE - The previous scanning is not completed and the
 277:Generated_Source\PSoC4/CapSense_Sensing.c **** *      hardware block is busy.
 278:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_UNKNOWN - An unknown sensing method is used by the widget or any
 279:Generated_Source\PSoC4/CapSense_Sensing.c **** *      other spurious error occurred.
 280:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 281:Generated_Source\PSoC4/CapSense_Sensing.c **** **********************************************************************************/
 282:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SetupWidget(uint32 widgetId)
 283:Generated_Source\PSoC4/CapSense_Sensing.c **** {
  58              		.loc 1 283 0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 7


  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62              	.LVL0:
 284:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
 285:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 286:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
  63              		.loc 1 286 0
  64 0000 8023     		movs	r3, #128
  65 0002 0A4A     		ldr	r2, .L12
 283:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
  66              		.loc 1 283 0
  67 0004 10B5     		push	{r4, lr}
  68              		.cfi_def_cfa_offset 8
  69              		.cfi_offset 4, -8
  70              		.cfi_offset 14, -4
  71              		.loc 1 286 0
  72 0006 D468     		ldr	r4, [r2, #12]
  73 0008 5B02     		lsls	r3, r3, #9
  74 000a 1C40     		ands	r4, r3
 287:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 288:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 289:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_INVALID_STATE;
  75              		.loc 1 289 0
  76 000c 1123     		movs	r3, #17
 286:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
  77              		.loc 1 286 0
  78 000e 002C     		cmp	r4, #0
  79 0010 09D1     		bne	.L10
  80 0012 103B     		subs	r3, r3, #16
 290:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 291:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 292:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  Check if widget id is valid, specified widget is enabled and widget did not
 293:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  detect any fault conditions if BIST is enabled. If all conditions are met,
 294:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  set widgetStatus as good, if not, set widgetStatus as bad.
 295:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 296:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if ((CapSense_TOTAL_WIDGETS > widgetId) &&
  81              		.loc 1 296 0
  82 0014 0328     		cmp	r0, #3
  83 0016 06D8     		bhi	.L10
  84              		.loc 1 296 0 is_stmt 0 discriminator 1
  85 0018 1269     		ldr	r2, [r2, #16]
  86 001a C240     		lsrs	r2, r2, r0
  87 001c 1A42     		tst	r2, r3
  88 001e 02D0     		beq	.L10
  89              	.LVL1:
 297:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)))
 298:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 299:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 300:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_SUCCESS;
 301:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 302:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 303:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 304:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_BAD_PARAM;
 305:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 306:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 307:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 8


 308:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Check widgetStatus flag that is set earlier, if flag is good, then set up only
 309:Generated_Source\PSoC4/CapSense_Sensing.c ****      * widget
 310:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 311:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CYRET_SUCCESS == widgetStatus)
 312:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 313:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
 314:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 315:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
 316:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
 317:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSX scan */
 318:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXSetupWidget(widgetId);
 319:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 320:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 321:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 322:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 323:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSD scan */
 324:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDSetupWidget(widgetId);
  90              		.loc 1 324 0 is_stmt 1
  91 0020 FFF7FEFF 		bl	CapSense_CSDSetupWidget
  92              	.LVL2:
 300:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
  93              		.loc 1 300 0
  94 0024 2300     		movs	r3, r4
  95              	.LVL3:
  96              	.L10:
 325:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 326:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 327:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 328:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 329:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for ISX scan */
 330:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXSetupWidget(widgetId);
 331:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 332:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 333:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 334:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Sensing method is invalid, return error to caller */
 335:Generated_Source\PSoC4/CapSense_Sensing.c ****             widgetStatus = CYRET_UNKNOWN;
 336:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 337:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 338:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 339:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (widgetStatus);
 340:Generated_Source\PSoC4/CapSense_Sensing.c **** }
  97              		.loc 1 340 0
  98 0026 1800     		movs	r0, r3
  99              		@ sp needed
 100 0028 10BD     		pop	{r4, pc}
 101              	.L13:
 102 002a C046     		.align	2
 103              	.L12:
 104 002c 00000000 		.word	CapSense_dsRam
 105              		.cfi_endproc
 106              	.LFE2:
 107              		.size	CapSense_SetupWidget, .-CapSense_SetupWidget
 108              		.section	.text.CapSense_Scan,"ax",%progbits
 109              		.align	1
 110              		.global	CapSense_Scan
 111              		.code	16
 112              		.thumb_func
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 9


 113              		.type	CapSense_Scan, %function
 114              	CapSense_Scan:
 115              	.LFB3:
 341:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 342:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 343:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 344:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_Scan
 345:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 346:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 347:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 348:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Initiates scanning of all the sensors in the widget initialized by
 349:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SetupWidget(), if no scan is in progress.
 350:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 351:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 352:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function is called only after the CapSense_SetupWidget()
 353:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function is called to start the scanning of the sensors in the widget. The
 354:Generated_Source\PSoC4/CapSense_Sensing.c **** *  status of a sensor scan must be checked using the CapSense_IsBusy()
 355:Generated_Source\PSoC4/CapSense_Sensing.c **** *  API prior to starting a next scan or setting up another widget.
 356:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 357:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 358:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the scan initiation operation:
 359:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 360:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the
 361:Generated_Source\PSoC4/CapSense_Sensing.c **** *    hardware block is busy.
 362:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - An unknown sensing method is used by the widget.
 363:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 364:Generated_Source\PSoC4/CapSense_Sensing.c **** ********************************************************************************/
 365:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_Scan(void)
 366:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 116              		.loc 1 366 0
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 0
 119              		@ frame_needed = 0, uses_anonymous_args = 0
 120              	.LVL4:
 367:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 368:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 369:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
 121              		.loc 1 369 0
 122 0000 094B     		ldr	r3, .L20
 366:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 123              		.loc 1 366 0
 124 0002 10B5     		push	{r4, lr}
 125              		.cfi_def_cfa_offset 8
 126              		.cfi_offset 4, -8
 127              		.cfi_offset 14, -4
 128              		.loc 1 369 0
 129 0004 DC68     		ldr	r4, [r3, #12]
 130 0006 8023     		movs	r3, #128
 131 0008 5B02     		lsls	r3, r3, #9
 132 000a 1C40     		ands	r4, r3
 370:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 371:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 372:Generated_Source\PSoC4/CapSense_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 133              		.loc 1 372 0
 134 000c 1120     		movs	r0, #17
 369:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 135              		.loc 1 369 0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 10


 136 000e 002C     		cmp	r4, #0
 137 0010 09D1     		bne	.L15
 138              	.LBB8:
 139              	.LBB9:
 373:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 374:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 375:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 376:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_currentSenseMethod)
 140              		.loc 1 376 0
 141 0012 064B     		ldr	r3, .L20+4
 142 0014 1B78     		ldrb	r3, [r3]
 143 0016 012B     		cmp	r3, #1
 144 0018 03D1     		bne	.L19
 377:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 378:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
 379:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
 380:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXScan();
 381:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 382:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 383:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 384:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 385:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDScan();
 145              		.loc 1 385 0
 146 001a FFF7FEFF 		bl	CapSense_CSDScan
 147              	.LVL5:
 367:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 148              		.loc 1 367 0
 149 001e 2000     		movs	r0, r4
 150 0020 01E0     		b	.L15
 151              	.L19:
 386:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 387:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 388:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 389:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 390:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXScan();
 391:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 392:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 393:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 394:Generated_Source\PSoC4/CapSense_Sensing.c ****             scanStatus = CYRET_UNKNOWN;
 152              		.loc 1 394 0
 153 0022 0120     		movs	r0, #1
 154 0024 4042     		rsbs	r0, r0, #0
 155              	.L15:
 156              	.LVL6:
 157              	.LBE9:
 158              	.LBE8:
 395:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 396:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 397:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 398:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (scanStatus);
 399:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 159              		.loc 1 399 0
 160              		@ sp needed
 161 0026 10BD     		pop	{r4, pc}
 162              	.L21:
 163              		.align	2
 164              	.L20:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 11


 165 0028 00000000 		.word	CapSense_dsRam
 166 002c 00000000 		.word	.LANCHOR0
 167              		.cfi_endproc
 168              	.LFE3:
 169              		.size	CapSense_Scan, .-CapSense_Scan
 170              		.section	.text.CapSense_ScanAllWidgets,"ax",%progbits
 171              		.align	1
 172              		.global	CapSense_ScanAllWidgets
 173              		.code	16
 174              		.thumb_func
 175              		.type	CapSense_ScanAllWidgets, %function
 176              	CapSense_ScanAllWidgets:
 177              	.LFB4:
 400:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 401:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 402:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 403:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_ScanAllWidgets
 404:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 405:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 406:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 407:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Initializes the first enabled widget and scanning of all the sensors in the
 408:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget, then the same process is repeated for all the widgets in the Component,
 409:Generated_Source\PSoC4/CapSense_Sensing.c **** *  i.e. scanning of all the widgets in the Component.
 410:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 411:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 412:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function initializes a widget and scans all the sensors in the widget,
 413:Generated_Source\PSoC4/CapSense_Sensing.c **** *  and then repeats the same for all the widgets in the Component. The tasks of
 414:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_SetupWidget() and CapSense_Scan() functions are
 415:Generated_Source\PSoC4/CapSense_Sensing.c **** *  executed by these functions. The status of a sensor scan must be checked
 416:Generated_Source\PSoC4/CapSense_Sensing.c **** *  using the CapSense_IsBusy() API prior to starting a next scan
 417:Generated_Source\PSoC4/CapSense_Sensing.c **** *  or setting up another widget.
 418:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 419:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 420:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the operation:
 421:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 422:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_BAD_PARAM - All the widgets are disabled.
 423:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the HW block is busy.
 424:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - There are unknown errors.
 425:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 426:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 427:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_ScanAllWidgets(void)
 428:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 178              		.loc 1 428 0
 179              		.cfi_startproc
 180              		@ args = 0, pretend = 0, frame = 0
 181              		@ frame_needed = 0, uses_anonymous_args = 0
 182              	.LVL7:
 429:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 430:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 431:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
 432:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 433:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_SW_STS_BUSY))
 183              		.loc 1 433 0
 184 0000 0C4B     		ldr	r3, .L30
 428:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 185              		.loc 1 428 0
 186 0002 10B5     		push	{r4, lr}
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 12


 187              		.cfi_def_cfa_offset 8
 188              		.cfi_offset 4, -8
 189              		.cfi_offset 14, -4
 190              		.loc 1 433 0
 191 0004 DC68     		ldr	r4, [r3, #12]
 192 0006 8023     		movs	r3, #128
 434:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 435:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 436:Generated_Source\PSoC4/CapSense_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 193              		.loc 1 436 0
 194 0008 1120     		movs	r0, #17
 433:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 195              		.loc 1 433 0
 196 000a 1C40     		ands	r4, r3
 197 000c 11D1     		bne	.L23
 198              	.LVL8:
 199              	.L27:
 437:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 438:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 439:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 440:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
 441:Generated_Source\PSoC4/CapSense_Sensing.c ****          *  Set up widget first widget.
 442:Generated_Source\PSoC4/CapSense_Sensing.c ****          *  If widget returned error, set up next, continue same until widget does not return error
 443:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
 444:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u;
 445:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex < CapSense_TOTAL_WIDGETS;
 446:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex++)
 447:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 448:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 449:Generated_Source\PSoC4/CapSense_Sensing.c ****             scanStatus = CapSense_SetupWidget(wdgtIndex);
 200              		.loc 1 449 0
 201 000e 2000     		movs	r0, r4
 202 0010 FFF7FEFF 		bl	CapSense_SetupWidget
 203              	.LVL9:
 450:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 451:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS == scanStatus)
 204              		.loc 1 451 0
 205 0014 0028     		cmp	r0, #0
 206 0016 09D1     		bne	.L24
 207 0018 074B     		ldr	r3, .L30+4
 452:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 453:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (0u != (CapSense_TOTAL_WIDGETS - 1u))
 454:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* If there are more than one widget to be scanned, request callback to scan ne
 455:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if ((CapSense_TOTAL_WIDGETS - 1u) > wdgtIndex)
 208              		.loc 1 455 0
 209 001a 032C     		cmp	r4, #3
 210 001c 02D0     		beq	.L25
 456:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 457:Generated_Source\PSoC4/CapSense_Sensing.c ****                          /* Request callback to scan next widget in ISR */
 458:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_ENABLE;
 211              		.loc 1 458 0
 212 001e 0122     		movs	r2, #1
 213 0020 5A70     		strb	r2, [r3, #1]
 214 0022 00E0     		b	.L26
 215              	.L25:
 459:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 460:Generated_Source\PSoC4/CapSense_Sensing.c ****                     else
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 13


 461:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 462:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Request to exit in ISR (Do not scan the next widgets) */
 463:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_DISABLE;
 216              		.loc 1 463 0
 217 0024 5870     		strb	r0, [r3, #1]
 218              	.L26:
 464:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 465:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else
 466:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 467:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Request to exit in ISR (We have only one widget) */
 468:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_DISABLE;
 469:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 470:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (0u != (CapSense_TOTAL_WIDGETS - 1u)) */
 471:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 472:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initiate scan and quit loop */
 473:Generated_Source\PSoC4/CapSense_Sensing.c ****                 scanStatus = CapSense_Scan();
 219              		.loc 1 473 0
 220 0026 FFF7FEFF 		bl	CapSense_Scan
 221              	.LVL10:
 474:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 475:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 222              		.loc 1 475 0
 223 002a 02E0     		b	.L23
 224              	.L24:
 446:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 225              		.loc 1 446 0
 226 002c 0134     		adds	r4, r4, #1
 227              	.LVL11:
 444:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex < CapSense_TOTAL_WIDGETS;
 228              		.loc 1 444 0
 229 002e 042C     		cmp	r4, #4
 230 0030 EDD1     		bne	.L27
 231              	.LVL12:
 232              	.L23:
 476:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 477:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 478:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 479:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 480:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (scanStatus);
 481:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 233              		.loc 1 481 0
 234              		@ sp needed
 235 0032 10BD     		pop	{r4, pc}
 236              	.L31:
 237              		.align	2
 238              	.L30:
 239 0034 00000000 		.word	CapSense_dsRam
 240 0038 00000000 		.word	.LANCHOR0
 241              		.cfi_endproc
 242              	.LFE4:
 243              		.size	CapSense_ScanAllWidgets, .-CapSense_ScanAllWidgets
 244              		.section	.text.CapSense_SetupWidgetExt,"ax",%progbits
 245              		.align	1
 246              		.global	CapSense_SetupWidgetExt
 247              		.code	16
 248              		.thumb_func
 249              		.type	CapSense_SetupWidgetExt, %function
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 14


 250              	CapSense_SetupWidgetExt:
 251              	.LFB5:
 482:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 483:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 484:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 485:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SetupWidgetExt
 486:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 487:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 488:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 489:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs extended initialization for the specified widget and also performs
 490:Generated_Source\PSoC4/CapSense_Sensing.c **** *  initialization required for a specific sensor in the widget. This function
 491:Generated_Source\PSoC4/CapSense_Sensing.c **** *  requires using the CapSense_ScanExt() function to initiate a scan.
 492:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 493:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 494:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function does the same as CapSense_SetupWidget() and also
 495:Generated_Source\PSoC4/CapSense_Sensing.c **** *  does the following tasks:
 496:Generated_Source\PSoC4/CapSense_Sensing.c **** *    1. Connects the first sensor of the widget.
 497:Generated_Source\PSoC4/CapSense_Sensing.c **** *    2. Configures the CSD HW block to perform a scan of the specified sensor.
 498:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 499:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Once this function is called to initialize a widget and a sensor, the
 500:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_ScanExt() function is called to scan the sensor.
 501:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 502:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function is called when no scanning is in progress. I.e.
 503:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_IsBusy() returns a non-busy status.
 504:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 505:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling this function directly from the application layer is not
 506:Generated_Source\PSoC4/CapSense_Sensing.c **** *  recommended. This function is used to implement only the user's specific
 507:Generated_Source\PSoC4/CapSense_Sensing.c **** *  use cases (for faster execution time or pipeline scanning for example).
 508:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 509:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param widgetId
 510:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID number of the widget to perform hardware and firmware
 511:Generated_Source\PSoC4/CapSense_Sensing.c **** *  initialization required for scanning the specific sensor in the specific
 512:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget.
 513:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the widget ID can be found in the CapSense
 514:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Configuration header file defined as CapSense_<WidgetName>_WDGT_ID.
 515:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 516:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param sensorId
 517:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID number of the sensor within the widget to perform hardware
 518:Generated_Source\PSoC4/CapSense_Sensing.c **** *  and firmware initialization required for scanning a specific sensor in a
 519:Generated_Source\PSoC4/CapSense_Sensing.c **** *  specific widget.
 520:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the sensor ID within a specified widget can be found in the
 521:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as
 522:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_<WidgetName>_SNS<SensorNumber>_ID
 523:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 524:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 525:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the operation:
 526:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - The operation is successfully completed.
 527:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_BAD_PARAM - The widget is invalid or if the specified widget is
 528:Generated_Source\PSoC4/CapSense_Sensing.c **** *    disabled
 529:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the
 530:Generated_Source\PSoC4/CapSense_Sensing.c **** *    hardware block is busy.
 531:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - An unknown sensing method is used by the widget or any
 532:Generated_Source\PSoC4/CapSense_Sensing.c **** *    other spurious error occurred.
 533:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 534:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 535:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SetupWidgetExt(uint32 widgetId, uint32 sensorId)
 536:Generated_Source\PSoC4/CapSense_Sensing.c **** {
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 15


 252              		.loc 1 536 0
 253              		.cfi_startproc
 254              		@ args = 0, pretend = 0, frame = 0
 255              		@ frame_needed = 0, uses_anonymous_args = 0
 256              	.LVL13:
 537:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
 538:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 539:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
 257              		.loc 1 539 0
 258 0000 8022     		movs	r2, #128
 259 0002 0D4B     		ldr	r3, .L41
 536:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
 260              		.loc 1 536 0
 261 0004 70B5     		push	{r4, r5, r6, lr}
 262              		.cfi_def_cfa_offset 16
 263              		.cfi_offset 4, -16
 264              		.cfi_offset 5, -12
 265              		.cfi_offset 6, -8
 266              		.cfi_offset 14, -4
 267              		.loc 1 539 0
 268 0006 DC68     		ldr	r4, [r3, #12]
 269 0008 5202     		lsls	r2, r2, #9
 270 000a 1440     		ands	r4, r2
 540:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 541:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 542:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_INVALID_STATE;
 271              		.loc 1 542 0
 272 000c 1122     		movs	r2, #17
 539:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 273              		.loc 1 539 0
 274 000e 002C     		cmp	r4, #0
 275 0010 10D1     		bne	.L39
 276 0012 103A     		subs	r2, r2, #16
 543:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 544:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 545:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  Check if widget id is valid, specified widget is enabled and widget did not
 546:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  detect any fault conditions if BIST is enabled. If all conditions are met,
 547:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  set widgetStatus as good, if not, set widgetStatus as bad.
 548:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 549:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if ((CapSense_TOTAL_WIDGETS > widgetId) &&
 277              		.loc 1 549 0
 278 0014 0328     		cmp	r0, #3
 279 0016 0DD8     		bhi	.L39
 280              		.loc 1 549 0 is_stmt 0 discriminator 1
 281 0018 1B69     		ldr	r3, [r3, #16]
 282 001a C340     		lsrs	r3, r3, r0
 283 001c 1342     		tst	r3, r2
 284 001e 09D0     		beq	.L39
 550:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)) &&
 551:Generated_Source\PSoC4/CapSense_Sensing.c ****         (sensorId < CapSense_GET_SENSOR_COUNT(widgetId)))
 285              		.loc 1 551 0 is_stmt 1
 286 0020 1C23     		movs	r3, #28
 287 0022 4343     		muls	r3, r0
 288 0024 054D     		ldr	r5, .L41+4
 289 0026 EB18     		adds	r3, r5, r3
 550:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)) &&
 290              		.loc 1 550 0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 16


 291 0028 1B8B     		ldrh	r3, [r3, #24]
 292 002a 8B42     		cmp	r3, r1
 293 002c 02D9     		bls	.L39
 294              	.LVL14:
 552:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 553:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 554:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_SUCCESS;
 555:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 556:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 557:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 558:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_BAD_PARAM;
 559:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 560:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 561:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 562:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Check widgetStatus flag that is set earlier, if flag is good, then set up only
 563:Generated_Source\PSoC4/CapSense_Sensing.c ****      * widget
 564:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 565:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CYRET_SUCCESS == widgetStatus)
 566:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 567:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
 568:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 569:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
 570:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
 571:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSX scan */
 572:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXSetupWidgetExt(widgetId, sensorId);
 573:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 574:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 575:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 576:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 577:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSD scan */
 578:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDSetupWidgetExt(widgetId, sensorId);
 295              		.loc 1 578 0
 296 002e FFF7FEFF 		bl	CapSense_CSDSetupWidgetExt
 297              	.LVL15:
 554:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 298              		.loc 1 554 0
 299 0032 2200     		movs	r2, r4
 300              	.LVL16:
 301              	.L39:
 579:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 580:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 581:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 582:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 583:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for ISX scan */
 584:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXSetupWidgetExt(widgetId, sensorId);
 585:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 586:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 587:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 588:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Sensing method is invalid, return error to caller */
 589:Generated_Source\PSoC4/CapSense_Sensing.c ****             widgetStatus = CYRET_UNKNOWN;
 590:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 591:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 592:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 593:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (widgetStatus);
 594:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 302              		.loc 1 594 0
 303 0034 1000     		movs	r0, r2
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 17


 304              		@ sp needed
 305 0036 70BD     		pop	{r4, r5, r6, pc}
 306              	.L42:
 307              		.align	2
 308              	.L41:
 309 0038 00000000 		.word	CapSense_dsRam
 310 003c 00000000 		.word	CapSense_dsFlash
 311              		.cfi_endproc
 312              	.LFE5:
 313              		.size	CapSense_SetupWidgetExt, .-CapSense_SetupWidgetExt
 314              		.section	.text.CapSense_ScanExt,"ax",%progbits
 315              		.align	1
 316              		.global	CapSense_ScanExt
 317              		.code	16
 318              		.thumb_func
 319              		.type	CapSense_ScanExt, %function
 320              	CapSense_ScanExt:
 321              	.LFB6:
 595:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 596:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 597:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 598:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_ScanExt
 599:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 600:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 601:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 602:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Starts a conversion on the pre-configured sensor. This function requires
 603:Generated_Source\PSoC4/CapSense_Sensing.c **** *  using the CapSense_SetupWidgetExt() function to set up the a
 604:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget.
 605:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 606:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 607:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function performs single scanning of one sensor in the widget configured
 608:Generated_Source\PSoC4/CapSense_Sensing.c **** *  by the CapSense_SetupWidgetExt() function.
 609:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 610:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling this function directly from the application layer is not
 611:Generated_Source\PSoC4/CapSense_Sensing.c **** *  recommended. This function is used to implement only the user's specific
 612:Generated_Source\PSoC4/CapSense_Sensing.c **** *  use cases (for faster execution time or pipeline scanning for example).
 613:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function is called when no scanning is in progress. I.e.
 614:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_IsBusy() returns a non-busy status.
 615:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 616:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The sensor must be preconfigured by using the
 617:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SetupWidgetExt() API prior to calling this function.
 618:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The sensor remains ready for a next scan if a previous scan was triggered
 619:Generated_Source\PSoC4/CapSense_Sensing.c **** *  by using the CapSense_ScanExt() function. In this case, calling
 620:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SetupWidgetExt() is not required every time before the
 621:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_ScanExt() function. If a previous scan was triggered in
 622:Generated_Source\PSoC4/CapSense_Sensing.c **** *  any other way - CapSense_Scan(), CapSense_ScanAllWidgets() or
 623:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_RunTuner() - (see the CapSense_RunTuner() function
 624:Generated_Source\PSoC4/CapSense_Sensing.c **** *  description for more details), the sensor must be preconfigured again by
 625:Generated_Source\PSoC4/CapSense_Sensing.c **** *  using the CapSense_SetupWidgetExt() API prior to calling the
 626:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_ScanExt() function.
 627:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 628:Generated_Source\PSoC4/CapSense_Sensing.c **** *  If disconnection of the sensors is required after calling
 629:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_ScanExt(), the CapSense_CSDDisconnectSns() or
 630:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_CSXDisconnectTx() or CapSense_CSXDisconnectRx()
 631:Generated_Source\PSoC4/CapSense_Sensing.c **** *  functions can be used.
 632:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 633:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 18


 634:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the scan initiation operation:
 635:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 636:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the
 637:Generated_Source\PSoC4/CapSense_Sensing.c **** *    hardware block is busy.
 638:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - An unknown sensing method is used by the widget.
 639:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 640:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 641:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_ScanExt(void)
 642:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 322              		.loc 1 642 0
 323              		.cfi_startproc
 324              		@ args = 0, pretend = 0, frame = 0
 325              		@ frame_needed = 0, uses_anonymous_args = 0
 326              	.LVL17:
 643:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 644:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 645:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
 327              		.loc 1 645 0
 328 0000 094B     		ldr	r3, .L49
 642:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 329              		.loc 1 642 0
 330 0002 10B5     		push	{r4, lr}
 331              		.cfi_def_cfa_offset 8
 332              		.cfi_offset 4, -8
 333              		.cfi_offset 14, -4
 334              		.loc 1 645 0
 335 0004 DC68     		ldr	r4, [r3, #12]
 336 0006 8023     		movs	r3, #128
 337 0008 5B02     		lsls	r3, r3, #9
 338 000a 1C40     		ands	r4, r3
 646:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 647:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 648:Generated_Source\PSoC4/CapSense_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 339              		.loc 1 648 0
 340 000c 1120     		movs	r0, #17
 645:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 341              		.loc 1 645 0
 342 000e 002C     		cmp	r4, #0
 343 0010 09D1     		bne	.L44
 649:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 650:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 651:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 652:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_currentSenseMethod)
 344              		.loc 1 652 0
 345 0012 064B     		ldr	r3, .L49+4
 346 0014 1B78     		ldrb	r3, [r3]
 347 0016 012B     		cmp	r3, #1
 348 0018 03D1     		bne	.L48
 653:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 654:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
 655:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
 656:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXScanExt();
 657:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 658:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 659:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 660:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 661:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDScanExt();
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 19


 349              		.loc 1 661 0
 350 001a FFF7FEFF 		bl	CapSense_CSDScanExt
 351              	.LVL18:
 643:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 352              		.loc 1 643 0
 353 001e 2000     		movs	r0, r4
 662:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 354              		.loc 1 662 0
 355 0020 01E0     		b	.L44
 356              	.L48:
 663:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 664:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 665:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 666:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXScanExt();
 667:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 668:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 669:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 670:Generated_Source\PSoC4/CapSense_Sensing.c ****             scanStatus = CYRET_UNKNOWN;
 357              		.loc 1 670 0
 358 0022 0120     		movs	r0, #1
 359 0024 4042     		rsbs	r0, r0, #0
 360              	.L44:
 361              	.LVL19:
 671:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 672:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 673:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 674:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (scanStatus);
 675:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 362              		.loc 1 675 0
 363              		@ sp needed
 364 0026 10BD     		pop	{r4, pc}
 365              	.L50:
 366              		.align	2
 367              	.L49:
 368 0028 00000000 		.word	CapSense_dsRam
 369 002c 00000000 		.word	.LANCHOR0
 370              		.cfi_endproc
 371              	.LFE6:
 372              		.size	CapSense_ScanExt, .-CapSense_ScanExt
 373              		.section	.text.CapSense_SetPinState,"ax",%progbits
 374              		.align	1
 375              		.global	CapSense_SetPinState
 376              		.code	16
 377              		.thumb_func
 378              		.type	CapSense_SetPinState, %function
 379              	CapSense_SetPinState:
 380              	.LFB8:
 676:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 677:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 678:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 679:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsInitialize
 680:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 681:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 682:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 683:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 684:Generated_Source\PSoC4/CapSense_Sensing.c **** *  of the CapSense Component. This function is called from
 685:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_Start() API prior to calling any other APIs of the Component.
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 20


 686:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 687:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 688:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 689:Generated_Source\PSoC4/CapSense_Sensing.c **** *  of the CapSense Component. This function is called from
 690:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_Start() API prior to calling any other APIs of the Component.
 691:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Depending on the configuration, the function initializes the CSD block
 692:Generated_Source\PSoC4/CapSense_Sensing.c **** *     for the corresponding sensing mode.
 693:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. The function updates the dsRam.wdgtWorking variable with 1 when Self-test
 694:Generated_Source\PSoC4/CapSense_Sensing.c **** *     is enabled.
 695:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 696:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling the CapSense_Start API is the recommended method to initialize
 697:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense Component at power-up. The CapSense_SsInitialize()
 698:Generated_Source\PSoC4/CapSense_Sensing.c **** *  API should not be used for initialization, resume, or wake-up operations.
 699:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The dsRam.wdgtWorking variable is updated.
 700:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 701:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return status
 702:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns status of operation:
 703:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Zero        - Indicates successful initialization.
 704:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Non-zero    - One or more errors occurred in the initialization process.
 705:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 706:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 707:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SsInitialize(void)
 708:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 709:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus initStatus;
 710:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 711:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) &&\
 712:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_MFS_IMO == CapSense_MFS_METHOD))
 713:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 centerFreqTrim;
 714:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 715:Generated_Source\PSoC4/CapSense_Sensing.c ****         centerFreqTrim = (uint8)CY_GET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR);
 716:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_immunity[CapSense_FREQ_CHANNEL_0] = centerFreqTrim;
 717:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 718:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (centerFreqTrim < CapSense_IMO_FREQUENCY_OFFSET_F1)
 719:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 720:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim + CapSense_IMO_FREQUENCY_OF
 721:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim + (CapSense_IMO_FREQUENCY_O
 722:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                            CapSense
 723:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 724:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (centerFreqTrim > (CapSense_IMO_FREQUENCY_OFFSET_MAX - CapSense_IMO_FREQUENCY_OFFSE
 725:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 726:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim - CapSense_IMO_FREQUENCY_OF
 727:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim - (CapSense_IMO_FREQUENCY_O
 728:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                            CapSense
 729:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 730:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 731:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 732:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim - CapSense_IMO_FREQUENCY_OF
 733:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim + CapSense_IMO_FREQUENCY_OF
 734:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 735:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 736:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) &&\
 737:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_MFS_IMO == CapSense_MFS_METHOD)) */
 738:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 739:Generated_Source\PSoC4/CapSense_Sensing.c ****     initStatus = CYRET_SUCCESS;
 740:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 741:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_DISABLE == CapSense_CSDV2)
 742:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsTrimIdacs();
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 21


 743:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 744:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 745:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if((CapSense_ENABLE == CapSense_CSD_EN) ||\
 746:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2)))
 747:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsInitializeSourceSenseClk();
 748:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) ||\
 749:Generated_Source\PSoC4/CapSense_Sensing.c ****               ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))) */
 750:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 751:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Set all IO states to the default state */
 752:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetAllIOsState((uint32)CapSense_SNS_CONNECTION_GROUND);
 753:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_dsRam.scanCurrentISC = CapSense_SNS_CONNECTION_GROUND;
 754:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 755:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSwitchSensingMode(CapSense_UNDEFINED_E);
 756:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_MANY_SENSE_MODES_EN)
 757:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSD_EN)
 758:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_CSD_E);
 759:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSX_EN)
 760:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_CSX_E);
 761:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_ISX_EN)
 762:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_ISX_E);
 763:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
 764:Generated_Source\PSoC4/CapSense_Sensing.c ****         #error "No sensing method enabled, Component cannot work in this mode"
 765:Generated_Source\PSoC4/CapSense_Sensing.c ****         initStatus = CYRET_UNKNOWN;
 766:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
 767:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 768:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (initStatus);
 769:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 770:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 771:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 772:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 773:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SetPinState
 774:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 775:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 776:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 777:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the state (drive mode and output state) of the port pin used by a sensor.
 778:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The possible states are GND, Shield, High-Z, Tx or Rx, Sensor. If the sensor
 779:Generated_Source\PSoC4/CapSense_Sensing.c **** *  specified in the input parameter is a ganged sensor, then the state of all pins
 780:Generated_Source\PSoC4/CapSense_Sensing.c **** *  associated with the ganged sensor is updated.
 781:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 782:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 783:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function sets a specified state for a specified sensor element. For the
 784:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CSD widgets, sensor element is a sensor ID, for the CSX widgets, it is either
 785:Generated_Source\PSoC4/CapSense_Sensing.c **** *  an Rx or Tx electrode ID. If the specified sensor is a ganged sensor, then
 786:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the specified state is set for all the electrodes belong to the sensor.
 787:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function must not be called while the Component is in the busy state.
 788:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 789:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function accepts the CapSense_SHIELD and
 790:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SENSOR states as an input only if there is at least
 791:Generated_Source\PSoC4/CapSense_Sensing.c **** *  one CSD widget. Similarly, this function accepts the CapSense_TX_PIN
 792:Generated_Source\PSoC4/CapSense_Sensing.c **** *  and CapSense_RX_PIN states as an input only if there is at least
 793:Generated_Source\PSoC4/CapSense_Sensing.c **** *  one CSX widget in the project.
 794:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 795:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling this function directly from the application layer is not
 796:Generated_Source\PSoC4/CapSense_Sensing.c **** *  recommended. This function is used to implement only the custom-specific
 797:Generated_Source\PSoC4/CapSense_Sensing.c **** *  use cases. Functions that perform a setup and scan of a sensor/widget
 798:Generated_Source\PSoC4/CapSense_Sensing.c **** *  automatically set the required pin states. They ignore changes
 799:Generated_Source\PSoC4/CapSense_Sensing.c **** *  in the design made by the CapSense_SetPinState() function.
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 22


 800:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function neither check wdgtIndex nor sensorElement for the correctness.
 801:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 802:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param widgetId
 803:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID of the widget to change the pin state of the specified
 804:Generated_Source\PSoC4/CapSense_Sensing.c **** *  sensor.
 805:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the widget ID can be found in the CapSense Configuration
 806:Generated_Source\PSoC4/CapSense_Sensing.c **** *  header file defined as CapSense_<WidgetName>_WDGT_ID.
 807:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 808:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param sensorElement
 809:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID of the sensor element within the widget to change
 810:Generated_Source\PSoC4/CapSense_Sensing.c **** *  its pin state.
 811:Generated_Source\PSoC4/CapSense_Sensing.c **** *  \if SECTION_C_LOW_LEVEL
 812:Generated_Source\PSoC4/CapSense_Sensing.c **** *  For the CSD widgets, sensorElement is the sensor ID and can be found in the
 813:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as
 814:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_SNS<SensorNumber>_ID.
 815:Generated_Source\PSoC4/CapSense_Sensing.c **** *  For the CSX widgets, sensorElement is defined either as Rx ID or Tx ID.
 816:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The first Rx in a widget corresponds to sensorElement = 0, the second
 817:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Rx in a widget corresponds to sensorElement = 1, and so on.
 818:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The last Tx in a widget corresponds to sensorElement = (RxNum + TxNum).
 819:Generated_Source\PSoC4/CapSense_Sensing.c **** *  \endif
 820:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Macros for Rx and Tx IDs can be found in the
 821:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as:
 822:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_RX<RXNumber>_ID
 823:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_TX<TXNumber>_ID.
 824:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 825:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param state
 826:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the state of the sensor to be set:
 827:Generated_Source\PSoC4/CapSense_Sensing.c **** *     1. CapSense_GROUND - The pin is connected to the ground.
 828:Generated_Source\PSoC4/CapSense_Sensing.c **** *     2. CapSense_HIGHZ - The drive mode of the pin is set to High-Z
 829:Generated_Source\PSoC4/CapSense_Sensing.c **** *        Analog.
 830:Generated_Source\PSoC4/CapSense_Sensing.c **** *     3. CapSense_SHIELD - The shield signal is routed to the pin
 831:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSD sensing method with shield electrode is enabled).
 832:Generated_Source\PSoC4/CapSense_Sensing.c **** *     4. CapSense_SENSOR - The pin is connected to the scanning bus
 833:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSD sensing method is enabled).
 834:Generated_Source\PSoC4/CapSense_Sensing.c **** *     5. CapSense_TX_PIN - The Tx or Lx signal is routed to the sensor
 835:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSX or ISX sensing method is enabled).
 836:Generated_Source\PSoC4/CapSense_Sensing.c **** *     6. CapSense_RX_PIN - The pin is connected to the scanning bus
 837:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSX or ISX sensing method is enabled).
 838:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 839:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 840:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SetPinState(uint32 widgetId, uint32 sensorElement, uint32 state)
 841:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 381              		.loc 1 841 0
 382              		.cfi_startproc
 383              		@ args = 0, pretend = 0, frame = 0
 384              		@ frame_needed = 0, uses_anonymous_args = 0
 385              	.LVL20:
 386 0000 70B5     		push	{r4, r5, r6, lr}
 387              		.cfi_def_cfa_offset 16
 388              		.cfi_offset 4, -16
 389              		.cfi_offset 5, -12
 390              		.cfi_offset 6, -8
 391              		.cfi_offset 14, -4
 842:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdNum;
 843:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdIndex;
 844:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8  interruptState;
 845:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_IO_STRUCT const *ioPtr;
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 23


 846:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_GANGED_SNS_EN)
 847:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_FLASH_SNS_STRUCT const *curFlashSnsPtr;
 848:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
 849:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 850:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Getting sensor element pointer and number of electrodes */
 851:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_GANGED_SNS_EN)
 852:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Check the ganged sns flag */
 853:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_GANGED_SNS_MASK == (CapSense_dsFlash.wdgtArray[widgetId].staticConfig & CapSen
 854:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 855:Generated_Source\PSoC4/CapSense_Sensing.c ****             curFlashSnsPtr = CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsFlash;
 856:Generated_Source\PSoC4/CapSense_Sensing.c ****             curFlashSnsPtr += sensorElement;
 857:Generated_Source\PSoC4/CapSense_Sensing.c ****             ioPtr = &CapSense_ioList[curFlashSnsPtr->firstPinId];
 858:Generated_Source\PSoC4/CapSense_Sensing.c ****             eltdNum = curFlashSnsPtr->numPins;
 859:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 860:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 861:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 862:Generated_Source\PSoC4/CapSense_Sensing.c ****             ioPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsF
 863:Generated_Source\PSoC4/CapSense_Sensing.c ****             eltdNum = 1u;
 864:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 865:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
 866:Generated_Source\PSoC4/CapSense_Sensing.c ****         ioPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsFlash
 392              		.loc 1 866 0
 393 0002 1C24     		movs	r4, #28
 394 0004 6043     		muls	r0, r4
 395              	.LVL21:
 396 0006 204B     		ldr	r3, .L60
 397 0008 4C43     		muls	r4, r1
 398 000a C158     		ldr	r1, [r0, r3]
 399              	.LVL22:
 841:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdNum;
 400              		.loc 1 841 0
 401 000c 1500     		movs	r5, r2
 402              		.loc 1 866 0
 403 000e 0C19     		adds	r4, r1, r4
 404              	.LVL23:
 867:Generated_Source\PSoC4/CapSense_Sensing.c ****         eltdNum = 1u;
 868:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
 869:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 870:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Loop through all electrodes of the specified sensor element */
 871:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (eltdIndex = 0u; eltdIndex < eltdNum; eltdIndex++)
 872:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 873:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Reset HSIOM and PC registers */
 874:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 405              		.loc 1 874 0
 406 0010 FFF7FEFF 		bl	CyEnterCriticalSection
 407              	.LVL24:
 875:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(CapSense_HSIOM_SEL_MASK << 
 408              		.loc 1 875 0
 409 0014 0F22     		movs	r2, #15
 410 0016 267E     		ldrb	r6, [r4, #24]
 411 0018 2168     		ldr	r1, [r4]
 412 001a B240     		lsls	r2, r2, r6
 413 001c 0B68     		ldr	r3, [r1]
 414 001e 9343     		bics	r3, r2
 876:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << ioPtr->s
 415              		.loc 1 876 0
 416 0020 0722     		movs	r2, #7
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 24


 875:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(CapSense_HSIOM_SEL_MASK << 
 417              		.loc 1 875 0
 418 0022 0B60     		str	r3, [r1]
 419              		.loc 1 876 0
 420 0024 A67E     		ldrb	r6, [r4, #26]
 421 0026 6168     		ldr	r1, [r4, #4]
 422 0028 B240     		lsls	r2, r2, r6
 423 002a 0B68     		ldr	r3, [r1]
 424 002c 9343     		bics	r3, r2
 425 002e 0B60     		str	r3, [r1]
 877:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 426              		.loc 1 877 0
 427 0030 FFF7FEFF 		bl	CyExitCriticalSection
 428              	.LVL25:
 878:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 879:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (state)
 429              		.loc 1 879 0
 430 0034 032D     		cmp	r5, #3
 431 0036 26D8     		bhi	.L51
 432 0038 2800     		movs	r0, r5
 433 003a FFF7FEFF 		bl	__gnu_thumb1_case_uqi
 434              	.L54:
 435 003e 02       		.byte	(.L53-.L54)/2
 436 003f 0C       		.byte	(.L55-.L54)/2
 437 0040 19       		.byte	(.L56-.L54)/2
 438 0041 15       		.byte	(.L57-.L54)/2
 439              		.p2align 1
 440              	.L53:
 880:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 881:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_GROUND:
 882:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 883:Generated_Source\PSoC4/CapSense_Sensing.c ****             interruptState = CyEnterCriticalSection();
 441              		.loc 1 883 0
 442 0042 FFF7FEFF 		bl	CyEnterCriticalSection
 443              	.LVL26:
 884:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_SNS_GROUND_CONNECT <<
 444              		.loc 1 884 0
 445 0046 0623     		movs	r3, #6
 446 0048 A57E     		ldrb	r5, [r4, #26]
 447              	.LVL27:
 448 004a 6168     		ldr	r1, [r4, #4]
 449 004c AB40     		lsls	r3, r3, r5
 450 004e 0A68     		ldr	r2, [r1]
 451 0050 1343     		orrs	r3, r2
 452 0052 0B60     		str	r3, [r1]
 453 0054 01E0     		b	.L59
 454              	.LVL28:
 455              	.L55:
 885:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
 886:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 887:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 888:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 889:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_HIGHZ:
 890:Generated_Source\PSoC4/CapSense_Sensing.c ****             interruptState = CyEnterCriticalSection();
 456              		.loc 1 890 0
 457 0056 FFF7FEFF 		bl	CyEnterCriticalSection
 458              	.LVL29:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 25


 459              	.L59:
 891:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 460              		.loc 1 891 0
 461 005a 0122     		movs	r2, #1
 462 005c A168     		ldr	r1, [r4, #8]
 463 005e 647E     		ldrb	r4, [r4, #25]
 464              	.LVL30:
 465 0060 0B68     		ldr	r3, [r1]
 466 0062 A240     		lsls	r2, r2, r4
 467 0064 9343     		bics	r3, r2
 468 0066 0BE0     		b	.L58
 469              	.LVL31:
 470              	.L57:
 892:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 893:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 894:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 895:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 896:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSOR:
 897:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Enable sensor */
 898:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDConnectSns(ioPtr);
 471              		.loc 1 898 0
 472 0068 2000     		movs	r0, r4
 473              	.LVL32:
 474 006a FFF7FEFF 		bl	CapSense_CSDConnectSns
 475              	.LVL33:
 899:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 476              		.loc 1 899 0
 477 006e 0AE0     		b	.L51
 478              	.LVL34:
 479              	.L56:
 900:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 901:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 902:Generated_Source\PSoC4/CapSense_Sensing.c ****                 case CapSense_SHIELD:
 903:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Set appropriate bit in HSIOM register to configure pin to shield mode */
 904:Generated_Source\PSoC4/CapSense_Sensing.c ****                     interruptState = CyEnterCriticalSection();
 480              		.loc 1 904 0
 481 0070 FFF7FEFF 		bl	CyEnterCriticalSection
 482              	.LVL35:
 905:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_S
 483              		.loc 1 905 0
 484 0074 0523     		movs	r3, #5
 485 0076 2168     		ldr	r1, [r4]
 486 0078 247E     		ldrb	r4, [r4, #24]
 487              	.LVL36:
 488 007a 0A68     		ldr	r2, [r1]
 489 007c A340     		lsls	r3, r3, r4
 490 007e 1343     		orrs	r3, r2
 491              	.LVL37:
 492              	.L58:
 493 0080 0B60     		str	r3, [r1]
 906:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CyExitCriticalSection(interruptState);
 494              		.loc 1 906 0
 495 0082 FFF7FEFF 		bl	CyExitCriticalSection
 496              	.LVL38:
 497              	.L51:
 907:Generated_Source\PSoC4/CapSense_Sensing.c ****                     break;
 908:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 26


 909:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 910:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 911:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 912:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_ISX_EN))
 913:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_TX_PIN:
 914:Generated_Source\PSoC4/CapSense_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 915:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_SEL_C
 916:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_GPIO_STRGDRV << i
 917:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CyExitCriticalSection(interruptState);
 918:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 919:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 920:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_RX_PIN:
 921:Generated_Source\PSoC4/CapSense_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 922:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_SEL_A
 923:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << 
 924:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CyExitCriticalSection(interruptState);
 925:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 926:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 927:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 928:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 929:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Wrong state */
 930:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 931:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 932:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 933:Generated_Source\PSoC4/CapSense_Sensing.c ****         ioPtr++;
 934:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 935:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 498              		.loc 1 935 0
 499              		@ sp needed
 500 0086 70BD     		pop	{r4, r5, r6, pc}
 501              	.L61:
 502              		.align	2
 503              	.L60:
 504 0088 00000000 		.word	CapSense_dsFlash
 505              		.cfi_endproc
 506              	.LFE8:
 507              		.size	CapSense_SetPinState, .-CapSense_SetPinState
 508              		.section	.text.CapSense_SsSetAllIOsState,"ax",%progbits
 509              		.align	1
 510              		.global	CapSense_SsSetAllIOsState
 511              		.code	16
 512              		.thumb_func
 513              		.type	CapSense_SsSetAllIOsState, %function
 514              	CapSense_SsSetAllIOsState:
 515              	.LFB11:
 936:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 937:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 938:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
 939:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsCSDDisableMode
 940:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
 941:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 942:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
 943:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables CSD mode.
 944:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 945:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
 946:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable CSD mode the following tasks are performed:
 947:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect Cmod from AMUXBUS-A.
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 27


 948:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 949:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  3. Disconnect Csh from AMUXBUS-B.
 950:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  4. Disable Shield Electrodes.
 951:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 952:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
 953:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsCSDDisableMode(void)
 954:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 955:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSDV2) && \
 956:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN))
 957:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 958:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 newRegValue;
 959:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 960:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Disconnect IDACA and IDACB */
 961:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue = CY_GET_REG32(CapSense_SW_REFGEN_SEL_PTR);
 962:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue &= (uint32)(~CapSense_SW_REFGEN_SEL_SW_IAIB_MASK);
 963:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_SW_REFGEN_SEL_PTR, newRegValue);
 964:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSDV2) && \
 965:Generated_Source\PSoC4/CapSense_Sensing.c ****                    (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)) */
 966:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 967:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Cmod from AMUXBUS-A using HSIOM registers */
 968:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_WriteBitsSafe(CapSense_CMOD_HSIOM_PTR, CapSense_CMOD_HSIOM_MASK, 0u);
 969:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 970:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous CSD electrode if it has been connected */
 971:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsCSDElectrodeCheck();
 972:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 973:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Csh from AMUXBUS-B */
 974:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 975:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
 976:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CSH_HSIOM_PTR, CapSense_CSH_HSIOM_MASK, 0u);
 977:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 978:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 979:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 980:Generated_Source\PSoC4/CapSense_Sensing.c ****              (0u != CapSense_CSD_TOTAL_SHIELD_COUNT))
 981:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsCSDDisableShieldElectrodes();
 982:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 983:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 984:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 985:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 986:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 987:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
 988:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
 989:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsDisableCSXMode
 990:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
 991:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 992:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
 993:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables CSX mode.
 994:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 995:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
 996:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable CSX mode the following tasks are performed:
 997:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A.
 998:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 999:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1000:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1001:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableCSXMode(void)
1002:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1003:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers */
1004:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_WriteBitsSafe(CapSense_CintA_HSIOM_PTR, CapSense_CintA_HSIOM_MASK, 0u);
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 28


1005:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers */
1006:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_WriteBitsSafe(CapSense_CintB_HSIOM_PTR, CapSense_CintB_HSIOM_MASK, 0u);
1007:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous CSX electrode if it has been connected */
1008:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_CSXElectrodeCheck();
1009:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1010:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1011:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1012:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1013:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
1014:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1015:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsDisableISXMode
1016:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1017:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1018:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1019:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables ISX mode.
1020:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1021:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1022:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable ISX mode the following tasks are performed:
1023:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A
1024:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous ISX electrode if it has been connected
1025:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1026:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1027:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableISXMode(void)
1028:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1029:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers */
1030:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_WriteBitsSafe(CapSense_CintA_HSIOM_PTR, CapSense_CintA_HSIOM_MASK, 0u);
1031:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers */
1032:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_WriteBitsSafe(CapSense_CintB_HSIOM_PTR, CapSense_CintB_HSIOM_MASK, 0u);
1033:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous ISX electrode if it has been connected */
1034:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_ISXElectrodeCheck();
1035:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_DigPrt2_Stop();
1036:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_USES_PORT_3)
1037:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_DigPrt3_Stop();
1038:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
1039:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1040:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
1041:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1042:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1043:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1044:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSwitchSensingMode
1045:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1046:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1047:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1048:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function changes the Сomponent settings for operation in a specified
1049:Generated_Source\PSoC4/CapSense_Sensing.c **** *  sensing mode.
1050:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1051:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1052:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function performs following tasks:
1053:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Releasing the CSD HW block.
1054:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. Disconnecting external capacitors.
1055:Generated_Source\PSoC4/CapSense_Sensing.c **** *  3. Setting new mode.
1056:Generated_Source\PSoC4/CapSense_Sensing.c **** *  4. Configuring HW to the new sensing mode.
1057:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1058:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param mode
1059:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the scan mode:
1060:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_CSD_E
1061:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_CSX_E
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 29


1062:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_ISX_E
1063:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_BIST_E
1064:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_UNDEFINED_E
1065:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1066:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1067:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_ENUM mode)
1068:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1069:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_currentSenseMethod != mode)
1070:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1071:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* The requested mode differs to the current one. Disable the current mode */
1072:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_SENSE_METHOD_CSD_E == CapSense_currentSenseMethod)
1073:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1074:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_EN)
1075:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsCSDDisableMode();
1076:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
1077:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1078:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_CSX_E == CapSense_currentSenseMethod)
1079:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1080:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSX_EN)
1081:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsDisableCSXMode();
1082:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1083:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1084:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_ISX_E == CapSense_currentSenseMethod)
1085:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1086:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ISX_EN)
1087:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsDisableISXMode();
1088:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
1089:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1090:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_BIST_E == CapSense_currentSenseMethod)
1091:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1092:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
1093:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_BistDisableMode();
1094:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1095:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1096:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
1097:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1098:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ADC_EN)
1099:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Release ADC resources */
1100:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)CapSense_AdcReleaseResources();
1101:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
1102:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1103:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1104:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Enable the specified mode */
1105:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_SENSE_METHOD_CSD_E == mode)
1106:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1107:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_EN)
1108:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize CSD mode to guarantee configured CSD mode */
1109:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsCSDInitialize();
1110:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSD_E;
1111:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
1112:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1113:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_CSX_E == mode)
1114:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1115:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSX_EN)
1116:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize CSX mode to guarantee configured CSX mode */
1117:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXInitialize();
1118:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSX_E;
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 30


1119:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1120:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1121:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_ISX_E == mode)
1122:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1123:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ISX_EN)
1124:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize ISX mode to guarantee configured ISX mode */
1125:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXInitialize();
1126:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_ISX_E;
1127:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
1128:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1129:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_BIST_E == mode)
1130:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1131:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
1132:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_BistInitialize();
1133:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_BIST_E;
1134:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1135:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1136:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
1137:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1138:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
1139:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1140:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1141:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1142:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1143:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1144:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1145:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetAllIOsState
1146:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1147:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1148:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1149:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all electrodes into a default state.
1150:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1151:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1152:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all the CSD/CSX IOs into a default state:
1153:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
1154:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - DM      - Strong drive.
1155:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - State   - Zero.
1156:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1157:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all the ADC channels into a default state:
1158:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
1159:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - DM      - HiZ-Analog.
1160:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - State   - Zero.
1161:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1162:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly from the application
1163:Generated_Source\PSoC4/CapSense_Sensing.c **** *  layer.
1164:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1165:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1166:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetAllIOsState(uint32 state)
1167:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 516              		.loc 1 1167 0
 517              		.cfi_startproc
 518              		@ args = 0, pretend = 0, frame = 8
 519              		@ frame_needed = 0, uses_anonymous_args = 0
 520              	.LVL39:
 521 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 522              		.cfi_def_cfa_offset 32
 523              		.cfi_offset 0, -32
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 31


 524              		.cfi_offset 1, -28
 525              		.cfi_offset 2, -24
 526              		.cfi_offset 4, -20
 527              		.cfi_offset 5, -16
 528              		.cfi_offset 6, -12
 529              		.cfi_offset 7, -8
 530              		.cfi_offset 14, -4
 531              		.loc 1 1167 0
 532 0002 0600     		movs	r6, r0
1168:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8  interruptState;
1169:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1170:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 loopIndex;
1171:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1172:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newPinPcVal;
1173:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newPinHsiomVal;
1174:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1175:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 tmpPcDrRegValue;
1176:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 tmpHsiomRegValue;
1177:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1178:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_IO_STRUCT const *snsIoPtr;
1179:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1180:Generated_Source\PSoC4/CapSense_Sensing.c ****     switch(state)
 533              		.loc 1 1180 0
 534 0004 0128     		cmp	r0, #1
 535 0006 07D0     		beq	.L67
 536 0008 0228     		cmp	r0, #2
 537 000a 02D0     		beq	.L65
1181:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1182:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_SNS_CONNECTION_GROUND:
1183:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinPcVal = CY_SYS_PINS_DM_STRONG;
1184:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
 538              		.loc 1 1184 0
 539 000c 0025     		movs	r5, #0
1183:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
 540              		.loc 1 1183 0
 541 000e 0627     		movs	r7, #6
 542 0010 04E0     		b	.L64
 543              	.L65:
 544              	.LVL40:
1185:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
1186:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_SNS_CONNECTION_HIGHZ:
1187:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinPcVal = CY_SYS_PINS_DM_ALG_HIZ;
1188:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
1189:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
1190:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_SNS_CONNECTION_SHIELD:
1191:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinPcVal = CY_SYS_PINS_DM_ALG_HIZ;
1192:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_CSD_SHIELD;
 545              		.loc 1 1192 0
 546 0012 0525     		movs	r5, #5
1191:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_CSD_SHIELD;
 547              		.loc 1 1191 0
 548 0014 0027     		movs	r7, #0
1193:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 549              		.loc 1 1193 0
 550 0016 01E0     		b	.L64
 551              	.LVL41:
 552              	.L67:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 32


1188:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 553              		.loc 1 1188 0
 554 0018 0025     		movs	r5, #0
1187:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
 555              		.loc 1 1187 0
 556 001a 2F00     		movs	r7, r5
 557              	.L64:
 558              	.LVL42:
 559 001c 164C     		ldr	r4, .L69
 560              	.LVL43:
 561              	.L66:
1194:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
1195:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinPcVal = CY_SYS_PINS_DM_STRONG;
1196:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
1197:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
1198:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1199:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1200:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Loop through all electrodes */
1201:Generated_Source\PSoC4/CapSense_Sensing.c ****     snsIoPtr = &CapSense_ioList[0u];
1202:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (loopIndex = 0u; loopIndex < CapSense_TOTAL_ELECTRODES; loopIndex++)
1203:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1204:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 562              		.loc 1 1204 0 discriminator 3
 563 001e FFF7FEFF 		bl	CyEnterCriticalSection
 564              	.LVL44:
 565 0022 0190     		str	r0, [sp, #4]
 566              	.LVL45:
1205:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1206:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpHsiomRegValue = CY_GET_REG32 (snsIoPtr->hsiomPtr);
1207:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpHsiomRegValue &= ~(snsIoPtr->hsiomMask);
1208:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->hsiomPtr, tmpHsiomRegValue);
1209:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1210:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue = CY_GET_REG32 (snsIoPtr->pcPtr);
1211:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue &= ~(CapSense_GPIO_PC_MASK << snsIoPtr->shift);
 567              		.loc 1 1211 0 discriminator 3
 568 0024 0720     		movs	r0, #7
1206:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpHsiomRegValue &= ~(snsIoPtr->hsiomMask);
 569              		.loc 1 1206 0 discriminator 3
 570 0026 231F     		subs	r3, r4, #4
 571              	.LVL46:
 572 0028 1A68     		ldr	r2, [r3]
1207:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->hsiomPtr, tmpHsiomRegValue);
 573              		.loc 1 1207 0 discriminator 3
 574 002a E168     		ldr	r1, [r4, #12]
1206:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpHsiomRegValue &= ~(snsIoPtr->hsiomMask);
 575              		.loc 1 1206 0 discriminator 3
 576 002c 1368     		ldr	r3, [r2]
 577              	.LVL47:
1207:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->hsiomPtr, tmpHsiomRegValue);
 578              		.loc 1 1207 0 discriminator 3
 579 002e 8B43     		bics	r3, r1
 580              	.LVL48:
1208:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 581              		.loc 1 1208 0 discriminator 3
 582 0030 1360     		str	r3, [r2]
 583              		.loc 1 1211 0 discriminator 3
 584 0032 A17D     		ldrb	r1, [r4, #22]
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 33


1207:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->hsiomPtr, tmpHsiomRegValue);
 585              		.loc 1 1207 0 discriminator 3
 586 0034 9C46     		mov	ip, r3
 587              	.LVL49:
 588              		.loc 1 1211 0 discriminator 3
 589 0036 8840     		lsls	r0, r0, r1
1210:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue &= ~(CapSense_GPIO_PC_MASK << snsIoPtr->shift);
 590              		.loc 1 1210 0 discriminator 3
 591 0038 2368     		ldr	r3, [r4]
 592              	.LVL50:
 593 003a 1B68     		ldr	r3, [r3]
 594              	.LVL51:
 595              		.loc 1 1211 0 discriminator 3
 596 003c 8343     		bics	r3, r0
 597              	.LVL52:
1212:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue |=  (newPinPcVal << snsIoPtr->shift);
 598              		.loc 1 1212 0 discriminator 3
 599 003e 3800     		movs	r0, r7
 600 0040 8840     		lsls	r0, r0, r1
1213:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->pcPtr, tmpPcDrRegValue);
 601              		.loc 1 1213 0 discriminator 3
 602 0042 2168     		ldr	r1, [r4]
1212:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue |=  (newPinPcVal << snsIoPtr->shift);
 603              		.loc 1 1212 0 discriminator 3
 604 0044 0343     		orrs	r3, r0
 605              	.LVL53:
 606              		.loc 1 1213 0 discriminator 3
 607 0046 0B60     		str	r3, [r1]
1214:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1215:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpHsiomRegValue |=  (newPinHsiomVal << snsIoPtr->hsiomShift);
 608              		.loc 1 1215 0 discriminator 3
 609 0048 2900     		movs	r1, r5
 610 004a 237D     		ldrb	r3, [r4, #20]
 611              	.LVL54:
1216:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->hsiomPtr, tmpHsiomRegValue);
1217:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1218:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue = CY_GET_REG32 (snsIoPtr->drPtr);
1219:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue &= ~(snsIoPtr->mask);
1220:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->drPtr, tmpPcDrRegValue);
1221:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1222:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 612              		.loc 1 1222 0 discriminator 3
 613 004c 0198     		ldr	r0, [sp, #4]
1215:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->hsiomPtr, tmpHsiomRegValue);
 614              		.loc 1 1215 0 discriminator 3
 615 004e 9940     		lsls	r1, r1, r3
 616 0050 0B00     		movs	r3, r1
 617 0052 6146     		mov	r1, ip
 618 0054 0B43     		orrs	r3, r1
 619              	.LVL55:
1216:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->hsiomPtr, tmpHsiomRegValue);
 620              		.loc 1 1216 0 discriminator 3
 621 0056 1360     		str	r3, [r2]
 622              	.LVL56:
1218:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue &= ~(snsIoPtr->mask);
 623              		.loc 1 1218 0 discriminator 3
 624 0058 6268     		ldr	r2, [r4, #4]
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 34


1219:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->drPtr, tmpPcDrRegValue);
 625              		.loc 1 1219 0 discriminator 3
 626 005a 2169     		ldr	r1, [r4, #16]
1218:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue &= ~(snsIoPtr->mask);
 627              		.loc 1 1218 0 discriminator 3
 628 005c 1368     		ldr	r3, [r2]
 629              	.LVL57:
 630 005e 1C34     		adds	r4, r4, #28
 631              	.LVL58:
1219:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->drPtr, tmpPcDrRegValue);
 632              		.loc 1 1219 0 discriminator 3
 633 0060 8B43     		bics	r3, r1
 634              	.LVL59:
1220:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 635              		.loc 1 1220 0 discriminator 3
 636 0062 1360     		str	r3, [r2]
 637              	.LVL60:
 638              		.loc 1 1222 0 discriminator 3
 639 0064 FFF7FEFF 		bl	CyExitCriticalSection
 640              	.LVL61:
1202:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 641              		.loc 1 1202 0 discriminator 3
 642 0068 044B     		ldr	r3, .L69+4
 643 006a 9C42     		cmp	r4, r3
 644 006c D7D1     		bne	.L66
1223:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1224:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Get next electrode */
1225:Generated_Source\PSoC4/CapSense_Sensing.c ****         snsIoPtr++;
1226:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1227:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1228:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_CSD_EN) &&\
1229:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) &&\
1230:Generated_Source\PSoC4/CapSense_Sensing.c ****          (0u != CapSense_CSD_TOTAL_SHIELD_COUNT))
1231:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsCSDSetShieldElectrodesState(state);
 645              		.loc 1 1231 0
 646 006e 3000     		movs	r0, r6
 647 0070 FFF7FEFF 		bl	CapSense_SsCSDSetShieldElectrodesState
 648              	.LVL62:
1232:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
1233:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1234:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if(CapSense_ENABLE == CapSense_ADC_EN)
1235:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_ClearAdcChannels();
1236:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
1237:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1238:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 649              		.loc 1 1238 0
 650              		@ sp needed
 651              	.LVL63:
 652              	.LVL64:
 653              	.LVL65:
 654 0074 F7BD     		pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 655              	.L70:
 656 0076 C046     		.align	2
 657              	.L69:
 658 0078 04000000 		.word	CapSense_ioList+4
 659 007c 74000000 		.word	CapSense_ioList+116
 660              		.cfi_endproc
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 35


 661              	.LFE11:
 662              		.size	CapSense_SsSetAllIOsState, .-CapSense_SsSetAllIOsState
 663              		.section	.text.CapSense_SsPostAllWidgetsScan,"ax",%progbits
 664              		.align	1
 665              		.global	CapSense_SsPostAllWidgetsScan
 666              		.code	16
 667              		.thumb_func
 668              		.type	CapSense_SsPostAllWidgetsScan, %function
 669              	CapSense_SsPostAllWidgetsScan:
 670              	.LFB12:
1239:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1240:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ADC_EN)
1241:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1242:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsReleaseResources()
1243:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1244:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1245:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1246:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function sets the resources that do not belong to the sensing HW block to
1247:Generated_Source\PSoC4/CapSense_Sensing.c **** *  default state.
1248:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1249:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1250:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The function performs following tasks:
1251:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Checks if CSD block busy and returns error if it is busy
1252:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. Disconnects integration capacitors (CintA, CintB for CSX mode and
1253:Generated_Source\PSoC4/CapSense_Sensing.c **** *     Cmod for CSD mode)
1254:Generated_Source\PSoC4/CapSense_Sensing.c **** *  3. Disconnect electroded if they have been connected.
1255:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1256:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
1257:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the operation:
1258:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Zero        - Resources released successfully.
1259:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Non-zero    - One or more errors occurred in releasing process.
1260:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1261:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1262:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SsReleaseResources(void)
1263:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1264:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus busyStatus = CYRET_SUCCESS;
1265:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1266:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_SW_STS_BUSY))
1267:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1268:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
1269:Generated_Source\PSoC4/CapSense_Sensing.c ****         busyStatus = CYRET_INVALID_STATE;
1270:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1271:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
1272:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1273:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
1274:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsDisableCSXMode();
1275:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1276:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1277:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
1278:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsDisableISXMode();
1279:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
1280:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1281:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
1282:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsCSDDisableMode();
1283:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
1284:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1285:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 36


1286:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_BistDisableMode();
1287:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1288:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1289:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSetAllIOsState((uint32)CapSense_SNS_CONNECTION_GROUND);
1290:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1291:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1292:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Reset of the currentSenseMethod variable to make sure that the next
1293:Generated_Source\PSoC4/CapSense_Sensing.c ****          * call of SetupWidget() API setups the correct widget mode
1294:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1295:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
1296:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1297:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1298:Generated_Source\PSoC4/CapSense_Sensing.c ****     return busyStatus;
1299:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1300:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
1301:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1302:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1303:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1304:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsPostAllWidgetsScan
1305:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1306:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1307:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1308:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The ISR function for multiple widget scanning implementation.
1309:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1310:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1311:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is the function used by the CapSense ISR to implement multiple widget
1312:Generated_Source\PSoC4/CapSense_Sensing.c **** *  scanning.
1313:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Should not be used by the application layer.
1314:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1315:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1316:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsPostAllWidgetsScan(void)
1317:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 671              		.loc 1 1317 0
 672              		.cfi_startproc
 673              		@ args = 0, pretend = 0, frame = 0
 674              		@ frame_needed = 0, uses_anonymous_args = 0
 675 0000 10B5     		push	{r4, lr}
 676              		.cfi_def_cfa_offset 8
 677              		.cfi_offset 4, -8
 678              		.cfi_offset 14, -4
 679              	.L76:
1318:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1319:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Increment widget index
1320:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Check if all the widgets are scanned
1321:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  3. If all the widgets are not scanned, set up and scan next widget
1322:Generated_Source\PSoC4/CapSense_Sensing.c ****     */
1323:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (1u != CapSense_TOTAL_WIDGETS)
1324:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus postScanStatus;
1325:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1326:Generated_Source\PSoC4/CapSense_Sensing.c ****         do
1327:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1328:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_widgetIndex++;
 680              		.loc 1 1328 0
 681 0002 174C     		ldr	r4, .L77
 682 0004 A378     		ldrb	r3, [r4, #2]
 683 0006 0133     		adds	r3, r3, #1
 684 0008 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 37


 685 000a A370     		strb	r3, [r4, #2]
1329:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1330:Generated_Source\PSoC4/CapSense_Sensing.c ****             postScanStatus = CapSense_SetupWidget((uint32)CapSense_widgetIndex);
 686              		.loc 1 1330 0
 687 000c A078     		ldrb	r0, [r4, #2]
 688 000e C0B2     		uxtb	r0, r0
 689 0010 FFF7FEFF 		bl	CapSense_SetupWidget
 690              	.LVL66:
1331:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1332:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS == postScanStatus)
 691              		.loc 1 1332 0
 692 0014 0028     		cmp	r0, #0
 693 0016 06D1     		bne	.L72
1333:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1334:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if((CapSense_TOTAL_WIDGETS - 1u) == CapSense_widgetIndex)
 694              		.loc 1 1334 0
 695 0018 A378     		ldrb	r3, [r4, #2]
 696 001a 032B     		cmp	r3, #3
 697 001c 00D1     		bne	.L73
1335:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1336:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* The last widget will be scanned. Reset flag to skip configuring the next wid
1337:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_requestScanAllWidget = CapSense_DISABLE;
 698              		.loc 1 1337 0
 699 001e 6070     		strb	r0, [r4, #1]
 700              	.L73:
1338:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1339:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)CapSense_Scan();
 701              		.loc 1 1339 0
 702 0020 FFF7FEFF 		bl	CapSense_Scan
 703              	.LVL67:
 704 0024 1BE0     		b	.L71
 705              	.LVL68:
 706              	.L72:
1340:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1341:Generated_Source\PSoC4/CapSense_Sensing.c ****             else if((CapSense_TOTAL_WIDGETS - 1u) == CapSense_widgetIndex)
 707              		.loc 1 1341 0
 708 0026 A278     		ldrb	r2, [r4, #2]
 709 0028 0E4B     		ldr	r3, .L77+4
 710 002a 0006     		lsls	r0, r0, #24
 711              	.LVL69:
 712 002c 032A     		cmp	r2, #3
 713 002e 0ED1     		bne	.L75
1342:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1343:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if ((CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) && \
1344:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (CapSense_ENABLE == CapSense_CSD_EN))
1345:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSD_E ==
1346:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[CapSense_widgetIndex]
1347:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1348:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Disable the CSD block */
1349:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd);
1350:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1351:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* ((CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) && \
1352:Generated_Source\PSoC4/CapSense_Sensing.c ****                            (CapSense_ENABLE == CapSense_CSD_EN)) */
1353:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1354:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update scan Counter */
1355:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.scanCounter++;
1356:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* All widgets are totally processed. Reset BUSY flag */
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 38


1357:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_SW_STS_BUSY;
 714              		.loc 1 1357 0
 715 0030 8021     		movs	r1, #128
1355:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* All widgets are totally processed. Reset BUSY flag */
 716              		.loc 1 1355 0
 717 0032 1A89     		ldrh	r2, [r3, #8]
 718 0034 0132     		adds	r2, r2, #1
 719 0036 1A81     		strh	r2, [r3, #8]
 720              		.loc 1 1357 0
 721 0038 DA68     		ldr	r2, [r3, #12]
 722 003a 8A43     		bics	r2, r1
 723 003c DA60     		str	r2, [r3, #12]
1358:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1359:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update status with with the failure */
1360:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_STATUS_ERR_MASK;
 724              		.loc 1 1360 0
 725 003e DA68     		ldr	r2, [r3, #12]
 726 0040 1202     		lsls	r2, r2, #8
 727 0042 120A     		lsrs	r2, r2, #8
 728 0044 DA60     		str	r2, [r3, #12]
1361:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSense_S
 729              		.loc 1 1361 0
 730 0046 DA68     		ldr	r2, [r3, #12]
 731 0048 1043     		orrs	r0, r2
 732 004a D860     		str	r0, [r3, #12]
 733              	.LVL70:
 734 004c 07E0     		b	.L71
 735              	.LVL71:
 736              	.L75:
1362:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1363:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set postScanStatus to exit the while loop */
1364:Generated_Source\PSoC4/CapSense_Sensing.c ****                 postScanStatus = CYRET_SUCCESS;
1365:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1366:Generated_Source\PSoC4/CapSense_Sensing.c ****             else
1367:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1368:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update status with with the failure. Configure the next widget in while() loop *
1369:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_STATUS_ERR_MASK;
 737              		.loc 1 1369 0
 738 004e DA68     		ldr	r2, [r3, #12]
 739 0050 1202     		lsls	r2, r2, #8
 740 0052 120A     		lsrs	r2, r2, #8
 741 0054 DA60     		str	r2, [r3, #12]
1370:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSense_S
 742              		.loc 1 1370 0
 743 0056 DA68     		ldr	r2, [r3, #12]
 744 0058 1043     		orrs	r0, r2
 745 005a D860     		str	r0, [r3, #12]
 746 005c D1E7     		b	.L76
 747              	.L71:
1371:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1372:Generated_Source\PSoC4/CapSense_Sensing.c ****         } while (CYRET_SUCCESS != postScanStatus);
1373:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (1u != CapSense_TOTAL_WIDGETS) */
1374:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 748              		.loc 1 1374 0
 749              		@ sp needed
 750 005e 10BD     		pop	{r4, pc}
 751              	.L78:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 39


 752              		.align	2
 753              	.L77:
 754 0060 00000000 		.word	.LANCHOR0
 755 0064 00000000 		.word	CapSense_dsRam
 756              		.cfi_endproc
 757              	.LFE12:
 758              		.size	CapSense_SsPostAllWidgetsScan, .-CapSense_SsPostAllWidgetsScan
 759              		.section	.text.CapSense_SsIsrInitialize,"ax",%progbits
 760              		.align	1
 761              		.global	CapSense_SsIsrInitialize
 762              		.code	16
 763              		.thumb_func
 764              		.type	CapSense_SsIsrInitialize, %function
 765              	CapSense_SsIsrInitialize:
 766              	.LFB13:
1375:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1376:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1377:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1378:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsIsrInitialize
1379:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1380:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1381:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1382:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Enables and initializes for the function pointer for a callback for the ISR.
1383:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1384:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1385:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The "address" is a special type cyisraddress defined by Cylib. This function
1386:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is used by Component APIs and should not be used by an application program for
1387:Generated_Source\PSoC4/CapSense_Sensing.c **** *  proper working of the Component.
1388:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1389:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param address
1390:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The address of the function to be called when interrupt is fired.
1391:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1392:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1393:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsIsrInitialize(cyisraddress address)
1394:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 767              		.loc 1 1394 0
 768              		.cfi_startproc
 769              		@ args = 0, pretend = 0, frame = 0
 770              		@ frame_needed = 0, uses_anonymous_args = 0
 771              	.LVL72:
 772 0000 10B5     		push	{r4, lr}
 773              		.cfi_def_cfa_offset 8
 774              		.cfi_offset 4, -8
 775              		.cfi_offset 14, -4
1395:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_ISR_StartEx(address);
 776              		.loc 1 1395 0
 777 0002 FFF7FEFF 		bl	CapSense_ISR_StartEx
 778              	.LVL73:
1396:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 779              		.loc 1 1396 0
 780              		@ sp needed
 781 0006 10BD     		pop	{r4, pc}
 782              		.cfi_endproc
 783              	.LFE13:
 784              		.size	CapSense_SsIsrInitialize, .-CapSense_SsIsrInitialize
 785              		.section	.text.CapSense_SsSetModClkClockDivider,"ax",%progbits
 786              		.align	1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 40


 787              		.global	CapSense_SsSetModClkClockDivider
 788              		.code	16
 789              		.thumb_func
 790              		.type	CapSense_SsSetModClkClockDivider, %function
 791              	CapSense_SsSetModClkClockDivider:
 792              	.LFB14:
1397:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1398:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1399:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1400:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetModClkClockDivider
1401:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1402:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1403:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1404:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for the modulator clock and then starts
1405:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the modulator clock.
1406:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1407:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1408:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1409:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1410:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
1411:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1412:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param modClk
1413:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The divider value for the modulator clock.
1414:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1415:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1416:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetModClkClockDivider(uint32 modClk)
1417:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 793              		.loc 1 1417 0
 794              		.cfi_startproc
 795              		@ args = 0, pretend = 0, frame = 0
 796              		@ frame_needed = 0, uses_anonymous_args = 0
 797              		@ link register save eliminated.
 798              	.LVL74:
1418:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1419:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Stop modulator clock */
1420:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
 799              		.loc 1 1420 0
 800 0000 064A     		ldr	r2, .L83
 801 0002 074B     		ldr	r3, .L83+4
1421:Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_ModClk__DIV_ID <<
1422:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CapSense_MODCLK_CMD_DIV_SHIFT)|
1423:Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_MODCLK_CMD_DISABLE_MASK));
1424:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1425:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1426:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Set divider value for sense modClk.
1427:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from modClk because Divider register value 0 corresponds
1428:Generated_Source\PSoC4/CapSense_Sensing.c ****      * to dividing by 1.
1429:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1430:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_DIV_PTR, ((modClk - 1u) << 8u));
 802              		.loc 1 1430 0
 803 0004 0138     		subs	r0, r0, #1
 804              	.LVL75:
1420:Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_ModClk__DIV_ID <<
 805              		.loc 1 1420 0
 806 0006 1A60     		str	r2, [r3]
 807              		.loc 1 1430 0
 808 0008 064A     		ldr	r2, .L83+8
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 41


 809 000a 0002     		lsls	r0, r0, #8
 810              	.LVL76:
 811 000c 1060     		str	r0, [r2]
 812              	.L81:
1431:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1432:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Check whether previous modulator clock start command has finished. */
1433:Generated_Source\PSoC4/CapSense_Sensing.c ****     while(0u != (CY_GET_REG32(CapSense_MODCLK_CMD_PTR) & CapSense_MODCLK_CMD_ENABLE_MASK))
 813              		.loc 1 1433 0 discriminator 1
 814 000e 1A68     		ldr	r2, [r3]
 815 0010 002A     		cmp	r2, #0
 816 0012 FCDB     		blt	.L81
1434:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1435:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Wait until previous modulator clock start command has finished */
1436:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1437:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1438:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Start modulator clock, aligned to HFCLK */
1439:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
 817              		.loc 1 1439 0
 818 0014 044A     		ldr	r2, .L83+12
 819 0016 024B     		ldr	r3, .L83+4
1440:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(((uint32)CapSense_ModClk__DIV_ID << CapSense_MODCLK_CMD_DIV_SHIFT) |
1441:Generated_Source\PSoC4/CapSense_Sensing.c ****                   ((uint32)CapSense_ModClk__PA_DIV_ID << CapSense_MODCLK_CMD_PA_DIV_SHIFT) |
1442:Generated_Source\PSoC4/CapSense_Sensing.c ****                   CapSense_MODCLK_CMD_ENABLE_MASK));
1443:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
1444:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newRegValue;
1445:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1446:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Clear bit to disable ModClk clock. */
1447:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1448:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CY_GET_REG32(CapSense_MODCLK_CMD_PTR) &
1449:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(~CapSense_ModClk__ENABLE_MASK));
1450:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1451:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1452:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Update ModClk clock divider.
1453:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from modClk because Divider register value has range (0-65535).
1454:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1455:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_MODCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_ModClk__DIVIDE
1456:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue |= (modClk - 1u);
1457:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_DIV_PTR, newRegValue);
1458:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1459:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Set bit to enable ModClk clock. */
1460:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1461:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CY_GET_REG32(CapSense_MODCLK_CMD_PTR) |
1462:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ModClk__ENABLE_MASK);
1463:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) */
1464:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 820              		.loc 1 1464 0
 821              		@ sp needed
1439:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(((uint32)CapSense_ModClk__DIV_ID << CapSense_MODCLK_CMD_DIV_SHIFT) |
 822              		.loc 1 1439 0
 823 0018 1A60     		str	r2, [r3]
 824              		.loc 1 1464 0
 825 001a 7047     		bx	lr
 826              	.L84:
 827              		.align	2
 828              	.L83:
 829 001c 40000040 		.word	1073741888
 830 0020 00000140 		.word	1073807360
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 42


 831 0024 00030140 		.word	1073808128
 832 0028 40FF0080 		.word	-2147418304
 833              		.cfi_endproc
 834              	.LFE14:
 835              		.size	CapSense_SsSetModClkClockDivider, .-CapSense_SsSetModClkClockDivider
 836              		.section	.text.CapSense_SsSetSnsClockDivider,"ax",%progbits
 837              		.align	1
 838              		.global	CapSense_SsSetSnsClockDivider
 839              		.code	16
 840              		.thumb_func
 841              		.type	CapSense_SsSetSnsClockDivider, %function
 842              	CapSense_SsSetSnsClockDivider:
 843              	.LFB15:
1465:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1466:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1467:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1468:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetSnsClockDivider
1469:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1470:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1471:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1472:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for the sense clock and then starts
1473:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the sense clock.
1474:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1475:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1476:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1477:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1478:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
1479:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1480:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
1481:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClk The divider value for the sense clock.
1482:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1483:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1484:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetSnsClockDivider(uint32 snsClk)
1485:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 844              		.loc 1 1485 0
 845              		.cfi_startproc
 846              		@ args = 0, pretend = 0, frame = 0
 847              		@ frame_needed = 0, uses_anonymous_args = 0
 848              		@ link register save eliminated.
 849              	.LVL77:
1486:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
1487:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newRegValue;
1488:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1489:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1490:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Set divider value for sense clock.
1491:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from snsClk because SENSE_DIV value 0 corresponds
1492:Generated_Source\PSoC4/CapSense_Sensing.c ****      * to dividing by 1.
1493:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1494:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_SENSE_PERIOD_PTR);
1495:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue &= (uint32)(~CapSense_SENSE_PERIOD_SENSE_DIV_MASK);
1496:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue |= snsClk - 1u;
1497:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_SENSE_PERIOD_PTR, newRegValue);
1498:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
1499:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1500:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Stop sense clock clock   */
1501:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
 850              		.loc 1 1501 0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 43


 851 0000 064A     		ldr	r2, .L88
 852 0002 074B     		ldr	r3, .L88+4
1502:Generated_Source\PSoC4/CapSense_Sensing.c ****                      ((uint32)CapSense_SnsClk__DIV_ID <<
1503:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CapSense_SNSCLK_CMD_DIV_SHIFT)|
1504:Generated_Source\PSoC4/CapSense_Sensing.c ****                      ((uint32)CapSense_SNSCLK_CMD_DISABLE_MASK));
1505:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1506:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1507:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Set divider value for sense clock.
1508:Generated_Source\PSoC4/CapSense_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value 0 corresponds
1509:Generated_Source\PSoC4/CapSense_Sensing.c ****          * to dividing by 1.
1510:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1511:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_DIV_PTR, ((snsClk - 1u) << 8u));
 853              		.loc 1 1511 0
 854 0004 0138     		subs	r0, r0, #1
 855              	.LVL78:
1501:Generated_Source\PSoC4/CapSense_Sensing.c ****                      ((uint32)CapSense_SnsClk__DIV_ID <<
 856              		.loc 1 1501 0
 857 0006 1A60     		str	r2, [r3]
 858              		.loc 1 1511 0
 859 0008 064A     		ldr	r2, .L88+8
 860 000a 0002     		lsls	r0, r0, #8
 861              	.LVL79:
 862 000c 1060     		str	r0, [r2]
 863              	.L86:
1512:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1513:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Check whether previous sense clock start command has finished. */
1514:Generated_Source\PSoC4/CapSense_Sensing.c ****         while(0u != (CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) & CapSense_SNSCLK_CMD_ENABLE_MASK))
 864              		.loc 1 1514 0 discriminator 1
 865 000e 1A68     		ldr	r2, [r3]
 866 0010 002A     		cmp	r2, #0
 867 0012 FCDB     		blt	.L86
1515:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1516:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Wait until previous sense clock start command has finished. */
1517:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1518:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1519:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Start sense clock aligned to previously started modulator clock. */
1520:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
 868              		.loc 1 1520 0
 869 0014 044A     		ldr	r2, .L88+12
 870 0016 024B     		ldr	r3, .L88+4
1521:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (uint32)(((uint32)CapSense_SnsClk__DIV_ID << CapSense_SNSCLK_CMD_DIV_SHIFT) |
1522:Generated_Source\PSoC4/CapSense_Sensing.c ****                       ((uint32)CapSense_ModClk__PA_DIV_ID << CapSense_SNSCLK_CMD_PA_DIV_SHIFT) |
1523:Generated_Source\PSoC4/CapSense_Sensing.c ****                       CapSense_SNSCLK_CMD_ENABLE_MASK));
1524:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
1525:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
1526:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1527:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Clear bit to disable SnsClk clock. */
1528:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1529:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) &
1530:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (uint32)(~(uint32)CapSense_SnsClk__ENABLE_MASK));
1531:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1532:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1533:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Update snsClk clock divider.
1534:Generated_Source\PSoC4/CapSense_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value has range (0-65535).
1535:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1536:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_SNSCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_SnsClk__DI
1537:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= (snsClk - 1u);
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 44


1538:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_DIV_PTR, newRegValue);
1539:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1540:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Set bit to enable SnsClk clock. */
1541:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1542:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) |
1543:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_SnsClk__ENABLE_MASK);
1544:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) */
1545:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1546:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 871              		.loc 1 1546 0
 872              		@ sp needed
1520:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (uint32)(((uint32)CapSense_SnsClk__DIV_ID << CapSense_SNSCLK_CMD_DIV_SHIFT) |
 873              		.loc 1 1520 0
 874 0018 1A60     		str	r2, [r3]
 875              		.loc 1 1546 0
 876 001a 7047     		bx	lr
 877              	.L89:
 878              		.align	2
 879              	.L88:
 880 001c 41000040 		.word	1073741889
 881 0020 00000140 		.word	1073807360
 882 0024 04030140 		.word	1073808132
 883 0028 41FF0080 		.word	-2147418303
 884              		.cfi_endproc
 885              	.LFE15:
 886              		.size	CapSense_SsSetSnsClockDivider, .-CapSense_SsSetSnsClockDivider
 887              		.section	.text.CapSense_SsSetClockDividers,"ax",%progbits
 888              		.align	1
 889              		.global	CapSense_SsSetClockDividers
 890              		.code	16
 891              		.thumb_func
 892              		.type	CapSense_SsSetClockDividers, %function
 893              	CapSense_SsSetClockDividers:
 894              	.LFB16:
1547:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1548:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1549:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1550:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetClockDividers
1551:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1552:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1553:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1554:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for sense and modulator clocks and then starts
1555:Generated_Source\PSoC4/CapSense_Sensing.c **** *  a modulator clock-phase aligned to HFCLK and sense clock-phase aligned to
1556:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the modulator clock.
1557:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1558:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1559:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1560:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1561:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
1562:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1563:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
1564:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClk The divider value for the sense clock.
1565:Generated_Source\PSoC4/CapSense_Sensing.c **** *  modClk The divider value for the modulator clock.
1566:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1567:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1568:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetClockDividers(uint32 snsClk, uint32 modClk)
1569:Generated_Source\PSoC4/CapSense_Sensing.c **** {
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 45


 895              		.loc 1 1569 0
 896              		.cfi_startproc
 897              		@ args = 0, pretend = 0, frame = 0
 898              		@ frame_needed = 0, uses_anonymous_args = 0
 899              	.LVL80:
 900 0000 10B5     		push	{r4, lr}
 901              		.cfi_def_cfa_offset 8
 902              		.cfi_offset 4, -8
 903              		.cfi_offset 14, -4
 904              		.loc 1 1569 0
 905 0002 0400     		movs	r4, r0
1570:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Configure Mod clock */
1571:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetModClkClockDivider(modClk);
 906              		.loc 1 1571 0
 907 0004 0800     		movs	r0, r1
 908              	.LVL81:
 909 0006 FFF7FEFF 		bl	CapSense_SsSetModClkClockDivider
 910              	.LVL82:
1572:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1573:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Configure Sns clock */
1574:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetSnsClockDivider(snsClk);
 911              		.loc 1 1574 0
 912 000a 2000     		movs	r0, r4
 913 000c FFF7FEFF 		bl	CapSense_SsSetSnsClockDivider
 914              	.LVL83:
1575:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 915              		.loc 1 1575 0
 916              		@ sp needed
 917              	.LVL84:
 918 0010 10BD     		pop	{r4, pc}
 919              		.cfi_endproc
 920              	.LFE16:
 921              		.size	CapSense_SsSetClockDividers, .-CapSense_SsSetClockDividers
 922              		.section	.text.CapSense_CalibrateWidget,"ax",%progbits
 923              		.align	1
 924              		.global	CapSense_CalibrateWidget
 925              		.code	16
 926              		.thumb_func
 927              		.type	CapSense_CalibrateWidget, %function
 928              	CapSense_CalibrateWidget:
 929              	.LFB17:
1576:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1577:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1578:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ANYMODE_AUTOCAL)
1579:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1580:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_CalibrateWidget
1581:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1582:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1583:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1584:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the sensors in the specified widget to the default
1585:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target, this function detects the sensing method used by the
1586:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  widget prior to calibration.
1587:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1588:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1589:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function performs exactly the same tasks as
1590:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense_CalibrateAllWidgets, but only for a specified widget.
1591:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function detects the sensing method used by the widgets and uses
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 46


1592:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the Enable compensation IDAC parameter.
1593:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1594:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1595:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1596:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1597:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_C_LOW_LEVEL
1598:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1599:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  auto-calibration parameter is enabled.
1600:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1601:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1602:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the ISX Enable auto-calibration parameter
1603:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  is enabled.
1604:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1605:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1606:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param widgetId
1607:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID number of the widget to calibrate its raw count.
1608:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  A macro for the widget ID can be found in the
1609:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense Configuration header file defined as
1610:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense_<WidgetName>_WDGT_ID.
1611:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1612:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
1613:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the specified widget calibration:
1614:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1615:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_PARAM - The input parameter is invalid.
1616:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1617:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    operate as expected.
1618:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1619:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1620:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_CalibrateWidget(uint32 widgetId)
1621:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 930              		.loc 1 1621 0
 931              		.cfi_startproc
 932              		@ args = 0, pretend = 0, frame = 0
 933              		@ frame_needed = 0, uses_anonymous_args = 0
 934              	.LVL85:
 935 0000 10B5     		push	{r4, lr}
 936              		.cfi_def_cfa_offset 8
 937              		.cfi_offset 4, -8
 938              		.cfi_offset 14, -4
1622:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1623:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1624:Generated_Source\PSoC4/CapSense_Sensing.c ****         do
1625:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1626:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_TOTAL_WIDGETS <= widgetId)
 939              		.loc 1 1626 0
 940 0002 0328     		cmp	r0, #3
 941 0004 01D9     		bls	.L92
 942 0006 0120     		movs	r0, #1
 943              	.LVL86:
 944 0008 02E0     		b	.L94
 945              	.LVL87:
 946              	.L92:
 947              	.LBB12:
 948              	.LBB13:
1627:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1628:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CYRET_BAD_PARAM;
1629:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 47


1630:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1631:Generated_Source\PSoC4/CapSense_Sensing.c ****             /*
1632:Generated_Source\PSoC4/CapSense_Sensing.c ****              *  Check if widget id is valid, specified widget did not
1633:Generated_Source\PSoC4/CapSense_Sensing.c ****              *  detect any faults conditions if BIST is enabled.
1634:Generated_Source\PSoC4/CapSense_Sensing.c ****              */
1635:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
1636:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (0u != CapSense_GET_WIDGET_EN_STATUS(widgetId))
1637:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1638:Generated_Source\PSoC4/CapSense_Sensing.c ****                     calibrateStatus = CYRET_SUCCESS;
1639:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1640:Generated_Source\PSoC4/CapSense_Sensing.c ****                 else
1641:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1642:Generated_Source\PSoC4/CapSense_Sensing.c ****                     calibrateStatus = CYRET_INVALID_STATE;
1643:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1644:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif  /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1645:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1646:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS != calibrateStatus)
1647:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1648:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Exit from the loop because of a fail */
1649:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
1650:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1651:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1652:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If both CSD and CSX are enabled, calibrate widget using sensing method */
1653:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_MANY_WIDGET_METHODS_EN)
1654:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Check widget sensing method and call appropriate APIs */
1655:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_ISX_IDAC_AUTOCAL_EN)
1656:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_ISX_E ==
1657:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
1658:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1659:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calibrate CSX widget */
1660:Generated_Source\PSoC4/CapSense_Sensing.c ****                        CapSense_ISXCalibrateWidget(widgetId, CapSense_ISX_RAWCOUNT_CAL_LEVEL);
1661:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1662:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (CapSense_ENABLE == CapSense_ISX_IDAC_AUTOCAL_EN) */
1663:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1664:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Check widget sensing method and call appropriate APIs */
1665:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSX_IDAC_AUTOCAL_EN)
1666:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSX_E ==
1667:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
1668:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1669:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calibrate CSX widget */
1670:Generated_Source\PSoC4/CapSense_Sensing.c ****                        calibrateStatus = CapSense_CSXCalibrateWidget(widgetId, CapSense_CSX_RAWCOUN
1671:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1672:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (CapSense_ENABLE == CapSense_CSX_IDAC_AUTOCAL_EN) */
1673:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1674:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN)
1675:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSD_E ==
1676:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
1677:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1678:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calibrate CSD widget */
1679:Generated_Source\PSoC4/CapSense_Sensing.c ****                         calibrateStatus = CapSense_CSDCalibrateWidget(widgetId, CapSense_CSD_RAWCOU
1680:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1681:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN) */
1682:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1683:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only CSD is enabled, calibrate CSD sensor */
1684:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_CSD_EN)
1685:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CapSense_CSDCalibrateWidget(widgetId, CapSense_CSD_RAWCOUNT_CAL_L
 949              		.loc 1 1685 0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 48


 950 000a 5521     		movs	r1, #85
 951 000c FFF7FEFF 		bl	CapSense_CSDCalibrateWidget
 952              	.LVL88:
 953              	.L94:
 954              	.LBE13:
 955              	.LBE12:
1686:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1687:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only CSX is enabled, call CSX scan */
1688:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_CSX_EN)
1689:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CapSense_CSXCalibrateWidget(widgetId, CapSense_CSX_RAWCOUNT_CAL_L
1690:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1691:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only ISX is enabled, call ISX scan */
1692:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_ISX_EN)
1693:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXCalibrateWidget(widgetId, CapSense_ISX_RAWCOUNT_CAL_LEVEL);
1694:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1695:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
1696:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CYRET_UNKNOWN;
1697:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
1698:Generated_Source\PSoC4/CapSense_Sensing.c ****         } while (0u);
1699:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1700:Generated_Source\PSoC4/CapSense_Sensing.c ****         return calibrateStatus;
1701:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 956              		.loc 1 1701 0
 957              		@ sp needed
 958 0010 10BD     		pop	{r4, pc}
 959              		.cfi_endproc
 960              	.LFE17:
 961              		.size	CapSense_CalibrateWidget, .-CapSense_CalibrateWidget
 962              		.section	.text.CapSense_CalibrateAllWidgets,"ax",%progbits
 963              		.align	1
 964              		.global	CapSense_CalibrateAllWidgets
 965              		.code	16
 966              		.thumb_func
 967              		.type	CapSense_CalibrateAllWidgets, %function
 968              	CapSense_CalibrateAllWidgets:
 969              	.LFB18:
1702:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1703:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1704:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1705:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_CalibrateAllWidgets
1706:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1707:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1708:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1709:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
1710:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target, this function detects the sensing method used by the widgets
1711:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  prior to calibration.
1712:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1713:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1714:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
1715:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target value. This function detects the sensing method used by the widgets
1716:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and regards the Enable compensation IDAC parameter.
1717:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1718:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1719:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1720:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1721:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \cond SECTION_C_LOW_LEVEL
1722:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 49


1723:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  auto-calibration parameter is enabled.
1724:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endcond
1725:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1726:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the ISX Enable Auto-calibration parameter
1727:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  is enabled.
1728:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1729:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1730:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
1731:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the calibration process:
1732:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1733:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1734:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    operate as expected.
1735:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1736:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1737:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_CalibrateAllWidgets(void)
1738:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 970              		.loc 1 1738 0
 971              		.cfi_startproc
 972              		@ args = 0, pretend = 0, frame = 0
 973              		@ frame_needed = 0, uses_anonymous_args = 0
 974              	.LVL89:
 975 0000 70B5     		push	{r4, r5, r6, lr}
 976              		.cfi_def_cfa_offset 16
 977              		.cfi_offset 4, -16
 978              		.cfi_offset 5, -12
 979              		.cfi_offset 6, -8
 980              		.cfi_offset 14, -4
1739:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1740:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
1741:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1742:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
 981              		.loc 1 1742 0
 982 0002 0024     		movs	r4, #0
1739:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 983              		.loc 1 1739 0
 984 0004 2500     		movs	r5, r4
 985              	.LVL90:
 986              	.L96:
1743:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1744:Generated_Source\PSoC4/CapSense_Sensing.c ****             calibrateStatus |= CapSense_CalibrateWidget(wdgtIndex);
 987              		.loc 1 1744 0 discriminator 3
 988 0006 2000     		movs	r0, r4
 989 0008 FFF7FEFF 		bl	CapSense_CalibrateWidget
 990              	.LVL91:
1742:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 991              		.loc 1 1742 0 discriminator 3
 992 000c 0134     		adds	r4, r4, #1
 993              	.LVL92:
 994              		.loc 1 1744 0 discriminator 3
 995 000e 0543     		orrs	r5, r0
 996              	.LVL93:
1742:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 997              		.loc 1 1742 0 discriminator 3
 998 0010 042C     		cmp	r4, #4
 999 0012 F8D1     		bne	.L96
1745:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1746:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 50


1747:Generated_Source\PSoC4/CapSense_Sensing.c ****         return calibrateStatus;
1748:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1000              		.loc 1 1748 0
 1001 0014 2800     		movs	r0, r5
 1002              		@ sp needed
 1003              	.LVL94:
 1004              	.LVL95:
 1005 0016 70BD     		pop	{r4, r5, r6, pc}
 1006              		.cfi_endproc
 1007              	.LFE18:
 1008              		.size	CapSense_CalibrateAllWidgets, .-CapSense_CalibrateAllWidgets
 1009              		.section	.text.CapSense_SsCSDGetColSnsClkDivider,"ax",%progbits
 1010              		.align	1
 1011              		.global	CapSense_SsCSDGetColSnsClkDivider
 1012              		.code	16
 1013              		.thumb_func
 1014              		.type	CapSense_SsCSDGetColSnsClkDivider, %function
 1015              	CapSense_SsCSDGetColSnsClkDivider:
 1016              	.LFB23:
1749:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ANYMODE_AUTOCAL) */
1750:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1751:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1752:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)
1753:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1754:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsAutoTuneWidget
1755:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1756:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1757:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1758:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the parameters auto-tuning for the optimal CapSense
1759:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  operation for a desired widget.
1760:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1761:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1762:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the following:
1763:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calibrates Modulator and Compensation IDACs.
1764:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Tunes the Sense Clock optimal value to get a Sense Clock period greater than
1765:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    2*5*R*Cp.
1766:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calculates the resolution for the optimal finger capacitance.
1767:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1768:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param widgetId
1769:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID number of a desired widget.
1770:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  A macro for the widget ID can be found in the
1771:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense Configuration header file defined as
1772:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense_<WidgetName>_WDGT_ID.
1773:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1774:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
1775:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the operation:
1776:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Zero     - All the widgets are auto-tuned successfully.
1777:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Non-zero - Auto-tuning failed for any widget.
1778:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1779:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1780:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_SsAutoTuneWidget(uint32 widgetId)
1781:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1782:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
1783:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1784:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 snsIndex;
1785:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 inputSnsClk;
1786:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 minSnsClkDiv;
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 51


1787:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 minSnsClkDivTmp;
1788:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1789:Generated_Source\PSoC4/CapSense_Sensing.c ****         AUTO_TUNE_CONFIG_TYPE autoTuneConfig;
1790:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1791:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 maxRaw = 0u;
1792:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 maxCp = 0u;
1793:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 maxIdacComp = 0u;
1794:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1795:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1796:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 maxCpSnsId = 0u;
1797:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 maxCpRowSnsId = 0u;
1798:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
1799:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1800:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_FLASH_WD_STRUCT const *ptrFlashWidget = &CapSense_dsFlash.wdgtArray[widgetId];
1801:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_RAM_WD_BASE_STRUCT *ptrRamWidget = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWidget->
1802:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_RAM_SNS_STRUCT *ptrRamSensor = ptrFlashWidget->ptr2SnsRam;
1803:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1804:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Find input of sensor clock frequency */
1805:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSDV2)
1806:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are chained (Fourth-generation HW block). Flip flop is not available */
1807:Generated_Source\PSoC4/CapSense_Sensing.c ****             inputSnsClk = ((uint32)CYDEV_BCLK__HFCLK__KHZ / (uint32)CapSense_dsRam.modCsdClk);
1808:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1809:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Minimum value of SnaClk divider that is allowed for all Fourth-generation
1810:Generated_Source\PSoC4/CapSense_Sensing.c ****              * CSD HW block based devices.
1811:Generated_Source\PSoC4/CapSense_Sensing.c ****             */
1812:Generated_Source\PSoC4/CapSense_Sensing.c ****             minSnsClkDiv = CapSense_MIN_SNS_CLK_DIVIDER;
1813:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1814:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are not chained */
1815:Generated_Source\PSoC4/CapSense_Sensing.c ****             inputSnsClk = CYDEV_BCLK__HFCLK__KHZ >> CapSense_FLIP_FLOP_DIV;
1816:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1817:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Minimum value of SnaClk divider that is allowed for PSoC 4100 and PSoC 4200
1818:Generated_Source\PSoC4/CapSense_Sensing.c ****                device families.
1819:Generated_Source\PSoC4/CapSense_Sensing.c ****             */
1820:Generated_Source\PSoC4/CapSense_Sensing.c ****             minSnsClkDiv = CapSense_dsRam.modCsdClk;
1821:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
1822:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are chained (PSoC 4100, PSoC 4200) */
1823:Generated_Source\PSoC4/CapSense_Sensing.c ****             inputSnsClk = (CYDEV_BCLK__HFCLK__KHZ / CapSense_dsRam.modCsdClk) >> CapSense_FLIP_FLOP
1824:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1825:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Minimum value of SnaClk divider that is allowed for all Fourth-generation
1826:Generated_Source\PSoC4/CapSense_Sensing.c ****              * CSD HW block based device except PSoC 4100 and PSoC 4200 device families.
1827:Generated_Source\PSoC4/CapSense_Sensing.c ****             */
1828:Generated_Source\PSoC4/CapSense_Sensing.c ****             minSnsClkDiv = CapSense_MIN_SNS_CLK_DIVIDER;
1829:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1830:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1831:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Minimum value of SnsClk divider required to ensure the CSD HW block
1832:Generated_Source\PSoC4/CapSense_Sensing.c ****          * operation in allowed frequency range.
1833:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1834:Generated_Source\PSoC4/CapSense_Sensing.c ****         minSnsClkDivTmp = inputSnsClk * CapSense_AUTOTUNE_CAL_UNITS;
1835:Generated_Source\PSoC4/CapSense_Sensing.c ****         minSnsClkDivTmp /= CapSense_CSD_SNS_FREQ_KHZ_MAX;
1836:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1837:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (minSnsClkDiv < minSnsClkDivTmp)
1838:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1839:Generated_Source\PSoC4/CapSense_Sensing.c ****             minSnsClkDiv = minSnsClkDivTmp;
1840:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1841:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1842:Generated_Source\PSoC4/CapSense_Sensing.c ****         minSnsClkDiv = (minSnsClkDiv + (CapSense_AUTOTUNE_CAL_UNITS - 1u)) / CapSense_AUTOTUNE_CAL_
1843:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 52


1844:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Make divider even */
1845:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (0u != (minSnsClkDiv & 0x01u))
1846:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1847:Generated_Source\PSoC4/CapSense_Sensing.c ****             minSnsClkDiv++;
1848:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1849:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1850:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Initialize auto-tuning configuration structure */
1851:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.snsClkInputClock = (uint16)inputSnsClk;
1852:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.snsClkConstantR = CapSense_CSD_SNSCLK_R_CONST;
1853:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.vRef = CapSense_CSD_VREF_MV;
1854:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.fingerCap = ptrRamWidget->fingerCap;
1855:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.sigPFC = &ptrRamWidget->sigPFC;
1856:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1857:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1858:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #1:
1859:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - performing the first calibration at fixed settings
1860:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting maximum sensor Cp
1861:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting sense clock frequency based on Cp
1862:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1863:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1864:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrRamWidget->resolution = CapSense_AUTOTUNE_CALIBRATION_RESOLUTION;
1865:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1866:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrRamWidget->snsClk = (uint16)(inputSnsClk / CapSense_AUTOTUNE_CALIBRATION_FREQ_KHZ);
1867:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrRamWidget->snsClkSource = (uint8)CapSense_CLK_SOURCE_DIRECT;
1868:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1869:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1870:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrRamWidget->rowSnsClk = (uint16)(inputSnsClk / CapSense_AUTOTUNE_CALIBRATION_FREQ_KHZ
1871:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrRamWidget->rowSnsClkSource = (uint8)CapSense_CLK_SOURCE_DIRECT;
1872:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
1873:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1874:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calibrate CSD widget to the default calibration target */
1875:Generated_Source\PSoC4/CapSense_Sensing.c ****         (void)CapSense_CSDCalibrateWidget(widgetId, CapSense_AUTOTUNE_CAL_LEVEL);
1876:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1877:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Find raw count and IDAC of a sensor with maximum Cp */
1878:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (snsIndex = 0u; snsIndex < ptrFlashWidget->numCols; snsIndex++)
1879:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1880:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
1881:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (maxIdacComp < ptrRamSensor->idacComp[0u])
1882:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1883:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1884:Generated_Source\PSoC4/CapSense_Sensing.c ****                         maxCpSnsId = snsIndex;
1885:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif
1886:Generated_Source\PSoC4/CapSense_Sensing.c ****                     maxIdacComp = ptrRamSensor->idacComp[0u];
1887:Generated_Source\PSoC4/CapSense_Sensing.c ****                     maxRaw = ptrRamSensor->raw[0u];
1888:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1889:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
1890:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (maxRaw < ptrRamSensor->raw[0u])
1891:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1892:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1893:Generated_Source\PSoC4/CapSense_Sensing.c ****                         maxCpSnsId = snsIndex;
1894:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif
1895:Generated_Source\PSoC4/CapSense_Sensing.c ****                     maxRaw = ptrRamSensor->raw[0u];
1896:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1897:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
1898:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrRamSensor++;
1899:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1900:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 53


1901:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Update auto-tuning configuration structure */
1902:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacMod = ptrRamWidget->idacMod[0u];
1903:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacComp = (uint8)maxIdacComp;
1904:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacGain = CapSense_idacGainTable[ptrRamWidget->idacGainIndex].gainValue;
1905:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.ptrSenseClk = &ptrRamWidget->snsClk;
1906:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.calTarget = (uint16)((maxRaw * CapSense_AUTOTUNE_CAL_UNITS) /
1907:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ((uint32)(0x01uL << CapSense_AUTOTUNE_CALIBRATION_RESOLUTION) - 1u));
1908:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1909:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Find sensor Cp and optimum sense clock value */
1910:Generated_Source\PSoC4/CapSense_Sensing.c ****         maxCp = SmartSense_TunePrescalers(&autoTuneConfig);
1911:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.sensorCap = maxCp;
1912:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1913:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Increase sensor clock divider to valid value */
1914:Generated_Source\PSoC4/CapSense_Sensing.c ****         while(ptrRamWidget->snsClk < minSnsClkDiv)
1915:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1916:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrRamWidget->snsClk <<= 1u;
1917:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1918:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1919:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Do the same for row for touchpad or matrix buttons widgets */
1920:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1921:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((CapSense_WD_TOUCHPAD_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)) ||
1922:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_WD_MATRIX_BUTTON_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)))
1923:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1924:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Find a sensor with maximum Cp */
1925:Generated_Source\PSoC4/CapSense_Sensing.c ****                 maxRaw = 0u;
1926:Generated_Source\PSoC4/CapSense_Sensing.c ****                 maxIdacComp = 0u;
1927:Generated_Source\PSoC4/CapSense_Sensing.c ****                 for (snsIndex = ptrFlashWidget->numCols; snsIndex < ptrFlashWidget->totalNumSns; sn
1928:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1929:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
1930:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (maxIdacComp < ptrRamSensor->idacComp[0u])
1931:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1932:Generated_Source\PSoC4/CapSense_Sensing.c ****                             maxCpRowSnsId = snsIndex;
1933:Generated_Source\PSoC4/CapSense_Sensing.c ****                             maxIdacComp = ptrRamSensor->idacComp[0u];
1934:Generated_Source\PSoC4/CapSense_Sensing.c ****                             maxRaw = ptrRamSensor->raw[0u];
1935:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1936:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
1937:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (maxRaw < ptrRamSensor->raw[0u])
1938:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1939:Generated_Source\PSoC4/CapSense_Sensing.c ****                             maxCpRowSnsId = snsIndex;
1940:Generated_Source\PSoC4/CapSense_Sensing.c ****                             maxRaw = ptrRamSensor->raw[0u];
1941:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1942:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif
1943:Generated_Source\PSoC4/CapSense_Sensing.c ****                     ptrRamSensor++;
1944:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1945:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1946:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Configure auto-tuning configuration structure */
1947:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.iDacMod = ptrRamWidget->rowIdacMod[0u];
1948:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.iDacComp = (uint8)maxIdacComp;
1949:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.ptrSenseClk = &ptrRamWidget->rowSnsClk;
1950:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.calTarget = (uint16)((maxRaw * CapSense_AUTOTUNE_CAL_UNITS) /
1951:Generated_Source\PSoC4/CapSense_Sensing.c ****                         ((uint32)(0x01uL << CapSense_AUTOTUNE_CALIBRATION_RESOLUTION) - 1u));
1952:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1953:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Find correct sense clock value */
1954:Generated_Source\PSoC4/CapSense_Sensing.c ****                 maxCp = SmartSense_TunePrescalers(&autoTuneConfig);
1955:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1956:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Save maximum sensor Cp and corresponding sensor Id */
1957:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (autoTuneConfig.sensorCap < maxCp)
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 54


1958:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1959:Generated_Source\PSoC4/CapSense_Sensing.c ****                     autoTuneConfig.sensorCap = maxCp;
1960:Generated_Source\PSoC4/CapSense_Sensing.c ****                     maxCpSnsId = maxCpRowSnsId;
1961:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1962:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1963:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Increase sensor clock divider to valid value */
1964:Generated_Source\PSoC4/CapSense_Sensing.c ****                 while(ptrRamWidget->rowSnsClk < minSnsClkDiv)
1965:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1966:Generated_Source\PSoC4/CapSense_Sensing.c ****                     ptrRamWidget->rowSnsClk <<= 1u;
1967:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1968:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1969:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1970:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1971:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Check tuning results */
1972:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_AUTOTUNE_CP_MAX < maxCp)
1973:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1974:Generated_Source\PSoC4/CapSense_Sensing.c ****             autoTuneStatus = CYRET_BAD_DATA;
1975:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1976:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1977:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1978:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #2:
1979:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - repeating calibration with new sense clock frequency
1980:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting resolution
1981:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1982:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1983:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calibrate CSD widget to the default calibration target with newly defined sense frequenc
1984:Generated_Source\PSoC4/CapSense_Sensing.c ****         (void)CapSense_CSDCalibrateWidget(widgetId, CapSense_AUTOTUNE_CAL_LEVEL);
1985:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1986:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacGain = CapSense_idacGainTable[ptrRamWidget->idacGainIndex].gainValue;
1987:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacMod = ptrRamWidget->idacMod[0u];
1988:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.ptrSenseClk = &ptrRamWidget->snsClk;
1989:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1990:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1991:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((CapSense_WD_TOUCHPAD_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)) ||
1992:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_WD_MATRIX_BUTTON_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)))
1993:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1994:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (maxCpSnsId >= ptrFlashWidget->numCols)
1995:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1996:Generated_Source\PSoC4/CapSense_Sensing.c ****                     autoTuneConfig.iDacMod = ptrRamWidget->rowIdacMod[0u];
1997:Generated_Source\PSoC4/CapSense_Sensing.c ****                     autoTuneConfig.ptrSenseClk = &ptrRamWidget->rowSnsClk;
1998:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1999:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2000:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2001:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2002:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Find resolution */
2003:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrRamWidget->resolution = SmartSense_TuneSensitivity(&autoTuneConfig);
2004:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2005:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
2006:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #3:
2007:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - selecting a widget clock source if AUTO
2008:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - repeating calibration with found clock frequency, resolution and clock source
2009:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - updating sensitivity
2010:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
2011:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2012:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Tune widget sensitivity */
2013:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSetWidgetSenseClkSrc(widgetId, ptrRamWidget);
2014:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 55


2015:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calibrate CSD widget to the default calibration target with newly defined resolution */
2016:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneStatus |= CapSense_CSDCalibrateWidget(widgetId, CapSense_AUTOTUNE_CAL_LEVEL);
2017:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2018:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN)
2019:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_DsUpdateWidgetCrc(widgetId);
2020:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN) */
2021:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2022:Generated_Source\PSoC4/CapSense_Sensing.c ****         return autoTuneStatus;
2023:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2024:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2025:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2026:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2027:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsAutoTune
2028:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2029:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2030:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2031:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the parameters auto-tuning for the optimal CapSense
2032:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  operation.
2033:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2034:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2035:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the following:
2036:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calibrates Modulator and Compensation IDACs.
2037:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Tunes the Sense Clock optimal value to get a Sense Clock period greater than
2038:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    2*5*R*Cp.
2039:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calculates the resolution for the optimal finger capacitance.
2040:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2041:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
2042:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the operation:
2043:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Zero     - All the widgets are auto-tuned successfully.
2044:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Non-zero - Auto-tuning failed for any widget.
2045:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2046:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2047:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_SsAutoTune(void)
2048:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2049:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
2050:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
2051:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2052:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Tune each CSD widget */
2053:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
2054:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2055:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_SENSE_METHOD_CSD_E ==
2056:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
2057:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2058:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneStatus |= CapSense_SsAutoTuneWidget(wdgtIndex);
2059:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2060:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2061:Generated_Source\PSoC4/CapSense_Sensing.c ****         return autoTuneStatus;
2062:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2063:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)) */
2064:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2065:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2066:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_DISABLE == CapSense_CSDV2)
2067:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ( ((CapSense_ENABLE == CapSense_CSX_EN) \
2068:Generated_Source\PSoC4/CapSense_Sensing.c ****         || (CapSense_ENABLE == CapSense_ISX_EN)) ||\
2069:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG))
2070:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
2071:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsTrimIdacsSinking
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 56


2072:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2073:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2074:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2075:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
2076:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  IDAC1 and IDAC2 for Sinking CSD Mode
2077:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2078:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2079:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
2080:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
2081:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2082:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
2083:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSinking(void)
2084:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2085:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 trimValue;
2086:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2087:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Mod iDAC Sinking Mode */
2088:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue = CY_GET_REG32(CapSense_TRIM2_PTR) & ~CapSense_IDAC_TRIM2_MOD_SNK_MASK;
2089:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM2_PTR) &
2090:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                       CapSense_SFLASH_TRIM_IDAC_MOD_MASK) ;
2091:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2092:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
2093:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Comp iDAC Sinking Mode */
2094:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue &= ~CapSense_IDAC_TRIM2_COMP_SNK_MASK;
2095:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM2_PTR) &
2096:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                           CapSense_SFLASH_TRIM_IDAC_COMP_MASK);
2097:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
2098:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2099:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Update IDAC trim bits for gain control in current sink mode */
2100:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_TRIM2_PTR, trimValue);
2101:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2102:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
2103:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)) */
2104:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2105:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2106:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ( ((CapSense_ENABLE == CapSense_CSX_EN) \
2107:Generated_Source\PSoC4/CapSense_Sensing.c ****         || (CapSense_ENABLE == CapSense_ISX_EN)) || \
2108:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG))
2109:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
2110:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsTrimIdacsSourcing
2111:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2112:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2113:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2114:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
2115:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  IDAC1 and IDAC2 for Sourcing CSD Mode
2116:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2117:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2118:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
2119:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
2120:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2121:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
2122:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSourcing(void)
2123:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2124:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 trimValue;
2125:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2126:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Mod iDAC Sourcing Mode */
2127:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue = CY_GET_REG32(CapSense_TRIM1_PTR) & ~CapSense_IDAC_TRIM1_MOD_SRC_MASK;
2128:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM1_PTR) &
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 57


2129:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                       CapSense_SFLASH_TRIM_IDAC_MOD_MASK);
2130:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2131:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
2132:Generated_Source\PSoC4/CapSense_Sensing.c ****                  /* Comp iDAC Sourcing Mode */
2133:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue &= ~CapSense_IDAC_TRIM1_COMP_SRC_MASK;
2134:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM1_PTR) &
2135:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                           CapSense_SFLASH_TRIM_IDAC_COMP_MASK);
2136:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
2137:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2138:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Update IDAC trim bits for gain control in current source mode */
2139:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_TRIM1_PTR, trimValue);
2140:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2141:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
2142:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)) */
2143:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2144:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2145:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2146:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsTrimIdacs
2147:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2148:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2149:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2150:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function loads trim values from SFLASH rows to calibrate
2151:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  IDAC1 and IDAC2 for CSD Mode
2152:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2153:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2154:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  If CSX mode is enabled the function loads trim values for both sink and source
2155:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  mode. If CSX mode is disabled the function loads trim values for sink or
2156:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  source mode based on sink/source mode configuration.
2157:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
2158:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2159:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2160:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsTrimIdacs(void)
2161:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2162:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN)
2163:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSinking();
2164:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSourcing();
2165:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)
2166:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSinking();
2167:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)
2168:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSourcing();
2169:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2170:Generated_Source\PSoC4/CapSense_Sensing.c ****             #error "Not supported Mode, Component cannot work in this mode"
2171:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN) */
2172:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2173:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif  /* (CapSense_DISABLE == CapSense_CSDV2) */
2174:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2175:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2176:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
2177:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2178:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsChangeImoFreq
2179:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2180:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2181:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2182:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the IMO frequency.
2183:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2184:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2185:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The IMO frequency can have three offsets: 0%, -5% and +5%. The frequency
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 58


2186:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  trims are contained in the CapSense_immunity[value] array for each
2187:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  frequency channel.
2188:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2189:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param value The frequency channel ID.
2190:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2191:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2192:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_SsChangeImoFreq(uint32 value)
2193:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2194:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR, CapSense_immunity[value]);
2195:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2196:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2197:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2198:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsChangeClkFreq
2199:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2200:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2201:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2202:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
2203:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the corresponding divider.
2204:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2205:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2206:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
2207:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the corresponding divider.
2208:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2209:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param chId
2210:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The frequency channel ID.
2211:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2212:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2213:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_SsChangeClkFreq(uint32 chId)
2214:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2215:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 snsClkDivider;
2216:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 freqOffset1 = 0u;
2217:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 freqOffset2 = 0u;
2218:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2219:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSD_WIDGETS)
2220:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSDV2)
2221:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 conversionsNum;
2222:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2223:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2224:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2225:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2226:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2227:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 snsClkSrc;
2228:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
2229:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2230:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2231:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((0u != CapSense_TOTAL_CSD_WIDGETS) || \
2232:Generated_Source\PSoC4/CapSense_Sensing.c ****              ((CapSense_DISABLE == CapSense_CSX_COMMON_TX_CLK_EN) && (0u != CapSense_TOTAL_CSX_WIDG
2233:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt = &CapSense_dsFlash.wdgtArray[CapSense_wid
2234:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdg
2235:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2236:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2237:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch(CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[CapSense_widgetIndex]))
2238:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2239:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSD_WIDGETS)
2240:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
2241:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get sensor clock divider value */
2242:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN)
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 59


2243:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_dsRam.snsCsdClk;
2244:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2245:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2246:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Get SnsClck divider for rows or columns */
2247:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].numCols <= CapSense_se
2248:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2249:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = ptrWdgt->rowSnsClk;
2250:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2251:Generated_Source\PSoC4/CapSense_Sensing.c ****                         else
2252:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2253:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = ptrWdgt->snsClk;
2254:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2255:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2256:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider = ptrWdgt->snsClk;
2257:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2258:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2259:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2260:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset1 = CapSense_CSD_MFS_DIVIDER_OFFSET_F1;
2261:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset2 = CapSense_CSD_MFS_DIVIDER_OFFSET_F2;
2262:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2263:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2264:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2265:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2266:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Get sense clk source */
2267:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2268:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Get SnsClc Source for rows or columns */
2269:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].numCols <= CapSense_se
2270:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2271:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->rowSnsClkSource;
2272:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2273:Generated_Source\PSoC4/CapSense_Sensing.c ****                         else
2274:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2275:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2276:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2277:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2278:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2279:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2280:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2281:Generated_Source\PSoC4/CapSense_Sensing.c ****                     switch (snsClkSrc)
2282:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2283:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS8:
2284:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS12:
2285:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Multiply by 2 for PRS8/PRS12 mode */
2286:Generated_Source\PSoC4/CapSense_Sensing.c ****                         freqOffset1 <<= 1u;
2287:Generated_Source\PSoC4/CapSense_Sensing.c ****                         freqOffset2 <<= 1u;
2288:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2289:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2290:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2291:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2292:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2293:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
2294:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2295:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Change the divider based on the chId */
2296:Generated_Source\PSoC4/CapSense_Sensing.c ****                 switch (chId)
2297:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2298:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_1:
2299:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 60


2300:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset1;
2301:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2302:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2303:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_2:
2304:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2305:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset2;
2306:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2307:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2308:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2309:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2310:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2311:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2312:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2313:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2314:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSDV2)
2315:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Set Number Of Conversions based on scanning resolution */
2316:Generated_Source\PSoC4/CapSense_Sensing.c ****                     conversionsNum = CapSense_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)pt
2317:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CY_SET_REG32(CapSense_SEQ_NORM_CNT_PTR, (conversionsNum & CapSense_SEQ_NORM_CNT
2318:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2319:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2320:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2321:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2322:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2323:Generated_Source\PSoC4/CapSense_Sensing.c ****                     switch (snsClkSrc)
2324:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2325:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS8:
2326:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS12:
2327:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Divide by 2 for PRS8/PRS12 mode */
2328:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider >>= 1;
2329:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (snsClkDivider == 0u)
2330:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2331:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = 1u;
2332:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2333:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2334:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2335:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2336:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2337:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2338:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
2339:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2340:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Configure the new divider */
2341:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetSnsClockDivider(snsClkDivider);
2342:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2343:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2344:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* #if (0u != CapSense_TOTAL_CSD_WIDGETS) */
2345:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2346:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSX_WIDGETS)
2347:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
2348:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN)
2349:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_dsRam.snsCsxClk;
2350:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else /* (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN) */
2351:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = ptrWdgt->snsClk;
2352:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN) */
2353:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset1 = CapSense_CSX_MFS_DIVIDER_OFFSET_F1;
2354:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset2 = CapSense_CSX_MFS_DIVIDER_OFFSET_F2;
2355:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2356:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Change the divider based on the chId */
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 61


2357:Generated_Source\PSoC4/CapSense_Sensing.c ****                 switch (chId)
2358:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2359:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_1:
2360:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2361:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset1;
2362:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2363:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2364:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_2:
2365:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2366:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset2;
2367:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2368:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2369:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2370:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2371:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2372:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2373:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2374:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2375:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Configure the new divider */
2376:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetSnsClockDivider(snsClkDivider);
2377:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2378:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2379:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* #if (0u != CapSense_TOTAL_CSX_WIDGETS) */
2380:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2381:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
2382:Generated_Source\PSoC4/CapSense_Sensing.c ****             CYASSERT(0);
2383:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2384:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2385:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2386:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif  /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
2387:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2388:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2389:Generated_Source\PSoC4/CapSense_Sensing.c **** #if((CapSense_ENABLE == CapSense_CSD_EN) || \
2390:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSX_EN) && \
2391:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2)))
2392:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2393:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsInitializeSourceSenseClk
2394:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2395:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2396:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2397:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets a source for Sense Clk for all CSD widgets.
2398:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2399:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2400:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk.
2401:Generated_Source\PSoC4/CapSense_Sensing.c **** *  for all CSD widgets.
2402:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2403:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2404:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsInitializeSourceSenseClk(void)
2405:Generated_Source\PSoC4/CapSense_Sensing.c **** {
2406:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
2407:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2408:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2409:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
2410:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2411:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
2412:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2413:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 62


2414:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2415:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
2416:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
2417:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetWidgetSenseClkSrc(wdgtIndex, ptrWdgt);
2418:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2419:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
2420:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
2421:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
2422:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetWidgetTxClkSrc(wdgtIndex, ptrWdgt);
2423:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2424:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (((CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN)) &
2425:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
2426:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2427:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2428:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN)
2429:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_DsUpdateWidgetCrc(wdgtIndex);
2430:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN) */
2431:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2432:Generated_Source\PSoC4/CapSense_Sensing.c **** }
2433:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) || \
2434:Generated_Source\PSoC4/CapSense_Sensing.c ****            (((CapSense_ENABLE == CapSense_CSX_EN) || \
2435:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_ISX_EN)) && \
2436:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2))) */
2437:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2438:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2439:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
2440:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2441:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsSetWidgetSenseClkSrc
2442:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2443:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2444:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2445:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Sets a source for the sense clock for a widget.
2446:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2447:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param wdgtIndex
2448:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2449:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param ptrWdgt
2450:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2451:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2452:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2453:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk for a
2454:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  widget.
2455:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2456:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2457:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptr
2458:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2459:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
2460:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrScale;
2461:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2462:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2463:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if(CapSense_ENABLE == CapSense_CSDV2)
2464:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 conversionsNum;
2465:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2466:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 snsClkDivider;
2467:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2468:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2469:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2470:Generated_Source\PSoC4/CapSense_Sensing.c ****             snsClkDivider = CapSense_SsCSDGetColSnsClkDivider(wdgtIndex);
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 63


2471:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2472:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if(CapSense_ENABLE == CapSense_CSDV2)
2473:Generated_Source\PSoC4/CapSense_Sensing.c ****                 conversionsNum = CapSense_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)ptrWdg
2474:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                              CapSen
2475:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2476:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (CapSense_CLK_SOURCE_DIRECT == lfsrSize)
2477:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2478:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /*
2479:Generated_Source\PSoC4/CapSense_Sensing.c ****                     * Multiplying of the snsClkDivider by 2 is needed to pass the
2480:Generated_Source\PSoC4/CapSense_Sensing.c ****                     * average PRS frequency through the argument.
2481:Generated_Source\PSoC4/CapSense_Sensing.c ****                     */
2482:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->res
2483:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2484:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2485:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2486:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /*
2487:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * Multiplying of the snsClkDivider by 2 is needed to pass the
2488:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * average PRS frequency through the argument.
2489:Generated_Source\PSoC4/CapSense_Sensing.c ****                 */
2490:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->resolut
2491:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = 0u;
2492:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2493:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2494:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrSize = (uint8)CapSense_DEFAULT_MODULATION_MODE;
2495:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale = 0u;
2496:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)wdgtIndex; /* This parameter is unused in such configurations */
2497:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2498:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2499:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR_SCALE_OFFS
2500:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2501:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2502:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArray[wdgtIn
2503:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArray[w
2504:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2505:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2506:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_SsCSDGetRowSnsClkDivider(wdgtIndex);
2507:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2508:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if(CapSense_ENABLE == CapSense_CSDV2)
2509:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2510:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_CLK_SOURCE_DIRECT == lfsrSize)
2511:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2512:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /*
2513:Generated_Source\PSoC4/CapSense_Sensing.c ****                             * Multiplying of the snsClkDivider by 2 is needed to pass the
2514:Generated_Source\PSoC4/CapSense_Sensing.c ****                             * average PRS frequency through the argument.
2515:Generated_Source\PSoC4/CapSense_Sensing.c ****                             */
2516:Generated_Source\PSoC4/CapSense_Sensing.c ****                             lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrW
2517:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2518:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2519:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2520:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /*
2521:Generated_Source\PSoC4/CapSense_Sensing.c ****                         * Multiplying of the snsClkDivider by 2 is needed to pass the
2522:Generated_Source\PSoC4/CapSense_Sensing.c ****                         * average PRS frequency through the argument.
2523:Generated_Source\PSoC4/CapSense_Sensing.c ****                         */
2524:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt-
2525:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrScale = 0u;
2526:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2527:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 64


2528:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrSize = (uint8)CapSense_DEFAULT_MODULATION_MODE;
2529:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrScale = 0u;
2530:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2531:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->rowSnsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR
2532:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2533:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2534:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2535:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
2536:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2537:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2538:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
2539:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2540:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsSetWidgetTxClkSrc
2541:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2542:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2543:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2544:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Sets a source for the Tx clock for a widget.
2545:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2546:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param wdgtIndex
2547:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2548:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param ptrWdgt
2549:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2550:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2551:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2552:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Updates snsClkSource with a source for Tx Clk for a widget.
2553:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2554:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2555:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetTxClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptrWdg
2556:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2557:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
2558:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrScale;
2559:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2560:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) && \
2561:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES))
2562:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 conversionsNum;
2563:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 snsClkDivider;
2564:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2565:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2566:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)
2567:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
2568:Generated_Source\PSoC4/CapSense_Sensing.c ****                 conversionsNum = (uint32)ptrWdgt->resolution;
2569:Generated_Source\PSoC4/CapSense_Sensing.c ****                 snsClkDivider = CapSense_SsCSXGetTxClkDivider(wdgtIndex);
2570:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2571:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2572:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2573:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = (uint8)CapSense_CLK_SOURCE_DIRECT;
2574:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = 0u;
2575:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Unused function argument */
2576:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)wdgtIndex;
2577:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
2578:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2579:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrSize = (uint8)CapSense_CSX_TX_CLK_SOURCE;
2580:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale = 0u;
2581:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Unused function argument */
2582:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)wdgtIndex;
2583:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) */
2584:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 65


2585:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR_SCALE_OFFS
2586:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2587:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2)) */
2588:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2589:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2590:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(((CapSense_ENABLE == CapSense_CSX_EN) && \
2591:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2592:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
2593:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)) ||\
2594:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSD_EN) && \
2595:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
2596:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)))
2597:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2598:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsCalcLfsrSize
2599:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2600:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2601:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2602:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is an internal function that finds a SSC polynomial size in the Auto mode.
2603:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2604:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2605:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The SSC polynomial size in the auto mode is found based on the following
2606:Generated_Source\PSoC4/CapSense_Sensing.c **** *  requirements:
2607:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - an LFSR value should be selected so that the max clock dither is limited with +/-10%.
2608:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - at least one full spread spectrum polynomial should pass during the scan time.
2609:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - the value of the number of conversions should be an integer multiple of the
2610:Generated_Source\PSoC4/CapSense_Sensing.c **** *    repeat period of the programmed LFSR_SIZE.
2611:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2612:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
2613:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2614:Generated_Source\PSoC4/CapSense_Sensing.c **** *  resolution The widget resolution.
2615:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2616:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return lfsrSize The LFSRSIZE value for the SENSE_PERIOD register.
2617:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2618:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2619:Generated_Source\PSoC4/CapSense_Sensing.c **** static uint8 CapSense_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum)
2620:Generated_Source\PSoC4/CapSense_Sensing.c **** {
2621:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 lfsrSize = 0u;
2622:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2623:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Find LFSR value */
2624:Generated_Source\PSoC4/CapSense_Sensing.c ****     if((CapSense_SNSCLK_SSC4_THRESHOLD <= snsClkDivider) &&
2625:Generated_Source\PSoC4/CapSense_Sensing.c ****        (CapSense_SNSCLK_SSC4_PERIOD <= conversionsNum) &&
2626:Generated_Source\PSoC4/CapSense_Sensing.c ****        (0uL == (conversionsNum % CapSense_SNSCLK_SSC4_PERIOD)))
2627:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2628:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC4;
2629:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2630:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC3_THRESHOLD <= snsClkDivider) &&
2631:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC3_PERIOD <= conversionsNum) &&
2632:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC3_PERIOD)))
2633:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2634:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC3;
2635:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2636:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC2_THRESHOLD <= snsClkDivider) &&
2637:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC2_PERIOD <= conversionsNum) &&
2638:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC2_PERIOD)))
2639:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2640:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC2;
2641:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 66


2642:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC1_THRESHOLD <= snsClkDivider) &&
2643:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC1_PERIOD <= conversionsNum) &&
2644:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC1_PERIOD)))
2645:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2646:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC1;
2647:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2648:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
2649:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2650:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = (uint8)CapSense_CLK_SOURCE_DIRECT;
2651:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2652:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2653:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (lfsrSize);
2654:Generated_Source\PSoC4/CapSense_Sensing.c **** }
2655:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2656:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2657:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2658:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsCalcLfsrScale
2659:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2660:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2661:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2662:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is an internal function that calculates the LFSR scale value.
2663:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2664:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2665:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The LFSR scale value is used to increase the clock dither if the desired dither
2666:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is wider than can be achieved with the current Sense Clock Divider and current LFSR
2667:Generated_Source\PSoC4/CapSense_Sensing.c **** *  period.
2668:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2669:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This returns the LFSR scale value needed to keep the clock dither in
2670:Generated_Source\PSoC4/CapSense_Sensing.c **** *  range +/-10%.
2671:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2672:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
2673:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2674:Generated_Source\PSoC4/CapSense_Sensing.c **** *  lfsrSize The period of the LFSR sequence.
2675:Generated_Source\PSoC4/CapSense_Sensing.c **** *          For devices with CapSense_CSDV2_REF9P6UA_EN = TRUE, the
2676:Generated_Source\PSoC4/CapSense_Sensing.c **** *          mode parameters can take the following values:
2677:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2678:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC1   The length of LFSR sequence is 63 cycles.
2679:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC2   The length of LFSR sequence is 127 cycles.
2680:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC3   The length of LFSR sequence is 255 cycles.
2681:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC4   The length of LFSR sequence is 511 cycles.
2682:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2683:Generated_Source\PSoC4/CapSense_Sensing.c **** *          For devices with CapSense_CSDV2_REF9P6UA_EN = TRUE, the
2684:Generated_Source\PSoC4/CapSense_Sensing.c **** *          mode parameters can take the following values:
2685:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2686:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC1   The length of LFSR sequence is 3 cycles.
2687:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC2   The length of LFSR sequence is 7 cycles.
2688:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC3   The length of LFSR sequence is 15 cycles.
2689:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC4   The length of LFSR sequence is 31 cycles.
2690:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2691:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
2692:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the LFSR scale value needed to keep the clock dither in range +/-10%.
2693:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2694:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2695:Generated_Source\PSoC4/CapSense_Sensing.c **** static uint8 CapSense_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize)
2696:Generated_Source\PSoC4/CapSense_Sensing.c **** {
2697:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrScale;
2698:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrRange;
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 67


2699:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrDither;
2700:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2701:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Initialize the lfsrSize variable with the LFSR Range for given Lfsr Size. */
2702:Generated_Source\PSoC4/CapSense_Sensing.c ****     switch(lfsrSize)
2703:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2704:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC1:
2705:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2706:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC1_RANGE;
2707:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2708:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2709:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC2:
2710:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2711:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC2_RANGE;
2712:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2713:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2714:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC3:
2715:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2716:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC3_RANGE;
2717:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2718:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2719:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC4:
2720:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2721:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC4_RANGE;
2722:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2723:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2724:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
2725:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2726:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = 0u;
2727:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2728:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2729:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2730:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2731:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Calculate the LFSR Scale value that is required to keep the Clock dither
2732:Generated_Source\PSoC4/CapSense_Sensing.c ****      * as close as possible to the +/-10% limit of the used frequency.
2733:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
2734:Generated_Source\PSoC4/CapSense_Sensing.c ****     if((lfsrSize != CapSense_CLK_SOURCE_DIRECT) && (0u != lfsrRange))
2735:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2736:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calculate the LFSR Dither in percents. */
2737:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrDither  = ((lfsrRange * 100uL) / snsClkDivider);
2738:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrScale = 0uL;
2739:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2740:Generated_Source\PSoC4/CapSense_Sensing.c ****         while(lfsrDither < CapSense_LFSR_DITHER_PERCENTAGE)
2741:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2742:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale++;
2743:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrDither <<=1uL;
2744:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2745:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2746:Generated_Source\PSoC4/CapSense_Sensing.c ****         if(lfsrDither > CapSense_LFSR_DITHER_PERCENTAGE)
2747:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2748:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale--;
2749:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2750:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2751:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
2752:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2753:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrScale = 0uL;
2754:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2755:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 68


2756:Generated_Source\PSoC4/CapSense_Sensing.c ****     return ((uint8)lfsrScale);
2757:Generated_Source\PSoC4/CapSense_Sensing.c **** }
2758:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2759:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (((CapSense_ENABLE == CapSense_CSX_EN) && \
2760:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2761:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2) && \
2762:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)) ||\
2763:Generated_Source\PSoC4/CapSense_Sensing.c ****           ((CapSense_ENABLE == CapSense_CSD_EN) && \
2764:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2) && \
2765:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))) */
2766:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2767:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2768:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
2769:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2770:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2771:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2772:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsCSDGetColSnsClkDivider
2773:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2774:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2775:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2776:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function gets the Sense Clock Divider value for one-dimension widgets
2777:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and Column Sense Clock divider value for two-dimension widgets.
2778:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2779:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2780:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function gets the Sense Clock Divider value based on the Component
2781:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  configuration. The function is applicable for one-dimension widgets and for
2782:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  two-dimension widgets.
2783:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2784:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param widgetId
2785:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2786:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2787:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
2788:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the Sense Clock Divider value for one-dimension widgets
2789:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and the Column Sense Clock divider value for two-dimension widgets.
2790:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2791:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2792:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 CapSense_SsCSDGetColSnsClkDivider(uint32 widgetId)
2793:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1017              		.loc 1 2793 0
 1018              		.cfi_startproc
 1019              		@ args = 0, pretend = 0, frame = 0
 1020              		@ frame_needed = 0, uses_anonymous_args = 0
 1021              		@ link register save eliminated.
 1022              	.LVL96:
2794:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 retVal;
2795:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2796:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Get sense divider based on configuration */
2797:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE != CapSense_CSD_COMMON_SNS_CLK_EN)
2798:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2799:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2800:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
 1023              		.loc 1 2800 0
 1024 0000 1C23     		movs	r3, #28
 1025 0002 5843     		muls	r0, r3
 1026              	.LVL97:
 1027 0004 024B     		ldr	r3, .L99
2801:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 69


2802:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2803:Generated_Source\PSoC4/CapSense_Sensing.c ****             retVal = (uint32)(ptrWdgt->snsClk);
2804:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2805:Generated_Source\PSoC4/CapSense_Sensing.c ****             retVal = (uint32)CapSense_dsRam.snsCsdClk;
2806:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2807:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)widgetId; /* This parameter is unused in such configurations */
2808:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2809:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2810:Generated_Source\PSoC4/CapSense_Sensing.c ****         return (retVal);
2811:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1028              		.loc 1 2811 0
 1029              		@ sp needed
2800:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
 1030              		.loc 1 2800 0
 1031 0006 1818     		adds	r0, r3, r0
2803:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
 1032              		.loc 1 2803 0
 1033 0008 4368     		ldr	r3, [r0, #4]
2810:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1034              		.loc 1 2810 0
 1035 000a 9889     		ldrh	r0, [r3, #12]
 1036              		.loc 1 2811 0
 1037 000c 7047     		bx	lr
 1038              	.L100:
 1039 000e C046     		.align	2
 1040              	.L99:
 1041 0010 00000000 		.word	CapSense_dsFlash
 1042              		.cfi_endproc
 1043              	.LFE23:
 1044              		.size	CapSense_SsCSDGetColSnsClkDivider, .-CapSense_SsCSDGetColSnsClkDivider
 1045              		.section	.text.CapSense_SsCSDCalcPrsSize,"ax",%progbits
 1046              		.align	1
 1047              		.global	CapSense_SsCSDCalcPrsSize
 1048              		.code	16
 1049              		.thumb_func
 1050              		.type	CapSense_SsCSDCalcPrsSize, %function
 1051              	CapSense_SsCSDCalcPrsSize:
 1052              	.LFB24:
2812:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2813:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2814:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2815:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
2816:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsCSDGetRowSnsClkDivider
2817:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2818:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2819:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2820:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function gets the Sense Clock Divider value for one-dimension widgets
2821:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  and the Column Sense Clock divider value for two-dimension widgets.
2822:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2823:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2824:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function gets the Sense Clock Divider value based on the Component
2825:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  configuration. The function is applicable for one-dimension widgets and for
2826:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  two-dimension widgets.
2827:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2828:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \param
2829:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  widgetId Specifies the ID of the widget.
2830:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 70


2831:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \return
2832:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Returns the sense clock divider value for one-dimension widgets
2833:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  and column sense clock divider value for two-dimension widgets.
2834:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2835:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
2836:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 CapSense_SsCSDGetRowSnsClkDivider(uint32 widgetId)
2837:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2838:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 retVal;
2839:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2840:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Get sense divider based on configuration */
2841:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE != CapSense_CSD_COMMON_SNS_CLK_EN)
2842:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2843:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2844:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
2845:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2846:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2847:Generated_Source\PSoC4/CapSense_Sensing.c ****                 retVal = ptrWdgt->rowSnsClk;
2848:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2849:Generated_Source\PSoC4/CapSense_Sensing.c ****                 retVal = (uint32)CapSense_dsRam.snsCsdClk;
2850:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2851:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)widgetId; /* This parameter is unused in such configurations */
2852:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2853:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2854:Generated_Source\PSoC4/CapSense_Sensing.c ****             return (retVal);
2855:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2856:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2857:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2858:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2859:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2860:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2861:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
2862:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsCSDCalcPrsSize
2863:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2864:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2865:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2866:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  The function finds PRS polynomial size in the Auto mode.
2867:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2868:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2869:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  The PRS polynomial size in the Auto mode is found based on the following
2870:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  requirements:
2871:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  - at least one full spread spectrum polynomial should pass during scan time.
2872:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2873:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \param
2874:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  snsClkDivider The divider value for the sense clock.
2875:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  resolution The widget resolution.
2876:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2877:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \return prsSize PRS value for SENSE_PERIOD register.
2878:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2879:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
2880:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 CapSense_SsCSDCalcPrsSize(uint32 snsClkDivider, uint32 resolution)
2881:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1053              		.loc 1 2881 0
 1054              		.cfi_startproc
 1055              		@ args = 0, pretend = 0, frame = 0
 1056              		@ frame_needed = 0, uses_anonymous_args = 0
 1057              	.LVL98:
2882:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 prsSize;
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 71


2883:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 modClkDivider = 1u;
2884:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2885:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE != CapSense_CSDV2)
2886:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if(CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
2887:Generated_Source\PSoC4/CapSense_Sensing.c ****                     modClkDivider = (uint32)CapSense_dsRam.modCsdClk;
2888:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
2889:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2890:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /*
2891:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * This operation is needed for Third-generation HW Block
2892:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * based devices to take into account DIV-2 flip-flop.
2893:Generated_Source\PSoC4/CapSense_Sensing.c ****                 */
2894:Generated_Source\PSoC4/CapSense_Sensing.c ****                 snsClkDivider <<= 1uL;
2895:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
2896:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2897:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((snsClkDivider * CapSense_PRS_LENGTH_12_BITS) <= (modClkDivider * ((0x00000001Lu <<
 1058              		.loc 1 2897 0
 1059 0000 0123     		movs	r3, #1
 1060 0002 8B40     		lsls	r3, r3, r1
2881:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 prsSize;
 1061              		.loc 1 2881 0
 1062 0004 10B5     		push	{r4, lr}
 1063              		.cfi_def_cfa_offset 8
 1064              		.cfi_offset 4, -8
 1065              		.cfi_offset 14, -4
2887:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
 1066              		.loc 1 2887 0
 1067 0006 094A     		ldr	r2, .L105
 1068              		.loc 1 2897 0
 1069 0008 013B     		subs	r3, r3, #1
 1070 000a 927F     		ldrb	r2, [r2, #30]
2894:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
 1071              		.loc 1 2894 0
 1072 000c 4400     		lsls	r4, r0, #1
 1073              	.LVL99:
 1074              		.loc 1 2897 0
 1075 000e 5A43     		muls	r2, r3
 1076 0010 4003     		lsls	r0, r0, #13
 1077 0012 031B     		subs	r3, r0, r4
2898:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2899:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set PRS12 mode */
2900:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_PRS_12_CONFIG;
 1078              		.loc 1 2900 0
 1079 0014 C020     		movs	r0, #192
2897:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 1080              		.loc 1 2897 0
 1081 0016 9342     		cmp	r3, r2
 1082 0018 05D9     		bls	.L102
2901:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2902:Generated_Source\PSoC4/CapSense_Sensing.c ****             else if ((snsClkDivider * CapSense_PRS_LENGTH_8_BITS) <= (modClkDivider * ((0x00000001L
 1083              		.loc 1 2902 0
 1084 001a FF23     		movs	r3, #255
2903:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2904:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set PRS8 mode */
2905:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_PRS_8_CONFIG;
2906:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2907:Generated_Source\PSoC4/CapSense_Sensing.c ****             else
2908:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 72


2909:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set Direct clock mode */
2910:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_CLK_SOURCE_DIRECT;
 1085              		.loc 1 2910 0
 1086 001c 0020     		movs	r0, #0
2902:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 1087              		.loc 1 2902 0
 1088 001e 5C43     		muls	r4, r3
 1089              	.LVL100:
 1090              		.loc 1 2910 0
 1091 0020 A242     		cmp	r2, r4
 1092 0022 4041     		adcs	r0, r0, r0
 1093 0024 8001     		lsls	r0, r0, #6
 1094              	.L102:
 1095              	.LVL101:
2911:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2912:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2913:Generated_Source\PSoC4/CapSense_Sensing.c ****             return (uint8)prsSize;
 1096              		.loc 1 2913 0
 1097 0026 C0B2     		uxtb	r0, r0
 1098              	.LVL102:
2914:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1099              		.loc 1 2914 0
 1100              		@ sp needed
 1101 0028 10BD     		pop	{r4, pc}
 1102              	.L106:
 1103 002a C046     		.align	2
 1104              	.L105:
 1105 002c 00000000 		.word	CapSense_dsRam
 1106              		.cfi_endproc
 1107              	.LFE24:
 1108              		.size	CapSense_SsCSDCalcPrsSize, .-CapSense_SsCSDCalcPrsSize
 1109              		.section	.text.CapSense_SsInitializeSourceSenseClk,"ax",%progbits
 1110              		.align	1
 1111              		.global	CapSense_SsInitializeSourceSenseClk
 1112              		.code	16
 1113              		.thumb_func
 1114              		.type	CapSense_SsInitializeSourceSenseClk, %function
 1115              	CapSense_SsInitializeSourceSenseClk:
 1116              	.LFB21:
2405:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
 1117              		.loc 1 2405 0
 1118              		.cfi_startproc
 1119              		@ args = 0, pretend = 0, frame = 0
 1120              		@ frame_needed = 0, uses_anonymous_args = 0
 1121              	.LVL103:
 1122 0000 70B5     		push	{r4, r5, r6, lr}
 1123              		.cfi_def_cfa_offset 16
 1124              		.cfi_offset 4, -16
 1125              		.cfi_offset 5, -12
 1126              		.cfi_offset 6, -8
 1127              		.cfi_offset 14, -4
 1128 0002 064C     		ldr	r4, .L110
 1129 0004 064E     		ldr	r6, .L110+4
 1130              	.LVL104:
 1131              	.L108:
2411:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1132              		.loc 1 2411 0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 73


 1133 0006 2568     		ldr	r5, [r4]
 1134              	.LVL105:
 1135 0008 1C34     		adds	r4, r4, #28
 1136              	.LBB18:
 1137              	.LBB19:
2490:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = 0u;
 1138              		.loc 1 2490 0
 1139 000a A889     		ldrh	r0, [r5, #12]
 1140 000c 2988     		ldrh	r1, [r5]
 1141 000e 4000     		lsls	r0, r0, #1
 1142 0010 FFF7FEFF 		bl	CapSense_SsCSDCalcPrsSize
 1143              	.LVL106:
2499:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1144              		.loc 1 2499 0
 1145 0014 A873     		strb	r0, [r5, #14]
 1146              	.LVL107:
 1147              	.LBE19:
 1148              	.LBE18:
2409:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1149              		.loc 1 2409 0
 1150 0016 A642     		cmp	r6, r4
 1151 0018 F5D1     		bne	.L108
2432:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) || \
 1152              		.loc 1 2432 0
 1153              		@ sp needed
 1154              	.LVL108:
 1155 001a 70BD     		pop	{r4, r5, r6, pc}
 1156              	.L111:
 1157              		.align	2
 1158              	.L110:
 1159 001c 04000000 		.word	CapSense_dsFlash+4
 1160 0020 74000000 		.word	CapSense_dsFlash+116
 1161              		.cfi_endproc
 1162              	.LFE21:
 1163              		.size	CapSense_SsInitializeSourceSenseClk, .-CapSense_SsInitializeSourceSenseClk
 1164              		.section	.text.CapSense_SetInactiveElectrodeState,"ax",%progbits
 1165              		.align	1
 1166              		.global	CapSense_SetInactiveElectrodeState
 1167              		.code	16
 1168              		.thumb_func
 1169              		.type	CapSense_SetInactiveElectrodeState, %function
 1170              	CapSense_SetInactiveElectrodeState:
 1171              	.LFB26:
2915:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2916:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
2917:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2918:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2919:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
2920:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2921:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_DischargeExtCapacitors
2922:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2923:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2924:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2925:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The internal function discharge available external capacitors.
2926:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2927:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2928:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function discharge available external capacitors by connection them
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 74


2929:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  to GND using STRONG GPIO drive mode. Additionaly, the function disconnects
2930:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the capacitors from analog mux buses if connected.
2931:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Note: the function does not restore the connection to analog mux busses
2932:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and supposes that all the capacitors belong to a single device port.
2933:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2934:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param
2935:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  dischargeTime The discharge time in us.
2936:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2937:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2938:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_DischargeExtCapacitors(uint32 dischargeTime)
2939:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2940:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 hsiomReg;
2941:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 drReg;
2942:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 pcReg;
2943:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
2944:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8  interruptState;
2945:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2946:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Store register state */
2947:Generated_Source\PSoC4/CapSense_Sensing.c ****         hsiomReg = CY_GET_REG32(CapSense_EXT_CAP_HSIOM_PTR) & CapSense_EXT_CAP_HSIOM_MASK;
2948:Generated_Source\PSoC4/CapSense_Sensing.c ****         drReg = CY_GET_REG32(CapSense_EXT_CAP_DR_PTR) & CapSense_EXT_CAP_DR_MASK;
2949:Generated_Source\PSoC4/CapSense_Sensing.c ****         pcReg = CY_GET_REG32(CapSense_EXT_CAP_PC_PTR) & CapSense_EXT_CAP_PC_MASK;
2950:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2951:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Ext Cap from AMUXBUS-A using HSIOM registers */
2952:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
2953:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_HSIOM_PTR);
2954:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_EXT_CAP_HSIOM_MASK);
2955:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_HSIOM_PTR, newRegValue);
2956:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
2957:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2958:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Set output port register to 0 to connect to GND */
2959:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
2960:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_DR_PTR);
2961:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_EXT_CAP_DR_MASK);
2962:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_DR_PTR, newRegValue);
2963:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
2964:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2965:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Set port configuration register (drive mode) in STRONG mode */
2966:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
2967:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_PC_PTR);
2968:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~((uint32)CapSense_EXT_CAP_PC_MASK));
2969:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= (CapSense_EXT_CAP_PC_STRONG_CFG);
2970:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_PC_PTR, newRegValue);
2971:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
2972:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2973:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Delay to discharge external capacitors */
2974:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyDelayUs((uint16)dischargeTime);
2975:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2976:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Restore previous register values */
2977:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
2978:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_PC_PTR);
2979:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~((uint32)CapSense_EXT_CAP_PC_MASK));
2980:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= pcReg;
2981:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_PC_PTR, newRegValue);
2982:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
2983:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2984:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
2985:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_DR_PTR);
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 75


2986:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_EXT_CAP_DR_MASK);
2987:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= drReg;
2988:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_DR_PTR, newRegValue);
2989:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
2990:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2991:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
2992:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_HSIOM_PTR);
2993:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_EXT_CAP_HSIOM_MASK);
2994:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= hsiomReg;
2995:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_HSIOM_PTR, newRegValue);
2996:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
2997:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2998:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2999:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
3000:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3001:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3002:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV1)
3003:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
3004:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_DischargeExtCapacitors
3005:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
3006:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3007:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
3008:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The internal function discharge available external capacitors.
3009:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3010:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
3011:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function discharge available external capacitors by connection them
3012:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  to GND using STRONG GPIO drive mode. Additionaly, the function disconnects
3013:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the capacitors from analog mux buses if connected.
3014:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Note: the function does not restore the connection to analog mux busses
3015:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and supposes that all the capacitors belong to a single device port.
3016:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3017:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param
3018:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  dischargeTime The discharge time in us.
3019:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3020:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
3021:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_DischargeExtCapacitors(uint32 dischargeTime)
3022:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
3023:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Store the pin configuration, the CMOD capacitor is connected to. */
3024:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
3025:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cmodHsiom = CY_GET_REG32(CapSense_CMOD_HSIOM_PTR) & CapSense_EXT_CAP_HSIOM_MASK_
3026:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cmodDr = CY_GET_REG32(CapSense_CMOD_DR_PTR) & CapSense_EXT_CAP_DR_MASK_CMOD;
3027:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cmodPc = CY_GET_REG32(CapSense_CMOD_PC_PTR) & CapSense_EXT_CAP_PC_MASK_CMOD;
3028:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3029:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Store the pin configuration, the CSH capacitor is connected to. */
3030:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) &&\
3031:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
3032:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 cshHsiom = CY_GET_REG32(CapSense_CSH_HSIOM_PTR) & CapSense_EXT_CAP_HSIOM_MAS
3033:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 cshDr = CY_GET_REG32(CapSense_CSH_DR_PTR) & CapSense_EXT_CAP_DR_MASK_CSH;
3034:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 cshPc = CY_GET_REG32(CapSense_CSH_PC_PTR) & CapSense_EXT_CAP_PC_MASK_CSH;
3035:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
3036:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3037:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3038:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
3039:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Store the pin configuration, the CintA capacitor is connected to. */
3040:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintAHsiom = CY_GET_REG32(CapSense_CintA_HSIOM_PTR) & CapSense_EXT_CAP_HSIOM_MAS
3041:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintADr = CY_GET_REG32(CapSense_CintA_DR_PTR) & CapSense_EXT_CAP_DR_MASK_CINTA;
3042:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintAPc = CY_GET_REG32(CapSense_CintA_PC_PTR) & CapSense_EXT_CAP_PC_MASK_CINTA;
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 76


3043:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3044:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Store the pin configuration, the CintB capacitor is connected to. */
3045:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintBHsiom = CY_GET_REG32(CapSense_CintB_HSIOM_PTR) & CapSense_EXT_CAP_HSIOM_MAS
3046:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintBDr = CY_GET_REG32(CapSense_CintB_DR_PTR) & CapSense_EXT_CAP_DR_MASK_CINTB;
3047:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintBPc = CY_GET_REG32(CapSense_CintB_PC_PTR) & CapSense_EXT_CAP_PC_MASK_CINTB;
3048:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3049:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3050:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
3051:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Disconnect the CMOD capacitor from the AMUXBUS and connect it to GND. */
3052:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_HSIOM_PTR, CapSense_EXT_CAP_HSIOM_MASK_CMOD,
3053:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_HSIOM_SEL_GPIO);
3054:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_DR_PTR, CapSense_EXT_CAP_DR_MASK_CMOD, 0u);
3055:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_PC_PTR, CapSense_EXT_CAP_PC_MASK_CMOD,
3056:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_STRONG_CFG_CMOD);
3057:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3058:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) &&\
3059:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
3060:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Disconnect the CSH capacitor from the AMUXBUS and connect it to GND. */
3061:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_HSIOM_PTR, CapSense_EXT_CAP_HSIOM_MASK_CSH,
3062:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                CapSense_HSIOM_SEL_GPIO);
3063:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_DR_PTR, CapSense_EXT_CAP_DR_MASK_CSH, 0u);
3064:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_PC_PTR, CapSense_EXT_CAP_PC_MASK_CSH,
3065:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                CapSense_EXT_CAP_PC_STRONG_CFG_CSH);
3066:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
3067:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3068:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3069:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
3070:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Disconnect the CintA capacitor from the AMUXBUS and connect it to GND. */
3071:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_HSIOM_PTR, CapSense_EXT_CAP_HSIOM_MASK_CINTA,
3072:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_HSIOM_SEL_GPIO);
3073:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_DR_PTR, CapSense_EXT_CAP_DR_MASK_CINTA, 0u);
3074:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_PC_PTR, CapSense_EXT_CAP_PC_MASK_CINTA,
3075:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_STRONG_CFG_CINTA);
3076:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3077:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Disconnect the CintB capacitor from the AMUXBUS and connect it to GND. */
3078:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_HSIOM_PTR, CapSense_EXT_CAP_HSIOM_MASK_CINTB,
3079:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_HSIOM_SEL_GPIO);
3080:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_DR_PTR, CapSense_EXT_CAP_DR_MASK_CINTB, 0u);
3081:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_PC_PTR, CapSense_EXT_CAP_PC_MASK_CINTB,
3082:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_STRONG_CFG_CINTB);
3083:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3084:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3085:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Delay to discharge external capacitors */
3086:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyDelayUs((uint16)dischargeTime);
3087:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3088:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
3089:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Restore the pin configuration, the CMOD capacitor is connected to. */
3090:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_PC_PTR,
3091:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_MASK_CMOD, cmodPc);
3092:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_DR_PTR,
3093:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_DR_MASK_CMOD, cmodDr);
3094:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_HSIOM_PTR,
3095:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_HSIOM_MASK_CMOD, cmodHsiom);
3096:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3097:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) &&\
3098:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
3099:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Restore the pin configuration, the CSH capacitor is connected to. */
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 77


3100:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_PC_PTR,
3101:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                CapSense_EXT_CAP_PC_MASK_CSH, cshPc);
3102:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_DR_PTR,
3103:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                CapSense_EXT_CAP_DR_MASK_CSH, cshDr);
3104:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_HSIOM_PTR,
3105:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                CapSense_EXT_CAP_HSIOM_MASK_CSH, cshHsiom);
3106:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
3107:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3108:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3109:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
3110:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Restore the pin configuration, the CintA capacitor is connected to. */
3111:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_PC_PTR,
3112:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_MASK_CINTA, cintAPc);
3113:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_DR_PTR,
3114:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_DR_MASK_CINTA, cintADr);
3115:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_HSIOM_PTR,
3116:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_HSIOM_MASK_CINTA, cintAHsiom);
3117:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3118:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Restore the pin configuration, the CintB capacitor is connected to. */
3119:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_PC_PTR,
3120:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_MASK_CINTB, cintBPc);
3121:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_DR_PTR,
3122:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_DR_MASK_CINTB, cintBDr);
3123:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_HSIOM_PTR,
3124:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_HSIOM_MASK_CINTB, cintBHsiom);
3125:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3126:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
3127:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV1) */
3128:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3129:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3130:Generated_Source\PSoC4/CapSense_Sensing.c **** #if((CapSense_ENABLE == CapSense_CSD_EN) ||\
3131:Generated_Source\PSoC4/CapSense_Sensing.c ****     (CapSense_ENABLE == CapSense_CSX_EN))
3132:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
3133:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SetInactiveElectrodeState
3134:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
3135:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3136:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
3137:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function updates the RAM data structure with the desired state of inactive
3138:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  electrodes for the specified operation mode. The state of pins is not changed
3139:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  in scope of this routine.
3140:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3141:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
3142:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function updates the following registers of RAM data structure:
3143:Generated_Source\PSoC4/CapSense_Sensing.c ****     *   - CapSense_SCAN_CSD_ISC_VALUE - Connection of inactive CSD and CSX
3144:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     electrodes during the regular CSD scan. By default, this register is initialized
3145:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     with the value of Inactive Sensor Connection combobox on the CSD Settings tab.
3146:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     The CapSense_SCAN_CSD_E value should be used as the Mode parameter
3147:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     to update this register.
3148:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3149:Generated_Source\PSoC4/CapSense_Sensing.c ****     *   - CapSense_SCAN_CSX_ISC_VALUE - Connection of inactive CSD, CSX and
3150:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     the dedicated Shield electrodes during the regular CSX scan. By default, this
3151:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     register is initialized with the value of Inactive Sensor Connection combobox
3152:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     on the CSX Settings tab.
3153:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     The CapSense_SCAN_CSX_E value should be used as the Mode parameter
3154:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     to update this register.
3155:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3156:Generated_Source\PSoC4/CapSense_Sensing.c ****     *   - CapSense_BIST_CSD_SNS_CAP_ISC_VALUE - Connection of inactive CSD and CSX
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 78


3157:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     electrodes during measurement of CSD electrodes capacitance.
3158:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     This register is initialized with the CapSense_SNS_CONNECTION_GROUND value
3159:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     by default.
3160:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     The CapSense_BIST_CSD_SNS_CAP_E value should be used as the Mode parameter
3161:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     to update this register.
3162:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3163:Generated_Source\PSoC4/CapSense_Sensing.c ****     *   - CapSense_BIST_CSX_SNS_CAP_ISC_VALUE - Connection of inactive CSD, CSX and
3164:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     the dedicated Shield electrodes during measurement of CSX electrodes (Tx and Rx)
3165:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     capacitance. This register is initialized with the CapSense_SNS_CONNECTION_GROUND
3166:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     value by default.
3167:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     The CapSense_BIST_CSX_SNS_CAP_E value should be used as the Mode parameter
3168:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     to update this register.
3169:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3170:Generated_Source\PSoC4/CapSense_Sensing.c ****     *   - CapSense_BIST_CSD_SH_CAP_ISC_VALUE - Connection of inactive CSD and CSX electrodes
3171:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     measurement of dedicated Shield  electrodes capacitance. This register is initialized wit
3172:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     the CapSense_SNS_CONNECTION_GROUND value by default.
3173:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     The CapSense_BIST_CSD_SH_CAP_E value should be used as the Mode parameter
3174:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     to update this register.
3175:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3176:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param
3177:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  mode Operation mode, the state of inactive sensors should be configured for.
3178:Generated_Source\PSoC4/CapSense_Sensing.c ****     *       This parameter can take the following values:
3179:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        - CapSense_SCAN_CSD_E - Regular CSD scan.
3180:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        - CapSense_SCAN_CSX_E - Regular CSX scan.
3181:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        - CapSense_BIST_CSD_SNS_CAP_E - Measurement of the CSD sensor capacitance.
3182:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        - CapSense_BIST_CSX_SNS_CAP_E - Measurement of the CSX electrode capacitance.
3183:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        - CapSense_BIST_CSD_SH_CAP_E - Measurement of the dedicated CSD Shield
3184:Generated_Source\PSoC4/CapSense_Sensing.c ****     *          electrode capacitance.
3185:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3186:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param
3187:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  state The desired state of inactive sensors.
3188:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        This parameter can take the following values:
3189:Generated_Source\PSoC4/CapSense_Sensing.c ****     *         - CapSense_SNS_CONNECTION_GROUND - Inactive sensors are connected to the ground.
3190:Generated_Source\PSoC4/CapSense_Sensing.c ****     *         - CapSense_SNS_CONNECTION_HIGHZ - Inactive sensors are floating (not
3191:Generated_Source\PSoC4/CapSense_Sensing.c ****     *           connected to GND or Shield).
3192:Generated_Source\PSoC4/CapSense_Sensing.c ****     *         - CapSense_SNS_CONNECTION_SHIELD - Inactive sensors are connected to the shield.
3193:Generated_Source\PSoC4/CapSense_Sensing.c ****     *           This option is available only if the Enable shield electrode check box is set.
3194:Generated_Source\PSoC4/CapSense_Sensing.c ****     *           At least one dedicated shield electrode is required to use the
3195:Generated_Source\PSoC4/CapSense_Sensing.c ****     *           CapSense_SNS_CONNECTION_SHIELD option for the CapSense_BIST_CSD_SH_CAP_E
3196:Generated_Source\PSoC4/CapSense_Sensing.c ****     *           operation mode.
3197:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3198:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
3199:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the operation:
3200:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_SUCCESS - The operation was successfully completed.
3201:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_PARAM - The input parameter is invalid.
3202:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3203:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
3204:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32_t CapSense_SetInactiveElectrodeState(CapSense_OPERATION_MODE_ENUM mode, uint32_t state)
3205:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1172              		.loc 1 3205 0
 1173              		.cfi_startproc
 1174              		@ args = 0, pretend = 0, frame = 0
 1175              		@ frame_needed = 0, uses_anonymous_args = 0
 1176              		@ link register save eliminated.
 1177              	.LVL109:
3206:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32_t retVal = CYRET_SUCCESS;
3207:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 79


3208:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch(mode)
 1178              		.loc 1 3208 0
 1179 0000 0028     		cmp	r0, #0
 1180 0002 03D1     		bne	.L116
3209:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
3210:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_ENABLE == CapSense_CSD_EN)
3211:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SCAN_CSD_E:
3212:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.scanCsdISC = (uint8)state;
 1181              		.loc 1 3212 0
 1182 0004 024B     		ldr	r3, .L117
 1183 0006 8E33     		adds	r3, r3, #142
 1184 0008 1970     		strb	r1, [r3]
3213:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 1185              		.loc 1 3213 0
 1186 000a 00E0     		b	.L113
 1187              	.L116:
3214:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3215:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3216:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_ENABLE == CapSense_CSX_EN)
3217:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SCAN_CSX_E:
3218:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.scanCsxISC = (uint8)state;
3219:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
3220:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3221:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3222:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if((CapSense_ENABLE == CapSense_SELF_TEST_EN) &&\
3223:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_TST_SNS_CAP_EN) &&\
3224:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_CSD_EN))
3225:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_BIST_CSD_SNS_CAP_E:
3226:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.selfTestConfig.bistCsdSnsCapISC = (uint8)state;
3227:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
3228:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3229:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3230:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if((CapSense_ENABLE == CapSense_SELF_TEST_EN) &&\
3231:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_TST_SNS_CAP_EN) &&\
3232:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_CSX_EN))
3233:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_BIST_CSX_SNS_CAP_E:
3234:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.selfTestConfig.bistCsxSnsCapISC = (uint8)state;
3235:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
3236:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3237:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3238:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if((CapSense_ENABLE == CapSense_SELF_TEST_EN) &&\
3239:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_TST_SH_CAP_EN) &&\
3240:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_CSD_EN) &&\
3241:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_CSD_SHIELD_EN))
3242:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_BIST_CSD_SH_CAP_E:
3243:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if((CapSense_CSD_TOTAL_SHIELD_COUNT == 0u) &&
3244:Generated_Source\PSoC4/CapSense_Sensing.c ****                    (CapSense_SNS_CONNECTION_SHIELD != state))
3245:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
3246:Generated_Source\PSoC4/CapSense_Sensing.c ****                     retVal = CYRET_BAD_PARAM;
3247:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
3248:Generated_Source\PSoC4/CapSense_Sensing.c ****                 else
3249:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
3250:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_dsRam.selfTestConfig.bistCsdShCapISC = (uint8)state;
3251:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
3252:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
3253:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3254:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 80


3255:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
3256:Generated_Source\PSoC4/CapSense_Sensing.c ****             CYASSERT(0u);
3257:Generated_Source\PSoC4/CapSense_Sensing.c ****             retVal = CYRET_BAD_PARAM;
 1188              		.loc 1 3257 0
 1189 000c 0120     		movs	r0, #1
 1190              	.LVL110:
 1191              	.L113:
3258:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
3259:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
3260:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3261:Generated_Source\PSoC4/CapSense_Sensing.c ****         return(retVal);
3262:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1192              		.loc 1 3262 0
 1193              		@ sp needed
 1194 000e 7047     		bx	lr
 1195              	.L118:
 1196              		.align	2
 1197              	.L117:
 1198 0010 00000000 		.word	CapSense_dsRam
 1199              		.cfi_endproc
 1200              	.LFE26:
 1201              		.size	CapSense_SetInactiveElectrodeState, .-CapSense_SetInactiveElectrodeState
 1202              		.section	.text.CapSense_WriteBitsSafe,"ax",%progbits
 1203              		.align	1
 1204              		.global	CapSense_WriteBitsSafe
 1205              		.code	16
 1206              		.thumb_func
 1207              		.type	CapSense_WriteBitsSafe, %function
 1208              	CapSense_WriteBitsSafe:
 1209              	.LFB27:
3263:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) ||\
3264:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSX_EN)) */
3265:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3266:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3267:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
3268:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_WriteBitsSafe
3269:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
3270:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3271:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
3272:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Writes a field in port-pin register, specified by the mask parameter
3273:Generated_Source\PSoC4/CapSense_Sensing.c **** *  with the specified value in critical section.
3274:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3275:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
3276:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Writes a field in port-pin register, specified by the mask parameter
3277:Generated_Source\PSoC4/CapSense_Sensing.c **** *  with the specified value in critical section.
3278:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3279:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param regPtr
3280:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies a pointer to port-pin register.
3281:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3282:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param mask
3283:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies bits to be modified.
3284:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3285:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param value
3286:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies a value to be written to the register.
3287:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3288:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
3289:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_WriteBitsSafe(reg32 * regPtr, uint32 mask, uint32 value)
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 81


3290:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 1210              		.loc 1 3290 0
 1211              		.cfi_startproc
 1212              		@ args = 0, pretend = 0, frame = 0
 1213              		@ frame_needed = 0, uses_anonymous_args = 0
 1214              	.LVL111:
 1215 0000 70B5     		push	{r4, r5, r6, lr}
 1216              		.cfi_def_cfa_offset 16
 1217              		.cfi_offset 4, -16
 1218              		.cfi_offset 5, -12
 1219              		.cfi_offset 6, -8
 1220              		.cfi_offset 14, -4
 1221              		.loc 1 3290 0
 1222 0002 0500     		movs	r5, r0
 1223 0004 1400     		movs	r4, r2
 1224 0006 0E00     		movs	r6, r1
3291:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 interruptState = CyEnterCriticalSection();
 1225              		.loc 1 3291 0
 1226 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1227              	.LVL112:
3292:Generated_Source\PSoC4/CapSense_Sensing.c ****     (* regPtr) = ((* regPtr) & ((uint32)~mask)) | (value & mask);
 1228              		.loc 1 3292 0
 1229 000c 2B68     		ldr	r3, [r5]
3293:Generated_Source\PSoC4/CapSense_Sensing.c ****     CyExitCriticalSection(interruptState);
3294:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 1230              		.loc 1 3294 0
 1231              		@ sp needed
3292:Generated_Source\PSoC4/CapSense_Sensing.c ****     (* regPtr) = ((* regPtr) & ((uint32)~mask)) | (value & mask);
 1232              		.loc 1 3292 0
 1233 000e 5C40     		eors	r4, r3
 1234              	.LVL113:
 1235 0010 3440     		ands	r4, r6
 1236 0012 5C40     		eors	r4, r3
 1237 0014 2C60     		str	r4, [r5]
3293:Generated_Source\PSoC4/CapSense_Sensing.c ****     CyExitCriticalSection(interruptState);
 1238              		.loc 1 3293 0
 1239 0016 FFF7FEFF 		bl	CyExitCriticalSection
 1240              	.LVL114:
 1241              	.LVL115:
 1242              	.LVL116:
 1243              		.loc 1 3294 0
 1244 001a 70BD     		pop	{r4, r5, r6, pc}
 1245              		.cfi_endproc
 1246              	.LFE27:
 1247              		.size	CapSense_WriteBitsSafe, .-CapSense_WriteBitsSafe
 1248              		.section	.text.CapSense_SsSwitchSensingMode,"ax",%progbits
 1249              		.align	1
 1250              		.global	CapSense_SsSwitchSensingMode
 1251              		.code	16
 1252              		.thumb_func
 1253              		.type	CapSense_SsSwitchSensingMode, %function
 1254              	CapSense_SsSwitchSensingMode:
 1255              	.LFB10:
1068:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_currentSenseMethod != mode)
 1256              		.loc 1 1068 0
 1257              		.cfi_startproc
 1258              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 82


 1259              		@ frame_needed = 0, uses_anonymous_args = 0
 1260              	.LVL117:
 1261 0000 70B5     		push	{r4, r5, r6, lr}
 1262              		.cfi_def_cfa_offset 16
 1263              		.cfi_offset 4, -16
 1264              		.cfi_offset 5, -12
 1265              		.cfi_offset 6, -8
 1266              		.cfi_offset 14, -4
1069:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1267              		.loc 1 1069 0
 1268 0002 0E4D     		ldr	r5, .L126
1068:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_currentSenseMethod != mode)
 1269              		.loc 1 1068 0
 1270 0004 0400     		movs	r4, r0
1069:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1271              		.loc 1 1069 0
 1272 0006 2B78     		ldrb	r3, [r5]
 1273 0008 8342     		cmp	r3, r0
 1274 000a 16D0     		beq	.L120
1072:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1275              		.loc 1 1072 0
 1276 000c 012B     		cmp	r3, #1
 1277 000e 09D1     		bne	.L123
 1278              	.LBB24:
 1279              	.LBB25:
 968:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1280              		.loc 1 968 0
 1281 0010 F021     		movs	r1, #240
 1282 0012 0022     		movs	r2, #0
 1283 0014 0901     		lsls	r1, r1, #4
 1284 0016 0A48     		ldr	r0, .L126+4
 1285              	.LVL118:
 1286 0018 FFF7FEFF 		bl	CapSense_WriteBitsSafe
 1287              	.LVL119:
 971:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1288              		.loc 1 971 0
 1289 001c FFF7FEFF 		bl	CapSense_SsCSDElectrodeCheck
 1290              	.LVL120:
 981:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 1291              		.loc 1 981 0
 1292 0020 FFF7FEFF 		bl	CapSense_SsCSDDisableShieldElectrodes
 1293              	.LVL121:
 1294              	.L123:
 1295              	.LBE25:
 1296              	.LBE24:
1105:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1297              		.loc 1 1105 0
 1298 0024 012C     		cmp	r4, #1
 1299 0026 03D1     		bne	.L124
1109:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSD_E;
 1300              		.loc 1 1109 0
 1301 0028 FFF7FEFF 		bl	CapSense_SsCSDInitialize
 1302              	.LVL122:
1110:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 1303              		.loc 1 1110 0
 1304 002c 2C70     		strb	r4, [r5]
 1305 002e 04E0     		b	.L120
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 83


 1306              	.L124:
1113:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1307              		.loc 1 1113 0
 1308 0030 023C     		subs	r4, r4, #2
 1309 0032 022C     		cmp	r4, #2
 1310 0034 01D9     		bls	.L120
 1311              	.LVL123:
 1312              	.LBB26:
 1313              	.LBB27:
1138:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1314              		.loc 1 1138 0
 1315 0036 0023     		movs	r3, #0
 1316 0038 2B70     		strb	r3, [r5]
 1317              	.LVL124:
 1318              	.L120:
 1319              	.LBE27:
 1320              	.LBE26:
1141:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1321              		.loc 1 1141 0
 1322              		@ sp needed
 1323 003a 70BD     		pop	{r4, r5, r6, pc}
 1324              	.L127:
 1325              		.align	2
 1326              	.L126:
 1327 003c 00000000 		.word	.LANCHOR0
 1328 0040 00040240 		.word	1073873920
 1329              		.cfi_endproc
 1330              	.LFE10:
 1331              		.size	CapSense_SsSwitchSensingMode, .-CapSense_SsSwitchSensingMode
 1332              		.section	.text.CapSense_SsInitialize,"ax",%progbits
 1333              		.align	1
 1334              		.global	CapSense_SsInitialize
 1335              		.code	16
 1336              		.thumb_func
 1337              		.type	CapSense_SsInitialize, %function
 1338              	CapSense_SsInitialize:
 1339              	.LFB7:
 708:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus initStatus;
 1340              		.loc 1 708 0
 1341              		.cfi_startproc
 1342              		@ args = 0, pretend = 0, frame = 0
 1343              		@ frame_needed = 0, uses_anonymous_args = 0
 1344              	.LVL125:
 1345              	.LBB32:
 1346              	.LBB33:
 1347              	.LBB34:
2127:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM1_PTR) &
 1348              		.loc 1 2127 0
 1349 0000 0F20     		movs	r0, #15
 1350              	.LBE34:
 1351              	.LBE33:
 1352              	.LBE32:
 708:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus initStatus;
 1353              		.loc 1 708 0
 1354 0002 70B5     		push	{r4, r5, r6, lr}
 1355              		.cfi_def_cfa_offset 16
 1356              		.cfi_offset 4, -16
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 84


 1357              		.cfi_offset 5, -12
 1358              		.cfi_offset 6, -8
 1359              		.cfi_offset 14, -4
 1360              	.LBB39:
 1361              	.LBB37:
 1362              	.LBB35:
2127:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM1_PTR) &
 1363              		.loc 1 2127 0
 1364 0004 0F4C     		ldr	r4, .L129
2133:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM1_PTR) &
 1365              		.loc 1 2133 0
 1366 0006 F022     		movs	r2, #240
2127:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM1_PTR) &
 1367              		.loc 1 2127 0
 1368 0008 2368     		ldr	r3, [r4]
2128:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                       CapSense_SFLASH_TRIM_IDAC_MOD_MASK);
 1369              		.loc 1 2128 0
 1370 000a 0F4D     		ldr	r5, .L129+4
2127:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM1_PTR) &
 1371              		.loc 1 2127 0
 1372 000c 8343     		bics	r3, r0
 1373 000e 1900     		movs	r1, r3
 1374              	.LVL126:
2128:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                       CapSense_SFLASH_TRIM_IDAC_MOD_MASK);
 1375              		.loc 1 2128 0
 1376 0010 2B78     		ldrb	r3, [r5]
 1377              	.LBE35:
 1378              	.LBE37:
 1379              	.LBE39:
 769:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1380              		.loc 1 769 0
 1381              		@ sp needed
 1382              	.LBB40:
 1383              	.LBB38:
 1384              	.LBB36:
2128:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                       CapSense_SFLASH_TRIM_IDAC_MOD_MASK);
 1385              		.loc 1 2128 0
 1386 0012 0340     		ands	r3, r0
 1387 0014 0B43     		orrs	r3, r1
 1388              	.LVL127:
2133:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM1_PTR) &
 1389              		.loc 1 2133 0
 1390 0016 9343     		bics	r3, r2
 1391              	.LVL128:
 1392 0018 1A00     		movs	r2, r3
 1393              	.LVL129:
2134:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                           CapSense_SFLASH_TRIM_IDAC_COMP_MASK);
 1394              		.loc 1 2134 0
 1395 001a 2B78     		ldrb	r3, [r5]
 1396 001c 8343     		bics	r3, r0
 1397 001e 1343     		orrs	r3, r2
 1398              	.LVL130:
2139:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1399              		.loc 1 2139 0
 1400 0020 2360     		str	r3, [r4]
 1401              	.LVL131:
 1402              	.LBE36:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 85


 1403              	.LBE38:
 1404              	.LBE40:
 753:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1405              		.loc 1 753 0
 1406 0022 0024     		movs	r4, #0
 747:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) ||\
 1407              		.loc 1 747 0
 1408 0024 FFF7FEFF 		bl	CapSense_SsInitializeSourceSenseClk
 1409              	.LVL132:
 752:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_dsRam.scanCurrentISC = CapSense_SNS_CONNECTION_GROUND;
 1410              		.loc 1 752 0
 1411 0028 0020     		movs	r0, #0
 1412 002a FFF7FEFF 		bl	CapSense_SsSetAllIOsState
 1413              	.LVL133:
 753:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1414              		.loc 1 753 0
 1415 002e 074B     		ldr	r3, .L129+8
 755:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_MANY_SENSE_MODES_EN)
 1416              		.loc 1 755 0
 1417 0030 2000     		movs	r0, r4
 753:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1418              		.loc 1 753 0
 1419 0032 8F33     		adds	r3, r3, #143
 1420 0034 1C70     		strb	r4, [r3]
 755:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_MANY_SENSE_MODES_EN)
 1421              		.loc 1 755 0
 1422 0036 FFF7FEFF 		bl	CapSense_SsSwitchSensingMode
 1423              	.LVL134:
 758:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSX_EN)
 1424              		.loc 1 758 0
 1425 003a 0120     		movs	r0, #1
 1426 003c FFF7FEFF 		bl	CapSense_SsSwitchSensingMode
 1427              	.LVL135:
 769:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1428              		.loc 1 769 0
 1429 0040 2000     		movs	r0, r4
 1430 0042 70BD     		pop	{r4, r5, r6, pc}
 1431              	.L130:
 1432              		.align	2
 1433              	.L129:
 1434 0044 00FF2840 		.word	1076428544
 1435 0048 62F1FF0F 		.word	268431714
 1436 004c 00000000 		.word	CapSense_dsRam
 1437              		.cfi_endproc
 1438              	.LFE7:
 1439              		.size	CapSense_SsInitialize, .-CapSense_SsInitialize
 1440              		.section	.text.CapSense_DischargeExtCapacitors,"ax",%progbits
 1441              		.align	1
 1442              		.global	CapSense_DischargeExtCapacitors
 1443              		.code	16
 1444              		.thumb_func
 1445              		.type	CapSense_DischargeExtCapacitors, %function
 1446              	CapSense_DischargeExtCapacitors:
 1447              	.LFB25:
3022:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Store the pin configuration, the CMOD capacitor is connected to. */
 1448              		.loc 1 3022 0
 1449              		.cfi_startproc
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 86


 1450              		@ args = 0, pretend = 0, frame = 16
 1451              		@ frame_needed = 0, uses_anonymous_args = 0
 1452              	.LVL136:
3052:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_HSIOM_SEL_GPIO);
 1453              		.loc 1 3052 0
 1454 0000 F021     		movs	r1, #240
3022:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Store the pin configuration, the CMOD capacitor is connected to. */
 1455              		.loc 1 3022 0
 1456 0002 F0B5     		push	{r4, r5, r6, r7, lr}
 1457              		.cfi_def_cfa_offset 20
 1458              		.cfi_offset 4, -20
 1459              		.cfi_offset 5, -16
 1460              		.cfi_offset 6, -12
 1461              		.cfi_offset 7, -8
 1462              		.cfi_offset 14, -4
3025:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cmodDr = CY_GET_REG32(CapSense_CMOD_DR_PTR) & CapSense_EXT_CAP_DR_MASK_CMOD;
 1463              		.loc 1 3025 0
 1464 0004 1B4C     		ldr	r4, .L132
3026:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cmodPc = CY_GET_REG32(CapSense_CMOD_PC_PTR) & CapSense_EXT_CAP_PC_MASK_CMOD;
 1465              		.loc 1 3026 0
 1466 0006 1C4D     		ldr	r5, .L132+4
3025:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cmodDr = CY_GET_REG32(CapSense_CMOD_DR_PTR) & CapSense_EXT_CAP_DR_MASK_CMOD;
 1467              		.loc 1 3025 0
 1468 0008 2368     		ldr	r3, [r4]
3022:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Store the pin configuration, the CMOD capacitor is connected to. */
 1469              		.loc 1 3022 0
 1470 000a 85B0     		sub	sp, sp, #20
 1471              		.cfi_def_cfa_offset 40
3027:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1472              		.loc 1 3027 0
 1473 000c 1B4E     		ldr	r6, .L132+8
3025:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cmodDr = CY_GET_REG32(CapSense_CMOD_DR_PTR) & CapSense_EXT_CAP_DR_MASK_CMOD;
 1474              		.loc 1 3025 0
 1475 000e 0093     		str	r3, [sp]
 1476              	.LVL137:
3026:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cmodPc = CY_GET_REG32(CapSense_CMOD_PC_PTR) & CapSense_EXT_CAP_PC_MASK_CMOD;
 1477              		.loc 1 3026 0
 1478 0010 2B68     		ldr	r3, [r5]
 1479              	.LVL138:
3022:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Store the pin configuration, the CMOD capacitor is connected to. */
 1480              		.loc 1 3022 0
 1481 0012 0390     		str	r0, [sp, #12]
3026:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cmodPc = CY_GET_REG32(CapSense_CMOD_PC_PTR) & CapSense_EXT_CAP_PC_MASK_CMOD;
 1482              		.loc 1 3026 0
 1483 0014 0193     		str	r3, [sp, #4]
 1484              	.LVL139:
3027:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1485              		.loc 1 3027 0
 1486 0016 3368     		ldr	r3, [r6]
 1487              	.LVL140:
3052:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_HSIOM_SEL_GPIO);
 1488              		.loc 1 3052 0
 1489 0018 2000     		movs	r0, r4
 1490              	.LVL141:
 1491 001a 0022     		movs	r2, #0
 1492 001c 0901     		lsls	r1, r1, #4
3027:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 87


 1493              		.loc 1 3027 0
 1494 001e 0293     		str	r3, [sp, #8]
 1495              	.LVL142:
3055:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_STRONG_CFG_CMOD);
 1496              		.loc 1 3055 0
 1497 0020 E027     		movs	r7, #224
3052:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_HSIOM_SEL_GPIO);
 1498              		.loc 1 3052 0
 1499 0022 FFF7FEFF 		bl	CapSense_WriteBitsSafe
 1500              	.LVL143:
3054:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_PC_PTR, CapSense_EXT_CAP_PC_MASK_CMOD,
 1501              		.loc 1 3054 0
 1502 0026 2800     		movs	r0, r5
 1503 0028 0022     		movs	r2, #0
 1504 002a 0421     		movs	r1, #4
 1505 002c FFF7FEFF 		bl	CapSense_WriteBitsSafe
 1506              	.LVL144:
3055:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_STRONG_CFG_CMOD);
 1507              		.loc 1 3055 0
 1508 0030 C022     		movs	r2, #192
 1509 0032 7F00     		lsls	r7, r7, #1
 1510 0034 3900     		movs	r1, r7
 1511 0036 5200     		lsls	r2, r2, #1
 1512 0038 3000     		movs	r0, r6
 1513 003a FFF7FEFF 		bl	CapSense_WriteBitsSafe
 1514              	.LVL145:
3086:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1515              		.loc 1 3086 0
 1516 003e 6B46     		mov	r3, sp
 1517 0040 9889     		ldrh	r0, [r3, #12]
 1518 0042 FFF7FEFF 		bl	CyDelayUs
 1519              	.LVL146:
3090:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_MASK_CMOD, cmodPc);
 1520              		.loc 1 3090 0
 1521 0046 029A     		ldr	r2, [sp, #8]
 1522 0048 3900     		movs	r1, r7
 1523 004a 3A40     		ands	r2, r7
 1524 004c 3000     		movs	r0, r6
 1525 004e FFF7FEFF 		bl	CapSense_WriteBitsSafe
 1526              	.LVL147:
3092:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_DR_MASK_CMOD, cmodDr);
 1527              		.loc 1 3092 0
 1528 0052 0421     		movs	r1, #4
 1529 0054 019A     		ldr	r2, [sp, #4]
 1530 0056 2800     		movs	r0, r5
 1531 0058 0A40     		ands	r2, r1
 1532 005a FFF7FEFF 		bl	CapSense_WriteBitsSafe
 1533              	.LVL148:
3094:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_HSIOM_MASK_CMOD, cmodHsiom);
 1534              		.loc 1 3094 0
 1535 005e F023     		movs	r3, #240
 1536 0060 009A     		ldr	r2, [sp]
 1537 0062 1B01     		lsls	r3, r3, #4
 1538 0064 1A40     		ands	r2, r3
 1539 0066 1900     		movs	r1, r3
 1540 0068 2000     		movs	r0, r4
 1541 006a FFF7FEFF 		bl	CapSense_WriteBitsSafe
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 88


 1542              	.LVL149:
3126:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV1) */
 1543              		.loc 1 3126 0
 1544 006e 05B0     		add	sp, sp, #20
 1545              	.LVL150:
 1546              		@ sp needed
 1547 0070 F0BD     		pop	{r4, r5, r6, r7, pc}
 1548              	.L133:
 1549 0072 C046     		.align	2
 1550              	.L132:
 1551 0074 00040240 		.word	1073873920
 1552 0078 00040440 		.word	1074004992
 1553 007c 08040440 		.word	1074005000
 1554              		.cfi_endproc
 1555              	.LFE25:
 1556              		.size	CapSense_DischargeExtCapacitors, .-CapSense_DischargeExtCapacitors
 1557              		.global	CapSense_idacGainTable
 1558              		.comm	CapSense_curSnsIOPtr,4,4
 1559              		.comm	CapSense_curRamSnsPtr,4,4
 1560              		.global	CapSense_requestScanAllWidget
 1561              		.global	CapSense_sensorIndex
 1562              		.global	CapSense_widgetIndex
 1563              		.global	CapSense_scanFreqIndex
 1564              		.global	CapSense_currentSenseMethod
 1565              		.section	.rodata
 1566              		.align	2
 1567              		.type	CapSense_idacGainTable, %object
 1568              		.size	CapSense_idacGainTable, 16
 1569              	CapSense_idacGainTable:
 1570 0000 00000000 		.word	0
 1571 0004 804F1200 		.word	1200000
 1572 0008 00040000 		.word	1024
 1573 000c 009F2400 		.word	2400000
 1574              		.type	CapSense_scanFreqIndex, %object
 1575              		.size	CapSense_scanFreqIndex, 1
 1576              	CapSense_scanFreqIndex:
 1577 0010 00       		.space	1
 1578              		.bss
 1579              		.set	.LANCHOR0,. + 0
 1580              		.type	CapSense_currentSenseMethod, %object
 1581              		.size	CapSense_currentSenseMethod, 1
 1582              	CapSense_currentSenseMethod:
 1583 0000 00       		.space	1
 1584              		.type	CapSense_requestScanAllWidget, %object
 1585              		.size	CapSense_requestScanAllWidget, 1
 1586              	CapSense_requestScanAllWidget:
 1587 0001 00       		.space	1
 1588              		.type	CapSense_widgetIndex, %object
 1589              		.size	CapSense_widgetIndex, 1
 1590              	CapSense_widgetIndex:
 1591 0002 00       		.space	1
 1592              		.type	CapSense_sensorIndex, %object
 1593              		.size	CapSense_sensorIndex, 1
 1594              	CapSense_sensorIndex:
 1595 0003 00       		.space	1
 1596              		.text
 1597              	.Letext0:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 89


 1598              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1599              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1600              		.file 4 "Generated_Source\\PSoC4/cytypes.h"
 1601              		.file 5 "Generated_Source\\PSoC4\\CapSense_Configuration.h"
 1602              		.file 6 "Generated_Source\\PSoC4\\CapSense_Structure.h"
 1603              		.file 7 "Generated_Source\\PSoC4\\CapSense_Sensing.h"
 1604              		.file 8 "Generated_Source\\PSoC4\\CapSense_SensingCSD_LL.h"
 1605              		.file 9 "Generated_Source\\PSoC4/CyLib.h"
 1606              		.file 10 "Generated_Source\\PSoC4\\CapSense_ISR.h"
 1607              		.section	.debug_info,"",%progbits
 1608              	.Ldebug_info0:
 1609 0000 3F120000 		.4byte	0x123f
 1610 0004 0400     		.2byte	0x4
 1611 0006 00000000 		.4byte	.Ldebug_abbrev0
 1612 000a 04       		.byte	0x4
 1613 000b 01       		.uleb128 0x1
 1614 000c 6D0A0000 		.4byte	.LASF193
 1615 0010 0C       		.byte	0xc
 1616 0011 A2080000 		.4byte	.LASF194
 1617 0015 6B060000 		.4byte	.LASF195
 1618 0019 20000000 		.4byte	.Ldebug_ranges0+0x20
 1619 001d 00000000 		.4byte	0
 1620 0021 00000000 		.4byte	.Ldebug_line0
 1621 0025 02       		.uleb128 0x2
 1622 0026 01       		.byte	0x1
 1623 0027 06       		.byte	0x6
 1624 0028 AC0B0000 		.4byte	.LASF0
 1625 002c 02       		.uleb128 0x2
 1626 002d 01       		.byte	0x1
 1627 002e 08       		.byte	0x8
 1628 002f EF090000 		.4byte	.LASF1
 1629 0033 02       		.uleb128 0x2
 1630 0034 02       		.byte	0x2
 1631 0035 05       		.byte	0x5
 1632 0036 9B070000 		.4byte	.LASF2
 1633 003a 02       		.uleb128 0x2
 1634 003b 02       		.byte	0x2
 1635 003c 07       		.byte	0x7
 1636 003d D40B0000 		.4byte	.LASF3
 1637 0041 02       		.uleb128 0x2
 1638 0042 04       		.byte	0x4
 1639 0043 05       		.byte	0x5
 1640 0044 D3070000 		.4byte	.LASF4
 1641 0048 03       		.uleb128 0x3
 1642 0049 070A0000 		.4byte	.LASF9
 1643 004d 02       		.byte	0x2
 1644 004e 41       		.byte	0x41
 1645 004f 53000000 		.4byte	0x53
 1646 0053 02       		.uleb128 0x2
 1647 0054 04       		.byte	0x4
 1648 0055 07       		.byte	0x7
 1649 0056 34090000 		.4byte	.LASF5
 1650 005a 02       		.uleb128 0x2
 1651 005b 08       		.byte	0x8
 1652 005c 05       		.byte	0x5
 1653 005d 07050000 		.4byte	.LASF6
 1654 0061 02       		.uleb128 0x2
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 90


 1655 0062 08       		.byte	0x8
 1656 0063 07       		.byte	0x7
 1657 0064 3B020000 		.4byte	.LASF7
 1658 0068 04       		.uleb128 0x4
 1659 0069 04       		.byte	0x4
 1660 006a 05       		.byte	0x5
 1661 006b 696E7400 		.ascii	"int\000"
 1662 006f 02       		.uleb128 0x2
 1663 0070 04       		.byte	0x4
 1664 0071 07       		.byte	0x7
 1665 0072 A7000000 		.4byte	.LASF8
 1666 0076 03       		.uleb128 0x3
 1667 0077 C0010000 		.4byte	.LASF10
 1668 007b 03       		.byte	0x3
 1669 007c 30       		.byte	0x30
 1670 007d 48000000 		.4byte	0x48
 1671 0081 05       		.uleb128 0x5
 1672 0082 220C0000 		.4byte	.LASF11
 1673 0086 04       		.byte	0x4
 1674 0087 E401     		.2byte	0x1e4
 1675 0089 2C000000 		.4byte	0x2c
 1676 008d 05       		.uleb128 0x5
 1677 008e F2030000 		.4byte	.LASF12
 1678 0092 04       		.byte	0x4
 1679 0093 E501     		.2byte	0x1e5
 1680 0095 3A000000 		.4byte	0x3a
 1681 0099 05       		.uleb128 0x5
 1682 009a 30060000 		.4byte	.LASF13
 1683 009e 04       		.byte	0x4
 1684 009f E601     		.2byte	0x1e6
 1685 00a1 53000000 		.4byte	0x53
 1686 00a5 02       		.uleb128 0x2
 1687 00a6 04       		.byte	0x4
 1688 00a7 04       		.byte	0x4
 1689 00a8 06020000 		.4byte	.LASF14
 1690 00ac 02       		.uleb128 0x2
 1691 00ad 08       		.byte	0x8
 1692 00ae 04       		.byte	0x4
 1693 00af 280C0000 		.4byte	.LASF15
 1694 00b3 02       		.uleb128 0x2
 1695 00b4 01       		.byte	0x1
 1696 00b5 08       		.byte	0x8
 1697 00b6 80030000 		.4byte	.LASF16
 1698 00ba 05       		.uleb128 0x5
 1699 00bb E6090000 		.4byte	.LASF17
 1700 00bf 04       		.byte	0x4
 1701 00c0 8602     		.2byte	0x286
 1702 00c2 53000000 		.4byte	0x53
 1703 00c6 05       		.uleb128 0x5
 1704 00c7 2F010000 		.4byte	.LASF18
 1705 00cb 04       		.byte	0x4
 1706 00cc 8E02     		.2byte	0x28e
 1707 00ce D2000000 		.4byte	0xd2
 1708 00d2 06       		.uleb128 0x6
 1709 00d3 81000000 		.4byte	0x81
 1710 00d7 05       		.uleb128 0x5
 1711 00d8 12070000 		.4byte	.LASF19
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 91


 1712 00dc 04       		.byte	0x4
 1713 00dd 9002     		.2byte	0x290
 1714 00df E3000000 		.4byte	0xe3
 1715 00e3 06       		.uleb128 0x6
 1716 00e4 99000000 		.4byte	0x99
 1717 00e8 05       		.uleb128 0x5
 1718 00e9 ED050000 		.4byte	.LASF20
 1719 00ed 04       		.byte	0x4
 1720 00ee A002     		.2byte	0x2a0
 1721 00f0 F4000000 		.4byte	0xf4
 1722 00f4 07       		.uleb128 0x7
 1723 00f5 04       		.byte	0x4
 1724 00f6 FA000000 		.4byte	0xfa
 1725 00fa 08       		.uleb128 0x8
 1726 00fb 05       		.uleb128 0x5
 1727 00fc 550A0000 		.4byte	.LASF21
 1728 0100 05       		.byte	0x5
 1729 0101 2A01     		.2byte	0x12a
 1730 0103 8D000000 		.4byte	0x8d
 1731 0107 05       		.uleb128 0x5
 1732 0108 7B040000 		.4byte	.LASF22
 1733 010c 05       		.byte	0x5
 1734 010d 2E01     		.2byte	0x12e
 1735 010f 81000000 		.4byte	0x81
 1736 0113 09       		.uleb128 0x9
 1737 0114 01       		.byte	0x1
 1738 0115 2C000000 		.4byte	0x2c
 1739 0119 06       		.byte	0x6
 1740 011a 70       		.byte	0x70
 1741 011b 3E010000 		.4byte	0x13e
 1742 011f 0A       		.uleb128 0xa
 1743 0120 92000000 		.4byte	.LASF23
 1744 0124 00       		.byte	0
 1745 0125 0A       		.uleb128 0xa
 1746 0126 E3080000 		.4byte	.LASF24
 1747 012a 01       		.byte	0x1
 1748 012b 0A       		.uleb128 0xa
 1749 012c F5070000 		.4byte	.LASF25
 1750 0130 02       		.byte	0x2
 1751 0131 0A       		.uleb128 0xa
 1752 0132 0C0B0000 		.4byte	.LASF26
 1753 0136 03       		.byte	0x3
 1754 0137 0A       		.uleb128 0xa
 1755 0138 EA060000 		.4byte	.LASF27
 1756 013c 04       		.byte	0x4
 1757 013d 00       		.byte	0
 1758 013e 03       		.uleb128 0x3
 1759 013f B4040000 		.4byte	.LASF28
 1760 0143 06       		.byte	0x6
 1761 0144 76       		.byte	0x76
 1762 0145 13010000 		.4byte	0x113
 1763 0149 0B       		.uleb128 0xb
 1764 014a 10       		.byte	0x10
 1765 014b 06       		.byte	0x6
 1766 014c AD       		.byte	0xad
 1767 014d D6010000 		.4byte	0x1d6
 1768 0151 0C       		.uleb128 0xc
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 92


 1769 0152 3C040000 		.4byte	.LASF29
 1770 0156 06       		.byte	0x6
 1771 0157 B2       		.byte	0xb2
 1772 0158 8D000000 		.4byte	0x8d
 1773 015c 00       		.byte	0
 1774 015d 0C       		.uleb128 0xc
 1775 015e 97090000 		.4byte	.LASF30
 1776 0162 06       		.byte	0x6
 1777 0163 B7       		.byte	0xb7
 1778 0164 FB000000 		.4byte	0xfb
 1779 0168 02       		.byte	0x2
 1780 0169 0C       		.uleb128 0xc
 1781 016a 78030000 		.4byte	.LASF31
 1782 016e 06       		.byte	0x6
 1783 016f BC       		.byte	0xbc
 1784 0170 81000000 		.4byte	0x81
 1785 0174 04       		.byte	0x4
 1786 0175 0C       		.uleb128 0xc
 1787 0176 D9050000 		.4byte	.LASF32
 1788 017a 06       		.byte	0x6
 1789 017b C1       		.byte	0xc1
 1790 017c 81000000 		.4byte	0x81
 1791 0180 05       		.byte	0x5
 1792 0181 0C       		.uleb128 0xc
 1793 0182 27030000 		.4byte	.LASF33
 1794 0186 06       		.byte	0x6
 1795 0187 C7       		.byte	0xc7
 1796 0188 81000000 		.4byte	0x81
 1797 018c 06       		.byte	0x6
 1798 018d 0C       		.uleb128 0xc
 1799 018e 36050000 		.4byte	.LASF34
 1800 0192 06       		.byte	0x6
 1801 0193 CD       		.byte	0xcd
 1802 0194 81000000 		.4byte	0x81
 1803 0198 07       		.byte	0x7
 1804 0199 0C       		.uleb128 0xc
 1805 019a 61030000 		.4byte	.LASF35
 1806 019e 06       		.byte	0x6
 1807 019f D4       		.byte	0xd4
 1808 01a0 07010000 		.4byte	0x107
 1809 01a4 08       		.byte	0x8
 1810 01a5 0C       		.uleb128 0xc
 1811 01a6 55090000 		.4byte	.LASF36
 1812 01aa 06       		.byte	0x6
 1813 01ab DB       		.byte	0xdb
 1814 01ac D6010000 		.4byte	0x1d6
 1815 01b0 09       		.byte	0x9
 1816 01b1 0C       		.uleb128 0xc
 1817 01b2 E9010000 		.4byte	.LASF37
 1818 01b6 06       		.byte	0x6
 1819 01b7 E0       		.byte	0xe0
 1820 01b8 81000000 		.4byte	0x81
 1821 01bc 0A       		.byte	0xa
 1822 01bd 0C       		.uleb128 0xc
 1823 01be 5B0B0000 		.4byte	.LASF38
 1824 01c2 06       		.byte	0x6
 1825 01c3 E8       		.byte	0xe8
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 93


 1826 01c4 8D000000 		.4byte	0x8d
 1827 01c8 0C       		.byte	0xc
 1828 01c9 0C       		.uleb128 0xc
 1829 01ca 58070000 		.4byte	.LASF39
 1830 01ce 06       		.byte	0x6
 1831 01cf ED       		.byte	0xed
 1832 01d0 81000000 		.4byte	0x81
 1833 01d4 0E       		.byte	0xe
 1834 01d5 00       		.byte	0
 1835 01d6 0D       		.uleb128 0xd
 1836 01d7 81000000 		.4byte	0x81
 1837 01db E6010000 		.4byte	0x1e6
 1838 01df 0E       		.uleb128 0xe
 1839 01e0 E6010000 		.4byte	0x1e6
 1840 01e4 00       		.byte	0
 1841 01e5 00       		.byte	0
 1842 01e6 02       		.uleb128 0x2
 1843 01e7 04       		.byte	0x4
 1844 01e8 07       		.byte	0x7
 1845 01e9 23090000 		.4byte	.LASF40
 1846 01ed 03       		.uleb128 0x3
 1847 01ee 0B060000 		.4byte	.LASF41
 1848 01f2 06       		.byte	0x6
 1849 01f3 EE       		.byte	0xee
 1850 01f4 49010000 		.4byte	0x149
 1851 01f8 0B       		.uleb128 0xb
 1852 01f9 10       		.byte	0x10
 1853 01fa 06       		.byte	0x6
 1854 01fb F3       		.byte	0xf3
 1855 01fc 8E020000 		.4byte	0x28e
 1856 0200 0C       		.uleb128 0xc
 1857 0201 3C040000 		.4byte	.LASF29
 1858 0205 06       		.byte	0x6
 1859 0206 F8       		.byte	0xf8
 1860 0207 8D000000 		.4byte	0x8d
 1861 020b 00       		.byte	0
 1862 020c 0C       		.uleb128 0xc
 1863 020d 97090000 		.4byte	.LASF30
 1864 0211 06       		.byte	0x6
 1865 0212 FD       		.byte	0xfd
 1866 0213 FB000000 		.4byte	0xfb
 1867 0217 02       		.byte	0x2
 1868 0218 0F       		.uleb128 0xf
 1869 0219 78030000 		.4byte	.LASF31
 1870 021d 06       		.byte	0x6
 1871 021e 0201     		.2byte	0x102
 1872 0220 81000000 		.4byte	0x81
 1873 0224 04       		.byte	0x4
 1874 0225 0F       		.uleb128 0xf
 1875 0226 D9050000 		.4byte	.LASF32
 1876 022a 06       		.byte	0x6
 1877 022b 0701     		.2byte	0x107
 1878 022d 81000000 		.4byte	0x81
 1879 0231 05       		.byte	0x5
 1880 0232 0F       		.uleb128 0xf
 1881 0233 27030000 		.4byte	.LASF33
 1882 0237 06       		.byte	0x6
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 94


 1883 0238 0D01     		.2byte	0x10d
 1884 023a 81000000 		.4byte	0x81
 1885 023e 06       		.byte	0x6
 1886 023f 0F       		.uleb128 0xf
 1887 0240 36050000 		.4byte	.LASF34
 1888 0244 06       		.byte	0x6
 1889 0245 1301     		.2byte	0x113
 1890 0247 81000000 		.4byte	0x81
 1891 024b 07       		.byte	0x7
 1892 024c 0F       		.uleb128 0xf
 1893 024d 61030000 		.4byte	.LASF35
 1894 0251 06       		.byte	0x6
 1895 0252 1A01     		.2byte	0x11a
 1896 0254 07010000 		.4byte	0x107
 1897 0258 08       		.byte	0x8
 1898 0259 0F       		.uleb128 0xf
 1899 025a 55090000 		.4byte	.LASF36
 1900 025e 06       		.byte	0x6
 1901 025f 2101     		.2byte	0x121
 1902 0261 D6010000 		.4byte	0x1d6
 1903 0265 09       		.byte	0x9
 1904 0266 0F       		.uleb128 0xf
 1905 0267 E9010000 		.4byte	.LASF37
 1906 026b 06       		.byte	0x6
 1907 026c 2601     		.2byte	0x126
 1908 026e 81000000 		.4byte	0x81
 1909 0272 0A       		.byte	0xa
 1910 0273 0F       		.uleb128 0xf
 1911 0274 5B0B0000 		.4byte	.LASF38
 1912 0278 06       		.byte	0x6
 1913 0279 2E01     		.2byte	0x12e
 1914 027b 8D000000 		.4byte	0x8d
 1915 027f 0C       		.byte	0xc
 1916 0280 0F       		.uleb128 0xf
 1917 0281 58070000 		.4byte	.LASF39
 1918 0285 06       		.byte	0x6
 1919 0286 3301     		.2byte	0x133
 1920 0288 81000000 		.4byte	0x81
 1921 028c 0E       		.byte	0xe
 1922 028d 00       		.byte	0
 1923 028e 05       		.uleb128 0x5
 1924 028f C8090000 		.4byte	.LASF42
 1925 0293 06       		.byte	0x6
 1926 0294 3401     		.2byte	0x134
 1927 0296 F8010000 		.4byte	0x1f8
 1928 029a 10       		.uleb128 0x10
 1929 029b 40       		.byte	0x40
 1930 029c 06       		.byte	0x6
 1931 029d 3A01     		.2byte	0x13a
 1932 029f D7020000 		.4byte	0x2d7
 1933 02a3 11       		.uleb128 0x11
 1934 02a4 757000   		.ascii	"up\000"
 1935 02a7 06       		.byte	0x6
 1936 02a8 3F01     		.2byte	0x13f
 1937 02aa 8E020000 		.4byte	0x28e
 1938 02ae 00       		.byte	0
 1939 02af 0F       		.uleb128 0xf
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 95


 1940 02b0 F7010000 		.4byte	.LASF43
 1941 02b4 06       		.byte	0x6
 1942 02b5 4401     		.2byte	0x144
 1943 02b7 8E020000 		.4byte	0x28e
 1944 02bb 10       		.byte	0x10
 1945 02bc 0F       		.uleb128 0xf
 1946 02bd 61080000 		.4byte	.LASF44
 1947 02c1 06       		.byte	0x6
 1948 02c2 4901     		.2byte	0x149
 1949 02c4 8E020000 		.4byte	0x28e
 1950 02c8 20       		.byte	0x20
 1951 02c9 0F       		.uleb128 0xf
 1952 02ca FB040000 		.4byte	.LASF45
 1953 02ce 06       		.byte	0x6
 1954 02cf 4E01     		.2byte	0x14e
 1955 02d1 8E020000 		.4byte	0x28e
 1956 02d5 30       		.byte	0x30
 1957 02d6 00       		.byte	0
 1958 02d7 05       		.uleb128 0x5
 1959 02d8 82010000 		.4byte	.LASF46
 1960 02dc 06       		.byte	0x6
 1961 02dd 4F01     		.2byte	0x14f
 1962 02df 9A020000 		.4byte	0x29a
 1963 02e3 10       		.uleb128 0x10
 1964 02e4 0A       		.byte	0xa
 1965 02e5 06       		.byte	0x6
 1966 02e6 5501     		.2byte	0x155
 1967 02e8 3B030000 		.4byte	0x33b
 1968 02ec 11       		.uleb128 0x11
 1969 02ed 72617700 		.ascii	"raw\000"
 1970 02f1 06       		.byte	0x6
 1971 02f2 5A01     		.2byte	0x15a
 1972 02f4 3B030000 		.4byte	0x33b
 1973 02f8 00       		.byte	0
 1974 02f9 0F       		.uleb128 0xf
 1975 02fa CF0B0000 		.4byte	.LASF47
 1976 02fe 06       		.byte	0x6
 1977 02ff 5F01     		.2byte	0x15f
 1978 0301 3B030000 		.4byte	0x33b
 1979 0305 02       		.byte	0x2
 1980 0306 0F       		.uleb128 0xf
 1981 0307 A0090000 		.4byte	.LASF48
 1982 030b 06       		.byte	0x6
 1983 030c 6501     		.2byte	0x165
 1984 030e D6010000 		.4byte	0x1d6
 1985 0312 04       		.byte	0x4
 1986 0313 0F       		.uleb128 0xf
 1987 0314 E7070000 		.4byte	.LASF49
 1988 0318 06       		.byte	0x6
 1989 0319 6A01     		.2byte	0x16a
 1990 031b FB000000 		.4byte	0xfb
 1991 031f 06       		.byte	0x6
 1992 0320 0F       		.uleb128 0xf
 1993 0321 2F0C0000 		.4byte	.LASF50
 1994 0325 06       		.byte	0x6
 1995 0326 6F01     		.2byte	0x16f
 1996 0328 4B030000 		.4byte	0x34b
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 96


 1997 032c 08       		.byte	0x8
 1998 032d 0F       		.uleb128 0xf
 1999 032e F2040000 		.4byte	.LASF51
 2000 0332 06       		.byte	0x6
 2001 0333 7401     		.2byte	0x174
 2002 0335 D6010000 		.4byte	0x1d6
 2003 0339 09       		.byte	0x9
 2004 033a 00       		.byte	0
 2005 033b 0D       		.uleb128 0xd
 2006 033c 8D000000 		.4byte	0x8d
 2007 0340 4B030000 		.4byte	0x34b
 2008 0344 0E       		.uleb128 0xe
 2009 0345 E6010000 		.4byte	0x1e6
 2010 0349 00       		.byte	0
 2011 034a 00       		.byte	0
 2012 034b 0D       		.uleb128 0xd
 2013 034c 07010000 		.4byte	0x107
 2014 0350 5B030000 		.4byte	0x35b
 2015 0354 0E       		.uleb128 0xe
 2016 0355 E6010000 		.4byte	0x1e6
 2017 0359 00       		.byte	0
 2018 035a 00       		.byte	0
 2019 035b 05       		.uleb128 0x5
 2020 035c DC020000 		.4byte	.LASF52
 2021 0360 06       		.byte	0x6
 2022 0361 7501     		.2byte	0x175
 2023 0363 E3020000 		.4byte	0x2e3
 2024 0367 10       		.uleb128 0x10
 2025 0368 28       		.byte	0x28
 2026 0369 06       		.byte	0x6
 2027 036a 7B01     		.2byte	0x17b
 2028 036c A4030000 		.4byte	0x3a4
 2029 0370 11       		.uleb128 0x11
 2030 0371 757000   		.ascii	"up\000"
 2031 0374 06       		.byte	0x6
 2032 0375 8001     		.2byte	0x180
 2033 0377 A4030000 		.4byte	0x3a4
 2034 037b 00       		.byte	0
 2035 037c 0F       		.uleb128 0xf
 2036 037d F7010000 		.4byte	.LASF43
 2037 0381 06       		.byte	0x6
 2038 0382 8501     		.2byte	0x185
 2039 0384 A4030000 		.4byte	0x3a4
 2040 0388 0A       		.byte	0xa
 2041 0389 0F       		.uleb128 0xf
 2042 038a 61080000 		.4byte	.LASF44
 2043 038e 06       		.byte	0x6
 2044 038f 8A01     		.2byte	0x18a
 2045 0391 A4030000 		.4byte	0x3a4
 2046 0395 14       		.byte	0x14
 2047 0396 0F       		.uleb128 0xf
 2048 0397 FB040000 		.4byte	.LASF45
 2049 039b 06       		.byte	0x6
 2050 039c 8F01     		.2byte	0x18f
 2051 039e A4030000 		.4byte	0x3a4
 2052 03a2 1E       		.byte	0x1e
 2053 03a3 00       		.byte	0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 97


 2054 03a4 0D       		.uleb128 0xd
 2055 03a5 5B030000 		.4byte	0x35b
 2056 03a9 B4030000 		.4byte	0x3b4
 2057 03ad 0E       		.uleb128 0xe
 2058 03ae E6010000 		.4byte	0x1e6
 2059 03b2 00       		.byte	0
 2060 03b3 00       		.byte	0
 2061 03b4 05       		.uleb128 0x5
 2062 03b5 030D0000 		.4byte	.LASF53
 2063 03b9 06       		.byte	0x6
 2064 03ba 9001     		.2byte	0x190
 2065 03bc 67030000 		.4byte	0x367
 2066 03c0 10       		.uleb128 0x10
 2067 03c1 90       		.byte	0x90
 2068 03c2 06       		.byte	0x6
 2069 03c3 9601     		.2byte	0x196
 2070 03c5 C1040000 		.4byte	0x4c1
 2071 03c9 0F       		.uleb128 0xf
 2072 03ca 2B070000 		.4byte	.LASF54
 2073 03ce 06       		.byte	0x6
 2074 03cf 9D01     		.2byte	0x19d
 2075 03d1 8D000000 		.4byte	0x8d
 2076 03d5 00       		.byte	0
 2077 03d6 0F       		.uleb128 0xf
 2078 03d7 6F0C0000 		.4byte	.LASF55
 2079 03db 06       		.byte	0x6
 2080 03dc A201     		.2byte	0x1a2
 2081 03de 8D000000 		.4byte	0x8d
 2082 03e2 02       		.byte	0x2
 2083 03e3 0F       		.uleb128 0xf
 2084 03e4 C0000000 		.4byte	.LASF56
 2085 03e8 06       		.byte	0x6
 2086 03e9 A701     		.2byte	0x1a7
 2087 03eb 8D000000 		.4byte	0x8d
 2088 03ef 04       		.byte	0x4
 2089 03f0 0F       		.uleb128 0xf
 2090 03f1 EC070000 		.4byte	.LASF57
 2091 03f5 06       		.byte	0x6
 2092 03f6 AD01     		.2byte	0x1ad
 2093 03f8 8D000000 		.4byte	0x8d
 2094 03fc 06       		.byte	0x6
 2095 03fd 0F       		.uleb128 0xf
 2096 03fe B4000000 		.4byte	.LASF58
 2097 0402 06       		.byte	0x6
 2098 0403 B201     		.2byte	0x1b2
 2099 0405 8D000000 		.4byte	0x8d
 2100 0409 08       		.byte	0x8
 2101 040a 0F       		.uleb128 0xf
 2102 040b 47040000 		.4byte	.LASF59
 2103 040f 06       		.byte	0x6
 2104 0410 B701     		.2byte	0x1b7
 2105 0412 E3000000 		.4byte	0xe3
 2106 0416 0C       		.byte	0xc
 2107 0417 0F       		.uleb128 0xf
 2108 0418 DC070000 		.4byte	.LASF60
 2109 041c 06       		.byte	0x6
 2110 041d BD01     		.2byte	0x1bd
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 98


 2111 041f C1040000 		.4byte	0x4c1
 2112 0423 10       		.byte	0x10
 2113 0424 0F       		.uleb128 0xf
 2114 0425 97080000 		.4byte	.LASF61
 2115 0429 06       		.byte	0x6
 2116 042a C401     		.2byte	0x1c4
 2117 042c C1040000 		.4byte	0x4c1
 2118 0430 14       		.byte	0x14
 2119 0431 0F       		.uleb128 0xf
 2120 0432 3F070000 		.4byte	.LASF62
 2121 0436 06       		.byte	0x6
 2122 0437 D401     		.2byte	0x1d4
 2123 0439 D1040000 		.4byte	0x4d1
 2124 043d 18       		.byte	0x18
 2125 043e 0F       		.uleb128 0xf
 2126 043f E2050000 		.4byte	.LASF63
 2127 0443 06       		.byte	0x6
 2128 0444 DA01     		.2byte	0x1da
 2129 0446 8D000000 		.4byte	0x8d
 2130 044a 1C       		.byte	0x1c
 2131 044b 0F       		.uleb128 0xf
 2132 044c D2020000 		.4byte	.LASF64
 2133 0450 06       		.byte	0x6
 2134 0451 DF01     		.2byte	0x1df
 2135 0453 81000000 		.4byte	0x81
 2136 0457 1E       		.byte	0x1e
 2137 0458 0F       		.uleb128 0xf
 2138 0459 51050000 		.4byte	.LASF65
 2139 045d 06       		.byte	0x6
 2140 045e E401     		.2byte	0x1e4
 2141 0460 D7020000 		.4byte	0x2d7
 2142 0464 20       		.byte	0x20
 2143 0465 0F       		.uleb128 0xf
 2144 0466 33020000 		.4byte	.LASF66
 2145 046a 06       		.byte	0x6
 2146 046b E901     		.2byte	0x1e9
 2147 046d B4030000 		.4byte	0x3b4
 2148 0471 60       		.byte	0x60
 2149 0472 0F       		.uleb128 0xf
 2150 0473 82000000 		.4byte	.LASF67
 2151 0477 06       		.byte	0x6
 2152 0478 EE01     		.2byte	0x1ee
 2153 047a 81000000 		.4byte	0x81
 2154 047e 88       		.byte	0x88
 2155 047f 0F       		.uleb128 0xf
 2156 0480 80020000 		.4byte	.LASF68
 2157 0484 06       		.byte	0x6
 2158 0485 F301     		.2byte	0x1f3
 2159 0487 81000000 		.4byte	0x81
 2160 048b 89       		.byte	0x89
 2161 048c 0F       		.uleb128 0xf
 2162 048d 18070000 		.4byte	.LASF69
 2163 0491 06       		.byte	0x6
 2164 0492 F801     		.2byte	0x1f8
 2165 0494 8D000000 		.4byte	0x8d
 2166 0498 8A       		.byte	0x8a
 2167 0499 0F       		.uleb128 0xf
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 99


 2168 049a C9050000 		.4byte	.LASF70
 2169 049e 06       		.byte	0x6
 2170 049f FD01     		.2byte	0x1fd
 2171 04a1 3B030000 		.4byte	0x33b
 2172 04a5 8C       		.byte	0x8c
 2173 04a6 0F       		.uleb128 0xf
 2174 04a7 C8000000 		.4byte	.LASF71
 2175 04ab 06       		.byte	0x6
 2176 04ac 0202     		.2byte	0x202
 2177 04ae 81000000 		.4byte	0x81
 2178 04b2 8E       		.byte	0x8e
 2179 04b3 0F       		.uleb128 0xf
 2180 04b4 3A0A0000 		.4byte	.LASF72
 2181 04b8 06       		.byte	0x6
 2182 04b9 0702     		.2byte	0x207
 2183 04bb 81000000 		.4byte	0x81
 2184 04bf 8F       		.byte	0x8f
 2185 04c0 00       		.byte	0
 2186 04c1 0D       		.uleb128 0xd
 2187 04c2 99000000 		.4byte	0x99
 2188 04c6 D1040000 		.4byte	0x4d1
 2189 04ca 0E       		.uleb128 0xe
 2190 04cb E6010000 		.4byte	0x1e6
 2191 04cf 00       		.byte	0
 2192 04d0 00       		.byte	0
 2193 04d1 0D       		.uleb128 0xd
 2194 04d2 81000000 		.4byte	0x81
 2195 04d6 E1040000 		.4byte	0x4e1
 2196 04da 0E       		.uleb128 0xe
 2197 04db E6010000 		.4byte	0x1e6
 2198 04df 03       		.byte	0x3
 2199 04e0 00       		.byte	0
 2200 04e1 05       		.uleb128 0x5
 2201 04e2 A5070000 		.4byte	.LASF73
 2202 04e6 06       		.byte	0x6
 2203 04e7 0802     		.2byte	0x208
 2204 04e9 C0030000 		.4byte	0x3c0
 2205 04ed 10       		.uleb128 0x10
 2206 04ee 1C       		.byte	0x1c
 2207 04ef 06       		.byte	0x6
 2208 04f0 0E02     		.2byte	0x20e
 2209 04f2 6C050000 		.4byte	0x56c
 2210 04f6 0F       		.uleb128 0xf
 2211 04f7 27060000 		.4byte	.LASF74
 2212 04fb 06       		.byte	0x6
 2213 04fc 1302     		.2byte	0x213
 2214 04fe 6C050000 		.4byte	0x56c
 2215 0502 00       		.byte	0
 2216 0503 0F       		.uleb128 0xf
 2217 0504 01050000 		.4byte	.LASF75
 2218 0508 06       		.byte	0x6
 2219 0509 1802     		.2byte	0x218
 2220 050b 6C050000 		.4byte	0x56c
 2221 050f 04       		.byte	0x4
 2222 0510 0F       		.uleb128 0xf
 2223 0511 0E030000 		.4byte	.LASF76
 2224 0515 06       		.byte	0x6
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 100


 2225 0516 1D02     		.2byte	0x21d
 2226 0518 6C050000 		.4byte	0x56c
 2227 051c 08       		.byte	0x8
 2228 051d 0F       		.uleb128 0xf
 2229 051e 11080000 		.4byte	.LASF77
 2230 0522 06       		.byte	0x6
 2231 0523 2202     		.2byte	0x222
 2232 0525 6C050000 		.4byte	0x56c
 2233 0529 0C       		.byte	0xc
 2234 052a 0F       		.uleb128 0xf
 2235 052b 510B0000 		.4byte	.LASF78
 2236 052f 06       		.byte	0x6
 2237 0530 2702     		.2byte	0x227
 2238 0532 99000000 		.4byte	0x99
 2239 0536 10       		.byte	0x10
 2240 0537 0F       		.uleb128 0xf
 2241 0538 66060000 		.4byte	.LASF79
 2242 053c 06       		.byte	0x6
 2243 053d 2C02     		.2byte	0x22c
 2244 053f 99000000 		.4byte	0x99
 2245 0543 14       		.byte	0x14
 2246 0544 0F       		.uleb128 0xf
 2247 0545 E7030000 		.4byte	.LASF80
 2248 0549 06       		.byte	0x6
 2249 054a 3102     		.2byte	0x231
 2250 054c 81000000 		.4byte	0x81
 2251 0550 18       		.byte	0x18
 2252 0551 0F       		.uleb128 0xf
 2253 0552 2C090000 		.4byte	.LASF81
 2254 0556 06       		.byte	0x6
 2255 0557 3602     		.2byte	0x236
 2256 0559 81000000 		.4byte	0x81
 2257 055d 19       		.byte	0x19
 2258 055e 0F       		.uleb128 0xf
 2259 055f 0C020000 		.4byte	.LASF82
 2260 0563 06       		.byte	0x6
 2261 0564 3B02     		.2byte	0x23b
 2262 0566 81000000 		.4byte	0x81
 2263 056a 1A       		.byte	0x1a
 2264 056b 00       		.byte	0
 2265 056c 07       		.uleb128 0x7
 2266 056d 04       		.byte	0x4
 2267 056e D7000000 		.4byte	0xd7
 2268 0572 05       		.uleb128 0x5
 2269 0573 67020000 		.4byte	.LASF83
 2270 0577 06       		.byte	0x6
 2271 0578 3C02     		.2byte	0x23c
 2272 057a ED040000 		.4byte	0x4ed
 2273 057e 10       		.uleb128 0x10
 2274 057f 1C       		.byte	0x1c
 2275 0580 06       		.byte	0x6
 2276 0581 6F02     		.2byte	0x26f
 2277 0583 FD050000 		.4byte	0x5fd
 2278 0587 0F       		.uleb128 0xf
 2279 0588 150C0000 		.4byte	.LASF84
 2280 058c 06       		.byte	0x6
 2281 058d 7802     		.2byte	0x278
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 101


 2282 058f FD050000 		.4byte	0x5fd
 2283 0593 00       		.byte	0
 2284 0594 0F       		.uleb128 0xf
 2285 0595 490A0000 		.4byte	.LASF85
 2286 0599 06       		.byte	0x6
 2287 059a 7F02     		.2byte	0x27f
 2288 059c 04060000 		.4byte	0x604
 2289 05a0 04       		.byte	0x4
 2290 05a1 0F       		.uleb128 0xf
 2291 05a2 34070000 		.4byte	.LASF86
 2292 05a6 06       		.byte	0x6
 2293 05a7 8502     		.2byte	0x285
 2294 05a9 06060000 		.4byte	0x606
 2295 05ad 08       		.byte	0x8
 2296 05ae 0F       		.uleb128 0xf
 2297 05af 37060000 		.4byte	.LASF87
 2298 05b3 06       		.byte	0x6
 2299 05b4 8B02     		.2byte	0x28b
 2300 05b6 04060000 		.4byte	0x604
 2301 05ba 0C       		.byte	0xc
 2302 05bb 0F       		.uleb128 0xf
 2303 05bc 72090000 		.4byte	.LASF88
 2304 05c0 06       		.byte	0x6
 2305 05c1 9202     		.2byte	0x292
 2306 05c3 0C060000 		.4byte	0x60c
 2307 05c7 10       		.byte	0x10
 2308 05c8 0F       		.uleb128 0xf
 2309 05c9 270A0000 		.4byte	.LASF89
 2310 05cd 06       		.byte	0x6
 2311 05ce 9702     		.2byte	0x297
 2312 05d0 99000000 		.4byte	0x99
 2313 05d4 14       		.byte	0x14
 2314 05d5 0F       		.uleb128 0xf
 2315 05d6 6C030000 		.4byte	.LASF90
 2316 05da 06       		.byte	0x6
 2317 05db 9E02     		.2byte	0x29e
 2318 05dd 8D000000 		.4byte	0x8d
 2319 05e1 18       		.byte	0x18
 2320 05e2 0F       		.uleb128 0xf
 2321 05e3 90020000 		.4byte	.LASF91
 2322 05e7 06       		.byte	0x6
 2323 05e8 A502     		.2byte	0x2a5
 2324 05ea 81000000 		.4byte	0x81
 2325 05ee 1A       		.byte	0x1a
 2326 05ef 0F       		.uleb128 0xf
 2327 05f0 15050000 		.4byte	.LASF92
 2328 05f4 06       		.byte	0x6
 2329 05f5 AF02     		.2byte	0x2af
 2330 05f7 81000000 		.4byte	0x81
 2331 05fb 1B       		.byte	0x1b
 2332 05fc 00       		.byte	0
 2333 05fd 07       		.uleb128 0x7
 2334 05fe 04       		.byte	0x4
 2335 05ff 03060000 		.4byte	0x603
 2336 0603 12       		.uleb128 0x12
 2337 0604 13       		.uleb128 0x13
 2338 0605 04       		.byte	0x4
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 102


 2339 0606 07       		.uleb128 0x7
 2340 0607 04       		.byte	0x4
 2341 0608 5B030000 		.4byte	0x35b
 2342 060c 07       		.uleb128 0x7
 2343 060d 04       		.byte	0x4
 2344 060e 81000000 		.4byte	0x81
 2345 0612 05       		.uleb128 0x5
 2346 0613 40030000 		.4byte	.LASF93
 2347 0617 06       		.byte	0x6
 2348 0618 B002     		.2byte	0x2b0
 2349 061a 7E050000 		.4byte	0x57e
 2350 061e 10       		.uleb128 0x10
 2351 061f 70       		.byte	0x70
 2352 0620 06       		.byte	0x6
 2353 0621 B602     		.2byte	0x2b6
 2354 0623 35060000 		.4byte	0x635
 2355 0627 0F       		.uleb128 0xf
 2356 0628 200D0000 		.4byte	.LASF94
 2357 062c 06       		.byte	0x6
 2358 062d BB02     		.2byte	0x2bb
 2359 062f 35060000 		.4byte	0x635
 2360 0633 00       		.byte	0
 2361 0634 00       		.byte	0
 2362 0635 0D       		.uleb128 0xd
 2363 0636 12060000 		.4byte	0x612
 2364 063a 45060000 		.4byte	0x645
 2365 063e 0E       		.uleb128 0xe
 2366 063f E6010000 		.4byte	0x1e6
 2367 0643 03       		.byte	0x3
 2368 0644 00       		.byte	0
 2369 0645 05       		.uleb128 0x5
 2370 0646 6E050000 		.4byte	.LASF95
 2371 064a 06       		.byte	0x6
 2372 064b BC02     		.2byte	0x2bc
 2373 064d 1E060000 		.4byte	0x61e
 2374 0651 02       		.uleb128 0x2
 2375 0652 08       		.byte	0x8
 2376 0653 04       		.byte	0x4
 2377 0654 06070000 		.4byte	.LASF96
 2378 0658 09       		.uleb128 0x9
 2379 0659 01       		.byte	0x1
 2380 065a 2C000000 		.4byte	0x2c
 2381 065e 07       		.byte	0x7
 2382 065f 43       		.byte	0x43
 2383 0660 83060000 		.4byte	0x683
 2384 0664 0A       		.uleb128 0xa
 2385 0665 5A050000 		.4byte	.LASF97
 2386 0669 00       		.byte	0
 2387 066a 0A       		.uleb128 0xa
 2388 066b 67040000 		.4byte	.LASF98
 2389 066f 01       		.byte	0x1
 2390 0670 0A       		.uleb128 0xa
 2391 0671 CB030000 		.4byte	.LASF99
 2392 0675 02       		.byte	0x2
 2393 0676 0A       		.uleb128 0xa
 2394 0677 850C0000 		.4byte	.LASF100
 2395 067b 03       		.byte	0x3
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 103


 2396 067c 0A       		.uleb128 0xa
 2397 067d 05010000 		.4byte	.LASF101
 2398 0681 04       		.byte	0x4
 2399 0682 00       		.byte	0
 2400 0683 03       		.uleb128 0x3
 2401 0684 B9060000 		.4byte	.LASF102
 2402 0688 07       		.byte	0x7
 2403 0689 49       		.byte	0x49
 2404 068a 58060000 		.4byte	0x658
 2405 068e 0B       		.uleb128 0xb
 2406 068f 08       		.byte	0x8
 2407 0690 07       		.byte	0x7
 2408 0691 CF       		.byte	0xcf
 2409 0692 AF060000 		.4byte	0x6af
 2410 0696 0C       		.uleb128 0xc
 2411 0697 59080000 		.4byte	.LASF103
 2412 069b 07       		.byte	0x7
 2413 069c D4       		.byte	0xd4
 2414 069d 99000000 		.4byte	0x99
 2415 06a1 00       		.byte	0
 2416 06a2 0C       		.uleb128 0xc
 2417 06a3 47060000 		.4byte	.LASF104
 2418 06a7 07       		.byte	0x7
 2419 06a8 D9       		.byte	0xd9
 2420 06a9 99000000 		.4byte	0x99
 2421 06ad 04       		.byte	0x4
 2422 06ae 00       		.byte	0
 2423 06af 03       		.uleb128 0x3
 2424 06b0 A8090000 		.4byte	.LASF105
 2425 06b4 07       		.byte	0x7
 2426 06b5 DA       		.byte	0xda
 2427 06b6 8E060000 		.4byte	0x68e
 2428 06ba 14       		.uleb128 0x14
 2429 06bb 84050000 		.4byte	.LASF106
 2430 06bf 01       		.byte	0x1
 2431 06c0 6D01     		.2byte	0x16d
 2432 06c2 BA000000 		.4byte	0xba
 2433 06c6 01       		.byte	0x1
 2434 06c7 D8060000 		.4byte	0x6d8
 2435 06cb 15       		.uleb128 0x15
 2436 06cc 30000000 		.4byte	.LASF108
 2437 06d0 01       		.byte	0x1
 2438 06d1 6F01     		.2byte	0x16f
 2439 06d3 BA000000 		.4byte	0xba
 2440 06d7 00       		.byte	0
 2441 06d8 14       		.uleb128 0x14
 2442 06d9 4E040000 		.4byte	.LASF107
 2443 06dd 01       		.byte	0x1
 2444 06de 5406     		.2byte	0x654
 2445 06e0 BA000000 		.4byte	0xba
 2446 06e4 01       		.byte	0x1
 2447 06e5 02070000 		.4byte	0x702
 2448 06e9 16       		.uleb128 0x16
 2449 06ea A10C0000 		.4byte	.LASF111
 2450 06ee 01       		.byte	0x1
 2451 06ef 5406     		.2byte	0x654
 2452 06f1 99000000 		.4byte	0x99
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 104


 2453 06f5 15       		.uleb128 0x15
 2454 06f6 41050000 		.4byte	.LASF109
 2455 06fa 01       		.byte	0x1
 2456 06fb 5606     		.2byte	0x656
 2457 06fd BA000000 		.4byte	0xba
 2458 0701 00       		.byte	0
 2459 0702 14       		.uleb128 0x14
 2460 0703 00000000 		.4byte	.LASF110
 2461 0707 01       		.byte	0x1
 2462 0708 E80A     		.2byte	0xae8
 2463 070a 99000000 		.4byte	0x99
 2464 070e 01       		.byte	0x1
 2465 070f 38070000 		.4byte	0x738
 2466 0713 16       		.uleb128 0x16
 2467 0714 A10C0000 		.4byte	.LASF111
 2468 0718 01       		.byte	0x1
 2469 0719 E80A     		.2byte	0xae8
 2470 071b 99000000 		.4byte	0x99
 2471 071f 15       		.uleb128 0x15
 2472 0720 46090000 		.4byte	.LASF112
 2473 0724 01       		.byte	0x1
 2474 0725 EA0A     		.2byte	0xaea
 2475 0727 99000000 		.4byte	0x99
 2476 072b 15       		.uleb128 0x15
 2477 072c B8010000 		.4byte	.LASF113
 2478 0730 01       		.byte	0x1
 2479 0731 EE0A     		.2byte	0xaee
 2480 0733 38070000 		.4byte	0x738
 2481 0737 00       		.byte	0
 2482 0738 07       		.uleb128 0x7
 2483 0739 04       		.byte	0x4
 2484 073a ED010000 		.4byte	0x1ed
 2485 073e 17       		.uleb128 0x17
 2486 073f 620B0000 		.4byte	.LASF196
 2487 0743 01       		.byte	0x1
 2488 0744 2B04     		.2byte	0x42b
 2489 0746 01       		.byte	0x1
 2490 0747 58070000 		.4byte	0x758
 2491 074b 16       		.uleb128 0x16
 2492 074c 45010000 		.4byte	.LASF114
 2493 0750 01       		.byte	0x1
 2494 0751 2B04     		.2byte	0x42b
 2495 0753 3E010000 		.4byte	0x13e
 2496 0757 00       		.byte	0
 2497 0758 18       		.uleb128 0x18
 2498 0759 82090000 		.4byte	.LASF156
 2499 075d 01       		.byte	0x1
 2500 075e 7008     		.2byte	0x870
 2501 0760 01       		.byte	0x1
 2502 0761 19       		.uleb128 0x19
 2503 0762 4A010000 		.4byte	.LASF197
 2504 0766 01       		.byte	0x1
 2505 0767 EC       		.byte	0xec
 2506 0768 99000000 		.4byte	0x99
 2507 076c 00000000 		.4byte	.LFB1
 2508 0770 10000000 		.4byte	.LFE1-.LFB1
 2509 0774 01       		.uleb128 0x1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 105


 2510 0775 9C       		.byte	0x9c
 2511 0776 1A       		.uleb128 0x1a
 2512 0777 17080000 		.4byte	.LASF115
 2513 077b 01       		.byte	0x1
 2514 077c 1A01     		.2byte	0x11a
 2515 077e BA000000 		.4byte	0xba
 2516 0782 00000000 		.4byte	.LFB2
 2517 0786 30000000 		.4byte	.LFE2-.LFB2
 2518 078a 01       		.uleb128 0x1
 2519 078b 9C       		.byte	0x9c
 2520 078c C2070000 		.4byte	0x7c2
 2521 0790 1B       		.uleb128 0x1b
 2522 0791 A10C0000 		.4byte	.LASF111
 2523 0795 01       		.byte	0x1
 2524 0796 1A01     		.2byte	0x11a
 2525 0798 99000000 		.4byte	0x99
 2526 079c 00000000 		.4byte	.LLST0
 2527 07a0 1C       		.uleb128 0x1c
 2528 07a1 780C0000 		.4byte	.LASF117
 2529 07a5 01       		.byte	0x1
 2530 07a6 1C01     		.2byte	0x11c
 2531 07a8 BA000000 		.4byte	0xba
 2532 07ac 21000000 		.4byte	.LLST1
 2533 07b0 1D       		.uleb128 0x1d
 2534 07b1 24000000 		.4byte	.LVL2
 2535 07b5 9E110000 		.4byte	0x119e
 2536 07b9 1E       		.uleb128 0x1e
 2537 07ba 01       		.uleb128 0x1
 2538 07bb 50       		.byte	0x50
 2539 07bc 03       		.uleb128 0x3
 2540 07bd F3       		.byte	0xf3
 2541 07be 01       		.uleb128 0x1
 2542 07bf 50       		.byte	0x50
 2543 07c0 00       		.byte	0
 2544 07c1 00       		.byte	0
 2545 07c2 1F       		.uleb128 0x1f
 2546 07c3 BA060000 		.4byte	0x6ba
 2547 07c7 00000000 		.4byte	.LFB3
 2548 07cb 30000000 		.4byte	.LFE3-.LFB3
 2549 07cf 01       		.uleb128 0x1
 2550 07d0 9C       		.byte	0x9c
 2551 07d1 F7070000 		.4byte	0x7f7
 2552 07d5 20       		.uleb128 0x20
 2553 07d6 CB060000 		.4byte	0x6cb
 2554 07da 35000000 		.4byte	.LLST2
 2555 07de 21       		.uleb128 0x21
 2556 07df 12000000 		.4byte	.LBB9
 2557 07e3 14000000 		.4byte	.LBE9-.LBB9
 2558 07e7 22       		.uleb128 0x22
 2559 07e8 CB060000 		.4byte	0x6cb
 2560 07ec 23       		.uleb128 0x23
 2561 07ed 1E000000 		.4byte	.LVL5
 2562 07f1 AA110000 		.4byte	0x11aa
 2563 07f5 00       		.byte	0
 2564 07f6 00       		.byte	0
 2565 07f7 1A       		.uleb128 0x1a
 2566 07f8 390B0000 		.4byte	.LASF116
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 106


 2567 07fc 01       		.byte	0x1
 2568 07fd AB01     		.2byte	0x1ab
 2569 07ff BA000000 		.4byte	0xba
 2570 0803 00000000 		.4byte	.LFB4
 2571 0807 3C000000 		.4byte	.LFE4-.LFB4
 2572 080b 01       		.uleb128 0x1
 2573 080c 9C       		.byte	0x9c
 2574 080d 4F080000 		.4byte	0x84f
 2575 0811 1C       		.uleb128 0x1c
 2576 0812 30000000 		.4byte	.LASF108
 2577 0816 01       		.byte	0x1
 2578 0817 AD01     		.2byte	0x1ad
 2579 0819 BA000000 		.4byte	0xba
 2580 081d 54000000 		.4byte	.LLST3
 2581 0821 1C       		.uleb128 0x1c
 2582 0822 E0060000 		.4byte	.LASF118
 2583 0826 01       		.byte	0x1
 2584 0827 AF01     		.2byte	0x1af
 2585 0829 99000000 		.4byte	0x99
 2586 082d 7F000000 		.4byte	.LLST4
 2587 0831 24       		.uleb128 0x24
 2588 0832 14000000 		.4byte	.LVL9
 2589 0836 76070000 		.4byte	0x776
 2590 083a 45080000 		.4byte	0x845
 2591 083e 1E       		.uleb128 0x1e
 2592 083f 01       		.uleb128 0x1
 2593 0840 50       		.byte	0x50
 2594 0841 02       		.uleb128 0x2
 2595 0842 74       		.byte	0x74
 2596 0843 00       		.sleb128 0
 2597 0844 00       		.byte	0
 2598 0845 23       		.uleb128 0x23
 2599 0846 2A000000 		.4byte	.LVL10
 2600 084a BA060000 		.4byte	0x6ba
 2601 084e 00       		.byte	0
 2602 084f 1A       		.uleb128 0x1a
 2603 0850 55000000 		.4byte	.LASF119
 2604 0854 01       		.byte	0x1
 2605 0855 1702     		.2byte	0x217
 2606 0857 BA000000 		.4byte	0xba
 2607 085b 00000000 		.4byte	.LFB5
 2608 085f 40000000 		.4byte	.LFE5-.LFB5
 2609 0863 01       		.uleb128 0x1
 2610 0864 9C       		.byte	0x9c
 2611 0865 B2080000 		.4byte	0x8b2
 2612 0869 1B       		.uleb128 0x1b
 2613 086a A10C0000 		.4byte	.LASF111
 2614 086e 01       		.byte	0x1
 2615 086f 1702     		.2byte	0x217
 2616 0871 99000000 		.4byte	0x99
 2617 0875 92000000 		.4byte	.LLST5
 2618 0879 1B       		.uleb128 0x1b
 2619 087a 9E010000 		.4byte	.LASF120
 2620 087e 01       		.byte	0x1
 2621 087f 1702     		.2byte	0x217
 2622 0881 99000000 		.4byte	0x99
 2623 0885 B3000000 		.4byte	.LLST6
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 107


 2624 0889 1C       		.uleb128 0x1c
 2625 088a 780C0000 		.4byte	.LASF117
 2626 088e 01       		.byte	0x1
 2627 088f 1902     		.2byte	0x219
 2628 0891 BA000000 		.4byte	0xba
 2629 0895 D4000000 		.4byte	.LLST7
 2630 0899 1D       		.uleb128 0x1d
 2631 089a 32000000 		.4byte	.LVL15
 2632 089e B6110000 		.4byte	0x11b6
 2633 08a2 1E       		.uleb128 0x1e
 2634 08a3 01       		.uleb128 0x1
 2635 08a4 50       		.byte	0x50
 2636 08a5 03       		.uleb128 0x3
 2637 08a6 F3       		.byte	0xf3
 2638 08a7 01       		.uleb128 0x1
 2639 08a8 50       		.byte	0x50
 2640 08a9 1E       		.uleb128 0x1e
 2641 08aa 01       		.uleb128 0x1
 2642 08ab 51       		.byte	0x51
 2643 08ac 03       		.uleb128 0x3
 2644 08ad F3       		.byte	0xf3
 2645 08ae 01       		.uleb128 0x1
 2646 08af 51       		.byte	0x51
 2647 08b0 00       		.byte	0
 2648 08b1 00       		.byte	0
 2649 08b2 1A       		.uleb128 0x1a
 2650 08b3 FA050000 		.4byte	.LASF121
 2651 08b7 01       		.byte	0x1
 2652 08b8 8102     		.2byte	0x281
 2653 08ba BA000000 		.4byte	0xba
 2654 08be 00000000 		.4byte	.LFB6
 2655 08c2 30000000 		.4byte	.LFE6-.LFB6
 2656 08c6 01       		.uleb128 0x1
 2657 08c7 9C       		.byte	0x9c
 2658 08c8 E6080000 		.4byte	0x8e6
 2659 08cc 1C       		.uleb128 0x1c
 2660 08cd 30000000 		.4byte	.LASF108
 2661 08d1 01       		.byte	0x1
 2662 08d2 8302     		.2byte	0x283
 2663 08d4 BA000000 		.4byte	0xba
 2664 08d8 E8000000 		.4byte	.LLST8
 2665 08dc 23       		.uleb128 0x23
 2666 08dd 1E000000 		.4byte	.LVL18
 2667 08e1 C2110000 		.4byte	0x11c2
 2668 08e5 00       		.byte	0
 2669 08e6 25       		.uleb128 0x25
 2670 08e7 120A0000 		.4byte	.LASF128
 2671 08eb 01       		.byte	0x1
 2672 08ec 4803     		.2byte	0x348
 2673 08ee 00000000 		.4byte	.LFB8
 2674 08f2 8C000000 		.4byte	.LFE8-.LFB8
 2675 08f6 01       		.uleb128 0x1
 2676 08f7 9C       		.byte	0x9c
 2677 08f8 B4090000 		.4byte	0x9b4
 2678 08fc 1B       		.uleb128 0x1b
 2679 08fd A10C0000 		.4byte	.LASF111
 2680 0901 01       		.byte	0x1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 108


 2681 0902 4803     		.2byte	0x348
 2682 0904 99000000 		.4byte	0x99
 2683 0908 07010000 		.4byte	.LLST9
 2684 090c 1B       		.uleb128 0x1b
 2685 090d 22000000 		.4byte	.LASF122
 2686 0911 01       		.byte	0x1
 2687 0912 4803     		.2byte	0x348
 2688 0914 99000000 		.4byte	0x99
 2689 0918 28010000 		.4byte	.LLST10
 2690 091c 1B       		.uleb128 0x1b
 2691 091d 290B0000 		.4byte	.LASF123
 2692 0921 01       		.byte	0x1
 2693 0922 4803     		.2byte	0x348
 2694 0924 99000000 		.4byte	0x99
 2695 0928 49010000 		.4byte	.LLST11
 2696 092c 26       		.uleb128 0x26
 2697 092d 59030000 		.4byte	.LASF124
 2698 0931 01       		.byte	0x1
 2699 0932 4A03     		.2byte	0x34a
 2700 0934 99000000 		.4byte	0x99
 2701 0938 01       		.byte	0x1
 2702 0939 1C       		.uleb128 0x1c
 2703 093a 2F0B0000 		.4byte	.LASF125
 2704 093e 01       		.byte	0x1
 2705 093f 4B03     		.2byte	0x34b
 2706 0941 99000000 		.4byte	0x99
 2707 0945 D3010000 		.4byte	.LLST12
 2708 0949 1C       		.uleb128 0x1c
 2709 094a 20010000 		.4byte	.LASF126
 2710 094e 01       		.byte	0x1
 2711 094f 4C03     		.2byte	0x34c
 2712 0951 81000000 		.4byte	0x81
 2713 0955 E7010000 		.4byte	.LLST13
 2714 0959 1C       		.uleb128 0x1c
 2715 095a 340A0000 		.4byte	.LASF127
 2716 095e 01       		.byte	0x1
 2717 095f 4D03     		.2byte	0x34d
 2718 0961 B4090000 		.4byte	0x9b4
 2719 0965 1B020000 		.4byte	.LLST14
 2720 0969 23       		.uleb128 0x23
 2721 096a 14000000 		.4byte	.LVL24
 2722 096e CE110000 		.4byte	0x11ce
 2723 0972 23       		.uleb128 0x23
 2724 0973 34000000 		.4byte	.LVL25
 2725 0977 D9110000 		.4byte	0x11d9
 2726 097b 23       		.uleb128 0x23
 2727 097c 46000000 		.4byte	.LVL26
 2728 0980 CE110000 		.4byte	0x11ce
 2729 0984 23       		.uleb128 0x23
 2730 0985 5A000000 		.4byte	.LVL29
 2731 0989 CE110000 		.4byte	0x11ce
 2732 098d 24       		.uleb128 0x24
 2733 098e 6E000000 		.4byte	.LVL33
 2734 0992 E4110000 		.4byte	0x11e4
 2735 0996 A1090000 		.4byte	0x9a1
 2736 099a 1E       		.uleb128 0x1e
 2737 099b 01       		.uleb128 0x1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 109


 2738 099c 50       		.byte	0x50
 2739 099d 02       		.uleb128 0x2
 2740 099e 74       		.byte	0x74
 2741 099f 00       		.sleb128 0
 2742 09a0 00       		.byte	0
 2743 09a1 23       		.uleb128 0x23
 2744 09a2 74000000 		.4byte	.LVL35
 2745 09a6 CE110000 		.4byte	0x11ce
 2746 09aa 23       		.uleb128 0x23
 2747 09ab 86000000 		.4byte	.LVL38
 2748 09af D9110000 		.4byte	0x11d9
 2749 09b3 00       		.byte	0
 2750 09b4 07       		.uleb128 0x7
 2751 09b5 04       		.byte	0x4
 2752 09b6 BA090000 		.4byte	0x9ba
 2753 09ba 27       		.uleb128 0x27
 2754 09bb 72050000 		.4byte	0x572
 2755 09bf 25       		.uleb128 0x25
 2756 09c0 B9070000 		.4byte	.LASF129
 2757 09c4 01       		.byte	0x1
 2758 09c5 8E04     		.2byte	0x48e
 2759 09c7 00000000 		.4byte	.LFB11
 2760 09cb 80000000 		.4byte	.LFE11-.LFB11
 2761 09cf 01       		.uleb128 0x1
 2762 09d0 9C       		.byte	0x9c
 2763 09d1 840A0000 		.4byte	0xa84
 2764 09d5 1B       		.uleb128 0x1b
 2765 09d6 290B0000 		.4byte	.LASF123
 2766 09da 01       		.byte	0x1
 2767 09db 8E04     		.2byte	0x48e
 2768 09dd 99000000 		.4byte	0x99
 2769 09e1 39020000 		.4byte	.LLST15
 2770 09e5 28       		.uleb128 0x28
 2771 09e6 20010000 		.4byte	.LASF126
 2772 09ea 01       		.byte	0x1
 2773 09eb 9004     		.2byte	0x490
 2774 09ed 81000000 		.4byte	0x81
 2775 09f1 02       		.uleb128 0x2
 2776 09f2 91       		.byte	0x91
 2777 09f3 64       		.sleb128 -28
 2778 09f4 1C       		.uleb128 0x1c
 2779 09f5 FC010000 		.4byte	.LASF130
 2780 09f9 01       		.byte	0x1
 2781 09fa 9204     		.2byte	0x492
 2782 09fc 99000000 		.4byte	0x99
 2783 0a00 65020000 		.4byte	.LLST16
 2784 0a04 1C       		.uleb128 0x1c
 2785 0a05 1B030000 		.4byte	.LASF131
 2786 0a09 01       		.byte	0x1
 2787 0a0a 9404     		.2byte	0x494
 2788 0a0c 99000000 		.4byte	0x99
 2789 0a10 79020000 		.4byte	.LLST17
 2790 0a14 1C       		.uleb128 0x1c
 2791 0a15 C3020000 		.4byte	.LASF132
 2792 0a19 01       		.byte	0x1
 2793 0a1a 9504     		.2byte	0x495
 2794 0a1c 99000000 		.4byte	0x99
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 110


 2795 0a20 98020000 		.4byte	.LLST18
 2796 0a24 1C       		.uleb128 0x1c
 2797 0a25 BB030000 		.4byte	.LASF133
 2798 0a29 01       		.byte	0x1
 2799 0a2a 9704     		.2byte	0x497
 2800 0a2c 99000000 		.4byte	0x99
 2801 0a30 B7020000 		.4byte	.LLST19
 2802 0a34 1C       		.uleb128 0x1c
 2803 0a35 A9050000 		.4byte	.LASF134
 2804 0a39 01       		.byte	0x1
 2805 0a3a 9804     		.2byte	0x498
 2806 0a3c 99000000 		.4byte	0x99
 2807 0a40 E2020000 		.4byte	.LLST20
 2808 0a44 1C       		.uleb128 0x1c
 2809 0a45 2A020000 		.4byte	.LASF135
 2810 0a49 01       		.byte	0x1
 2811 0a4a 9A04     		.2byte	0x49a
 2812 0a4c B4090000 		.4byte	0x9b4
 2813 0a50 30030000 		.4byte	.LLST21
 2814 0a54 23       		.uleb128 0x23
 2815 0a55 22000000 		.4byte	.LVL44
 2816 0a59 CE110000 		.4byte	0x11ce
 2817 0a5d 24       		.uleb128 0x24
 2818 0a5e 68000000 		.4byte	.LVL61
 2819 0a62 D9110000 		.4byte	0x11d9
 2820 0a66 730A0000 		.4byte	0xa73
 2821 0a6a 1E       		.uleb128 0x1e
 2822 0a6b 01       		.uleb128 0x1
 2823 0a6c 50       		.byte	0x50
 2824 0a6d 04       		.uleb128 0x4
 2825 0a6e 91       		.byte	0x91
 2826 0a6f 64       		.sleb128 -28
 2827 0a70 94       		.byte	0x94
 2828 0a71 01       		.byte	0x1
 2829 0a72 00       		.byte	0
 2830 0a73 1D       		.uleb128 0x1d
 2831 0a74 74000000 		.4byte	.LVL62
 2832 0a78 F0110000 		.4byte	0x11f0
 2833 0a7c 1E       		.uleb128 0x1e
 2834 0a7d 01       		.uleb128 0x1
 2835 0a7e 50       		.byte	0x50
 2836 0a7f 02       		.uleb128 0x2
 2837 0a80 76       		.byte	0x76
 2838 0a81 00       		.sleb128 0
 2839 0a82 00       		.byte	0
 2840 0a83 00       		.byte	0
 2841 0a84 25       		.uleb128 0x25
 2842 0a85 F70B0000 		.4byte	.LASF136
 2843 0a89 01       		.byte	0x1
 2844 0a8a 2405     		.2byte	0x524
 2845 0a8c 00000000 		.4byte	.LFB12
 2846 0a90 68000000 		.4byte	.LFE12-.LFB12
 2847 0a94 01       		.uleb128 0x1
 2848 0a95 9C       		.byte	0x9c
 2849 0a96 BD0A0000 		.4byte	0xabd
 2850 0a9a 1C       		.uleb128 0x1c
 2851 0a9b 49070000 		.4byte	.LASF137
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 111


 2852 0a9f 01       		.byte	0x1
 2853 0aa0 2C05     		.2byte	0x52c
 2854 0aa2 BA000000 		.4byte	0xba
 2855 0aa6 6A030000 		.4byte	.LLST22
 2856 0aaa 23       		.uleb128 0x23
 2857 0aab 14000000 		.4byte	.LVL66
 2858 0aaf 76070000 		.4byte	0x776
 2859 0ab3 23       		.uleb128 0x23
 2860 0ab4 24000000 		.4byte	.LVL67
 2861 0ab8 BA060000 		.4byte	0x6ba
 2862 0abc 00       		.byte	0
 2863 0abd 25       		.uleb128 0x25
 2864 0abe 82070000 		.4byte	.LASF138
 2865 0ac2 01       		.byte	0x1
 2866 0ac3 7105     		.2byte	0x571
 2867 0ac5 00000000 		.4byte	.LFB13
 2868 0ac9 08000000 		.4byte	.LFE13-.LFB13
 2869 0acd 01       		.uleb128 0x1
 2870 0ace 9C       		.byte	0x9c
 2871 0acf F50A0000 		.4byte	0xaf5
 2872 0ad3 1B       		.uleb128 0x1b
 2873 0ad4 4D090000 		.4byte	.LASF139
 2874 0ad8 01       		.byte	0x1
 2875 0ad9 7105     		.2byte	0x571
 2876 0adb E8000000 		.4byte	0xe8
 2877 0adf 94030000 		.4byte	.LLST23
 2878 0ae3 1D       		.uleb128 0x1d
 2879 0ae4 06000000 		.4byte	.LVL73
 2880 0ae8 FC110000 		.4byte	0x11fc
 2881 0aec 1E       		.uleb128 0x1e
 2882 0aed 01       		.uleb128 0x1
 2883 0aee 50       		.byte	0x50
 2884 0aef 03       		.uleb128 0x3
 2885 0af0 F3       		.byte	0xf3
 2886 0af1 01       		.uleb128 0x1
 2887 0af2 50       		.byte	0x50
 2888 0af3 00       		.byte	0
 2889 0af4 00       		.byte	0
 2890 0af5 25       		.uleb128 0x25
 2891 0af6 5A010000 		.4byte	.LASF140
 2892 0afa 01       		.byte	0x1
 2893 0afb 8805     		.2byte	0x588
 2894 0afd 00000000 		.4byte	.LFB14
 2895 0b01 2C000000 		.4byte	.LFE14-.LFB14
 2896 0b05 01       		.uleb128 0x1
 2897 0b06 9C       		.byte	0x9c
 2898 0b07 1C0B0000 		.4byte	0xb1c
 2899 0b0b 1B       		.uleb128 0x1b
 2900 0b0c 14030000 		.4byte	.LASF141
 2901 0b10 01       		.byte	0x1
 2902 0b11 8805     		.2byte	0x588
 2903 0b13 99000000 		.4byte	0x99
 2904 0b17 B5030000 		.4byte	.LLST24
 2905 0b1b 00       		.byte	0
 2906 0b1c 25       		.uleb128 0x25
 2907 0b1d 96040000 		.4byte	.LASF142
 2908 0b21 01       		.byte	0x1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 112


 2909 0b22 CC05     		.2byte	0x5cc
 2910 0b24 00000000 		.4byte	.LFB15
 2911 0b28 2C000000 		.4byte	.LFE15-.LFB15
 2912 0b2c 01       		.uleb128 0x1
 2913 0b2d 9C       		.byte	0x9c
 2914 0b2e 430B0000 		.4byte	0xb43
 2915 0b32 1B       		.uleb128 0x1b
 2916 0b33 5B0B0000 		.4byte	.LASF38
 2917 0b37 01       		.byte	0x1
 2918 0b38 CC05     		.2byte	0x5cc
 2919 0b3a 99000000 		.4byte	0x99
 2920 0b3e E3030000 		.4byte	.LLST25
 2921 0b42 00       		.byte	0
 2922 0b43 25       		.uleb128 0x25
 2923 0b44 9D060000 		.4byte	.LASF143
 2924 0b48 01       		.byte	0x1
 2925 0b49 2006     		.2byte	0x620
 2926 0b4b 00000000 		.4byte	.LFB16
 2927 0b4f 12000000 		.4byte	.LFE16-.LFB16
 2928 0b53 01       		.uleb128 0x1
 2929 0b54 9C       		.byte	0x9c
 2930 0b55 9F0B0000 		.4byte	0xb9f
 2931 0b59 1B       		.uleb128 0x1b
 2932 0b5a 5B0B0000 		.4byte	.LASF38
 2933 0b5e 01       		.byte	0x1
 2934 0b5f 2006     		.2byte	0x620
 2935 0b61 99000000 		.4byte	0x99
 2936 0b65 11040000 		.4byte	.LLST26
 2937 0b69 1B       		.uleb128 0x1b
 2938 0b6a 14030000 		.4byte	.LASF141
 2939 0b6e 01       		.byte	0x1
 2940 0b6f 2006     		.2byte	0x620
 2941 0b71 99000000 		.4byte	0x99
 2942 0b75 3D040000 		.4byte	.LLST27
 2943 0b79 24       		.uleb128 0x24
 2944 0b7a 0A000000 		.4byte	.LVL82
 2945 0b7e F50A0000 		.4byte	0xaf5
 2946 0b82 8E0B0000 		.4byte	0xb8e
 2947 0b86 1E       		.uleb128 0x1e
 2948 0b87 01       		.uleb128 0x1
 2949 0b88 50       		.byte	0x50
 2950 0b89 03       		.uleb128 0x3
 2951 0b8a F3       		.byte	0xf3
 2952 0b8b 01       		.uleb128 0x1
 2953 0b8c 51       		.byte	0x51
 2954 0b8d 00       		.byte	0
 2955 0b8e 1D       		.uleb128 0x1d
 2956 0b8f 10000000 		.4byte	.LVL83
 2957 0b93 1C0B0000 		.4byte	0xb1c
 2958 0b97 1E       		.uleb128 0x1e
 2959 0b98 01       		.uleb128 0x1
 2960 0b99 50       		.byte	0x50
 2961 0b9a 02       		.uleb128 0x2
 2962 0b9b 74       		.byte	0x74
 2963 0b9c 00       		.sleb128 0
 2964 0b9d 00       		.byte	0
 2965 0b9e 00       		.byte	0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 113


 2966 0b9f 1F       		.uleb128 0x1f
 2967 0ba0 D8060000 		.4byte	0x6d8
 2968 0ba4 00000000 		.4byte	.LFB17
 2969 0ba8 12000000 		.4byte	.LFE17-.LFB17
 2970 0bac 01       		.uleb128 0x1
 2971 0bad 9C       		.byte	0x9c
 2972 0bae FE0B0000 		.4byte	0xbfe
 2973 0bb2 29       		.uleb128 0x29
 2974 0bb3 E9060000 		.4byte	0x6e9
 2975 0bb7 5E040000 		.4byte	.LLST28
 2976 0bbb 20       		.uleb128 0x20
 2977 0bbc F5060000 		.4byte	0x6f5
 2978 0bc0 98040000 		.4byte	.LLST29
 2979 0bc4 21       		.uleb128 0x21
 2980 0bc5 0A000000 		.4byte	.LBB12
 2981 0bc9 06000000 		.4byte	.LBE12-.LBB12
 2982 0bcd 29       		.uleb128 0x29
 2983 0bce E9060000 		.4byte	0x6e9
 2984 0bd2 AC040000 		.4byte	.LLST30
 2985 0bd6 21       		.uleb128 0x21
 2986 0bd7 0A000000 		.4byte	.LBB13
 2987 0bdb 06000000 		.4byte	.LBE13-.LBB13
 2988 0bdf 22       		.uleb128 0x22
 2989 0be0 F5060000 		.4byte	0x6f5
 2990 0be4 1D       		.uleb128 0x1d
 2991 0be5 10000000 		.4byte	.LVL88
 2992 0be9 07120000 		.4byte	0x1207
 2993 0bed 1E       		.uleb128 0x1e
 2994 0bee 01       		.uleb128 0x1
 2995 0bef 50       		.byte	0x50
 2996 0bf0 03       		.uleb128 0x3
 2997 0bf1 F3       		.byte	0xf3
 2998 0bf2 01       		.uleb128 0x1
 2999 0bf3 50       		.byte	0x50
 3000 0bf4 1E       		.uleb128 0x1e
 3001 0bf5 01       		.uleb128 0x1
 3002 0bf6 51       		.byte	0x51
 3003 0bf7 02       		.uleb128 0x2
 3004 0bf8 08       		.byte	0x8
 3005 0bf9 55       		.byte	0x55
 3006 0bfa 00       		.byte	0
 3007 0bfb 00       		.byte	0
 3008 0bfc 00       		.byte	0
 3009 0bfd 00       		.byte	0
 3010 0bfe 1A       		.uleb128 0x1a
 3011 0bff 66080000 		.4byte	.LASF144
 3012 0c03 01       		.byte	0x1
 3013 0c04 C906     		.2byte	0x6c9
 3014 0c06 BA000000 		.4byte	0xba
 3015 0c0a 00000000 		.4byte	.LFB18
 3016 0c0e 18000000 		.4byte	.LFE18-.LFB18
 3017 0c12 01       		.uleb128 0x1
 3018 0c13 9C       		.byte	0x9c
 3019 0c14 490C0000 		.4byte	0xc49
 3020 0c18 1C       		.uleb128 0x1c
 3021 0c19 41050000 		.4byte	.LASF109
 3022 0c1d 01       		.byte	0x1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 114


 3023 0c1e CB06     		.2byte	0x6cb
 3024 0c20 BA000000 		.4byte	0xba
 3025 0c24 CD040000 		.4byte	.LLST31
 3026 0c28 1C       		.uleb128 0x1c
 3027 0c29 E0060000 		.4byte	.LASF118
 3028 0c2d 01       		.byte	0x1
 3029 0c2e CC06     		.2byte	0x6cc
 3030 0c30 99000000 		.4byte	0x99
 3031 0c34 F7040000 		.4byte	.LLST32
 3032 0c38 1D       		.uleb128 0x1d
 3033 0c39 0C000000 		.4byte	.LVL91
 3034 0c3d D8060000 		.4byte	0x6d8
 3035 0c41 1E       		.uleb128 0x1e
 3036 0c42 01       		.uleb128 0x1
 3037 0c43 50       		.byte	0x50
 3038 0c44 02       		.uleb128 0x2
 3039 0c45 74       		.byte	0x74
 3040 0c46 00       		.sleb128 0
 3041 0c47 00       		.byte	0
 3042 0c48 00       		.byte	0
 3043 0c49 1F       		.uleb128 0x1f
 3044 0c4a 02070000 		.4byte	0x702
 3045 0c4e 00000000 		.4byte	.LFB23
 3046 0c52 14000000 		.4byte	.LFE23-.LFB23
 3047 0c56 01       		.uleb128 0x1
 3048 0c57 9C       		.byte	0x9c
 3049 0c58 700C0000 		.4byte	0xc70
 3050 0c5c 29       		.uleb128 0x29
 3051 0c5d 13070000 		.4byte	0x713
 3052 0c61 2E050000 		.4byte	.LLST33
 3053 0c65 22       		.uleb128 0x22
 3054 0c66 1F070000 		.4byte	0x71f
 3055 0c6a 22       		.uleb128 0x22
 3056 0c6b 2B070000 		.4byte	0x72b
 3057 0c6f 00       		.byte	0
 3058 0c70 1A       		.uleb128 0x1a
 3059 0c71 F4020000 		.4byte	.LASF145
 3060 0c75 01       		.byte	0x1
 3061 0c76 400B     		.2byte	0xb40
 3062 0c78 81000000 		.4byte	0x81
 3063 0c7c 00000000 		.4byte	.LFB24
 3064 0c80 30000000 		.4byte	.LFE24-.LFB24
 3065 0c84 01       		.uleb128 0x1
 3066 0c85 9C       		.byte	0x9c
 3067 0c86 C50C0000 		.4byte	0xcc5
 3068 0c8a 1B       		.uleb128 0x1b
 3069 0c8b 530C0000 		.4byte	.LASF146
 3070 0c8f 01       		.byte	0x1
 3071 0c90 400B     		.2byte	0xb40
 3072 0c92 99000000 		.4byte	0x99
 3073 0c96 4F050000 		.4byte	.LLST34
 3074 0c9a 2A       		.uleb128 0x2a
 3075 0c9b 3C040000 		.4byte	.LASF29
 3076 0c9f 01       		.byte	0x1
 3077 0ca0 400B     		.2byte	0xb40
 3078 0ca2 99000000 		.4byte	0x99
 3079 0ca6 01       		.uleb128 0x1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 115


 3080 0ca7 51       		.byte	0x51
 3081 0ca8 1C       		.uleb128 0x1c
 3082 0ca9 1B090000 		.4byte	.LASF147
 3083 0cad 01       		.byte	0x1
 3084 0cae 420B     		.2byte	0xb42
 3085 0cb0 99000000 		.4byte	0x99
 3086 0cb4 7D050000 		.4byte	.LLST35
 3087 0cb8 15       		.uleb128 0x15
 3088 0cb9 610C0000 		.4byte	.LASF148
 3089 0cbd 01       		.byte	0x1
 3090 0cbe 430B     		.2byte	0xb43
 3091 0cc0 99000000 		.4byte	0x99
 3092 0cc4 00       		.byte	0
 3093 0cc5 2B       		.uleb128 0x2b
 3094 0cc6 C9010000 		.4byte	.LASF158
 3095 0cca 01       		.byte	0x1
 3096 0ccb 9909     		.2byte	0x999
 3097 0ccd 01       		.byte	0x1
 3098 0cce 0F0D0000 		.4byte	0xd0f
 3099 0cd2 16       		.uleb128 0x16
 3100 0cd3 E0060000 		.4byte	.LASF118
 3101 0cd7 01       		.byte	0x1
 3102 0cd8 9909     		.2byte	0x999
 3103 0cda 99000000 		.4byte	0x99
 3104 0cde 16       		.uleb128 0x16
 3105 0cdf B8010000 		.4byte	.LASF113
 3106 0ce3 01       		.byte	0x1
 3107 0ce4 9909     		.2byte	0x999
 3108 0ce6 38070000 		.4byte	0x738
 3109 0cea 15       		.uleb128 0x15
 3110 0ceb 99020000 		.4byte	.LASF149
 3111 0cef 01       		.byte	0x1
 3112 0cf0 9B09     		.2byte	0x99b
 3113 0cf2 81000000 		.4byte	0x81
 3114 0cf6 15       		.uleb128 0x15
 3115 0cf7 3B010000 		.4byte	.LASF150
 3116 0cfb 01       		.byte	0x1
 3117 0cfc 9C09     		.2byte	0x99c
 3118 0cfe 81000000 		.4byte	0x81
 3119 0d02 15       		.uleb128 0x15
 3120 0d03 530C0000 		.4byte	.LASF146
 3121 0d07 01       		.byte	0x1
 3122 0d08 A209     		.2byte	0x9a2
 3123 0d0a 99000000 		.4byte	0x99
 3124 0d0e 00       		.byte	0
 3125 0d0f 25       		.uleb128 0x25
 3126 0d10 C80C0000 		.4byte	.LASF151
 3127 0d14 01       		.byte	0x1
 3128 0d15 6409     		.2byte	0x964
 3129 0d17 00000000 		.4byte	.LFB21
 3130 0d1b 24000000 		.4byte	.LFE21-.LFB21
 3131 0d1f 01       		.uleb128 0x1
 3132 0d20 9C       		.byte	0x9c
 3133 0d21 8C0D0000 		.4byte	0xd8c
 3134 0d25 1C       		.uleb128 0x1c
 3135 0d26 E0060000 		.4byte	.LASF118
 3136 0d2a 01       		.byte	0x1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 116


 3137 0d2b 6609     		.2byte	0x966
 3138 0d2d 99000000 		.4byte	0x99
 3139 0d31 90050000 		.4byte	.LLST36
 3140 0d35 1C       		.uleb128 0x1c
 3141 0d36 B8010000 		.4byte	.LASF113
 3142 0d3a 01       		.byte	0x1
 3143 0d3b 6709     		.2byte	0x967
 3144 0d3d 38070000 		.4byte	0x738
 3145 0d41 A4050000 		.4byte	.LLST37
 3146 0d45 2C       		.uleb128 0x2c
 3147 0d46 C50C0000 		.4byte	0xcc5
 3148 0d4a 0A000000 		.4byte	.LBB18
 3149 0d4e 0C000000 		.4byte	.LBE18-.LBB18
 3150 0d52 01       		.byte	0x1
 3151 0d53 7109     		.2byte	0x971
 3152 0d55 29       		.uleb128 0x29
 3153 0d56 DE0C0000 		.4byte	0xcde
 3154 0d5a B7050000 		.4byte	.LLST38
 3155 0d5e 2D       		.uleb128 0x2d
 3156 0d5f D20C0000 		.4byte	0xcd2
 3157 0d63 21       		.uleb128 0x21
 3158 0d64 0A000000 		.4byte	.LBB19
 3159 0d68 0C000000 		.4byte	.LBE19-.LBB19
 3160 0d6c 20       		.uleb128 0x20
 3161 0d6d EA0C0000 		.4byte	0xcea
 3162 0d71 CA050000 		.4byte	.LLST39
 3163 0d75 2E       		.uleb128 0x2e
 3164 0d76 F60C0000 		.4byte	0xcf6
 3165 0d7a 00       		.byte	0
 3166 0d7b 22       		.uleb128 0x22
 3167 0d7c 020D0000 		.4byte	0xd02
 3168 0d80 23       		.uleb128 0x23
 3169 0d81 14000000 		.4byte	.LVL106
 3170 0d85 700C0000 		.4byte	0xc70
 3171 0d89 00       		.byte	0
 3172 0d8a 00       		.byte	0
 3173 0d8b 00       		.byte	0
 3174 0d8c 1A       		.uleb128 0x1a
 3175 0d8d CF040000 		.4byte	.LASF152
 3176 0d91 01       		.byte	0x1
 3177 0d92 840C     		.2byte	0xc84
 3178 0d94 76000000 		.4byte	0x76
 3179 0d98 00000000 		.4byte	.LFB26
 3180 0d9c 14000000 		.4byte	.LFE26-.LFB26
 3181 0da0 01       		.uleb128 0x1
 3182 0da1 9C       		.byte	0x9c
 3183 0da2 D50D0000 		.4byte	0xdd5
 3184 0da6 1B       		.uleb128 0x1b
 3185 0da7 45010000 		.4byte	.LASF114
 3186 0dab 01       		.byte	0x1
 3187 0dac 840C     		.2byte	0xc84
 3188 0dae 83060000 		.4byte	0x683
 3189 0db2 DD050000 		.4byte	.LLST40
 3190 0db6 2A       		.uleb128 0x2a
 3191 0db7 290B0000 		.4byte	.LASF123
 3192 0dbb 01       		.byte	0x1
 3193 0dbc 840C     		.2byte	0xc84
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 117


 3194 0dbe 76000000 		.4byte	0x76
 3195 0dc2 01       		.uleb128 0x1
 3196 0dc3 51       		.byte	0x51
 3197 0dc4 1C       		.uleb128 0x1c
 3198 0dc5 46090000 		.4byte	.LASF112
 3199 0dc9 01       		.byte	0x1
 3200 0dca 860C     		.2byte	0xc86
 3201 0dcc 76000000 		.4byte	0x76
 3202 0dd0 FE050000 		.4byte	.LLST41
 3203 0dd4 00       		.byte	0
 3204 0dd5 25       		.uleb128 0x25
 3205 0dd6 92050000 		.4byte	.LASF153
 3206 0dda 01       		.byte	0x1
 3207 0ddb D90C     		.2byte	0xcd9
 3208 0ddd 00000000 		.4byte	.LFB27
 3209 0de1 1C000000 		.4byte	.LFE27-.LFB27
 3210 0de5 01       		.uleb128 0x1
 3211 0de6 9C       		.byte	0x9c
 3212 0de7 3E0E0000 		.4byte	0xe3e
 3213 0deb 1B       		.uleb128 0x1b
 3214 0dec 7B010000 		.4byte	.LASF154
 3215 0df0 01       		.byte	0x1
 3216 0df1 D90C     		.2byte	0xcd9
 3217 0df3 6C050000 		.4byte	0x56c
 3218 0df7 1D060000 		.4byte	.LLST42
 3219 0dfb 1B       		.uleb128 0x1b
 3220 0dfc 66060000 		.4byte	.LASF79
 3221 0e00 01       		.byte	0x1
 3222 0e01 D90C     		.2byte	0xcd9
 3223 0e03 99000000 		.4byte	0x99
 3224 0e07 49060000 		.4byte	.LLST43
 3225 0e0b 1B       		.uleb128 0x1b
 3226 0e0c BD020000 		.4byte	.LASF155
 3227 0e10 01       		.byte	0x1
 3228 0e11 D90C     		.2byte	0xcd9
 3229 0e13 99000000 		.4byte	0x99
 3230 0e17 75060000 		.4byte	.LLST44
 3231 0e1b 1C       		.uleb128 0x1c
 3232 0e1c 20010000 		.4byte	.LASF126
 3233 0e20 01       		.byte	0x1
 3234 0e21 DB0C     		.2byte	0xcdb
 3235 0e23 81000000 		.4byte	0x81
 3236 0e27 A1060000 		.4byte	.LLST45
 3237 0e2b 23       		.uleb128 0x23
 3238 0e2c 0C000000 		.4byte	.LVL112
 3239 0e30 CE110000 		.4byte	0x11ce
 3240 0e34 23       		.uleb128 0x23
 3241 0e35 1A000000 		.4byte	.LVL114
 3242 0e39 D9110000 		.4byte	0x11d9
 3243 0e3d 00       		.byte	0
 3244 0e3e 18       		.uleb128 0x18
 3245 0e3f 3B000000 		.4byte	.LASF157
 3246 0e43 01       		.byte	0x1
 3247 0e44 B903     		.2byte	0x3b9
 3248 0e46 01       		.byte	0x1
 3249 0e47 1F       		.uleb128 0x1f
 3250 0e48 3E070000 		.4byte	0x73e
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 118


 3251 0e4c 00000000 		.4byte	.LFB10
 3252 0e50 44000000 		.4byte	.LFE10-.LFB10
 3253 0e54 01       		.uleb128 0x1
 3254 0e55 9C       		.byte	0x9c
 3255 0e56 CE0E0000 		.4byte	0xece
 3256 0e5a 29       		.uleb128 0x29
 3257 0e5b 4B070000 		.4byte	0x74b
 3258 0e5f B4060000 		.4byte	.LLST46
 3259 0e63 2F       		.uleb128 0x2f
 3260 0e64 3E0E0000 		.4byte	0xe3e
 3261 0e68 10000000 		.4byte	.LBB24
 3262 0e6c 14000000 		.4byte	.LBE24-.LBB24
 3263 0e70 01       		.byte	0x1
 3264 0e71 3304     		.2byte	0x433
 3265 0e73 AD0E0000 		.4byte	0xead
 3266 0e77 24       		.uleb128 0x24
 3267 0e78 1C000000 		.4byte	.LVL119
 3268 0e7c D50D0000 		.4byte	0xdd5
 3269 0e80 9A0E0000 		.4byte	0xe9a
 3270 0e84 1E       		.uleb128 0x1e
 3271 0e85 01       		.uleb128 0x1
 3272 0e86 50       		.byte	0x50
 3273 0e87 05       		.uleb128 0x5
 3274 0e88 0C       		.byte	0xc
 3275 0e89 00040240 		.4byte	0x40020400
 3276 0e8d 1E       		.uleb128 0x1e
 3277 0e8e 01       		.uleb128 0x1
 3278 0e8f 51       		.byte	0x51
 3279 0e90 03       		.uleb128 0x3
 3280 0e91 0A       		.byte	0xa
 3281 0e92 000F     		.2byte	0xf00
 3282 0e94 1E       		.uleb128 0x1e
 3283 0e95 01       		.uleb128 0x1
 3284 0e96 52       		.byte	0x52
 3285 0e97 01       		.uleb128 0x1
 3286 0e98 30       		.byte	0x30
 3287 0e99 00       		.byte	0
 3288 0e9a 23       		.uleb128 0x23
 3289 0e9b 20000000 		.4byte	.LVL120
 3290 0e9f 13120000 		.4byte	0x1213
 3291 0ea3 23       		.uleb128 0x23
 3292 0ea4 24000000 		.4byte	.LVL121
 3293 0ea8 1F120000 		.4byte	0x121f
 3294 0eac 00       		.byte	0
 3295 0ead 30       		.uleb128 0x30
 3296 0eae 36000000 		.4byte	.LBB26
 3297 0eb2 04000000 		.4byte	.LBE26-.LBB26
 3298 0eb6 C40E0000 		.4byte	0xec4
 3299 0eba 29       		.uleb128 0x29
 3300 0ebb 4B070000 		.4byte	0x74b
 3301 0ebf D5060000 		.4byte	.LLST47
 3302 0ec3 00       		.byte	0
 3303 0ec4 23       		.uleb128 0x23
 3304 0ec5 2C000000 		.4byte	.LVL122
 3305 0ec9 2B120000 		.4byte	0x122b
 3306 0ecd 00       		.byte	0
 3307 0ece 2B       		.uleb128 0x2b
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 119


 3308 0ecf F9030000 		.4byte	.LASF159
 3309 0ed3 01       		.byte	0x1
 3310 0ed4 4A08     		.2byte	0x84a
 3311 0ed6 01       		.byte	0x1
 3312 0ed7 E80E0000 		.4byte	0xee8
 3313 0edb 15       		.uleb128 0x15
 3314 0edc FD090000 		.4byte	.LASF160
 3315 0ee0 01       		.byte	0x1
 3316 0ee1 4C08     		.2byte	0x84c
 3317 0ee3 99000000 		.4byte	0x99
 3318 0ee7 00       		.byte	0
 3319 0ee8 1A       		.uleb128 0x1a
 3320 0ee9 3D0C0000 		.4byte	.LASF161
 3321 0eed 01       		.byte	0x1
 3322 0eee C302     		.2byte	0x2c3
 3323 0ef0 BA000000 		.4byte	0xba
 3324 0ef4 00000000 		.4byte	.LFB7
 3325 0ef8 50000000 		.4byte	.LFE7-.LFB7
 3326 0efc 01       		.uleb128 0x1
 3327 0efd 9C       		.byte	0x9c
 3328 0efe 850F0000 		.4byte	0xf85
 3329 0f02 26       		.uleb128 0x26
 3330 0f03 D3000000 		.4byte	.LASF162
 3331 0f07 01       		.byte	0x1
 3332 0f08 C502     		.2byte	0x2c5
 3333 0f0a BA000000 		.4byte	0xba
 3334 0f0e 00       		.byte	0
 3335 0f0f 31       		.uleb128 0x31
 3336 0f10 58070000 		.4byte	0x758
 3337 0f14 00000000 		.4byte	.LBB32
 3338 0f18 00000000 		.4byte	.Ldebug_ranges0+0
 3339 0f1c 01       		.byte	0x1
 3340 0f1d E602     		.2byte	0x2e6
 3341 0f1f 440F0000 		.4byte	0xf44
 3342 0f23 32       		.uleb128 0x32
 3343 0f24 CE0E0000 		.4byte	0xece
 3344 0f28 00000000 		.4byte	.LBB33
 3345 0f2c 00000000 		.4byte	.Ldebug_ranges0+0
 3346 0f30 01       		.byte	0x1
 3347 0f31 7808     		.2byte	0x878
 3348 0f33 33       		.uleb128 0x33
 3349 0f34 00000000 		.4byte	.Ldebug_ranges0+0
 3350 0f38 20       		.uleb128 0x20
 3351 0f39 DB0E0000 		.4byte	0xedb
 3352 0f3d EA060000 		.4byte	.LLST48
 3353 0f41 00       		.byte	0
 3354 0f42 00       		.byte	0
 3355 0f43 00       		.byte	0
 3356 0f44 23       		.uleb128 0x23
 3357 0f45 28000000 		.4byte	.LVL132
 3358 0f49 0F0D0000 		.4byte	0xd0f
 3359 0f4d 24       		.uleb128 0x24
 3360 0f4e 2E000000 		.4byte	.LVL133
 3361 0f52 BF090000 		.4byte	0x9bf
 3362 0f56 610F0000 		.4byte	0xf61
 3363 0f5a 1E       		.uleb128 0x1e
 3364 0f5b 01       		.uleb128 0x1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 120


 3365 0f5c 50       		.byte	0x50
 3366 0f5d 02       		.uleb128 0x2
 3367 0f5e 74       		.byte	0x74
 3368 0f5f 00       		.sleb128 0
 3369 0f60 00       		.byte	0
 3370 0f61 24       		.uleb128 0x24
 3371 0f62 3A000000 		.4byte	.LVL134
 3372 0f66 3E070000 		.4byte	0x73e
 3373 0f6a 750F0000 		.4byte	0xf75
 3374 0f6e 1E       		.uleb128 0x1e
 3375 0f6f 01       		.uleb128 0x1
 3376 0f70 50       		.byte	0x50
 3377 0f71 02       		.uleb128 0x2
 3378 0f72 74       		.byte	0x74
 3379 0f73 00       		.sleb128 0
 3380 0f74 00       		.byte	0
 3381 0f75 1D       		.uleb128 0x1d
 3382 0f76 40000000 		.4byte	.LVL135
 3383 0f7a 3E070000 		.4byte	0x73e
 3384 0f7e 1E       		.uleb128 0x1e
 3385 0f7f 01       		.uleb128 0x1
 3386 0f80 50       		.byte	0x50
 3387 0f81 01       		.uleb128 0x1
 3388 0f82 31       		.byte	0x31
 3389 0f83 00       		.byte	0
 3390 0f84 00       		.byte	0
 3391 0f85 25       		.uleb128 0x25
 3392 0f86 9B030000 		.4byte	.LASF163
 3393 0f8a 01       		.byte	0x1
 3394 0f8b CD0B     		.2byte	0xbcd
 3395 0f8d 00000000 		.4byte	.LFB25
 3396 0f91 80000000 		.4byte	.LFE25-.LFB25
 3397 0f95 01       		.uleb128 0x1
 3398 0f96 9C       		.byte	0x9c
 3399 0f97 B9100000 		.4byte	0x10b9
 3400 0f9b 1B       		.uleb128 0x1b
 3401 0f9c 32030000 		.4byte	.LASF164
 3402 0fa0 01       		.byte	0x1
 3403 0fa1 CD0B     		.2byte	0xbcd
 3404 0fa3 99000000 		.4byte	0x99
 3405 0fa7 1E070000 		.4byte	.LLST49
 3406 0fab 1C       		.uleb128 0x1c
 3407 0fac 33080000 		.4byte	.LASF165
 3408 0fb0 01       		.byte	0x1
 3409 0fb1 D10B     		.2byte	0xbd1
 3410 0fb3 99000000 		.4byte	0x99
 3411 0fb7 3D070000 		.4byte	.LLST50
 3412 0fbb 1C       		.uleb128 0x1c
 3413 0fbc 2C080000 		.4byte	.LASF166
 3414 0fc0 01       		.byte	0x1
 3415 0fc1 D20B     		.2byte	0xbd2
 3416 0fc3 99000000 		.4byte	0x99
 3417 0fc7 7A070000 		.4byte	.LLST51
 3418 0fcb 1C       		.uleb128 0x1c
 3419 0fcc 34010000 		.4byte	.LASF167
 3420 0fd0 01       		.byte	0x1
 3421 0fd1 D30B     		.2byte	0xbd3
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 121


 3422 0fd3 99000000 		.4byte	0x99
 3423 0fd7 A1070000 		.4byte	.LLST52
 3424 0fdb 24       		.uleb128 0x24
 3425 0fdc 26000000 		.4byte	.LVL143
 3426 0fe0 D50D0000 		.4byte	0xdd5
 3427 0fe4 FB0F0000 		.4byte	0xffb
 3428 0fe8 1E       		.uleb128 0x1e
 3429 0fe9 01       		.uleb128 0x1
 3430 0fea 50       		.byte	0x50
 3431 0feb 02       		.uleb128 0x2
 3432 0fec 74       		.byte	0x74
 3433 0fed 00       		.sleb128 0
 3434 0fee 1E       		.uleb128 0x1e
 3435 0fef 01       		.uleb128 0x1
 3436 0ff0 51       		.byte	0x51
 3437 0ff1 03       		.uleb128 0x3
 3438 0ff2 0A       		.byte	0xa
 3439 0ff3 000F     		.2byte	0xf00
 3440 0ff5 1E       		.uleb128 0x1e
 3441 0ff6 01       		.uleb128 0x1
 3442 0ff7 52       		.byte	0x52
 3443 0ff8 01       		.uleb128 0x1
 3444 0ff9 30       		.byte	0x30
 3445 0ffa 00       		.byte	0
 3446 0ffb 24       		.uleb128 0x24
 3447 0ffc 30000000 		.4byte	.LVL144
 3448 1000 D50D0000 		.4byte	0xdd5
 3449 1004 19100000 		.4byte	0x1019
 3450 1008 1E       		.uleb128 0x1e
 3451 1009 01       		.uleb128 0x1
 3452 100a 50       		.byte	0x50
 3453 100b 02       		.uleb128 0x2
 3454 100c 75       		.byte	0x75
 3455 100d 00       		.sleb128 0
 3456 100e 1E       		.uleb128 0x1e
 3457 100f 01       		.uleb128 0x1
 3458 1010 51       		.byte	0x51
 3459 1011 01       		.uleb128 0x1
 3460 1012 34       		.byte	0x34
 3461 1013 1E       		.uleb128 0x1e
 3462 1014 01       		.uleb128 0x1
 3463 1015 52       		.byte	0x52
 3464 1016 01       		.uleb128 0x1
 3465 1017 30       		.byte	0x30
 3466 1018 00       		.byte	0
 3467 1019 24       		.uleb128 0x24
 3468 101a 3E000000 		.4byte	.LVL145
 3469 101e D50D0000 		.4byte	0xdd5
 3470 1022 3A100000 		.4byte	0x103a
 3471 1026 1E       		.uleb128 0x1e
 3472 1027 01       		.uleb128 0x1
 3473 1028 50       		.byte	0x50
 3474 1029 02       		.uleb128 0x2
 3475 102a 76       		.byte	0x76
 3476 102b 00       		.sleb128 0
 3477 102c 1E       		.uleb128 0x1e
 3478 102d 01       		.uleb128 0x1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 122


 3479 102e 51       		.byte	0x51
 3480 102f 02       		.uleb128 0x2
 3481 1030 77       		.byte	0x77
 3482 1031 00       		.sleb128 0
 3483 1032 1E       		.uleb128 0x1e
 3484 1033 01       		.uleb128 0x1
 3485 1034 52       		.byte	0x52
 3486 1035 03       		.uleb128 0x3
 3487 1036 0A       		.byte	0xa
 3488 1037 8001     		.2byte	0x180
 3489 1039 00       		.byte	0
 3490 103a 24       		.uleb128 0x24
 3491 103b 46000000 		.4byte	.LVL146
 3492 103f 37120000 		.4byte	0x1237
 3493 1043 50100000 		.4byte	0x1050
 3494 1047 1E       		.uleb128 0x1e
 3495 1048 01       		.uleb128 0x1
 3496 1049 50       		.byte	0x50
 3497 104a 04       		.uleb128 0x4
 3498 104b 7D       		.byte	0x7d
 3499 104c 0C       		.sleb128 12
 3500 104d 94       		.byte	0x94
 3501 104e 02       		.byte	0x2
 3502 104f 00       		.byte	0
 3503 1050 24       		.uleb128 0x24
 3504 1051 52000000 		.4byte	.LVL147
 3505 1055 D50D0000 		.4byte	0xdd5
 3506 1059 74100000 		.4byte	0x1074
 3507 105d 1E       		.uleb128 0x1e
 3508 105e 01       		.uleb128 0x1
 3509 105f 50       		.byte	0x50
 3510 1060 02       		.uleb128 0x2
 3511 1061 76       		.byte	0x76
 3512 1062 00       		.sleb128 0
 3513 1063 1E       		.uleb128 0x1e
 3514 1064 01       		.uleb128 0x1
 3515 1065 51       		.byte	0x51
 3516 1066 02       		.uleb128 0x2
 3517 1067 77       		.byte	0x77
 3518 1068 00       		.sleb128 0
 3519 1069 1E       		.uleb128 0x1e
 3520 106a 01       		.uleb128 0x1
 3521 106b 52       		.byte	0x52
 3522 106c 06       		.uleb128 0x6
 3523 106d 91       		.byte	0x91
 3524 106e 60       		.sleb128 -32
 3525 106f 06       		.byte	0x6
 3526 1070 77       		.byte	0x77
 3527 1071 00       		.sleb128 0
 3528 1072 1A       		.byte	0x1a
 3529 1073 00       		.byte	0
 3530 1074 24       		.uleb128 0x24
 3531 1075 5E000000 		.4byte	.LVL148
 3532 1079 D50D0000 		.4byte	0xdd5
 3533 107d 96100000 		.4byte	0x1096
 3534 1081 1E       		.uleb128 0x1e
 3535 1082 01       		.uleb128 0x1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 123


 3536 1083 50       		.byte	0x50
 3537 1084 02       		.uleb128 0x2
 3538 1085 75       		.byte	0x75
 3539 1086 00       		.sleb128 0
 3540 1087 1E       		.uleb128 0x1e
 3541 1088 01       		.uleb128 0x1
 3542 1089 51       		.byte	0x51
 3543 108a 01       		.uleb128 0x1
 3544 108b 34       		.byte	0x34
 3545 108c 1E       		.uleb128 0x1e
 3546 108d 01       		.uleb128 0x1
 3547 108e 52       		.byte	0x52
 3548 108f 05       		.uleb128 0x5
 3549 1090 91       		.byte	0x91
 3550 1091 5C       		.sleb128 -36
 3551 1092 06       		.byte	0x6
 3552 1093 34       		.byte	0x34
 3553 1094 1A       		.byte	0x1a
 3554 1095 00       		.byte	0
 3555 1096 1D       		.uleb128 0x1d
 3556 1097 6E000000 		.4byte	.LVL149
 3557 109b D50D0000 		.4byte	0xdd5
 3558 109f 1E       		.uleb128 0x1e
 3559 10a0 01       		.uleb128 0x1
 3560 10a1 50       		.byte	0x50
 3561 10a2 02       		.uleb128 0x2
 3562 10a3 74       		.byte	0x74
 3563 10a4 00       		.sleb128 0
 3564 10a5 1E       		.uleb128 0x1e
 3565 10a6 01       		.uleb128 0x1
 3566 10a7 51       		.byte	0x51
 3567 10a8 03       		.uleb128 0x3
 3568 10a9 0A       		.byte	0xa
 3569 10aa 000F     		.2byte	0xf00
 3570 10ac 1E       		.uleb128 0x1e
 3571 10ad 01       		.uleb128 0x1
 3572 10ae 52       		.byte	0x52
 3573 10af 07       		.uleb128 0x7
 3574 10b0 7D       		.byte	0x7d
 3575 10b1 00       		.sleb128 0
 3576 10b2 06       		.byte	0x6
 3577 10b3 0A       		.byte	0xa
 3578 10b4 000F     		.2byte	0xf00
 3579 10b6 1A       		.byte	0x1a
 3580 10b7 00       		.byte	0
 3581 10b8 00       		.byte	0
 3582 10b9 34       		.uleb128 0x34
 3583 10ba BA050000 		.4byte	.LASF168
 3584 10be 06       		.byte	0x6
 3585 10bf 8704     		.2byte	0x487
 3586 10c1 E1040000 		.4byte	0x4e1
 3587 10c5 34       		.uleb128 0x34
 3588 10c6 A7010000 		.4byte	.LASF169
 3589 10ca 06       		.byte	0x6
 3590 10cb 8804     		.2byte	0x488
 3591 10cd D1100000 		.4byte	0x10d1
 3592 10d1 27       		.uleb128 0x27
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 124


 3593 10d2 45060000 		.4byte	0x645
 3594 10d6 0D       		.uleb128 0xd
 3595 10d7 BA090000 		.4byte	0x9ba
 3596 10db E6100000 		.4byte	0x10e6
 3597 10df 0E       		.uleb128 0xe
 3598 10e0 E6010000 		.4byte	0x1e6
 3599 10e4 03       		.byte	0x3
 3600 10e5 00       		.byte	0
 3601 10e6 34       		.uleb128 0x34
 3602 10e7 E70B0000 		.4byte	.LASF170
 3603 10eb 06       		.byte	0x6
 3604 10ec 8904     		.2byte	0x489
 3605 10ee F2100000 		.4byte	0x10f2
 3606 10f2 27       		.uleb128 0x27
 3607 10f3 D6100000 		.4byte	0x10d6
 3608 10f7 35       		.uleb128 0x35
 3609 10f8 6D000000 		.4byte	.LASF171
 3610 10fc 01       		.byte	0x1
 3611 10fd BC       		.byte	0xbc
 3612 10fe D2000000 		.4byte	0xd2
 3613 1102 05       		.uleb128 0x5
 3614 1103 03       		.byte	0x3
 3615 1104 00000000 		.4byte	CapSense_widgetIndex
 3616 1108 35       		.uleb128 0x35
 3617 1109 52020000 		.4byte	.LASF172
 3618 110d 01       		.byte	0x1
 3619 110e BD       		.byte	0xbd
 3620 110f D2000000 		.4byte	0xd2
 3621 1113 05       		.uleb128 0x5
 3622 1114 03       		.byte	0x3
 3623 1115 00000000 		.4byte	CapSense_sensorIndex
 3624 1119 35       		.uleb128 0x35
 3625 111a AA0C0000 		.4byte	.LASF173
 3626 111e 01       		.byte	0x1
 3627 111f BE       		.byte	0xbe
 3628 1120 81000000 		.4byte	0x81
 3629 1124 05       		.uleb128 0x5
 3630 1125 03       		.byte	0x3
 3631 1126 00000000 		.4byte	CapSense_requestScanAllWidget
 3632 112a 35       		.uleb128 0x35
 3633 112b 960B0000 		.4byte	.LASF174
 3634 112f 01       		.byte	0x1
 3635 1130 C1       		.byte	0xc1
 3636 1131 06060000 		.4byte	0x606
 3637 1135 05       		.uleb128 0x5
 3638 1136 03       		.byte	0x3
 3639 1137 00000000 		.4byte	CapSense_curRamSnsPtr
 3640 113b 35       		.uleb128 0x35
 3641 113c FF080000 		.4byte	.LASF175
 3642 1140 01       		.byte	0x1
 3643 1141 AF       		.byte	0xaf
 3644 1142 3E010000 		.4byte	0x13e
 3645 1146 05       		.uleb128 0x5
 3646 1147 03       		.byte	0x3
 3647 1148 00000000 		.4byte	CapSense_currentSenseMethod
 3648 114c 35       		.uleb128 0x35
 3649 114d B80B0000 		.4byte	.LASF176
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 125


 3650 1151 01       		.byte	0x1
 3651 1152 B8       		.byte	0xb8
 3652 1153 5D110000 		.4byte	0x115d
 3653 1157 05       		.uleb128 0x5
 3654 1158 03       		.byte	0x3
 3655 1159 00000000 		.4byte	CapSense_scanFreqIndex
 3656 115d 27       		.uleb128 0x27
 3657 115e 81000000 		.4byte	0x81
 3658 1162 35       		.uleb128 0x35
 3659 1163 51060000 		.4byte	.LASF177
 3660 1167 01       		.byte	0x1
 3661 1168 D0       		.byte	0xd0
 3662 1169 B4090000 		.4byte	0x9b4
 3663 116d 05       		.uleb128 0x5
 3664 116e 03       		.byte	0x3
 3665 116f 00000000 		.4byte	CapSense_curSnsIOPtr
 3666 1173 0D       		.uleb128 0xd
 3667 1174 83110000 		.4byte	0x1183
 3668 1178 83110000 		.4byte	0x1183
 3669 117c 0E       		.uleb128 0xe
 3670 117d E6010000 		.4byte	0x1e6
 3671 1181 01       		.byte	0x1
 3672 1182 00       		.byte	0
 3673 1183 27       		.uleb128 0x27
 3674 1184 AF060000 		.4byte	0x6af
 3675 1188 35       		.uleb128 0x35
 3676 1189 EC0C0000 		.4byte	.LASF178
 3677 118d 01       		.byte	0x1
 3678 118e D2       		.byte	0xd2
 3679 118f 99110000 		.4byte	0x1199
 3680 1193 05       		.uleb128 0x5
 3681 1194 03       		.byte	0x3
 3682 1195 00000000 		.4byte	CapSense_idacGainTable
 3683 1199 27       		.uleb128 0x27
 3684 119a 73110000 		.4byte	0x1173
 3685 119e 36       		.uleb128 0x36
 3686 119f 12020000 		.4byte	.LASF179
 3687 11a3 12020000 		.4byte	.LASF179
 3688 11a7 08       		.byte	0x8
 3689 11a8 8801     		.2byte	0x188
 3690 11aa 36       		.uleb128 0x36
 3691 11ab FB0A0000 		.4byte	.LASF180
 3692 11af FB0A0000 		.4byte	.LASF180
 3693 11b3 08       		.byte	0x8
 3694 11b4 8A01     		.2byte	0x18a
 3695 11b6 36       		.uleb128 0x36
 3696 11b7 A2020000 		.4byte	.LASF181
 3697 11bb A2020000 		.4byte	.LASF181
 3698 11bf 08       		.byte	0x8
 3699 11c0 8901     		.2byte	0x189
 3700 11c2 36       		.uleb128 0x36
 3701 11c3 83080000 		.4byte	.LASF182
 3702 11c7 83080000 		.4byte	.LASF182
 3703 11cb 08       		.byte	0x8
 3704 11cc 8B01     		.2byte	0x18b
 3705 11ce 37       		.uleb128 0x37
 3706 11cf 7F0B0000 		.4byte	.LASF183
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 126


 3707 11d3 7F0B0000 		.4byte	.LASF183
 3708 11d7 09       		.byte	0x9
 3709 11d8 E5       		.byte	0xe5
 3710 11d9 37       		.uleb128 0x37
 3711 11da 85030000 		.4byte	.LASF184
 3712 11de 85030000 		.4byte	.LASF184
 3713 11e2 09       		.byte	0x9
 3714 11e3 E6       		.byte	0xe6
 3715 11e4 36       		.uleb128 0x36
 3716 11e5 CC080000 		.4byte	.LASF185
 3717 11e9 CC080000 		.4byte	.LASF185
 3718 11ed 08       		.byte	0x8
 3719 11ee 9101     		.2byte	0x191
 3720 11f0 36       		.uleb128 0x36
 3721 11f1 DE000000 		.4byte	.LASF186
 3722 11f5 DE000000 		.4byte	.LASF186
 3723 11f9 08       		.byte	0x8
 3724 11fa AA01     		.2byte	0x1aa
 3725 11fc 37       		.uleb128 0x37
 3726 11fd 5D090000 		.4byte	.LASF187
 3727 1201 5D090000 		.4byte	.LASF187
 3728 1205 0A       		.byte	0xa
 3729 1206 18       		.byte	0x18
 3730 1207 36       		.uleb128 0x36
 3731 1208 3D080000 		.4byte	.LASF188
 3732 120c 3D080000 		.4byte	.LASF188
 3733 1210 08       		.byte	0x8
 3734 1211 8E01     		.2byte	0x18e
 3735 1213 36       		.uleb128 0x36
 3736 1214 65070000 		.4byte	.LASF189
 3737 1218 65070000 		.4byte	.LASF189
 3738 121c 08       		.byte	0x8
 3739 121d A501     		.2byte	0x1a5
 3740 121f 36       		.uleb128 0x36
 3741 1220 16040000 		.4byte	.LASF190
 3742 1224 16040000 		.4byte	.LASF190
 3743 1228 08       		.byte	0x8
 3744 1229 A901     		.2byte	0x1a9
 3745 122b 36       		.uleb128 0x36
 3746 122c 1D050000 		.4byte	.LASF191
 3747 1230 1D050000 		.4byte	.LASF191
 3748 1234 08       		.byte	0x8
 3749 1235 A101     		.2byte	0x1a1
 3750 1237 37       		.uleb128 0x37
 3751 1238 D6060000 		.4byte	.LASF192
 3752 123c D6060000 		.4byte	.LASF192
 3753 1240 09       		.byte	0x9
 3754 1241 DA       		.byte	0xda
 3755 1242 00       		.byte	0
 3756              		.section	.debug_abbrev,"",%progbits
 3757              	.Ldebug_abbrev0:
 3758 0000 01       		.uleb128 0x1
 3759 0001 11       		.uleb128 0x11
 3760 0002 01       		.byte	0x1
 3761 0003 25       		.uleb128 0x25
 3762 0004 0E       		.uleb128 0xe
 3763 0005 13       		.uleb128 0x13
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 127


 3764 0006 0B       		.uleb128 0xb
 3765 0007 03       		.uleb128 0x3
 3766 0008 0E       		.uleb128 0xe
 3767 0009 1B       		.uleb128 0x1b
 3768 000a 0E       		.uleb128 0xe
 3769 000b 55       		.uleb128 0x55
 3770 000c 17       		.uleb128 0x17
 3771 000d 11       		.uleb128 0x11
 3772 000e 01       		.uleb128 0x1
 3773 000f 10       		.uleb128 0x10
 3774 0010 17       		.uleb128 0x17
 3775 0011 00       		.byte	0
 3776 0012 00       		.byte	0
 3777 0013 02       		.uleb128 0x2
 3778 0014 24       		.uleb128 0x24
 3779 0015 00       		.byte	0
 3780 0016 0B       		.uleb128 0xb
 3781 0017 0B       		.uleb128 0xb
 3782 0018 3E       		.uleb128 0x3e
 3783 0019 0B       		.uleb128 0xb
 3784 001a 03       		.uleb128 0x3
 3785 001b 0E       		.uleb128 0xe
 3786 001c 00       		.byte	0
 3787 001d 00       		.byte	0
 3788 001e 03       		.uleb128 0x3
 3789 001f 16       		.uleb128 0x16
 3790 0020 00       		.byte	0
 3791 0021 03       		.uleb128 0x3
 3792 0022 0E       		.uleb128 0xe
 3793 0023 3A       		.uleb128 0x3a
 3794 0024 0B       		.uleb128 0xb
 3795 0025 3B       		.uleb128 0x3b
 3796 0026 0B       		.uleb128 0xb
 3797 0027 49       		.uleb128 0x49
 3798 0028 13       		.uleb128 0x13
 3799 0029 00       		.byte	0
 3800 002a 00       		.byte	0
 3801 002b 04       		.uleb128 0x4
 3802 002c 24       		.uleb128 0x24
 3803 002d 00       		.byte	0
 3804 002e 0B       		.uleb128 0xb
 3805 002f 0B       		.uleb128 0xb
 3806 0030 3E       		.uleb128 0x3e
 3807 0031 0B       		.uleb128 0xb
 3808 0032 03       		.uleb128 0x3
 3809 0033 08       		.uleb128 0x8
 3810 0034 00       		.byte	0
 3811 0035 00       		.byte	0
 3812 0036 05       		.uleb128 0x5
 3813 0037 16       		.uleb128 0x16
 3814 0038 00       		.byte	0
 3815 0039 03       		.uleb128 0x3
 3816 003a 0E       		.uleb128 0xe
 3817 003b 3A       		.uleb128 0x3a
 3818 003c 0B       		.uleb128 0xb
 3819 003d 3B       		.uleb128 0x3b
 3820 003e 05       		.uleb128 0x5
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 128


 3821 003f 49       		.uleb128 0x49
 3822 0040 13       		.uleb128 0x13
 3823 0041 00       		.byte	0
 3824 0042 00       		.byte	0
 3825 0043 06       		.uleb128 0x6
 3826 0044 35       		.uleb128 0x35
 3827 0045 00       		.byte	0
 3828 0046 49       		.uleb128 0x49
 3829 0047 13       		.uleb128 0x13
 3830 0048 00       		.byte	0
 3831 0049 00       		.byte	0
 3832 004a 07       		.uleb128 0x7
 3833 004b 0F       		.uleb128 0xf
 3834 004c 00       		.byte	0
 3835 004d 0B       		.uleb128 0xb
 3836 004e 0B       		.uleb128 0xb
 3837 004f 49       		.uleb128 0x49
 3838 0050 13       		.uleb128 0x13
 3839 0051 00       		.byte	0
 3840 0052 00       		.byte	0
 3841 0053 08       		.uleb128 0x8
 3842 0054 15       		.uleb128 0x15
 3843 0055 00       		.byte	0
 3844 0056 27       		.uleb128 0x27
 3845 0057 19       		.uleb128 0x19
 3846 0058 00       		.byte	0
 3847 0059 00       		.byte	0
 3848 005a 09       		.uleb128 0x9
 3849 005b 04       		.uleb128 0x4
 3850 005c 01       		.byte	0x1
 3851 005d 0B       		.uleb128 0xb
 3852 005e 0B       		.uleb128 0xb
 3853 005f 49       		.uleb128 0x49
 3854 0060 13       		.uleb128 0x13
 3855 0061 3A       		.uleb128 0x3a
 3856 0062 0B       		.uleb128 0xb
 3857 0063 3B       		.uleb128 0x3b
 3858 0064 0B       		.uleb128 0xb
 3859 0065 01       		.uleb128 0x1
 3860 0066 13       		.uleb128 0x13
 3861 0067 00       		.byte	0
 3862 0068 00       		.byte	0
 3863 0069 0A       		.uleb128 0xa
 3864 006a 28       		.uleb128 0x28
 3865 006b 00       		.byte	0
 3866 006c 03       		.uleb128 0x3
 3867 006d 0E       		.uleb128 0xe
 3868 006e 1C       		.uleb128 0x1c
 3869 006f 0B       		.uleb128 0xb
 3870 0070 00       		.byte	0
 3871 0071 00       		.byte	0
 3872 0072 0B       		.uleb128 0xb
 3873 0073 13       		.uleb128 0x13
 3874 0074 01       		.byte	0x1
 3875 0075 0B       		.uleb128 0xb
 3876 0076 0B       		.uleb128 0xb
 3877 0077 3A       		.uleb128 0x3a
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 129


 3878 0078 0B       		.uleb128 0xb
 3879 0079 3B       		.uleb128 0x3b
 3880 007a 0B       		.uleb128 0xb
 3881 007b 01       		.uleb128 0x1
 3882 007c 13       		.uleb128 0x13
 3883 007d 00       		.byte	0
 3884 007e 00       		.byte	0
 3885 007f 0C       		.uleb128 0xc
 3886 0080 0D       		.uleb128 0xd
 3887 0081 00       		.byte	0
 3888 0082 03       		.uleb128 0x3
 3889 0083 0E       		.uleb128 0xe
 3890 0084 3A       		.uleb128 0x3a
 3891 0085 0B       		.uleb128 0xb
 3892 0086 3B       		.uleb128 0x3b
 3893 0087 0B       		.uleb128 0xb
 3894 0088 49       		.uleb128 0x49
 3895 0089 13       		.uleb128 0x13
 3896 008a 38       		.uleb128 0x38
 3897 008b 0B       		.uleb128 0xb
 3898 008c 00       		.byte	0
 3899 008d 00       		.byte	0
 3900 008e 0D       		.uleb128 0xd
 3901 008f 01       		.uleb128 0x1
 3902 0090 01       		.byte	0x1
 3903 0091 49       		.uleb128 0x49
 3904 0092 13       		.uleb128 0x13
 3905 0093 01       		.uleb128 0x1
 3906 0094 13       		.uleb128 0x13
 3907 0095 00       		.byte	0
 3908 0096 00       		.byte	0
 3909 0097 0E       		.uleb128 0xe
 3910 0098 21       		.uleb128 0x21
 3911 0099 00       		.byte	0
 3912 009a 49       		.uleb128 0x49
 3913 009b 13       		.uleb128 0x13
 3914 009c 2F       		.uleb128 0x2f
 3915 009d 0B       		.uleb128 0xb
 3916 009e 00       		.byte	0
 3917 009f 00       		.byte	0
 3918 00a0 0F       		.uleb128 0xf
 3919 00a1 0D       		.uleb128 0xd
 3920 00a2 00       		.byte	0
 3921 00a3 03       		.uleb128 0x3
 3922 00a4 0E       		.uleb128 0xe
 3923 00a5 3A       		.uleb128 0x3a
 3924 00a6 0B       		.uleb128 0xb
 3925 00a7 3B       		.uleb128 0x3b
 3926 00a8 05       		.uleb128 0x5
 3927 00a9 49       		.uleb128 0x49
 3928 00aa 13       		.uleb128 0x13
 3929 00ab 38       		.uleb128 0x38
 3930 00ac 0B       		.uleb128 0xb
 3931 00ad 00       		.byte	0
 3932 00ae 00       		.byte	0
 3933 00af 10       		.uleb128 0x10
 3934 00b0 13       		.uleb128 0x13
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 130


 3935 00b1 01       		.byte	0x1
 3936 00b2 0B       		.uleb128 0xb
 3937 00b3 0B       		.uleb128 0xb
 3938 00b4 3A       		.uleb128 0x3a
 3939 00b5 0B       		.uleb128 0xb
 3940 00b6 3B       		.uleb128 0x3b
 3941 00b7 05       		.uleb128 0x5
 3942 00b8 01       		.uleb128 0x1
 3943 00b9 13       		.uleb128 0x13
 3944 00ba 00       		.byte	0
 3945 00bb 00       		.byte	0
 3946 00bc 11       		.uleb128 0x11
 3947 00bd 0D       		.uleb128 0xd
 3948 00be 00       		.byte	0
 3949 00bf 03       		.uleb128 0x3
 3950 00c0 08       		.uleb128 0x8
 3951 00c1 3A       		.uleb128 0x3a
 3952 00c2 0B       		.uleb128 0xb
 3953 00c3 3B       		.uleb128 0x3b
 3954 00c4 05       		.uleb128 0x5
 3955 00c5 49       		.uleb128 0x49
 3956 00c6 13       		.uleb128 0x13
 3957 00c7 38       		.uleb128 0x38
 3958 00c8 0B       		.uleb128 0xb
 3959 00c9 00       		.byte	0
 3960 00ca 00       		.byte	0
 3961 00cb 12       		.uleb128 0x12
 3962 00cc 26       		.uleb128 0x26
 3963 00cd 00       		.byte	0
 3964 00ce 00       		.byte	0
 3965 00cf 00       		.byte	0
 3966 00d0 13       		.uleb128 0x13
 3967 00d1 0F       		.uleb128 0xf
 3968 00d2 00       		.byte	0
 3969 00d3 0B       		.uleb128 0xb
 3970 00d4 0B       		.uleb128 0xb
 3971 00d5 00       		.byte	0
 3972 00d6 00       		.byte	0
 3973 00d7 14       		.uleb128 0x14
 3974 00d8 2E       		.uleb128 0x2e
 3975 00d9 01       		.byte	0x1
 3976 00da 3F       		.uleb128 0x3f
 3977 00db 19       		.uleb128 0x19
 3978 00dc 03       		.uleb128 0x3
 3979 00dd 0E       		.uleb128 0xe
 3980 00de 3A       		.uleb128 0x3a
 3981 00df 0B       		.uleb128 0xb
 3982 00e0 3B       		.uleb128 0x3b
 3983 00e1 05       		.uleb128 0x5
 3984 00e2 27       		.uleb128 0x27
 3985 00e3 19       		.uleb128 0x19
 3986 00e4 49       		.uleb128 0x49
 3987 00e5 13       		.uleb128 0x13
 3988 00e6 20       		.uleb128 0x20
 3989 00e7 0B       		.uleb128 0xb
 3990 00e8 01       		.uleb128 0x1
 3991 00e9 13       		.uleb128 0x13
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 131


 3992 00ea 00       		.byte	0
 3993 00eb 00       		.byte	0
 3994 00ec 15       		.uleb128 0x15
 3995 00ed 34       		.uleb128 0x34
 3996 00ee 00       		.byte	0
 3997 00ef 03       		.uleb128 0x3
 3998 00f0 0E       		.uleb128 0xe
 3999 00f1 3A       		.uleb128 0x3a
 4000 00f2 0B       		.uleb128 0xb
 4001 00f3 3B       		.uleb128 0x3b
 4002 00f4 05       		.uleb128 0x5
 4003 00f5 49       		.uleb128 0x49
 4004 00f6 13       		.uleb128 0x13
 4005 00f7 00       		.byte	0
 4006 00f8 00       		.byte	0
 4007 00f9 16       		.uleb128 0x16
 4008 00fa 05       		.uleb128 0x5
 4009 00fb 00       		.byte	0
 4010 00fc 03       		.uleb128 0x3
 4011 00fd 0E       		.uleb128 0xe
 4012 00fe 3A       		.uleb128 0x3a
 4013 00ff 0B       		.uleb128 0xb
 4014 0100 3B       		.uleb128 0x3b
 4015 0101 05       		.uleb128 0x5
 4016 0102 49       		.uleb128 0x49
 4017 0103 13       		.uleb128 0x13
 4018 0104 00       		.byte	0
 4019 0105 00       		.byte	0
 4020 0106 17       		.uleb128 0x17
 4021 0107 2E       		.uleb128 0x2e
 4022 0108 01       		.byte	0x1
 4023 0109 3F       		.uleb128 0x3f
 4024 010a 19       		.uleb128 0x19
 4025 010b 03       		.uleb128 0x3
 4026 010c 0E       		.uleb128 0xe
 4027 010d 3A       		.uleb128 0x3a
 4028 010e 0B       		.uleb128 0xb
 4029 010f 3B       		.uleb128 0x3b
 4030 0110 05       		.uleb128 0x5
 4031 0111 27       		.uleb128 0x27
 4032 0112 19       		.uleb128 0x19
 4033 0113 20       		.uleb128 0x20
 4034 0114 0B       		.uleb128 0xb
 4035 0115 01       		.uleb128 0x1
 4036 0116 13       		.uleb128 0x13
 4037 0117 00       		.byte	0
 4038 0118 00       		.byte	0
 4039 0119 18       		.uleb128 0x18
 4040 011a 2E       		.uleb128 0x2e
 4041 011b 00       		.byte	0
 4042 011c 03       		.uleb128 0x3
 4043 011d 0E       		.uleb128 0xe
 4044 011e 3A       		.uleb128 0x3a
 4045 011f 0B       		.uleb128 0xb
 4046 0120 3B       		.uleb128 0x3b
 4047 0121 05       		.uleb128 0x5
 4048 0122 27       		.uleb128 0x27
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 132


 4049 0123 19       		.uleb128 0x19
 4050 0124 20       		.uleb128 0x20
 4051 0125 0B       		.uleb128 0xb
 4052 0126 00       		.byte	0
 4053 0127 00       		.byte	0
 4054 0128 19       		.uleb128 0x19
 4055 0129 2E       		.uleb128 0x2e
 4056 012a 00       		.byte	0
 4057 012b 3F       		.uleb128 0x3f
 4058 012c 19       		.uleb128 0x19
 4059 012d 03       		.uleb128 0x3
 4060 012e 0E       		.uleb128 0xe
 4061 012f 3A       		.uleb128 0x3a
 4062 0130 0B       		.uleb128 0xb
 4063 0131 3B       		.uleb128 0x3b
 4064 0132 0B       		.uleb128 0xb
 4065 0133 27       		.uleb128 0x27
 4066 0134 19       		.uleb128 0x19
 4067 0135 49       		.uleb128 0x49
 4068 0136 13       		.uleb128 0x13
 4069 0137 11       		.uleb128 0x11
 4070 0138 01       		.uleb128 0x1
 4071 0139 12       		.uleb128 0x12
 4072 013a 06       		.uleb128 0x6
 4073 013b 40       		.uleb128 0x40
 4074 013c 18       		.uleb128 0x18
 4075 013d 9742     		.uleb128 0x2117
 4076 013f 19       		.uleb128 0x19
 4077 0140 00       		.byte	0
 4078 0141 00       		.byte	0
 4079 0142 1A       		.uleb128 0x1a
 4080 0143 2E       		.uleb128 0x2e
 4081 0144 01       		.byte	0x1
 4082 0145 3F       		.uleb128 0x3f
 4083 0146 19       		.uleb128 0x19
 4084 0147 03       		.uleb128 0x3
 4085 0148 0E       		.uleb128 0xe
 4086 0149 3A       		.uleb128 0x3a
 4087 014a 0B       		.uleb128 0xb
 4088 014b 3B       		.uleb128 0x3b
 4089 014c 05       		.uleb128 0x5
 4090 014d 27       		.uleb128 0x27
 4091 014e 19       		.uleb128 0x19
 4092 014f 49       		.uleb128 0x49
 4093 0150 13       		.uleb128 0x13
 4094 0151 11       		.uleb128 0x11
 4095 0152 01       		.uleb128 0x1
 4096 0153 12       		.uleb128 0x12
 4097 0154 06       		.uleb128 0x6
 4098 0155 40       		.uleb128 0x40
 4099 0156 18       		.uleb128 0x18
 4100 0157 9742     		.uleb128 0x2117
 4101 0159 19       		.uleb128 0x19
 4102 015a 01       		.uleb128 0x1
 4103 015b 13       		.uleb128 0x13
 4104 015c 00       		.byte	0
 4105 015d 00       		.byte	0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 133


 4106 015e 1B       		.uleb128 0x1b
 4107 015f 05       		.uleb128 0x5
 4108 0160 00       		.byte	0
 4109 0161 03       		.uleb128 0x3
 4110 0162 0E       		.uleb128 0xe
 4111 0163 3A       		.uleb128 0x3a
 4112 0164 0B       		.uleb128 0xb
 4113 0165 3B       		.uleb128 0x3b
 4114 0166 05       		.uleb128 0x5
 4115 0167 49       		.uleb128 0x49
 4116 0168 13       		.uleb128 0x13
 4117 0169 02       		.uleb128 0x2
 4118 016a 17       		.uleb128 0x17
 4119 016b 00       		.byte	0
 4120 016c 00       		.byte	0
 4121 016d 1C       		.uleb128 0x1c
 4122 016e 34       		.uleb128 0x34
 4123 016f 00       		.byte	0
 4124 0170 03       		.uleb128 0x3
 4125 0171 0E       		.uleb128 0xe
 4126 0172 3A       		.uleb128 0x3a
 4127 0173 0B       		.uleb128 0xb
 4128 0174 3B       		.uleb128 0x3b
 4129 0175 05       		.uleb128 0x5
 4130 0176 49       		.uleb128 0x49
 4131 0177 13       		.uleb128 0x13
 4132 0178 02       		.uleb128 0x2
 4133 0179 17       		.uleb128 0x17
 4134 017a 00       		.byte	0
 4135 017b 00       		.byte	0
 4136 017c 1D       		.uleb128 0x1d
 4137 017d 898201   		.uleb128 0x4109
 4138 0180 01       		.byte	0x1
 4139 0181 11       		.uleb128 0x11
 4140 0182 01       		.uleb128 0x1
 4141 0183 31       		.uleb128 0x31
 4142 0184 13       		.uleb128 0x13
 4143 0185 00       		.byte	0
 4144 0186 00       		.byte	0
 4145 0187 1E       		.uleb128 0x1e
 4146 0188 8A8201   		.uleb128 0x410a
 4147 018b 00       		.byte	0
 4148 018c 02       		.uleb128 0x2
 4149 018d 18       		.uleb128 0x18
 4150 018e 9142     		.uleb128 0x2111
 4151 0190 18       		.uleb128 0x18
 4152 0191 00       		.byte	0
 4153 0192 00       		.byte	0
 4154 0193 1F       		.uleb128 0x1f
 4155 0194 2E       		.uleb128 0x2e
 4156 0195 01       		.byte	0x1
 4157 0196 31       		.uleb128 0x31
 4158 0197 13       		.uleb128 0x13
 4159 0198 11       		.uleb128 0x11
 4160 0199 01       		.uleb128 0x1
 4161 019a 12       		.uleb128 0x12
 4162 019b 06       		.uleb128 0x6
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 134


 4163 019c 40       		.uleb128 0x40
 4164 019d 18       		.uleb128 0x18
 4165 019e 9742     		.uleb128 0x2117
 4166 01a0 19       		.uleb128 0x19
 4167 01a1 01       		.uleb128 0x1
 4168 01a2 13       		.uleb128 0x13
 4169 01a3 00       		.byte	0
 4170 01a4 00       		.byte	0
 4171 01a5 20       		.uleb128 0x20
 4172 01a6 34       		.uleb128 0x34
 4173 01a7 00       		.byte	0
 4174 01a8 31       		.uleb128 0x31
 4175 01a9 13       		.uleb128 0x13
 4176 01aa 02       		.uleb128 0x2
 4177 01ab 17       		.uleb128 0x17
 4178 01ac 00       		.byte	0
 4179 01ad 00       		.byte	0
 4180 01ae 21       		.uleb128 0x21
 4181 01af 0B       		.uleb128 0xb
 4182 01b0 01       		.byte	0x1
 4183 01b1 11       		.uleb128 0x11
 4184 01b2 01       		.uleb128 0x1
 4185 01b3 12       		.uleb128 0x12
 4186 01b4 06       		.uleb128 0x6
 4187 01b5 00       		.byte	0
 4188 01b6 00       		.byte	0
 4189 01b7 22       		.uleb128 0x22
 4190 01b8 34       		.uleb128 0x34
 4191 01b9 00       		.byte	0
 4192 01ba 31       		.uleb128 0x31
 4193 01bb 13       		.uleb128 0x13
 4194 01bc 00       		.byte	0
 4195 01bd 00       		.byte	0
 4196 01be 23       		.uleb128 0x23
 4197 01bf 898201   		.uleb128 0x4109
 4198 01c2 00       		.byte	0
 4199 01c3 11       		.uleb128 0x11
 4200 01c4 01       		.uleb128 0x1
 4201 01c5 31       		.uleb128 0x31
 4202 01c6 13       		.uleb128 0x13
 4203 01c7 00       		.byte	0
 4204 01c8 00       		.byte	0
 4205 01c9 24       		.uleb128 0x24
 4206 01ca 898201   		.uleb128 0x4109
 4207 01cd 01       		.byte	0x1
 4208 01ce 11       		.uleb128 0x11
 4209 01cf 01       		.uleb128 0x1
 4210 01d0 31       		.uleb128 0x31
 4211 01d1 13       		.uleb128 0x13
 4212 01d2 01       		.uleb128 0x1
 4213 01d3 13       		.uleb128 0x13
 4214 01d4 00       		.byte	0
 4215 01d5 00       		.byte	0
 4216 01d6 25       		.uleb128 0x25
 4217 01d7 2E       		.uleb128 0x2e
 4218 01d8 01       		.byte	0x1
 4219 01d9 3F       		.uleb128 0x3f
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 135


 4220 01da 19       		.uleb128 0x19
 4221 01db 03       		.uleb128 0x3
 4222 01dc 0E       		.uleb128 0xe
 4223 01dd 3A       		.uleb128 0x3a
 4224 01de 0B       		.uleb128 0xb
 4225 01df 3B       		.uleb128 0x3b
 4226 01e0 05       		.uleb128 0x5
 4227 01e1 27       		.uleb128 0x27
 4228 01e2 19       		.uleb128 0x19
 4229 01e3 11       		.uleb128 0x11
 4230 01e4 01       		.uleb128 0x1
 4231 01e5 12       		.uleb128 0x12
 4232 01e6 06       		.uleb128 0x6
 4233 01e7 40       		.uleb128 0x40
 4234 01e8 18       		.uleb128 0x18
 4235 01e9 9742     		.uleb128 0x2117
 4236 01eb 19       		.uleb128 0x19
 4237 01ec 01       		.uleb128 0x1
 4238 01ed 13       		.uleb128 0x13
 4239 01ee 00       		.byte	0
 4240 01ef 00       		.byte	0
 4241 01f0 26       		.uleb128 0x26
 4242 01f1 34       		.uleb128 0x34
 4243 01f2 00       		.byte	0
 4244 01f3 03       		.uleb128 0x3
 4245 01f4 0E       		.uleb128 0xe
 4246 01f5 3A       		.uleb128 0x3a
 4247 01f6 0B       		.uleb128 0xb
 4248 01f7 3B       		.uleb128 0x3b
 4249 01f8 05       		.uleb128 0x5
 4250 01f9 49       		.uleb128 0x49
 4251 01fa 13       		.uleb128 0x13
 4252 01fb 1C       		.uleb128 0x1c
 4253 01fc 0B       		.uleb128 0xb
 4254 01fd 00       		.byte	0
 4255 01fe 00       		.byte	0
 4256 01ff 27       		.uleb128 0x27
 4257 0200 26       		.uleb128 0x26
 4258 0201 00       		.byte	0
 4259 0202 49       		.uleb128 0x49
 4260 0203 13       		.uleb128 0x13
 4261 0204 00       		.byte	0
 4262 0205 00       		.byte	0
 4263 0206 28       		.uleb128 0x28
 4264 0207 34       		.uleb128 0x34
 4265 0208 00       		.byte	0
 4266 0209 03       		.uleb128 0x3
 4267 020a 0E       		.uleb128 0xe
 4268 020b 3A       		.uleb128 0x3a
 4269 020c 0B       		.uleb128 0xb
 4270 020d 3B       		.uleb128 0x3b
 4271 020e 05       		.uleb128 0x5
 4272 020f 49       		.uleb128 0x49
 4273 0210 13       		.uleb128 0x13
 4274 0211 02       		.uleb128 0x2
 4275 0212 18       		.uleb128 0x18
 4276 0213 00       		.byte	0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 136


 4277 0214 00       		.byte	0
 4278 0215 29       		.uleb128 0x29
 4279 0216 05       		.uleb128 0x5
 4280 0217 00       		.byte	0
 4281 0218 31       		.uleb128 0x31
 4282 0219 13       		.uleb128 0x13
 4283 021a 02       		.uleb128 0x2
 4284 021b 17       		.uleb128 0x17
 4285 021c 00       		.byte	0
 4286 021d 00       		.byte	0
 4287 021e 2A       		.uleb128 0x2a
 4288 021f 05       		.uleb128 0x5
 4289 0220 00       		.byte	0
 4290 0221 03       		.uleb128 0x3
 4291 0222 0E       		.uleb128 0xe
 4292 0223 3A       		.uleb128 0x3a
 4293 0224 0B       		.uleb128 0xb
 4294 0225 3B       		.uleb128 0x3b
 4295 0226 05       		.uleb128 0x5
 4296 0227 49       		.uleb128 0x49
 4297 0228 13       		.uleb128 0x13
 4298 0229 02       		.uleb128 0x2
 4299 022a 18       		.uleb128 0x18
 4300 022b 00       		.byte	0
 4301 022c 00       		.byte	0
 4302 022d 2B       		.uleb128 0x2b
 4303 022e 2E       		.uleb128 0x2e
 4304 022f 01       		.byte	0x1
 4305 0230 03       		.uleb128 0x3
 4306 0231 0E       		.uleb128 0xe
 4307 0232 3A       		.uleb128 0x3a
 4308 0233 0B       		.uleb128 0xb
 4309 0234 3B       		.uleb128 0x3b
 4310 0235 05       		.uleb128 0x5
 4311 0236 27       		.uleb128 0x27
 4312 0237 19       		.uleb128 0x19
 4313 0238 20       		.uleb128 0x20
 4314 0239 0B       		.uleb128 0xb
 4315 023a 01       		.uleb128 0x1
 4316 023b 13       		.uleb128 0x13
 4317 023c 00       		.byte	0
 4318 023d 00       		.byte	0
 4319 023e 2C       		.uleb128 0x2c
 4320 023f 1D       		.uleb128 0x1d
 4321 0240 01       		.byte	0x1
 4322 0241 31       		.uleb128 0x31
 4323 0242 13       		.uleb128 0x13
 4324 0243 11       		.uleb128 0x11
 4325 0244 01       		.uleb128 0x1
 4326 0245 12       		.uleb128 0x12
 4327 0246 06       		.uleb128 0x6
 4328 0247 58       		.uleb128 0x58
 4329 0248 0B       		.uleb128 0xb
 4330 0249 59       		.uleb128 0x59
 4331 024a 05       		.uleb128 0x5
 4332 024b 00       		.byte	0
 4333 024c 00       		.byte	0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 137


 4334 024d 2D       		.uleb128 0x2d
 4335 024e 05       		.uleb128 0x5
 4336 024f 00       		.byte	0
 4337 0250 31       		.uleb128 0x31
 4338 0251 13       		.uleb128 0x13
 4339 0252 00       		.byte	0
 4340 0253 00       		.byte	0
 4341 0254 2E       		.uleb128 0x2e
 4342 0255 34       		.uleb128 0x34
 4343 0256 00       		.byte	0
 4344 0257 31       		.uleb128 0x31
 4345 0258 13       		.uleb128 0x13
 4346 0259 1C       		.uleb128 0x1c
 4347 025a 0B       		.uleb128 0xb
 4348 025b 00       		.byte	0
 4349 025c 00       		.byte	0
 4350 025d 2F       		.uleb128 0x2f
 4351 025e 1D       		.uleb128 0x1d
 4352 025f 01       		.byte	0x1
 4353 0260 31       		.uleb128 0x31
 4354 0261 13       		.uleb128 0x13
 4355 0262 11       		.uleb128 0x11
 4356 0263 01       		.uleb128 0x1
 4357 0264 12       		.uleb128 0x12
 4358 0265 06       		.uleb128 0x6
 4359 0266 58       		.uleb128 0x58
 4360 0267 0B       		.uleb128 0xb
 4361 0268 59       		.uleb128 0x59
 4362 0269 05       		.uleb128 0x5
 4363 026a 01       		.uleb128 0x1
 4364 026b 13       		.uleb128 0x13
 4365 026c 00       		.byte	0
 4366 026d 00       		.byte	0
 4367 026e 30       		.uleb128 0x30
 4368 026f 0B       		.uleb128 0xb
 4369 0270 01       		.byte	0x1
 4370 0271 11       		.uleb128 0x11
 4371 0272 01       		.uleb128 0x1
 4372 0273 12       		.uleb128 0x12
 4373 0274 06       		.uleb128 0x6
 4374 0275 01       		.uleb128 0x1
 4375 0276 13       		.uleb128 0x13
 4376 0277 00       		.byte	0
 4377 0278 00       		.byte	0
 4378 0279 31       		.uleb128 0x31
 4379 027a 1D       		.uleb128 0x1d
 4380 027b 01       		.byte	0x1
 4381 027c 31       		.uleb128 0x31
 4382 027d 13       		.uleb128 0x13
 4383 027e 52       		.uleb128 0x52
 4384 027f 01       		.uleb128 0x1
 4385 0280 55       		.uleb128 0x55
 4386 0281 17       		.uleb128 0x17
 4387 0282 58       		.uleb128 0x58
 4388 0283 0B       		.uleb128 0xb
 4389 0284 59       		.uleb128 0x59
 4390 0285 05       		.uleb128 0x5
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 138


 4391 0286 01       		.uleb128 0x1
 4392 0287 13       		.uleb128 0x13
 4393 0288 00       		.byte	0
 4394 0289 00       		.byte	0
 4395 028a 32       		.uleb128 0x32
 4396 028b 1D       		.uleb128 0x1d
 4397 028c 01       		.byte	0x1
 4398 028d 31       		.uleb128 0x31
 4399 028e 13       		.uleb128 0x13
 4400 028f 52       		.uleb128 0x52
 4401 0290 01       		.uleb128 0x1
 4402 0291 55       		.uleb128 0x55
 4403 0292 17       		.uleb128 0x17
 4404 0293 58       		.uleb128 0x58
 4405 0294 0B       		.uleb128 0xb
 4406 0295 59       		.uleb128 0x59
 4407 0296 05       		.uleb128 0x5
 4408 0297 00       		.byte	0
 4409 0298 00       		.byte	0
 4410 0299 33       		.uleb128 0x33
 4411 029a 0B       		.uleb128 0xb
 4412 029b 01       		.byte	0x1
 4413 029c 55       		.uleb128 0x55
 4414 029d 17       		.uleb128 0x17
 4415 029e 00       		.byte	0
 4416 029f 00       		.byte	0
 4417 02a0 34       		.uleb128 0x34
 4418 02a1 34       		.uleb128 0x34
 4419 02a2 00       		.byte	0
 4420 02a3 03       		.uleb128 0x3
 4421 02a4 0E       		.uleb128 0xe
 4422 02a5 3A       		.uleb128 0x3a
 4423 02a6 0B       		.uleb128 0xb
 4424 02a7 3B       		.uleb128 0x3b
 4425 02a8 05       		.uleb128 0x5
 4426 02a9 49       		.uleb128 0x49
 4427 02aa 13       		.uleb128 0x13
 4428 02ab 3F       		.uleb128 0x3f
 4429 02ac 19       		.uleb128 0x19
 4430 02ad 3C       		.uleb128 0x3c
 4431 02ae 19       		.uleb128 0x19
 4432 02af 00       		.byte	0
 4433 02b0 00       		.byte	0
 4434 02b1 35       		.uleb128 0x35
 4435 02b2 34       		.uleb128 0x34
 4436 02b3 00       		.byte	0
 4437 02b4 03       		.uleb128 0x3
 4438 02b5 0E       		.uleb128 0xe
 4439 02b6 3A       		.uleb128 0x3a
 4440 02b7 0B       		.uleb128 0xb
 4441 02b8 3B       		.uleb128 0x3b
 4442 02b9 0B       		.uleb128 0xb
 4443 02ba 49       		.uleb128 0x49
 4444 02bb 13       		.uleb128 0x13
 4445 02bc 3F       		.uleb128 0x3f
 4446 02bd 19       		.uleb128 0x19
 4447 02be 02       		.uleb128 0x2
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 139


 4448 02bf 18       		.uleb128 0x18
 4449 02c0 00       		.byte	0
 4450 02c1 00       		.byte	0
 4451 02c2 36       		.uleb128 0x36
 4452 02c3 2E       		.uleb128 0x2e
 4453 02c4 00       		.byte	0
 4454 02c5 3F       		.uleb128 0x3f
 4455 02c6 19       		.uleb128 0x19
 4456 02c7 3C       		.uleb128 0x3c
 4457 02c8 19       		.uleb128 0x19
 4458 02c9 6E       		.uleb128 0x6e
 4459 02ca 0E       		.uleb128 0xe
 4460 02cb 03       		.uleb128 0x3
 4461 02cc 0E       		.uleb128 0xe
 4462 02cd 3A       		.uleb128 0x3a
 4463 02ce 0B       		.uleb128 0xb
 4464 02cf 3B       		.uleb128 0x3b
 4465 02d0 05       		.uleb128 0x5
 4466 02d1 00       		.byte	0
 4467 02d2 00       		.byte	0
 4468 02d3 37       		.uleb128 0x37
 4469 02d4 2E       		.uleb128 0x2e
 4470 02d5 00       		.byte	0
 4471 02d6 3F       		.uleb128 0x3f
 4472 02d7 19       		.uleb128 0x19
 4473 02d8 3C       		.uleb128 0x3c
 4474 02d9 19       		.uleb128 0x19
 4475 02da 6E       		.uleb128 0x6e
 4476 02db 0E       		.uleb128 0xe
 4477 02dc 03       		.uleb128 0x3
 4478 02dd 0E       		.uleb128 0xe
 4479 02de 3A       		.uleb128 0x3a
 4480 02df 0B       		.uleb128 0xb
 4481 02e0 3B       		.uleb128 0x3b
 4482 02e1 0B       		.uleb128 0xb
 4483 02e2 00       		.byte	0
 4484 02e3 00       		.byte	0
 4485 02e4 00       		.byte	0
 4486              		.section	.debug_loc,"",%progbits
 4487              	.Ldebug_loc0:
 4488              	.LLST0:
 4489 0000 00000000 		.4byte	.LVL0
 4490 0004 23000000 		.4byte	.LVL2-1
 4491 0008 0100     		.2byte	0x1
 4492 000a 50       		.byte	0x50
 4493 000b 23000000 		.4byte	.LVL2-1
 4494 000f 30000000 		.4byte	.LFE2
 4495 0013 0400     		.2byte	0x4
 4496 0015 F3       		.byte	0xf3
 4497 0016 01       		.uleb128 0x1
 4498 0017 50       		.byte	0x50
 4499 0018 9F       		.byte	0x9f
 4500 0019 00000000 		.4byte	0
 4501 001d 00000000 		.4byte	0
 4502              	.LLST1:
 4503 0021 20000000 		.4byte	.LVL1
 4504 0025 26000000 		.4byte	.LVL3
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 140


 4505 0029 0200     		.2byte	0x2
 4506 002b 30       		.byte	0x30
 4507 002c 9F       		.byte	0x9f
 4508 002d 00000000 		.4byte	0
 4509 0031 00000000 		.4byte	0
 4510              	.LLST2:
 4511 0035 00000000 		.4byte	.LVL4
 4512 0039 26000000 		.4byte	.LVL6
 4513 003d 0200     		.2byte	0x2
 4514 003f 30       		.byte	0x30
 4515 0040 9F       		.byte	0x9f
 4516 0041 26000000 		.4byte	.LVL6
 4517 0045 30000000 		.4byte	.LFE3
 4518 0049 0100     		.2byte	0x1
 4519 004b 50       		.byte	0x50
 4520 004c 00000000 		.4byte	0
 4521 0050 00000000 		.4byte	0
 4522              	.LLST3:
 4523 0054 00000000 		.4byte	.LVL7
 4524 0058 14000000 		.4byte	.LVL9
 4525 005c 0300     		.2byte	0x3
 4526 005e 09       		.byte	0x9
 4527 005f FF       		.byte	0xff
 4528 0060 9F       		.byte	0x9f
 4529 0061 14000000 		.4byte	.LVL9
 4530 0065 29000000 		.4byte	.LVL10-1
 4531 0069 0100     		.2byte	0x1
 4532 006b 50       		.byte	0x50
 4533 006c 2A000000 		.4byte	.LVL10
 4534 0070 3C000000 		.4byte	.LFE4
 4535 0074 0100     		.2byte	0x1
 4536 0076 50       		.byte	0x50
 4537 0077 00000000 		.4byte	0
 4538 007b 00000000 		.4byte	0
 4539              	.LLST4:
 4540 007f 0E000000 		.4byte	.LVL8
 4541 0083 32000000 		.4byte	.LVL12
 4542 0087 0100     		.2byte	0x1
 4543 0089 54       		.byte	0x54
 4544 008a 00000000 		.4byte	0
 4545 008e 00000000 		.4byte	0
 4546              	.LLST5:
 4547 0092 00000000 		.4byte	.LVL13
 4548 0096 31000000 		.4byte	.LVL15-1
 4549 009a 0100     		.2byte	0x1
 4550 009c 50       		.byte	0x50
 4551 009d 31000000 		.4byte	.LVL15-1
 4552 00a1 40000000 		.4byte	.LFE5
 4553 00a5 0400     		.2byte	0x4
 4554 00a7 F3       		.byte	0xf3
 4555 00a8 01       		.uleb128 0x1
 4556 00a9 50       		.byte	0x50
 4557 00aa 9F       		.byte	0x9f
 4558 00ab 00000000 		.4byte	0
 4559 00af 00000000 		.4byte	0
 4560              	.LLST6:
 4561 00b3 00000000 		.4byte	.LVL13
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 141


 4562 00b7 31000000 		.4byte	.LVL15-1
 4563 00bb 0100     		.2byte	0x1
 4564 00bd 51       		.byte	0x51
 4565 00be 31000000 		.4byte	.LVL15-1
 4566 00c2 40000000 		.4byte	.LFE5
 4567 00c6 0400     		.2byte	0x4
 4568 00c8 F3       		.byte	0xf3
 4569 00c9 01       		.uleb128 0x1
 4570 00ca 51       		.byte	0x51
 4571 00cb 9F       		.byte	0x9f
 4572 00cc 00000000 		.4byte	0
 4573 00d0 00000000 		.4byte	0
 4574              	.LLST7:
 4575 00d4 2E000000 		.4byte	.LVL14
 4576 00d8 34000000 		.4byte	.LVL16
 4577 00dc 0200     		.2byte	0x2
 4578 00de 30       		.byte	0x30
 4579 00df 9F       		.byte	0x9f
 4580 00e0 00000000 		.4byte	0
 4581 00e4 00000000 		.4byte	0
 4582              	.LLST8:
 4583 00e8 00000000 		.4byte	.LVL17
 4584 00ec 26000000 		.4byte	.LVL19
 4585 00f0 0200     		.2byte	0x2
 4586 00f2 30       		.byte	0x30
 4587 00f3 9F       		.byte	0x9f
 4588 00f4 26000000 		.4byte	.LVL19
 4589 00f8 30000000 		.4byte	.LFE6
 4590 00fc 0100     		.2byte	0x1
 4591 00fe 50       		.byte	0x50
 4592 00ff 00000000 		.4byte	0
 4593 0103 00000000 		.4byte	0
 4594              	.LLST9:
 4595 0107 00000000 		.4byte	.LVL20
 4596 010b 06000000 		.4byte	.LVL21
 4597 010f 0100     		.2byte	0x1
 4598 0111 50       		.byte	0x50
 4599 0112 06000000 		.4byte	.LVL21
 4600 0116 8C000000 		.4byte	.LFE8
 4601 011a 0400     		.2byte	0x4
 4602 011c F3       		.byte	0xf3
 4603 011d 01       		.uleb128 0x1
 4604 011e 50       		.byte	0x50
 4605 011f 9F       		.byte	0x9f
 4606 0120 00000000 		.4byte	0
 4607 0124 00000000 		.4byte	0
 4608              	.LLST10:
 4609 0128 00000000 		.4byte	.LVL20
 4610 012c 0C000000 		.4byte	.LVL22
 4611 0130 0100     		.2byte	0x1
 4612 0132 51       		.byte	0x51
 4613 0133 0C000000 		.4byte	.LVL22
 4614 0137 8C000000 		.4byte	.LFE8
 4615 013b 0400     		.2byte	0x4
 4616 013d F3       		.byte	0xf3
 4617 013e 01       		.uleb128 0x1
 4618 013f 51       		.byte	0x51
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 142


 4619 0140 9F       		.byte	0x9f
 4620 0141 00000000 		.4byte	0
 4621 0145 00000000 		.4byte	0
 4622              	.LLST11:
 4623 0149 00000000 		.4byte	.LVL20
 4624 014d 13000000 		.4byte	.LVL24-1
 4625 0151 0100     		.2byte	0x1
 4626 0153 52       		.byte	0x52
 4627 0154 13000000 		.4byte	.LVL24-1
 4628 0158 4A000000 		.4byte	.LVL27
 4629 015c 0100     		.2byte	0x1
 4630 015e 55       		.byte	0x55
 4631 015f 4A000000 		.4byte	.LVL27
 4632 0163 56000000 		.4byte	.LVL28
 4633 0167 0400     		.2byte	0x4
 4634 0169 F3       		.byte	0xf3
 4635 016a 01       		.uleb128 0x1
 4636 016b 52       		.byte	0x52
 4637 016c 9F       		.byte	0x9f
 4638 016d 56000000 		.4byte	.LVL28
 4639 0171 59000000 		.4byte	.LVL29-1
 4640 0175 0100     		.2byte	0x1
 4641 0177 50       		.byte	0x50
 4642 0178 59000000 		.4byte	.LVL29-1
 4643 017c 5A000000 		.4byte	.LVL29
 4644 0180 0100     		.2byte	0x1
 4645 0182 55       		.byte	0x55
 4646 0183 5A000000 		.4byte	.LVL29
 4647 0187 68000000 		.4byte	.LVL31
 4648 018b 0400     		.2byte	0x4
 4649 018d F3       		.byte	0xf3
 4650 018e 01       		.uleb128 0x1
 4651 018f 52       		.byte	0x52
 4652 0190 9F       		.byte	0x9f
 4653 0191 68000000 		.4byte	.LVL31
 4654 0195 6A000000 		.4byte	.LVL32
 4655 0199 0100     		.2byte	0x1
 4656 019b 50       		.byte	0x50
 4657 019c 6A000000 		.4byte	.LVL32
 4658 01a0 70000000 		.4byte	.LVL34
 4659 01a4 0100     		.2byte	0x1
 4660 01a6 55       		.byte	0x55
 4661 01a7 70000000 		.4byte	.LVL34
 4662 01ab 73000000 		.4byte	.LVL35-1
 4663 01af 0100     		.2byte	0x1
 4664 01b1 50       		.byte	0x50
 4665 01b2 73000000 		.4byte	.LVL35-1
 4666 01b6 80000000 		.4byte	.LVL37
 4667 01ba 0100     		.2byte	0x1
 4668 01bc 55       		.byte	0x55
 4669 01bd 80000000 		.4byte	.LVL37
 4670 01c1 8C000000 		.4byte	.LFE8
 4671 01c5 0400     		.2byte	0x4
 4672 01c7 F3       		.byte	0xf3
 4673 01c8 01       		.uleb128 0x1
 4674 01c9 52       		.byte	0x52
 4675 01ca 9F       		.byte	0x9f
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 143


 4676 01cb 00000000 		.4byte	0
 4677 01cf 00000000 		.4byte	0
 4678              	.LLST12:
 4679 01d3 10000000 		.4byte	.LVL23
 4680 01d7 86000000 		.4byte	.LVL38
 4681 01db 0200     		.2byte	0x2
 4682 01dd 30       		.byte	0x30
 4683 01de 9F       		.byte	0x9f
 4684 01df 00000000 		.4byte	0
 4685 01e3 00000000 		.4byte	0
 4686              	.LLST13:
 4687 01e7 14000000 		.4byte	.LVL24
 4688 01eb 33000000 		.4byte	.LVL25-1
 4689 01ef 0100     		.2byte	0x1
 4690 01f1 50       		.byte	0x50
 4691 01f2 46000000 		.4byte	.LVL26
 4692 01f6 56000000 		.4byte	.LVL28
 4693 01fa 0100     		.2byte	0x1
 4694 01fc 50       		.byte	0x50
 4695 01fd 5A000000 		.4byte	.LVL29
 4696 0201 68000000 		.4byte	.LVL31
 4697 0205 0100     		.2byte	0x1
 4698 0207 50       		.byte	0x50
 4699 0208 74000000 		.4byte	.LVL35
 4700 020c 85000000 		.4byte	.LVL38-1
 4701 0210 0100     		.2byte	0x1
 4702 0212 50       		.byte	0x50
 4703 0213 00000000 		.4byte	0
 4704 0217 00000000 		.4byte	0
 4705              	.LLST14:
 4706 021b 10000000 		.4byte	.LVL23
 4707 021f 60000000 		.4byte	.LVL30
 4708 0223 0100     		.2byte	0x1
 4709 0225 54       		.byte	0x54
 4710 0226 68000000 		.4byte	.LVL31
 4711 022a 7A000000 		.4byte	.LVL36
 4712 022e 0100     		.2byte	0x1
 4713 0230 54       		.byte	0x54
 4714 0231 00000000 		.4byte	0
 4715 0235 00000000 		.4byte	0
 4716              	.LLST15:
 4717 0239 00000000 		.4byte	.LVL39
 4718 023d 1E000000 		.4byte	.LVL43
 4719 0241 0100     		.2byte	0x1
 4720 0243 50       		.byte	0x50
 4721 0244 1E000000 		.4byte	.LVL43
 4722 0248 74000000 		.4byte	.LVL64
 4723 024c 0100     		.2byte	0x1
 4724 024e 56       		.byte	0x56
 4725 024f 74000000 		.4byte	.LVL64
 4726 0253 80000000 		.4byte	.LFE11
 4727 0257 0400     		.2byte	0x4
 4728 0259 F3       		.byte	0xf3
 4729 025a 01       		.uleb128 0x1
 4730 025b 50       		.byte	0x50
 4731 025c 9F       		.byte	0x9f
 4732 025d 00000000 		.4byte	0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 144


 4733 0261 00000000 		.4byte	0
 4734              	.LLST16:
 4735 0265 1C000000 		.4byte	.LVL42
 4736 0269 1E000000 		.4byte	.LVL43
 4737 026d 0200     		.2byte	0x2
 4738 026f 30       		.byte	0x30
 4739 0270 9F       		.byte	0x9f
 4740 0271 00000000 		.4byte	0
 4741 0275 00000000 		.4byte	0
 4742              	.LLST17:
 4743 0279 12000000 		.4byte	.LVL40
 4744 027d 18000000 		.4byte	.LVL41
 4745 0281 0200     		.2byte	0x2
 4746 0283 30       		.byte	0x30
 4747 0284 9F       		.byte	0x9f
 4748 0285 1C000000 		.4byte	.LVL42
 4749 0289 74000000 		.4byte	.LVL65
 4750 028d 0100     		.2byte	0x1
 4751 028f 57       		.byte	0x57
 4752 0290 00000000 		.4byte	0
 4753 0294 00000000 		.4byte	0
 4754              	.LLST18:
 4755 0298 12000000 		.4byte	.LVL40
 4756 029c 18000000 		.4byte	.LVL41
 4757 02a0 0200     		.2byte	0x2
 4758 02a2 35       		.byte	0x35
 4759 02a3 9F       		.byte	0x9f
 4760 02a4 1C000000 		.4byte	.LVL42
 4761 02a8 74000000 		.4byte	.LVL63
 4762 02ac 0100     		.2byte	0x1
 4763 02ae 55       		.byte	0x55
 4764 02af 00000000 		.4byte	0
 4765 02b3 00000000 		.4byte	0
 4766              	.LLST19:
 4767 02b7 3C000000 		.4byte	.LVL51
 4768 02bb 4C000000 		.4byte	.LVL54
 4769 02bf 0100     		.2byte	0x1
 4770 02c1 53       		.byte	0x53
 4771 02c2 4C000000 		.4byte	.LVL54
 4772 02c6 58000000 		.4byte	.LVL56
 4773 02ca 0300     		.2byte	0x3
 4774 02cc 74       		.byte	0x74
 4775 02cd 00       		.sleb128 0
 4776 02ce 06       		.byte	0x6
 4777 02cf 5E000000 		.4byte	.LVL57
 4778 02d3 67000000 		.4byte	.LVL61-1
 4779 02d7 0100     		.2byte	0x1
 4780 02d9 53       		.byte	0x53
 4781 02da 00000000 		.4byte	0
 4782 02de 00000000 		.4byte	0
 4783              	.LLST20:
 4784 02e2 2E000000 		.4byte	.LVL47
 4785 02e6 30000000 		.4byte	.LVL48
 4786 02ea 0100     		.2byte	0x1
 4787 02ec 53       		.byte	0x53
 4788 02ed 36000000 		.4byte	.LVL49
 4789 02f1 3A000000 		.4byte	.LVL50
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 145


 4790 02f5 0100     		.2byte	0x1
 4791 02f7 53       		.byte	0x53
 4792 02f8 3A000000 		.4byte	.LVL50
 4793 02fc 56000000 		.4byte	.LVL55
 4794 0300 0100     		.2byte	0x1
 4795 0302 5C       		.byte	0x5c
 4796 0303 56000000 		.4byte	.LVL55
 4797 0307 5E000000 		.4byte	.LVL57
 4798 030b 0100     		.2byte	0x1
 4799 030d 53       		.byte	0x53
 4800 030e 5E000000 		.4byte	.LVL57
 4801 0312 60000000 		.4byte	.LVL58
 4802 0316 0300     		.2byte	0x3
 4803 0318 74       		.byte	0x74
 4804 0319 7C       		.sleb128 -4
 4805 031a 06       		.byte	0x6
 4806 031b 60000000 		.4byte	.LVL58
 4807 031f 64000000 		.4byte	.LVL60
 4808 0323 0300     		.2byte	0x3
 4809 0325 74       		.byte	0x74
 4810 0326 60       		.sleb128 -32
 4811 0327 06       		.byte	0x6
 4812 0328 00000000 		.4byte	0
 4813 032c 00000000 		.4byte	0
 4814              	.LLST21:
 4815 0330 1E000000 		.4byte	.LVL43
 4816 0334 28000000 		.4byte	.LVL46
 4817 0338 0300     		.2byte	0x3
 4818 033a 74       		.byte	0x74
 4819 033b 7C       		.sleb128 -4
 4820 033c 9F       		.byte	0x9f
 4821 033d 28000000 		.4byte	.LVL46
 4822 0341 2E000000 		.4byte	.LVL47
 4823 0345 0100     		.2byte	0x1
 4824 0347 53       		.byte	0x53
 4825 0348 2E000000 		.4byte	.LVL47
 4826 034c 60000000 		.4byte	.LVL58
 4827 0350 0300     		.2byte	0x3
 4828 0352 74       		.byte	0x74
 4829 0353 7C       		.sleb128 -4
 4830 0354 9F       		.byte	0x9f
 4831 0355 60000000 		.4byte	.LVL58
 4832 0359 68000000 		.4byte	.LVL61
 4833 035d 0300     		.2byte	0x3
 4834 035f 74       		.byte	0x74
 4835 0360 60       		.sleb128 -32
 4836 0361 9F       		.byte	0x9f
 4837 0362 00000000 		.4byte	0
 4838 0366 00000000 		.4byte	0
 4839              	.LLST22:
 4840 036a 14000000 		.4byte	.LVL66
 4841 036e 23000000 		.4byte	.LVL67-1
 4842 0372 0100     		.2byte	0x1
 4843 0374 50       		.byte	0x50
 4844 0375 26000000 		.4byte	.LVL68
 4845 0379 2C000000 		.4byte	.LVL69
 4846 037d 0100     		.2byte	0x1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 146


 4847 037f 50       		.byte	0x50
 4848 0380 4C000000 		.4byte	.LVL70
 4849 0384 4E000000 		.4byte	.LVL71
 4850 0388 0200     		.2byte	0x2
 4851 038a 30       		.byte	0x30
 4852 038b 9F       		.byte	0x9f
 4853 038c 00000000 		.4byte	0
 4854 0390 00000000 		.4byte	0
 4855              	.LLST23:
 4856 0394 00000000 		.4byte	.LVL72
 4857 0398 05000000 		.4byte	.LVL73-1
 4858 039c 0100     		.2byte	0x1
 4859 039e 50       		.byte	0x50
 4860 039f 05000000 		.4byte	.LVL73-1
 4861 03a3 08000000 		.4byte	.LFE13
 4862 03a7 0400     		.2byte	0x4
 4863 03a9 F3       		.byte	0xf3
 4864 03aa 01       		.uleb128 0x1
 4865 03ab 50       		.byte	0x50
 4866 03ac 9F       		.byte	0x9f
 4867 03ad 00000000 		.4byte	0
 4868 03b1 00000000 		.4byte	0
 4869              	.LLST24:
 4870 03b5 00000000 		.4byte	.LVL74
 4871 03b9 06000000 		.4byte	.LVL75
 4872 03bd 0100     		.2byte	0x1
 4873 03bf 50       		.byte	0x50
 4874 03c0 06000000 		.4byte	.LVL75
 4875 03c4 0C000000 		.4byte	.LVL76
 4876 03c8 0300     		.2byte	0x3
 4877 03ca 70       		.byte	0x70
 4878 03cb 01       		.sleb128 1
 4879 03cc 9F       		.byte	0x9f
 4880 03cd 0C000000 		.4byte	.LVL76
 4881 03d1 2C000000 		.4byte	.LFE14
 4882 03d5 0400     		.2byte	0x4
 4883 03d7 F3       		.byte	0xf3
 4884 03d8 01       		.uleb128 0x1
 4885 03d9 50       		.byte	0x50
 4886 03da 9F       		.byte	0x9f
 4887 03db 00000000 		.4byte	0
 4888 03df 00000000 		.4byte	0
 4889              	.LLST25:
 4890 03e3 00000000 		.4byte	.LVL77
 4891 03e7 06000000 		.4byte	.LVL78
 4892 03eb 0100     		.2byte	0x1
 4893 03ed 50       		.byte	0x50
 4894 03ee 06000000 		.4byte	.LVL78
 4895 03f2 0C000000 		.4byte	.LVL79
 4896 03f6 0300     		.2byte	0x3
 4897 03f8 70       		.byte	0x70
 4898 03f9 01       		.sleb128 1
 4899 03fa 9F       		.byte	0x9f
 4900 03fb 0C000000 		.4byte	.LVL79
 4901 03ff 2C000000 		.4byte	.LFE15
 4902 0403 0400     		.2byte	0x4
 4903 0405 F3       		.byte	0xf3
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 147


 4904 0406 01       		.uleb128 0x1
 4905 0407 50       		.byte	0x50
 4906 0408 9F       		.byte	0x9f
 4907 0409 00000000 		.4byte	0
 4908 040d 00000000 		.4byte	0
 4909              	.LLST26:
 4910 0411 00000000 		.4byte	.LVL80
 4911 0415 06000000 		.4byte	.LVL81
 4912 0419 0100     		.2byte	0x1
 4913 041b 50       		.byte	0x50
 4914 041c 06000000 		.4byte	.LVL81
 4915 0420 10000000 		.4byte	.LVL84
 4916 0424 0100     		.2byte	0x1
 4917 0426 54       		.byte	0x54
 4918 0427 10000000 		.4byte	.LVL84
 4919 042b 12000000 		.4byte	.LFE16
 4920 042f 0400     		.2byte	0x4
 4921 0431 F3       		.byte	0xf3
 4922 0432 01       		.uleb128 0x1
 4923 0433 50       		.byte	0x50
 4924 0434 9F       		.byte	0x9f
 4925 0435 00000000 		.4byte	0
 4926 0439 00000000 		.4byte	0
 4927              	.LLST27:
 4928 043d 00000000 		.4byte	.LVL80
 4929 0441 09000000 		.4byte	.LVL82-1
 4930 0445 0100     		.2byte	0x1
 4931 0447 51       		.byte	0x51
 4932 0448 09000000 		.4byte	.LVL82-1
 4933 044c 12000000 		.4byte	.LFE16
 4934 0450 0400     		.2byte	0x4
 4935 0452 F3       		.byte	0xf3
 4936 0453 01       		.uleb128 0x1
 4937 0454 51       		.byte	0x51
 4938 0455 9F       		.byte	0x9f
 4939 0456 00000000 		.4byte	0
 4940 045a 00000000 		.4byte	0
 4941              	.LLST28:
 4942 045e 00000000 		.4byte	.LVL85
 4943 0462 08000000 		.4byte	.LVL86
 4944 0466 0100     		.2byte	0x1
 4945 0468 50       		.byte	0x50
 4946 0469 08000000 		.4byte	.LVL86
 4947 046d 0A000000 		.4byte	.LVL87
 4948 0471 0400     		.2byte	0x4
 4949 0473 F3       		.byte	0xf3
 4950 0474 01       		.uleb128 0x1
 4951 0475 50       		.byte	0x50
 4952 0476 9F       		.byte	0x9f
 4953 0477 0A000000 		.4byte	.LVL87
 4954 047b 0F000000 		.4byte	.LVL88-1
 4955 047f 0100     		.2byte	0x1
 4956 0481 50       		.byte	0x50
 4957 0482 0F000000 		.4byte	.LVL88-1
 4958 0486 12000000 		.4byte	.LFE17
 4959 048a 0400     		.2byte	0x4
 4960 048c F3       		.byte	0xf3
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 148


 4961 048d 01       		.uleb128 0x1
 4962 048e 50       		.byte	0x50
 4963 048f 9F       		.byte	0x9f
 4964 0490 00000000 		.4byte	0
 4965 0494 00000000 		.4byte	0
 4966              	.LLST29:
 4967 0498 00000000 		.4byte	.LVL85
 4968 049c 10000000 		.4byte	.LVL88
 4969 04a0 0200     		.2byte	0x2
 4970 04a2 30       		.byte	0x30
 4971 04a3 9F       		.byte	0x9f
 4972 04a4 00000000 		.4byte	0
 4973 04a8 00000000 		.4byte	0
 4974              	.LLST30:
 4975 04ac 0A000000 		.4byte	.LVL87
 4976 04b0 0F000000 		.4byte	.LVL88-1
 4977 04b4 0100     		.2byte	0x1
 4978 04b6 50       		.byte	0x50
 4979 04b7 0F000000 		.4byte	.LVL88-1
 4980 04bb 10000000 		.4byte	.LVL88
 4981 04bf 0400     		.2byte	0x4
 4982 04c1 F3       		.byte	0xf3
 4983 04c2 01       		.uleb128 0x1
 4984 04c3 50       		.byte	0x50
 4985 04c4 9F       		.byte	0x9f
 4986 04c5 00000000 		.4byte	0
 4987 04c9 00000000 		.4byte	0
 4988              	.LLST31:
 4989 04cd 00000000 		.4byte	.LVL89
 4990 04d1 06000000 		.4byte	.LVL90
 4991 04d5 0200     		.2byte	0x2
 4992 04d7 30       		.byte	0x30
 4993 04d8 9F       		.byte	0x9f
 4994 04d9 06000000 		.4byte	.LVL90
 4995 04dd 16000000 		.4byte	.LVL95
 4996 04e1 0100     		.2byte	0x1
 4997 04e3 55       		.byte	0x55
 4998 04e4 16000000 		.4byte	.LVL95
 4999 04e8 18000000 		.4byte	.LFE18
 5000 04ec 0100     		.2byte	0x1
 5001 04ee 50       		.byte	0x50
 5002 04ef 00000000 		.4byte	0
 5003 04f3 00000000 		.4byte	0
 5004              	.LLST32:
 5005 04f7 00000000 		.4byte	.LVL89
 5006 04fb 06000000 		.4byte	.LVL90
 5007 04ff 0200     		.2byte	0x2
 5008 0501 30       		.byte	0x30
 5009 0502 9F       		.byte	0x9f
 5010 0503 06000000 		.4byte	.LVL90
 5011 0507 0E000000 		.4byte	.LVL92
 5012 050b 0100     		.2byte	0x1
 5013 050d 54       		.byte	0x54
 5014 050e 0E000000 		.4byte	.LVL92
 5015 0512 10000000 		.4byte	.LVL93
 5016 0516 0300     		.2byte	0x3
 5017 0518 74       		.byte	0x74
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 149


 5018 0519 7F       		.sleb128 -1
 5019 051a 9F       		.byte	0x9f
 5020 051b 10000000 		.4byte	.LVL93
 5021 051f 16000000 		.4byte	.LVL94
 5022 0523 0100     		.2byte	0x1
 5023 0525 54       		.byte	0x54
 5024 0526 00000000 		.4byte	0
 5025 052a 00000000 		.4byte	0
 5026              	.LLST33:
 5027 052e 00000000 		.4byte	.LVL96
 5028 0532 04000000 		.4byte	.LVL97
 5029 0536 0100     		.2byte	0x1
 5030 0538 50       		.byte	0x50
 5031 0539 04000000 		.4byte	.LVL97
 5032 053d 14000000 		.4byte	.LFE23
 5033 0541 0400     		.2byte	0x4
 5034 0543 F3       		.byte	0xf3
 5035 0544 01       		.uleb128 0x1
 5036 0545 50       		.byte	0x50
 5037 0546 9F       		.byte	0x9f
 5038 0547 00000000 		.4byte	0
 5039 054b 00000000 		.4byte	0
 5040              	.LLST34:
 5041 054f 00000000 		.4byte	.LVL98
 5042 0553 0E000000 		.4byte	.LVL99
 5043 0557 0100     		.2byte	0x1
 5044 0559 50       		.byte	0x50
 5045 055a 0E000000 		.4byte	.LVL99
 5046 055e 20000000 		.4byte	.LVL100
 5047 0562 0100     		.2byte	0x1
 5048 0564 54       		.byte	0x54
 5049 0565 20000000 		.4byte	.LVL100
 5050 0569 30000000 		.4byte	.LFE24
 5051 056d 0600     		.2byte	0x6
 5052 056f F3       		.byte	0xf3
 5053 0570 01       		.uleb128 0x1
 5054 0571 50       		.byte	0x50
 5055 0572 31       		.byte	0x31
 5056 0573 24       		.byte	0x24
 5057 0574 9F       		.byte	0x9f
 5058 0575 00000000 		.4byte	0
 5059 0579 00000000 		.4byte	0
 5060              	.LLST35:
 5061 057d 26000000 		.4byte	.LVL101
 5062 0581 28000000 		.4byte	.LVL102
 5063 0585 0100     		.2byte	0x1
 5064 0587 50       		.byte	0x50
 5065 0588 00000000 		.4byte	0
 5066 058c 00000000 		.4byte	0
 5067              	.LLST36:
 5068 0590 00000000 		.4byte	.LVL103
 5069 0594 06000000 		.4byte	.LVL104
 5070 0598 0200     		.2byte	0x2
 5071 059a 30       		.byte	0x30
 5072 059b 9F       		.byte	0x9f
 5073 059c 00000000 		.4byte	0
 5074 05a0 00000000 		.4byte	0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 150


 5075              	.LLST37:
 5076 05a4 08000000 		.4byte	.LVL105
 5077 05a8 1A000000 		.4byte	.LVL108
 5078 05ac 0100     		.2byte	0x1
 5079 05ae 55       		.byte	0x55
 5080 05af 00000000 		.4byte	0
 5081 05b3 00000000 		.4byte	0
 5082              	.LLST38:
 5083 05b7 08000000 		.4byte	.LVL105
 5084 05bb 16000000 		.4byte	.LVL107
 5085 05bf 0100     		.2byte	0x1
 5086 05c1 55       		.byte	0x55
 5087 05c2 00000000 		.4byte	0
 5088 05c6 00000000 		.4byte	0
 5089              	.LLST39:
 5090 05ca 14000000 		.4byte	.LVL106
 5091 05ce 16000000 		.4byte	.LVL107
 5092 05d2 0100     		.2byte	0x1
 5093 05d4 50       		.byte	0x50
 5094 05d5 00000000 		.4byte	0
 5095 05d9 00000000 		.4byte	0
 5096              	.LLST40:
 5097 05dd 00000000 		.4byte	.LVL109
 5098 05e1 0E000000 		.4byte	.LVL110
 5099 05e5 0100     		.2byte	0x1
 5100 05e7 50       		.byte	0x50
 5101 05e8 0E000000 		.4byte	.LVL110
 5102 05ec 14000000 		.4byte	.LFE26
 5103 05f0 0400     		.2byte	0x4
 5104 05f2 F3       		.byte	0xf3
 5105 05f3 01       		.uleb128 0x1
 5106 05f4 50       		.byte	0x50
 5107 05f5 9F       		.byte	0x9f
 5108 05f6 00000000 		.4byte	0
 5109 05fa 00000000 		.4byte	0
 5110              	.LLST41:
 5111 05fe 00000000 		.4byte	.LVL109
 5112 0602 0E000000 		.4byte	.LVL110
 5113 0606 0200     		.2byte	0x2
 5114 0608 30       		.byte	0x30
 5115 0609 9F       		.byte	0x9f
 5116 060a 0E000000 		.4byte	.LVL110
 5117 060e 14000000 		.4byte	.LFE26
 5118 0612 0100     		.2byte	0x1
 5119 0614 50       		.byte	0x50
 5120 0615 00000000 		.4byte	0
 5121 0619 00000000 		.4byte	0
 5122              	.LLST42:
 5123 061d 00000000 		.4byte	.LVL111
 5124 0621 0B000000 		.4byte	.LVL112-1
 5125 0625 0100     		.2byte	0x1
 5126 0627 50       		.byte	0x50
 5127 0628 0B000000 		.4byte	.LVL112-1
 5128 062c 1A000000 		.4byte	.LVL115
 5129 0630 0100     		.2byte	0x1
 5130 0632 55       		.byte	0x55
 5131 0633 1A000000 		.4byte	.LVL115
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 151


 5132 0637 1C000000 		.4byte	.LFE27
 5133 063b 0400     		.2byte	0x4
 5134 063d F3       		.byte	0xf3
 5135 063e 01       		.uleb128 0x1
 5136 063f 50       		.byte	0x50
 5137 0640 9F       		.byte	0x9f
 5138 0641 00000000 		.4byte	0
 5139 0645 00000000 		.4byte	0
 5140              	.LLST43:
 5141 0649 00000000 		.4byte	.LVL111
 5142 064d 0B000000 		.4byte	.LVL112-1
 5143 0651 0100     		.2byte	0x1
 5144 0653 51       		.byte	0x51
 5145 0654 0B000000 		.4byte	.LVL112-1
 5146 0658 1A000000 		.4byte	.LVL116
 5147 065c 0100     		.2byte	0x1
 5148 065e 56       		.byte	0x56
 5149 065f 1A000000 		.4byte	.LVL116
 5150 0663 1C000000 		.4byte	.LFE27
 5151 0667 0400     		.2byte	0x4
 5152 0669 F3       		.byte	0xf3
 5153 066a 01       		.uleb128 0x1
 5154 066b 51       		.byte	0x51
 5155 066c 9F       		.byte	0x9f
 5156 066d 00000000 		.4byte	0
 5157 0671 00000000 		.4byte	0
 5158              	.LLST44:
 5159 0675 00000000 		.4byte	.LVL111
 5160 0679 0B000000 		.4byte	.LVL112-1
 5161 067d 0100     		.2byte	0x1
 5162 067f 52       		.byte	0x52
 5163 0680 0B000000 		.4byte	.LVL112-1
 5164 0684 10000000 		.4byte	.LVL113
 5165 0688 0100     		.2byte	0x1
 5166 068a 54       		.byte	0x54
 5167 068b 10000000 		.4byte	.LVL113
 5168 068f 1C000000 		.4byte	.LFE27
 5169 0693 0400     		.2byte	0x4
 5170 0695 F3       		.byte	0xf3
 5171 0696 01       		.uleb128 0x1
 5172 0697 52       		.byte	0x52
 5173 0698 9F       		.byte	0x9f
 5174 0699 00000000 		.4byte	0
 5175 069d 00000000 		.4byte	0
 5176              	.LLST45:
 5177 06a1 0C000000 		.4byte	.LVL112
 5178 06a5 19000000 		.4byte	.LVL114-1
 5179 06a9 0100     		.2byte	0x1
 5180 06ab 50       		.byte	0x50
 5181 06ac 00000000 		.4byte	0
 5182 06b0 00000000 		.4byte	0
 5183              	.LLST46:
 5184 06b4 00000000 		.4byte	.LVL117
 5185 06b8 18000000 		.4byte	.LVL118
 5186 06bc 0100     		.2byte	0x1
 5187 06be 50       		.byte	0x50
 5188 06bf 18000000 		.4byte	.LVL118
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 152


 5189 06c3 44000000 		.4byte	.LFE10
 5190 06c7 0400     		.2byte	0x4
 5191 06c9 F3       		.byte	0xf3
 5192 06ca 01       		.uleb128 0x1
 5193 06cb 50       		.byte	0x50
 5194 06cc 9F       		.byte	0x9f
 5195 06cd 00000000 		.4byte	0
 5196 06d1 00000000 		.4byte	0
 5197              	.LLST47:
 5198 06d5 36000000 		.4byte	.LVL123
 5199 06d9 3A000000 		.4byte	.LVL124
 5200 06dd 0300     		.2byte	0x3
 5201 06df 74       		.byte	0x74
 5202 06e0 02       		.sleb128 2
 5203 06e1 9F       		.byte	0x9f
 5204 06e2 00000000 		.4byte	0
 5205 06e6 00000000 		.4byte	0
 5206              	.LLST48:
 5207 06ea 10000000 		.4byte	.LVL126
 5208 06ee 16000000 		.4byte	.LVL127
 5209 06f2 0100     		.2byte	0x1
 5210 06f4 51       		.byte	0x51
 5211 06f5 16000000 		.4byte	.LVL127
 5212 06f9 18000000 		.4byte	.LVL128
 5213 06fd 0100     		.2byte	0x1
 5214 06ff 53       		.byte	0x53
 5215 0700 1A000000 		.4byte	.LVL129
 5216 0704 20000000 		.4byte	.LVL130
 5217 0708 0100     		.2byte	0x1
 5218 070a 52       		.byte	0x52
 5219 070b 20000000 		.4byte	.LVL130
 5220 070f 22000000 		.4byte	.LVL131
 5221 0713 0100     		.2byte	0x1
 5222 0715 53       		.byte	0x53
 5223 0716 00000000 		.4byte	0
 5224 071a 00000000 		.4byte	0
 5225              	.LLST49:
 5226 071e 00000000 		.4byte	.LVL136
 5227 0722 1A000000 		.4byte	.LVL141
 5228 0726 0100     		.2byte	0x1
 5229 0728 50       		.byte	0x50
 5230 0729 1A000000 		.4byte	.LVL141
 5231 072d 80000000 		.4byte	.LFE25
 5232 0731 0200     		.2byte	0x2
 5233 0733 91       		.byte	0x91
 5234 0734 64       		.sleb128 -28
 5235 0735 00000000 		.4byte	0
 5236 0739 00000000 		.4byte	0
 5237              	.LLST50:
 5238 073d 10000000 		.4byte	.LVL137
 5239 0741 12000000 		.4byte	.LVL138
 5240 0745 0700     		.2byte	0x7
 5241 0747 73       		.byte	0x73
 5242 0748 00       		.sleb128 0
 5243 0749 0A       		.byte	0xa
 5244 074a 000F     		.2byte	0xf00
 5245 074c 1A       		.byte	0x1a
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 153


 5246 074d 9F       		.byte	0x9f
 5247 074e 12000000 		.4byte	.LVL138
 5248 0752 70000000 		.4byte	.LVL150
 5249 0756 0800     		.2byte	0x8
 5250 0758 7D       		.byte	0x7d
 5251 0759 00       		.sleb128 0
 5252 075a 06       		.byte	0x6
 5253 075b 0A       		.byte	0xa
 5254 075c 000F     		.2byte	0xf00
 5255 075e 1A       		.byte	0x1a
 5256 075f 9F       		.byte	0x9f
 5257 0760 70000000 		.4byte	.LVL150
 5258 0764 80000000 		.4byte	.LFE25
 5259 0768 0800     		.2byte	0x8
 5260 076a 91       		.byte	0x91
 5261 076b 58       		.sleb128 -40
 5262 076c 06       		.byte	0x6
 5263 076d 0A       		.byte	0xa
 5264 076e 000F     		.2byte	0xf00
 5265 0770 1A       		.byte	0x1a
 5266 0771 9F       		.byte	0x9f
 5267 0772 00000000 		.4byte	0
 5268 0776 00000000 		.4byte	0
 5269              	.LLST51:
 5270 077a 16000000 		.4byte	.LVL139
 5271 077e 18000000 		.4byte	.LVL140
 5272 0782 0500     		.2byte	0x5
 5273 0784 73       		.byte	0x73
 5274 0785 00       		.sleb128 0
 5275 0786 34       		.byte	0x34
 5276 0787 1A       		.byte	0x1a
 5277 0788 9F       		.byte	0x9f
 5278 0789 18000000 		.4byte	.LVL140
 5279 078d 80000000 		.4byte	.LFE25
 5280 0791 0600     		.2byte	0x6
 5281 0793 91       		.byte	0x91
 5282 0794 5C       		.sleb128 -36
 5283 0795 06       		.byte	0x6
 5284 0796 34       		.byte	0x34
 5285 0797 1A       		.byte	0x1a
 5286 0798 9F       		.byte	0x9f
 5287 0799 00000000 		.4byte	0
 5288 079d 00000000 		.4byte	0
 5289              	.LLST52:
 5290 07a1 20000000 		.4byte	.LVL142
 5291 07a5 25000000 		.4byte	.LVL143-1
 5292 07a9 0700     		.2byte	0x7
 5293 07ab 73       		.byte	0x73
 5294 07ac 00       		.sleb128 0
 5295 07ad 0A       		.byte	0xa
 5296 07ae C001     		.2byte	0x1c0
 5297 07b0 1A       		.byte	0x1a
 5298 07b1 9F       		.byte	0x9f
 5299 07b2 25000000 		.4byte	.LVL143-1
 5300 07b6 80000000 		.4byte	.LFE25
 5301 07ba 0800     		.2byte	0x8
 5302 07bc 91       		.byte	0x91
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 154


 5303 07bd 60       		.sleb128 -32
 5304 07be 06       		.byte	0x6
 5305 07bf 0A       		.byte	0xa
 5306 07c0 C001     		.2byte	0x1c0
 5307 07c2 1A       		.byte	0x1a
 5308 07c3 9F       		.byte	0x9f
 5309 07c4 00000000 		.4byte	0
 5310 07c8 00000000 		.4byte	0
 5311              		.section	.debug_aranges,"",%progbits
 5312 0000 CC000000 		.4byte	0xcc
 5313 0004 0200     		.2byte	0x2
 5314 0006 00000000 		.4byte	.Ldebug_info0
 5315 000a 04       		.byte	0x4
 5316 000b 00       		.byte	0
 5317 000c 0000     		.2byte	0
 5318 000e 0000     		.2byte	0
 5319 0010 00000000 		.4byte	.LFB1
 5320 0014 10000000 		.4byte	.LFE1-.LFB1
 5321 0018 00000000 		.4byte	.LFB2
 5322 001c 30000000 		.4byte	.LFE2-.LFB2
 5323 0020 00000000 		.4byte	.LFB3
 5324 0024 30000000 		.4byte	.LFE3-.LFB3
 5325 0028 00000000 		.4byte	.LFB4
 5326 002c 3C000000 		.4byte	.LFE4-.LFB4
 5327 0030 00000000 		.4byte	.LFB5
 5328 0034 40000000 		.4byte	.LFE5-.LFB5
 5329 0038 00000000 		.4byte	.LFB6
 5330 003c 30000000 		.4byte	.LFE6-.LFB6
 5331 0040 00000000 		.4byte	.LFB8
 5332 0044 8C000000 		.4byte	.LFE8-.LFB8
 5333 0048 00000000 		.4byte	.LFB11
 5334 004c 80000000 		.4byte	.LFE11-.LFB11
 5335 0050 00000000 		.4byte	.LFB12
 5336 0054 68000000 		.4byte	.LFE12-.LFB12
 5337 0058 00000000 		.4byte	.LFB13
 5338 005c 08000000 		.4byte	.LFE13-.LFB13
 5339 0060 00000000 		.4byte	.LFB14
 5340 0064 2C000000 		.4byte	.LFE14-.LFB14
 5341 0068 00000000 		.4byte	.LFB15
 5342 006c 2C000000 		.4byte	.LFE15-.LFB15
 5343 0070 00000000 		.4byte	.LFB16
 5344 0074 12000000 		.4byte	.LFE16-.LFB16
 5345 0078 00000000 		.4byte	.LFB17
 5346 007c 12000000 		.4byte	.LFE17-.LFB17
 5347 0080 00000000 		.4byte	.LFB18
 5348 0084 18000000 		.4byte	.LFE18-.LFB18
 5349 0088 00000000 		.4byte	.LFB23
 5350 008c 14000000 		.4byte	.LFE23-.LFB23
 5351 0090 00000000 		.4byte	.LFB24
 5352 0094 30000000 		.4byte	.LFE24-.LFB24
 5353 0098 00000000 		.4byte	.LFB21
 5354 009c 24000000 		.4byte	.LFE21-.LFB21
 5355 00a0 00000000 		.4byte	.LFB26
 5356 00a4 14000000 		.4byte	.LFE26-.LFB26
 5357 00a8 00000000 		.4byte	.LFB27
 5358 00ac 1C000000 		.4byte	.LFE27-.LFB27
 5359 00b0 00000000 		.4byte	.LFB10
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 155


 5360 00b4 44000000 		.4byte	.LFE10-.LFB10
 5361 00b8 00000000 		.4byte	.LFB7
 5362 00bc 50000000 		.4byte	.LFE7-.LFB7
 5363 00c0 00000000 		.4byte	.LFB25
 5364 00c4 80000000 		.4byte	.LFE25-.LFB25
 5365 00c8 00000000 		.4byte	0
 5366 00cc 00000000 		.4byte	0
 5367              		.section	.debug_ranges,"",%progbits
 5368              	.Ldebug_ranges0:
 5369 0000 00000000 		.4byte	.LBB32
 5370 0004 02000000 		.4byte	.LBE32
 5371 0008 04000000 		.4byte	.LBB39
 5372 000c 12000000 		.4byte	.LBE39
 5373 0010 12000000 		.4byte	.LBB40
 5374 0014 22000000 		.4byte	.LBE40
 5375 0018 00000000 		.4byte	0
 5376 001c 00000000 		.4byte	0
 5377 0020 00000000 		.4byte	.LFB1
 5378 0024 10000000 		.4byte	.LFE1
 5379 0028 00000000 		.4byte	.LFB2
 5380 002c 30000000 		.4byte	.LFE2
 5381 0030 00000000 		.4byte	.LFB3
 5382 0034 30000000 		.4byte	.LFE3
 5383 0038 00000000 		.4byte	.LFB4
 5384 003c 3C000000 		.4byte	.LFE4
 5385 0040 00000000 		.4byte	.LFB5
 5386 0044 40000000 		.4byte	.LFE5
 5387 0048 00000000 		.4byte	.LFB6
 5388 004c 30000000 		.4byte	.LFE6
 5389 0050 00000000 		.4byte	.LFB8
 5390 0054 8C000000 		.4byte	.LFE8
 5391 0058 00000000 		.4byte	.LFB11
 5392 005c 80000000 		.4byte	.LFE11
 5393 0060 00000000 		.4byte	.LFB12
 5394 0064 68000000 		.4byte	.LFE12
 5395 0068 00000000 		.4byte	.LFB13
 5396 006c 08000000 		.4byte	.LFE13
 5397 0070 00000000 		.4byte	.LFB14
 5398 0074 2C000000 		.4byte	.LFE14
 5399 0078 00000000 		.4byte	.LFB15
 5400 007c 2C000000 		.4byte	.LFE15
 5401 0080 00000000 		.4byte	.LFB16
 5402 0084 12000000 		.4byte	.LFE16
 5403 0088 00000000 		.4byte	.LFB17
 5404 008c 12000000 		.4byte	.LFE17
 5405 0090 00000000 		.4byte	.LFB18
 5406 0094 18000000 		.4byte	.LFE18
 5407 0098 00000000 		.4byte	.LFB23
 5408 009c 14000000 		.4byte	.LFE23
 5409 00a0 00000000 		.4byte	.LFB24
 5410 00a4 30000000 		.4byte	.LFE24
 5411 00a8 00000000 		.4byte	.LFB21
 5412 00ac 24000000 		.4byte	.LFE21
 5413 00b0 00000000 		.4byte	.LFB26
 5414 00b4 14000000 		.4byte	.LFE26
 5415 00b8 00000000 		.4byte	.LFB27
 5416 00bc 1C000000 		.4byte	.LFE27
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 156


 5417 00c0 00000000 		.4byte	.LFB10
 5418 00c4 44000000 		.4byte	.LFE10
 5419 00c8 00000000 		.4byte	.LFB7
 5420 00cc 50000000 		.4byte	.LFE7
 5421 00d0 00000000 		.4byte	.LFB25
 5422 00d4 80000000 		.4byte	.LFE25
 5423 00d8 00000000 		.4byte	0
 5424 00dc 00000000 		.4byte	0
 5425              		.section	.debug_line,"",%progbits
 5426              	.Ldebug_line0:
 5427 0000 7D050000 		.section	.debug_str,"MS",%progbits,1
 5427      0200CD01 
 5427      00000201 
 5427      FB0E0D00 
 5427      01010101 
 5428              	.LASF110:
 5429 0000 43617053 		.ascii	"CapSense_SsCSDGetColSnsClkDivider\000"
 5429      656E7365 
 5429      5F537343 
 5429      53444765 
 5429      74436F6C 
 5430              	.LASF122:
 5431 0022 73656E73 		.ascii	"sensorElement\000"
 5431      6F72456C 
 5431      656D656E 
 5431      7400
 5432              	.LASF108:
 5433 0030 7363616E 		.ascii	"scanStatus\000"
 5433      53746174 
 5433      757300
 5434              	.LASF157:
 5435 003b 43617053 		.ascii	"CapSense_SsCSDDisableMode\000"
 5435      656E7365 
 5435      5F537343 
 5435      53444469 
 5435      7361626C 
 5436              	.LASF119:
 5437 0055 43617053 		.ascii	"CapSense_SetupWidgetExt\000"
 5437      656E7365 
 5437      5F536574 
 5437      75705769 
 5437      64676574 
 5438              	.LASF171:
 5439 006d 43617053 		.ascii	"CapSense_widgetIndex\000"
 5439      656E7365 
 5439      5F776964 
 5439      67657449 
 5439      6E646578 
 5440              	.LASF67:
 5441 0082 736E7254 		.ascii	"snrTestWidgetId\000"
 5441      65737457 
 5441      69646765 
 5441      74496400 
 5442              	.LASF23:
 5443 0092 43617053 		.ascii	"CapSense_UNDEFINED_E\000"
 5443      656E7365 
 5443      5F554E44 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 157


 5443      4546494E 
 5443      45445F45 
 5444              	.LASF8:
 5445 00a7 756E7369 		.ascii	"unsigned int\000"
 5445      676E6564 
 5445      20696E74 
 5445      00
 5446              	.LASF58:
 5447 00b4 7363616E 		.ascii	"scanCounter\000"
 5447      436F756E 
 5447      74657200 
 5448              	.LASF56:
 5449 00c0 6877436C 		.ascii	"hwClock\000"
 5449      6F636B00 
 5450              	.LASF71:
 5451 00c8 7363616E 		.ascii	"scanCsdISC\000"
 5451      43736449 
 5451      534300
 5452              	.LASF162:
 5453 00d3 696E6974 		.ascii	"initStatus\000"
 5453      53746174 
 5453      757300
 5454              	.LASF186:
 5455 00de 43617053 		.ascii	"CapSense_SsCSDSetShieldElectrodesState\000"
 5455      656E7365 
 5455      5F537343 
 5455      53445365 
 5455      74536869 
 5456              	.LASF101:
 5457 0105 43617053 		.ascii	"CapSense_BIST_CSD_SH_CAP_E\000"
 5457      656E7365 
 5457      5F424953 
 5457      545F4353 
 5457      445F5348 
 5458              	.LASF126:
 5459 0120 696E7465 		.ascii	"interruptState\000"
 5459      72727570 
 5459      74537461 
 5459      746500
 5460              	.LASF18:
 5461 012f 72656738 		.ascii	"reg8\000"
 5461      00
 5462              	.LASF167:
 5463 0134 636D6F64 		.ascii	"cmodPc\000"
 5463      506300
 5464              	.LASF150:
 5465 013b 6C667372 		.ascii	"lfsrScale\000"
 5465      5363616C 
 5465      6500
 5466              	.LASF114:
 5467 0145 6D6F6465 		.ascii	"mode\000"
 5467      00
 5468              	.LASF197:
 5469 014a 43617053 		.ascii	"CapSense_IsBusy\000"
 5469      656E7365 
 5469      5F497342 
 5469      75737900 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 158


 5470              	.LASF140:
 5471 015a 43617053 		.ascii	"CapSense_SsSetModClkClockDivider\000"
 5471      656E7365 
 5471      5F537353 
 5471      65744D6F 
 5471      64436C6B 
 5472              	.LASF154:
 5473 017b 72656750 		.ascii	"regPtr\000"
 5473      747200
 5474              	.LASF46:
 5475 0182 43617053 		.ascii	"CapSense_RAM_WD_LIST_STRUCT\000"
 5475      656E7365 
 5475      5F52414D 
 5475      5F57445F 
 5475      4C495354 
 5476              	.LASF120:
 5477 019e 73656E73 		.ascii	"sensorId\000"
 5477      6F724964 
 5477      00
 5478              	.LASF169:
 5479 01a7 43617053 		.ascii	"CapSense_dsFlash\000"
 5479      656E7365 
 5479      5F647346 
 5479      6C617368 
 5479      00
 5480              	.LASF113:
 5481 01b8 70747257 		.ascii	"ptrWdgt\000"
 5481      64677400 
 5482              	.LASF10:
 5483 01c0 75696E74 		.ascii	"uint32_t\000"
 5483      33325F74 
 5483      00
 5484              	.LASF158:
 5485 01c9 43617053 		.ascii	"CapSense_SsSetWidgetSenseClkSrc\000"
 5485      656E7365 
 5485      5F537353 
 5485      65745769 
 5485      64676574 
 5486              	.LASF37:
 5487 01e9 69646163 		.ascii	"idacGainIndex\000"
 5487      4761696E 
 5487      496E6465 
 5487      7800
 5488              	.LASF43:
 5489 01f7 646F776E 		.ascii	"down\000"
 5489      00
 5490              	.LASF130:
 5491 01fc 6C6F6F70 		.ascii	"loopIndex\000"
 5491      496E6465 
 5491      7800
 5492              	.LASF14:
 5493 0206 666C6F61 		.ascii	"float\000"
 5493      7400
 5494              	.LASF82:
 5495 020c 73686966 		.ascii	"shift\000"
 5495      7400
 5496              	.LASF179:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 159


 5497 0212 43617053 		.ascii	"CapSense_CSDSetupWidget\000"
 5497      656E7365 
 5497      5F435344 
 5497      53657475 
 5497      70576964 
 5498              	.LASF135:
 5499 022a 736E7349 		.ascii	"snsIoPtr\000"
 5499      6F507472 
 5499      00
 5500              	.LASF66:
 5501 0233 736E734C 		.ascii	"snsList\000"
 5501      69737400 
 5502              	.LASF7:
 5503 023b 6C6F6E67 		.ascii	"long long unsigned int\000"
 5503      206C6F6E 
 5503      6720756E 
 5503      7369676E 
 5503      65642069 
 5504              	.LASF172:
 5505 0252 43617053 		.ascii	"CapSense_sensorIndex\000"
 5505      656E7365 
 5505      5F73656E 
 5505      736F7249 
 5505      6E646578 
 5506              	.LASF83:
 5507 0267 43617053 		.ascii	"CapSense_FLASH_IO_STRUCT\000"
 5507      656E7365 
 5507      5F464C41 
 5507      53485F49 
 5507      4F5F5354 
 5508              	.LASF68:
 5509 0280 736E7254 		.ascii	"snrTestSensorId\000"
 5509      65737453 
 5509      656E736F 
 5509      72496400 
 5510              	.LASF91:
 5511 0290 77646774 		.ascii	"wdgtType\000"
 5511      54797065 
 5511      00
 5512              	.LASF149:
 5513 0299 6C667372 		.ascii	"lfsrSize\000"
 5513      53697A65 
 5513      00
 5514              	.LASF181:
 5515 02a2 43617053 		.ascii	"CapSense_CSDSetupWidgetExt\000"
 5515      656E7365 
 5515      5F435344 
 5515      53657475 
 5515      70576964 
 5516              	.LASF155:
 5517 02bd 76616C75 		.ascii	"value\000"
 5517      6500
 5518              	.LASF132:
 5519 02c3 6E657750 		.ascii	"newPinHsiomVal\000"
 5519      696E4873 
 5519      696F6D56 
 5519      616C00
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 160


 5520              	.LASF64:
 5521 02d2 6D6F6443 		.ascii	"modCsdClk\000"
 5521      7364436C 
 5521      6B00
 5522              	.LASF52:
 5523 02dc 43617053 		.ascii	"CapSense_RAM_SNS_STRUCT\000"
 5523      656E7365 
 5523      5F52414D 
 5523      5F534E53 
 5523      5F535452 
 5524              	.LASF145:
 5525 02f4 43617053 		.ascii	"CapSense_SsCSDCalcPrsSize\000"
 5525      656E7365 
 5525      5F537343 
 5525      53444361 
 5525      6C635072 
 5526              	.LASF76:
 5527 030e 64725074 		.ascii	"drPtr\000"
 5527      7200
 5528              	.LASF141:
 5529 0314 6D6F6443 		.ascii	"modClk\000"
 5529      6C6B00
 5530              	.LASF131:
 5531 031b 6E657750 		.ascii	"newPinPcVal\000"
 5531      696E5063 
 5531      56616C00 
 5532              	.LASF33:
 5533 0327 68797374 		.ascii	"hysteresis\000"
 5533      65726573 
 5533      697300
 5534              	.LASF164:
 5535 0332 64697363 		.ascii	"dischargeTime\000"
 5535      68617267 
 5535      6554696D 
 5535      6500
 5536              	.LASF93:
 5537 0340 43617053 		.ascii	"CapSense_FLASH_WD_STRUCT\000"
 5537      656E7365 
 5537      5F464C41 
 5537      53485F57 
 5537      445F5354 
 5538              	.LASF124:
 5539 0359 656C7464 		.ascii	"eltdNum\000"
 5539      4E756D00 
 5540              	.LASF35:
 5541 0361 6C6F7742 		.ascii	"lowBslnRst\000"
 5541      736C6E52 
 5541      737400
 5542              	.LASF90:
 5543 036c 746F7461 		.ascii	"totalNumSns\000"
 5543      6C4E756D 
 5543      536E7300 
 5544              	.LASF31:
 5545 0378 6E6F6973 		.ascii	"noiseTh\000"
 5545      65546800 
 5546              	.LASF16:
 5547 0380 63686172 		.ascii	"char\000"
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 161


 5547      00
 5548              	.LASF184:
 5549 0385 43794578 		.ascii	"CyExitCriticalSection\000"
 5549      69744372 
 5549      69746963 
 5549      616C5365 
 5549      6374696F 
 5550              	.LASF163:
 5551 039b 43617053 		.ascii	"CapSense_DischargeExtCapacitors\000"
 5551      656E7365 
 5551      5F446973 
 5551      63686172 
 5551      67654578 
 5552              	.LASF133:
 5553 03bb 746D7050 		.ascii	"tmpPcDrRegValue\000"
 5553      63447252 
 5553      65675661 
 5553      6C756500 
 5554              	.LASF99:
 5555 03cb 43617053 		.ascii	"CapSense_BIST_CSD_SNS_CAP_E\000"
 5555      656E7365 
 5555      5F424953 
 5555      545F4353 
 5555      445F534E 
 5556              	.LASF80:
 5557 03e7 6873696F 		.ascii	"hsiomShift\000"
 5557      6D536869 
 5557      667400
 5558              	.LASF12:
 5559 03f2 75696E74 		.ascii	"uint16\000"
 5559      313600
 5560              	.LASF159:
 5561 03f9 43617053 		.ascii	"CapSense_SsTrimIdacsSourcing\000"
 5561      656E7365 
 5561      5F537354 
 5561      72696D49 
 5561      64616373 
 5562              	.LASF190:
 5563 0416 43617053 		.ascii	"CapSense_SsCSDDisableShieldElectrodes\000"
 5563      656E7365 
 5563      5F537343 
 5563      53444469 
 5563      7361626C 
 5564              	.LASF29:
 5565 043c 7265736F 		.ascii	"resolution\000"
 5565      6C757469 
 5565      6F6E00
 5566              	.LASF59:
 5567 0447 73746174 		.ascii	"status\000"
 5567      757300
 5568              	.LASF107:
 5569 044e 43617053 		.ascii	"CapSense_CalibrateWidget\000"
 5569      656E7365 
 5569      5F43616C 
 5569      69627261 
 5569      74655769 
 5570              	.LASF98:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 162


 5571 0467 43617053 		.ascii	"CapSense_SCAN_CSX_E\000"
 5571      656E7365 
 5571      5F534341 
 5571      4E5F4353 
 5571      585F4500 
 5572              	.LASF22:
 5573 047b 43617053 		.ascii	"CapSense_LOW_BSLN_RST_TYPE\000"
 5573      656E7365 
 5573      5F4C4F57 
 5573      5F42534C 
 5573      4E5F5253 
 5574              	.LASF142:
 5575 0496 43617053 		.ascii	"CapSense_SsSetSnsClockDivider\000"
 5575      656E7365 
 5575      5F537353 
 5575      6574536E 
 5575      73436C6F 
 5576              	.LASF28:
 5577 04b4 43617053 		.ascii	"CapSense_SENSE_METHOD_ENUM\000"
 5577      656E7365 
 5577      5F53454E 
 5577      53455F4D 
 5577      4554484F 
 5578              	.LASF152:
 5579 04cf 43617053 		.ascii	"CapSense_SetInactiveElectrodeState\000"
 5579      656E7365 
 5579      5F536574 
 5579      496E6163 
 5579      74697665 
 5580              	.LASF51:
 5581 04f2 69646163 		.ascii	"idacComp\000"
 5581      436F6D70 
 5581      00
 5582              	.LASF45:
 5583 04fb 72696768 		.ascii	"right\000"
 5583      7400
 5584              	.LASF75:
 5585 0501 70635074 		.ascii	"pcPtr\000"
 5585      7200
 5586              	.LASF6:
 5587 0507 6C6F6E67 		.ascii	"long long int\000"
 5587      206C6F6E 
 5587      6720696E 
 5587      7400
 5588              	.LASF92:
 5589 0515 6E756D43 		.ascii	"numCols\000"
 5589      6F6C7300 
 5590              	.LASF191:
 5591 051d 43617053 		.ascii	"CapSense_SsCSDInitialize\000"
 5591      656E7365 
 5591      5F537343 
 5591      5344496E 
 5591      69746961 
 5592              	.LASF34:
 5593 0536 6F6E4465 		.ascii	"onDebounce\000"
 5593      626F756E 
 5593      636500
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 163


 5594              	.LASF109:
 5595 0541 63616C69 		.ascii	"calibrateStatus\000"
 5595      62726174 
 5595      65537461 
 5595      74757300 
 5596              	.LASF65:
 5597 0551 77646774 		.ascii	"wdgtList\000"
 5597      4C697374 
 5597      00
 5598              	.LASF97:
 5599 055a 43617053 		.ascii	"CapSense_SCAN_CSD_E\000"
 5599      656E7365 
 5599      5F534341 
 5599      4E5F4353 
 5599      445F4500 
 5600              	.LASF95:
 5601 056e 43617053 		.ascii	"CapSense_FLASH_STRUCT\000"
 5601      656E7365 
 5601      5F464C41 
 5601      53485F53 
 5601      54525543 
 5602              	.LASF106:
 5603 0584 43617053 		.ascii	"CapSense_Scan\000"
 5603      656E7365 
 5603      5F536361 
 5603      6E00
 5604              	.LASF153:
 5605 0592 43617053 		.ascii	"CapSense_WriteBitsSafe\000"
 5605      656E7365 
 5605      5F577269 
 5605      74654269 
 5605      74735361 
 5606              	.LASF134:
 5607 05a9 746D7048 		.ascii	"tmpHsiomRegValue\000"
 5607      73696F6D 
 5607      52656756 
 5607      616C7565 
 5607      00
 5608              	.LASF168:
 5609 05ba 43617053 		.ascii	"CapSense_dsRam\000"
 5609      656E7365 
 5609      5F647352 
 5609      616D00
 5610              	.LASF70:
 5611 05c9 736E7254 		.ascii	"snrTestRawCount\000"
 5611      65737452 
 5611      6177436F 
 5611      756E7400 
 5612              	.LASF32:
 5613 05d9 6E4E6F69 		.ascii	"nNoiseTh\000"
 5613      73655468 
 5613      00
 5614              	.LASF63:
 5615 05e2 63736430 		.ascii	"csd0Config\000"
 5615      436F6E66 
 5615      696700
 5616              	.LASF20:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 164


 5617 05ed 63796973 		.ascii	"cyisraddress\000"
 5617      72616464 
 5617      72657373 
 5617      00
 5618              	.LASF121:
 5619 05fa 43617053 		.ascii	"CapSense_ScanExt\000"
 5619      656E7365 
 5619      5F536361 
 5619      6E457874 
 5619      00
 5620              	.LASF41:
 5621 060b 43617053 		.ascii	"CapSense_RAM_WD_BASE_STRUCT\000"
 5621      656E7365 
 5621      5F52414D 
 5621      5F57445F 
 5621      42415345 
 5622              	.LASF74:
 5623 0627 6873696F 		.ascii	"hsiomPtr\000"
 5623      6D507472 
 5623      00
 5624              	.LASF13:
 5625 0630 75696E74 		.ascii	"uint32\000"
 5625      333200
 5626              	.LASF87:
 5627 0637 70747232 		.ascii	"ptr2FltrHistory\000"
 5627      466C7472 
 5627      48697374 
 5627      6F727900 
 5628              	.LASF104:
 5629 0647 6761696E 		.ascii	"gainValue\000"
 5629      56616C75 
 5629      6500
 5630              	.LASF177:
 5631 0651 43617053 		.ascii	"CapSense_curSnsIOPtr\000"
 5631      656E7365 
 5631      5F637572 
 5631      536E7349 
 5631      4F507472 
 5632              	.LASF79:
 5633 0666 6D61736B 		.ascii	"mask\000"
 5633      00
 5634              	.LASF195:
 5635 066b 443A5C5F 		.ascii	"D:\\_Project\\_MD\\cypress_button\\EZIIC_button.cyd"
 5635      50726F6A 
 5635      6563745C 
 5635      5F4D445C 
 5635      63797072 
 5636 069a 736E00   		.ascii	"sn\000"
 5637              	.LASF143:
 5638 069d 43617053 		.ascii	"CapSense_SsSetClockDividers\000"
 5638      656E7365 
 5638      5F537353 
 5638      6574436C 
 5638      6F636B44 
 5639              	.LASF102:
 5640 06b9 43617053 		.ascii	"CapSense_OPERATION_MODE_ENUM\000"
 5640      656E7365 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 165


 5640      5F4F5045 
 5640      52415449 
 5640      4F4E5F4D 
 5641              	.LASF192:
 5642 06d6 43794465 		.ascii	"CyDelayUs\000"
 5642      6C617955 
 5642      7300
 5643              	.LASF118:
 5644 06e0 77646774 		.ascii	"wdgtIndex\000"
 5644      496E6465 
 5644      7800
 5645              	.LASF27:
 5646 06ea 43617053 		.ascii	"CapSense_SENSE_METHOD_ISX_E\000"
 5646      656E7365 
 5646      5F53454E 
 5646      53455F4D 
 5646      4554484F 
 5647              	.LASF96:
 5648 0706 6C6F6E67 		.ascii	"long double\000"
 5648      20646F75 
 5648      626C6500 
 5649              	.LASF19:
 5650 0712 72656733 		.ascii	"reg32\000"
 5650      3200
 5651              	.LASF69:
 5652 0718 736E7254 		.ascii	"snrTestScanCounter\000"
 5652      65737453 
 5652      63616E43 
 5652      6F756E74 
 5652      657200
 5653              	.LASF54:
 5654 072b 636F6E66 		.ascii	"configId\000"
 5654      69674964 
 5654      00
 5655              	.LASF86:
 5656 0734 70747232 		.ascii	"ptr2SnsRam\000"
 5656      536E7352 
 5656      616D00
 5657              	.LASF62:
 5658 073f 736E7353 		.ascii	"snsStatus\000"
 5658      74617475 
 5658      7300
 5659              	.LASF137:
 5660 0749 706F7374 		.ascii	"postScanStatus\000"
 5660      5363616E 
 5660      53746174 
 5660      757300
 5661              	.LASF39:
 5662 0758 736E7343 		.ascii	"snsClkSource\000"
 5662      6C6B536F 
 5662      75726365 
 5662      00
 5663              	.LASF189:
 5664 0765 43617053 		.ascii	"CapSense_SsCSDElectrodeCheck\000"
 5664      656E7365 
 5664      5F537343 
 5664      5344456C 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 166


 5664      65637472 
 5665              	.LASF138:
 5666 0782 43617053 		.ascii	"CapSense_SsIsrInitialize\000"
 5666      656E7365 
 5666      5F537349 
 5666      7372496E 
 5666      69746961 
 5667              	.LASF2:
 5668 079b 73686F72 		.ascii	"short int\000"
 5668      7420696E 
 5668      7400
 5669              	.LASF73:
 5670 07a5 43617053 		.ascii	"CapSense_RAM_STRUCT\000"
 5670      656E7365 
 5670      5F52414D 
 5670      5F535452 
 5670      55435400 
 5671              	.LASF129:
 5672 07b9 43617053 		.ascii	"CapSense_SsSetAllIOsState\000"
 5672      656E7365 
 5672      5F537353 
 5672      6574416C 
 5672      6C494F73 
 5673              	.LASF4:
 5674 07d3 6C6F6E67 		.ascii	"long int\000"
 5674      20696E74 
 5674      00
 5675              	.LASF60:
 5676 07dc 77646774 		.ascii	"wdgtEnable\000"
 5676      456E6162 
 5676      6C6500
 5677              	.LASF49:
 5678 07e7 64696666 		.ascii	"diff\000"
 5678      00
 5679              	.LASF57:
 5680 07ec 74756E65 		.ascii	"tunerCmd\000"
 5680      72436D64 
 5680      00
 5681              	.LASF25:
 5682 07f5 43617053 		.ascii	"CapSense_SENSE_METHOD_CSX_E\000"
 5682      656E7365 
 5682      5F53454E 
 5682      53455F4D 
 5682      4554484F 
 5683              	.LASF77:
 5684 0811 70735074 		.ascii	"psPtr\000"
 5684      7200
 5685              	.LASF115:
 5686 0817 43617053 		.ascii	"CapSense_SetupWidget\000"
 5686      656E7365 
 5686      5F536574 
 5686      75705769 
 5686      64676574 
 5687              	.LASF166:
 5688 082c 636D6F64 		.ascii	"cmodDr\000"
 5688      447200
 5689              	.LASF165:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 167


 5690 0833 636D6F64 		.ascii	"cmodHsiom\000"
 5690      4873696F 
 5690      6D00
 5691              	.LASF188:
 5692 083d 43617053 		.ascii	"CapSense_CSDCalibrateWidget\000"
 5692      656E7365 
 5692      5F435344 
 5692      43616C69 
 5692      62726174 
 5693              	.LASF103:
 5694 0859 6761696E 		.ascii	"gainReg\000"
 5694      52656700 
 5695              	.LASF44:
 5696 0861 6C656674 		.ascii	"left\000"
 5696      00
 5697              	.LASF144:
 5698 0866 43617053 		.ascii	"CapSense_CalibrateAllWidgets\000"
 5698      656E7365 
 5698      5F43616C 
 5698      69627261 
 5698      7465416C 
 5699              	.LASF182:
 5700 0883 43617053 		.ascii	"CapSense_CSDScanExt\000"
 5700      656E7365 
 5700      5F435344 
 5700      5363616E 
 5700      45787400 
 5701              	.LASF61:
 5702 0897 77646774 		.ascii	"wdgtStatus\000"
 5702      53746174 
 5702      757300
 5703              	.LASF194:
 5704 08a2 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_Sensing.c\000"
 5704      72617465 
 5704      645F536F 
 5704      75726365 
 5704      5C50536F 
 5705              	.LASF185:
 5706 08cc 43617053 		.ascii	"CapSense_CSDConnectSns\000"
 5706      656E7365 
 5706      5F435344 
 5706      436F6E6E 
 5706      65637453 
 5707              	.LASF24:
 5708 08e3 43617053 		.ascii	"CapSense_SENSE_METHOD_CSD_E\000"
 5708      656E7365 
 5708      5F53454E 
 5708      53455F4D 
 5708      4554484F 
 5709              	.LASF175:
 5710 08ff 43617053 		.ascii	"CapSense_currentSenseMethod\000"
 5710      656E7365 
 5710      5F637572 
 5710      72656E74 
 5710      53656E73 
 5711              	.LASF147:
 5712 091b 70727353 		.ascii	"prsSize\000"
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 168


 5712      697A6500 
 5713              	.LASF40:
 5714 0923 73697A65 		.ascii	"sizetype\000"
 5714      74797065 
 5714      00
 5715              	.LASF81:
 5716 092c 64725368 		.ascii	"drShift\000"
 5716      69667400 
 5717              	.LASF5:
 5718 0934 6C6F6E67 		.ascii	"long unsigned int\000"
 5718      20756E73 
 5718      69676E65 
 5718      6420696E 
 5718      7400
 5719              	.LASF112:
 5720 0946 72657456 		.ascii	"retVal\000"
 5720      616C00
 5721              	.LASF139:
 5722 094d 61646472 		.ascii	"address\000"
 5722      65737300 
 5723              	.LASF36:
 5724 0955 69646163 		.ascii	"idacMod\000"
 5724      4D6F6400 
 5725              	.LASF187:
 5726 095d 43617053 		.ascii	"CapSense_ISR_StartEx\000"
 5726      656E7365 
 5726      5F495352 
 5726      5F537461 
 5726      72744578 
 5727              	.LASF88:
 5728 0972 70747232 		.ascii	"ptr2DebounceArr\000"
 5728      4465626F 
 5728      756E6365 
 5728      41727200 
 5729              	.LASF156:
 5730 0982 43617053 		.ascii	"CapSense_SsTrimIdacs\000"
 5730      656E7365 
 5730      5F537354 
 5730      72696D49 
 5730      64616373 
 5731              	.LASF30:
 5732 0997 66696E67 		.ascii	"fingerTh\000"
 5732      65725468 
 5732      00
 5733              	.LASF48:
 5734 09a0 62736C6E 		.ascii	"bslnExt\000"
 5734      45787400 
 5735              	.LASF105:
 5736 09a8 43617053 		.ascii	"CapSense_IDAC_GAIN_TABLE_STRUCT\000"
 5736      656E7365 
 5736      5F494441 
 5736      435F4741 
 5736      494E5F54 
 5737              	.LASF42:
 5738 09c8 43617053 		.ascii	"CapSense_RAM_WD_BUTTON_STRUCT\000"
 5738      656E7365 
 5738      5F52414D 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 169


 5738      5F57445F 
 5738      42555454 
 5739              	.LASF17:
 5740 09e6 63797374 		.ascii	"cystatus\000"
 5740      61747573 
 5740      00
 5741              	.LASF1:
 5742 09ef 756E7369 		.ascii	"unsigned char\000"
 5742      676E6564 
 5742      20636861 
 5742      7200
 5743              	.LASF160:
 5744 09fd 7472696D 		.ascii	"trimValue\000"
 5744      56616C75 
 5744      6500
 5745              	.LASF9:
 5746 0a07 5F5F7569 		.ascii	"__uint32_t\000"
 5746      6E743332 
 5746      5F7400
 5747              	.LASF128:
 5748 0a12 43617053 		.ascii	"CapSense_SetPinState\000"
 5748      656E7365 
 5748      5F536574 
 5748      50696E53 
 5748      74617465 
 5749              	.LASF89:
 5750 0a27 73746174 		.ascii	"staticConfig\000"
 5750      6963436F 
 5750      6E666967 
 5750      00
 5751              	.LASF127:
 5752 0a34 696F5074 		.ascii	"ioPtr\000"
 5752      7200
 5753              	.LASF72:
 5754 0a3a 7363616E 		.ascii	"scanCurrentISC\000"
 5754      43757272 
 5754      656E7449 
 5754      534300
 5755              	.LASF85:
 5756 0a49 70747232 		.ascii	"ptr2WdgtRam\000"
 5756      57646774 
 5756      52616D00 
 5757              	.LASF21:
 5758 0a55 43617053 		.ascii	"CapSense_THRESHOLD_TYPE\000"
 5758      656E7365 
 5758      5F544852 
 5758      4553484F 
 5758      4C445F54 
 5759              	.LASF193:
 5760 0a6d 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5760      43313120 
 5760      352E342E 
 5760      31203230 
 5760      31363036 
 5761 0aa0 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 5761      20726576 
 5761      6973696F 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 170


 5761      6E203233 
 5761      37373135 
 5762 0ad3 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 5762      66756E63 
 5762      74696F6E 
 5762      2D736563 
 5762      74696F6E 
 5763              	.LASF180:
 5764 0afb 43617053 		.ascii	"CapSense_CSDScan\000"
 5764      656E7365 
 5764      5F435344 
 5764      5363616E 
 5764      00
 5765              	.LASF26:
 5766 0b0c 43617053 		.ascii	"CapSense_SENSE_METHOD_BIST_E\000"
 5766      656E7365 
 5766      5F53454E 
 5766      53455F4D 
 5766      4554484F 
 5767              	.LASF123:
 5768 0b29 73746174 		.ascii	"state\000"
 5768      6500
 5769              	.LASF125:
 5770 0b2f 656C7464 		.ascii	"eltdIndex\000"
 5770      496E6465 
 5770      7800
 5771              	.LASF116:
 5772 0b39 43617053 		.ascii	"CapSense_ScanAllWidgets\000"
 5772      656E7365 
 5772      5F536361 
 5772      6E416C6C 
 5772      57696467 
 5773              	.LASF78:
 5774 0b51 6873696F 		.ascii	"hsiomMask\000"
 5774      6D4D6173 
 5774      6B00
 5775              	.LASF38:
 5776 0b5b 736E7343 		.ascii	"snsClk\000"
 5776      6C6B00
 5777              	.LASF196:
 5778 0b62 43617053 		.ascii	"CapSense_SsSwitchSensingMode\000"
 5778      656E7365 
 5778      5F537353 
 5778      77697463 
 5778      6853656E 
 5779              	.LASF183:
 5780 0b7f 4379456E 		.ascii	"CyEnterCriticalSection\000"
 5780      74657243 
 5780      72697469 
 5780      63616C53 
 5780      65637469 
 5781              	.LASF174:
 5782 0b96 43617053 		.ascii	"CapSense_curRamSnsPtr\000"
 5782      656E7365 
 5782      5F637572 
 5782      52616D53 
 5782      6E735074 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 171


 5783              	.LASF0:
 5784 0bac 7369676E 		.ascii	"signed char\000"
 5784      65642063 
 5784      68617200 
 5785              	.LASF176:
 5786 0bb8 43617053 		.ascii	"CapSense_scanFreqIndex\000"
 5786      656E7365 
 5786      5F736361 
 5786      6E467265 
 5786      71496E64 
 5787              	.LASF47:
 5788 0bcf 62736C6E 		.ascii	"bsln\000"
 5788      00
 5789              	.LASF3:
 5790 0bd4 73686F72 		.ascii	"short unsigned int\000"
 5790      7420756E 
 5790      7369676E 
 5790      65642069 
 5790      6E7400
 5791              	.LASF170:
 5792 0be7 43617053 		.ascii	"CapSense_ioList\000"
 5792      656E7365 
 5792      5F696F4C 
 5792      69737400 
 5793              	.LASF136:
 5794 0bf7 43617053 		.ascii	"CapSense_SsPostAllWidgetsScan\000"
 5794      656E7365 
 5794      5F537350 
 5794      6F737441 
 5794      6C6C5769 
 5795              	.LASF84:
 5796 0c15 70747232 		.ascii	"ptr2SnsFlash\000"
 5796      536E7346 
 5796      6C617368 
 5796      00
 5797              	.LASF11:
 5798 0c22 75696E74 		.ascii	"uint8\000"
 5798      3800
 5799              	.LASF15:
 5800 0c28 646F7562 		.ascii	"double\000"
 5800      6C6500
 5801              	.LASF50:
 5802 0c2f 6E656742 		.ascii	"negBslnRstCnt\000"
 5802      736C6E52 
 5802      7374436E 
 5802      7400
 5803              	.LASF161:
 5804 0c3d 43617053 		.ascii	"CapSense_SsInitialize\000"
 5804      656E7365 
 5804      5F537349 
 5804      6E697469 
 5804      616C697A 
 5805              	.LASF146:
 5806 0c53 736E7343 		.ascii	"snsClkDivider\000"
 5806      6C6B4469 
 5806      76696465 
 5806      7200
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccM7U1Od.s 			page 172


 5807              	.LASF148:
 5808 0c61 6D6F6443 		.ascii	"modClkDivider\000"
 5808      6C6B4469 
 5808      76696465 
 5808      7200
 5809              	.LASF55:
 5810 0c6f 64657669 		.ascii	"deviceId\000"
 5810      63654964 
 5810      00
 5811              	.LASF117:
 5812 0c78 77696467 		.ascii	"widgetStatus\000"
 5812      65745374 
 5812      61747573 
 5812      00
 5813              	.LASF100:
 5814 0c85 43617053 		.ascii	"CapSense_BIST_CSX_SNS_CAP_E\000"
 5814      656E7365 
 5814      5F424953 
 5814      545F4353 
 5814      585F534E 
 5815              	.LASF111:
 5816 0ca1 77696467 		.ascii	"widgetId\000"
 5816      65744964 
 5816      00
 5817              	.LASF173:
 5818 0caa 43617053 		.ascii	"CapSense_requestScanAllWidget\000"
 5818      656E7365 
 5818      5F726571 
 5818      75657374 
 5818      5363616E 
 5819              	.LASF151:
 5820 0cc8 43617053 		.ascii	"CapSense_SsInitializeSourceSenseClk\000"
 5820      656E7365 
 5820      5F537349 
 5820      6E697469 
 5820      616C697A 
 5821              	.LASF178:
 5822 0cec 43617053 		.ascii	"CapSense_idacGainTable\000"
 5822      656E7365 
 5822      5F696461 
 5822      63476169 
 5822      6E546162 
 5823              	.LASF53:
 5824 0d03 43617053 		.ascii	"CapSense_RAM_SNS_LIST_STRUCT\000"
 5824      656E7365 
 5824      5F52414D 
 5824      5F534E53 
 5824      5F4C4953 
 5825              	.LASF94:
 5826 0d20 77646774 		.ascii	"wdgtArray\000"
 5826      41727261 
 5826      7900
 5827              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran

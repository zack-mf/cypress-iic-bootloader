ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_Processing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_DpInitialize,"ax",%progbits
  20              		.align	1
  21              		.global	CapSense_DpInitialize
  22              		.code	16
  23              		.thumb_func
  24              		.type	CapSense_DpInitialize, %function
  25              	CapSense_DpInitialize:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC4\\CapSense_Processing.c"
   1:Generated_Source\PSoC4/CapSense_Processing.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CapSense_Processing.c **** * \file CapSense_Processing.c
   3:Generated_Source\PSoC4/CapSense_Processing.c **** * \version 7.0
   4:Generated_Source\PSoC4/CapSense_Processing.c **** *
   5:Generated_Source\PSoC4/CapSense_Processing.c **** * \brief
   6:Generated_Source\PSoC4/CapSense_Processing.c **** *   This file provides the source code for the Data Processing module APIs
   7:Generated_Source\PSoC4/CapSense_Processing.c **** *   of the Component. The Data Processing module is responsible for the
   8:Generated_Source\PSoC4/CapSense_Processing.c **** *   low level raw counts processing provided by the sensing module, maintaining
   9:Generated_Source\PSoC4/CapSense_Processing.c **** *   baseline and difference values and performing high-level widget processing
  10:Generated_Source\PSoC4/CapSense_Processing.c **** *   like updating button status or calculating slider position.
  11:Generated_Source\PSoC4/CapSense_Processing.c **** *
  12:Generated_Source\PSoC4/CapSense_Processing.c **** * \see CapSense v7.0 Datasheet
  13:Generated_Source\PSoC4/CapSense_Processing.c **** *
  14:Generated_Source\PSoC4/CapSense_Processing.c **** *//*****************************************************************************
  15:Generated_Source\PSoC4/CapSense_Processing.c **** * Copyright (2016-2019), Cypress Semiconductor Corporation.
  16:Generated_Source\PSoC4/CapSense_Processing.c **** ********************************************************************************
  17:Generated_Source\PSoC4/CapSense_Processing.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  18:Generated_Source\PSoC4/CapSense_Processing.c **** * protected by and subject to worldwide patent protection (United States and
  19:Generated_Source\PSoC4/CapSense_Processing.c **** * foreign), United States copyright laws and international treaty provisions.
  20:Generated_Source\PSoC4/CapSense_Processing.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  21:Generated_Source\PSoC4/CapSense_Processing.c **** * license to copy, use, modify, create derivative works of, and compile the
  22:Generated_Source\PSoC4/CapSense_Processing.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  23:Generated_Source\PSoC4/CapSense_Processing.c **** * custom software in support of licensee product to be used only in conjunction
  24:Generated_Source\PSoC4/CapSense_Processing.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  25:Generated_Source\PSoC4/CapSense_Processing.c **** * Any reproduction, modification, translation, compilation, or representation of
  26:Generated_Source\PSoC4/CapSense_Processing.c **** * this software except as specified above is prohibited without the express
  27:Generated_Source\PSoC4/CapSense_Processing.c **** * written permission of Cypress.
  28:Generated_Source\PSoC4/CapSense_Processing.c **** *
  29:Generated_Source\PSoC4/CapSense_Processing.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  30:Generated_Source\PSoC4/CapSense_Processing.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 2


  31:Generated_Source\PSoC4/CapSense_Processing.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  32:Generated_Source\PSoC4/CapSense_Processing.c **** * Cypress reserves the right to make changes without further notice to the
  33:Generated_Source\PSoC4/CapSense_Processing.c **** * materials described herein. Cypress does not assume any liability arising out
  34:Generated_Source\PSoC4/CapSense_Processing.c **** * of the application or use of any product or circuit described herein. Cypress
  35:Generated_Source\PSoC4/CapSense_Processing.c **** * does not authorize its products for use as critical components in life-support
  36:Generated_Source\PSoC4/CapSense_Processing.c **** * systems where a malfunction or failure may reasonably be expected to result in
  37:Generated_Source\PSoC4/CapSense_Processing.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  38:Generated_Source\PSoC4/CapSense_Processing.c **** * support systems application implies that the manufacturer assumes all risk of
  39:Generated_Source\PSoC4/CapSense_Processing.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  40:Generated_Source\PSoC4/CapSense_Processing.c **** * limited by and subject to the applicable Cypress software license agreement.
  41:Generated_Source\PSoC4/CapSense_Processing.c **** *******************************************************************************/
  42:Generated_Source\PSoC4/CapSense_Processing.c **** 
  43:Generated_Source\PSoC4/CapSense_Processing.c **** #include "CyLib.h"
  44:Generated_Source\PSoC4/CapSense_Processing.c **** #include "cytypes.h"
  45:Generated_Source\PSoC4/CapSense_Processing.c **** #include "CapSense_Configuration.h"
  46:Generated_Source\PSoC4/CapSense_Processing.c **** #include "CapSense_Processing.h"
  47:Generated_Source\PSoC4/CapSense_Processing.c **** #include "CapSense_Filter.h"
  48:Generated_Source\PSoC4/CapSense_Processing.c **** 
  49:Generated_Source\PSoC4/CapSense_Processing.c **** #if (0u != CapSense_CENTROID_EN)
  50:Generated_Source\PSoC4/CapSense_Processing.c ****     #include "CapSense_Centroid_LL.h"
  51:Generated_Source\PSoC4/CapSense_Processing.c **** #endif /* (0 != CapSense_CENTROID_EN) */
  52:Generated_Source\PSoC4/CapSense_Processing.c **** 
  53:Generated_Source\PSoC4/CapSense_Processing.c **** #if (0 != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
  54:Generated_Source\PSoC4/CapSense_Processing.c ****     #include "CapSense_SmartSense_LL.h"
  55:Generated_Source\PSoC4/CapSense_Processing.c **** #endif /* (0 != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
  56:Generated_Source\PSoC4/CapSense_Processing.c **** 
  57:Generated_Source\PSoC4/CapSense_Processing.c **** #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
  58:Generated_Source\PSoC4/CapSense_Processing.c ****     #include "CapSense_SelfTest.h"
  59:Generated_Source\PSoC4/CapSense_Processing.c **** #endif
  60:Generated_Source\PSoC4/CapSense_Processing.c **** 
  61:Generated_Source\PSoC4/CapSense_Processing.c **** #if (CapSense_ENABLE == CapSense_CENTROID_5X5_CSD_EN)
  62:Generated_Source\PSoC4/CapSense_Processing.c ****     #include "CapSense_AdvancedCentroid_LL.h"
  63:Generated_Source\PSoC4/CapSense_Processing.c **** #endif
  64:Generated_Source\PSoC4/CapSense_Processing.c **** 
  65:Generated_Source\PSoC4/CapSense_Processing.c **** #if (CapSense_ENABLE == CapSense_POS_ADAPTIVE_IIR_FILTER_EN)
  66:Generated_Source\PSoC4/CapSense_Processing.c ****     #include "CapSense_AdaptiveFilter_LL.h"
  67:Generated_Source\PSoC4/CapSense_Processing.c **** #endif
  68:Generated_Source\PSoC4/CapSense_Processing.c **** 
  69:Generated_Source\PSoC4/CapSense_Processing.c **** #if(CapSense_ENABLE == CapSense_BALLISTIC_MULTIPLIER_EN)
  70:Generated_Source\PSoC4/CapSense_Processing.c ****     #include "CapSense_Gesture.h"
  71:Generated_Source\PSoC4/CapSense_Processing.c **** #endif
  72:Generated_Source\PSoC4/CapSense_Processing.c **** 
  73:Generated_Source\PSoC4/CapSense_Processing.c **** /**************************************************************************************************
  74:Generated_Source\PSoC4/CapSense_Processing.c **** * Local definition
  75:Generated_Source\PSoC4/CapSense_Processing.c **** ***************************************************************************************************
  76:Generated_Source\PSoC4/CapSense_Processing.c **** 
  77:Generated_Source\PSoC4/CapSense_Processing.c **** /* UINT32 constant with all odd bits set. It is used by the processing function of the Proximity wi
  78:Generated_Source\PSoC4/CapSense_Processing.c **** *  determine type of the status bit: odd bits report proximity status; even bits report touch statu
  79:Generated_Source\PSoC4/CapSense_Processing.c **** */
  80:Generated_Source\PSoC4/CapSense_Processing.c **** #define UINT32_ODD_BITS_CONST       (0x55555555u)
  81:Generated_Source\PSoC4/CapSense_Processing.c **** 
  82:Generated_Source\PSoC4/CapSense_Processing.c **** /* Default value for the Off Debounce counter when the Off Debounce is disabled */
  83:Generated_Source\PSoC4/CapSense_Processing.c **** #define DEFAULT_OFF_DEBOUNCE_VALUE  (1u)
  84:Generated_Source\PSoC4/CapSense_Processing.c **** #define PERCENTAGE_100              (100u)
  85:Generated_Source\PSoC4/CapSense_Processing.c **** #define TEMP_BUFFER_MSB_SHIFT       (16)
  86:Generated_Source\PSoC4/CapSense_Processing.c **** 
  87:Generated_Source\PSoC4/CapSense_Processing.c **** /**************************************************************************************************
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 3


  88:Generated_Source\PSoC4/CapSense_Processing.c **** * Local variables
  89:Generated_Source\PSoC4/CapSense_Processing.c **** ***************************************************************************************************
  90:Generated_Source\PSoC4/CapSense_Processing.c **** #if (0u != CapSense_CSX_MULTIPHASE_TX_EN)
  91:Generated_Source\PSoC4/CapSense_Processing.c ****     static uint16 deconvRowData[CapSense_CSX_MAX_TX_PHASE_LENGTH];
  92:Generated_Source\PSoC4/CapSense_Processing.c **** #endif
  93:Generated_Source\PSoC4/CapSense_Processing.c **** 
  94:Generated_Source\PSoC4/CapSense_Processing.c **** 
  95:Generated_Source\PSoC4/CapSense_Processing.c **** /**************************************************************************************************
  96:Generated_Source\PSoC4/CapSense_Processing.c **** * Static Function Prototypes
  97:Generated_Source\PSoC4/CapSense_Processing.c **** ***************************************************************************************************
  98:Generated_Source\PSoC4/CapSense_Processing.c **** /**
  99:Generated_Source\PSoC4/CapSense_Processing.c **** * \cond SECTION_C_INTERNAL
 100:Generated_Source\PSoC4/CapSense_Processing.c **** * \addtogroup group_c_internal
 101:Generated_Source\PSoC4/CapSense_Processing.c **** * \{
 102:Generated_Source\PSoC4/CapSense_Processing.c **** */
 103:Generated_Source\PSoC4/CapSense_Processing.c **** #if (0u != CapSense_TOTAL_LINEAR_SLIDERS)
 104:Generated_Source\PSoC4/CapSense_Processing.c ****     static CY_INLINE void DpUpdateLinSlider(
 105:Generated_Source\PSoC4/CapSense_Processing.c ****                         const uint16 newPos[], uint32 numTouches,
 106:Generated_Source\PSoC4/CapSense_Processing.c ****                         CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt,
 107:Generated_Source\PSoC4/CapSense_Processing.c ****                         CapSense_RAM_WD_SLIDER_STRUCT *ptrRamWdgt);
 108:Generated_Source\PSoC4/CapSense_Processing.c **** #endif /* #if (0u != CapSense_TOTAL_LINEAR_SLIDERS) */
 109:Generated_Source\PSoC4/CapSense_Processing.c **** 
 110:Generated_Source\PSoC4/CapSense_Processing.c **** #if (0u != CapSense_TOTAL_RADIAL_SLIDERS)
 111:Generated_Source\PSoC4/CapSense_Processing.c ****     static CY_INLINE void DpUpdateRadSlider(
 112:Generated_Source\PSoC4/CapSense_Processing.c ****                         const uint16 newPos[], uint32 numTouches,
 113:Generated_Source\PSoC4/CapSense_Processing.c ****                         CapSense_FLASH_WD_STRUCT const * ptrFlashWdgt,
 114:Generated_Source\PSoC4/CapSense_Processing.c ****                         CapSense_RAM_WD_SLIDER_STRUCT *ptrRamWdgt);
 115:Generated_Source\PSoC4/CapSense_Processing.c **** #endif /* #if (0u != CapSense_TOTAL_RADIAL_SLIDERS) */
 116:Generated_Source\PSoC4/CapSense_Processing.c **** 
 117:Generated_Source\PSoC4/CapSense_Processing.c **** #if (0u != CapSense_CSD_TOUCHPAD_WIDGET_EN)
 118:Generated_Source\PSoC4/CapSense_Processing.c ****     static CY_INLINE void CapSense_DpInitCsdTouchpad(CapSense_FLASH_WD_STRUCT const * ptrFlashWdgt)
 119:Generated_Source\PSoC4/CapSense_Processing.c **** #endif /* #if (0u != CapSense_CSD_TOUCHPAD_WIDGET_EN) */
 120:Generated_Source\PSoC4/CapSense_Processing.c **** 
 121:Generated_Source\PSoC4/CapSense_Processing.c **** #if (0u != CapSense_CSX_TOUCHPAD_WIDGET_EN)
 122:Generated_Source\PSoC4/CapSense_Processing.c ****     static CY_INLINE void CapSense_DpInitCsxTouchpad(CapSense_FLASH_WD_STRUCT const * ptrFlashWdgt)
 123:Generated_Source\PSoC4/CapSense_Processing.c **** #endif /* #if (0u != CapSense_CSX_TOUCHPAD_WIDGET_EN) */
 124:Generated_Source\PSoC4/CapSense_Processing.c **** 
 125:Generated_Source\PSoC4/CapSense_Processing.c **** #if (0u != CapSense_SLIDER_WIDGET_EN)
 126:Generated_Source\PSoC4/CapSense_Processing.c ****     static CY_INLINE void CapSense_DpInitSlider(CapSense_FLASH_WD_STRUCT const * ptrFlashWdgt);
 127:Generated_Source\PSoC4/CapSense_Processing.c **** #endif /* #if (0u != CapSense_SLIDER_WIDGET_EN) */
 128:Generated_Source\PSoC4/CapSense_Processing.c **** 
 129:Generated_Source\PSoC4/CapSense_Processing.c **** #if (0u != CapSense_CSD_MATRIX_WIDGET_EN)
 130:Generated_Source\PSoC4/CapSense_Processing.c ****     static CY_INLINE void CapSense_DpInitCsdMatrix(CapSense_FLASH_WD_STRUCT const * ptrFlashWdgt);
 131:Generated_Source\PSoC4/CapSense_Processing.c **** #endif /* #if (0u != CapSense_CSD_MATRIX_WIDGET_EN) */
 132:Generated_Source\PSoC4/CapSense_Processing.c **** 
 133:Generated_Source\PSoC4/CapSense_Processing.c **** /** \}
 134:Generated_Source\PSoC4/CapSense_Processing.c **** * \endcond */
 135:Generated_Source\PSoC4/CapSense_Processing.c **** 
 136:Generated_Source\PSoC4/CapSense_Processing.c **** #if (0u != CapSense_CSD_TOUCHPAD_WIDGET_EN)
 137:Generated_Source\PSoC4/CapSense_Processing.c **** /*******************************************************************************
 138:Generated_Source\PSoC4/CapSense_Processing.c **** * Function Name: CapSense_DpInitCsdTouchpad
 139:Generated_Source\PSoC4/CapSense_Processing.c **** ****************************************************************************//**
 140:Generated_Source\PSoC4/CapSense_Processing.c **** *
 141:Generated_Source\PSoC4/CapSense_Processing.c **** * \brief
 142:Generated_Source\PSoC4/CapSense_Processing.c **** *  Performs initialization of the CSD touchpad widget.
 143:Generated_Source\PSoC4/CapSense_Processing.c **** *   - Resets the position data to NONE
 144:Generated_Source\PSoC4/CapSense_Processing.c **** *   - Initializes the position filter history if enabled.
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 4


 145:Generated_Source\PSoC4/CapSense_Processing.c **** *
 146:Generated_Source\PSoC4/CapSense_Processing.c **** * \details
 147:Generated_Source\PSoC4/CapSense_Processing.c **** *  The position data is always reset to the CapSense_TOUCHPAD_POS_NONE value.
 148:Generated_Source\PSoC4/CapSense_Processing.c **** *  The same happens to the position filter history data if enabled.
 149:Generated_Source\PSoC4/CapSense_Processing.c **** *
 150:Generated_Source\PSoC4/CapSense_Processing.c **** *******************************************************************************/
 151:Generated_Source\PSoC4/CapSense_Processing.c **** static CY_INLINE void CapSense_DpInitCsdTouchpad(CapSense_FLASH_WD_STRUCT const * ptrFlashWdgt)
 152:Generated_Source\PSoC4/CapSense_Processing.c **** {
 153:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (CapSense_ENABLE == CapSense_CENTROID_5X5_CSD_EN)
 154:Generated_Source\PSoC4/CapSense_Processing.c ****         uint32 touchIndex;
 155:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif
 156:Generated_Source\PSoC4/CapSense_Processing.c **** 
 157:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_RAM_WD_CSD_TOUCHPAD_STRUCT *ptrWdTouchpad;
 158:Generated_Source\PSoC4/CapSense_Processing.c **** 
 159:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_POSITION_FILTER_EN)
 160:Generated_Source\PSoC4/CapSense_Processing.c ****         CapSense_TOUCHPAD_POS_HISTORY_STRUCT *ptrHistory;
 161:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif  /* #if (0u != CapSense_POSITION_FILTER_EN) */
 162:Generated_Source\PSoC4/CapSense_Processing.c **** 
 163:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN)
 164:Generated_Source\PSoC4/CapSense_Processing.c ****         ADAPTIVE_FILTER_CONTEXT_STRUCT adpContext;
 165:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN) */
 166:Generated_Source\PSoC4/CapSense_Processing.c **** 
 167:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrWdTouchpad = ptrFlashWdgt->ptr2WdgtRam;
 168:Generated_Source\PSoC4/CapSense_Processing.c **** 
 169:Generated_Source\PSoC4/CapSense_Processing.c ****     /* Reset position data */
 170:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (CapSense_ENABLE == CapSense_CENTROID_5X5_CSD_EN)
 171:Generated_Source\PSoC4/CapSense_Processing.c ****         #if (CapSense_ENABLE == CapSense_CENTROID_3X3_CSD_EN)
 172:Generated_Source\PSoC4/CapSense_Processing.c ****             if (0u != (ptrFlashWdgt->staticConfig & CapSense_CENTROID_5X5_MASK))
 173:Generated_Source\PSoC4/CapSense_Processing.c ****             {
 174:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif
 175:Generated_Source\PSoC4/CapSense_Processing.c **** 
 176:Generated_Source\PSoC4/CapSense_Processing.c ****         ptrWdTouchpad->position.touchNum = 0u;
 177:Generated_Source\PSoC4/CapSense_Processing.c **** 
 178:Generated_Source\PSoC4/CapSense_Processing.c ****         #if (0u != CapSense_POSITION_FILTER_EN)
 179:Generated_Source\PSoC4/CapSense_Processing.c ****             ptrHistory = ptrFlashWdgt->ptr2PosHistory;
 180:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* (0u != CapSense_POSITION_FILTER_EN) */
 181:Generated_Source\PSoC4/CapSense_Processing.c **** 
 182:Generated_Source\PSoC4/CapSense_Processing.c ****         for (touchIndex = 0u; touchIndex < ADVANCED_CENTROID_MAX_TOUCHES; touchIndex++)
 183:Generated_Source\PSoC4/CapSense_Processing.c ****         {
 184:Generated_Source\PSoC4/CapSense_Processing.c ****             ptrWdTouchpad->position.pos[touchIndex].x = ADVANCED_CENTROID_POSITION_NONE;
 185:Generated_Source\PSoC4/CapSense_Processing.c ****             ptrWdTouchpad->position.pos[touchIndex].y = ADVANCED_CENTROID_POSITION_NONE;
 186:Generated_Source\PSoC4/CapSense_Processing.c ****             ptrWdTouchpad->position.pos[touchIndex].zX = ADVANCED_CENTROID_POSITION_NONE;
 187:Generated_Source\PSoC4/CapSense_Processing.c ****             ptrWdTouchpad->position.pos[touchIndex].zY = ADVANCED_CENTROID_POSITION_NONE;
 188:Generated_Source\PSoC4/CapSense_Processing.c **** 
 189:Generated_Source\PSoC4/CapSense_Processing.c ****             /* Clear position filter history data if available */
 190:Generated_Source\PSoC4/CapSense_Processing.c ****             #if (0u != CapSense_POSITION_FILTER_EN)
 191:Generated_Source\PSoC4/CapSense_Processing.c ****                 if (NULL != ptrHistory)
 192:Generated_Source\PSoC4/CapSense_Processing.c ****                 {
 193:Generated_Source\PSoC4/CapSense_Processing.c ****                     CapSense_InitPosFiltersDd(&ptrHistory[touchIndex], CapSense_TOUCHPAD_POS_NONE, 
 194:Generated_Source\PSoC4/CapSense_Processing.c ****                     #if (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN)
 195:Generated_Source\PSoC4/CapSense_Processing.c ****                         AdaptiveFilter_Initialize(&ptrWdTouchpad->aiirConfig, &adpContext);
 196:Generated_Source\PSoC4/CapSense_Processing.c ****                         ptrHistory[touchIndex].xPos.posAIIRCoeff = adpContext.coefficient;
 197:Generated_Source\PSoC4/CapSense_Processing.c ****                         ptrHistory[touchIndex].yPos.posAIIRCoeff = adpContext.coefficient;
 198:Generated_Source\PSoC4/CapSense_Processing.c ****                     #endif /* (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN) */
 199:Generated_Source\PSoC4/CapSense_Processing.c ****                 }
 200:Generated_Source\PSoC4/CapSense_Processing.c ****             #endif /* (0u != CapSense_POSITION_FILTER_EN) */
 201:Generated_Source\PSoC4/CapSense_Processing.c ****         }
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 5


 202:Generated_Source\PSoC4/CapSense_Processing.c **** 
 203:Generated_Source\PSoC4/CapSense_Processing.c ****         #if (CapSense_ENABLE == CapSense_CENTROID_3X3_CSD_EN)
 204:Generated_Source\PSoC4/CapSense_Processing.c ****             }
 205:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif
 206:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif
 207:Generated_Source\PSoC4/CapSense_Processing.c **** 
 208:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (CapSense_ENABLE == CapSense_CENTROID_3X3_CSD_EN)
 209:Generated_Source\PSoC4/CapSense_Processing.c ****         if (0u != (ptrFlashWdgt->staticConfig & CapSense_CENTROID_3X3_MASK))
 210:Generated_Source\PSoC4/CapSense_Processing.c ****         {
 211:Generated_Source\PSoC4/CapSense_Processing.c ****             ptrWdTouchpad->posX = CapSense_TOUCHPAD_POS_NONE;
 212:Generated_Source\PSoC4/CapSense_Processing.c ****             ptrWdTouchpad->posY = CapSense_TOUCHPAD_POS_NONE;
 213:Generated_Source\PSoC4/CapSense_Processing.c **** 
 214:Generated_Source\PSoC4/CapSense_Processing.c ****             /* Clear position filter history data if available */
 215:Generated_Source\PSoC4/CapSense_Processing.c ****             #if (0u != CapSense_POSITION_FILTER_EN)
 216:Generated_Source\PSoC4/CapSense_Processing.c ****                 ptrHistory = ptrFlashWdgt->ptr2PosHistory;
 217:Generated_Source\PSoC4/CapSense_Processing.c ****                 CapSense_InitPosFiltersDd(ptrHistory, CapSense_TOUCHPAD_POS_NONE, CapSense_TOUCHPAD
 218:Generated_Source\PSoC4/CapSense_Processing.c **** 
 219:Generated_Source\PSoC4/CapSense_Processing.c ****                 #if (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN)
 220:Generated_Source\PSoC4/CapSense_Processing.c ****                     if (NULL != ptrHistory)
 221:Generated_Source\PSoC4/CapSense_Processing.c ****                     {
 222:Generated_Source\PSoC4/CapSense_Processing.c ****                         AdaptiveFilter_Initialize(&ptrWdTouchpad->aiirConfig, &adpContext);
 223:Generated_Source\PSoC4/CapSense_Processing.c ****                         ptrHistory->xPos.posAIIRCoeff = adpContext.coefficient;
 224:Generated_Source\PSoC4/CapSense_Processing.c ****                         ptrHistory->yPos.posAIIRCoeff = adpContext.coefficient;
 225:Generated_Source\PSoC4/CapSense_Processing.c ****                     }
 226:Generated_Source\PSoC4/CapSense_Processing.c ****                 #endif /* (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN) */
 227:Generated_Source\PSoC4/CapSense_Processing.c ****             #endif /* (0u != CapSense_POSITION_FILTER_EN) */
 228:Generated_Source\PSoC4/CapSense_Processing.c ****         }
 229:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif
 230:Generated_Source\PSoC4/CapSense_Processing.c **** }
 231:Generated_Source\PSoC4/CapSense_Processing.c **** #endif /* #if (0u != CapSense_CSD_TOUCHPAD_WIDGET_EN) */
 232:Generated_Source\PSoC4/CapSense_Processing.c **** 
 233:Generated_Source\PSoC4/CapSense_Processing.c **** #if (0u != CapSense_CSX_TOUCHPAD_WIDGET_EN)
 234:Generated_Source\PSoC4/CapSense_Processing.c **** /*******************************************************************************
 235:Generated_Source\PSoC4/CapSense_Processing.c **** * Function Name: CapSense_DpInitCsxTouchpad
 236:Generated_Source\PSoC4/CapSense_Processing.c **** ****************************************************************************//**
 237:Generated_Source\PSoC4/CapSense_Processing.c **** *
 238:Generated_Source\PSoC4/CapSense_Processing.c **** * \brief
 239:Generated_Source\PSoC4/CapSense_Processing.c **** *  Performs initialization of the CSX touchpad widget i.e. Resets the position data to NONE.
 240:Generated_Source\PSoC4/CapSense_Processing.c **** *
 241:Generated_Source\PSoC4/CapSense_Processing.c **** * \details
 242:Generated_Source\PSoC4/CapSense_Processing.c **** *  The position data is always reset to the CapSense_TOUCHPAD_POS_NONE value.
 243:Generated_Source\PSoC4/CapSense_Processing.c **** *
 244:Generated_Source\PSoC4/CapSense_Processing.c **** *******************************************************************************/
 245:Generated_Source\PSoC4/CapSense_Processing.c **** static CY_INLINE void CapSense_DpInitCsxTouchpad(CapSense_FLASH_WD_STRUCT const * ptrFlashWdgt)
 246:Generated_Source\PSoC4/CapSense_Processing.c **** {
 247:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_RAM_WD_CSX_TOUCHPAD_STRUCT *ptrWdTouchpad;
 248:Generated_Source\PSoC4/CapSense_Processing.c **** 
 249:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_POSITION_FILTER_EN)
 250:Generated_Source\PSoC4/CapSense_Processing.c ****         uint32 touchIndex;
 251:Generated_Source\PSoC4/CapSense_Processing.c ****         CapSense_TOUCHPAD_POS_HISTORY_STRUCT *ptrHistory;
 252:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif  /* #if (0u != CapSense_POSITION_FILTER_EN) */
 253:Generated_Source\PSoC4/CapSense_Processing.c **** 
 254:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN)
 255:Generated_Source\PSoC4/CapSense_Processing.c ****         ADAPTIVE_FILTER_CONTEXT_STRUCT adpContext;
 256:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN) */
 257:Generated_Source\PSoC4/CapSense_Processing.c **** 
 258:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrWdTouchpad = ptrFlashWdgt->ptr2WdgtRam;
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 6


 259:Generated_Source\PSoC4/CapSense_Processing.c **** 
 260:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_POSITION_FILTER_EN)
 261:Generated_Source\PSoC4/CapSense_Processing.c ****         ptrHistory = ptrFlashWdgt->ptr2PosHistory;
 262:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* (0u != CapSense_POSITION_FILTER_EN) */
 263:Generated_Source\PSoC4/CapSense_Processing.c **** 
 264:Generated_Source\PSoC4/CapSense_Processing.c ****     /* Reset position data for finger */
 265:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrWdTouchpad->touch[0u].x = CapSense_TOUCHPAD_POS_NONE;
 266:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrWdTouchpad->touch[0u].y = CapSense_TOUCHPAD_POS_NONE;
 267:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrWdTouchpad->touch[0u].z = LO8(CapSense_TOUCHPAD_POS_NONE);
 268:Generated_Source\PSoC4/CapSense_Processing.c **** 
 269:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (CapSense_CSX_MAX_FINGERS > 1u)
 270:Generated_Source\PSoC4/CapSense_Processing.c ****         ptrWdTouchpad->touch[1u].x = CapSense_TOUCHPAD_POS_NONE;
 271:Generated_Source\PSoC4/CapSense_Processing.c ****         ptrWdTouchpad->touch[1u].y = CapSense_TOUCHPAD_POS_NONE;
 272:Generated_Source\PSoC4/CapSense_Processing.c ****         ptrWdTouchpad->touch[1u].z = LO8(CapSense_TOUCHPAD_POS_NONE);
 273:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (CapSense_CSX_MAX_FINGERS > 1u) */
 274:Generated_Source\PSoC4/CapSense_Processing.c **** 
 275:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (CapSense_CSX_MAX_FINGERS > 2u)
 276:Generated_Source\PSoC4/CapSense_Processing.c ****         ptrWdTouchpad->touch[2u].x = CapSense_TOUCHPAD_POS_NONE;
 277:Generated_Source\PSoC4/CapSense_Processing.c ****         ptrWdTouchpad->touch[2u].y = CapSense_TOUCHPAD_POS_NONE;
 278:Generated_Source\PSoC4/CapSense_Processing.c ****         ptrWdTouchpad->touch[2u].z = LO8(CapSense_TOUCHPAD_POS_NONE);
 279:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (CapSense_CSX_MAX_FINGERS > 2u) */
 280:Generated_Source\PSoC4/CapSense_Processing.c **** 
 281:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_POSITION_FILTER_EN)
 282:Generated_Source\PSoC4/CapSense_Processing.c ****         for (touchIndex = 0u; touchIndex < CapSense_CSX_MAX_FINGERS; touchIndex++)
 283:Generated_Source\PSoC4/CapSense_Processing.c ****         {
 284:Generated_Source\PSoC4/CapSense_Processing.c ****             if (NULL != ptrHistory)
 285:Generated_Source\PSoC4/CapSense_Processing.c ****             {
 286:Generated_Source\PSoC4/CapSense_Processing.c ****                 /* Clear position filter history data if available */
 287:Generated_Source\PSoC4/CapSense_Processing.c ****                 CapSense_InitPosFiltersDd(&ptrHistory[touchIndex], CapSense_TOUCHPAD_POS_NONE, CapS
 288:Generated_Source\PSoC4/CapSense_Processing.c ****                 #if (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN)
 289:Generated_Source\PSoC4/CapSense_Processing.c ****                     AdaptiveFilter_Initialize(&ptrWdTouchpad->aiirConfig, &adpContext);
 290:Generated_Source\PSoC4/CapSense_Processing.c ****                     ptrHistory[touchIndex].xPos.posAIIRCoeff = adpContext.coefficient;
 291:Generated_Source\PSoC4/CapSense_Processing.c ****                     ptrHistory[touchIndex].yPos.posAIIRCoeff = adpContext.coefficient;
 292:Generated_Source\PSoC4/CapSense_Processing.c ****                 #endif /* (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN) */
 293:Generated_Source\PSoC4/CapSense_Processing.c ****             }
 294:Generated_Source\PSoC4/CapSense_Processing.c ****         }
 295:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* (0u != CapSense_POSITION_FILTER_EN) */
 296:Generated_Source\PSoC4/CapSense_Processing.c **** }
 297:Generated_Source\PSoC4/CapSense_Processing.c **** #endif /* #if (0u != CapSense_CSX_TOUCHPAD_WIDGET_EN) */
 298:Generated_Source\PSoC4/CapSense_Processing.c **** 
 299:Generated_Source\PSoC4/CapSense_Processing.c **** #if (0u != CapSense_SLIDER_WIDGET_EN)
 300:Generated_Source\PSoC4/CapSense_Processing.c **** /*******************************************************************************
 301:Generated_Source\PSoC4/CapSense_Processing.c **** * Function Name: CapSense_DpInitSlider
 302:Generated_Source\PSoC4/CapSense_Processing.c **** ****************************************************************************//**
 303:Generated_Source\PSoC4/CapSense_Processing.c **** *
 304:Generated_Source\PSoC4/CapSense_Processing.c **** * \brief
 305:Generated_Source\PSoC4/CapSense_Processing.c **** *  Performs initialization of the Radial and Linear Slider widget.
 306:Generated_Source\PSoC4/CapSense_Processing.c **** *   - Resets the position data to NONE
 307:Generated_Source\PSoC4/CapSense_Processing.c **** *   - Initializes the position filter history to NONE if enabled.
 308:Generated_Source\PSoC4/CapSense_Processing.c **** *
 309:Generated_Source\PSoC4/CapSense_Processing.c **** * \details
 310:Generated_Source\PSoC4/CapSense_Processing.c **** *  Position data is always reset to the CapSense_SLIDER_POS_NONE value.
 311:Generated_Source\PSoC4/CapSense_Processing.c **** *  The same happens to the position filter history data if enabled.
 312:Generated_Source\PSoC4/CapSense_Processing.c **** *
 313:Generated_Source\PSoC4/CapSense_Processing.c **** *******************************************************************************/
 314:Generated_Source\PSoC4/CapSense_Processing.c **** static CY_INLINE void CapSense_DpInitSlider(CapSense_FLASH_WD_STRUCT const * ptrFlashWdgt)
 315:Generated_Source\PSoC4/CapSense_Processing.c **** {
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 7


 316:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 idx;
 317:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_RAM_WD_SLIDER_STRUCT *ptrWdSlider;
 318:Generated_Source\PSoC4/CapSense_Processing.c **** 
 319:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_POSITION_FILTER_EN)
 320:Generated_Source\PSoC4/CapSense_Processing.c ****         CapSense_SLIDER_POS_HISTORY_STRUCT *ptrHistory;
 321:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_POSITION_FILTER_EN) */
 322:Generated_Source\PSoC4/CapSense_Processing.c **** 
 323:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN)
 324:Generated_Source\PSoC4/CapSense_Processing.c ****         ADAPTIVE_FILTER_CONTEXT_STRUCT context;
 325:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN) */
 326:Generated_Source\PSoC4/CapSense_Processing.c **** 
 327:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrWdSlider = ptrFlashWdgt->ptr2WdgtRam;
 328:Generated_Source\PSoC4/CapSense_Processing.c **** 
 329:Generated_Source\PSoC4/CapSense_Processing.c ****     /* Reset slider position data to NONE */
 330:Generated_Source\PSoC4/CapSense_Processing.c ****     for (idx = 0u; idx < CapSense_NUM_CENTROIDS; idx++)
 331:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 332:Generated_Source\PSoC4/CapSense_Processing.c ****         ptrWdSlider->position[idx] = CapSense_SLIDER_POS_NONE;
 333:Generated_Source\PSoC4/CapSense_Processing.c **** 
 334:Generated_Source\PSoC4/CapSense_Processing.c ****         #if (0u != CapSense_POSITION_FILTER_EN)
 335:Generated_Source\PSoC4/CapSense_Processing.c ****             ptrHistory = ptrFlashWdgt->ptr2PosHistory;
 336:Generated_Source\PSoC4/CapSense_Processing.c ****             if (NULL != ptrHistory)
 337:Generated_Source\PSoC4/CapSense_Processing.c ****             {
 338:Generated_Source\PSoC4/CapSense_Processing.c ****                 CapSense_InitPosFiltersSd(&ptrHistory[idx], CapSense_SLIDER_POS_NONE);
 339:Generated_Source\PSoC4/CapSense_Processing.c ****                 #if (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN)
 340:Generated_Source\PSoC4/CapSense_Processing.c ****                     AdaptiveFilter_Initialize(&ptrWdSlider->aiirConfig, &context);
 341:Generated_Source\PSoC4/CapSense_Processing.c ****                     ptrHistory->posAIIRCoeff = context.coefficient;
 342:Generated_Source\PSoC4/CapSense_Processing.c ****                 #endif /* (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN) */
 343:Generated_Source\PSoC4/CapSense_Processing.c ****             }
 344:Generated_Source\PSoC4/CapSense_Processing.c **** 
 345:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* #if (0u != CapSense_POSITION_FILTER_EN) */
 346:Generated_Source\PSoC4/CapSense_Processing.c ****     }
 347:Generated_Source\PSoC4/CapSense_Processing.c **** }
 348:Generated_Source\PSoC4/CapSense_Processing.c **** #endif /* #if (0u != CapSense_SLIDER_WIDGET_EN) */
 349:Generated_Source\PSoC4/CapSense_Processing.c **** 
 350:Generated_Source\PSoC4/CapSense_Processing.c **** #if (0u != CapSense_CSD_MATRIX_WIDGET_EN)
 351:Generated_Source\PSoC4/CapSense_Processing.c **** /*******************************************************************************
 352:Generated_Source\PSoC4/CapSense_Processing.c **** * Function Name: CapSense_DpInitCsdMatrix
 353:Generated_Source\PSoC4/CapSense_Processing.c **** ****************************************************************************//**
 354:Generated_Source\PSoC4/CapSense_Processing.c **** *
 355:Generated_Source\PSoC4/CapSense_Processing.c **** * \brief
 356:Generated_Source\PSoC4/CapSense_Processing.c **** *  Performs initialization of the CSD Matrix Buttons widget.
 357:Generated_Source\PSoC4/CapSense_Processing.c **** *   - Resets the active button position data to NONE.
 358:Generated_Source\PSoC4/CapSense_Processing.c **** *
 359:Generated_Source\PSoC4/CapSense_Processing.c **** * \details
 360:Generated_Source\PSoC4/CapSense_Processing.c **** *  Position data is always reset to the CapSense_MATRIX_POS_NONE value.
 361:Generated_Source\PSoC4/CapSense_Processing.c **** *
 362:Generated_Source\PSoC4/CapSense_Processing.c **** *******************************************************************************/
 363:Generated_Source\PSoC4/CapSense_Processing.c **** static CY_INLINE void CapSense_DpInitCsdMatrix(CapSense_FLASH_WD_STRUCT const * ptrFlashWdgt)
 364:Generated_Source\PSoC4/CapSense_Processing.c **** {
 365:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_RAM_WD_CSD_MATRIX_STRUCT *ptrRamWdgt;
 366:Generated_Source\PSoC4/CapSense_Processing.c **** 
 367:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrRamWdgt = (CapSense_RAM_WD_CSD_MATRIX_STRUCT *)ptrFlashWdgt->ptr2WdgtRam;
 368:Generated_Source\PSoC4/CapSense_Processing.c **** 
 369:Generated_Source\PSoC4/CapSense_Processing.c ****     /* Reset sensor id, row and col registers in data structure */
 370:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrRamWdgt->posRow   = CapSense_MATRIX_POS_NONE;
 371:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrRamWdgt->posCol   = CapSense_MATRIX_POS_NONE;
 372:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrRamWdgt->posSnsId = CapSense_MATRIX_POS_NONE;
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 8


 373:Generated_Source\PSoC4/CapSense_Processing.c **** }
 374:Generated_Source\PSoC4/CapSense_Processing.c **** #endif /* #if (0u != CapSense_CSD_MATRIX_WIDGET_EN) */
 375:Generated_Source\PSoC4/CapSense_Processing.c **** 
 376:Generated_Source\PSoC4/CapSense_Processing.c **** /*******************************************************************************
 377:Generated_Source\PSoC4/CapSense_Processing.c **** * Function Name: CapSense_DpInitialize
 378:Generated_Source\PSoC4/CapSense_Processing.c **** ****************************************************************************//**
 379:Generated_Source\PSoC4/CapSense_Processing.c **** *
 380:Generated_Source\PSoC4/CapSense_Processing.c **** * \brief
 381:Generated_Source\PSoC4/CapSense_Processing.c **** *  Performs initialization of the data processing FW module:
 382:Generated_Source\PSoC4/CapSense_Processing.c **** *   - Resets the de-bounce counters of all the widgets
 383:Generated_Source\PSoC4/CapSense_Processing.c **** *   - Resets the position filter history for slider and touchpad widgets
 384:Generated_Source\PSoC4/CapSense_Processing.c **** *   - Clears widget and sensor statuses
 385:Generated_Source\PSoC4/CapSense_Processing.c **** *   - Enables all the widgets.
 386:Generated_Source\PSoC4/CapSense_Processing.c **** *
 387:Generated_Source\PSoC4/CapSense_Processing.c **** * \details
 388:Generated_Source\PSoC4/CapSense_Processing.c **** *  The Button and Matrix Button widgets have individual de-bounce counter per
 389:Generated_Source\PSoC4/CapSense_Processing.c **** *  sensor for the CSD widgets and per node for the CSX widgets.
 390:Generated_Source\PSoC4/CapSense_Processing.c **** *
 391:Generated_Source\PSoC4/CapSense_Processing.c **** *  The Slider and Touchpad widgets have a single de-bounce counter per widget.
 392:Generated_Source\PSoC4/CapSense_Processing.c **** *
 393:Generated_Source\PSoC4/CapSense_Processing.c **** *  The Proximity widget has two de-bounce counters per sensor. One for the
 394:Generated_Source\PSoC4/CapSense_Processing.c **** *  proximity event and second for the touch event.
 395:Generated_Source\PSoC4/CapSense_Processing.c **** *
 396:Generated_Source\PSoC4/CapSense_Processing.c **** *  All debounce counters during initialization are set to the value of the
 397:Generated_Source\PSoC4/CapSense_Processing.c **** *  onDebounce widget parameter.
 398:Generated_Source\PSoC4/CapSense_Processing.c **** *
 399:Generated_Source\PSoC4/CapSense_Processing.c **** *******************************************************************************/
 400:Generated_Source\PSoC4/CapSense_Processing.c **** void CapSense_DpInitialize(void)
 401:Generated_Source\PSoC4/CapSense_Processing.c **** {
  28              		.loc 1 401 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
 402:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 wdgtId;
 403:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_WD_TYPE_ENUM widgetType;
 404:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_RAM_WD_BASE_STRUCT * ptrRamWdgt;
 405:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_FLASH_WD_STRUCT const * ptrFlashWdgt;
 406:Generated_Source\PSoC4/CapSense_Processing.c **** 
 407:Generated_Source\PSoC4/CapSense_Processing.c ****     for (wdgtId = 0u; wdgtId < CapSense_WDGT_STATUS_WORDS; wdgtId++)
 408:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 409:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Clear widget status */
 410:Generated_Source\PSoC4/CapSense_Processing.c ****         CapSense_dsRam.wdgtStatus[wdgtId] = 0u;
  33              		.loc 1 410 0
  34 0000 0022     		movs	r2, #0
  35 0002 0D4B     		ldr	r3, .L11
 401:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 wdgtId;
  36              		.loc 1 401 0
  37 0004 70B5     		push	{r4, r5, r6, lr}
  38              		.cfi_def_cfa_offset 16
  39              		.cfi_offset 4, -16
  40              		.cfi_offset 5, -12
  41              		.cfi_offset 6, -8
  42              		.cfi_offset 14, -4
  43              		.loc 1 410 0
  44 0006 5A61     		str	r2, [r3, #20]
  45 0008 0C4C     		ldr	r4, .L11+4
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 9


 411:Generated_Source\PSoC4/CapSense_Processing.c **** 
 412:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Enable all the widgets */
 413:Generated_Source\PSoC4/CapSense_Processing.c ****         CapSense_dsRam.wdgtEnable[wdgtId] = 0xFFFFFFFFLu;
  46              		.loc 1 413 0
  47 000a 013A     		subs	r2, r2, #1
  48 000c 0C4D     		ldr	r5, .L11+8
  49 000e 0D4E     		ldr	r6, .L11+12
  50 0010 1A61     		str	r2, [r3, #16]
  51              	.LVL1:
  52              	.L2:
 414:Generated_Source\PSoC4/CapSense_Processing.c **** 
 415:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Set all the widgets to working state if the Self-Test is not enabled */
 416:Generated_Source\PSoC4/CapSense_Processing.c ****         #if (0u != CapSense_SELF_TEST_EN)
 417:Generated_Source\PSoC4/CapSense_Processing.c ****             CapSense_dsRam.wdgtWorking[wdgtId] = 0xFFFFFFFFLu;
 418:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* #if (0u == CapSense_SELF_TEST_EN) */
 419:Generated_Source\PSoC4/CapSense_Processing.c ****     }
 420:Generated_Source\PSoC4/CapSense_Processing.c **** 
 421:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrFlashWdgt = CapSense_dsFlash.wdgtArray;
 422:Generated_Source\PSoC4/CapSense_Processing.c **** 
 423:Generated_Source\PSoC4/CapSense_Processing.c ****     for (wdgtId = CapSense_TOTAL_WIDGETS; wdgtId-- > 0u; )
  53              		.loc 1 423 0 discriminator 1
  54 0012 B542     		cmp	r5, r6
  55 0014 0FD0     		beq	.L10
 424:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 425:Generated_Source\PSoC4/CapSense_Processing.c ****         ptrRamWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdgt->ptr2WdgtRam;
 426:Generated_Source\PSoC4/CapSense_Processing.c ****         widgetType = (CapSense_WD_TYPE_ENUM)ptrFlashWdgt->wdgtType;
 427:Generated_Source\PSoC4/CapSense_Processing.c **** 
 428:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Clear all sensor statuses */
 429:Generated_Source\PSoC4/CapSense_Processing.c ****         CapSense_dsRam.snsStatus[wdgtId] = 0u;
  56              		.loc 1 429 0
  57 0016 0021     		movs	r1, #0
 426:Generated_Source\PSoC4/CapSense_Processing.c **** 
  58              		.loc 1 426 0
  59 0018 A27D     		ldrb	r2, [r4, #22]
 425:Generated_Source\PSoC4/CapSense_Processing.c ****         widgetType = (CapSense_WD_TYPE_ENUM)ptrFlashWdgt->wdgtType;
  60              		.loc 1 425 0
  61 001a 2368     		ldr	r3, [r4]
  62              	.LVL2:
  63              		.loc 1 429 0
  64 001c 2970     		strb	r1, [r5]
 430:Generated_Source\PSoC4/CapSense_Processing.c **** 
 431:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Reset de-bounce counters */
 432:Generated_Source\PSoC4/CapSense_Processing.c ****         switch (widgetType)
  65              		.loc 1 432 0
  66 001e 012A     		cmp	r2, #1
  67 0020 06D1     		bne	.L3
 433:Generated_Source\PSoC4/CapSense_Processing.c ****         {
 434:Generated_Source\PSoC4/CapSense_Processing.c ****         #if (0u != CapSense_MATRIX_WIDGET_EN)
 435:Generated_Source\PSoC4/CapSense_Processing.c ****             case CapSense_WD_MATRIX_BUTTON_E:
 436:Generated_Source\PSoC4/CapSense_Processing.c ****                 #if (0u != CapSense_CSD_MATRIX_WIDGET_EN)
 437:Generated_Source\PSoC4/CapSense_Processing.c ****                     if (CapSense_SENSE_METHOD_CSD_E == CapSense_GET_SENSE_METHOD(ptrFlashWdgt))
 438:Generated_Source\PSoC4/CapSense_Processing.c ****                     {
 439:Generated_Source\PSoC4/CapSense_Processing.c ****                         CapSense_DpInitCsdMatrix(ptrFlashWdgt);
 440:Generated_Source\PSoC4/CapSense_Processing.c ****                     }
 441:Generated_Source\PSoC4/CapSense_Processing.c ****                 #endif /* #if (0u != CapSense_CSD_MATRIX_WIDGET_EN) */
 442:Generated_Source\PSoC4/CapSense_Processing.c **** 
 443:Generated_Source\PSoC4/CapSense_Processing.c ****                 if (NULL != ptrFlashWdgt->ptr2DebounceArr)
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 10


 444:Generated_Source\PSoC4/CapSense_Processing.c ****                 {
 445:Generated_Source\PSoC4/CapSense_Processing.c ****                     /* Initialize array of debounce counters */
 446:Generated_Source\PSoC4/CapSense_Processing.c ****                     (void)memset(ptrFlashWdgt->ptr2DebounceArr,
 447:Generated_Source\PSoC4/CapSense_Processing.c ****                                  (int32)ptrRamWdgt->onDebounce,
 448:Generated_Source\PSoC4/CapSense_Processing.c ****                                  (size_t)ptrFlashWdgt->totalNumSns);
 449:Generated_Source\PSoC4/CapSense_Processing.c ****                 }
 450:Generated_Source\PSoC4/CapSense_Processing.c ****                 break;
 451:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* #if (0u != CapSense_MATRIX_WIDGET_EN) */
 452:Generated_Source\PSoC4/CapSense_Processing.c **** 
 453:Generated_Source\PSoC4/CapSense_Processing.c ****         #if (0u != CapSense_BUTTON_WIDGET_EN)
 454:Generated_Source\PSoC4/CapSense_Processing.c ****             case CapSense_WD_BUTTON_E:
 455:Generated_Source\PSoC4/CapSense_Processing.c ****                 if (NULL != ptrFlashWdgt->ptr2DebounceArr)
  68              		.loc 1 455 0
  69 0022 E068     		ldr	r0, [r4, #12]
  70 0024 8842     		cmp	r0, r1
  71 0026 03D0     		beq	.L3
 456:Generated_Source\PSoC4/CapSense_Processing.c ****                 {
 457:Generated_Source\PSoC4/CapSense_Processing.c ****                     /* Initialize array of debounce counters */
 458:Generated_Source\PSoC4/CapSense_Processing.c ****                     (void)memset(ptrFlashWdgt->ptr2DebounceArr,
  72              		.loc 1 458 0
  73 0028 A28A     		ldrh	r2, [r4, #20]
  74              	.LVL3:
  75 002a D979     		ldrb	r1, [r3, #7]
  76 002c FFF7FEFF 		bl	memset
  77              	.LVL4:
  78              	.L3:
  79 0030 1C34     		adds	r4, r4, #28
  80              	.LVL5:
  81 0032 013D     		subs	r5, r5, #1
  82              	.LVL6:
  83 0034 EDE7     		b	.L2
  84              	.LVL7:
  85              	.L10:
 459:Generated_Source\PSoC4/CapSense_Processing.c ****                                  (int32)ptrRamWdgt->onDebounce,
 460:Generated_Source\PSoC4/CapSense_Processing.c ****                                  (size_t)ptrFlashWdgt->totalNumSns);
 461:Generated_Source\PSoC4/CapSense_Processing.c ****                 }
 462:Generated_Source\PSoC4/CapSense_Processing.c ****                 break;
 463:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* #if (0u != CapSense_BUTTON_WIDGET_EN) */
 464:Generated_Source\PSoC4/CapSense_Processing.c **** 
 465:Generated_Source\PSoC4/CapSense_Processing.c ****         #if (0u != CapSense_SLIDER_WIDGET_EN)
 466:Generated_Source\PSoC4/CapSense_Processing.c ****             case CapSense_WD_LINEAR_SLIDER_E:
 467:Generated_Source\PSoC4/CapSense_Processing.c ****             case CapSense_WD_RADIAL_SLIDER_E:
 468:Generated_Source\PSoC4/CapSense_Processing.c ****                 if (NULL != ptrFlashWdgt->ptr2DebounceArr)
 469:Generated_Source\PSoC4/CapSense_Processing.c ****                 {
 470:Generated_Source\PSoC4/CapSense_Processing.c ****                     /* Initialize single debounce counter of slider */
 471:Generated_Source\PSoC4/CapSense_Processing.c ****                     *(uint8 *)(ptrFlashWdgt->ptr2DebounceArr) = ptrRamWdgt->onDebounce;
 472:Generated_Source\PSoC4/CapSense_Processing.c ****                 }
 473:Generated_Source\PSoC4/CapSense_Processing.c **** 
 474:Generated_Source\PSoC4/CapSense_Processing.c ****                 CapSense_DpInitSlider(ptrFlashWdgt);
 475:Generated_Source\PSoC4/CapSense_Processing.c **** 
 476:Generated_Source\PSoC4/CapSense_Processing.c ****                 break;
 477:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* #if (0u != CapSense_SLIDER_WIDGET_EN) */
 478:Generated_Source\PSoC4/CapSense_Processing.c **** 
 479:Generated_Source\PSoC4/CapSense_Processing.c ****         #if (0u != CapSense_TOUCHPAD_WIDGET_EN)
 480:Generated_Source\PSoC4/CapSense_Processing.c ****             case CapSense_WD_TOUCHPAD_E:
 481:Generated_Source\PSoC4/CapSense_Processing.c ****                 if (NULL != ptrFlashWdgt->ptr2DebounceArr)
 482:Generated_Source\PSoC4/CapSense_Processing.c ****                 {
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 11


 483:Generated_Source\PSoC4/CapSense_Processing.c ****                     /* Initialize single debounce counter of touchpad */
 484:Generated_Source\PSoC4/CapSense_Processing.c ****                     *(uint8 *)(ptrFlashWdgt->ptr2DebounceArr) = ptrRamWdgt->onDebounce;
 485:Generated_Source\PSoC4/CapSense_Processing.c ****                 }
 486:Generated_Source\PSoC4/CapSense_Processing.c **** 
 487:Generated_Source\PSoC4/CapSense_Processing.c ****                 #if (0u != CapSense_CSD_TOUCHPAD_WIDGET_EN)
 488:Generated_Source\PSoC4/CapSense_Processing.c ****                     if (CapSense_SENSE_METHOD_CSD_E == CapSense_GET_SENSE_METHOD(ptrFlashWdgt))
 489:Generated_Source\PSoC4/CapSense_Processing.c ****                     {
 490:Generated_Source\PSoC4/CapSense_Processing.c ****                         CapSense_DpInitCsdTouchpad(ptrFlashWdgt);
 491:Generated_Source\PSoC4/CapSense_Processing.c ****                     }
 492:Generated_Source\PSoC4/CapSense_Processing.c ****                 #endif /* #if (0u != CapSense_CSD_TOUCHPAD_WIDGET_EN) */
 493:Generated_Source\PSoC4/CapSense_Processing.c **** 
 494:Generated_Source\PSoC4/CapSense_Processing.c ****                 #if (0u != CapSense_CSX_TOUCHPAD_WIDGET_EN)
 495:Generated_Source\PSoC4/CapSense_Processing.c ****                     if (CapSense_SENSE_METHOD_CSX_E == CapSense_GET_SENSE_METHOD(ptrFlashWdgt))
 496:Generated_Source\PSoC4/CapSense_Processing.c ****                     {
 497:Generated_Source\PSoC4/CapSense_Processing.c ****                         CapSense_DpInitCsxTouchpad(ptrFlashWdgt);
 498:Generated_Source\PSoC4/CapSense_Processing.c ****                     }
 499:Generated_Source\PSoC4/CapSense_Processing.c ****                 #endif /* #if (0u != CapSense_CSX_TOUCHPAD_WIDGET_EN) */
 500:Generated_Source\PSoC4/CapSense_Processing.c **** 
 501:Generated_Source\PSoC4/CapSense_Processing.c ****                 break;
 502:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* #if (0u != CapSense_TOUCHPAD_WIDGET_EN) */
 503:Generated_Source\PSoC4/CapSense_Processing.c **** 
 504:Generated_Source\PSoC4/CapSense_Processing.c ****         #if (0u != CapSense_PROXIMITY_WIDGET_EN)
 505:Generated_Source\PSoC4/CapSense_Processing.c ****             case CapSense_WD_PROXIMITY_E:
 506:Generated_Source\PSoC4/CapSense_Processing.c ****                 if (NULL != ptrFlashWdgt->ptr2DebounceArr)
 507:Generated_Source\PSoC4/CapSense_Processing.c ****                 {
 508:Generated_Source\PSoC4/CapSense_Processing.c ****                     /* Proximity widgets have 2 de-bounce counters per sensor.
 509:Generated_Source\PSoC4/CapSense_Processing.c ****                      * Therefore the number of sensors is multiplied by 2.
 510:Generated_Source\PSoC4/CapSense_Processing.c ****                      */
 511:Generated_Source\PSoC4/CapSense_Processing.c ****                    (void)memset(ptrFlashWdgt->ptr2DebounceArr,
 512:Generated_Source\PSoC4/CapSense_Processing.c ****                                 (int32)ptrRamWdgt->onDebounce,
 513:Generated_Source\PSoC4/CapSense_Processing.c ****                                 (size_t)ptrFlashWdgt->totalNumSns * 2u);
 514:Generated_Source\PSoC4/CapSense_Processing.c ****                 }
 515:Generated_Source\PSoC4/CapSense_Processing.c ****                 break;
 516:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* #if (0u != CapSense_PROXIMITY_WIDGET_EN) */
 517:Generated_Source\PSoC4/CapSense_Processing.c **** 
 518:Generated_Source\PSoC4/CapSense_Processing.c ****         #if (0u != CapSense_ENCODERDIAL_WIDGET_EN)
 519:Generated_Source\PSoC4/CapSense_Processing.c ****             case CapSense_WD_ENCODERDIAL_E:
 520:Generated_Source\PSoC4/CapSense_Processing.c ****                 if (NULL != ptrFlashWdgt->ptr2DebounceArr)
 521:Generated_Source\PSoC4/CapSense_Processing.c ****                 {
 522:Generated_Source\PSoC4/CapSense_Processing.c ****                     /* Proximity widgets have 2 de-bounce counters per sensor.
 523:Generated_Source\PSoC4/CapSense_Processing.c ****                      * Therefore the number of sensors is multiplied by 2.
 524:Generated_Source\PSoC4/CapSense_Processing.c ****                      */
 525:Generated_Source\PSoC4/CapSense_Processing.c ****                    (void)memset(ptrFlashWdgt->ptr2DebounceArr,
 526:Generated_Source\PSoC4/CapSense_Processing.c ****                                 (int32)ptrRamWdgt->onDebounce,
 527:Generated_Source\PSoC4/CapSense_Processing.c ****                                 (size_t)ptrFlashWdgt->totalNumSns);
 528:Generated_Source\PSoC4/CapSense_Processing.c ****                 }
 529:Generated_Source\PSoC4/CapSense_Processing.c ****                 break;
 530:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* (0u != CapSense_ENCODERDIAL_WIDGET_EN) */
 531:Generated_Source\PSoC4/CapSense_Processing.c ****             default:
 532:Generated_Source\PSoC4/CapSense_Processing.c ****                 break;
 533:Generated_Source\PSoC4/CapSense_Processing.c ****         }
 534:Generated_Source\PSoC4/CapSense_Processing.c **** 
 535:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Move to next widget */
 536:Generated_Source\PSoC4/CapSense_Processing.c ****         ptrFlashWdgt++;
 537:Generated_Source\PSoC4/CapSense_Processing.c ****     }
 538:Generated_Source\PSoC4/CapSense_Processing.c **** }
  86              		.loc 1 538 0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 12


  87              		@ sp needed
  88              	.LVL8:
  89              	.LVL9:
  90 0036 70BD     		pop	{r4, r5, r6, pc}
  91              	.L12:
  92              		.align	2
  93              	.L11:
  94 0038 00000000 		.word	CapSense_dsRam
  95 003c 04000000 		.word	CapSense_dsFlash+4
  96 0040 1B000000 		.word	CapSense_dsRam+27
  97 0044 17000000 		.word	CapSense_dsRam+23
  98              		.cfi_endproc
  99              	.LFE1:
 100              		.size	CapSense_DpInitialize, .-CapSense_DpInitialize
 101              		.section	.text.CapSense_DpUpdateDifferences,"ax",%progbits
 102              		.align	1
 103              		.global	CapSense_DpUpdateDifferences
 104              		.code	16
 105              		.thumb_func
 106              		.type	CapSense_DpUpdateDifferences, %function
 107              	CapSense_DpUpdateDifferences:
 108              	.LFB5:
 539:Generated_Source\PSoC4/CapSense_Processing.c **** 
 540:Generated_Source\PSoC4/CapSense_Processing.c **** #if (0u != CapSense_TOTAL_CSX_WIDGETS)
 541:Generated_Source\PSoC4/CapSense_Processing.c **** /*******************************************************************************
 542:Generated_Source\PSoC4/CapSense_Processing.c **** * Function Name: CapSense_DpProcessCsxWidgetRawCounts
 543:Generated_Source\PSoC4/CapSense_Processing.c **** ****************************************************************************//**
 544:Generated_Source\PSoC4/CapSense_Processing.c **** *
 545:Generated_Source\PSoC4/CapSense_Processing.c **** * \brief
 546:Generated_Source\PSoC4/CapSense_Processing.c **** *  Performs default processing of the CSX raw counts.
 547:Generated_Source\PSoC4/CapSense_Processing.c **** *
 548:Generated_Source\PSoC4/CapSense_Processing.c **** * \details
 549:Generated_Source\PSoC4/CapSense_Processing.c **** *  Performs default processing of the CSX raw counts:
 550:Generated_Source\PSoC4/CapSense_Processing.c **** *   - Run Filters
 551:Generated_Source\PSoC4/CapSense_Processing.c **** *   - Update Baselines
 552:Generated_Source\PSoC4/CapSense_Processing.c **** *   - Update Differences
 553:Generated_Source\PSoC4/CapSense_Processing.c **** *   - Update Status.
 554:Generated_Source\PSoC4/CapSense_Processing.c **** *  The same process is applied to all the sensors of the specified widget.
 555:Generated_Source\PSoC4/CapSense_Processing.c **** *
 556:Generated_Source\PSoC4/CapSense_Processing.c **** * \param ptrFlashWdgt The pointer to the Flash widget structure.
 557:Generated_Source\PSoC4/CapSense_Processing.c **** *
 558:Generated_Source\PSoC4/CapSense_Processing.c **** * \return
 559:Generated_Source\PSoC4/CapSense_Processing.c **** *  Returns the status of the specified widget processing operation:
 560:Generated_Source\PSoC4/CapSense_Processing.c **** *  - CYRET_SUCCESS if operation was successfully completed;
 561:Generated_Source\PSoC4/CapSense_Processing.c **** *  - CapSense_PROCESS_BASELINE_FAILED if baseline processing of any
 562:Generated_Source\PSoC4/CapSense_Processing.c **** *    sensor of the specified widget failed. The result is concatenated with the index
 563:Generated_Source\PSoC4/CapSense_Processing.c **** *    of failed sensor.
 564:Generated_Source\PSoC4/CapSense_Processing.c **** *
 565:Generated_Source\PSoC4/CapSense_Processing.c **** *******************************************************************************/
 566:Generated_Source\PSoC4/CapSense_Processing.c **** uint32 CapSense_DpProcessCsxWidgetRawCounts(CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt)
 567:Generated_Source\PSoC4/CapSense_Processing.c **** {
 568:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 result = CYRET_SUCCESS;
 569:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 widgetType;
 570:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 snsCount;
 571:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_RAM_SNS_STRUCT *ptrSnsTmp;
 572:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrRamWdgt;
 573:Generated_Source\PSoC4/CapSense_Processing.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 13


 574:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
 575:Generated_Source\PSoC4/CapSense_Processing.c ****         CapSense_PTR_FILTER_VARIANT fltrHistV;
 576:Generated_Source\PSoC4/CapSense_Processing.c **** 
 577:Generated_Source\PSoC4/CapSense_Processing.c ****         fltrHistV.ptr = ptrFlashWdgt->ptr2FltrHistory;
 578:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
 579:Generated_Source\PSoC4/CapSense_Processing.c **** 
 580:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrSnsTmp = ptrFlashWdgt->ptr2SnsRam;
 581:Generated_Source\PSoC4/CapSense_Processing.c ****     snsCount = ptrFlashWdgt->totalNumSns;
 582:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrRamWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdgt->ptr2WdgtRam;
 583:Generated_Source\PSoC4/CapSense_Processing.c ****     widgetType = ptrFlashWdgt->wdgtType;
 584:Generated_Source\PSoC4/CapSense_Processing.c **** 
 585:Generated_Source\PSoC4/CapSense_Processing.c ****     /* Run deconvolution algorithm for the widgets with multiphase TX support */
 586:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_CSX_MULTIPHASE_TX_EN)
 587:Generated_Source\PSoC4/CapSense_Processing.c ****         if (0u != (ptrFlashWdgt->staticConfig & CapSense_MULTIPHASE_TX_MASK))
 588:Generated_Source\PSoC4/CapSense_Processing.c ****         {
 589:Generated_Source\PSoC4/CapSense_Processing.c ****             CapSense_DpDeconvolution(ptrFlashWdgt);
 590:Generated_Source\PSoC4/CapSense_Processing.c ****         }
 591:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif  /* #if (0u != CapSense_CSX_MULTIPHASE_TX_EN) */
 592:Generated_Source\PSoC4/CapSense_Processing.c **** 
 593:Generated_Source\PSoC4/CapSense_Processing.c ****     for (;snsCount-- > 0u;)
 594:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 595:Generated_Source\PSoC4/CapSense_Processing.c ****         #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
 596:Generated_Source\PSoC4/CapSense_Processing.c ****             CapSense_FtRunEnabledFiltersInternal(fltrHistV, ptrSnsTmp, widgetType);
 597:Generated_Source\PSoC4/CapSense_Processing.c ****             #if (CapSense_ALP_FILTER_EN)
 598:Generated_Source\PSoC4/CapSense_Processing.c ****                 CapSense_ConfigRunALPInternal(fltrHistV, ptrRamWdgt, ptrSnsTmp, widgetType);
 599:Generated_Source\PSoC4/CapSense_Processing.c ****             #endif
 600:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* #if (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
 601:Generated_Source\PSoC4/CapSense_Processing.c **** 
 602:Generated_Source\PSoC4/CapSense_Processing.c ****         result = CapSense_FtUpdateBaseline(ptrRamWdgt, ptrSnsTmp, widgetType);
 603:Generated_Source\PSoC4/CapSense_Processing.c **** 
 604:Generated_Source\PSoC4/CapSense_Processing.c ****         #if (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN)
 605:Generated_Source\PSoC4/CapSense_Processing.c ****             if (CYRET_SUCCESS != result)
 606:Generated_Source\PSoC4/CapSense_Processing.c ****             {
 607:Generated_Source\PSoC4/CapSense_Processing.c ****                 result = snsCount | CapSense_PROCESS_BASELINE_FAILED;
 608:Generated_Source\PSoC4/CapSense_Processing.c ****             }
 609:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN) */
 610:Generated_Source\PSoC4/CapSense_Processing.c **** 
 611:Generated_Source\PSoC4/CapSense_Processing.c ****         CapSense_DpUpdateDifferences(ptrRamWdgt, ptrSnsTmp);
 612:Generated_Source\PSoC4/CapSense_Processing.c **** 
 613:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Move pointers to the next sensor and filter history objects */
 614:Generated_Source\PSoC4/CapSense_Processing.c ****         ptrSnsTmp++;
 615:Generated_Source\PSoC4/CapSense_Processing.c **** 
 616:Generated_Source\PSoC4/CapSense_Processing.c ****         #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
 617:Generated_Source\PSoC4/CapSense_Processing.c ****             CapSense_INC_REG_FLTR_OBJ(fltrHistV);
 618:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* #if (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
 619:Generated_Source\PSoC4/CapSense_Processing.c ****     }
 620:Generated_Source\PSoC4/CapSense_Processing.c ****     return result;
 621:Generated_Source\PSoC4/CapSense_Processing.c **** }
 622:Generated_Source\PSoC4/CapSense_Processing.c **** 
 623:Generated_Source\PSoC4/CapSense_Processing.c **** /*******************************************************************************
 624:Generated_Source\PSoC4/CapSense_Processing.c **** * Function Name: CapSense_DpProcessCsxSensorRawCountsExt
 625:Generated_Source\PSoC4/CapSense_Processing.c **** ****************************************************************************//**
 626:Generated_Source\PSoC4/CapSense_Processing.c **** *
 627:Generated_Source\PSoC4/CapSense_Processing.c **** * \brief
 628:Generated_Source\PSoC4/CapSense_Processing.c **** *   Performs customized processing of the CSX sensor raw counts.
 629:Generated_Source\PSoC4/CapSense_Processing.c **** *
 630:Generated_Source\PSoC4/CapSense_Processing.c **** * \details
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 14


 631:Generated_Source\PSoC4/CapSense_Processing.c **** *   Performs customized processing of the CSX sensor raw counts.
 632:Generated_Source\PSoC4/CapSense_Processing.c **** *
 633:Generated_Source\PSoC4/CapSense_Processing.c **** *   If all bits are set at once the default processing order will take place.
 634:Generated_Source\PSoC4/CapSense_Processing.c **** *   For the custom order this API can be called multiple times and execute one task at a time.
 635:Generated_Source\PSoC4/CapSense_Processing.c **** *
 636:Generated_Source\PSoC4/CapSense_Processing.c **** * \param ptrFlashWdgt The pointer to the Flash Widget Object.
 637:Generated_Source\PSoC4/CapSense_Processing.c **** * \param curSnsPtr    The pointer to the specific RAM Sensor Object.
 638:Generated_Source\PSoC4/CapSense_Processing.c **** * \param fltrHistV    The pointer to the Filter History Object in RAM associated with specific sens
 639:Generated_Source\PSoC4/CapSense_Processing.c **** * \param mode         The bit-mask with the data processing tasks to be executed.
 640:Generated_Source\PSoC4/CapSense_Processing.c **** *   The mode parameters can take the following values:
 641:Generated_Source\PSoC4/CapSense_Processing.c **** *    - CapSense_PROCESS_FILTER     (0x01) Run Firmware Filter
 642:Generated_Source\PSoC4/CapSense_Processing.c **** *    - CapSense_PROCESS_BASELINE   (0x02) Update Baselines
 643:Generated_Source\PSoC4/CapSense_Processing.c **** *    - CapSense_PROCESS_DIFFCOUNTS (0x04) Update Difference Counts
 644:Generated_Source\PSoC4/CapSense_Processing.c **** *    - CapSense_PROCESS_ALL               Execute all tasks
 645:Generated_Source\PSoC4/CapSense_Processing.c **** *
 646:Generated_Source\PSoC4/CapSense_Processing.c **** * \return
 647:Generated_Source\PSoC4/CapSense_Processing.c **** *  Returns the status of the specified sensor processing operation:
 648:Generated_Source\PSoC4/CapSense_Processing.c **** *  - CYRET_SUCCESS if operation was successfully completed;
 649:Generated_Source\PSoC4/CapSense_Processing.c **** *  - CapSense_PROCESS_BASELINE_FAILED if baseline processing of any
 650:Generated_Source\PSoC4/CapSense_Processing.c **** *    sensor of the specified widget failed. The result is concatenated with the index
 651:Generated_Source\PSoC4/CapSense_Processing.c **** *    of failed sensor.
 652:Generated_Source\PSoC4/CapSense_Processing.c **** *
 653:Generated_Source\PSoC4/CapSense_Processing.c **** *******************************************************************************/
 654:Generated_Source\PSoC4/CapSense_Processing.c **** uint32 CapSense_DpProcessCsxSensorRawCountsExt(
 655:Generated_Source\PSoC4/CapSense_Processing.c ****                 CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt,
 656:Generated_Source\PSoC4/CapSense_Processing.c ****                 CapSense_RAM_SNS_STRUCT *curSnsPtr,
 657:Generated_Source\PSoC4/CapSense_Processing.c ****                 CapSense_PTR_FILTER_VARIANT fltrHistV,
 658:Generated_Source\PSoC4/CapSense_Processing.c ****                 uint32 mode)
 659:Generated_Source\PSoC4/CapSense_Processing.c **** {
 660:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32  result = CYRET_SUCCESS;
 661:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32  widgetType;
 662:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrRamWdgt;
 663:Generated_Source\PSoC4/CapSense_Processing.c **** 
 664:Generated_Source\PSoC4/CapSense_Processing.c ****     widgetType = ptrFlashWdgt->wdgtType;
 665:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrRamWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdgt->ptr2WdgtRam;
 666:Generated_Source\PSoC4/CapSense_Processing.c **** 
 667:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
 668:Generated_Source\PSoC4/CapSense_Processing.c ****         if (0u != (mode & CapSense_PROCESS_FILTER))
 669:Generated_Source\PSoC4/CapSense_Processing.c ****         {
 670:Generated_Source\PSoC4/CapSense_Processing.c ****             CapSense_FtRunEnabledFiltersInternal(fltrHistV, curSnsPtr, widgetType);
 671:Generated_Source\PSoC4/CapSense_Processing.c ****             #if (CapSense_ALP_FILTER_EN)
 672:Generated_Source\PSoC4/CapSense_Processing.c ****                 CapSense_ConfigRunALPInternal(fltrHistV, ptrRamWdgt, curSnsPtr, widgetType);
 673:Generated_Source\PSoC4/CapSense_Processing.c ****             #endif
 674:Generated_Source\PSoC4/CapSense_Processing.c ****         }
 675:Generated_Source\PSoC4/CapSense_Processing.c ****     #else
 676:Generated_Source\PSoC4/CapSense_Processing.c ****         (void)fltrHistV; /* This parameter is unused in such configurations */
 677:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
 678:Generated_Source\PSoC4/CapSense_Processing.c **** 
 679:Generated_Source\PSoC4/CapSense_Processing.c ****     if (0u != (mode & CapSense_PROCESS_BASELINE))
 680:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 681:Generated_Source\PSoC4/CapSense_Processing.c ****         result = CapSense_FtUpdateBaseline(ptrRamWdgt, curSnsPtr, widgetType);
 682:Generated_Source\PSoC4/CapSense_Processing.c ****     }
 683:Generated_Source\PSoC4/CapSense_Processing.c **** 
 684:Generated_Source\PSoC4/CapSense_Processing.c ****     if (0u != (mode & CapSense_PROCESS_DIFFCOUNTS))
 685:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 686:Generated_Source\PSoC4/CapSense_Processing.c ****         CapSense_DpUpdateDifferences(ptrRamWdgt, curSnsPtr);
 687:Generated_Source\PSoC4/CapSense_Processing.c ****     }
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 15


 688:Generated_Source\PSoC4/CapSense_Processing.c ****     return result;
 689:Generated_Source\PSoC4/CapSense_Processing.c **** }
 690:Generated_Source\PSoC4/CapSense_Processing.c **** 
 691:Generated_Source\PSoC4/CapSense_Processing.c **** 
 692:Generated_Source\PSoC4/CapSense_Processing.c **** /*******************************************************************************
 693:Generated_Source\PSoC4/CapSense_Processing.c **** * Function Name: CapSense_DpProcessCsxWidgetStatus
 694:Generated_Source\PSoC4/CapSense_Processing.c **** ****************************************************************************//**
 695:Generated_Source\PSoC4/CapSense_Processing.c **** *
 696:Generated_Source\PSoC4/CapSense_Processing.c **** * \brief
 697:Generated_Source\PSoC4/CapSense_Processing.c **** *   Updates the status of the CSX widget in the Data Structure.
 698:Generated_Source\PSoC4/CapSense_Processing.c **** *
 699:Generated_Source\PSoC4/CapSense_Processing.c **** * \details
 700:Generated_Source\PSoC4/CapSense_Processing.c **** *  This API determines the type of widget and runs the appropriate function
 701:Generated_Source\PSoC4/CapSense_Processing.c **** *  that implements the status update algorithm for this type of widget.
 702:Generated_Source\PSoC4/CapSense_Processing.c **** *
 703:Generated_Source\PSoC4/CapSense_Processing.c **** *  When the widget-specific processing completes this API updates the snsStatus
 704:Generated_Source\PSoC4/CapSense_Processing.c **** *  and wdgtStatus registers in the data structure. The wdgtStatus register
 705:Generated_Source\PSoC4/CapSense_Processing.c **** *  is a bitmask were each bit corresponds to the specific widget identified by
 706:Generated_Source\PSoC4/CapSense_Processing.c **** *  the widget index. When the bit is set the widget is active (touched);
 707:Generated_Source\PSoC4/CapSense_Processing.c **** *
 708:Generated_Source\PSoC4/CapSense_Processing.c **** *  Depending on the type of widget the snsStatus register may contain either
 709:Generated_Source\PSoC4/CapSense_Processing.c **** *  status of each widget node (active/non-active) or in case of the CSX Touchpad
 710:Generated_Source\PSoC4/CapSense_Processing.c **** *  is contains the number of touches. In both cases 0 means that widget is not
 711:Generated_Source\PSoC4/CapSense_Processing.c **** *  active.
 712:Generated_Source\PSoC4/CapSense_Processing.c **** *
 713:Generated_Source\PSoC4/CapSense_Processing.c **** * \param widgetId     The widget ID number.
 714:Generated_Source\PSoC4/CapSense_Processing.c **** * \param ptrFlashWdgt The pointer to the Flash Widget Object.
 715:Generated_Source\PSoC4/CapSense_Processing.c **** *
 716:Generated_Source\PSoC4/CapSense_Processing.c **** *******************************************************************************/
 717:Generated_Source\PSoC4/CapSense_Processing.c **** void CapSense_DpProcessCsxWidgetStatus(uint32 widgetId, CapSense_FLASH_WD_STRUCT const *ptrFlashWdg
 718:Generated_Source\PSoC4/CapSense_Processing.c **** {
 719:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 sensorStatus;
 720:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 wdStatusIndex;
 721:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 wdStatusMask;
 722:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_WD_TYPE_ENUM widgetType;
 723:Generated_Source\PSoC4/CapSense_Processing.c **** 
 724:Generated_Source\PSoC4/CapSense_Processing.c ****     widgetType = (CapSense_WD_TYPE_ENUM)ptrFlashWdgt->wdgtType;
 725:Generated_Source\PSoC4/CapSense_Processing.c ****     sensorStatus = CapSense_dsRam.snsStatus[widgetId];
 726:Generated_Source\PSoC4/CapSense_Processing.c **** 
 727:Generated_Source\PSoC4/CapSense_Processing.c ****     switch (widgetType)
 728:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 729:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_BUTTON_WIDGET_EN)
 730:Generated_Source\PSoC4/CapSense_Processing.c ****         case CapSense_WD_BUTTON_E:
 731:Generated_Source\PSoC4/CapSense_Processing.c ****             sensorStatus = CapSense_DpProcessButton(sensorStatus, ptrFlashWdgt);
 732:Generated_Source\PSoC4/CapSense_Processing.c ****             break;
 733:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_BUTTON_WIDGET_EN) */
 734:Generated_Source\PSoC4/CapSense_Processing.c **** 
 735:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_CSX_MATRIX_WIDGET_EN)
 736:Generated_Source\PSoC4/CapSense_Processing.c ****         case CapSense_WD_MATRIX_BUTTON_E:
 737:Generated_Source\PSoC4/CapSense_Processing.c ****             sensorStatus = CapSense_DpProcessButton(sensorStatus, ptrFlashWdgt);
 738:Generated_Source\PSoC4/CapSense_Processing.c ****             break;
 739:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_CSX_MATRIX_WIDGET_EN) */
 740:Generated_Source\PSoC4/CapSense_Processing.c **** 
 741:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_CSX_TOUCHPAD_WIDGET_EN)
 742:Generated_Source\PSoC4/CapSense_Processing.c ****         case CapSense_WD_TOUCHPAD_E:
 743:Generated_Source\PSoC4/CapSense_Processing.c ****             sensorStatus = CapSense_DpProcessCsxTouchpad(sensorStatus, ptrFlashWdgt);
 744:Generated_Source\PSoC4/CapSense_Processing.c ****             break;
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 16


 745:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_CSX_TOUCHPAD_WIDGET_EN) */
 746:Generated_Source\PSoC4/CapSense_Processing.c **** 
 747:Generated_Source\PSoC4/CapSense_Processing.c ****     default:
 748:Generated_Source\PSoC4/CapSense_Processing.c ****         CYASSERT(0u);
 749:Generated_Source\PSoC4/CapSense_Processing.c ****         break;
 750:Generated_Source\PSoC4/CapSense_Processing.c ****     }
 751:Generated_Source\PSoC4/CapSense_Processing.c **** 
 752:Generated_Source\PSoC4/CapSense_Processing.c ****     /* Update sensor status in the data structure */
 753:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_dsRam.snsStatus[widgetId] = (CapSense_SNS_STS_TYPE)sensorStatus;
 754:Generated_Source\PSoC4/CapSense_Processing.c **** 
 755:Generated_Source\PSoC4/CapSense_Processing.c ****     /* The next two lines calculate index and bitmask of the widget status bit in the wdgtStatus ar
 756:Generated_Source\PSoC4/CapSense_Processing.c ****     wdStatusIndex = CapSense_GET_WDGT_STATUS_INDEX(widgetId);
 757:Generated_Source\PSoC4/CapSense_Processing.c ****     wdStatusMask = CapSense_GET_WDGT_STATUS_MASK(widgetId);
 758:Generated_Source\PSoC4/CapSense_Processing.c **** 
 759:Generated_Source\PSoC4/CapSense_Processing.c ****     /* Check if there are active sensors and update widget status accordingly */
 760:Generated_Source\PSoC4/CapSense_Processing.c ****     if (0u == sensorStatus)
 761:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 762:Generated_Source\PSoC4/CapSense_Processing.c ****         CapSense_dsRam.wdgtStatus[wdStatusIndex] &= ~wdStatusMask;
 763:Generated_Source\PSoC4/CapSense_Processing.c ****     }
 764:Generated_Source\PSoC4/CapSense_Processing.c ****     else
 765:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 766:Generated_Source\PSoC4/CapSense_Processing.c ****         CapSense_dsRam.wdgtStatus[wdStatusIndex] |= wdStatusMask;
 767:Generated_Source\PSoC4/CapSense_Processing.c ****     }
 768:Generated_Source\PSoC4/CapSense_Processing.c **** }
 769:Generated_Source\PSoC4/CapSense_Processing.c **** #endif /* #if CapSense_TOTAL_CSX_WIDGETS */
 770:Generated_Source\PSoC4/CapSense_Processing.c **** 
 771:Generated_Source\PSoC4/CapSense_Processing.c **** #if (0u != CapSense_TOTAL_ISX_WIDGETS)
 772:Generated_Source\PSoC4/CapSense_Processing.c **** /*******************************************************************************
 773:Generated_Source\PSoC4/CapSense_Processing.c **** * Function Name: CapSense_DpProcessIsxWidgetRawCounts
 774:Generated_Source\PSoC4/CapSense_Processing.c **** ****************************************************************************//**
 775:Generated_Source\PSoC4/CapSense_Processing.c **** *
 776:Generated_Source\PSoC4/CapSense_Processing.c **** * \brief
 777:Generated_Source\PSoC4/CapSense_Processing.c **** *  Performs default processing of the ISX raw counts.
 778:Generated_Source\PSoC4/CapSense_Processing.c **** *
 779:Generated_Source\PSoC4/CapSense_Processing.c **** * \details
 780:Generated_Source\PSoC4/CapSense_Processing.c **** *  Performs default processing of the ISX raw counts:
 781:Generated_Source\PSoC4/CapSense_Processing.c **** *   - Run Filters
 782:Generated_Source\PSoC4/CapSense_Processing.c **** *   - Update Baselines
 783:Generated_Source\PSoC4/CapSense_Processing.c **** *   - Update Differences
 784:Generated_Source\PSoC4/CapSense_Processing.c **** *   - Update Status.
 785:Generated_Source\PSoC4/CapSense_Processing.c **** *  The same process is applied to all the sensors of the specified widget.
 786:Generated_Source\PSoC4/CapSense_Processing.c **** *
 787:Generated_Source\PSoC4/CapSense_Processing.c **** * \param ptrFlashWdgt The pointer to the Flash widget structure.
 788:Generated_Source\PSoC4/CapSense_Processing.c **** *
 789:Generated_Source\PSoC4/CapSense_Processing.c **** * \return
 790:Generated_Source\PSoC4/CapSense_Processing.c **** *  Returns the status of the specified widget processing operation:
 791:Generated_Source\PSoC4/CapSense_Processing.c **** *  - CYRET_SUCCESS if operation was successfully completed;
 792:Generated_Source\PSoC4/CapSense_Processing.c **** *  - CapSense_PROCESS_BASELINE_FAILED if baseline processing of any
 793:Generated_Source\PSoC4/CapSense_Processing.c **** *    sensor of the specified widget failed. The result is concatenated with the index
 794:Generated_Source\PSoC4/CapSense_Processing.c **** *    of failed sensor.
 795:Generated_Source\PSoC4/CapSense_Processing.c **** *
 796:Generated_Source\PSoC4/CapSense_Processing.c **** *******************************************************************************/
 797:Generated_Source\PSoC4/CapSense_Processing.c **** uint32 CapSense_DpProcessIsxWidgetRawCounts(CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt)
 798:Generated_Source\PSoC4/CapSense_Processing.c **** {
 799:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 result = CYRET_SUCCESS;
 800:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 widgetType;
 801:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 snsCount;
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 17


 802:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_RAM_SNS_STRUCT *ptrSns;
 803:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrRamWdgt;
 804:Generated_Source\PSoC4/CapSense_Processing.c **** 
 805:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
 806:Generated_Source\PSoC4/CapSense_Processing.c ****         CapSense_PTR_FILTER_VARIANT fltrHistV;
 807:Generated_Source\PSoC4/CapSense_Processing.c **** 
 808:Generated_Source\PSoC4/CapSense_Processing.c ****         fltrHistV.ptr = ptrFlashWdgt->ptr2FltrHistory;
 809:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
 810:Generated_Source\PSoC4/CapSense_Processing.c **** 
 811:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrSns = ptrFlashWdgt->ptr2SnsRam;
 812:Generated_Source\PSoC4/CapSense_Processing.c ****     snsCount = ptrFlashWdgt->totalNumSns;
 813:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrRamWdgt = ptrFlashWdgt->ptr2WdgtRam;
 814:Generated_Source\PSoC4/CapSense_Processing.c ****     widgetType = ptrFlashWdgt->wdgtType;
 815:Generated_Source\PSoC4/CapSense_Processing.c **** 
 816:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_ISX_SKIP_OVSMPL_SPECIFIC_NODES)
 817:Generated_Source\PSoC4/CapSense_Processing.c ****         if (0u != ptrSns->resolution)
 818:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif
 819:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 820:Generated_Source\PSoC4/CapSense_Processing.c ****         for(;snsCount-- > 0u;)
 821:Generated_Source\PSoC4/CapSense_Processing.c ****         {
 822:Generated_Source\PSoC4/CapSense_Processing.c ****             #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
 823:Generated_Source\PSoC4/CapSense_Processing.c ****                 CapSense_FtRunEnabledFiltersInternal(fltrHistV, ptrSns, widgetType);
 824:Generated_Source\PSoC4/CapSense_Processing.c ****             #endif /* #if (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
 825:Generated_Source\PSoC4/CapSense_Processing.c **** 
 826:Generated_Source\PSoC4/CapSense_Processing.c ****             result = CapSense_FtUpdateBaseline(ptrRamWdgt, ptrSns, widgetType);
 827:Generated_Source\PSoC4/CapSense_Processing.c **** 
 828:Generated_Source\PSoC4/CapSense_Processing.c ****             #if (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN)
 829:Generated_Source\PSoC4/CapSense_Processing.c ****                 if (CYRET_SUCCESS != result)
 830:Generated_Source\PSoC4/CapSense_Processing.c ****                 {
 831:Generated_Source\PSoC4/CapSense_Processing.c ****                     result = CapSense_PROCESS_BASELINE_FAILED;
 832:Generated_Source\PSoC4/CapSense_Processing.c ****                 }
 833:Generated_Source\PSoC4/CapSense_Processing.c ****             #endif /* (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN) */
 834:Generated_Source\PSoC4/CapSense_Processing.c **** 
 835:Generated_Source\PSoC4/CapSense_Processing.c ****             CapSense_DpUpdateDifferences(ptrRamWdgt, ptrSns);
 836:Generated_Source\PSoC4/CapSense_Processing.c ****             ptrSns++;
 837:Generated_Source\PSoC4/CapSense_Processing.c **** 
 838:Generated_Source\PSoC4/CapSense_Processing.c ****             #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
 839:Generated_Source\PSoC4/CapSense_Processing.c ****                 CapSense_INC_FLTR_OBJ_VARIANT(0u, fltrHistV);
 840:Generated_Source\PSoC4/CapSense_Processing.c ****             #endif /* #if (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
 841:Generated_Source\PSoC4/CapSense_Processing.c ****         }
 842:Generated_Source\PSoC4/CapSense_Processing.c ****     }
 843:Generated_Source\PSoC4/CapSense_Processing.c **** 
 844:Generated_Source\PSoC4/CapSense_Processing.c ****     return result;
 845:Generated_Source\PSoC4/CapSense_Processing.c **** }
 846:Generated_Source\PSoC4/CapSense_Processing.c **** 
 847:Generated_Source\PSoC4/CapSense_Processing.c **** /*******************************************************************************
 848:Generated_Source\PSoC4/CapSense_Processing.c **** * Function Name: CapSense_DpProcessIsxSensorRawCountsExt
 849:Generated_Source\PSoC4/CapSense_Processing.c **** ****************************************************************************//**
 850:Generated_Source\PSoC4/CapSense_Processing.c **** *
 851:Generated_Source\PSoC4/CapSense_Processing.c **** * \brief
 852:Generated_Source\PSoC4/CapSense_Processing.c **** *   Performs customized processing of the ISX sensor raw counts.
 853:Generated_Source\PSoC4/CapSense_Processing.c **** *
 854:Generated_Source\PSoC4/CapSense_Processing.c **** * \details
 855:Generated_Source\PSoC4/CapSense_Processing.c **** *   Performs customized processing of the ISX sensor raw counts.
 856:Generated_Source\PSoC4/CapSense_Processing.c **** *
 857:Generated_Source\PSoC4/CapSense_Processing.c **** *   If all bits are set at once the default processing order will take place.
 858:Generated_Source\PSoC4/CapSense_Processing.c **** *   For the custom order this API can be called multiple times and execute one task at a time.
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 18


 859:Generated_Source\PSoC4/CapSense_Processing.c **** *
 860:Generated_Source\PSoC4/CapSense_Processing.c **** * \param ptrFlashWdgt The pointer to the Flash Widget Object.
 861:Generated_Source\PSoC4/CapSense_Processing.c **** * \param ptrSns       The pointer to the specific RAM Sensor Object.
 862:Generated_Source\PSoC4/CapSense_Processing.c **** * \param fltrHistV    The pointer to the Filter History Object in RAM associated with specific sens
 863:Generated_Source\PSoC4/CapSense_Processing.c **** * \param mode         The bit-mask with the data processing tasks to be executed.
 864:Generated_Source\PSoC4/CapSense_Processing.c **** *   The mode parameters can take the following values:
 865:Generated_Source\PSoC4/CapSense_Processing.c **** *    - CapSense_PROCESS_FILTER     (0x01) Run Firmware Filter
 866:Generated_Source\PSoC4/CapSense_Processing.c **** *    - CapSense_PROCESS_BASELINE   (0x02) Update Baselines
 867:Generated_Source\PSoC4/CapSense_Processing.c **** *    - CapSense_PROCESS_DIFFCOUNTS (0x04) Update Difference Counts
 868:Generated_Source\PSoC4/CapSense_Processing.c **** *    - CapSense_PROCESS_ALL               Execute all tasks
 869:Generated_Source\PSoC4/CapSense_Processing.c **** *
 870:Generated_Source\PSoC4/CapSense_Processing.c **** * \return
 871:Generated_Source\PSoC4/CapSense_Processing.c **** *  Returns the status of the specified sensor processing operation:
 872:Generated_Source\PSoC4/CapSense_Processing.c **** *  - CYRET_SUCCESS if operation was successfully completed;
 873:Generated_Source\PSoC4/CapSense_Processing.c **** *  - CapSense_PROCESS_BASELINE_FAILED if baseline processing of any
 874:Generated_Source\PSoC4/CapSense_Processing.c **** *    sensor of the specified widget failed. The result is concatenated with the index
 875:Generated_Source\PSoC4/CapSense_Processing.c **** *    of failed sensor.
 876:Generated_Source\PSoC4/CapSense_Processing.c **** *
 877:Generated_Source\PSoC4/CapSense_Processing.c **** *******************************************************************************/
 878:Generated_Source\PSoC4/CapSense_Processing.c **** uint32 CapSense_DpProcessIsxSensorRawCountsExt(
 879:Generated_Source\PSoC4/CapSense_Processing.c ****                 CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt,
 880:Generated_Source\PSoC4/CapSense_Processing.c ****                 CapSense_RAM_SNS_STRUCT *ptrSns,
 881:Generated_Source\PSoC4/CapSense_Processing.c ****                 CapSense_PTR_FILTER_VARIANT fltrHistV,
 882:Generated_Source\PSoC4/CapSense_Processing.c ****                 uint32 mode)
 883:Generated_Source\PSoC4/CapSense_Processing.c **** {
 884:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32  result = CYRET_SUCCESS;
 885:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32  widgetType;
 886:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrRamWdgt;
 887:Generated_Source\PSoC4/CapSense_Processing.c **** 
 888:Generated_Source\PSoC4/CapSense_Processing.c ****     widgetType = ptrFlashWdgt->wdgtType;
 889:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrRamWdgt = ptrFlashWdgt->ptr2WdgtRam;
 890:Generated_Source\PSoC4/CapSense_Processing.c **** 
 891:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
 892:Generated_Source\PSoC4/CapSense_Processing.c ****         if (0u != (mode & CapSense_PROCESS_FILTER))
 893:Generated_Source\PSoC4/CapSense_Processing.c ****         {
 894:Generated_Source\PSoC4/CapSense_Processing.c ****             CapSense_FtRunEnabledFiltersInternal(fltrHistV, ptrSns, widgetType);
 895:Generated_Source\PSoC4/CapSense_Processing.c ****         }
 896:Generated_Source\PSoC4/CapSense_Processing.c ****     #else
 897:Generated_Source\PSoC4/CapSense_Processing.c ****         (void)fltrHistV; /* This parameter is unused in such configurations */
 898:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
 899:Generated_Source\PSoC4/CapSense_Processing.c **** 
 900:Generated_Source\PSoC4/CapSense_Processing.c ****     if (0u != (mode & CapSense_PROCESS_BASELINE))
 901:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 902:Generated_Source\PSoC4/CapSense_Processing.c ****         result = CapSense_FtUpdateBaseline(ptrRamWdgt, ptrSns, widgetType);
 903:Generated_Source\PSoC4/CapSense_Processing.c ****     }
 904:Generated_Source\PSoC4/CapSense_Processing.c **** 
 905:Generated_Source\PSoC4/CapSense_Processing.c ****     if (0u != (mode & CapSense_PROCESS_DIFFCOUNTS))
 906:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 907:Generated_Source\PSoC4/CapSense_Processing.c ****         CapSense_DpUpdateDifferences(ptrRamWdgt, ptrSns);
 908:Generated_Source\PSoC4/CapSense_Processing.c ****     }
 909:Generated_Source\PSoC4/CapSense_Processing.c ****     return result;
 910:Generated_Source\PSoC4/CapSense_Processing.c **** }
 911:Generated_Source\PSoC4/CapSense_Processing.c **** 
 912:Generated_Source\PSoC4/CapSense_Processing.c **** 
 913:Generated_Source\PSoC4/CapSense_Processing.c **** /*******************************************************************************
 914:Generated_Source\PSoC4/CapSense_Processing.c **** * Function Name: CapSense_DpProcessIsxWidgetStatus
 915:Generated_Source\PSoC4/CapSense_Processing.c **** ****************************************************************************//**
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 19


 916:Generated_Source\PSoC4/CapSense_Processing.c **** *
 917:Generated_Source\PSoC4/CapSense_Processing.c **** * \brief
 918:Generated_Source\PSoC4/CapSense_Processing.c **** *   Updates the status of the ISX widget in the Data Structure.
 919:Generated_Source\PSoC4/CapSense_Processing.c **** *
 920:Generated_Source\PSoC4/CapSense_Processing.c **** * \details
 921:Generated_Source\PSoC4/CapSense_Processing.c **** *  This API determines the type of widget and runs the appropriate function
 922:Generated_Source\PSoC4/CapSense_Processing.c **** *  that implements the status update algorithm for this type of widget.
 923:Generated_Source\PSoC4/CapSense_Processing.c **** *
 924:Generated_Source\PSoC4/CapSense_Processing.c **** *  When the widget-specific processing completes this API updates the snsStatus
 925:Generated_Source\PSoC4/CapSense_Processing.c **** *  and wdgtStatus registers in the data structure. The wdgtStatus register
 926:Generated_Source\PSoC4/CapSense_Processing.c **** *  is a bitmask were each bit corresponds to the specific widget identified by
 927:Generated_Source\PSoC4/CapSense_Processing.c **** *  the widget index. When the bit is set the widget is active (touched);
 928:Generated_Source\PSoC4/CapSense_Processing.c **** *
 929:Generated_Source\PSoC4/CapSense_Processing.c **** *  Depending on the type of widget the snsStatus register may contain either
 930:Generated_Source\PSoC4/CapSense_Processing.c **** *  status of each widget node (active/non-active) or in case of the ISX Touchpad
 931:Generated_Source\PSoC4/CapSense_Processing.c **** *  is contains the number of touches. In both cases 0 means that widget is not
 932:Generated_Source\PSoC4/CapSense_Processing.c **** *  active.
 933:Generated_Source\PSoC4/CapSense_Processing.c **** *
 934:Generated_Source\PSoC4/CapSense_Processing.c **** * \param wdgtId       The widget index number.
 935:Generated_Source\PSoC4/CapSense_Processing.c **** * \param ptrFlashWdgt The pointer to the Flash Widget Object.
 936:Generated_Source\PSoC4/CapSense_Processing.c **** *
 937:Generated_Source\PSoC4/CapSense_Processing.c **** *******************************************************************************/
 938:Generated_Source\PSoC4/CapSense_Processing.c **** void CapSense_DpProcessIsxWidgetStatus(uint32 wdgtId, CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt)
 939:Generated_Source\PSoC4/CapSense_Processing.c **** {
 940:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 sensorStatus;
 941:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 wdStatusIndex;
 942:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 wdStatusMask;
 943:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_WD_TYPE_ENUM widgetType;
 944:Generated_Source\PSoC4/CapSense_Processing.c **** 
 945:Generated_Source\PSoC4/CapSense_Processing.c ****     widgetType = (CapSense_WD_TYPE_ENUM)ptrFlashWdgt->wdgtType;
 946:Generated_Source\PSoC4/CapSense_Processing.c ****     sensorStatus = CapSense_dsRam.snsStatus[wdgtId];
 947:Generated_Source\PSoC4/CapSense_Processing.c **** 
 948:Generated_Source\PSoC4/CapSense_Processing.c ****     switch (widgetType)
 949:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 950:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_PROXIMITY_WIDGET_EN)
 951:Generated_Source\PSoC4/CapSense_Processing.c ****         case CapSense_WD_PROXIMITY_E:
 952:Generated_Source\PSoC4/CapSense_Processing.c ****             sensorStatus = CapSense_DpProcessProximity(sensorStatus, ptrFlashWdgt);
 953:Generated_Source\PSoC4/CapSense_Processing.c ****             break;
 954:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_Proximity_WIDGET_EN) */
 955:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_ENCODERDIAL_WIDGET_EN)
 956:Generated_Source\PSoC4/CapSense_Processing.c ****         case CapSense_WD_ENCODERDIAL_E:
 957:Generated_Source\PSoC4/CapSense_Processing.c ****             sensorStatus = CapSense_DpProcessEncoderDial(sensorStatus, ptrFlashWdgt);
 958:Generated_Source\PSoC4/CapSense_Processing.c ****             break;
 959:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_Proximity_WIDGET_EN) */
 960:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_BUTTON_WIDGET_EN)
 961:Generated_Source\PSoC4/CapSense_Processing.c ****         case CapSense_WD_BUTTON_E:
 962:Generated_Source\PSoC4/CapSense_Processing.c ****             sensorStatus = CapSense_DpProcessButton(sensorStatus, ptrFlashWdgt);
 963:Generated_Source\PSoC4/CapSense_Processing.c ****             break;
 964:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_Proximity_WIDGET_EN) */
 965:Generated_Source\PSoC4/CapSense_Processing.c **** 
 966:Generated_Source\PSoC4/CapSense_Processing.c ****     default:
 967:Generated_Source\PSoC4/CapSense_Processing.c ****         CYASSERT(0u);
 968:Generated_Source\PSoC4/CapSense_Processing.c ****         break;
 969:Generated_Source\PSoC4/CapSense_Processing.c ****     }
 970:Generated_Source\PSoC4/CapSense_Processing.c **** 
 971:Generated_Source\PSoC4/CapSense_Processing.c ****     /* Update sensor status in the data structure */
 972:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_dsRam.snsStatus[wdgtId] = (CapSense_SNS_STS_TYPE)sensorStatus;
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 20


 973:Generated_Source\PSoC4/CapSense_Processing.c **** 
 974:Generated_Source\PSoC4/CapSense_Processing.c ****     /* The next two lines calculate index and bitmask of the widget status bit in the wdgtStatus ar
 975:Generated_Source\PSoC4/CapSense_Processing.c ****     wdStatusIndex = CapSense_GET_WDGT_STATUS_INDEX(wdgtId);
 976:Generated_Source\PSoC4/CapSense_Processing.c ****     wdStatusMask = CapSense_GET_WDGT_STATUS_MASK(wdgtId);
 977:Generated_Source\PSoC4/CapSense_Processing.c **** 
 978:Generated_Source\PSoC4/CapSense_Processing.c ****     /* Check if there are active sensors and update widget status accordingly */
 979:Generated_Source\PSoC4/CapSense_Processing.c ****     if (0u == sensorStatus)
 980:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 981:Generated_Source\PSoC4/CapSense_Processing.c ****         CapSense_dsRam.wdgtStatus[wdStatusIndex] &= ~wdStatusMask;
 982:Generated_Source\PSoC4/CapSense_Processing.c ****     }
 983:Generated_Source\PSoC4/CapSense_Processing.c ****     else
 984:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 985:Generated_Source\PSoC4/CapSense_Processing.c ****         CapSense_dsRam.wdgtStatus[wdStatusIndex] |= wdStatusMask;
 986:Generated_Source\PSoC4/CapSense_Processing.c ****     }
 987:Generated_Source\PSoC4/CapSense_Processing.c **** }
 988:Generated_Source\PSoC4/CapSense_Processing.c **** #endif /* #if CapSense_TOTAL_ISX_WIDGETS */
 989:Generated_Source\PSoC4/CapSense_Processing.c **** 
 990:Generated_Source\PSoC4/CapSense_Processing.c **** #if (0u != CapSense_TOTAL_CSD_WIDGETS)
 991:Generated_Source\PSoC4/CapSense_Processing.c **** /*******************************************************************************
 992:Generated_Source\PSoC4/CapSense_Processing.c **** * Function Name: CapSense_DpProcessCsdWidgetRawCounts
 993:Generated_Source\PSoC4/CapSense_Processing.c **** ****************************************************************************//**
 994:Generated_Source\PSoC4/CapSense_Processing.c **** *
 995:Generated_Source\PSoC4/CapSense_Processing.c **** * \brief
 996:Generated_Source\PSoC4/CapSense_Processing.c **** *   Performs default processing for the CSD widget raw counts.
 997:Generated_Source\PSoC4/CapSense_Processing.c **** *
 998:Generated_Source\PSoC4/CapSense_Processing.c **** * \details
 999:Generated_Source\PSoC4/CapSense_Processing.c **** *   Performs default processing for the CSD widget raw counts:
1000:Generated_Source\PSoC4/CapSense_Processing.c **** *    - Run Filters
1001:Generated_Source\PSoC4/CapSense_Processing.c **** *    - Update Thresholds (FW Auto-tuning)
1002:Generated_Source\PSoC4/CapSense_Processing.c **** *    - Update Baselines
1003:Generated_Source\PSoC4/CapSense_Processing.c **** *    - Update Differences.
1004:Generated_Source\PSoC4/CapSense_Processing.c **** *   The process is applied to all widget's sensors.
1005:Generated_Source\PSoC4/CapSense_Processing.c **** *
1006:Generated_Source\PSoC4/CapSense_Processing.c **** * \param ptrFlashWdgt The pointer to the Flash Widget Object.
1007:Generated_Source\PSoC4/CapSense_Processing.c **** *
1008:Generated_Source\PSoC4/CapSense_Processing.c **** * \return
1009:Generated_Source\PSoC4/CapSense_Processing.c **** *  Returns the status of the specified widget processing operation:
1010:Generated_Source\PSoC4/CapSense_Processing.c **** *  - CYRET_SUCCESS if operation was successfully completed;
1011:Generated_Source\PSoC4/CapSense_Processing.c **** *  - CapSense_PROCESS_BASELINE_FAILED if baseline processing of any
1012:Generated_Source\PSoC4/CapSense_Processing.c **** *    sensor of the specified widget failed. The result is concatenated with the index
1013:Generated_Source\PSoC4/CapSense_Processing.c **** *    of failed sensor.
1014:Generated_Source\PSoC4/CapSense_Processing.c **** *
1015:Generated_Source\PSoC4/CapSense_Processing.c **** *******************************************************************************/
1016:Generated_Source\PSoC4/CapSense_Processing.c **** uint32 CapSense_DpProcessCsdWidgetRawCounts(CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt)
1017:Generated_Source\PSoC4/CapSense_Processing.c **** {
1018:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32  result = CYRET_SUCCESS;
1019:Generated_Source\PSoC4/CapSense_Processing.c **** 
1020:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN)
1021:Generated_Source\PSoC4/CapSense_Processing.c ****         uint32 bslnTstResult = CYRET_SUCCESS;
1022:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN) */
1023:Generated_Source\PSoC4/CapSense_Processing.c **** 
1024:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32  widgetType;
1025:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32  snsId;
1026:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_RAM_SNS_STRUCT *ptrSnsTmp;
1027:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrRamWdgt;
1028:Generated_Source\PSoC4/CapSense_Processing.c **** 
1029:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 21


1030:Generated_Source\PSoC4/CapSense_Processing.c ****         /* The noise envelope data is available only when Full CSD Auto-Tuning is enabled */
1031:Generated_Source\PSoC4/CapSense_Processing.c ****         SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT *ptrNoiseEnvelope;
1032:Generated_Source\PSoC4/CapSense_Processing.c ****         #if (CapSense_ENABLE == CapSense_PROXIMITY_WIDGET_EN)
1033:Generated_Source\PSoC4/CapSense_Processing.c ****             uint32  proximityThreshold;
1034:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* (0 != CapSense_PROXIMITY_WIDGET_EN) */
1035:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
1036:Generated_Source\PSoC4/CapSense_Processing.c **** 
1037:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
1038:Generated_Source\PSoC4/CapSense_Processing.c ****         CapSense_PTR_FILTER_VARIANT fltrHistV;
1039:Generated_Source\PSoC4/CapSense_Processing.c **** 
1040:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Determine if widget type is proximity */
1041:Generated_Source\PSoC4/CapSense_Processing.c ****         uint32 isProxWdgt = (CapSense_GET_WIDGET_TYPE(ptrFlashWdgt) == CapSense_WD_PROXIMITY_E) ? 1
1042:Generated_Source\PSoC4/CapSense_Processing.c **** 
1043:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Get pointer to the filter history object */
1044:Generated_Source\PSoC4/CapSense_Processing.c ****         fltrHistV.ptr = ptrFlashWdgt->ptr2FltrHistory;
1045:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
1046:Generated_Source\PSoC4/CapSense_Processing.c **** 
1047:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrSnsTmp = ptrFlashWdgt->ptr2SnsRam;
1048:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrRamWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdgt->ptr2WdgtRam;
1049:Generated_Source\PSoC4/CapSense_Processing.c ****     widgetType = ptrFlashWdgt->wdgtType;
1050:Generated_Source\PSoC4/CapSense_Processing.c **** 
1051:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
1052:Generated_Source\PSoC4/CapSense_Processing.c ****         ptrNoiseEnvelope = ptrFlashWdgt->ptr2NoiseEnvlp;
1053:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
1054:Generated_Source\PSoC4/CapSense_Processing.c **** 
1055:Generated_Source\PSoC4/CapSense_Processing.c ****     /* Iterate through all widget's sensors */
1056:Generated_Source\PSoC4/CapSense_Processing.c ****     for(snsId = 0u; snsId < ptrFlashWdgt->totalNumSns; snsId++)
1057:Generated_Source\PSoC4/CapSense_Processing.c ****     {
1058:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Run all enabled filter on specified widget's sensor */
1059:Generated_Source\PSoC4/CapSense_Processing.c ****         #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
1060:Generated_Source\PSoC4/CapSense_Processing.c ****             CapSense_FtRunEnabledFiltersInternal(fltrHistV, ptrSnsTmp, widgetType);
1061:Generated_Source\PSoC4/CapSense_Processing.c ****             #if (CapSense_ALP_FILTER_EN)
1062:Generated_Source\PSoC4/CapSense_Processing.c ****                 CapSense_ConfigRunALPInternal(fltrHistV, ptrRamWdgt, ptrSnsTmp, widgetType);
1063:Generated_Source\PSoC4/CapSense_Processing.c ****             #endif
1064:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* #if (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
1065:Generated_Source\PSoC4/CapSense_Processing.c **** 
1066:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Run auto-tuning activities */
1067:Generated_Source\PSoC4/CapSense_Processing.c ****         #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
1068:Generated_Source\PSoC4/CapSense_Processing.c ****             SmartSense_RunNoiseEnvelope(ptrSnsTmp->raw[0u], ptrRamWdgt->sigPFC, ptrNoiseEnvelope);
1069:Generated_Source\PSoC4/CapSense_Processing.c ****             CapSense_DpUpdateThresholds(ptrRamWdgt, ptrNoiseEnvelope, snsId);
1070:Generated_Source\PSoC4/CapSense_Processing.c **** 
1071:Generated_Source\PSoC4/CapSense_Processing.c ****             /* Calculate Proximity Touch Threshold in SmartSense mode based on Finger Threshold and
1072:Generated_Source\PSoC4/CapSense_Processing.c ****             #if (CapSense_ENABLE == CapSense_PROXIMITY_WIDGET_EN)
1073:Generated_Source\PSoC4/CapSense_Processing.c ****                 if (CapSense_WD_PROXIMITY_E == CapSense_GET_WIDGET_TYPE(ptrFlashWdgt))
1074:Generated_Source\PSoC4/CapSense_Processing.c ****                 {
1075:Generated_Source\PSoC4/CapSense_Processing.c ****                     proximityThreshold = ((uint32)ptrRamWdgt->fingerTh * CapSense_PROX_TOUCH_COEFF)
1076:Generated_Source\PSoC4/CapSense_Processing.c ****                     if ((((1Lu) << CapSense_THRESHOLD_SIZE) - 1u) < proximityThreshold)
1077:Generated_Source\PSoC4/CapSense_Processing.c ****                     {
1078:Generated_Source\PSoC4/CapSense_Processing.c ****                         proximityThreshold = ((1Lu) << CapSense_THRESHOLD_SIZE) - 1u;
1079:Generated_Source\PSoC4/CapSense_Processing.c ****                     }
1080:Generated_Source\PSoC4/CapSense_Processing.c ****                     ((CapSense_RAM_WD_PROXIMITY_STRUCT *)ptrFlashWdgt->ptr2WdgtRam)->proxTouchTh =
1081:Generated_Source\PSoC4/CapSense_Processing.c ****                         (CapSense_THRESHOLD_TYPE)proximityThreshold;
1082:Generated_Source\PSoC4/CapSense_Processing.c ****                 }
1083:Generated_Source\PSoC4/CapSense_Processing.c ****             #endif /* (0 != CapSense_PROXIMITY_WIDGET_EN) */
1084:Generated_Source\PSoC4/CapSense_Processing.c **** 
1085:Generated_Source\PSoC4/CapSense_Processing.c ****             /* Move to next noise-envelope object */
1086:Generated_Source\PSoC4/CapSense_Processing.c ****             ptrNoiseEnvelope++;
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 22


1087:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
1088:Generated_Source\PSoC4/CapSense_Processing.c **** 
1089:Generated_Source\PSoC4/CapSense_Processing.c ****         #if (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN)
1090:Generated_Source\PSoC4/CapSense_Processing.c ****             bslnTstResult = CapSense_FtUpdateBaseline(ptrRamWdgt, ptrSnsTmp, widgetType);
1091:Generated_Source\PSoC4/CapSense_Processing.c ****             if ((CYRET_SUCCESS != bslnTstResult) && (CYRET_SUCCESS == result))
1092:Generated_Source\PSoC4/CapSense_Processing.c ****             {
1093:Generated_Source\PSoC4/CapSense_Processing.c ****                 result = snsId | CapSense_PROCESS_BASELINE_FAILED;
1094:Generated_Source\PSoC4/CapSense_Processing.c ****             }
1095:Generated_Source\PSoC4/CapSense_Processing.c ****         #else /* (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN) */
1096:Generated_Source\PSoC4/CapSense_Processing.c ****             result = CapSense_FtUpdateBaseline(ptrRamWdgt, ptrSnsTmp, widgetType);
1097:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN) */
1098:Generated_Source\PSoC4/CapSense_Processing.c **** 
1099:Generated_Source\PSoC4/CapSense_Processing.c ****         CapSense_DpUpdateDifferences(ptrRamWdgt, ptrSnsTmp);
1100:Generated_Source\PSoC4/CapSense_Processing.c **** 
1101:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Move to next sensor object */
1102:Generated_Source\PSoC4/CapSense_Processing.c ****         ptrSnsTmp++;
1103:Generated_Source\PSoC4/CapSense_Processing.c **** 
1104:Generated_Source\PSoC4/CapSense_Processing.c ****         #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
1105:Generated_Source\PSoC4/CapSense_Processing.c ****             /* Move to the next filter history object */
1106:Generated_Source\PSoC4/CapSense_Processing.c ****             CapSense_INC_FLTR_OBJ_VARIANT(isProxWdgt, fltrHistV);
1107:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* #if (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
1108:Generated_Source\PSoC4/CapSense_Processing.c ****     }
1109:Generated_Source\PSoC4/CapSense_Processing.c ****     return result;
1110:Generated_Source\PSoC4/CapSense_Processing.c **** }
1111:Generated_Source\PSoC4/CapSense_Processing.c **** 
1112:Generated_Source\PSoC4/CapSense_Processing.c **** 
1113:Generated_Source\PSoC4/CapSense_Processing.c **** /*******************************************************************************
1114:Generated_Source\PSoC4/CapSense_Processing.c **** * Function Name: CapSense_DpProcessCsdSensorRawCountsExt
1115:Generated_Source\PSoC4/CapSense_Processing.c **** ****************************************************************************//**
1116:Generated_Source\PSoC4/CapSense_Processing.c **** *
1117:Generated_Source\PSoC4/CapSense_Processing.c **** * \brief
1118:Generated_Source\PSoC4/CapSense_Processing.c **** *   Performs customized processing of the CSD sensor raw counts.
1119:Generated_Source\PSoC4/CapSense_Processing.c **** *
1120:Generated_Source\PSoC4/CapSense_Processing.c **** * \details
1121:Generated_Source\PSoC4/CapSense_Processing.c **** *   Performs customized processing of the CSD sensor raw counts.
1122:Generated_Source\PSoC4/CapSense_Processing.c **** *
1123:Generated_Source\PSoC4/CapSense_Processing.c **** *   Note that this API updates data associated only with the sensor. It cannot be used to update
1124:Generated_Source\PSoC4/CapSense_Processing.c **** *   widget status.
1125:Generated_Source\PSoC4/CapSense_Processing.c **** *
1126:Generated_Source\PSoC4/CapSense_Processing.c **** * \param ptrFlashWdgt The pointer to the Flash widget structure.
1127:Generated_Source\PSoC4/CapSense_Processing.c **** * \param curSnsPtr    The pointer to the sensor object in RAM.
1128:Generated_Source\PSoC4/CapSense_Processing.c **** * \param fltrHistV    The pointer to the Filter History Object in RAM.
1129:Generated_Source\PSoC4/CapSense_Processing.c **** * \param mode         The bit-mask with the data processing tasks to be executed.
1130:Generated_Source\PSoC4/CapSense_Processing.c **** *   The mode parameters can take the following values:
1131:Generated_Source\PSoC4/CapSense_Processing.c **** *    - CapSense_PROCESS_FILTER     (0x01) Run Firmware Filter
1132:Generated_Source\PSoC4/CapSense_Processing.c **** *    - CapSense_PROCESS_BASELINE   (0x02) Update Baselines
1133:Generated_Source\PSoC4/CapSense_Processing.c **** *    - CapSense_PROCESS_DIFFCOUNTS (0x04) Update Difference Counts
1134:Generated_Source\PSoC4/CapSense_Processing.c **** *    - CapSense_PROCESS_CALC_NOISE (0x08) Calculate Noise (only if FW Tuning is enabled)
1135:Generated_Source\PSoC4/CapSense_Processing.c **** *    - CapSense_PROCESS_THRESHOLDS (0x10) Update Thresholds (only if FW Tuning is enabled)
1136:Generated_Source\PSoC4/CapSense_Processing.c **** *    - CapSense_PROCESS_ALL               Execute all tasks
1137:Generated_Source\PSoC4/CapSense_Processing.c **** *
1138:Generated_Source\PSoC4/CapSense_Processing.c **** * \return
1139:Generated_Source\PSoC4/CapSense_Processing.c **** *  Returns the status of the specified sensor processing operation:
1140:Generated_Source\PSoC4/CapSense_Processing.c **** *  - CYRET_SUCCESS if operation was successfully completed.
1141:Generated_Source\PSoC4/CapSense_Processing.c **** *  - CapSense_PROCESS_BASELINE_FAILED if baseline processing of any
1142:Generated_Source\PSoC4/CapSense_Processing.c **** *    sensor of the specified widget failed. The result is concatenated with the index
1143:Generated_Source\PSoC4/CapSense_Processing.c **** *    of failed sensor.
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 23


1144:Generated_Source\PSoC4/CapSense_Processing.c **** *
1145:Generated_Source\PSoC4/CapSense_Processing.c **** *******************************************************************************/
1146:Generated_Source\PSoC4/CapSense_Processing.c **** uint32 CapSense_DpProcessCsdSensorRawCountsExt(
1147:Generated_Source\PSoC4/CapSense_Processing.c ****                 CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt,
1148:Generated_Source\PSoC4/CapSense_Processing.c ****                 CapSense_RAM_SNS_STRUCT *curSnsPtr,
1149:Generated_Source\PSoC4/CapSense_Processing.c ****                 CapSense_PTR_FILTER_VARIANT fltrHistV,
1150:Generated_Source\PSoC4/CapSense_Processing.c ****                  uint32 mode)
1151:Generated_Source\PSoC4/CapSense_Processing.c **** {
1152:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 result = CYRET_SUCCESS;
1153:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32  widgetType;
1154:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrRamWdgt;
1155:Generated_Source\PSoC4/CapSense_Processing.c **** 
1156:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
1157:Generated_Source\PSoC4/CapSense_Processing.c ****         SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT *ptrNoiseEnvelope;
1158:Generated_Source\PSoC4/CapSense_Processing.c ****         #if (CapSense_ENABLE == CapSense_PROXIMITY_WIDGET_EN)
1159:Generated_Source\PSoC4/CapSense_Processing.c ****             uint32  proximityThreshold;
1160:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* (0 != CapSense_PROXIMITY_WIDGET_EN) */
1161:Generated_Source\PSoC4/CapSense_Processing.c **** 
1162:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Need to specify pointer to corresponding sensor's noise-envelope object.*/
1163:Generated_Source\PSoC4/CapSense_Processing.c ****         ptrNoiseEnvelope = ptrFlashWdgt->ptr2NoiseEnvlp;
1164:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
1165:Generated_Source\PSoC4/CapSense_Processing.c **** 
1166:Generated_Source\PSoC4/CapSense_Processing.c ****     widgetType = ptrFlashWdgt->wdgtType;
1167:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrRamWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdgt->ptr2WdgtRam;
1168:Generated_Source\PSoC4/CapSense_Processing.c **** 
1169:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
1170:Generated_Source\PSoC4/CapSense_Processing.c ****         if (0u != (mode & CapSense_PROCESS_FILTER))
1171:Generated_Source\PSoC4/CapSense_Processing.c ****         {
1172:Generated_Source\PSoC4/CapSense_Processing.c ****             CapSense_FtRunEnabledFiltersInternal(fltrHistV, curSnsPtr, widgetType);
1173:Generated_Source\PSoC4/CapSense_Processing.c ****             #if (CapSense_ALP_FILTER_EN)
1174:Generated_Source\PSoC4/CapSense_Processing.c ****                 CapSense_ConfigRunALPInternal(fltrHistV, ptrRamWdgt, curSnsPtr, widgetType);
1175:Generated_Source\PSoC4/CapSense_Processing.c ****             #endif
1176:Generated_Source\PSoC4/CapSense_Processing.c ****         }
1177:Generated_Source\PSoC4/CapSense_Processing.c ****     #else
1178:Generated_Source\PSoC4/CapSense_Processing.c ****         (void)fltrHistV; /* This parameter is unused in such configurations */
1179:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
1180:Generated_Source\PSoC4/CapSense_Processing.c **** 
1181:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
1182:Generated_Source\PSoC4/CapSense_Processing.c ****         if (0u != (mode & CapSense_PROCESS_CALC_NOISE))
1183:Generated_Source\PSoC4/CapSense_Processing.c ****         {
1184:Generated_Source\PSoC4/CapSense_Processing.c ****             SmartSense_RunNoiseEnvelope(curSnsPtr->raw[0u], ptrRamWdgt->sigPFC, ptrNoiseEnvelope);
1185:Generated_Source\PSoC4/CapSense_Processing.c ****         }
1186:Generated_Source\PSoC4/CapSense_Processing.c **** 
1187:Generated_Source\PSoC4/CapSense_Processing.c ****         if (0u != (mode & CapSense_PROCESS_THRESHOLDS))
1188:Generated_Source\PSoC4/CapSense_Processing.c ****         {
1189:Generated_Source\PSoC4/CapSense_Processing.c ****             CapSense_DpUpdateThresholds(ptrRamWdgt, ptrNoiseEnvelope, 0u);
1190:Generated_Source\PSoC4/CapSense_Processing.c **** 
1191:Generated_Source\PSoC4/CapSense_Processing.c ****             /* Calculate Proximity Touch Threshold in SmartSense mode based on Finger Threshold and
1192:Generated_Source\PSoC4/CapSense_Processing.c ****             #if (CapSense_ENABLE == CapSense_PROXIMITY_WIDGET_EN)
1193:Generated_Source\PSoC4/CapSense_Processing.c ****                 if (CapSense_WD_PROXIMITY_E == CapSense_GET_WIDGET_TYPE(ptrFlashWdgt))
1194:Generated_Source\PSoC4/CapSense_Processing.c ****                 {
1195:Generated_Source\PSoC4/CapSense_Processing.c ****                     proximityThreshold = ((uint32)ptrRamWdgt->fingerTh * CapSense_PROX_TOUCH_COEFF)
1196:Generated_Source\PSoC4/CapSense_Processing.c ****                     if ((((1Lu) << CapSense_THRESHOLD_SIZE) - 1u) < proximityThreshold)
1197:Generated_Source\PSoC4/CapSense_Processing.c ****                     {
1198:Generated_Source\PSoC4/CapSense_Processing.c ****                         proximityThreshold = ((1Lu) << CapSense_THRESHOLD_SIZE) - 1u;
1199:Generated_Source\PSoC4/CapSense_Processing.c ****                     }
1200:Generated_Source\PSoC4/CapSense_Processing.c ****                     ((CapSense_RAM_WD_PROXIMITY_STRUCT *)ptrFlashWdgt->ptr2WdgtRam)->proxTouchTh =
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 24


1201:Generated_Source\PSoC4/CapSense_Processing.c ****                         (CapSense_THRESHOLD_TYPE)proximityThreshold;
1202:Generated_Source\PSoC4/CapSense_Processing.c ****                 }
1203:Generated_Source\PSoC4/CapSense_Processing.c ****             #endif /* (0 != CapSense_PROXIMITY_WIDGET_EN) */
1204:Generated_Source\PSoC4/CapSense_Processing.c ****         }
1205:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
1206:Generated_Source\PSoC4/CapSense_Processing.c **** 
1207:Generated_Source\PSoC4/CapSense_Processing.c ****     if (0u != (mode & CapSense_PROCESS_BASELINE))
1208:Generated_Source\PSoC4/CapSense_Processing.c ****     {
1209:Generated_Source\PSoC4/CapSense_Processing.c ****         result = CapSense_FtUpdateBaseline(ptrRamWdgt, curSnsPtr, widgetType);
1210:Generated_Source\PSoC4/CapSense_Processing.c ****     }
1211:Generated_Source\PSoC4/CapSense_Processing.c **** 
1212:Generated_Source\PSoC4/CapSense_Processing.c ****     if (0u != (mode & CapSense_PROCESS_DIFFCOUNTS))
1213:Generated_Source\PSoC4/CapSense_Processing.c ****     {
1214:Generated_Source\PSoC4/CapSense_Processing.c ****         CapSense_DpUpdateDifferences(ptrRamWdgt, curSnsPtr);
1215:Generated_Source\PSoC4/CapSense_Processing.c ****     }
1216:Generated_Source\PSoC4/CapSense_Processing.c ****     return result;
1217:Generated_Source\PSoC4/CapSense_Processing.c **** }
1218:Generated_Source\PSoC4/CapSense_Processing.c **** 
1219:Generated_Source\PSoC4/CapSense_Processing.c **** /*******************************************************************************
1220:Generated_Source\PSoC4/CapSense_Processing.c **** * Function Name: CapSense_DpProcessCsdWidgetStatus
1221:Generated_Source\PSoC4/CapSense_Processing.c **** ****************************************************************************//**
1222:Generated_Source\PSoC4/CapSense_Processing.c **** *
1223:Generated_Source\PSoC4/CapSense_Processing.c **** * \brief
1224:Generated_Source\PSoC4/CapSense_Processing.c **** *  Runs the status processing of the CSD widget and updates it in the Data Structure.
1225:Generated_Source\PSoC4/CapSense_Processing.c **** *
1226:Generated_Source\PSoC4/CapSense_Processing.c **** * \details
1227:Generated_Source\PSoC4/CapSense_Processing.c **** *  This API determines the widget type and calls the appropriate low-level processing
1228:Generated_Source\PSoC4/CapSense_Processing.c **** *  function. Based on the returned results it updates the widget and sensor
1229:Generated_Source\PSoC4/CapSense_Processing.c **** *  status in the data structure. Any widget specific registers like the centroid
1230:Generated_Source\PSoC4/CapSense_Processing.c **** *  position are updated directly in the low-level processing function.
1231:Generated_Source\PSoC4/CapSense_Processing.c **** *
1232:Generated_Source\PSoC4/CapSense_Processing.c **** *  When the widget-specific processing completes this API updates the snsStatus
1233:Generated_Source\PSoC4/CapSense_Processing.c **** *  and wdgtStatus registers in the data structure. The wdgtStatus register
1234:Generated_Source\PSoC4/CapSense_Processing.c **** *  is a bitmask were each bit corresponds to the specific widget identified by
1235:Generated_Source\PSoC4/CapSense_Processing.c **** *  the widget index. When the bit is set the widget is active (touched);
1236:Generated_Source\PSoC4/CapSense_Processing.c **** *
1237:Generated_Source\PSoC4/CapSense_Processing.c **** *  The snsStatus register for CSD widgets contains status of each widget sensor
1238:Generated_Source\PSoC4/CapSense_Processing.c **** *  (active/non-active). Each bit corresponds to one sensor. In case of the
1239:Generated_Source\PSoC4/CapSense_Processing.c **** *  Proximity widget two bits are used per sensor: one for proximity status and
1240:Generated_Source\PSoC4/CapSense_Processing.c **** *  second for the touch status.
1241:Generated_Source\PSoC4/CapSense_Processing.c **** *
1242:Generated_Source\PSoC4/CapSense_Processing.c **** * \param widgetId      The widget index number.
1243:Generated_Source\PSoC4/CapSense_Processing.c **** * \param ptrFlashWdgt  The pointer to the Flash widget structure.
1244:Generated_Source\PSoC4/CapSense_Processing.c **** *
1245:Generated_Source\PSoC4/CapSense_Processing.c **** *******************************************************************************/
1246:Generated_Source\PSoC4/CapSense_Processing.c **** void CapSense_DpProcessCsdWidgetStatus(uint32 widgetId, CapSense_FLASH_WD_STRUCT const *ptrFlashWdg
1247:Generated_Source\PSoC4/CapSense_Processing.c **** {
1248:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 sensorStatus;
1249:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 wdStatusIndex;
1250:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 wdStatusMask;
1251:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_WD_TYPE_ENUM widgetType;
1252:Generated_Source\PSoC4/CapSense_Processing.c **** 
1253:Generated_Source\PSoC4/CapSense_Processing.c ****     widgetType = (CapSense_WD_TYPE_ENUM)ptrFlashWdgt->wdgtType;
1254:Generated_Source\PSoC4/CapSense_Processing.c ****     sensorStatus = CapSense_dsRam.snsStatus[widgetId];
1255:Generated_Source\PSoC4/CapSense_Processing.c **** 
1256:Generated_Source\PSoC4/CapSense_Processing.c ****     switch (widgetType)
1257:Generated_Source\PSoC4/CapSense_Processing.c ****     {
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 25


1258:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_BUTTON_WIDGET_EN)
1259:Generated_Source\PSoC4/CapSense_Processing.c ****         case CapSense_WD_BUTTON_E:
1260:Generated_Source\PSoC4/CapSense_Processing.c ****             sensorStatus = CapSense_DpProcessButton(sensorStatus, ptrFlashWdgt);
1261:Generated_Source\PSoC4/CapSense_Processing.c ****             break;
1262:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_BUTTON_WIDGET_EN) */
1263:Generated_Source\PSoC4/CapSense_Processing.c **** 
1264:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_SLIDER_WIDGET_EN)
1265:Generated_Source\PSoC4/CapSense_Processing.c ****         case CapSense_WD_LINEAR_SLIDER_E:
1266:Generated_Source\PSoC4/CapSense_Processing.c ****         case CapSense_WD_RADIAL_SLIDER_E:
1267:Generated_Source\PSoC4/CapSense_Processing.c ****             sensorStatus = CapSense_DpProcessSlider(sensorStatus, ptrFlashWdgt);
1268:Generated_Source\PSoC4/CapSense_Processing.c ****             break;
1269:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_SLIDER_WIDGET_EN) */
1270:Generated_Source\PSoC4/CapSense_Processing.c **** 
1271:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_CSD_MATRIX_WIDGET_EN)
1272:Generated_Source\PSoC4/CapSense_Processing.c ****         case CapSense_WD_MATRIX_BUTTON_E:
1273:Generated_Source\PSoC4/CapSense_Processing.c ****             sensorStatus = CapSense_DpProcessCsdMatrix(sensorStatus, ptrFlashWdgt);
1274:Generated_Source\PSoC4/CapSense_Processing.c ****             break;
1275:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_CSD_MATRIX_WIDGET_EN) */
1276:Generated_Source\PSoC4/CapSense_Processing.c **** 
1277:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_CSD_TOUCHPAD_WIDGET_EN)
1278:Generated_Source\PSoC4/CapSense_Processing.c ****         case CapSense_WD_TOUCHPAD_E:
1279:Generated_Source\PSoC4/CapSense_Processing.c ****             sensorStatus = CapSense_DpProcessCsdTouchpad(sensorStatus, ptrFlashWdgt);
1280:Generated_Source\PSoC4/CapSense_Processing.c ****             #if (0u != CapSense_BALLISTIC_MULTIPLIER_EN)
1281:Generated_Source\PSoC4/CapSense_Processing.c ****                 CapSense_RunBallisticMultiplier(widgetId);
1282:Generated_Source\PSoC4/CapSense_Processing.c ****             #endif /* (0u != CapSense_BALLISTIC_MULTIPLIER_EN) */
1283:Generated_Source\PSoC4/CapSense_Processing.c ****             break;
1284:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1285:Generated_Source\PSoC4/CapSense_Processing.c **** 
1286:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_PROXIMITY_WIDGET_EN)
1287:Generated_Source\PSoC4/CapSense_Processing.c ****         case CapSense_WD_PROXIMITY_E:
1288:Generated_Source\PSoC4/CapSense_Processing.c ****             sensorStatus = CapSense_DpProcessProximity(sensorStatus, ptrFlashWdgt);
1289:Generated_Source\PSoC4/CapSense_Processing.c ****             break;
1290:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_PROXIMITY_WIDGET_EN) */
1291:Generated_Source\PSoC4/CapSense_Processing.c **** 
1292:Generated_Source\PSoC4/CapSense_Processing.c ****     default:
1293:Generated_Source\PSoC4/CapSense_Processing.c ****         CYASSERT(0u);
1294:Generated_Source\PSoC4/CapSense_Processing.c ****         break;
1295:Generated_Source\PSoC4/CapSense_Processing.c ****     }
1296:Generated_Source\PSoC4/CapSense_Processing.c **** 
1297:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_dsRam.snsStatus[widgetId] = (CapSense_SNS_STS_TYPE)sensorStatus;
1298:Generated_Source\PSoC4/CapSense_Processing.c **** 
1299:Generated_Source\PSoC4/CapSense_Processing.c ****     /* The next two lines calculate index and bitmask of the widget status bit in the wdgtStatus ar
1300:Generated_Source\PSoC4/CapSense_Processing.c ****     wdStatusIndex = CapSense_GET_WDGT_STATUS_INDEX(widgetId);
1301:Generated_Source\PSoC4/CapSense_Processing.c ****     wdStatusMask = CapSense_GET_WDGT_STATUS_MASK(widgetId);
1302:Generated_Source\PSoC4/CapSense_Processing.c **** 
1303:Generated_Source\PSoC4/CapSense_Processing.c ****     /* Check if there are active sensors and update widget status accordingly */
1304:Generated_Source\PSoC4/CapSense_Processing.c ****     if (0u == sensorStatus)
1305:Generated_Source\PSoC4/CapSense_Processing.c ****     {
1306:Generated_Source\PSoC4/CapSense_Processing.c ****         CapSense_dsRam.wdgtStatus[wdStatusIndex] &= ~wdStatusMask;
1307:Generated_Source\PSoC4/CapSense_Processing.c ****     }
1308:Generated_Source\PSoC4/CapSense_Processing.c ****     else
1309:Generated_Source\PSoC4/CapSense_Processing.c ****     {
1310:Generated_Source\PSoC4/CapSense_Processing.c ****         CapSense_dsRam.wdgtStatus[wdStatusIndex] |= wdStatusMask;
1311:Generated_Source\PSoC4/CapSense_Processing.c ****     }
1312:Generated_Source\PSoC4/CapSense_Processing.c **** }
1313:Generated_Source\PSoC4/CapSense_Processing.c **** #endif /* #if (0u != CapSense_TOTAL_CSD_WIDGETS) */
1314:Generated_Source\PSoC4/CapSense_Processing.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 26


1315:Generated_Source\PSoC4/CapSense_Processing.c **** 
1316:Generated_Source\PSoC4/CapSense_Processing.c **** #if (0 != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
1317:Generated_Source\PSoC4/CapSense_Processing.c **** /*******************************************************************************
1318:Generated_Source\PSoC4/CapSense_Processing.c **** * Function Name: CapSense_DpUpdateThresholds
1319:Generated_Source\PSoC4/CapSense_Processing.c **** ****************************************************************************//**
1320:Generated_Source\PSoC4/CapSense_Processing.c **** *
1321:Generated_Source\PSoC4/CapSense_Processing.c **** * \brief
1322:Generated_Source\PSoC4/CapSense_Processing.c **** *   Updates noise and finger thresholds for a specified widget.
1323:Generated_Source\PSoC4/CapSense_Processing.c **** *
1324:Generated_Source\PSoC4/CapSense_Processing.c **** * \details
1325:Generated_Source\PSoC4/CapSense_Processing.c **** *   Updates noise and finger thresholds for a specified widget.
1326:Generated_Source\PSoC4/CapSense_Processing.c **** *   This algorithm is a part of Auto-tuning feature.
1327:Generated_Source\PSoC4/CapSense_Processing.c **** *
1328:Generated_Source\PSoC4/CapSense_Processing.c **** * \param ptrRamWdgt       The pointer to the RAM widget object.
1329:Generated_Source\PSoC4/CapSense_Processing.c **** * \param ptrNoiseEnvelope The pointer to the noise-envelope object in RAM.
1330:Generated_Source\PSoC4/CapSense_Processing.c **** * \param startFlag        The flag indicates when new widget is processed.
1331:Generated_Source\PSoC4/CapSense_Processing.c **** *
1332:Generated_Source\PSoC4/CapSense_Processing.c **** *******************************************************************************/
1333:Generated_Source\PSoC4/CapSense_Processing.c **** void CapSense_DpUpdateThresholds(CapSense_RAM_WD_BASE_STRUCT *ptrRamWdgt,
1334:Generated_Source\PSoC4/CapSense_Processing.c ****                                          SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT *ptrNoiseEnvelope,
1335:Generated_Source\PSoC4/CapSense_Processing.c ****                                          uint32 startFlag)
1336:Generated_Source\PSoC4/CapSense_Processing.c **** {
1337:Generated_Source\PSoC4/CapSense_Processing.c ****     SMARTSENSE_UPDATE_THRESHOLDS_STRUCT thresholds;
1338:Generated_Source\PSoC4/CapSense_Processing.c ****     SMARTSENSE_UPDATE_THRESHOLDS_STRUCT *ptrThresholds = &thresholds;
1339:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrThresholds->fingerTh = ptrRamWdgt->fingerTh;
1340:Generated_Source\PSoC4/CapSense_Processing.c **** 
1341:Generated_Source\PSoC4/CapSense_Processing.c ****     SmartSense_UpdateThresholds(ptrNoiseEnvelope, ptrThresholds, ptrRamWdgt->sigPFC, startFlag);
1342:Generated_Source\PSoC4/CapSense_Processing.c **** 
1343:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrRamWdgt->fingerTh = ptrThresholds->fingerTh;
1344:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrRamWdgt->noiseTh = ptrThresholds->noiseTh;
1345:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrRamWdgt->nNoiseTh = ptrThresholds->nNoiseTh;
1346:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrRamWdgt->hysteresis = ptrThresholds->hysteresis;
1347:Generated_Source\PSoC4/CapSense_Processing.c **** }
1348:Generated_Source\PSoC4/CapSense_Processing.c **** #endif /* #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
1349:Generated_Source\PSoC4/CapSense_Processing.c **** 
1350:Generated_Source\PSoC4/CapSense_Processing.c **** 
1351:Generated_Source\PSoC4/CapSense_Processing.c **** /*******************************************************************************
1352:Generated_Source\PSoC4/CapSense_Processing.c **** * Function Name: CapSense_DpUpdateDifferences
1353:Generated_Source\PSoC4/CapSense_Processing.c **** ****************************************************************************//**
1354:Generated_Source\PSoC4/CapSense_Processing.c **** *
1355:Generated_Source\PSoC4/CapSense_Processing.c **** * \brief
1356:Generated_Source\PSoC4/CapSense_Processing.c **** *   Calculates new difference values.
1357:Generated_Source\PSoC4/CapSense_Processing.c **** *   Also, executes the multi-frequency scan algorithm if it is enabled.
1358:Generated_Source\PSoC4/CapSense_Processing.c **** *
1359:Generated_Source\PSoC4/CapSense_Processing.c **** * \details
1360:Generated_Source\PSoC4/CapSense_Processing.c **** *   This API calculates the difference between the baseline and raw counts.
1361:Generated_Source\PSoC4/CapSense_Processing.c **** *   If the difference is positive (raw > baseline), and higher than the widget
1362:Generated_Source\PSoC4/CapSense_Processing.c **** *   noise threshold, it is saved into the data structure for further processing.
1363:Generated_Source\PSoC4/CapSense_Processing.c **** *   Otherwise the difference is set to zero. The final difference value is saved
1364:Generated_Source\PSoC4/CapSense_Processing.c **** *   with the subtracted noise threshold value.
1365:Generated_Source\PSoC4/CapSense_Processing.c **** *
1366:Generated_Source\PSoC4/CapSense_Processing.c **** *   If the multi-frequency scan algorithm is enabled, the difference is calculated
1367:Generated_Source\PSoC4/CapSense_Processing.c **** *   for the three sets of data available for each sensor. Then
1368:Generated_Source\PSoC4/CapSense_Processing.c **** *   the median filter selects the final difference value.
1369:Generated_Source\PSoC4/CapSense_Processing.c **** *
1370:Generated_Source\PSoC4/CapSense_Processing.c **** * \param ptrRamWdgt The pointer to the RAR Widget Object.
1371:Generated_Source\PSoC4/CapSense_Processing.c **** * \param curSnsPtr  The pointer to the sensor object in RAM.
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 27


1372:Generated_Source\PSoC4/CapSense_Processing.c **** *
1373:Generated_Source\PSoC4/CapSense_Processing.c **** *******************************************************************************/
1374:Generated_Source\PSoC4/CapSense_Processing.c **** void CapSense_DpUpdateDifferences(
1375:Generated_Source\PSoC4/CapSense_Processing.c ****                         CapSense_RAM_WD_BASE_STRUCT *ptrRamWdgt,
1376:Generated_Source\PSoC4/CapSense_Processing.c ****                         CapSense_RAM_SNS_STRUCT *curSnsPtr)
1377:Generated_Source\PSoC4/CapSense_Processing.c **** {
 109              		.loc 1 1377 0
 110              		.cfi_startproc
 111              		@ args = 0, pretend = 0, frame = 0
 112              		@ frame_needed = 0, uses_anonymous_args = 0
 113              	.LVL10:
 114 0000 10B5     		push	{r4, lr}
 115              		.cfi_def_cfa_offset 8
 116              		.cfi_offset 4, -8
 117              		.cfi_offset 14, -4
1378:Generated_Source\PSoC4/CapSense_Processing.c ****     register int32 diffValue = 0;
1379:Generated_Source\PSoC4/CapSense_Processing.c **** 
1380:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_MULTI_FREQ_SCAN_EN)
1381:Generated_Source\PSoC4/CapSense_Processing.c ****         register int32 diffValue_0 = 0;
1382:Generated_Source\PSoC4/CapSense_Processing.c ****         register int32 diffValue_2 = 0;
1383:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_MULTI_FREQ_SCAN_EN) */
1384:Generated_Source\PSoC4/CapSense_Processing.c **** 
1385:Generated_Source\PSoC4/CapSense_Processing.c ****     /* Calculate difference */
1386:Generated_Source\PSoC4/CapSense_Processing.c ****     diffValue = (int32)curSnsPtr->raw[0u] - (int32)curSnsPtr->bsln[0u];
1387:Generated_Source\PSoC4/CapSense_Processing.c **** 
1388:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_MULTI_FREQ_SCAN_EN)
1389:Generated_Source\PSoC4/CapSense_Processing.c ****         diffValue_0 = (int32)curSnsPtr->raw[1u] - (int32)curSnsPtr->bsln[1u];
1390:Generated_Source\PSoC4/CapSense_Processing.c ****         diffValue_2 = (int32)curSnsPtr->raw[2u] - (int32)curSnsPtr->bsln[2u];
1391:Generated_Source\PSoC4/CapSense_Processing.c **** 
1392:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Find median and put it into [0u] element */
1393:Generated_Source\PSoC4/CapSense_Processing.c ****         if (diffValue_0 > diffValue)
1394:Generated_Source\PSoC4/CapSense_Processing.c ****         {
1395:Generated_Source\PSoC4/CapSense_Processing.c ****             register int32 swapv = diffValue_0;
1396:Generated_Source\PSoC4/CapSense_Processing.c ****             diffValue_0 = diffValue;
1397:Generated_Source\PSoC4/CapSense_Processing.c ****             diffValue = swapv;
1398:Generated_Source\PSoC4/CapSense_Processing.c ****         }
1399:Generated_Source\PSoC4/CapSense_Processing.c **** 
1400:Generated_Source\PSoC4/CapSense_Processing.c ****         if (diffValue > diffValue_2)
1401:Generated_Source\PSoC4/CapSense_Processing.c ****         {
1402:Generated_Source\PSoC4/CapSense_Processing.c ****             register int32 swapv = diffValue;
1403:Generated_Source\PSoC4/CapSense_Processing.c ****             diffValue = diffValue_2;
1404:Generated_Source\PSoC4/CapSense_Processing.c ****             diffValue_2 = swapv;
1405:Generated_Source\PSoC4/CapSense_Processing.c ****         }
1406:Generated_Source\PSoC4/CapSense_Processing.c **** 
1407:Generated_Source\PSoC4/CapSense_Processing.c ****         if (diffValue_0 > diffValue)
1408:Generated_Source\PSoC4/CapSense_Processing.c ****         {
1409:Generated_Source\PSoC4/CapSense_Processing.c ****             register int32 swapv = diffValue_0;
1410:Generated_Source\PSoC4/CapSense_Processing.c ****             diffValue_0 = diffValue;
1411:Generated_Source\PSoC4/CapSense_Processing.c ****             diffValue = swapv;
1412:Generated_Source\PSoC4/CapSense_Processing.c ****         }
1413:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_MULTI_FREQ_SCAN_EN) */
1414:Generated_Source\PSoC4/CapSense_Processing.c **** 
1415:Generated_Source\PSoC4/CapSense_Processing.c ****     curSnsPtr->diff = 0u;
 118              		.loc 1 1415 0
 119 0002 0024     		movs	r4, #0
1386:Generated_Source\PSoC4/CapSense_Processing.c **** 
 120              		.loc 1 1386 0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 28


 121 0004 4A88     		ldrh	r2, [r1, #2]
 122 0006 0B88     		ldrh	r3, [r1]
 123              	.LVL11:
 124              		.loc 1 1415 0
 125 0008 CC80     		strh	r4, [r1, #6]
1416:Generated_Source\PSoC4/CapSense_Processing.c **** 
1417:Generated_Source\PSoC4/CapSense_Processing.c ****     if (diffValue > (int32)ptrRamWdgt->noiseTh)
 126              		.loc 1 1417 0
 127 000a 9B1A     		subs	r3, r3, r2
 128              	.LVL12:
 129 000c 0279     		ldrb	r2, [r0, #4]
 130              	.LVL13:
 131 000e 9342     		cmp	r3, r2
 132 0010 00DD     		ble	.L13
1418:Generated_Source\PSoC4/CapSense_Processing.c ****     {
1419:Generated_Source\PSoC4/CapSense_Processing.c ****         curSnsPtr->diff = (CapSense_THRESHOLD_TYPE) diffValue;
 133              		.loc 1 1419 0
 134 0012 CB80     		strh	r3, [r1, #6]
 135              	.L13:
1420:Generated_Source\PSoC4/CapSense_Processing.c ****     }
1421:Generated_Source\PSoC4/CapSense_Processing.c **** }
 136              		.loc 1 1421 0
 137              		@ sp needed
 138 0014 10BD     		pop	{r4, pc}
 139              		.cfi_endproc
 140              	.LFE5:
 141              		.size	CapSense_DpUpdateDifferences, .-CapSense_DpUpdateDifferences
 142              		.section	.text.CapSense_DpProcessCsdWidgetRawCounts,"ax",%progbits
 143              		.align	1
 144              		.global	CapSense_DpProcessCsdWidgetRawCounts
 145              		.code	16
 146              		.thumb_func
 147              		.type	CapSense_DpProcessCsdWidgetRawCounts, %function
 148              	CapSense_DpProcessCsdWidgetRawCounts:
 149              	.LFB2:
1017:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32  result = CYRET_SUCCESS;
 150              		.loc 1 1017 0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 16
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              	.LVL14:
 155 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 156              		.cfi_def_cfa_offset 20
 157              		.cfi_offset 4, -20
 158              		.cfi_offset 5, -16
 159              		.cfi_offset 6, -12
 160              		.cfi_offset 7, -8
 161              		.cfi_offset 14, -4
1056:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 162              		.loc 1 1056 0
 163 0002 0024     		movs	r4, #0
1017:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32  result = CYRET_SUCCESS;
 164              		.loc 1 1017 0
 165 0004 0500     		movs	r5, r0
1044:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
 166              		.loc 1 1044 0
 167 0006 C368     		ldr	r3, [r0, #12]
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 29


1017:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32  result = CYRET_SUCCESS;
 168              		.loc 1 1017 0
 169 0008 85B0     		sub	sp, sp, #20
 170              		.cfi_def_cfa_offset 40
1041:Generated_Source\PSoC4/CapSense_Processing.c **** 
 171              		.loc 1 1041 0
 172 000a 877E     		ldrb	r7, [r0, #26]
 173              	.LVL15:
1044:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
 174              		.loc 1 1044 0
 175 000c 0093     		str	r3, [sp]
 176              	.LVL16:
1047:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrRamWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdgt->ptr2WdgtRam;
 177              		.loc 1 1047 0
 178 000e 8368     		ldr	r3, [r0, #8]
 179              	.LVL17:
1018:Generated_Source\PSoC4/CapSense_Processing.c **** 
 180              		.loc 1 1018 0
 181 0010 0194     		str	r4, [sp, #4]
1047:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrRamWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdgt->ptr2WdgtRam;
 182              		.loc 1 1047 0
 183 0012 0393     		str	r3, [sp, #12]
 184              	.LVL18:
1048:Generated_Source\PSoC4/CapSense_Processing.c ****     widgetType = ptrFlashWdgt->wdgtType;
 185              		.loc 1 1048 0
 186 0014 4368     		ldr	r3, [r0, #4]
 187              	.LVL19:
 188 0016 0293     		str	r3, [sp, #8]
 189              	.LVL20:
 190              	.L16:
 191 0018 0A26     		movs	r6, #10
 192 001a 6643     		muls	r6, r4
 193 001c 039B     		ldr	r3, [sp, #12]
 194 001e 9E19     		adds	r6, r3, r6
 195              	.LVL21:
1056:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 196              		.loc 1 1056 0 discriminator 1
 197 0020 2B8B     		ldrh	r3, [r5, #24]
 198 0022 9C42     		cmp	r4, r3
 199 0024 15D2     		bcs	.L22
1060:Generated_Source\PSoC4/CapSense_Processing.c ****             #if (CapSense_ALP_FILTER_EN)
 200              		.loc 1 1060 0
 201 0026 3A00     		movs	r2, r7
 202 0028 3100     		movs	r1, r6
 203 002a 0098     		ldr	r0, [sp]
 204 002c FFF7FEFF 		bl	CapSense_FtRunEnabledFiltersInternal
 205              	.LVL22:
1096:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN) */
 206              		.loc 1 1096 0
 207 0030 3100     		movs	r1, r6
 208 0032 3A00     		movs	r2, r7
 209 0034 0298     		ldr	r0, [sp, #8]
 210 0036 FFF7FEFF 		bl	CapSense_FtUpdateBaseline
 211              	.LVL23:
1099:Generated_Source\PSoC4/CapSense_Processing.c **** 
 212              		.loc 1 1099 0
 213 003a 3100     		movs	r1, r6
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 30


1096:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN) */
 214              		.loc 1 1096 0
 215 003c 0190     		str	r0, [sp, #4]
 216              	.LVL24:
1099:Generated_Source\PSoC4/CapSense_Processing.c **** 
 217              		.loc 1 1099 0
 218 003e 0298     		ldr	r0, [sp, #8]
 219              	.LVL25:
 220 0040 FFF7FEFF 		bl	CapSense_DpUpdateDifferences
 221              	.LVL26:
1106:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* #if (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
 222              		.loc 1 1106 0
 223 0044 062F     		cmp	r7, #6
 224 0046 02D0     		beq	.L17
1106:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* #if (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
 225              		.loc 1 1106 0 is_stmt 0 discriminator 1
 226 0048 009B     		ldr	r3, [sp]
 227 004a 0C33     		adds	r3, r3, #12
 228 004c 0093     		str	r3, [sp]
 229              	.LVL27:
 230              	.L17:
1056:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 231              		.loc 1 1056 0 is_stmt 1 discriminator 2
 232 004e 0134     		adds	r4, r4, #1
 233              	.LVL28:
 234 0050 E2E7     		b	.L16
 235              	.LVL29:
 236              	.L22:
1110:Generated_Source\PSoC4/CapSense_Processing.c **** 
 237              		.loc 1 1110 0
 238 0052 0198     		ldr	r0, [sp, #4]
 239 0054 05B0     		add	sp, sp, #20
 240              		@ sp needed
 241              	.LVL30:
 242              	.LVL31:
 243              	.LVL32:
 244              	.LVL33:
 245 0056 F0BD     		pop	{r4, r5, r6, r7, pc}
 246              		.cfi_endproc
 247              	.LFE2:
 248              		.size	CapSense_DpProcessCsdWidgetRawCounts, .-CapSense_DpProcessCsdWidgetRawCounts
 249              		.section	.text.CapSense_DpProcessCsdSensorRawCountsExt,"ax",%progbits
 250              		.align	1
 251              		.global	CapSense_DpProcessCsdSensorRawCountsExt
 252              		.code	16
 253              		.thumb_func
 254              		.type	CapSense_DpProcessCsdSensorRawCountsExt, %function
 255              	CapSense_DpProcessCsdSensorRawCountsExt:
 256              	.LFB3:
1151:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 result = CYRET_SUCCESS;
 257              		.loc 1 1151 0
 258              		.cfi_startproc
 259              		@ args = 0, pretend = 0, frame = 8
 260              		@ frame_needed = 0, uses_anonymous_args = 0
 261              	.LVL34:
 262 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 263              		.cfi_def_cfa_offset 32
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 31


 264              		.cfi_offset 0, -32
 265              		.cfi_offset 1, -28
 266              		.cfi_offset 2, -24
 267              		.cfi_offset 4, -20
 268              		.cfi_offset 5, -16
 269              		.cfi_offset 6, -12
 270              		.cfi_offset 7, -8
 271              		.cfi_offset 14, -4
 272              	.LVL35:
1151:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 result = CYRET_SUCCESS;
 273              		.loc 1 1151 0
 274 0002 1E00     		movs	r6, r3
1167:Generated_Source\PSoC4/CapSense_Processing.c **** 
 275              		.loc 1 1167 0
 276 0004 4368     		ldr	r3, [r0, #4]
 277              	.LVL36:
1166:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrRamWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdgt->ptr2WdgtRam;
 278              		.loc 1 1166 0
 279 0006 877E     		ldrb	r7, [r0, #26]
 280              	.LVL37:
1151:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 result = CYRET_SUCCESS;
 281              		.loc 1 1151 0
 282 0008 0C00     		movs	r4, r1
 283              	.LVL38:
 284 000a 1500     		movs	r5, r2
1167:Generated_Source\PSoC4/CapSense_Processing.c **** 
 285              		.loc 1 1167 0
 286 000c 0193     		str	r3, [sp, #4]
 287              	.LVL39:
1170:Generated_Source\PSoC4/CapSense_Processing.c ****         {
 288              		.loc 1 1170 0
 289 000e F307     		lsls	r3, r6, #31
 290 0010 03D5     		bpl	.L24
 291              	.LVL40:
1172:Generated_Source\PSoC4/CapSense_Processing.c ****             #if (CapSense_ALP_FILTER_EN)
 292              		.loc 1 1172 0
 293 0012 3A00     		movs	r2, r7
 294              	.LVL41:
 295 0014 2800     		movs	r0, r5
 296              	.LVL42:
 297 0016 FFF7FEFF 		bl	CapSense_FtRunEnabledFiltersInternal
 298              	.LVL43:
 299              	.L24:
1152:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32  widgetType;
 300              		.loc 1 1152 0
 301 001a 0025     		movs	r5, #0
 302              	.LVL44:
1207:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 303              		.loc 1 1207 0
 304 001c B307     		lsls	r3, r6, #30
 305 001e 05D5     		bpl	.L25
1209:Generated_Source\PSoC4/CapSense_Processing.c ****     }
 306              		.loc 1 1209 0
 307 0020 3A00     		movs	r2, r7
 308              	.LVL45:
 309 0022 2100     		movs	r1, r4
 310 0024 0198     		ldr	r0, [sp, #4]
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 32


 311 0026 FFF7FEFF 		bl	CapSense_FtUpdateBaseline
 312              	.LVL46:
 313 002a 0500     		movs	r5, r0
 314              	.LVL47:
 315              	.L25:
1212:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 316              		.loc 1 1212 0
 317 002c 7307     		lsls	r3, r6, #29
 318 002e 03D5     		bpl	.L26
1214:Generated_Source\PSoC4/CapSense_Processing.c ****     }
 319              		.loc 1 1214 0
 320 0030 2100     		movs	r1, r4
 321 0032 0198     		ldr	r0, [sp, #4]
 322 0034 FFF7FEFF 		bl	CapSense_DpUpdateDifferences
 323              	.LVL48:
 324              	.L26:
1217:Generated_Source\PSoC4/CapSense_Processing.c **** 
 325              		.loc 1 1217 0
 326 0038 2800     		movs	r0, r5
 327              		@ sp needed
 328              	.LVL49:
 329              	.LVL50:
 330              	.LVL51:
 331              	.LVL52:
 332 003a FEBD     		pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 333              		.cfi_endproc
 334              	.LFE3:
 335              		.size	CapSense_DpProcessCsdSensorRawCountsExt, .-CapSense_DpProcessCsdSensorRawCountsExt
 336              		.section	.text.CapSense_DpProcessButton,"ax",%progbits
 337              		.align	1
 338              		.global	CapSense_DpProcessButton
 339              		.code	16
 340              		.thumb_func
 341              		.type	CapSense_DpProcessButton, %function
 342              	CapSense_DpProcessButton:
 343              	.LFB6:
1422:Generated_Source\PSoC4/CapSense_Processing.c **** 
1423:Generated_Source\PSoC4/CapSense_Processing.c **** 
1424:Generated_Source\PSoC4/CapSense_Processing.c **** #if ((0u != CapSense_BUTTON_WIDGET_EN) || (0u != CapSense_CSX_MATRIX_WIDGET_EN))
1425:Generated_Source\PSoC4/CapSense_Processing.c **** /*******************************************************************************
1426:Generated_Source\PSoC4/CapSense_Processing.c **** * Function Name: CapSense_DpProcessButton
1427:Generated_Source\PSoC4/CapSense_Processing.c **** ****************************************************************************//**
1428:Generated_Source\PSoC4/CapSense_Processing.c **** *
1429:Generated_Source\PSoC4/CapSense_Processing.c **** * \brief
1430:Generated_Source\PSoC4/CapSense_Processing.c **** *   Processes the status of the Button widget.
1431:Generated_Source\PSoC4/CapSense_Processing.c **** *
1432:Generated_Source\PSoC4/CapSense_Processing.c **** * \details
1433:Generated_Source\PSoC4/CapSense_Processing.c **** *   This API processes the status of the CSD/CSX Button widget and
1434:Generated_Source\PSoC4/CapSense_Processing.c **** *   CSX Matrix Button widget. It applies the hysteresis and de-bounce algorithm
1435:Generated_Source\PSoC4/CapSense_Processing.c **** *   to each sensor difference value. This API is expected to be called
1436:Generated_Source\PSoC4/CapSense_Processing.c **** *   after each new widget scan. If it is called multiple times for the same
1437:Generated_Source\PSoC4/CapSense_Processing.c **** *   scan data, the de-bounce algorithm will not work properly.
1438:Generated_Source\PSoC4/CapSense_Processing.c **** *
1439:Generated_Source\PSoC4/CapSense_Processing.c **** *   This API does not update any Data Structure registers
1440:Generated_Source\PSoC4/CapSense_Processing.c **** *   except the de-bounce counters.
1441:Generated_Source\PSoC4/CapSense_Processing.c **** *
1442:Generated_Source\PSoC4/CapSense_Processing.c **** * \param currStatus   The current status of the widget sensors.
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 33


1443:Generated_Source\PSoC4/CapSense_Processing.c **** * \param ptrFlashWdgt The pointer to the Flash Widget Object.
1444:Generated_Source\PSoC4/CapSense_Processing.c **** *
1445:Generated_Source\PSoC4/CapSense_Processing.c **** * \return Returns the status of the widget's sensors. Bit #0 - corresponds to Sensor #0.
1446:Generated_Source\PSoC4/CapSense_Processing.c **** *
1447:Generated_Source\PSoC4/CapSense_Processing.c **** *******************************************************************************/
1448:Generated_Source\PSoC4/CapSense_Processing.c **** uint32 CapSense_DpProcessButton(uint32 currStatus, CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt)
1449:Generated_Source\PSoC4/CapSense_Processing.c **** {
 344              		.loc 1 1449 0
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 8
 347              		@ frame_needed = 0, uses_anonymous_args = 0
 348              	.LVL53:
 349 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 350              		.cfi_def_cfa_offset 32
 351              		.cfi_offset 0, -32
 352              		.cfi_offset 1, -28
 353              		.cfi_offset 2, -24
 354              		.cfi_offset 4, -20
 355              		.cfi_offset 5, -16
 356              		.cfi_offset 6, -12
 357              		.cfi_offset 7, -8
 358              		.cfi_offset 14, -4
1450:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 snsCnt;
1451:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 snsMask;
1452:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 newStatus;
1453:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 touchTh;
1454:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_RAM_SNS_STRUCT *ptrSnsTmp;
1455:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrRamWdgt;
1456:Generated_Source\PSoC4/CapSense_Processing.c ****     uint8 * ptrDebounceCnt;
1457:Generated_Source\PSoC4/CapSense_Processing.c **** 
1458:Generated_Source\PSoC4/CapSense_Processing.c ****     snsCnt = ptrFlashWdgt->totalNumSns;
 359              		.loc 1 1458 0
 360 0002 0B8B     		ldrh	r3, [r1, #24]
1459:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrSnsTmp = ptrFlashWdgt->ptr2SnsRam;
 361              		.loc 1 1459 0
 362 0004 8C68     		ldr	r4, [r1, #8]
1458:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrSnsTmp = ptrFlashWdgt->ptr2SnsRam;
 363              		.loc 1 1458 0
 364 0006 0193     		str	r3, [sp, #4]
 365              	.LVL54:
1460:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrRamWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdgt->ptr2WdgtRam;
1461:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrDebounceCnt = ptrFlashWdgt->ptr2DebounceArr;
1462:Generated_Source\PSoC4/CapSense_Processing.c **** 
1463:Generated_Source\PSoC4/CapSense_Processing.c ****     /* Go through all widget's sensors */
1464:Generated_Source\PSoC4/CapSense_Processing.c ****     snsMask = 1Lu;
 366              		.loc 1 1464 0
 367 0008 0123     		movs	r3, #1
 368              	.LVL55:
1460:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrRamWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdgt->ptr2WdgtRam;
 369              		.loc 1 1460 0
 370 000a 4D68     		ldr	r5, [r1, #4]
 371              	.LVL56:
1461:Generated_Source\PSoC4/CapSense_Processing.c **** 
 372              		.loc 1 1461 0
 373 000c 0969     		ldr	r1, [r1, #16]
 374              	.LVL57:
 375              	.L36:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 34


1465:Generated_Source\PSoC4/CapSense_Processing.c ****     for (; snsCnt-- > 0u; )
 376              		.loc 1 1465 0
 377 000e 019A     		ldr	r2, [sp, #4]
 378 0010 561E     		subs	r6, r2, #1
 379 0012 0196     		str	r6, [sp, #4]
 380 0014 26D3     		bcc	.L51
 381              	.LVL58:
1466:Generated_Source\PSoC4/CapSense_Processing.c ****     {
1467:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Calculate touch threshold taking into account hysteresis
1468:Generated_Source\PSoC4/CapSense_Processing.c ****            and current sensor state. */
1469:Generated_Source\PSoC4/CapSense_Processing.c ****         touchTh = (0u == (currStatus & snsMask)) ?
 382              		.loc 1 1469 0
 383 0016 1A00     		movs	r2, r3
 384 0018 6E88     		ldrh	r6, [r5, #2]
 385 001a AF79     		ldrb	r7, [r5, #6]
 386 001c B446     		mov	ip, r6
 387 001e 0240     		ands	r2, r0
1470:Generated_Source\PSoC4/CapSense_Processing.c ****                   ((uint32)ptrRamWdgt->fingerTh + ptrRamWdgt->hysteresis) :
 388              		.loc 1 1470 0
 389 0020 F61B     		subs	r6, r6, r7
 390 0022 002A     		cmp	r2, #0
 391 0024 01D1     		bne	.L38
 392              		.loc 1 1470 0 is_stmt 0 discriminator 1
 393 0026 3E00     		movs	r6, r7
 394 0028 6644     		add	r6, r6, ip
 395              	.L38:
 396              	.LVL59:
1471:Generated_Source\PSoC4/CapSense_Processing.c ****                   ((uint32)ptrRamWdgt->fingerTh - ptrRamWdgt->hysteresis);
1472:Generated_Source\PSoC4/CapSense_Processing.c **** 
1473:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Determine new potential sensor state */
1474:Generated_Source\PSoC4/CapSense_Processing.c ****         newStatus = (ptrSnsTmp->diff > touchTh) ? snsMask : 0u;
 397              		.loc 1 1474 0 is_stmt 1
 398 002a E788     		ldrh	r7, [r4, #6]
 399 002c BE42     		cmp	r6, r7
 400 002e 03D2     		bcs	.L39
 401              	.LVL60:
1475:Generated_Source\PSoC4/CapSense_Processing.c **** 
1476:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Sensor state changed ? */
1477:Generated_Source\PSoC4/CapSense_Processing.c ****         if (newStatus != (currStatus & snsMask))
 402              		.loc 1 1477 0 discriminator 4
 403 0030 9342     		cmp	r3, r2
 404 0032 0AD0     		beq	.L40
 405 0034 1A00     		movs	r2, r3
 406 0036 02E0     		b	.L45
 407              	.LVL61:
 408              	.L39:
 409              		.loc 1 1477 0 is_stmt 0
 410 0038 002A     		cmp	r2, #0
 411 003a 11D0     		beq	.L52
1474:Generated_Source\PSoC4/CapSense_Processing.c **** 
 412              		.loc 1 1474 0 is_stmt 1
 413 003c 0022     		movs	r2, #0
 414              	.LVL62:
 415              	.L45:
1478:Generated_Source\PSoC4/CapSense_Processing.c ****         {
1479:Generated_Source\PSoC4/CapSense_Processing.c ****             /* Decrement de-bounce counter */
1480:Generated_Source\PSoC4/CapSense_Processing.c ****             (*ptrDebounceCnt)--;
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 35


 416              		.loc 1 1480 0
 417 003e 0E78     		ldrb	r6, [r1]
 418              	.LVL63:
 419 0040 013E     		subs	r6, r6, #1
 420 0042 F6B2     		uxtb	r6, r6
 421 0044 0E70     		strb	r6, [r1]
1481:Generated_Source\PSoC4/CapSense_Processing.c ****         }
1482:Generated_Source\PSoC4/CapSense_Processing.c **** 
1483:Generated_Source\PSoC4/CapSense_Processing.c ****         /*
1484:Generated_Source\PSoC4/CapSense_Processing.c ****         *  This piece of code has two objectives:
1485:Generated_Source\PSoC4/CapSense_Processing.c ****         *  1. Reset de-bounce counter if the sensor state did not change.
1486:Generated_Source\PSoC4/CapSense_Processing.c ****         *     (It is possible that during previous processing cycles sensor
1487:Generated_Source\PSoC4/CapSense_Processing.c ****         *     was active and de-bounce counter was decremented.)
1488:Generated_Source\PSoC4/CapSense_Processing.c ****         *  2. Set new sensor state after successful de-bounce.
1489:Generated_Source\PSoC4/CapSense_Processing.c ****         */
1490:Generated_Source\PSoC4/CapSense_Processing.c ****         if ((newStatus == (currStatus & snsMask)) || (0u == (*ptrDebounceCnt)))
 422              		.loc 1 1490 0
 423 0046 002E     		cmp	r6, #0
 424 0048 06D1     		bne	.L41
 425              	.LVL64:
 426              	.L40:
1491:Generated_Source\PSoC4/CapSense_Processing.c ****         {
1492:Generated_Source\PSoC4/CapSense_Processing.c ****             /* Set new sensor status */
1493:Generated_Source\PSoC4/CapSense_Processing.c ****             currStatus &= ~snsMask;
 427              		.loc 1 1493 0
 428 004a 9843     		bics	r0, r3
 429              	.LVL65:
1494:Generated_Source\PSoC4/CapSense_Processing.c ****             currStatus |= newStatus;
 430              		.loc 1 1494 0
 431 004c 1043     		orrs	r0, r2
 432              	.LVL66:
1495:Generated_Source\PSoC4/CapSense_Processing.c **** 
1496:Generated_Source\PSoC4/CapSense_Processing.c ****             /* Reset de-bounce counter */
1497:Generated_Source\PSoC4/CapSense_Processing.c ****             #if (0u != CapSense_OFF_DEBOUNCE_EN)
1498:Generated_Source\PSoC4/CapSense_Processing.c ****                 *ptrDebounceCnt = (0Lu == newStatus) ? ptrRamWdgt->onDebounce : ptrRamWdgt->offDebo
1499:Generated_Source\PSoC4/CapSense_Processing.c ****             #else
1500:Generated_Source\PSoC4/CapSense_Processing.c ****                 *ptrDebounceCnt = (0Lu == newStatus) ? ptrRamWdgt->onDebounce : DEFAULT_OFF_DEBOUNC
 433              		.loc 1 1500 0
 434 004e 0126     		movs	r6, #1
 435 0050 002A     		cmp	r2, #0
 436 0052 00D1     		bne	.L42
 437              	.L44:
 438              		.loc 1 1500 0 is_stmt 0 discriminator 1
 439 0054 EE79     		ldrb	r6, [r5, #7]
 440              	.L42:
 441              		.loc 1 1500 0 discriminator 4
 442 0056 0E70     		strb	r6, [r1]
 443              	.L41:
1501:Generated_Source\PSoC4/CapSense_Processing.c ****             #endif /* #if (0u != CapSense_OFF_DEBOUNCE_EN) */
1502:Generated_Source\PSoC4/CapSense_Processing.c ****         }
1503:Generated_Source\PSoC4/CapSense_Processing.c **** 
1504:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Move mask to the next sensor */
1505:Generated_Source\PSoC4/CapSense_Processing.c ****         snsMask <<= 1u;
 444              		.loc 1 1505 0 is_stmt 1
 445 0058 5B00     		lsls	r3, r3, #1
 446              	.LVL67:
1506:Generated_Source\PSoC4/CapSense_Processing.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 36


1507:Generated_Source\PSoC4/CapSense_Processing.c ****         ptrSnsTmp++;
 447              		.loc 1 1507 0
 448 005a 0A34     		adds	r4, r4, #10
 449              	.LVL68:
1508:Generated_Source\PSoC4/CapSense_Processing.c ****         ptrDebounceCnt++;
 450              		.loc 1 1508 0
 451 005c 0131     		adds	r1, r1, #1
 452              	.LVL69:
 453 005e D6E7     		b	.L36
 454              	.LVL70:
 455              	.L52:
1493:Generated_Source\PSoC4/CapSense_Processing.c ****             currStatus |= newStatus;
 456              		.loc 1 1493 0
 457 0060 9843     		bics	r0, r3
 458              	.LVL71:
 459 0062 F7E7     		b	.L44
 460              	.LVL72:
 461              	.L51:
1509:Generated_Source\PSoC4/CapSense_Processing.c ****     }
1510:Generated_Source\PSoC4/CapSense_Processing.c **** 
1511:Generated_Source\PSoC4/CapSense_Processing.c ****     return currStatus;
1512:Generated_Source\PSoC4/CapSense_Processing.c **** }
 462              		.loc 1 1512 0
 463              		@ sp needed
 464              	.LVL73:
 465              	.LVL74:
 466 0064 FEBD     		pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 467              		.cfi_endproc
 468              	.LFE6:
 469              		.size	CapSense_DpProcessButton, .-CapSense_DpProcessButton
 470              		.section	.text.CapSense_DpProcessCsdWidgetStatus,"ax",%progbits
 471              		.align	1
 472              		.global	CapSense_DpProcessCsdWidgetStatus
 473              		.code	16
 474              		.thumb_func
 475              		.type	CapSense_DpProcessCsdWidgetStatus, %function
 476              	CapSense_DpProcessCsdWidgetStatus:
 477              	.LFB4:
1247:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 sensorStatus;
 478              		.loc 1 1247 0
 479              		.cfi_startproc
 480              		@ args = 0, pretend = 0, frame = 0
 481              		@ frame_needed = 0, uses_anonymous_args = 0
 482              	.LVL75:
 483 0000 70B5     		push	{r4, r5, r6, lr}
 484              		.cfi_def_cfa_offset 16
 485              		.cfi_offset 4, -16
 486              		.cfi_offset 5, -12
 487              		.cfi_offset 6, -8
 488              		.cfi_offset 14, -4
1254:Generated_Source\PSoC4/CapSense_Processing.c **** 
 489              		.loc 1 1254 0
 490 0002 0E4B     		ldr	r3, .L59
1247:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 sensorStatus;
 491              		.loc 1 1247 0
 492 0004 0500     		movs	r5, r0
1254:Generated_Source\PSoC4/CapSense_Processing.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 37


 493              		.loc 1 1254 0
 494 0006 1A18     		adds	r2, r3, r0
 495 0008 107E     		ldrb	r0, [r2, #24]
 496              	.LVL76:
1256:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 497              		.loc 1 1256 0
 498 000a 8A7E     		ldrb	r2, [r1, #26]
 499 000c 1C00     		movs	r4, r3
 500 000e 012A     		cmp	r2, #1
 501 0010 01D1     		bne	.L54
1260:Generated_Source\PSoC4/CapSense_Processing.c ****             break;
 502              		.loc 1 1260 0
 503 0012 FFF7FEFF 		bl	CapSense_DpProcessButton
 504              	.LVL77:
 505              	.L54:
1301:Generated_Source\PSoC4/CapSense_Processing.c **** 
 506              		.loc 1 1301 0
 507 0016 1F22     		movs	r2, #31
1297:Generated_Source\PSoC4/CapSense_Processing.c **** 
 508              		.loc 1 1297 0
 509 0018 6319     		adds	r3, r4, r5
 510 001a 1876     		strb	r0, [r3, #24]
1300:Generated_Source\PSoC4/CapSense_Processing.c ****     wdStatusMask = CapSense_GET_WDGT_STATUS_MASK(widgetId);
 511              		.loc 1 1300 0
 512 001c 6B09     		lsrs	r3, r5, #5
 513              	.LVL78:
 514 001e 0433     		adds	r3, r3, #4
 515              	.LVL79:
1306:Generated_Source\PSoC4/CapSense_Processing.c ****     }
 516              		.loc 1 1306 0
 517 0020 9B00     		lsls	r3, r3, #2
 518              	.LVL80:
1301:Generated_Source\PSoC4/CapSense_Processing.c **** 
 519              		.loc 1 1301 0
 520 0022 1540     		ands	r5, r2
 521              	.LVL81:
1306:Generated_Source\PSoC4/CapSense_Processing.c ****     }
 522              		.loc 1 1306 0
 523 0024 E318     		adds	r3, r4, r3
1301:Generated_Source\PSoC4/CapSense_Processing.c **** 
 524              		.loc 1 1301 0
 525 0026 1E3A     		subs	r2, r2, #30
 526 0028 AA40     		lsls	r2, r2, r5
 527              	.LVL82:
1306:Generated_Source\PSoC4/CapSense_Processing.c ****     }
 528              		.loc 1 1306 0
 529 002a 5968     		ldr	r1, [r3, #4]
1304:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 530              		.loc 1 1304 0
 531 002c 0028     		cmp	r0, #0
 532 002e 02D1     		bne	.L56
1306:Generated_Source\PSoC4/CapSense_Processing.c ****     }
 533              		.loc 1 1306 0
 534 0030 9143     		bics	r1, r2
 535 0032 0A00     		movs	r2, r1
 536              	.LVL83:
 537 0034 00E0     		b	.L58
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 38


 538              	.LVL84:
 539              	.L56:
1310:Generated_Source\PSoC4/CapSense_Processing.c ****     }
 540              		.loc 1 1310 0
 541 0036 0A43     		orrs	r2, r1
 542              	.LVL85:
 543              	.L58:
 544 0038 5A60     		str	r2, [r3, #4]
1312:Generated_Source\PSoC4/CapSense_Processing.c **** #endif /* #if (0u != CapSense_TOTAL_CSD_WIDGETS) */
 545              		.loc 1 1312 0
 546              		@ sp needed
 547              	.LVL86:
 548 003a 70BD     		pop	{r4, r5, r6, pc}
 549              	.L60:
 550              		.align	2
 551              	.L59:
 552 003c 00000000 		.word	CapSense_dsRam
 553              		.cfi_endproc
 554              	.LFE4:
 555              		.size	CapSense_DpProcessCsdWidgetStatus, .-CapSense_DpProcessCsdWidgetStatus
 556              		.text
 557              	.Letext0:
 558              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 559              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 560              		.file 4 "Generated_Source\\PSoC4\\CapSense_Configuration.h"
 561              		.file 5 "Generated_Source\\PSoC4\\CapSense_Structure.h"
 562              		.file 6 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 563              		.file 7 "Generated_Source\\PSoC4\\CapSense_Filter.h"
 564              		.section	.debug_info,"",%progbits
 565              	.Ldebug_info0:
 566 0000 500A0000 		.4byte	0xa50
 567 0004 0400     		.2byte	0x4
 568 0006 00000000 		.4byte	.Ldebug_abbrev0
 569 000a 04       		.byte	0x4
 570 000b 01       		.uleb128 0x1
 571 000c D6060000 		.4byte	.LASF126
 572 0010 0C       		.byte	0xc
 573 0011 0A030000 		.4byte	.LASF127
 574 0015 52040000 		.4byte	.LASF128
 575 0019 00000000 		.4byte	.Ldebug_ranges0+0
 576 001d 00000000 		.4byte	0
 577 0021 00000000 		.4byte	.Ldebug_line0
 578 0025 02       		.uleb128 0x2
 579 0026 01       		.byte	0x1
 580 0027 06       		.byte	0x6
 581 0028 81070000 		.4byte	.LASF0
 582 002c 02       		.uleb128 0x2
 583 002d 01       		.byte	0x1
 584 002e 08       		.byte	0x8
 585 002f 63060000 		.4byte	.LASF1
 586 0033 02       		.uleb128 0x2
 587 0034 02       		.byte	0x2
 588 0035 05       		.byte	0x5
 589 0036 3B050000 		.4byte	.LASF2
 590 003a 02       		.uleb128 0x2
 591 003b 02       		.byte	0x2
 592 003c 07       		.byte	0x7
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 39


 593 003d 92070000 		.4byte	.LASF3
 594 0041 02       		.uleb128 0x2
 595 0042 04       		.byte	0x4
 596 0043 05       		.byte	0x5
 597 0044 76050000 		.4byte	.LASF4
 598 0048 02       		.uleb128 0x2
 599 0049 04       		.byte	0x4
 600 004a 07       		.byte	0x7
 601 004b 0A060000 		.4byte	.LASF5
 602 004f 02       		.uleb128 0x2
 603 0050 08       		.byte	0x8
 604 0051 05       		.byte	0x5
 605 0052 7A030000 		.4byte	.LASF6
 606 0056 02       		.uleb128 0x2
 607 0057 08       		.byte	0x8
 608 0058 07       		.byte	0x7
 609 0059 98010000 		.4byte	.LASF7
 610 005d 03       		.uleb128 0x3
 611 005e 04       		.byte	0x4
 612 005f 05       		.byte	0x5
 613 0060 696E7400 		.ascii	"int\000"
 614 0064 02       		.uleb128 0x2
 615 0065 04       		.byte	0x4
 616 0066 07       		.byte	0x7
 617 0067 8A000000 		.4byte	.LASF8
 618 006b 04       		.uleb128 0x4
 619 006c B2070000 		.4byte	.LASF9
 620 0070 02       		.byte	0x2
 621 0071 E401     		.2byte	0x1e4
 622 0073 2C000000 		.4byte	0x2c
 623 0077 04       		.uleb128 0x4
 624 0078 F1020000 		.4byte	.LASF10
 625 007c 02       		.byte	0x2
 626 007d E501     		.2byte	0x1e5
 627 007f 3A000000 		.4byte	0x3a
 628 0083 04       		.uleb128 0x4
 629 0084 33040000 		.4byte	.LASF11
 630 0088 02       		.byte	0x2
 631 0089 E601     		.2byte	0x1e6
 632 008b 48000000 		.4byte	0x48
 633 008f 04       		.uleb128 0x4
 634 0090 53010000 		.4byte	.LASF12
 635 0094 02       		.byte	0x2
 636 0095 E901     		.2byte	0x1e9
 637 0097 41000000 		.4byte	0x41
 638 009b 02       		.uleb128 0x2
 639 009c 04       		.byte	0x4
 640 009d 04       		.byte	0x4
 641 009e 4D010000 		.4byte	.LASF13
 642 00a2 02       		.uleb128 0x2
 643 00a3 08       		.byte	0x8
 644 00a4 04       		.byte	0x4
 645 00a5 B8070000 		.4byte	.LASF14
 646 00a9 02       		.uleb128 0x2
 647 00aa 01       		.byte	0x1
 648 00ab 08       		.byte	0x8
 649 00ac C7020000 		.4byte	.LASF15
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 40


 650 00b0 05       		.uleb128 0x5
 651 00b1 83000000 		.4byte	0x83
 652 00b5 06       		.uleb128 0x6
 653 00b6 61020000 		.4byte	.LASF16
 654 00ba 03       		.byte	0x3
 655 00bb D8       		.byte	0xd8
 656 00bc 64000000 		.4byte	0x64
 657 00c0 02       		.uleb128 0x2
 658 00c1 08       		.byte	0x8
 659 00c2 04       		.byte	0x4
 660 00c3 B9040000 		.4byte	.LASF17
 661 00c7 02       		.uleb128 0x2
 662 00c8 04       		.byte	0x4
 663 00c9 07       		.byte	0x7
 664 00ca 01060000 		.4byte	.LASF18
 665 00ce 07       		.uleb128 0x7
 666 00cf 04       		.byte	0x4
 667 00d0 04       		.uleb128 0x4
 668 00d1 BE060000 		.4byte	.LASF19
 669 00d5 04       		.byte	0x4
 670 00d6 2A01     		.2byte	0x12a
 671 00d8 77000000 		.4byte	0x77
 672 00dc 04       		.uleb128 0x4
 673 00dd 37030000 		.4byte	.LASF20
 674 00e1 04       		.byte	0x4
 675 00e2 2E01     		.2byte	0x12e
 676 00e4 6B000000 		.4byte	0x6b
 677 00e8 08       		.uleb128 0x8
 678 00e9 01       		.byte	0x1
 679 00ea 2C000000 		.4byte	0x2c
 680 00ee 05       		.byte	0x5
 681 00ef 61       		.byte	0x61
 682 00f0 1F010000 		.4byte	0x11f
 683 00f4 09       		.uleb128 0x9
 684 00f5 9E050000 		.4byte	.LASF21
 685 00f9 01       		.byte	0x1
 686 00fa 09       		.uleb128 0x9
 687 00fb 84040000 		.4byte	.LASF22
 688 00ff 02       		.byte	0x2
 689 0100 09       		.uleb128 0x9
 690 0101 73020000 		.4byte	.LASF23
 691 0105 03       		.byte	0x3
 692 0106 09       		.uleb128 0x9
 693 0107 AF010000 		.4byte	.LASF24
 694 010b 04       		.byte	0x4
 695 010c 09       		.uleb128 0x9
 696 010d EC000000 		.4byte	.LASF25
 697 0111 05       		.byte	0x5
 698 0112 09       		.uleb128 0x9
 699 0113 00000000 		.4byte	.LASF26
 700 0117 06       		.byte	0x6
 701 0118 09       		.uleb128 0x9
 702 0119 14050000 		.4byte	.LASF27
 703 011d 07       		.byte	0x7
 704 011e 00       		.byte	0
 705 011f 06       		.uleb128 0x6
 706 0120 10040000 		.4byte	.LASF28
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 41


 707 0124 05       		.byte	0x5
 708 0125 69       		.byte	0x69
 709 0126 E8000000 		.4byte	0xe8
 710 012a 0A       		.uleb128 0xa
 711 012b 10       		.byte	0x10
 712 012c 05       		.byte	0x5
 713 012d AD       		.byte	0xad
 714 012e B7010000 		.4byte	0x1b7
 715 0132 0B       		.uleb128 0xb
 716 0133 F8020000 		.4byte	.LASF29
 717 0137 05       		.byte	0x5
 718 0138 B2       		.byte	0xb2
 719 0139 77000000 		.4byte	0x77
 720 013d 00       		.byte	0
 721 013e 0B       		.uleb128 0xb
 722 013f 34060000 		.4byte	.LASF30
 723 0143 05       		.byte	0x5
 724 0144 B7       		.byte	0xb7
 725 0145 D0000000 		.4byte	0xd0
 726 0149 02       		.byte	0x2
 727 014a 0B       		.uleb128 0xb
 728 014b BF020000 		.4byte	.LASF31
 729 014f 05       		.byte	0x5
 730 0150 BC       		.byte	0xbc
 731 0151 6B000000 		.4byte	0x6b
 732 0155 04       		.byte	0x4
 733 0156 0B       		.uleb128 0xb
 734 0157 E0030000 		.4byte	.LASF32
 735 015b 05       		.byte	0x5
 736 015c C1       		.byte	0xc1
 737 015d 6B000000 		.4byte	0x6b
 738 0161 05       		.byte	0x5
 739 0162 0B       		.uleb128 0xb
 740 0163 68020000 		.4byte	.LASF33
 741 0167 05       		.byte	0x5
 742 0168 C7       		.byte	0xc7
 743 0169 6B000000 		.4byte	0x6b
 744 016d 06       		.byte	0x6
 745 016e 0B       		.uleb128 0xb
 746 016f 90030000 		.4byte	.LASF34
 747 0173 05       		.byte	0x5
 748 0174 CD       		.byte	0xcd
 749 0175 6B000000 		.4byte	0x6b
 750 0179 07       		.byte	0x7
 751 017a 0B       		.uleb128 0xb
 752 017b A8020000 		.4byte	.LASF35
 753 017f 05       		.byte	0x5
 754 0180 D4       		.byte	0xd4
 755 0181 DC000000 		.4byte	0xdc
 756 0185 08       		.byte	0x8
 757 0186 0B       		.uleb128 0xb
 758 0187 1C060000 		.4byte	.LASF36
 759 018b 05       		.byte	0x5
 760 018c DB       		.byte	0xdb
 761 018d B7010000 		.4byte	0x1b7
 762 0191 09       		.byte	0x9
 763 0192 0B       		.uleb128 0xb
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 42


 764 0193 30010000 		.4byte	.LASF37
 765 0197 05       		.byte	0x5
 766 0198 E0       		.byte	0xe0
 767 0199 6B000000 		.4byte	0x6b
 768 019d 0A       		.byte	0xa
 769 019e 0B       		.uleb128 0xb
 770 019f 7A070000 		.4byte	.LASF38
 771 01a3 05       		.byte	0x5
 772 01a4 E8       		.byte	0xe8
 773 01a5 77000000 		.4byte	0x77
 774 01a9 0C       		.byte	0xc
 775 01aa 0B       		.uleb128 0xb
 776 01ab 2E050000 		.4byte	.LASF39
 777 01af 05       		.byte	0x5
 778 01b0 ED       		.byte	0xed
 779 01b1 6B000000 		.4byte	0x6b
 780 01b5 0E       		.byte	0xe
 781 01b6 00       		.byte	0
 782 01b7 0C       		.uleb128 0xc
 783 01b8 6B000000 		.4byte	0x6b
 784 01bc C7010000 		.4byte	0x1c7
 785 01c0 0D       		.uleb128 0xd
 786 01c1 C7000000 		.4byte	0xc7
 787 01c5 00       		.byte	0
 788 01c6 00       		.byte	0
 789 01c7 06       		.uleb128 0x6
 790 01c8 F4030000 		.4byte	.LASF40
 791 01cc 05       		.byte	0x5
 792 01cd EE       		.byte	0xee
 793 01ce 2A010000 		.4byte	0x12a
 794 01d2 0A       		.uleb128 0xa
 795 01d3 10       		.byte	0x10
 796 01d4 05       		.byte	0x5
 797 01d5 F3       		.byte	0xf3
 798 01d6 68020000 		.4byte	0x268
 799 01da 0B       		.uleb128 0xb
 800 01db F8020000 		.4byte	.LASF29
 801 01df 05       		.byte	0x5
 802 01e0 F8       		.byte	0xf8
 803 01e1 77000000 		.4byte	0x77
 804 01e5 00       		.byte	0
 805 01e6 0B       		.uleb128 0xb
 806 01e7 34060000 		.4byte	.LASF30
 807 01eb 05       		.byte	0x5
 808 01ec FD       		.byte	0xfd
 809 01ed D0000000 		.4byte	0xd0
 810 01f1 02       		.byte	0x2
 811 01f2 0E       		.uleb128 0xe
 812 01f3 BF020000 		.4byte	.LASF31
 813 01f7 05       		.byte	0x5
 814 01f8 0201     		.2byte	0x102
 815 01fa 6B000000 		.4byte	0x6b
 816 01fe 04       		.byte	0x4
 817 01ff 0E       		.uleb128 0xe
 818 0200 E0030000 		.4byte	.LASF32
 819 0204 05       		.byte	0x5
 820 0205 0701     		.2byte	0x107
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 43


 821 0207 6B000000 		.4byte	0x6b
 822 020b 05       		.byte	0x5
 823 020c 0E       		.uleb128 0xe
 824 020d 68020000 		.4byte	.LASF33
 825 0211 05       		.byte	0x5
 826 0212 0D01     		.2byte	0x10d
 827 0214 6B000000 		.4byte	0x6b
 828 0218 06       		.byte	0x6
 829 0219 0E       		.uleb128 0xe
 830 021a 90030000 		.4byte	.LASF34
 831 021e 05       		.byte	0x5
 832 021f 1301     		.2byte	0x113
 833 0221 6B000000 		.4byte	0x6b
 834 0225 07       		.byte	0x7
 835 0226 0E       		.uleb128 0xe
 836 0227 A8020000 		.4byte	.LASF35
 837 022b 05       		.byte	0x5
 838 022c 1A01     		.2byte	0x11a
 839 022e DC000000 		.4byte	0xdc
 840 0232 08       		.byte	0x8
 841 0233 0E       		.uleb128 0xe
 842 0234 1C060000 		.4byte	.LASF36
 843 0238 05       		.byte	0x5
 844 0239 2101     		.2byte	0x121
 845 023b B7010000 		.4byte	0x1b7
 846 023f 09       		.byte	0x9
 847 0240 0E       		.uleb128 0xe
 848 0241 30010000 		.4byte	.LASF37
 849 0245 05       		.byte	0x5
 850 0246 2601     		.2byte	0x126
 851 0248 6B000000 		.4byte	0x6b
 852 024c 0A       		.byte	0xa
 853 024d 0E       		.uleb128 0xe
 854 024e 7A070000 		.4byte	.LASF38
 855 0252 05       		.byte	0x5
 856 0253 2E01     		.2byte	0x12e
 857 0255 77000000 		.4byte	0x77
 858 0259 0C       		.byte	0xc
 859 025a 0E       		.uleb128 0xe
 860 025b 2E050000 		.4byte	.LASF39
 861 025f 05       		.byte	0x5
 862 0260 3301     		.2byte	0x133
 863 0262 6B000000 		.4byte	0x6b
 864 0266 0E       		.byte	0xe
 865 0267 00       		.byte	0
 866 0268 04       		.uleb128 0x4
 867 0269 45060000 		.4byte	.LASF41
 868 026d 05       		.byte	0x5
 869 026e 3401     		.2byte	0x134
 870 0270 D2010000 		.4byte	0x1d2
 871 0274 0F       		.uleb128 0xf
 872 0275 40       		.byte	0x40
 873 0276 05       		.byte	0x5
 874 0277 3A01     		.2byte	0x13a
 875 0279 B1020000 		.4byte	0x2b1
 876 027d 10       		.uleb128 0x10
 877 027e 757000   		.ascii	"up\000"
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 44


 878 0281 05       		.byte	0x5
 879 0282 3F01     		.2byte	0x13f
 880 0284 68020000 		.4byte	0x268
 881 0288 00       		.byte	0
 882 0289 0E       		.uleb128 0xe
 883 028a 3E010000 		.4byte	.LASF42
 884 028e 05       		.byte	0x5
 885 028f 4401     		.2byte	0x144
 886 0291 68020000 		.4byte	0x268
 887 0295 10       		.byte	0x10
 888 0296 0E       		.uleb128 0xe
 889 0297 E2050000 		.4byte	.LASF43
 890 029b 05       		.byte	0x5
 891 029c 4901     		.2byte	0x149
 892 029e 68020000 		.4byte	0x268
 893 02a2 20       		.byte	0x20
 894 02a3 0E       		.uleb128 0xe
 895 02a4 74030000 		.4byte	.LASF44
 896 02a8 05       		.byte	0x5
 897 02a9 4E01     		.2byte	0x14e
 898 02ab 68020000 		.4byte	0x268
 899 02af 30       		.byte	0x30
 900 02b0 00       		.byte	0
 901 02b1 04       		.uleb128 0x4
 902 02b2 03010000 		.4byte	.LASF45
 903 02b6 05       		.byte	0x5
 904 02b7 4F01     		.2byte	0x14f
 905 02b9 74020000 		.4byte	0x274
 906 02bd 0F       		.uleb128 0xf
 907 02be 0A       		.byte	0xa
 908 02bf 05       		.byte	0x5
 909 02c0 5501     		.2byte	0x155
 910 02c2 15030000 		.4byte	0x315
 911 02c6 10       		.uleb128 0x10
 912 02c7 72617700 		.ascii	"raw\000"
 913 02cb 05       		.byte	0x5
 914 02cc 5A01     		.2byte	0x15a
 915 02ce 15030000 		.4byte	0x315
 916 02d2 00       		.byte	0
 917 02d3 0E       		.uleb128 0xe
 918 02d4 8D070000 		.4byte	.LASF46
 919 02d8 05       		.byte	0x5
 920 02d9 5F01     		.2byte	0x15f
 921 02db 15030000 		.4byte	0x315
 922 02df 02       		.byte	0x2
 923 02e0 0E       		.uleb128 0xe
 924 02e1 3D060000 		.4byte	.LASF47
 925 02e5 05       		.byte	0x5
 926 02e6 6501     		.2byte	0x165
 927 02e8 B7010000 		.4byte	0x1b7
 928 02ec 04       		.byte	0x4
 929 02ed 0E       		.uleb128 0xe
 930 02ee 8A050000 		.4byte	.LASF48
 931 02f2 05       		.byte	0x5
 932 02f3 6A01     		.2byte	0x16a
 933 02f5 D0000000 		.4byte	0xd0
 934 02f9 06       		.byte	0x6
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 45


 935 02fa 0E       		.uleb128 0xe
 936 02fb BF070000 		.4byte	.LASF49
 937 02ff 05       		.byte	0x5
 938 0300 6F01     		.2byte	0x16f
 939 0302 25030000 		.4byte	0x325
 940 0306 08       		.byte	0x8
 941 0307 0E       		.uleb128 0xe
 942 0308 6B030000 		.4byte	.LASF50
 943 030c 05       		.byte	0x5
 944 030d 7401     		.2byte	0x174
 945 030f B7010000 		.4byte	0x1b7
 946 0313 09       		.byte	0x9
 947 0314 00       		.byte	0
 948 0315 0C       		.uleb128 0xc
 949 0316 77000000 		.4byte	0x77
 950 031a 25030000 		.4byte	0x325
 951 031e 0D       		.uleb128 0xd
 952 031f C7000000 		.4byte	0xc7
 953 0323 00       		.byte	0
 954 0324 00       		.byte	0
 955 0325 0C       		.uleb128 0xc
 956 0326 DC000000 		.4byte	0xdc
 957 032a 35030000 		.4byte	0x335
 958 032e 0D       		.uleb128 0xd
 959 032f C7000000 		.4byte	0xc7
 960 0333 00       		.byte	0
 961 0334 00       		.byte	0
 962 0335 04       		.uleb128 0x4
 963 0336 49020000 		.4byte	.LASF51
 964 033a 05       		.byte	0x5
 965 033b 7501     		.2byte	0x175
 966 033d BD020000 		.4byte	0x2bd
 967 0341 0F       		.uleb128 0xf
 968 0342 28       		.byte	0x28
 969 0343 05       		.byte	0x5
 970 0344 7B01     		.2byte	0x17b
 971 0346 7E030000 		.4byte	0x37e
 972 034a 10       		.uleb128 0x10
 973 034b 757000   		.ascii	"up\000"
 974 034e 05       		.byte	0x5
 975 034f 8001     		.2byte	0x180
 976 0351 7E030000 		.4byte	0x37e
 977 0355 00       		.byte	0
 978 0356 0E       		.uleb128 0xe
 979 0357 3E010000 		.4byte	.LASF42
 980 035b 05       		.byte	0x5
 981 035c 8501     		.2byte	0x185
 982 035e 7E030000 		.4byte	0x37e
 983 0362 0A       		.byte	0xa
 984 0363 0E       		.uleb128 0xe
 985 0364 E2050000 		.4byte	.LASF43
 986 0368 05       		.byte	0x5
 987 0369 8A01     		.2byte	0x18a
 988 036b 7E030000 		.4byte	0x37e
 989 036f 14       		.byte	0x14
 990 0370 0E       		.uleb128 0xe
 991 0371 74030000 		.4byte	.LASF44
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 46


 992 0375 05       		.byte	0x5
 993 0376 8F01     		.2byte	0x18f
 994 0378 7E030000 		.4byte	0x37e
 995 037c 1E       		.byte	0x1e
 996 037d 00       		.byte	0
 997 037e 0C       		.uleb128 0xc
 998 037f 35030000 		.4byte	0x335
 999 0383 8E030000 		.4byte	0x38e
 1000 0387 0D       		.uleb128 0xd
 1001 0388 C7000000 		.4byte	0xc7
 1002 038c 00       		.byte	0
 1003 038d 00       		.byte	0
 1004 038e 04       		.uleb128 0x4
 1005 038f EA070000 		.4byte	.LASF52
 1006 0393 05       		.byte	0x5
 1007 0394 9001     		.2byte	0x190
 1008 0396 41030000 		.4byte	0x341
 1009 039a 0F       		.uleb128 0xf
 1010 039b 90       		.byte	0x90
 1011 039c 05       		.byte	0x5
 1012 039d 9601     		.2byte	0x196
 1013 039f 9B040000 		.4byte	0x49b
 1014 03a3 0E       		.uleb128 0xe
 1015 03a4 EB040000 		.4byte	.LASF53
 1016 03a8 05       		.byte	0x5
 1017 03a9 9D01     		.2byte	0x19d
 1018 03ab 77000000 		.4byte	0x77
 1019 03af 00       		.byte	0
 1020 03b0 0E       		.uleb128 0xe
 1021 03b1 D8070000 		.4byte	.LASF54
 1022 03b5 05       		.byte	0x5
 1023 03b6 A201     		.2byte	0x1a2
 1024 03b8 77000000 		.4byte	0x77
 1025 03bc 02       		.byte	0x2
 1026 03bd 0E       		.uleb128 0xe
 1027 03be C0000000 		.4byte	.LASF55
 1028 03c2 05       		.byte	0x5
 1029 03c3 A701     		.2byte	0x1a7
 1030 03c5 77000000 		.4byte	0x77
 1031 03c9 04       		.byte	0x4
 1032 03ca 0E       		.uleb128 0xe
 1033 03cb 8F050000 		.4byte	.LASF56
 1034 03cf 05       		.byte	0x5
 1035 03d0 AD01     		.2byte	0x1ad
 1036 03d2 77000000 		.4byte	0x77
 1037 03d6 06       		.byte	0x6
 1038 03d7 0E       		.uleb128 0xe
 1039 03d8 97000000 		.4byte	.LASF57
 1040 03dc 05       		.byte	0x5
 1041 03dd B201     		.2byte	0x1b2
 1042 03df 77000000 		.4byte	0x77
 1043 03e3 08       		.byte	0x8
 1044 03e4 0E       		.uleb128 0xe
 1045 03e5 03030000 		.4byte	.LASF58
 1046 03e9 05       		.byte	0x5
 1047 03ea B701     		.2byte	0x1b7
 1048 03ec B0000000 		.4byte	0xb0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 47


 1049 03f0 0C       		.byte	0xc
 1050 03f1 0E       		.uleb128 0xe
 1051 03f2 7F050000 		.4byte	.LASF59
 1052 03f6 05       		.byte	0x5
 1053 03f7 BD01     		.2byte	0x1bd
 1054 03f9 9B040000 		.4byte	0x49b
 1055 03fd 10       		.byte	0x10
 1056 03fe 0E       		.uleb128 0xe
 1057 03ff F6050000 		.4byte	.LASF60
 1058 0403 05       		.byte	0x5
 1059 0404 C401     		.2byte	0x1c4
 1060 0406 9B040000 		.4byte	0x49b
 1061 040a 14       		.byte	0x14
 1062 040b 0E       		.uleb128 0xe
 1063 040c 0A050000 		.4byte	.LASF61
 1064 0410 05       		.byte	0x5
 1065 0411 D401     		.2byte	0x1d4
 1066 0413 AB040000 		.4byte	0x4ab
 1067 0417 18       		.byte	0x18
 1068 0418 0E       		.uleb128 0xe
 1069 0419 E9030000 		.4byte	.LASF62
 1070 041d 05       		.byte	0x5
 1071 041e DA01     		.2byte	0x1da
 1072 0420 77000000 		.4byte	0x77
 1073 0424 1C       		.byte	0x1c
 1074 0425 0E       		.uleb128 0xe
 1075 0426 3F020000 		.4byte	.LASF63
 1076 042a 05       		.byte	0x5
 1077 042b DF01     		.2byte	0x1df
 1078 042d 6B000000 		.4byte	0x6b
 1079 0431 1E       		.byte	0x1e
 1080 0432 0E       		.uleb128 0xe
 1081 0433 9B030000 		.4byte	.LASF64
 1082 0437 05       		.byte	0x5
 1083 0438 E401     		.2byte	0x1e4
 1084 043a B1020000 		.4byte	0x2b1
 1085 043e 20       		.byte	0x20
 1086 043f 0E       		.uleb128 0xe
 1087 0440 89010000 		.4byte	.LASF65
 1088 0444 05       		.byte	0x5
 1089 0445 E901     		.2byte	0x1e9
 1090 0447 8E030000 		.4byte	0x38e
 1091 044b 60       		.byte	0x60
 1092 044c 0E       		.uleb128 0xe
 1093 044d 58000000 		.4byte	.LASF66
 1094 0451 05       		.byte	0x5
 1095 0452 EE01     		.2byte	0x1ee
 1096 0454 6B000000 		.4byte	0x6b
 1097 0458 88       		.byte	0x88
 1098 0459 0E       		.uleb128 0xe
 1099 045a D6010000 		.4byte	.LASF67
 1100 045e 05       		.byte	0x5
 1101 045f F301     		.2byte	0x1f3
 1102 0461 6B000000 		.4byte	0x6b
 1103 0465 89       		.byte	0x89
 1104 0466 0E       		.uleb128 0xe
 1105 0467 D8040000 		.4byte	.LASF68
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 48


 1106 046b 05       		.byte	0x5
 1107 046c F801     		.2byte	0x1f8
 1108 046e 77000000 		.4byte	0x77
 1109 0472 8A       		.byte	0x8a
 1110 0473 0E       		.uleb128 0xe
 1111 0474 C9030000 		.4byte	.LASF69
 1112 0478 05       		.byte	0x5
 1113 0479 FD01     		.2byte	0x1fd
 1114 047b 15030000 		.4byte	0x315
 1115 047f 8C       		.byte	0x8c
 1116 0480 0E       		.uleb128 0xe
 1117 0481 C8000000 		.4byte	.LASF70
 1118 0485 05       		.byte	0x5
 1119 0486 0202     		.2byte	0x202
 1120 0488 6B000000 		.4byte	0x6b
 1121 048c 8E       		.byte	0x8e
 1122 048d 0E       		.uleb128 0xe
 1123 048e A3060000 		.4byte	.LASF71
 1124 0492 05       		.byte	0x5
 1125 0493 0702     		.2byte	0x207
 1126 0495 6B000000 		.4byte	0x6b
 1127 0499 8F       		.byte	0x8f
 1128 049a 00       		.byte	0
 1129 049b 0C       		.uleb128 0xc
 1130 049c 83000000 		.4byte	0x83
 1131 04a0 AB040000 		.4byte	0x4ab
 1132 04a4 0D       		.uleb128 0xd
 1133 04a5 C7000000 		.4byte	0xc7
 1134 04a9 00       		.byte	0
 1135 04aa 00       		.byte	0
 1136 04ab 0C       		.uleb128 0xc
 1137 04ac 6B000000 		.4byte	0x6b
 1138 04b0 BB040000 		.4byte	0x4bb
 1139 04b4 0D       		.uleb128 0xd
 1140 04b5 C7000000 		.4byte	0xc7
 1141 04b9 03       		.byte	0x3
 1142 04ba 00       		.byte	0
 1143 04bb 04       		.uleb128 0x4
 1144 04bc 45050000 		.4byte	.LASF72
 1145 04c0 05       		.byte	0x5
 1146 04c1 0802     		.2byte	0x208
 1147 04c3 9A030000 		.4byte	0x39a
 1148 04c7 0F       		.uleb128 0xf
 1149 04c8 1C       		.byte	0x1c
 1150 04c9 05       		.byte	0x5
 1151 04ca 6F02     		.2byte	0x26f
 1152 04cc 46050000 		.4byte	0x546
 1153 04d0 0E       		.uleb128 0xe
 1154 04d1 A5070000 		.4byte	.LASF73
 1155 04d5 05       		.byte	0x5
 1156 04d6 7802     		.2byte	0x278
 1157 04d8 46050000 		.4byte	0x546
 1158 04dc 00       		.byte	0
 1159 04dd 0E       		.uleb128 0xe
 1160 04de B2060000 		.4byte	.LASF74
 1161 04e2 05       		.byte	0x5
 1162 04e3 7F02     		.2byte	0x27f
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 49


 1163 04e5 CE000000 		.4byte	0xce
 1164 04e9 04       		.byte	0x4
 1165 04ea 0E       		.uleb128 0xe
 1166 04eb F4040000 		.4byte	.LASF75
 1167 04ef 05       		.byte	0x5
 1168 04f0 8502     		.2byte	0x285
 1169 04f2 4D050000 		.4byte	0x54d
 1170 04f6 08       		.byte	0x8
 1171 04f7 0E       		.uleb128 0xe
 1172 04f8 42040000 		.4byte	.LASF76
 1173 04fc 05       		.byte	0x5
 1174 04fd 8B02     		.2byte	0x28b
 1175 04ff CE000000 		.4byte	0xce
 1176 0503 0C       		.byte	0xc
 1177 0504 0E       		.uleb128 0xe
 1178 0505 24060000 		.4byte	.LASF77
 1179 0509 05       		.byte	0x5
 1180 050a 9202     		.2byte	0x292
 1181 050c 53050000 		.4byte	0x553
 1182 0510 10       		.byte	0x10
 1183 0511 0E       		.uleb128 0xe
 1184 0512 96060000 		.4byte	.LASF78
 1185 0516 05       		.byte	0x5
 1186 0517 9702     		.2byte	0x297
 1187 0519 83000000 		.4byte	0x83
 1188 051d 14       		.byte	0x14
 1189 051e 0E       		.uleb128 0xe
 1190 051f B3020000 		.4byte	.LASF79
 1191 0523 05       		.byte	0x5
 1192 0524 9E02     		.2byte	0x29e
 1193 0526 77000000 		.4byte	0x77
 1194 052a 18       		.byte	0x18
 1195 052b 0E       		.uleb128 0xe
 1196 052c E6010000 		.4byte	.LASF80
 1197 0530 05       		.byte	0x5
 1198 0531 A502     		.2byte	0x2a5
 1199 0533 6B000000 		.4byte	0x6b
 1200 0537 1A       		.byte	0x1a
 1201 0538 0E       		.uleb128 0xe
 1202 0539 88030000 		.4byte	.LASF81
 1203 053d 05       		.byte	0x5
 1204 053e AF02     		.2byte	0x2af
 1205 0540 6B000000 		.4byte	0x6b
 1206 0544 1B       		.byte	0x1b
 1207 0545 00       		.byte	0
 1208 0546 11       		.uleb128 0x11
 1209 0547 04       		.byte	0x4
 1210 0548 4C050000 		.4byte	0x54c
 1211 054c 12       		.uleb128 0x12
 1212 054d 11       		.uleb128 0x11
 1213 054e 04       		.byte	0x4
 1214 054f 35030000 		.4byte	0x335
 1215 0553 11       		.uleb128 0x11
 1216 0554 04       		.byte	0x4
 1217 0555 6B000000 		.4byte	0x6b
 1218 0559 04       		.uleb128 0x4
 1219 055a 8F020000 		.4byte	.LASF82
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 50


 1220 055e 05       		.byte	0x5
 1221 055f B002     		.2byte	0x2b0
 1222 0561 C7040000 		.4byte	0x4c7
 1223 0565 0F       		.uleb128 0xf
 1224 0566 70       		.byte	0x70
 1225 0567 05       		.byte	0x5
 1226 0568 B602     		.2byte	0x2b6
 1227 056a 7C050000 		.4byte	0x57c
 1228 056e 0E       		.uleb128 0xe
 1229 056f 07080000 		.4byte	.LASF83
 1230 0573 05       		.byte	0x5
 1231 0574 BB02     		.2byte	0x2bb
 1232 0576 7C050000 		.4byte	0x57c
 1233 057a 00       		.byte	0
 1234 057b 00       		.byte	0
 1235 057c 0C       		.uleb128 0xc
 1236 057d 59050000 		.4byte	0x559
 1237 0581 8C050000 		.4byte	0x58c
 1238 0585 0D       		.uleb128 0xd
 1239 0586 C7000000 		.4byte	0xc7
 1240 058a 03       		.byte	0x3
 1241 058b 00       		.byte	0
 1242 058c 04       		.uleb128 0x4
 1243 058d A4030000 		.4byte	.LASF84
 1244 0591 05       		.byte	0x5
 1245 0592 BC02     		.2byte	0x2bc
 1246 0594 65050000 		.4byte	0x565
 1247 0598 0F       		.uleb128 0xf
 1248 0599 0C       		.byte	0xc
 1249 059a 05       		.byte	0x5
 1250 059b 1A03     		.2byte	0x31a
 1251 059d C9050000 		.4byte	0x5c9
 1252 05a1 0E       		.uleb128 0xe
 1253 05a2 64070000 		.4byte	.LASF85
 1254 05a6 05       		.byte	0x5
 1255 05a7 1F03     		.2byte	0x31f
 1256 05a9 77000000 		.4byte	0x77
 1257 05ad 00       		.byte	0
 1258 05ae 0E       		.uleb128 0xe
 1259 05af AE040000 		.4byte	.LASF86
 1260 05b3 05       		.byte	0x5
 1261 05b4 2503     		.2byte	0x325
 1262 05b6 C9050000 		.4byte	0x5c9
 1263 05ba 02       		.byte	0x2
 1264 05bb 0E       		.uleb128 0xe
 1265 05bc FF040000 		.4byte	.LASF87
 1266 05c0 05       		.byte	0x5
 1267 05c1 2A03     		.2byte	0x32a
 1268 05c3 D9050000 		.4byte	0x5d9
 1269 05c7 06       		.byte	0x6
 1270 05c8 00       		.byte	0
 1271 05c9 0C       		.uleb128 0xc
 1272 05ca 77000000 		.4byte	0x77
 1273 05ce D9050000 		.4byte	0x5d9
 1274 05d2 0D       		.uleb128 0xd
 1275 05d3 C7000000 		.4byte	0xc7
 1276 05d7 01       		.byte	0x1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 51


 1277 05d8 00       		.byte	0
 1278 05d9 0C       		.uleb128 0xc
 1279 05da 77000000 		.4byte	0x77
 1280 05de E9050000 		.4byte	0x5e9
 1281 05e2 0D       		.uleb128 0xd
 1282 05e3 C7000000 		.4byte	0xc7
 1283 05e7 02       		.byte	0x2
 1284 05e8 00       		.byte	0
 1285 05e9 04       		.uleb128 0x4
 1286 05ea B3050000 		.4byte	.LASF88
 1287 05ee 05       		.byte	0x5
 1288 05ef 2B03     		.2byte	0x32b
 1289 05f1 98050000 		.4byte	0x598
 1290 05f5 0F       		.uleb128 0xf
 1291 05f6 0C       		.byte	0xc
 1292 05f7 05       		.byte	0x5
 1293 05f8 3003     		.2byte	0x330
 1294 05fa 0C060000 		.4byte	0x60c
 1295 05fe 0E       		.uleb128 0xe
 1296 05ff 30020000 		.4byte	.LASF89
 1297 0603 05       		.byte	0x5
 1298 0604 3503     		.2byte	0x335
 1299 0606 0C060000 		.4byte	0x60c
 1300 060a 00       		.byte	0
 1301 060b 00       		.byte	0
 1302 060c 0C       		.uleb128 0xc
 1303 060d E9050000 		.4byte	0x5e9
 1304 0611 1C060000 		.4byte	0x61c
 1305 0615 0D       		.uleb128 0xd
 1306 0616 C7000000 		.4byte	0xc7
 1307 061a 00       		.byte	0
 1308 061b 00       		.byte	0
 1309 061c 04       		.uleb128 0x4
 1310 061d 59050000 		.4byte	.LASF90
 1311 0621 05       		.byte	0x5
 1312 0622 3603     		.2byte	0x336
 1313 0624 F5050000 		.4byte	0x5f5
 1314 0628 13       		.uleb128 0x13
 1315 0629 04       		.byte	0x4
 1316 062a 05       		.byte	0x5
 1317 062b 3B03     		.2byte	0x33b
 1318 062d 4A060000 		.4byte	0x64a
 1319 0631 14       		.uleb128 0x14
 1320 0632 70747200 		.ascii	"ptr\000"
 1321 0636 05       		.byte	0x5
 1322 0637 4003     		.2byte	0x340
 1323 0639 CE000000 		.4byte	0xce
 1324 063d 15       		.uleb128 0x15
 1325 063e CB010000 		.4byte	.LASF91
 1326 0642 05       		.byte	0x5
 1327 0643 4503     		.2byte	0x345
 1328 0645 4A060000 		.4byte	0x64a
 1329 0649 00       		.byte	0
 1330 064a 11       		.uleb128 0x11
 1331 064b 04       		.byte	0x4
 1332 064c 1C060000 		.4byte	0x61c
 1333 0650 04       		.uleb128 0x4
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 52


 1334 0651 14020000 		.4byte	.LASF92
 1335 0655 05       		.byte	0x5
 1336 0656 4603     		.2byte	0x346
 1337 0658 28060000 		.4byte	0x628
 1338 065c 16       		.uleb128 0x16
 1339 065d 59010000 		.4byte	.LASF97
 1340 0661 01       		.byte	0x1
 1341 0662 9001     		.2byte	0x190
 1342 0664 00000000 		.4byte	.LFB1
 1343 0668 48000000 		.4byte	.LFE1-.LFB1
 1344 066c 01       		.uleb128 0x1
 1345 066d 9C       		.byte	0x9c
 1346 066e BC060000 		.4byte	0x6bc
 1347 0672 17       		.uleb128 0x17
 1348 0673 47000000 		.4byte	.LASF93
 1349 0677 01       		.byte	0x1
 1350 0678 9201     		.2byte	0x192
 1351 067a 83000000 		.4byte	0x83
 1352 067e 00000000 		.4byte	.LLST0
 1353 0682 17       		.uleb128 0x17
 1354 0683 CD070000 		.4byte	.LASF94
 1355 0687 01       		.byte	0x1
 1356 0688 9301     		.2byte	0x193
 1357 068a 1F010000 		.4byte	0x11f
 1358 068e 14000000 		.4byte	.LLST1
 1359 0692 17       		.uleb128 0x17
 1360 0693 C5040000 		.4byte	.LASF95
 1361 0697 01       		.byte	0x1
 1362 0698 9401     		.2byte	0x194
 1363 069a BC060000 		.4byte	0x6bc
 1364 069e 27000000 		.4byte	.LLST2
 1365 06a2 17       		.uleb128 0x17
 1366 06a3 89060000 		.4byte	.LASF96
 1367 06a7 01       		.byte	0x1
 1368 06a8 9501     		.2byte	0x195
 1369 06aa C2060000 		.4byte	0x6c2
 1370 06ae 3A000000 		.4byte	.LLST3
 1371 06b2 18       		.uleb128 0x18
 1372 06b3 30000000 		.4byte	.LVL4
 1373 06b7 320A0000 		.4byte	0xa32
 1374 06bb 00       		.byte	0
 1375 06bc 11       		.uleb128 0x11
 1376 06bd 04       		.byte	0x4
 1377 06be C7010000 		.4byte	0x1c7
 1378 06c2 11       		.uleb128 0x11
 1379 06c3 04       		.byte	0x4
 1380 06c4 C8060000 		.4byte	0x6c8
 1381 06c8 19       		.uleb128 0x19
 1382 06c9 59050000 		.4byte	0x559
 1383 06cd 16       		.uleb128 0x16
 1384 06ce A3000000 		.4byte	.LASF98
 1385 06d2 01       		.byte	0x1
 1386 06d3 5E05     		.2byte	0x55e
 1387 06d5 00000000 		.4byte	.LFB5
 1388 06d9 16000000 		.4byte	.LFE5-.LFB5
 1389 06dd 01       		.uleb128 0x1
 1390 06de 9C       		.byte	0x9c
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 53


 1391 06df 10070000 		.4byte	0x710
 1392 06e3 1A       		.uleb128 0x1a
 1393 06e4 C5040000 		.4byte	.LASF95
 1394 06e8 01       		.byte	0x1
 1395 06e9 5F05     		.2byte	0x55f
 1396 06eb BC060000 		.4byte	0x6bc
 1397 06ef 01       		.uleb128 0x1
 1398 06f0 50       		.byte	0x50
 1399 06f1 1A       		.uleb128 0x1a
 1400 06f2 E2000000 		.4byte	.LASF99
 1401 06f6 01       		.byte	0x1
 1402 06f7 6005     		.2byte	0x560
 1403 06f9 4D050000 		.4byte	0x54d
 1404 06fd 01       		.uleb128 0x1
 1405 06fe 51       		.byte	0x51
 1406 06ff 17       		.uleb128 0x17
 1407 0700 D3000000 		.4byte	.LASF100
 1408 0704 01       		.byte	0x1
 1409 0705 6205     		.2byte	0x562
 1410 0707 8F000000 		.4byte	0x8f
 1411 070b 69000000 		.4byte	.LLST4
 1412 070f 00       		.byte	0
 1413 0710 1B       		.uleb128 0x1b
 1414 0711 CC020000 		.4byte	.LASF106
 1415 0715 01       		.byte	0x1
 1416 0716 F803     		.2byte	0x3f8
 1417 0718 83000000 		.4byte	0x83
 1418 071c 00000000 		.4byte	.LFB2
 1419 0720 58000000 		.4byte	.LFE2-.LFB2
 1420 0724 01       		.uleb128 0x1
 1421 0725 9C       		.byte	0x9c
 1422 0726 03080000 		.4byte	0x803
 1423 072a 1C       		.uleb128 0x1c
 1424 072b 89060000 		.4byte	.LASF96
 1425 072f 01       		.byte	0x1
 1426 0730 F803     		.2byte	0x3f8
 1427 0732 C2060000 		.4byte	0x6c2
 1428 0736 CB000000 		.4byte	.LLST5
 1429 073a 17       		.uleb128 0x17
 1430 073b 91010000 		.4byte	.LASF101
 1431 073f 01       		.byte	0x1
 1432 0740 FA03     		.2byte	0x3fa
 1433 0742 83000000 		.4byte	0x83
 1434 0746 F7000000 		.4byte	.LLST6
 1435 074a 17       		.uleb128 0x17
 1436 074b CD070000 		.4byte	.LASF94
 1437 074f 01       		.byte	0x1
 1438 0750 0004     		.2byte	0x400
 1439 0752 83000000 		.4byte	0x83
 1440 0756 2E010000 		.4byte	.LLST7
 1441 075a 17       		.uleb128 0x17
 1442 075b 98050000 		.4byte	.LASF102
 1443 075f 01       		.byte	0x1
 1444 0760 0104     		.2byte	0x401
 1445 0762 83000000 		.4byte	0x83
 1446 0766 41010000 		.4byte	.LLST8
 1447 076a 17       		.uleb128 0x17
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 54


 1448 076b D8050000 		.4byte	.LASF103
 1449 076f 01       		.byte	0x1
 1450 0770 0204     		.2byte	0x402
 1451 0772 4D050000 		.4byte	0x54d
 1452 0776 54010000 		.4byte	.LLST9
 1453 077a 1D       		.uleb128 0x1d
 1454 077b C5040000 		.4byte	.LASF95
 1455 077f 01       		.byte	0x1
 1456 0780 0304     		.2byte	0x403
 1457 0782 BC060000 		.4byte	0x6bc
 1458 0786 02       		.uleb128 0x2
 1459 0787 91       		.byte	0x91
 1460 0788 60       		.sleb128 -32
 1461 0789 17       		.uleb128 0x17
 1462 078a 4E000000 		.4byte	.LASF104
 1463 078e 01       		.byte	0x1
 1464 078f 0E04     		.2byte	0x40e
 1465 0791 50060000 		.4byte	0x650
 1466 0795 AF010000 		.4byte	.LLST10
 1467 0799 17       		.uleb128 0x17
 1468 079a 7E060000 		.4byte	.LASF105
 1469 079e 01       		.byte	0x1
 1470 079f 1104     		.2byte	0x411
 1471 07a1 83000000 		.4byte	0x83
 1472 07a5 EE010000 		.4byte	.LLST11
 1473 07a9 1E       		.uleb128 0x1e
 1474 07aa 30000000 		.4byte	.LVL22
 1475 07ae 3D0A0000 		.4byte	0xa3d
 1476 07b2 CA070000 		.4byte	0x7ca
 1477 07b6 1F       		.uleb128 0x1f
 1478 07b7 01       		.uleb128 0x1
 1479 07b8 50       		.byte	0x50
 1480 07b9 03       		.uleb128 0x3
 1481 07ba 7D       		.byte	0x7d
 1482 07bb 00       		.sleb128 0
 1483 07bc 06       		.byte	0x6
 1484 07bd 1F       		.uleb128 0x1f
 1485 07be 01       		.uleb128 0x1
 1486 07bf 51       		.byte	0x51
 1487 07c0 02       		.uleb128 0x2
 1488 07c1 76       		.byte	0x76
 1489 07c2 00       		.sleb128 0
 1490 07c3 1F       		.uleb128 0x1f
 1491 07c4 01       		.uleb128 0x1
 1492 07c5 52       		.byte	0x52
 1493 07c6 02       		.uleb128 0x2
 1494 07c7 77       		.byte	0x77
 1495 07c8 00       		.sleb128 0
 1496 07c9 00       		.byte	0
 1497 07ca 1E       		.uleb128 0x1e
 1498 07cb 3A000000 		.4byte	.LVL23
 1499 07cf 480A0000 		.4byte	0xa48
 1500 07d3 EB070000 		.4byte	0x7eb
 1501 07d7 1F       		.uleb128 0x1f
 1502 07d8 01       		.uleb128 0x1
 1503 07d9 50       		.byte	0x50
 1504 07da 03       		.uleb128 0x3
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 55


 1505 07db 91       		.byte	0x91
 1506 07dc 60       		.sleb128 -32
 1507 07dd 06       		.byte	0x6
 1508 07de 1F       		.uleb128 0x1f
 1509 07df 01       		.uleb128 0x1
 1510 07e0 51       		.byte	0x51
 1511 07e1 02       		.uleb128 0x2
 1512 07e2 76       		.byte	0x76
 1513 07e3 00       		.sleb128 0
 1514 07e4 1F       		.uleb128 0x1f
 1515 07e5 01       		.uleb128 0x1
 1516 07e6 52       		.byte	0x52
 1517 07e7 02       		.uleb128 0x2
 1518 07e8 77       		.byte	0x77
 1519 07e9 00       		.sleb128 0
 1520 07ea 00       		.byte	0
 1521 07eb 20       		.uleb128 0x20
 1522 07ec 44000000 		.4byte	.LVL26
 1523 07f0 CD060000 		.4byte	0x6cd
 1524 07f4 1F       		.uleb128 0x1f
 1525 07f5 01       		.uleb128 0x1
 1526 07f6 50       		.byte	0x50
 1527 07f7 03       		.uleb128 0x3
 1528 07f8 91       		.byte	0x91
 1529 07f9 60       		.sleb128 -32
 1530 07fa 06       		.byte	0x6
 1531 07fb 1F       		.uleb128 0x1f
 1532 07fc 01       		.uleb128 0x1
 1533 07fd 51       		.byte	0x51
 1534 07fe 02       		.uleb128 0x2
 1535 07ff 76       		.byte	0x76
 1536 0800 00       		.sleb128 0
 1537 0801 00       		.byte	0
 1538 0802 00       		.byte	0
 1539 0803 1B       		.uleb128 0x1b
 1540 0804 18000000 		.4byte	.LASF107
 1541 0808 01       		.byte	0x1
 1542 0809 7A04     		.2byte	0x47a
 1543 080b 83000000 		.4byte	0x83
 1544 080f 00000000 		.4byte	.LFB3
 1545 0813 3C000000 		.4byte	.LFE3-.LFB3
 1546 0817 01       		.uleb128 0x1
 1547 0818 9C       		.byte	0x9c
 1548 0819 E6080000 		.4byte	0x8e6
 1549 081d 1C       		.uleb128 0x1c
 1550 081e 89060000 		.4byte	.LASF96
 1551 0822 01       		.byte	0x1
 1552 0823 7B04     		.2byte	0x47b
 1553 0825 C2060000 		.4byte	0x6c2
 1554 0829 0B020000 		.4byte	.LLST12
 1555 082d 1C       		.uleb128 0x1c
 1556 082e E2000000 		.4byte	.LASF99
 1557 0832 01       		.byte	0x1
 1558 0833 7C04     		.2byte	0x47c
 1559 0835 4D050000 		.4byte	0x54d
 1560 0839 2C020000 		.4byte	.LLST13
 1561 083d 1C       		.uleb128 0x1c
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 56


 1562 083e 4E000000 		.4byte	.LASF104
 1563 0842 01       		.byte	0x1
 1564 0843 7D04     		.2byte	0x47d
 1565 0845 50060000 		.4byte	0x650
 1566 0849 58020000 		.4byte	.LLST14
 1567 084d 1C       		.uleb128 0x1c
 1568 084e DD000000 		.4byte	.LASF108
 1569 0852 01       		.byte	0x1
 1570 0853 7E04     		.2byte	0x47e
 1571 0855 83000000 		.4byte	0x83
 1572 0859 A2020000 		.4byte	.LLST15
 1573 085d 17       		.uleb128 0x17
 1574 085e 91010000 		.4byte	.LASF101
 1575 0862 01       		.byte	0x1
 1576 0863 8004     		.2byte	0x480
 1577 0865 83000000 		.4byte	0x83
 1578 0869 CE020000 		.4byte	.LLST16
 1579 086d 17       		.uleb128 0x17
 1580 086e CD070000 		.4byte	.LASF94
 1581 0872 01       		.byte	0x1
 1582 0873 8104     		.2byte	0x481
 1583 0875 83000000 		.4byte	0x83
 1584 0879 F8020000 		.4byte	.LLST17
 1585 087d 17       		.uleb128 0x17
 1586 087e C5040000 		.4byte	.LASF95
 1587 0882 01       		.byte	0x1
 1588 0883 8204     		.2byte	0x482
 1589 0885 BC060000 		.4byte	0x6bc
 1590 0889 0B030000 		.4byte	.LLST18
 1591 088d 1E       		.uleb128 0x1e
 1592 088e 1A000000 		.4byte	.LVL43
 1593 0892 3D0A0000 		.4byte	0xa3d
 1594 0896 AD080000 		.4byte	0x8ad
 1595 089a 1F       		.uleb128 0x1f
 1596 089b 01       		.uleb128 0x1
 1597 089c 50       		.byte	0x50
 1598 089d 02       		.uleb128 0x2
 1599 089e 75       		.byte	0x75
 1600 089f 00       		.sleb128 0
 1601 08a0 1F       		.uleb128 0x1f
 1602 08a1 01       		.uleb128 0x1
 1603 08a2 51       		.byte	0x51
 1604 08a3 02       		.uleb128 0x2
 1605 08a4 74       		.byte	0x74
 1606 08a5 00       		.sleb128 0
 1607 08a6 1F       		.uleb128 0x1f
 1608 08a7 01       		.uleb128 0x1
 1609 08a8 52       		.byte	0x52
 1610 08a9 02       		.uleb128 0x2
 1611 08aa 77       		.byte	0x77
 1612 08ab 00       		.sleb128 0
 1613 08ac 00       		.byte	0
 1614 08ad 1E       		.uleb128 0x1e
 1615 08ae 2A000000 		.4byte	.LVL46
 1616 08b2 480A0000 		.4byte	0xa48
 1617 08b6 CE080000 		.4byte	0x8ce
 1618 08ba 1F       		.uleb128 0x1f
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 57


 1619 08bb 01       		.uleb128 0x1
 1620 08bc 50       		.byte	0x50
 1621 08bd 03       		.uleb128 0x3
 1622 08be 91       		.byte	0x91
 1623 08bf 64       		.sleb128 -28
 1624 08c0 06       		.byte	0x6
 1625 08c1 1F       		.uleb128 0x1f
 1626 08c2 01       		.uleb128 0x1
 1627 08c3 51       		.byte	0x51
 1628 08c4 02       		.uleb128 0x2
 1629 08c5 74       		.byte	0x74
 1630 08c6 00       		.sleb128 0
 1631 08c7 1F       		.uleb128 0x1f
 1632 08c8 01       		.uleb128 0x1
 1633 08c9 52       		.byte	0x52
 1634 08ca 02       		.uleb128 0x2
 1635 08cb 77       		.byte	0x77
 1636 08cc 00       		.sleb128 0
 1637 08cd 00       		.byte	0
 1638 08ce 20       		.uleb128 0x20
 1639 08cf 38000000 		.4byte	.LVL48
 1640 08d3 CD060000 		.4byte	0x6cd
 1641 08d7 1F       		.uleb128 0x1f
 1642 08d8 01       		.uleb128 0x1
 1643 08d9 50       		.byte	0x50
 1644 08da 03       		.uleb128 0x3
 1645 08db 91       		.byte	0x91
 1646 08dc 64       		.sleb128 -28
 1647 08dd 06       		.byte	0x6
 1648 08de 1F       		.uleb128 0x1f
 1649 08df 01       		.uleb128 0x1
 1650 08e0 51       		.byte	0x51
 1651 08e1 02       		.uleb128 0x2
 1652 08e2 74       		.byte	0x74
 1653 08e3 00       		.sleb128 0
 1654 08e4 00       		.byte	0
 1655 08e5 00       		.byte	0
 1656 08e6 1B       		.uleb128 0x1b
 1657 08e7 52030000 		.4byte	.LASF109
 1658 08eb 01       		.byte	0x1
 1659 08ec A805     		.2byte	0x5a8
 1660 08ee 83000000 		.4byte	0x83
 1661 08f2 00000000 		.4byte	.LFB6
 1662 08f6 66000000 		.4byte	.LFE6-.LFB6
 1663 08fa 01       		.uleb128 0x1
 1664 08fb 9C       		.byte	0x9c
 1665 08fc 8D090000 		.4byte	0x98d
 1666 0900 1C       		.uleb128 0x1c
 1667 0901 6F070000 		.4byte	.LASF110
 1668 0905 01       		.byte	0x1
 1669 0906 A805     		.2byte	0x5a8
 1670 0908 83000000 		.4byte	0x83
 1671 090c 36030000 		.4byte	.LLST19
 1672 0910 1C       		.uleb128 0x1c
 1673 0911 89060000 		.4byte	.LASF96
 1674 0915 01       		.byte	0x1
 1675 0916 A805     		.2byte	0x5a8
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 58


 1676 0918 C2060000 		.4byte	0x6c2
 1677 091c 54030000 		.4byte	.LLST20
 1678 0920 17       		.uleb128 0x17
 1679 0921 40000000 		.4byte	.LASF111
 1680 0925 01       		.byte	0x1
 1681 0926 AA05     		.2byte	0x5aa
 1682 0928 83000000 		.4byte	0x83
 1683 092c 75030000 		.4byte	.LLST21
 1684 0930 1D       		.uleb128 0x1d
 1685 0931 D0040000 		.4byte	.LASF112
 1686 0935 01       		.byte	0x1
 1687 0936 AB05     		.2byte	0x5ab
 1688 0938 83000000 		.4byte	0x83
 1689 093c 01       		.uleb128 0x1
 1690 093d 53       		.byte	0x53
 1691 093e 17       		.uleb128 0x17
 1692 093f 43010000 		.4byte	.LASF113
 1693 0943 01       		.byte	0x1
 1694 0944 AC05     		.2byte	0x5ac
 1695 0946 83000000 		.4byte	0x83
 1696 094a B0030000 		.4byte	.LLST22
 1697 094e 17       		.uleb128 0x17
 1698 094f 3A040000 		.4byte	.LASF114
 1699 0953 01       		.byte	0x1
 1700 0954 AD05     		.2byte	0x5ad
 1701 0956 83000000 		.4byte	0x83
 1702 095a E6030000 		.4byte	.LLST23
 1703 095e 17       		.uleb128 0x17
 1704 095f D8050000 		.4byte	.LASF103
 1705 0963 01       		.byte	0x1
 1706 0964 AE05     		.2byte	0x5ae
 1707 0966 4D050000 		.4byte	0x54d
 1708 096a 04040000 		.4byte	.LLST24
 1709 096e 17       		.uleb128 0x17
 1710 096f C5040000 		.4byte	.LASF95
 1711 0973 01       		.byte	0x1
 1712 0974 AF05     		.2byte	0x5af
 1713 0976 BC060000 		.4byte	0x6bc
 1714 097a 17040000 		.4byte	.LLST25
 1715 097e 1D       		.uleb128 0x1d
 1716 097f E7050000 		.4byte	.LASF115
 1717 0983 01       		.byte	0x1
 1718 0984 B005     		.2byte	0x5b0
 1719 0986 53050000 		.4byte	0x553
 1720 098a 01       		.uleb128 0x1
 1721 098b 51       		.byte	0x51
 1722 098c 00       		.byte	0
 1723 098d 16       		.uleb128 0x16
 1724 098e 68000000 		.4byte	.LASF116
 1725 0992 01       		.byte	0x1
 1726 0993 DE04     		.2byte	0x4de
 1727 0995 00000000 		.4byte	.LFB4
 1728 0999 40000000 		.4byte	.LFE4-.LFB4
 1729 099d 01       		.uleb128 0x1
 1730 099e 9C       		.byte	0x9c
 1731 099f 150A0000 		.4byte	0xa15
 1732 09a3 1C       		.uleb128 0x1c
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 59


 1733 09a4 E1070000 		.4byte	.LASF117
 1734 09a8 01       		.byte	0x1
 1735 09a9 DE04     		.2byte	0x4de
 1736 09ab 83000000 		.4byte	0x83
 1737 09af 2A040000 		.4byte	.LLST26
 1738 09b3 1C       		.uleb128 0x1c
 1739 09b4 89060000 		.4byte	.LASF96
 1740 09b8 01       		.byte	0x1
 1741 09b9 DE04     		.2byte	0x4de
 1742 09bb C2060000 		.4byte	0x6c2
 1743 09bf 56040000 		.4byte	.LLST27
 1744 09c3 17       		.uleb128 0x17
 1745 09c4 26040000 		.4byte	.LASF118
 1746 09c8 01       		.byte	0x1
 1747 09c9 E004     		.2byte	0x4e0
 1748 09cb 83000000 		.4byte	0x83
 1749 09cf 77040000 		.4byte	.LLST28
 1750 09d3 17       		.uleb128 0x17
 1751 09d4 A0040000 		.4byte	.LASF119
 1752 09d8 01       		.byte	0x1
 1753 09d9 E104     		.2byte	0x4e1
 1754 09db 83000000 		.4byte	0x83
 1755 09df 95040000 		.4byte	.LLST29
 1756 09e3 17       		.uleb128 0x17
 1757 09e4 71060000 		.4byte	.LASF120
 1758 09e8 01       		.byte	0x1
 1759 09e9 E204     		.2byte	0x4e2
 1760 09eb 83000000 		.4byte	0x83
 1761 09ef D4040000 		.4byte	.LLST30
 1762 09f3 17       		.uleb128 0x17
 1763 09f4 CD070000 		.4byte	.LASF94
 1764 09f8 01       		.byte	0x1
 1765 09f9 E304     		.2byte	0x4e3
 1766 09fb 1F010000 		.4byte	0x11f
 1767 09ff 22050000 		.4byte	.LLST31
 1768 0a03 20       		.uleb128 0x20
 1769 0a04 16000000 		.4byte	.LVL77
 1770 0a08 E6080000 		.4byte	0x8e6
 1771 0a0c 1F       		.uleb128 0x1f
 1772 0a0d 01       		.uleb128 0x1
 1773 0a0e 51       		.byte	0x51
 1774 0a0f 03       		.uleb128 0x3
 1775 0a10 F3       		.byte	0xf3
 1776 0a11 01       		.uleb128 0x1
 1777 0a12 51       		.byte	0x51
 1778 0a13 00       		.byte	0
 1779 0a14 00       		.byte	0
 1780 0a15 21       		.uleb128 0x21
 1781 0a16 BA030000 		.4byte	.LASF121
 1782 0a1a 05       		.byte	0x5
 1783 0a1b 8704     		.2byte	0x487
 1784 0a1d BB040000 		.4byte	0x4bb
 1785 0a21 21       		.uleb128 0x21
 1786 0a22 1F010000 		.4byte	.LASF122
 1787 0a26 05       		.byte	0x5
 1788 0a27 8804     		.2byte	0x488
 1789 0a29 2D0A0000 		.4byte	0xa2d
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 60


 1790 0a2d 19       		.uleb128 0x19
 1791 0a2e 8C050000 		.4byte	0x58c
 1792 0a32 22       		.uleb128 0x22
 1793 0a33 D9030000 		.4byte	.LASF123
 1794 0a37 D9030000 		.4byte	.LASF123
 1795 0a3b 06       		.byte	0x6
 1796 0a3c 19       		.byte	0x19
 1797 0a3d 22       		.uleb128 0x22
 1798 0a3e EF010000 		.4byte	.LASF124
 1799 0a42 EF010000 		.4byte	.LASF124
 1800 0a46 07       		.byte	0x7
 1801 0a47 85       		.byte	0x85
 1802 0a48 22       		.uleb128 0x22
 1803 0a49 6F010000 		.4byte	.LASF125
 1804 0a4d 6F010000 		.4byte	.LASF125
 1805 0a51 07       		.byte	0x7
 1806 0a52 72       		.byte	0x72
 1807 0a53 00       		.byte	0
 1808              		.section	.debug_abbrev,"",%progbits
 1809              	.Ldebug_abbrev0:
 1810 0000 01       		.uleb128 0x1
 1811 0001 11       		.uleb128 0x11
 1812 0002 01       		.byte	0x1
 1813 0003 25       		.uleb128 0x25
 1814 0004 0E       		.uleb128 0xe
 1815 0005 13       		.uleb128 0x13
 1816 0006 0B       		.uleb128 0xb
 1817 0007 03       		.uleb128 0x3
 1818 0008 0E       		.uleb128 0xe
 1819 0009 1B       		.uleb128 0x1b
 1820 000a 0E       		.uleb128 0xe
 1821 000b 55       		.uleb128 0x55
 1822 000c 17       		.uleb128 0x17
 1823 000d 11       		.uleb128 0x11
 1824 000e 01       		.uleb128 0x1
 1825 000f 10       		.uleb128 0x10
 1826 0010 17       		.uleb128 0x17
 1827 0011 00       		.byte	0
 1828 0012 00       		.byte	0
 1829 0013 02       		.uleb128 0x2
 1830 0014 24       		.uleb128 0x24
 1831 0015 00       		.byte	0
 1832 0016 0B       		.uleb128 0xb
 1833 0017 0B       		.uleb128 0xb
 1834 0018 3E       		.uleb128 0x3e
 1835 0019 0B       		.uleb128 0xb
 1836 001a 03       		.uleb128 0x3
 1837 001b 0E       		.uleb128 0xe
 1838 001c 00       		.byte	0
 1839 001d 00       		.byte	0
 1840 001e 03       		.uleb128 0x3
 1841 001f 24       		.uleb128 0x24
 1842 0020 00       		.byte	0
 1843 0021 0B       		.uleb128 0xb
 1844 0022 0B       		.uleb128 0xb
 1845 0023 3E       		.uleb128 0x3e
 1846 0024 0B       		.uleb128 0xb
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 61


 1847 0025 03       		.uleb128 0x3
 1848 0026 08       		.uleb128 0x8
 1849 0027 00       		.byte	0
 1850 0028 00       		.byte	0
 1851 0029 04       		.uleb128 0x4
 1852 002a 16       		.uleb128 0x16
 1853 002b 00       		.byte	0
 1854 002c 03       		.uleb128 0x3
 1855 002d 0E       		.uleb128 0xe
 1856 002e 3A       		.uleb128 0x3a
 1857 002f 0B       		.uleb128 0xb
 1858 0030 3B       		.uleb128 0x3b
 1859 0031 05       		.uleb128 0x5
 1860 0032 49       		.uleb128 0x49
 1861 0033 13       		.uleb128 0x13
 1862 0034 00       		.byte	0
 1863 0035 00       		.byte	0
 1864 0036 05       		.uleb128 0x5
 1865 0037 35       		.uleb128 0x35
 1866 0038 00       		.byte	0
 1867 0039 49       		.uleb128 0x49
 1868 003a 13       		.uleb128 0x13
 1869 003b 00       		.byte	0
 1870 003c 00       		.byte	0
 1871 003d 06       		.uleb128 0x6
 1872 003e 16       		.uleb128 0x16
 1873 003f 00       		.byte	0
 1874 0040 03       		.uleb128 0x3
 1875 0041 0E       		.uleb128 0xe
 1876 0042 3A       		.uleb128 0x3a
 1877 0043 0B       		.uleb128 0xb
 1878 0044 3B       		.uleb128 0x3b
 1879 0045 0B       		.uleb128 0xb
 1880 0046 49       		.uleb128 0x49
 1881 0047 13       		.uleb128 0x13
 1882 0048 00       		.byte	0
 1883 0049 00       		.byte	0
 1884 004a 07       		.uleb128 0x7
 1885 004b 0F       		.uleb128 0xf
 1886 004c 00       		.byte	0
 1887 004d 0B       		.uleb128 0xb
 1888 004e 0B       		.uleb128 0xb
 1889 004f 00       		.byte	0
 1890 0050 00       		.byte	0
 1891 0051 08       		.uleb128 0x8
 1892 0052 04       		.uleb128 0x4
 1893 0053 01       		.byte	0x1
 1894 0054 0B       		.uleb128 0xb
 1895 0055 0B       		.uleb128 0xb
 1896 0056 49       		.uleb128 0x49
 1897 0057 13       		.uleb128 0x13
 1898 0058 3A       		.uleb128 0x3a
 1899 0059 0B       		.uleb128 0xb
 1900 005a 3B       		.uleb128 0x3b
 1901 005b 0B       		.uleb128 0xb
 1902 005c 01       		.uleb128 0x1
 1903 005d 13       		.uleb128 0x13
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 62


 1904 005e 00       		.byte	0
 1905 005f 00       		.byte	0
 1906 0060 09       		.uleb128 0x9
 1907 0061 28       		.uleb128 0x28
 1908 0062 00       		.byte	0
 1909 0063 03       		.uleb128 0x3
 1910 0064 0E       		.uleb128 0xe
 1911 0065 1C       		.uleb128 0x1c
 1912 0066 0B       		.uleb128 0xb
 1913 0067 00       		.byte	0
 1914 0068 00       		.byte	0
 1915 0069 0A       		.uleb128 0xa
 1916 006a 13       		.uleb128 0x13
 1917 006b 01       		.byte	0x1
 1918 006c 0B       		.uleb128 0xb
 1919 006d 0B       		.uleb128 0xb
 1920 006e 3A       		.uleb128 0x3a
 1921 006f 0B       		.uleb128 0xb
 1922 0070 3B       		.uleb128 0x3b
 1923 0071 0B       		.uleb128 0xb
 1924 0072 01       		.uleb128 0x1
 1925 0073 13       		.uleb128 0x13
 1926 0074 00       		.byte	0
 1927 0075 00       		.byte	0
 1928 0076 0B       		.uleb128 0xb
 1929 0077 0D       		.uleb128 0xd
 1930 0078 00       		.byte	0
 1931 0079 03       		.uleb128 0x3
 1932 007a 0E       		.uleb128 0xe
 1933 007b 3A       		.uleb128 0x3a
 1934 007c 0B       		.uleb128 0xb
 1935 007d 3B       		.uleb128 0x3b
 1936 007e 0B       		.uleb128 0xb
 1937 007f 49       		.uleb128 0x49
 1938 0080 13       		.uleb128 0x13
 1939 0081 38       		.uleb128 0x38
 1940 0082 0B       		.uleb128 0xb
 1941 0083 00       		.byte	0
 1942 0084 00       		.byte	0
 1943 0085 0C       		.uleb128 0xc
 1944 0086 01       		.uleb128 0x1
 1945 0087 01       		.byte	0x1
 1946 0088 49       		.uleb128 0x49
 1947 0089 13       		.uleb128 0x13
 1948 008a 01       		.uleb128 0x1
 1949 008b 13       		.uleb128 0x13
 1950 008c 00       		.byte	0
 1951 008d 00       		.byte	0
 1952 008e 0D       		.uleb128 0xd
 1953 008f 21       		.uleb128 0x21
 1954 0090 00       		.byte	0
 1955 0091 49       		.uleb128 0x49
 1956 0092 13       		.uleb128 0x13
 1957 0093 2F       		.uleb128 0x2f
 1958 0094 0B       		.uleb128 0xb
 1959 0095 00       		.byte	0
 1960 0096 00       		.byte	0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 63


 1961 0097 0E       		.uleb128 0xe
 1962 0098 0D       		.uleb128 0xd
 1963 0099 00       		.byte	0
 1964 009a 03       		.uleb128 0x3
 1965 009b 0E       		.uleb128 0xe
 1966 009c 3A       		.uleb128 0x3a
 1967 009d 0B       		.uleb128 0xb
 1968 009e 3B       		.uleb128 0x3b
 1969 009f 05       		.uleb128 0x5
 1970 00a0 49       		.uleb128 0x49
 1971 00a1 13       		.uleb128 0x13
 1972 00a2 38       		.uleb128 0x38
 1973 00a3 0B       		.uleb128 0xb
 1974 00a4 00       		.byte	0
 1975 00a5 00       		.byte	0
 1976 00a6 0F       		.uleb128 0xf
 1977 00a7 13       		.uleb128 0x13
 1978 00a8 01       		.byte	0x1
 1979 00a9 0B       		.uleb128 0xb
 1980 00aa 0B       		.uleb128 0xb
 1981 00ab 3A       		.uleb128 0x3a
 1982 00ac 0B       		.uleb128 0xb
 1983 00ad 3B       		.uleb128 0x3b
 1984 00ae 05       		.uleb128 0x5
 1985 00af 01       		.uleb128 0x1
 1986 00b0 13       		.uleb128 0x13
 1987 00b1 00       		.byte	0
 1988 00b2 00       		.byte	0
 1989 00b3 10       		.uleb128 0x10
 1990 00b4 0D       		.uleb128 0xd
 1991 00b5 00       		.byte	0
 1992 00b6 03       		.uleb128 0x3
 1993 00b7 08       		.uleb128 0x8
 1994 00b8 3A       		.uleb128 0x3a
 1995 00b9 0B       		.uleb128 0xb
 1996 00ba 3B       		.uleb128 0x3b
 1997 00bb 05       		.uleb128 0x5
 1998 00bc 49       		.uleb128 0x49
 1999 00bd 13       		.uleb128 0x13
 2000 00be 38       		.uleb128 0x38
 2001 00bf 0B       		.uleb128 0xb
 2002 00c0 00       		.byte	0
 2003 00c1 00       		.byte	0
 2004 00c2 11       		.uleb128 0x11
 2005 00c3 0F       		.uleb128 0xf
 2006 00c4 00       		.byte	0
 2007 00c5 0B       		.uleb128 0xb
 2008 00c6 0B       		.uleb128 0xb
 2009 00c7 49       		.uleb128 0x49
 2010 00c8 13       		.uleb128 0x13
 2011 00c9 00       		.byte	0
 2012 00ca 00       		.byte	0
 2013 00cb 12       		.uleb128 0x12
 2014 00cc 26       		.uleb128 0x26
 2015 00cd 00       		.byte	0
 2016 00ce 00       		.byte	0
 2017 00cf 00       		.byte	0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 64


 2018 00d0 13       		.uleb128 0x13
 2019 00d1 17       		.uleb128 0x17
 2020 00d2 01       		.byte	0x1
 2021 00d3 0B       		.uleb128 0xb
 2022 00d4 0B       		.uleb128 0xb
 2023 00d5 3A       		.uleb128 0x3a
 2024 00d6 0B       		.uleb128 0xb
 2025 00d7 3B       		.uleb128 0x3b
 2026 00d8 05       		.uleb128 0x5
 2027 00d9 01       		.uleb128 0x1
 2028 00da 13       		.uleb128 0x13
 2029 00db 00       		.byte	0
 2030 00dc 00       		.byte	0
 2031 00dd 14       		.uleb128 0x14
 2032 00de 0D       		.uleb128 0xd
 2033 00df 00       		.byte	0
 2034 00e0 03       		.uleb128 0x3
 2035 00e1 08       		.uleb128 0x8
 2036 00e2 3A       		.uleb128 0x3a
 2037 00e3 0B       		.uleb128 0xb
 2038 00e4 3B       		.uleb128 0x3b
 2039 00e5 05       		.uleb128 0x5
 2040 00e6 49       		.uleb128 0x49
 2041 00e7 13       		.uleb128 0x13
 2042 00e8 00       		.byte	0
 2043 00e9 00       		.byte	0
 2044 00ea 15       		.uleb128 0x15
 2045 00eb 0D       		.uleb128 0xd
 2046 00ec 00       		.byte	0
 2047 00ed 03       		.uleb128 0x3
 2048 00ee 0E       		.uleb128 0xe
 2049 00ef 3A       		.uleb128 0x3a
 2050 00f0 0B       		.uleb128 0xb
 2051 00f1 3B       		.uleb128 0x3b
 2052 00f2 05       		.uleb128 0x5
 2053 00f3 49       		.uleb128 0x49
 2054 00f4 13       		.uleb128 0x13
 2055 00f5 00       		.byte	0
 2056 00f6 00       		.byte	0
 2057 00f7 16       		.uleb128 0x16
 2058 00f8 2E       		.uleb128 0x2e
 2059 00f9 01       		.byte	0x1
 2060 00fa 3F       		.uleb128 0x3f
 2061 00fb 19       		.uleb128 0x19
 2062 00fc 03       		.uleb128 0x3
 2063 00fd 0E       		.uleb128 0xe
 2064 00fe 3A       		.uleb128 0x3a
 2065 00ff 0B       		.uleb128 0xb
 2066 0100 3B       		.uleb128 0x3b
 2067 0101 05       		.uleb128 0x5
 2068 0102 27       		.uleb128 0x27
 2069 0103 19       		.uleb128 0x19
 2070 0104 11       		.uleb128 0x11
 2071 0105 01       		.uleb128 0x1
 2072 0106 12       		.uleb128 0x12
 2073 0107 06       		.uleb128 0x6
 2074 0108 40       		.uleb128 0x40
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 65


 2075 0109 18       		.uleb128 0x18
 2076 010a 9742     		.uleb128 0x2117
 2077 010c 19       		.uleb128 0x19
 2078 010d 01       		.uleb128 0x1
 2079 010e 13       		.uleb128 0x13
 2080 010f 00       		.byte	0
 2081 0110 00       		.byte	0
 2082 0111 17       		.uleb128 0x17
 2083 0112 34       		.uleb128 0x34
 2084 0113 00       		.byte	0
 2085 0114 03       		.uleb128 0x3
 2086 0115 0E       		.uleb128 0xe
 2087 0116 3A       		.uleb128 0x3a
 2088 0117 0B       		.uleb128 0xb
 2089 0118 3B       		.uleb128 0x3b
 2090 0119 05       		.uleb128 0x5
 2091 011a 49       		.uleb128 0x49
 2092 011b 13       		.uleb128 0x13
 2093 011c 02       		.uleb128 0x2
 2094 011d 17       		.uleb128 0x17
 2095 011e 00       		.byte	0
 2096 011f 00       		.byte	0
 2097 0120 18       		.uleb128 0x18
 2098 0121 898201   		.uleb128 0x4109
 2099 0124 00       		.byte	0
 2100 0125 11       		.uleb128 0x11
 2101 0126 01       		.uleb128 0x1
 2102 0127 31       		.uleb128 0x31
 2103 0128 13       		.uleb128 0x13
 2104 0129 00       		.byte	0
 2105 012a 00       		.byte	0
 2106 012b 19       		.uleb128 0x19
 2107 012c 26       		.uleb128 0x26
 2108 012d 00       		.byte	0
 2109 012e 49       		.uleb128 0x49
 2110 012f 13       		.uleb128 0x13
 2111 0130 00       		.byte	0
 2112 0131 00       		.byte	0
 2113 0132 1A       		.uleb128 0x1a
 2114 0133 05       		.uleb128 0x5
 2115 0134 00       		.byte	0
 2116 0135 03       		.uleb128 0x3
 2117 0136 0E       		.uleb128 0xe
 2118 0137 3A       		.uleb128 0x3a
 2119 0138 0B       		.uleb128 0xb
 2120 0139 3B       		.uleb128 0x3b
 2121 013a 05       		.uleb128 0x5
 2122 013b 49       		.uleb128 0x49
 2123 013c 13       		.uleb128 0x13
 2124 013d 02       		.uleb128 0x2
 2125 013e 18       		.uleb128 0x18
 2126 013f 00       		.byte	0
 2127 0140 00       		.byte	0
 2128 0141 1B       		.uleb128 0x1b
 2129 0142 2E       		.uleb128 0x2e
 2130 0143 01       		.byte	0x1
 2131 0144 3F       		.uleb128 0x3f
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 66


 2132 0145 19       		.uleb128 0x19
 2133 0146 03       		.uleb128 0x3
 2134 0147 0E       		.uleb128 0xe
 2135 0148 3A       		.uleb128 0x3a
 2136 0149 0B       		.uleb128 0xb
 2137 014a 3B       		.uleb128 0x3b
 2138 014b 05       		.uleb128 0x5
 2139 014c 27       		.uleb128 0x27
 2140 014d 19       		.uleb128 0x19
 2141 014e 49       		.uleb128 0x49
 2142 014f 13       		.uleb128 0x13
 2143 0150 11       		.uleb128 0x11
 2144 0151 01       		.uleb128 0x1
 2145 0152 12       		.uleb128 0x12
 2146 0153 06       		.uleb128 0x6
 2147 0154 40       		.uleb128 0x40
 2148 0155 18       		.uleb128 0x18
 2149 0156 9742     		.uleb128 0x2117
 2150 0158 19       		.uleb128 0x19
 2151 0159 01       		.uleb128 0x1
 2152 015a 13       		.uleb128 0x13
 2153 015b 00       		.byte	0
 2154 015c 00       		.byte	0
 2155 015d 1C       		.uleb128 0x1c
 2156 015e 05       		.uleb128 0x5
 2157 015f 00       		.byte	0
 2158 0160 03       		.uleb128 0x3
 2159 0161 0E       		.uleb128 0xe
 2160 0162 3A       		.uleb128 0x3a
 2161 0163 0B       		.uleb128 0xb
 2162 0164 3B       		.uleb128 0x3b
 2163 0165 05       		.uleb128 0x5
 2164 0166 49       		.uleb128 0x49
 2165 0167 13       		.uleb128 0x13
 2166 0168 02       		.uleb128 0x2
 2167 0169 17       		.uleb128 0x17
 2168 016a 00       		.byte	0
 2169 016b 00       		.byte	0
 2170 016c 1D       		.uleb128 0x1d
 2171 016d 34       		.uleb128 0x34
 2172 016e 00       		.byte	0
 2173 016f 03       		.uleb128 0x3
 2174 0170 0E       		.uleb128 0xe
 2175 0171 3A       		.uleb128 0x3a
 2176 0172 0B       		.uleb128 0xb
 2177 0173 3B       		.uleb128 0x3b
 2178 0174 05       		.uleb128 0x5
 2179 0175 49       		.uleb128 0x49
 2180 0176 13       		.uleb128 0x13
 2181 0177 02       		.uleb128 0x2
 2182 0178 18       		.uleb128 0x18
 2183 0179 00       		.byte	0
 2184 017a 00       		.byte	0
 2185 017b 1E       		.uleb128 0x1e
 2186 017c 898201   		.uleb128 0x4109
 2187 017f 01       		.byte	0x1
 2188 0180 11       		.uleb128 0x11
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 67


 2189 0181 01       		.uleb128 0x1
 2190 0182 31       		.uleb128 0x31
 2191 0183 13       		.uleb128 0x13
 2192 0184 01       		.uleb128 0x1
 2193 0185 13       		.uleb128 0x13
 2194 0186 00       		.byte	0
 2195 0187 00       		.byte	0
 2196 0188 1F       		.uleb128 0x1f
 2197 0189 8A8201   		.uleb128 0x410a
 2198 018c 00       		.byte	0
 2199 018d 02       		.uleb128 0x2
 2200 018e 18       		.uleb128 0x18
 2201 018f 9142     		.uleb128 0x2111
 2202 0191 18       		.uleb128 0x18
 2203 0192 00       		.byte	0
 2204 0193 00       		.byte	0
 2205 0194 20       		.uleb128 0x20
 2206 0195 898201   		.uleb128 0x4109
 2207 0198 01       		.byte	0x1
 2208 0199 11       		.uleb128 0x11
 2209 019a 01       		.uleb128 0x1
 2210 019b 31       		.uleb128 0x31
 2211 019c 13       		.uleb128 0x13
 2212 019d 00       		.byte	0
 2213 019e 00       		.byte	0
 2214 019f 21       		.uleb128 0x21
 2215 01a0 34       		.uleb128 0x34
 2216 01a1 00       		.byte	0
 2217 01a2 03       		.uleb128 0x3
 2218 01a3 0E       		.uleb128 0xe
 2219 01a4 3A       		.uleb128 0x3a
 2220 01a5 0B       		.uleb128 0xb
 2221 01a6 3B       		.uleb128 0x3b
 2222 01a7 05       		.uleb128 0x5
 2223 01a8 49       		.uleb128 0x49
 2224 01a9 13       		.uleb128 0x13
 2225 01aa 3F       		.uleb128 0x3f
 2226 01ab 19       		.uleb128 0x19
 2227 01ac 3C       		.uleb128 0x3c
 2228 01ad 19       		.uleb128 0x19
 2229 01ae 00       		.byte	0
 2230 01af 00       		.byte	0
 2231 01b0 22       		.uleb128 0x22
 2232 01b1 2E       		.uleb128 0x2e
 2233 01b2 00       		.byte	0
 2234 01b3 3F       		.uleb128 0x3f
 2235 01b4 19       		.uleb128 0x19
 2236 01b5 3C       		.uleb128 0x3c
 2237 01b6 19       		.uleb128 0x19
 2238 01b7 6E       		.uleb128 0x6e
 2239 01b8 0E       		.uleb128 0xe
 2240 01b9 03       		.uleb128 0x3
 2241 01ba 0E       		.uleb128 0xe
 2242 01bb 3A       		.uleb128 0x3a
 2243 01bc 0B       		.uleb128 0xb
 2244 01bd 3B       		.uleb128 0x3b
 2245 01be 0B       		.uleb128 0xb
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 68


 2246 01bf 00       		.byte	0
 2247 01c0 00       		.byte	0
 2248 01c1 00       		.byte	0
 2249              		.section	.debug_loc,"",%progbits
 2250              	.Ldebug_loc0:
 2251              	.LLST0:
 2252 0000 00000000 		.4byte	.LVL0
 2253 0004 12000000 		.4byte	.LVL1
 2254 0008 0200     		.2byte	0x2
 2255 000a 30       		.byte	0x30
 2256 000b 9F       		.byte	0x9f
 2257 000c 00000000 		.4byte	0
 2258 0010 00000000 		.4byte	0
 2259              	.LLST1:
 2260 0014 1C000000 		.4byte	.LVL2
 2261 0018 2A000000 		.4byte	.LVL3
 2262 001c 0100     		.2byte	0x1
 2263 001e 52       		.byte	0x52
 2264 001f 00000000 		.4byte	0
 2265 0023 00000000 		.4byte	0
 2266              	.LLST2:
 2267 0027 1C000000 		.4byte	.LVL2
 2268 002b 2F000000 		.4byte	.LVL4-1
 2269 002f 0100     		.2byte	0x1
 2270 0031 53       		.byte	0x53
 2271 0032 00000000 		.4byte	0
 2272 0036 00000000 		.4byte	0
 2273              	.LLST3:
 2274 003a 12000000 		.4byte	.LVL1
 2275 003e 30000000 		.4byte	.LVL4
 2276 0042 0300     		.2byte	0x3
 2277 0044 74       		.byte	0x74
 2278 0045 7C       		.sleb128 -4
 2279 0046 9F       		.byte	0x9f
 2280 0047 30000000 		.4byte	.LVL4
 2281 004b 32000000 		.4byte	.LVL5
 2282 004f 0300     		.2byte	0x3
 2283 0051 74       		.byte	0x74
 2284 0052 18       		.sleb128 24
 2285 0053 9F       		.byte	0x9f
 2286 0054 32000000 		.4byte	.LVL5
 2287 0058 36000000 		.4byte	.LVL8
 2288 005c 0300     		.2byte	0x3
 2289 005e 74       		.byte	0x74
 2290 005f 7C       		.sleb128 -4
 2291 0060 9F       		.byte	0x9f
 2292 0061 00000000 		.4byte	0
 2293 0065 00000000 		.4byte	0
 2294              	.LLST4:
 2295 0069 00000000 		.4byte	.LVL10
 2296 006d 08000000 		.4byte	.LVL11
 2297 0071 0200     		.2byte	0x2
 2298 0073 30       		.byte	0x30
 2299 0074 9F       		.byte	0x9f
 2300 0075 08000000 		.4byte	.LVL11
 2301 0079 0C000000 		.4byte	.LVL12
 2302 007d 0E00     		.2byte	0xe
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 69


 2303 007f 73       		.byte	0x73
 2304 0080 00       		.sleb128 0
 2305 0081 0A       		.byte	0xa
 2306 0082 FFFF     		.2byte	0xffff
 2307 0084 1A       		.byte	0x1a
 2308 0085 72       		.byte	0x72
 2309 0086 00       		.sleb128 0
 2310 0087 0A       		.byte	0xa
 2311 0088 FFFF     		.2byte	0xffff
 2312 008a 1A       		.byte	0x1a
 2313 008b 1C       		.byte	0x1c
 2314 008c 9F       		.byte	0x9f
 2315 008d 0C000000 		.4byte	.LVL12
 2316 0091 0E000000 		.4byte	.LVL13
 2317 0095 1000     		.2byte	0x10
 2318 0097 71       		.byte	0x71
 2319 0098 00       		.sleb128 0
 2320 0099 94       		.byte	0x94
 2321 009a 02       		.byte	0x2
 2322 009b 0A       		.byte	0xa
 2323 009c FFFF     		.2byte	0xffff
 2324 009e 1A       		.byte	0x1a
 2325 009f 72       		.byte	0x72
 2326 00a0 00       		.sleb128 0
 2327 00a1 0A       		.byte	0xa
 2328 00a2 FFFF     		.2byte	0xffff
 2329 00a4 1A       		.byte	0x1a
 2330 00a5 1C       		.byte	0x1c
 2331 00a6 9F       		.byte	0x9f
 2332 00a7 0E000000 		.4byte	.LVL13
 2333 00ab 16000000 		.4byte	.LFE5
 2334 00af 1200     		.2byte	0x12
 2335 00b1 71       		.byte	0x71
 2336 00b2 00       		.sleb128 0
 2337 00b3 94       		.byte	0x94
 2338 00b4 02       		.byte	0x2
 2339 00b5 0A       		.byte	0xa
 2340 00b6 FFFF     		.2byte	0xffff
 2341 00b8 1A       		.byte	0x1a
 2342 00b9 71       		.byte	0x71
 2343 00ba 02       		.sleb128 2
 2344 00bb 94       		.byte	0x94
 2345 00bc 02       		.byte	0x2
 2346 00bd 0A       		.byte	0xa
 2347 00be FFFF     		.2byte	0xffff
 2348 00c0 1A       		.byte	0x1a
 2349 00c1 1C       		.byte	0x1c
 2350 00c2 9F       		.byte	0x9f
 2351 00c3 00000000 		.4byte	0
 2352 00c7 00000000 		.4byte	0
 2353              	.LLST5:
 2354 00cb 00000000 		.4byte	.LVL14
 2355 00cf 18000000 		.4byte	.LVL20
 2356 00d3 0100     		.2byte	0x1
 2357 00d5 50       		.byte	0x50
 2358 00d6 18000000 		.4byte	.LVL20
 2359 00da 56000000 		.4byte	.LVL31
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 70


 2360 00de 0100     		.2byte	0x1
 2361 00e0 55       		.byte	0x55
 2362 00e1 56000000 		.4byte	.LVL31
 2363 00e5 58000000 		.4byte	.LFE2
 2364 00e9 0400     		.2byte	0x4
 2365 00eb F3       		.byte	0xf3
 2366 00ec 01       		.uleb128 0x1
 2367 00ed 50       		.byte	0x50
 2368 00ee 9F       		.byte	0x9f
 2369 00ef 00000000 		.4byte	0
 2370 00f3 00000000 		.4byte	0
 2371              	.LLST6:
 2372 00f7 00000000 		.4byte	.LVL14
 2373 00fb 18000000 		.4byte	.LVL20
 2374 00ff 0200     		.2byte	0x2
 2375 0101 30       		.byte	0x30
 2376 0102 9F       		.byte	0x9f
 2377 0103 20000000 		.4byte	.LVL21
 2378 0107 3E000000 		.4byte	.LVL24
 2379 010b 0200     		.2byte	0x2
 2380 010d 91       		.byte	0x91
 2381 010e 5C       		.sleb128 -36
 2382 010f 3E000000 		.4byte	.LVL24
 2383 0113 40000000 		.4byte	.LVL25
 2384 0117 0100     		.2byte	0x1
 2385 0119 50       		.byte	0x50
 2386 011a 40000000 		.4byte	.LVL25
 2387 011e 58000000 		.4byte	.LFE2
 2388 0122 0200     		.2byte	0x2
 2389 0124 91       		.byte	0x91
 2390 0125 5C       		.sleb128 -36
 2391 0126 00000000 		.4byte	0
 2392 012a 00000000 		.4byte	0
 2393              	.LLST7:
 2394 012e 18000000 		.4byte	.LVL20
 2395 0132 56000000 		.4byte	.LVL33
 2396 0136 0100     		.2byte	0x1
 2397 0138 57       		.byte	0x57
 2398 0139 00000000 		.4byte	0
 2399 013d 00000000 		.4byte	0
 2400              	.LLST8:
 2401 0141 20000000 		.4byte	.LVL21
 2402 0145 56000000 		.4byte	.LVL30
 2403 0149 0100     		.2byte	0x1
 2404 014b 54       		.byte	0x54
 2405 014c 00000000 		.4byte	0
 2406 0150 00000000 		.4byte	0
 2407              	.LLST9:
 2408 0154 14000000 		.4byte	.LVL18
 2409 0158 16000000 		.4byte	.LVL19
 2410 015c 0100     		.2byte	0x1
 2411 015e 53       		.byte	0x53
 2412 015f 16000000 		.4byte	.LVL19
 2413 0163 18000000 		.4byte	.LVL20
 2414 0167 0200     		.2byte	0x2
 2415 0169 70       		.byte	0x70
 2416 016a 08       		.sleb128 8
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 71


 2417 016b 20000000 		.4byte	.LVL21
 2418 016f 44000000 		.4byte	.LVL26
 2419 0173 0100     		.2byte	0x1
 2420 0175 56       		.byte	0x56
 2421 0176 44000000 		.4byte	.LVL26
 2422 017a 50000000 		.4byte	.LVL28
 2423 017e 0900     		.2byte	0x9
 2424 0180 74       		.byte	0x74
 2425 0181 01       		.sleb128 1
 2426 0182 3A       		.byte	0x3a
 2427 0183 1E       		.byte	0x1e
 2428 0184 91       		.byte	0x91
 2429 0185 64       		.sleb128 -28
 2430 0186 06       		.byte	0x6
 2431 0187 22       		.byte	0x22
 2432 0188 9F       		.byte	0x9f
 2433 0189 50000000 		.4byte	.LVL28
 2434 018d 52000000 		.4byte	.LVL29
 2435 0191 0900     		.2byte	0x9
 2436 0193 74       		.byte	0x74
 2437 0194 00       		.sleb128 0
 2438 0195 3A       		.byte	0x3a
 2439 0196 1E       		.byte	0x1e
 2440 0197 91       		.byte	0x91
 2441 0198 64       		.sleb128 -28
 2442 0199 06       		.byte	0x6
 2443 019a 22       		.byte	0x22
 2444 019b 9F       		.byte	0x9f
 2445 019c 52000000 		.4byte	.LVL29
 2446 01a0 56000000 		.4byte	.LVL32
 2447 01a4 0100     		.2byte	0x1
 2448 01a6 56       		.byte	0x56
 2449 01a7 00000000 		.4byte	0
 2450 01ab 00000000 		.4byte	0
 2451              	.LLST10:
 2452 01af 0E000000 		.4byte	.LVL16
 2453 01b3 10000000 		.4byte	.LVL17
 2454 01b7 0300     		.2byte	0x3
 2455 01b9 53       		.byte	0x53
 2456 01ba 93       		.byte	0x93
 2457 01bb 04       		.uleb128 0x4
 2458 01bc 10000000 		.4byte	.LVL17
 2459 01c0 18000000 		.4byte	.LVL20
 2460 01c4 0400     		.2byte	0x4
 2461 01c6 70       		.byte	0x70
 2462 01c7 0C       		.sleb128 12
 2463 01c8 93       		.byte	0x93
 2464 01c9 04       		.uleb128 0x4
 2465 01ca 18000000 		.4byte	.LVL20
 2466 01ce 4E000000 		.4byte	.LVL27
 2467 01d2 0400     		.2byte	0x4
 2468 01d4 7D       		.byte	0x7d
 2469 01d5 00       		.sleb128 0
 2470 01d6 93       		.byte	0x93
 2471 01d7 04       		.uleb128 0x4
 2472 01d8 4E000000 		.4byte	.LVL27
 2473 01dc 52000000 		.4byte	.LVL29
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 72


 2474 01e0 0400     		.2byte	0x4
 2475 01e2 7D       		.byte	0x7d
 2476 01e3 00       		.sleb128 0
 2477 01e4 93       		.byte	0x93
 2478 01e5 04       		.uleb128 0x4
 2479 01e6 00000000 		.4byte	0
 2480 01ea 00000000 		.4byte	0
 2481              	.LLST11:
 2482 01ee 0C000000 		.4byte	.LVL15
 2483 01f2 56000000 		.4byte	.LVL33
 2484 01f6 0B00     		.2byte	0xb
 2485 01f8 77       		.byte	0x77
 2486 01f9 00       		.sleb128 0
 2487 01fa 08       		.byte	0x8
 2488 01fb FF       		.byte	0xff
 2489 01fc 1A       		.byte	0x1a
 2490 01fd 36       		.byte	0x36
 2491 01fe 29       		.byte	0x29
 2492 01ff 08       		.byte	0x8
 2493 0200 FF       		.byte	0xff
 2494 0201 1A       		.byte	0x1a
 2495 0202 9F       		.byte	0x9f
 2496 0203 00000000 		.4byte	0
 2497 0207 00000000 		.4byte	0
 2498              	.LLST12:
 2499 020b 00000000 		.4byte	.LVL34
 2500 020f 16000000 		.4byte	.LVL42
 2501 0213 0100     		.2byte	0x1
 2502 0215 50       		.byte	0x50
 2503 0216 16000000 		.4byte	.LVL42
 2504 021a 3C000000 		.4byte	.LFE3
 2505 021e 0400     		.2byte	0x4
 2506 0220 F3       		.byte	0xf3
 2507 0221 01       		.uleb128 0x1
 2508 0222 50       		.byte	0x50
 2509 0223 9F       		.byte	0x9f
 2510 0224 00000000 		.4byte	0
 2511 0228 00000000 		.4byte	0
 2512              	.LLST13:
 2513 022c 00000000 		.4byte	.LVL34
 2514 0230 19000000 		.4byte	.LVL43-1
 2515 0234 0100     		.2byte	0x1
 2516 0236 51       		.byte	0x51
 2517 0237 19000000 		.4byte	.LVL43-1
 2518 023b 3A000000 		.4byte	.LVL49
 2519 023f 0100     		.2byte	0x1
 2520 0241 54       		.byte	0x54
 2521 0242 3A000000 		.4byte	.LVL49
 2522 0246 3C000000 		.4byte	.LFE3
 2523 024a 0400     		.2byte	0x4
 2524 024c F3       		.byte	0xf3
 2525 024d 01       		.uleb128 0x1
 2526 024e 51       		.byte	0x51
 2527 024f 9F       		.byte	0x9f
 2528 0250 00000000 		.4byte	0
 2529 0254 00000000 		.4byte	0
 2530              	.LLST14:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 73


 2531 0258 00000000 		.4byte	.LVL34
 2532 025c 02000000 		.4byte	.LVL35
 2533 0260 0100     		.2byte	0x1
 2534 0262 52       		.byte	0x52
 2535 0263 0A000000 		.4byte	.LVL38
 2536 0267 14000000 		.4byte	.LVL41
 2537 026b 0100     		.2byte	0x1
 2538 026d 52       		.byte	0x52
 2539 026e 14000000 		.4byte	.LVL41
 2540 0272 1C000000 		.4byte	.LVL44
 2541 0276 0100     		.2byte	0x1
 2542 0278 55       		.byte	0x55
 2543 0279 1C000000 		.4byte	.LVL44
 2544 027d 22000000 		.4byte	.LVL45
 2545 0281 0100     		.2byte	0x1
 2546 0283 52       		.byte	0x52
 2547 0284 2C000000 		.4byte	.LVL47
 2548 0288 37000000 		.4byte	.LVL48-1
 2549 028c 0100     		.2byte	0x1
 2550 028e 52       		.byte	0x52
 2551 028f 38000000 		.4byte	.LVL48
 2552 0293 3C000000 		.4byte	.LFE3
 2553 0297 0100     		.2byte	0x1
 2554 0299 52       		.byte	0x52
 2555 029a 00000000 		.4byte	0
 2556 029e 00000000 		.4byte	0
 2557              	.LLST15:
 2558 02a2 00000000 		.4byte	.LVL34
 2559 02a6 06000000 		.4byte	.LVL36
 2560 02aa 0100     		.2byte	0x1
 2561 02ac 53       		.byte	0x53
 2562 02ad 06000000 		.4byte	.LVL36
 2563 02b1 3A000000 		.4byte	.LVL51
 2564 02b5 0100     		.2byte	0x1
 2565 02b7 56       		.byte	0x56
 2566 02b8 3A000000 		.4byte	.LVL51
 2567 02bc 3C000000 		.4byte	.LFE3
 2568 02c0 0400     		.2byte	0x4
 2569 02c2 F3       		.byte	0xf3
 2570 02c3 01       		.uleb128 0x1
 2571 02c4 53       		.byte	0x53
 2572 02c5 9F       		.byte	0x9f
 2573 02c6 00000000 		.4byte	0
 2574 02ca 00000000 		.4byte	0
 2575              	.LLST16:
 2576 02ce 00000000 		.4byte	.LVL34
 2577 02d2 2C000000 		.4byte	.LVL47
 2578 02d6 0200     		.2byte	0x2
 2579 02d8 30       		.byte	0x30
 2580 02d9 9F       		.byte	0x9f
 2581 02da 2C000000 		.4byte	.LVL47
 2582 02de 3A000000 		.4byte	.LVL50
 2583 02e2 0100     		.2byte	0x1
 2584 02e4 55       		.byte	0x55
 2585 02e5 3A000000 		.4byte	.LVL50
 2586 02e9 3C000000 		.4byte	.LFE3
 2587 02ed 0100     		.2byte	0x1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 74


 2588 02ef 50       		.byte	0x50
 2589 02f0 00000000 		.4byte	0
 2590 02f4 00000000 		.4byte	0
 2591              	.LLST17:
 2592 02f8 08000000 		.4byte	.LVL37
 2593 02fc 3A000000 		.4byte	.LVL52
 2594 0300 0100     		.2byte	0x1
 2595 0302 57       		.byte	0x57
 2596 0303 00000000 		.4byte	0
 2597 0307 00000000 		.4byte	0
 2598              	.LLST18:
 2599 030b 0E000000 		.4byte	.LVL39
 2600 030f 12000000 		.4byte	.LVL40
 2601 0313 0100     		.2byte	0x1
 2602 0315 53       		.byte	0x53
 2603 0316 12000000 		.4byte	.LVL40
 2604 031a 16000000 		.4byte	.LVL42
 2605 031e 0200     		.2byte	0x2
 2606 0320 70       		.byte	0x70
 2607 0321 04       		.sleb128 4
 2608 0322 16000000 		.4byte	.LVL42
 2609 0326 3C000000 		.4byte	.LFE3
 2610 032a 0200     		.2byte	0x2
 2611 032c 91       		.byte	0x91
 2612 032d 64       		.sleb128 -28
 2613 032e 00000000 		.4byte	0
 2614 0332 00000000 		.4byte	0
 2615              	.LLST19:
 2616 0336 00000000 		.4byte	.LVL53
 2617 033a 4C000000 		.4byte	.LVL65
 2618 033e 0100     		.2byte	0x1
 2619 0340 50       		.byte	0x50
 2620 0341 4C000000 		.4byte	.LVL65
 2621 0345 66000000 		.4byte	.LFE6
 2622 0349 0100     		.2byte	0x1
 2623 034b 50       		.byte	0x50
 2624 034c 00000000 		.4byte	0
 2625 0350 00000000 		.4byte	0
 2626              	.LLST20:
 2627 0354 00000000 		.4byte	.LVL53
 2628 0358 0E000000 		.4byte	.LVL57
 2629 035c 0100     		.2byte	0x1
 2630 035e 51       		.byte	0x51
 2631 035f 0E000000 		.4byte	.LVL57
 2632 0363 66000000 		.4byte	.LFE6
 2633 0367 0400     		.2byte	0x4
 2634 0369 F3       		.byte	0xf3
 2635 036a 01       		.uleb128 0x1
 2636 036b 51       		.byte	0x51
 2637 036c 9F       		.byte	0x9f
 2638 036d 00000000 		.4byte	0
 2639 0371 00000000 		.4byte	0
 2640              	.LLST21:
 2641 0375 08000000 		.4byte	.LVL54
 2642 0379 0A000000 		.4byte	.LVL55
 2643 037d 0100     		.2byte	0x1
 2644 037f 53       		.byte	0x53
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 75


 2645 0380 0A000000 		.4byte	.LVL55
 2646 0384 0E000000 		.4byte	.LVL57
 2647 0388 0200     		.2byte	0x2
 2648 038a 91       		.byte	0x91
 2649 038b 64       		.sleb128 -28
 2650 038c 0E000000 		.4byte	.LVL57
 2651 0390 16000000 		.4byte	.LVL58
 2652 0394 0600     		.2byte	0x6
 2653 0396 91       		.byte	0x91
 2654 0397 64       		.sleb128 -28
 2655 0398 06       		.byte	0x6
 2656 0399 31       		.byte	0x31
 2657 039a 1C       		.byte	0x1c
 2658 039b 9F       		.byte	0x9f
 2659 039c 16000000 		.4byte	.LVL58
 2660 03a0 66000000 		.4byte	.LFE6
 2661 03a4 0200     		.2byte	0x2
 2662 03a6 91       		.byte	0x91
 2663 03a7 64       		.sleb128 -28
 2664 03a8 00000000 		.4byte	0
 2665 03ac 00000000 		.4byte	0
 2666              	.LLST22:
 2667 03b0 30000000 		.4byte	.LVL60
 2668 03b4 38000000 		.4byte	.LVL61
 2669 03b8 0100     		.2byte	0x1
 2670 03ba 53       		.byte	0x53
 2671 03bb 38000000 		.4byte	.LVL61
 2672 03bf 3E000000 		.4byte	.LVL62
 2673 03c3 0200     		.2byte	0x2
 2674 03c5 30       		.byte	0x30
 2675 03c6 9F       		.byte	0x9f
 2676 03c7 3E000000 		.4byte	.LVL62
 2677 03cb 4A000000 		.4byte	.LVL64
 2678 03cf 0100     		.2byte	0x1
 2679 03d1 52       		.byte	0x52
 2680 03d2 60000000 		.4byte	.LVL70
 2681 03d6 64000000 		.4byte	.LVL72
 2682 03da 0200     		.2byte	0x2
 2683 03dc 30       		.byte	0x30
 2684 03dd 9F       		.byte	0x9f
 2685 03de 00000000 		.4byte	0
 2686 03e2 00000000 		.4byte	0
 2687              	.LLST23:
 2688 03e6 2A000000 		.4byte	.LVL59
 2689 03ea 40000000 		.4byte	.LVL63
 2690 03ee 0100     		.2byte	0x1
 2691 03f0 56       		.byte	0x56
 2692 03f1 60000000 		.4byte	.LVL70
 2693 03f5 64000000 		.4byte	.LVL72
 2694 03f9 0100     		.2byte	0x1
 2695 03fb 56       		.byte	0x56
 2696 03fc 00000000 		.4byte	0
 2697 0400 00000000 		.4byte	0
 2698              	.LLST24:
 2699 0404 08000000 		.4byte	.LVL54
 2700 0408 64000000 		.4byte	.LVL73
 2701 040c 0100     		.2byte	0x1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 76


 2702 040e 54       		.byte	0x54
 2703 040f 00000000 		.4byte	0
 2704 0413 00000000 		.4byte	0
 2705              	.LLST25:
 2706 0417 0C000000 		.4byte	.LVL56
 2707 041b 64000000 		.4byte	.LVL74
 2708 041f 0100     		.2byte	0x1
 2709 0421 55       		.byte	0x55
 2710 0422 00000000 		.4byte	0
 2711 0426 00000000 		.4byte	0
 2712              	.LLST26:
 2713 042a 00000000 		.4byte	.LVL75
 2714 042e 0A000000 		.4byte	.LVL76
 2715 0432 0100     		.2byte	0x1
 2716 0434 50       		.byte	0x50
 2717 0435 0A000000 		.4byte	.LVL76
 2718 0439 24000000 		.4byte	.LVL81
 2719 043d 0100     		.2byte	0x1
 2720 043f 55       		.byte	0x55
 2721 0440 24000000 		.4byte	.LVL81
 2722 0444 40000000 		.4byte	.LFE4
 2723 0448 0400     		.2byte	0x4
 2724 044a F3       		.byte	0xf3
 2725 044b 01       		.uleb128 0x1
 2726 044c 50       		.byte	0x50
 2727 044d 9F       		.byte	0x9f
 2728 044e 00000000 		.4byte	0
 2729 0452 00000000 		.4byte	0
 2730              	.LLST27:
 2731 0456 00000000 		.4byte	.LVL75
 2732 045a 15000000 		.4byte	.LVL77-1
 2733 045e 0100     		.2byte	0x1
 2734 0460 51       		.byte	0x51
 2735 0461 15000000 		.4byte	.LVL77-1
 2736 0465 40000000 		.4byte	.LFE4
 2737 0469 0400     		.2byte	0x4
 2738 046b F3       		.byte	0xf3
 2739 046c 01       		.uleb128 0x1
 2740 046d 51       		.byte	0x51
 2741 046e 9F       		.byte	0x9f
 2742 046f 00000000 		.4byte	0
 2743 0473 00000000 		.4byte	0
 2744              	.LLST28:
 2745 0477 0A000000 		.4byte	.LVL76
 2746 047b 15000000 		.4byte	.LVL77-1
 2747 047f 0100     		.2byte	0x1
 2748 0481 50       		.byte	0x50
 2749 0482 16000000 		.4byte	.LVL77
 2750 0486 40000000 		.4byte	.LFE4
 2751 048a 0100     		.2byte	0x1
 2752 048c 50       		.byte	0x50
 2753 048d 00000000 		.4byte	0
 2754 0491 00000000 		.4byte	0
 2755              	.LLST29:
 2756 0495 1E000000 		.4byte	.LVL78
 2757 0499 20000000 		.4byte	.LVL79
 2758 049d 0100     		.2byte	0x1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 77


 2759 049f 53       		.byte	0x53
 2760 04a0 20000000 		.4byte	.LVL79
 2761 04a4 22000000 		.4byte	.LVL80
 2762 04a8 0300     		.2byte	0x3
 2763 04aa 73       		.byte	0x73
 2764 04ab 7C       		.sleb128 -4
 2765 04ac 9F       		.byte	0x9f
 2766 04ad 22000000 		.4byte	.LVL80
 2767 04b1 24000000 		.4byte	.LVL81
 2768 04b5 0500     		.2byte	0x5
 2769 04b7 75       		.byte	0x75
 2770 04b8 00       		.sleb128 0
 2771 04b9 35       		.byte	0x35
 2772 04ba 25       		.byte	0x25
 2773 04bb 9F       		.byte	0x9f
 2774 04bc 24000000 		.4byte	.LVL81
 2775 04c0 40000000 		.4byte	.LFE4
 2776 04c4 0600     		.2byte	0x6
 2777 04c6 F3       		.byte	0xf3
 2778 04c7 01       		.uleb128 0x1
 2779 04c8 50       		.byte	0x50
 2780 04c9 35       		.byte	0x35
 2781 04ca 25       		.byte	0x25
 2782 04cb 9F       		.byte	0x9f
 2783 04cc 00000000 		.4byte	0
 2784 04d0 00000000 		.4byte	0
 2785              	.LLST30:
 2786 04d4 2A000000 		.4byte	.LVL82
 2787 04d8 34000000 		.4byte	.LVL83
 2788 04dc 0100     		.2byte	0x1
 2789 04de 52       		.byte	0x52
 2790 04df 34000000 		.4byte	.LVL83
 2791 04e3 36000000 		.4byte	.LVL84
 2792 04e7 0500     		.2byte	0x5
 2793 04e9 31       		.byte	0x31
 2794 04ea 75       		.byte	0x75
 2795 04eb 00       		.sleb128 0
 2796 04ec 24       		.byte	0x24
 2797 04ed 9F       		.byte	0x9f
 2798 04ee 36000000 		.4byte	.LVL84
 2799 04f2 38000000 		.4byte	.LVL85
 2800 04f6 0100     		.2byte	0x1
 2801 04f8 52       		.byte	0x52
 2802 04f9 38000000 		.4byte	.LVL85
 2803 04fd 3A000000 		.4byte	.LVL86
 2804 0501 0500     		.2byte	0x5
 2805 0503 31       		.byte	0x31
 2806 0504 75       		.byte	0x75
 2807 0505 00       		.sleb128 0
 2808 0506 24       		.byte	0x24
 2809 0507 9F       		.byte	0x9f
 2810 0508 3A000000 		.4byte	.LVL86
 2811 050c 40000000 		.4byte	.LFE4
 2812 0510 0800     		.2byte	0x8
 2813 0512 31       		.byte	0x31
 2814 0513 F3       		.byte	0xf3
 2815 0514 01       		.uleb128 0x1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 78


 2816 0515 50       		.byte	0x50
 2817 0516 4F       		.byte	0x4f
 2818 0517 1A       		.byte	0x1a
 2819 0518 24       		.byte	0x24
 2820 0519 9F       		.byte	0x9f
 2821 051a 00000000 		.4byte	0
 2822 051e 00000000 		.4byte	0
 2823              	.LLST31:
 2824 0522 00000000 		.4byte	.LVL75
 2825 0526 15000000 		.4byte	.LVL77-1
 2826 052a 0200     		.2byte	0x2
 2827 052c 71       		.byte	0x71
 2828 052d 1A       		.sleb128 26
 2829 052e 00000000 		.4byte	0
 2830 0532 00000000 		.4byte	0
 2831              		.section	.debug_aranges,"",%progbits
 2832 0000 44000000 		.4byte	0x44
 2833 0004 0200     		.2byte	0x2
 2834 0006 00000000 		.4byte	.Ldebug_info0
 2835 000a 04       		.byte	0x4
 2836 000b 00       		.byte	0
 2837 000c 0000     		.2byte	0
 2838 000e 0000     		.2byte	0
 2839 0010 00000000 		.4byte	.LFB1
 2840 0014 48000000 		.4byte	.LFE1-.LFB1
 2841 0018 00000000 		.4byte	.LFB5
 2842 001c 16000000 		.4byte	.LFE5-.LFB5
 2843 0020 00000000 		.4byte	.LFB2
 2844 0024 58000000 		.4byte	.LFE2-.LFB2
 2845 0028 00000000 		.4byte	.LFB3
 2846 002c 3C000000 		.4byte	.LFE3-.LFB3
 2847 0030 00000000 		.4byte	.LFB6
 2848 0034 66000000 		.4byte	.LFE6-.LFB6
 2849 0038 00000000 		.4byte	.LFB4
 2850 003c 40000000 		.4byte	.LFE4-.LFB4
 2851 0040 00000000 		.4byte	0
 2852 0044 00000000 		.4byte	0
 2853              		.section	.debug_ranges,"",%progbits
 2854              	.Ldebug_ranges0:
 2855 0000 00000000 		.4byte	.LFB1
 2856 0004 48000000 		.4byte	.LFE1
 2857 0008 00000000 		.4byte	.LFB5
 2858 000c 16000000 		.4byte	.LFE5
 2859 0010 00000000 		.4byte	.LFB2
 2860 0014 58000000 		.4byte	.LFE2
 2861 0018 00000000 		.4byte	.LFB3
 2862 001c 3C000000 		.4byte	.LFE3
 2863 0020 00000000 		.4byte	.LFB6
 2864 0024 66000000 		.4byte	.LFE6
 2865 0028 00000000 		.4byte	.LFB4
 2866 002c 40000000 		.4byte	.LFE4
 2867 0030 00000000 		.4byte	0
 2868 0034 00000000 		.4byte	0
 2869              		.section	.debug_line,"",%progbits
 2870              	.Ldebug_line0:
 2871 0000 B9020000 		.section	.debug_str,"MS",%progbits,1
 2871      02008F01 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 79


 2871      00000201 
 2871      FB0E0D00 
 2871      01010101 
 2872              	.LASF26:
 2873 0000 43617053 		.ascii	"CapSense_WD_PROXIMITY_E\000"
 2873      656E7365 
 2873      5F57445F 
 2873      50524F58 
 2873      494D4954 
 2874              	.LASF107:
 2875 0018 43617053 		.ascii	"CapSense_DpProcessCsdSensorRawCountsExt\000"
 2875      656E7365 
 2875      5F447050 
 2875      726F6365 
 2875      73734373 
 2876              	.LASF111:
 2877 0040 736E7343 		.ascii	"snsCnt\000"
 2877      6E7400
 2878              	.LASF93:
 2879 0047 77646774 		.ascii	"wdgtId\000"
 2879      496400
 2880              	.LASF104:
 2881 004e 666C7472 		.ascii	"fltrHistV\000"
 2881      48697374 
 2881      5600
 2882              	.LASF66:
 2883 0058 736E7254 		.ascii	"snrTestWidgetId\000"
 2883      65737457 
 2883      69646765 
 2883      74496400 
 2884              	.LASF116:
 2885 0068 43617053 		.ascii	"CapSense_DpProcessCsdWidgetStatus\000"
 2885      656E7365 
 2885      5F447050 
 2885      726F6365 
 2885      73734373 
 2886              	.LASF8:
 2887 008a 756E7369 		.ascii	"unsigned int\000"
 2887      676E6564 
 2887      20696E74 
 2887      00
 2888              	.LASF57:
 2889 0097 7363616E 		.ascii	"scanCounter\000"
 2889      436F756E 
 2889      74657200 
 2890              	.LASF98:
 2891 00a3 43617053 		.ascii	"CapSense_DpUpdateDifferences\000"
 2891      656E7365 
 2891      5F447055 
 2891      70646174 
 2891      65446966 
 2892              	.LASF55:
 2893 00c0 6877436C 		.ascii	"hwClock\000"
 2893      6F636B00 
 2894              	.LASF70:
 2895 00c8 7363616E 		.ascii	"scanCsdISC\000"
 2895      43736449 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 80


 2895      534300
 2896              	.LASF100:
 2897 00d3 64696666 		.ascii	"diffValue\000"
 2897      56616C75 
 2897      6500
 2898              	.LASF108:
 2899 00dd 6D6F6465 		.ascii	"mode\000"
 2899      00
 2900              	.LASF99:
 2901 00e2 63757253 		.ascii	"curSnsPtr\000"
 2901      6E735074 
 2901      7200
 2902              	.LASF25:
 2903 00ec 43617053 		.ascii	"CapSense_WD_TOUCHPAD_E\000"
 2903      656E7365 
 2903      5F57445F 
 2903      544F5543 
 2903      48504144 
 2904              	.LASF45:
 2905 0103 43617053 		.ascii	"CapSense_RAM_WD_LIST_STRUCT\000"
 2905      656E7365 
 2905      5F52414D 
 2905      5F57445F 
 2905      4C495354 
 2906              	.LASF122:
 2907 011f 43617053 		.ascii	"CapSense_dsFlash\000"
 2907      656E7365 
 2907      5F647346 
 2907      6C617368 
 2907      00
 2908              	.LASF37:
 2909 0130 69646163 		.ascii	"idacGainIndex\000"
 2909      4761696E 
 2909      496E6465 
 2909      7800
 2910              	.LASF42:
 2911 013e 646F776E 		.ascii	"down\000"
 2911      00
 2912              	.LASF113:
 2913 0143 6E657753 		.ascii	"newStatus\000"
 2913      74617475 
 2913      7300
 2914              	.LASF13:
 2915 014d 666C6F61 		.ascii	"float\000"
 2915      7400
 2916              	.LASF12:
 2917 0153 696E7433 		.ascii	"int32\000"
 2917      3200
 2918              	.LASF97:
 2919 0159 43617053 		.ascii	"CapSense_DpInitialize\000"
 2919      656E7365 
 2919      5F447049 
 2919      6E697469 
 2919      616C697A 
 2920              	.LASF125:
 2921 016f 43617053 		.ascii	"CapSense_FtUpdateBaseline\000"
 2921      656E7365 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 81


 2921      5F467455 
 2921      70646174 
 2921      65426173 
 2922              	.LASF65:
 2923 0189 736E734C 		.ascii	"snsList\000"
 2923      69737400 
 2924              	.LASF101:
 2925 0191 72657375 		.ascii	"result\000"
 2925      6C7400
 2926              	.LASF7:
 2927 0198 6C6F6E67 		.ascii	"long long unsigned int\000"
 2927      206C6F6E 
 2927      6720756E 
 2927      7369676E 
 2927      65642069 
 2928              	.LASF24:
 2929 01af 43617053 		.ascii	"CapSense_WD_MATRIX_BUTTON_E\000"
 2929      656E7365 
 2929      5F57445F 
 2929      4D415452 
 2929      49585F42 
 2930              	.LASF91:
 2931 01cb 70747252 		.ascii	"ptrRegular\000"
 2931      6567756C 
 2931      617200
 2932              	.LASF67:
 2933 01d6 736E7254 		.ascii	"snrTestSensorId\000"
 2933      65737453 
 2933      656E736F 
 2933      72496400 
 2934              	.LASF80:
 2935 01e6 77646774 		.ascii	"wdgtType\000"
 2935      54797065 
 2935      00
 2936              	.LASF124:
 2937 01ef 43617053 		.ascii	"CapSense_FtRunEnabledFiltersInternal\000"
 2937      656E7365 
 2937      5F467452 
 2937      756E456E 
 2937      61626C65 
 2938              	.LASF92:
 2939 0214 43617053 		.ascii	"CapSense_PTR_FILTER_VARIANT\000"
 2939      656E7365 
 2939      5F505452 
 2939      5F46494C 
 2939      5445525F 
 2940              	.LASF89:
 2941 0230 72656775 		.ascii	"regularChannel\000"
 2941      6C617243 
 2941      68616E6E 
 2941      656C00
 2942              	.LASF63:
 2943 023f 6D6F6443 		.ascii	"modCsdClk\000"
 2943      7364436C 
 2943      6B00
 2944              	.LASF51:
 2945 0249 43617053 		.ascii	"CapSense_RAM_SNS_STRUCT\000"
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 82


 2945      656E7365 
 2945      5F52414D 
 2945      5F534E53 
 2945      5F535452 
 2946              	.LASF16:
 2947 0261 73697A65 		.ascii	"size_t\000"
 2947      5F7400
 2948              	.LASF33:
 2949 0268 68797374 		.ascii	"hysteresis\000"
 2949      65726573 
 2949      697300
 2950              	.LASF23:
 2951 0273 43617053 		.ascii	"CapSense_WD_RADIAL_SLIDER_E\000"
 2951      656E7365 
 2951      5F57445F 
 2951      52414449 
 2951      414C5F53 
 2952              	.LASF82:
 2953 028f 43617053 		.ascii	"CapSense_FLASH_WD_STRUCT\000"
 2953      656E7365 
 2953      5F464C41 
 2953      53485F57 
 2953      445F5354 
 2954              	.LASF35:
 2955 02a8 6C6F7742 		.ascii	"lowBslnRst\000"
 2955      736C6E52 
 2955      737400
 2956              	.LASF79:
 2957 02b3 746F7461 		.ascii	"totalNumSns\000"
 2957      6C4E756D 
 2957      536E7300 
 2958              	.LASF31:
 2959 02bf 6E6F6973 		.ascii	"noiseTh\000"
 2959      65546800 
 2960              	.LASF15:
 2961 02c7 63686172 		.ascii	"char\000"
 2961      00
 2962              	.LASF106:
 2963 02cc 43617053 		.ascii	"CapSense_DpProcessCsdWidgetRawCounts\000"
 2963      656E7365 
 2963      5F447050 
 2963      726F6365 
 2963      73734373 
 2964              	.LASF10:
 2965 02f1 75696E74 		.ascii	"uint16\000"
 2965      313600
 2966              	.LASF29:
 2967 02f8 7265736F 		.ascii	"resolution\000"
 2967      6C757469 
 2967      6F6E00
 2968              	.LASF58:
 2969 0303 73746174 		.ascii	"status\000"
 2969      757300
 2970              	.LASF127:
 2971 030a 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_Processing.c\000"
 2971      72617465 
 2971      645F536F 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 83


 2971      75726365 
 2971      5C50536F 
 2972              	.LASF20:
 2973 0337 43617053 		.ascii	"CapSense_LOW_BSLN_RST_TYPE\000"
 2973      656E7365 
 2973      5F4C4F57 
 2973      5F42534C 
 2973      4E5F5253 
 2974              	.LASF109:
 2975 0352 43617053 		.ascii	"CapSense_DpProcessButton\000"
 2975      656E7365 
 2975      5F447050 
 2975      726F6365 
 2975      73734275 
 2976              	.LASF50:
 2977 036b 69646163 		.ascii	"idacComp\000"
 2977      436F6D70 
 2977      00
 2978              	.LASF44:
 2979 0374 72696768 		.ascii	"right\000"
 2979      7400
 2980              	.LASF6:
 2981 037a 6C6F6E67 		.ascii	"long long int\000"
 2981      206C6F6E 
 2981      6720696E 
 2981      7400
 2982              	.LASF81:
 2983 0388 6E756D43 		.ascii	"numCols\000"
 2983      6F6C7300 
 2984              	.LASF34:
 2985 0390 6F6E4465 		.ascii	"onDebounce\000"
 2985      626F756E 
 2985      636500
 2986              	.LASF64:
 2987 039b 77646774 		.ascii	"wdgtList\000"
 2987      4C697374 
 2987      00
 2988              	.LASF84:
 2989 03a4 43617053 		.ascii	"CapSense_FLASH_STRUCT\000"
 2989      656E7365 
 2989      5F464C41 
 2989      53485F53 
 2989      54525543 
 2990              	.LASF121:
 2991 03ba 43617053 		.ascii	"CapSense_dsRam\000"
 2991      656E7365 
 2991      5F647352 
 2991      616D00
 2992              	.LASF69:
 2993 03c9 736E7254 		.ascii	"snrTestRawCount\000"
 2993      65737452 
 2993      6177436F 
 2993      756E7400 
 2994              	.LASF123:
 2995 03d9 6D656D73 		.ascii	"memset\000"
 2995      657400
 2996              	.LASF32:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 84


 2997 03e0 6E4E6F69 		.ascii	"nNoiseTh\000"
 2997      73655468 
 2997      00
 2998              	.LASF62:
 2999 03e9 63736430 		.ascii	"csd0Config\000"
 2999      436F6E66 
 2999      696700
 3000              	.LASF40:
 3001 03f4 43617053 		.ascii	"CapSense_RAM_WD_BASE_STRUCT\000"
 3001      656E7365 
 3001      5F52414D 
 3001      5F57445F 
 3001      42415345 
 3002              	.LASF28:
 3003 0410 43617053 		.ascii	"CapSense_WD_TYPE_ENUM\000"
 3003      656E7365 
 3003      5F57445F 
 3003      54595045 
 3003      5F454E55 
 3004              	.LASF118:
 3005 0426 73656E73 		.ascii	"sensorStatus\000"
 3005      6F725374 
 3005      61747573 
 3005      00
 3006              	.LASF11:
 3007 0433 75696E74 		.ascii	"uint32\000"
 3007      333200
 3008              	.LASF114:
 3009 043a 746F7563 		.ascii	"touchTh\000"
 3009      68546800 
 3010              	.LASF76:
 3011 0442 70747232 		.ascii	"ptr2FltrHistory\000"
 3011      466C7472 
 3011      48697374 
 3011      6F727900 
 3012              	.LASF128:
 3013 0452 443A5C5F 		.ascii	"D:\\_Project\\_MD\\cypress_button\\EZIIC_button.cyd"
 3013      50726F6A 
 3013      6563745C 
 3013      5F4D445C 
 3013      63797072 
 3014 0481 736E00   		.ascii	"sn\000"
 3015              	.LASF22:
 3016 0484 43617053 		.ascii	"CapSense_WD_LINEAR_SLIDER_E\000"
 3016      656E7365 
 3016      5F57445F 
 3016      4C494E45 
 3016      41525F53 
 3017              	.LASF119:
 3018 04a0 77645374 		.ascii	"wdStatusIndex\000"
 3018      61747573 
 3018      496E6465 
 3018      7800
 3019              	.LASF86:
 3020 04ae 6D656448 		.ascii	"medHistory\000"
 3020      6973746F 
 3020      727900
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 85


 3021              	.LASF17:
 3022 04b9 6C6F6E67 		.ascii	"long double\000"
 3022      20646F75 
 3022      626C6500 
 3023              	.LASF95:
 3024 04c5 70747252 		.ascii	"ptrRamWdgt\000"
 3024      616D5764 
 3024      677400
 3025              	.LASF112:
 3026 04d0 736E734D 		.ascii	"snsMask\000"
 3026      61736B00 
 3027              	.LASF68:
 3028 04d8 736E7254 		.ascii	"snrTestScanCounter\000"
 3028      65737453 
 3028      63616E43 
 3028      6F756E74 
 3028      657200
 3029              	.LASF53:
 3030 04eb 636F6E66 		.ascii	"configId\000"
 3030      69674964 
 3030      00
 3031              	.LASF75:
 3032 04f4 70747232 		.ascii	"ptr2SnsRam\000"
 3032      536E7352 
 3032      616D00
 3033              	.LASF87:
 3034 04ff 61766748 		.ascii	"avgHistory\000"
 3034      6973746F 
 3034      727900
 3035              	.LASF61:
 3036 050a 736E7353 		.ascii	"snsStatus\000"
 3036      74617475 
 3036      7300
 3037              	.LASF27:
 3038 0514 43617053 		.ascii	"CapSense_WD_ENCODERDIAL_E\000"
 3038      656E7365 
 3038      5F57445F 
 3038      454E434F 
 3038      44455244 
 3039              	.LASF39:
 3040 052e 736E7343 		.ascii	"snsClkSource\000"
 3040      6C6B536F 
 3040      75726365 
 3040      00
 3041              	.LASF2:
 3042 053b 73686F72 		.ascii	"short int\000"
 3042      7420696E 
 3042      7400
 3043              	.LASF72:
 3044 0545 43617053 		.ascii	"CapSense_RAM_STRUCT\000"
 3044      656E7365 
 3044      5F52414D 
 3044      5F535452 
 3044      55435400 
 3045              	.LASF90:
 3046 0559 43617053 		.ascii	"CapSense_REGULAR_FLTR_STRUCT\000"
 3046      656E7365 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 86


 3046      5F524547 
 3046      554C4152 
 3046      5F464C54 
 3047              	.LASF4:
 3048 0576 6C6F6E67 		.ascii	"long int\000"
 3048      20696E74 
 3048      00
 3049              	.LASF59:
 3050 057f 77646774 		.ascii	"wdgtEnable\000"
 3050      456E6162 
 3050      6C6500
 3051              	.LASF48:
 3052 058a 64696666 		.ascii	"diff\000"
 3052      00
 3053              	.LASF56:
 3054 058f 74756E65 		.ascii	"tunerCmd\000"
 3054      72436D64 
 3054      00
 3055              	.LASF102:
 3056 0598 736E7349 		.ascii	"snsId\000"
 3056      6400
 3057              	.LASF21:
 3058 059e 43617053 		.ascii	"CapSense_WD_BUTTON_E\000"
 3058      656E7365 
 3058      5F57445F 
 3058      42555454 
 3058      4F4E5F45 
 3059              	.LASF88:
 3060 05b3 43617053 		.ascii	"CapSense_REGULAR_FLTR_CHANNEL_STRUCT\000"
 3060      656E7365 
 3060      5F524547 
 3060      554C4152 
 3060      5F464C54 
 3061              	.LASF103:
 3062 05d8 70747253 		.ascii	"ptrSnsTmp\000"
 3062      6E73546D 
 3062      7000
 3063              	.LASF43:
 3064 05e2 6C656674 		.ascii	"left\000"
 3064      00
 3065              	.LASF115:
 3066 05e7 70747244 		.ascii	"ptrDebounceCnt\000"
 3066      65626F75 
 3066      6E636543 
 3066      6E7400
 3067              	.LASF60:
 3068 05f6 77646774 		.ascii	"wdgtStatus\000"
 3068      53746174 
 3068      757300
 3069              	.LASF18:
 3070 0601 73697A65 		.ascii	"sizetype\000"
 3070      74797065 
 3070      00
 3071              	.LASF5:
 3072 060a 6C6F6E67 		.ascii	"long unsigned int\000"
 3072      20756E73 
 3072      69676E65 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 87


 3072      6420696E 
 3072      7400
 3073              	.LASF36:
 3074 061c 69646163 		.ascii	"idacMod\000"
 3074      4D6F6400 
 3075              	.LASF77:
 3076 0624 70747232 		.ascii	"ptr2DebounceArr\000"
 3076      4465626F 
 3076      756E6365 
 3076      41727200 
 3077              	.LASF30:
 3078 0634 66696E67 		.ascii	"fingerTh\000"
 3078      65725468 
 3078      00
 3079              	.LASF47:
 3080 063d 62736C6E 		.ascii	"bslnExt\000"
 3080      45787400 
 3081              	.LASF41:
 3082 0645 43617053 		.ascii	"CapSense_RAM_WD_BUTTON_STRUCT\000"
 3082      656E7365 
 3082      5F52414D 
 3082      5F57445F 
 3082      42555454 
 3083              	.LASF1:
 3084 0663 756E7369 		.ascii	"unsigned char\000"
 3084      676E6564 
 3084      20636861 
 3084      7200
 3085              	.LASF120:
 3086 0671 77645374 		.ascii	"wdStatusMask\000"
 3086      61747573 
 3086      4D61736B 
 3086      00
 3087              	.LASF105:
 3088 067e 69735072 		.ascii	"isProxWdgt\000"
 3088      6F785764 
 3088      677400
 3089              	.LASF96:
 3090 0689 70747246 		.ascii	"ptrFlashWdgt\000"
 3090      6C617368 
 3090      57646774 
 3090      00
 3091              	.LASF78:
 3092 0696 73746174 		.ascii	"staticConfig\000"
 3092      6963436F 
 3092      6E666967 
 3092      00
 3093              	.LASF71:
 3094 06a3 7363616E 		.ascii	"scanCurrentISC\000"
 3094      43757272 
 3094      656E7449 
 3094      534300
 3095              	.LASF74:
 3096 06b2 70747232 		.ascii	"ptr2WdgtRam\000"
 3096      57646774 
 3096      52616D00 
 3097              	.LASF19:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 88


 3098 06be 43617053 		.ascii	"CapSense_THRESHOLD_TYPE\000"
 3098      656E7365 
 3098      5F544852 
 3098      4553484F 
 3098      4C445F54 
 3099              	.LASF126:
 3100 06d6 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3100      43313120 
 3100      352E342E 
 3100      31203230 
 3100      31363036 
 3101 0709 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 3101      20726576 
 3101      6973696F 
 3101      6E203233 
 3101      37373135 
 3102 073c 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 3102      66756E63 
 3102      74696F6E 
 3102      2D736563 
 3102      74696F6E 
 3103              	.LASF85:
 3104 0764 69697248 		.ascii	"iirHistory\000"
 3104      6973746F 
 3104      727900
 3105              	.LASF110:
 3106 076f 63757272 		.ascii	"currStatus\000"
 3106      53746174 
 3106      757300
 3107              	.LASF38:
 3108 077a 736E7343 		.ascii	"snsClk\000"
 3108      6C6B00
 3109              	.LASF0:
 3110 0781 7369676E 		.ascii	"signed char\000"
 3110      65642063 
 3110      68617200 
 3111              	.LASF46:
 3112 078d 62736C6E 		.ascii	"bsln\000"
 3112      00
 3113              	.LASF3:
 3114 0792 73686F72 		.ascii	"short unsigned int\000"
 3114      7420756E 
 3114      7369676E 
 3114      65642069 
 3114      6E7400
 3115              	.LASF73:
 3116 07a5 70747232 		.ascii	"ptr2SnsFlash\000"
 3116      536E7346 
 3116      6C617368 
 3116      00
 3117              	.LASF9:
 3118 07b2 75696E74 		.ascii	"uint8\000"
 3118      3800
 3119              	.LASF14:
 3120 07b8 646F7562 		.ascii	"double\000"
 3120      6C6500
 3121              	.LASF49:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccAC81Yu.s 			page 89


 3122 07bf 6E656742 		.ascii	"negBslnRstCnt\000"
 3122      736C6E52 
 3122      7374436E 
 3122      7400
 3123              	.LASF94:
 3124 07cd 77696467 		.ascii	"widgetType\000"
 3124      65745479 
 3124      706500
 3125              	.LASF54:
 3126 07d8 64657669 		.ascii	"deviceId\000"
 3126      63654964 
 3126      00
 3127              	.LASF117:
 3128 07e1 77696467 		.ascii	"widgetId\000"
 3128      65744964 
 3128      00
 3129              	.LASF52:
 3130 07ea 43617053 		.ascii	"CapSense_RAM_SNS_LIST_STRUCT\000"
 3130      656E7365 
 3130      5F52414D 
 3130      5F534E53 
 3130      5F4C4953 
 3131              	.LASF83:
 3132 0807 77646774 		.ascii	"wdgtArray\000"
 3132      41727261 
 3132      7900
 3133              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran

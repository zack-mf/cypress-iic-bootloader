ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccGGxvNV.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"UART.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.UART_Init,"ax",%progbits
  20              		.align	1
  21              		.global	UART_Init
  22              		.code	16
  23              		.thumb_func
  24              		.type	UART_Init, %function
  25              	UART_Init:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC4\\UART.c"
   1:Generated_Source\PSoC4/UART.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/UART.c **** * \file UART.c
   3:Generated_Source\PSoC4/UART.c **** * \version 4.0
   4:Generated_Source\PSoC4/UART.c **** *
   5:Generated_Source\PSoC4/UART.c **** * \brief
   6:Generated_Source\PSoC4/UART.c **** *  This file provides the source code to the API for the SCB Component.
   7:Generated_Source\PSoC4/UART.c **** *
   8:Generated_Source\PSoC4/UART.c **** * Note:
   9:Generated_Source\PSoC4/UART.c **** *
  10:Generated_Source\PSoC4/UART.c **** *******************************************************************************
  11:Generated_Source\PSoC4/UART.c **** * \copyright
  12:Generated_Source\PSoC4/UART.c **** * Copyright 2013-2017, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/UART.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/UART.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/UART.c **** 
  18:Generated_Source\PSoC4/UART.c **** #include "UART_PVT.h"
  19:Generated_Source\PSoC4/UART.c **** 
  20:Generated_Source\PSoC4/UART.c **** #if (UART_SCB_MODE_I2C_INC)
  21:Generated_Source\PSoC4/UART.c ****     #include "UART_I2C_PVT.h"
  22:Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_MODE_I2C_INC) */
  23:Generated_Source\PSoC4/UART.c **** 
  24:Generated_Source\PSoC4/UART.c **** #if (UART_SCB_MODE_EZI2C_INC)
  25:Generated_Source\PSoC4/UART.c ****     #include "UART_EZI2C_PVT.h"
  26:Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_MODE_EZI2C_INC) */
  27:Generated_Source\PSoC4/UART.c **** 
  28:Generated_Source\PSoC4/UART.c **** #if (UART_SCB_MODE_SPI_INC || UART_SCB_MODE_UART_INC)
  29:Generated_Source\PSoC4/UART.c ****     #include "UART_SPI_UART_PVT.h"
  30:Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_MODE_SPI_INC || UART_SCB_MODE_UART_INC) */
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccGGxvNV.s 			page 2


  31:Generated_Source\PSoC4/UART.c **** 
  32:Generated_Source\PSoC4/UART.c **** 
  33:Generated_Source\PSoC4/UART.c **** /***************************************
  34:Generated_Source\PSoC4/UART.c **** *    Run Time Configuration Vars
  35:Generated_Source\PSoC4/UART.c **** ***************************************/
  36:Generated_Source\PSoC4/UART.c **** 
  37:Generated_Source\PSoC4/UART.c **** /* Stores internal component configuration for Unconfigured mode */
  38:Generated_Source\PSoC4/UART.c **** #if (UART_SCB_MODE_UNCONFIG_CONST_CFG)
  39:Generated_Source\PSoC4/UART.c ****     /* Common configuration variables */
  40:Generated_Source\PSoC4/UART.c ****     uint8 UART_scbMode = UART_SCB_MODE_UNCONFIG;
  41:Generated_Source\PSoC4/UART.c ****     uint8 UART_scbEnableWake;
  42:Generated_Source\PSoC4/UART.c ****     uint8 UART_scbEnableIntr;
  43:Generated_Source\PSoC4/UART.c **** 
  44:Generated_Source\PSoC4/UART.c ****     /* I2C configuration variables */
  45:Generated_Source\PSoC4/UART.c ****     uint8 UART_mode;
  46:Generated_Source\PSoC4/UART.c ****     uint8 UART_acceptAddr;
  47:Generated_Source\PSoC4/UART.c **** 
  48:Generated_Source\PSoC4/UART.c ****     /* SPI/UART configuration variables */
  49:Generated_Source\PSoC4/UART.c ****     volatile uint8 * UART_rxBuffer;
  50:Generated_Source\PSoC4/UART.c ****     uint8  UART_rxDataBits;
  51:Generated_Source\PSoC4/UART.c ****     uint32 UART_rxBufferSize;
  52:Generated_Source\PSoC4/UART.c **** 
  53:Generated_Source\PSoC4/UART.c ****     volatile uint8 * UART_txBuffer;
  54:Generated_Source\PSoC4/UART.c ****     uint8  UART_txDataBits;
  55:Generated_Source\PSoC4/UART.c ****     uint32 UART_txBufferSize;
  56:Generated_Source\PSoC4/UART.c **** 
  57:Generated_Source\PSoC4/UART.c ****     /* EZI2C configuration variables */
  58:Generated_Source\PSoC4/UART.c ****     uint8 UART_numberOfAddr;
  59:Generated_Source\PSoC4/UART.c ****     uint8 UART_subAddrSize;
  60:Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
  61:Generated_Source\PSoC4/UART.c **** 
  62:Generated_Source\PSoC4/UART.c **** 
  63:Generated_Source\PSoC4/UART.c **** /***************************************
  64:Generated_Source\PSoC4/UART.c **** *     Common SCB Vars
  65:Generated_Source\PSoC4/UART.c **** ***************************************/
  66:Generated_Source\PSoC4/UART.c **** /**
  67:Generated_Source\PSoC4/UART.c **** * \addtogroup group_general
  68:Generated_Source\PSoC4/UART.c **** * \{
  69:Generated_Source\PSoC4/UART.c **** */
  70:Generated_Source\PSoC4/UART.c **** 
  71:Generated_Source\PSoC4/UART.c **** /** UART_initVar indicates whether the UART 
  72:Generated_Source\PSoC4/UART.c **** *  component has been initialized. The variable is initialized to 0 
  73:Generated_Source\PSoC4/UART.c **** *  and set to 1 the first time SCB_Start() is called. This allows 
  74:Generated_Source\PSoC4/UART.c **** *  the component to restart without reinitialization after the first 
  75:Generated_Source\PSoC4/UART.c **** *  call to the UART_Start() routine.
  76:Generated_Source\PSoC4/UART.c **** *
  77:Generated_Source\PSoC4/UART.c **** *  If re-initialization of the component is required, then the 
  78:Generated_Source\PSoC4/UART.c **** *  UART_Init() function can be called before the 
  79:Generated_Source\PSoC4/UART.c **** *  UART_Start() or UART_Enable() function.
  80:Generated_Source\PSoC4/UART.c **** */
  81:Generated_Source\PSoC4/UART.c **** uint8 UART_initVar = 0u;
  82:Generated_Source\PSoC4/UART.c **** 
  83:Generated_Source\PSoC4/UART.c **** 
  84:Generated_Source\PSoC4/UART.c **** #if (! (UART_SCB_MODE_I2C_CONST_CFG || \
  85:Generated_Source\PSoC4/UART.c ****         UART_SCB_MODE_EZI2C_CONST_CFG))
  86:Generated_Source\PSoC4/UART.c ****     /** This global variable stores TX interrupt sources after 
  87:Generated_Source\PSoC4/UART.c ****     * UART_Stop() is called. Only these TX interrupt sources 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccGGxvNV.s 			page 3


  88:Generated_Source\PSoC4/UART.c ****     * will be restored on a subsequent UART_Enable() call.
  89:Generated_Source\PSoC4/UART.c ****     */
  90:Generated_Source\PSoC4/UART.c ****     uint16 UART_IntrTxMask = 0u;
  91:Generated_Source\PSoC4/UART.c **** #endif /* (! (UART_SCB_MODE_I2C_CONST_CFG || \
  92:Generated_Source\PSoC4/UART.c ****               UART_SCB_MODE_EZI2C_CONST_CFG)) */
  93:Generated_Source\PSoC4/UART.c **** /** \} globals */
  94:Generated_Source\PSoC4/UART.c **** 
  95:Generated_Source\PSoC4/UART.c **** #if (UART_SCB_IRQ_INTERNAL)
  96:Generated_Source\PSoC4/UART.c **** #if !defined (CY_REMOVE_UART_CUSTOM_INTR_HANDLER)
  97:Generated_Source\PSoC4/UART.c ****     void (*UART_customIntrHandler)(void) = NULL;
  98:Generated_Source\PSoC4/UART.c **** #endif /* !defined (CY_REMOVE_UART_CUSTOM_INTR_HANDLER) */
  99:Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_IRQ_INTERNAL) */
 100:Generated_Source\PSoC4/UART.c **** 
 101:Generated_Source\PSoC4/UART.c **** 
 102:Generated_Source\PSoC4/UART.c **** /***************************************
 103:Generated_Source\PSoC4/UART.c **** *    Private Function Prototypes
 104:Generated_Source\PSoC4/UART.c **** ***************************************/
 105:Generated_Source\PSoC4/UART.c **** 
 106:Generated_Source\PSoC4/UART.c **** static void UART_ScbEnableIntr(void);
 107:Generated_Source\PSoC4/UART.c **** static void UART_ScbModeStop(void);
 108:Generated_Source\PSoC4/UART.c **** static void UART_ScbModePostEnable(void);
 109:Generated_Source\PSoC4/UART.c **** 
 110:Generated_Source\PSoC4/UART.c **** 
 111:Generated_Source\PSoC4/UART.c **** /*******************************************************************************
 112:Generated_Source\PSoC4/UART.c **** * Function Name: UART_Init
 113:Generated_Source\PSoC4/UART.c **** ****************************************************************************//**
 114:Generated_Source\PSoC4/UART.c **** *
 115:Generated_Source\PSoC4/UART.c **** *  Initializes the UART component to operate in one of the selected
 116:Generated_Source\PSoC4/UART.c **** *  configurations: I2C, SPI, UART or EZI2C.
 117:Generated_Source\PSoC4/UART.c **** *  When the configuration is set to "Unconfigured SCB", this function does
 118:Generated_Source\PSoC4/UART.c **** *  not do any initialization. Use mode-specific initialization APIs instead:
 119:Generated_Source\PSoC4/UART.c **** *  UART_I2CInit, UART_SpiInit, 
 120:Generated_Source\PSoC4/UART.c **** *  UART_UartInit or UART_EzI2CInit.
 121:Generated_Source\PSoC4/UART.c **** *
 122:Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 123:Generated_Source\PSoC4/UART.c **** void UART_Init(void)
 124:Generated_Source\PSoC4/UART.c **** {
  28              		.loc 1 124 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
 125:Generated_Source\PSoC4/UART.c **** #if (UART_SCB_MODE_UNCONFIG_CONST_CFG)
 126:Generated_Source\PSoC4/UART.c ****     if (UART_SCB_MODE_UNCONFIG_RUNTM_CFG)
 127:Generated_Source\PSoC4/UART.c ****     {
 128:Generated_Source\PSoC4/UART.c ****         UART_initVar = 0u;
 129:Generated_Source\PSoC4/UART.c ****     }
 130:Generated_Source\PSoC4/UART.c ****     else
 131:Generated_Source\PSoC4/UART.c ****     {
 132:Generated_Source\PSoC4/UART.c ****         /* Initialization was done before this function call */
 133:Generated_Source\PSoC4/UART.c ****     }
 134:Generated_Source\PSoC4/UART.c **** 
 135:Generated_Source\PSoC4/UART.c **** #elif (UART_SCB_MODE_I2C_CONST_CFG)
 136:Generated_Source\PSoC4/UART.c ****     UART_I2CInit();
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccGGxvNV.s 			page 4


 137:Generated_Source\PSoC4/UART.c **** 
 138:Generated_Source\PSoC4/UART.c **** #elif (UART_SCB_MODE_SPI_CONST_CFG)
 139:Generated_Source\PSoC4/UART.c ****     UART_SpiInit();
 140:Generated_Source\PSoC4/UART.c **** 
 141:Generated_Source\PSoC4/UART.c **** #elif (UART_SCB_MODE_UART_CONST_CFG)
 142:Generated_Source\PSoC4/UART.c ****     UART_UartInit();
  36              		.loc 1 142 0
  37 0002 FFF7FEFF 		bl	UART_UartInit
  38              	.LVL0:
 143:Generated_Source\PSoC4/UART.c **** 
 144:Generated_Source\PSoC4/UART.c **** #elif (UART_SCB_MODE_EZI2C_CONST_CFG)
 145:Generated_Source\PSoC4/UART.c ****     UART_EzI2CInit();
 146:Generated_Source\PSoC4/UART.c **** 
 147:Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
 148:Generated_Source\PSoC4/UART.c **** }
  39              		.loc 1 148 0
  40              		@ sp needed
  41 0006 10BD     		pop	{r4, pc}
  42              		.cfi_endproc
  43              	.LFE1:
  44              		.size	UART_Init, .-UART_Init
  45              		.section	.text.UART_Enable,"ax",%progbits
  46              		.align	1
  47              		.global	UART_Enable
  48              		.code	16
  49              		.thumb_func
  50              		.type	UART_Enable, %function
  51              	UART_Enable:
  52              	.LFB2:
 149:Generated_Source\PSoC4/UART.c **** 
 150:Generated_Source\PSoC4/UART.c **** 
 151:Generated_Source\PSoC4/UART.c **** /*******************************************************************************
 152:Generated_Source\PSoC4/UART.c **** * Function Name: UART_Enable
 153:Generated_Source\PSoC4/UART.c **** ****************************************************************************//**
 154:Generated_Source\PSoC4/UART.c **** *
 155:Generated_Source\PSoC4/UART.c **** *  Enables UART component operation: activates the hardware and 
 156:Generated_Source\PSoC4/UART.c **** *  internal interrupt. It also restores TX interrupt sources disabled after the 
 157:Generated_Source\PSoC4/UART.c **** *  UART_Stop() function was called (note that level-triggered TX 
 158:Generated_Source\PSoC4/UART.c **** *  interrupt sources remain disabled to not cause code lock-up).
 159:Generated_Source\PSoC4/UART.c **** *  For I2C and EZI2C modes the interrupt is internal and mandatory for 
 160:Generated_Source\PSoC4/UART.c **** *  operation. For SPI and UART modes the interrupt can be configured as none, 
 161:Generated_Source\PSoC4/UART.c **** *  internal or external.
 162:Generated_Source\PSoC4/UART.c **** *  The UART configuration should be not changed when the component
 163:Generated_Source\PSoC4/UART.c **** *  is enabled. Any configuration changes should be made after disabling the 
 164:Generated_Source\PSoC4/UART.c **** *  component.
 165:Generated_Source\PSoC4/UART.c **** *  When configuration is set to “Unconfigured UART”, the component 
 166:Generated_Source\PSoC4/UART.c **** *  must first be initialized to operate in one of the following configurations: 
 167:Generated_Source\PSoC4/UART.c **** *  I2C, SPI, UART or EZ I2C, using the mode-specific initialization API. 
 168:Generated_Source\PSoC4/UART.c **** *  Otherwise this function does not enable the component.
 169:Generated_Source\PSoC4/UART.c **** *
 170:Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 171:Generated_Source\PSoC4/UART.c **** void UART_Enable(void)
 172:Generated_Source\PSoC4/UART.c **** {
  53              		.loc 1 172 0
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccGGxvNV.s 			page 5


 173:Generated_Source\PSoC4/UART.c **** #if (UART_SCB_MODE_UNCONFIG_CONST_CFG)
 174:Generated_Source\PSoC4/UART.c ****     /* Enable SCB block, only if it is already configured */
 175:Generated_Source\PSoC4/UART.c ****     if (!UART_SCB_MODE_UNCONFIG_RUNTM_CFG)
 176:Generated_Source\PSoC4/UART.c ****     {
 177:Generated_Source\PSoC4/UART.c ****         UART_CTRL_REG |= UART_CTRL_ENABLED;
 178:Generated_Source\PSoC4/UART.c **** 
 179:Generated_Source\PSoC4/UART.c ****         UART_ScbEnableIntr();
 180:Generated_Source\PSoC4/UART.c **** 
 181:Generated_Source\PSoC4/UART.c ****         /* Call PostEnable function specific to current operation mode */
 182:Generated_Source\PSoC4/UART.c ****         UART_ScbModePostEnable();
 183:Generated_Source\PSoC4/UART.c ****     }
 184:Generated_Source\PSoC4/UART.c **** #else
 185:Generated_Source\PSoC4/UART.c ****     UART_CTRL_REG |= UART_CTRL_ENABLED;
  57              		.loc 1 185 0
  58 0000 8021     		movs	r1, #128
  59 0002 044A     		ldr	r2, .L3
 172:Generated_Source\PSoC4/UART.c **** #if (UART_SCB_MODE_UNCONFIG_CONST_CFG)
  60              		.loc 1 172 0
  61 0004 10B5     		push	{r4, lr}
  62              		.cfi_def_cfa_offset 8
  63              		.cfi_offset 4, -8
  64              		.cfi_offset 14, -4
  65              		.loc 1 185 0
  66 0006 1368     		ldr	r3, [r2]
  67 0008 0906     		lsls	r1, r1, #24
  68 000a 0B43     		orrs	r3, r1
  69 000c 1360     		str	r3, [r2]
  70              	.LBB10:
  71              	.LBB11:
 186:Generated_Source\PSoC4/UART.c **** 
 187:Generated_Source\PSoC4/UART.c ****     UART_ScbEnableIntr();
 188:Generated_Source\PSoC4/UART.c **** 
 189:Generated_Source\PSoC4/UART.c ****     /* Call PostEnable function specific to current operation mode */
 190:Generated_Source\PSoC4/UART.c ****     UART_ScbModePostEnable();
 191:Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
 192:Generated_Source\PSoC4/UART.c **** }
 193:Generated_Source\PSoC4/UART.c **** 
 194:Generated_Source\PSoC4/UART.c **** 
 195:Generated_Source\PSoC4/UART.c **** /*******************************************************************************
 196:Generated_Source\PSoC4/UART.c **** * Function Name: UART_Start
 197:Generated_Source\PSoC4/UART.c **** ****************************************************************************//**
 198:Generated_Source\PSoC4/UART.c **** *
 199:Generated_Source\PSoC4/UART.c **** *  Invokes UART_Init() and UART_Enable().
 200:Generated_Source\PSoC4/UART.c **** *  After this function call, the component is enabled and ready for operation.
 201:Generated_Source\PSoC4/UART.c **** *  When configuration is set to "Unconfigured SCB", the component must first be
 202:Generated_Source\PSoC4/UART.c **** *  initialized to operate in one of the following configurations: I2C, SPI, UART
 203:Generated_Source\PSoC4/UART.c **** *  or EZI2C. Otherwise this function does not enable the component.
 204:Generated_Source\PSoC4/UART.c **** *
 205:Generated_Source\PSoC4/UART.c **** * \globalvars
 206:Generated_Source\PSoC4/UART.c **** *  UART_initVar - used to check initial configuration, modified
 207:Generated_Source\PSoC4/UART.c **** *  on first function call.
 208:Generated_Source\PSoC4/UART.c **** *
 209:Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 210:Generated_Source\PSoC4/UART.c **** void UART_Start(void)
 211:Generated_Source\PSoC4/UART.c **** {
 212:Generated_Source\PSoC4/UART.c ****     if (0u == UART_initVar)
 213:Generated_Source\PSoC4/UART.c ****     {
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccGGxvNV.s 			page 6


 214:Generated_Source\PSoC4/UART.c ****         UART_Init();
 215:Generated_Source\PSoC4/UART.c ****         UART_initVar = 1u; /* Component was initialized */
 216:Generated_Source\PSoC4/UART.c ****     }
 217:Generated_Source\PSoC4/UART.c **** 
 218:Generated_Source\PSoC4/UART.c ****     UART_Enable();
 219:Generated_Source\PSoC4/UART.c **** }
 220:Generated_Source\PSoC4/UART.c **** 
 221:Generated_Source\PSoC4/UART.c **** 
 222:Generated_Source\PSoC4/UART.c **** /*******************************************************************************
 223:Generated_Source\PSoC4/UART.c **** * Function Name: UART_Stop
 224:Generated_Source\PSoC4/UART.c **** ****************************************************************************//**
 225:Generated_Source\PSoC4/UART.c **** *
 226:Generated_Source\PSoC4/UART.c **** *  Disables the UART component: disable the hardware and internal 
 227:Generated_Source\PSoC4/UART.c **** *  interrupt. It also disables all TX interrupt sources so as not to cause an 
 228:Generated_Source\PSoC4/UART.c **** *  unexpected interrupt trigger because after the component is enabled, the 
 229:Generated_Source\PSoC4/UART.c **** *  TX FIFO is empty.
 230:Generated_Source\PSoC4/UART.c **** *  Refer to the function UART_Enable() for the interrupt 
 231:Generated_Source\PSoC4/UART.c **** *  configuration details.
 232:Generated_Source\PSoC4/UART.c **** *  This function disables the SCB component without checking to see if 
 233:Generated_Source\PSoC4/UART.c **** *  communication is in progress. Before calling this function it may be 
 234:Generated_Source\PSoC4/UART.c **** *  necessary to check the status of communication to make sure communication 
 235:Generated_Source\PSoC4/UART.c **** *  is complete. If this is not done then communication could be stopped mid 
 236:Generated_Source\PSoC4/UART.c **** *  byte and corrupted data could result.
 237:Generated_Source\PSoC4/UART.c **** *
 238:Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 239:Generated_Source\PSoC4/UART.c **** void UART_Stop(void)
 240:Generated_Source\PSoC4/UART.c **** {
 241:Generated_Source\PSoC4/UART.c **** #if (UART_SCB_IRQ_INTERNAL)
 242:Generated_Source\PSoC4/UART.c ****     UART_DisableInt();
 243:Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_IRQ_INTERNAL) */
 244:Generated_Source\PSoC4/UART.c **** 
 245:Generated_Source\PSoC4/UART.c ****     /* Call Stop function specific to current operation mode */
 246:Generated_Source\PSoC4/UART.c ****     UART_ScbModeStop();
 247:Generated_Source\PSoC4/UART.c **** 
 248:Generated_Source\PSoC4/UART.c ****     /* Disable SCB IP */
 249:Generated_Source\PSoC4/UART.c ****     UART_CTRL_REG &= (uint32) ~UART_CTRL_ENABLED;
 250:Generated_Source\PSoC4/UART.c **** 
 251:Generated_Source\PSoC4/UART.c ****     /* Disable all TX interrupt sources so as not to cause an unexpected
 252:Generated_Source\PSoC4/UART.c ****     * interrupt trigger after the component will be enabled because the 
 253:Generated_Source\PSoC4/UART.c ****     * TX FIFO is empty.
 254:Generated_Source\PSoC4/UART.c ****     * For SCB IP v0, it is critical as it does not mask-out interrupt
 255:Generated_Source\PSoC4/UART.c ****     * sources when it is disabled. This can cause a code lock-up in the
 256:Generated_Source\PSoC4/UART.c ****     * interrupt handler because TX FIFO cannot be loaded after the block
 257:Generated_Source\PSoC4/UART.c ****     * is disabled.
 258:Generated_Source\PSoC4/UART.c ****     */
 259:Generated_Source\PSoC4/UART.c ****     UART_SetTxInterruptMode(UART_NO_INTR_SOURCES);
 260:Generated_Source\PSoC4/UART.c **** 
 261:Generated_Source\PSoC4/UART.c **** #if (UART_SCB_IRQ_INTERNAL)
 262:Generated_Source\PSoC4/UART.c ****     UART_ClearPendingInt();
 263:Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_IRQ_INTERNAL) */
 264:Generated_Source\PSoC4/UART.c **** }
 265:Generated_Source\PSoC4/UART.c **** 
 266:Generated_Source\PSoC4/UART.c **** 
 267:Generated_Source\PSoC4/UART.c **** /*******************************************************************************
 268:Generated_Source\PSoC4/UART.c **** * Function Name: UART_SetRxFifoLevel
 269:Generated_Source\PSoC4/UART.c **** ****************************************************************************//**
 270:Generated_Source\PSoC4/UART.c **** *
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccGGxvNV.s 			page 7


 271:Generated_Source\PSoC4/UART.c **** *  Sets level in the RX FIFO to generate a RX level interrupt.
 272:Generated_Source\PSoC4/UART.c **** *  When the RX FIFO has more entries than the RX FIFO level an RX level
 273:Generated_Source\PSoC4/UART.c **** *  interrupt request is generated.
 274:Generated_Source\PSoC4/UART.c **** *
 275:Generated_Source\PSoC4/UART.c **** *  \param level: Level in the RX FIFO to generate RX level interrupt.
 276:Generated_Source\PSoC4/UART.c **** *   The range of valid level values is between 0 and RX FIFO depth - 1.
 277:Generated_Source\PSoC4/UART.c **** *
 278:Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 279:Generated_Source\PSoC4/UART.c **** void UART_SetRxFifoLevel(uint32 level)
 280:Generated_Source\PSoC4/UART.c **** {
 281:Generated_Source\PSoC4/UART.c ****     uint32 rxFifoCtrl;
 282:Generated_Source\PSoC4/UART.c **** 
 283:Generated_Source\PSoC4/UART.c ****     rxFifoCtrl = UART_RX_FIFO_CTRL_REG;
 284:Generated_Source\PSoC4/UART.c **** 
 285:Generated_Source\PSoC4/UART.c ****     rxFifoCtrl &= ((uint32) ~UART_RX_FIFO_CTRL_TRIGGER_LEVEL_MASK); /* Clear level mask bits */
 286:Generated_Source\PSoC4/UART.c ****     rxFifoCtrl |= ((uint32) (UART_RX_FIFO_CTRL_TRIGGER_LEVEL_MASK & level));
 287:Generated_Source\PSoC4/UART.c **** 
 288:Generated_Source\PSoC4/UART.c ****     UART_RX_FIFO_CTRL_REG = rxFifoCtrl;
 289:Generated_Source\PSoC4/UART.c **** }
 290:Generated_Source\PSoC4/UART.c **** 
 291:Generated_Source\PSoC4/UART.c **** 
 292:Generated_Source\PSoC4/UART.c **** /*******************************************************************************
 293:Generated_Source\PSoC4/UART.c **** * Function Name: UART_SetTxFifoLevel
 294:Generated_Source\PSoC4/UART.c **** ****************************************************************************//**
 295:Generated_Source\PSoC4/UART.c **** *
 296:Generated_Source\PSoC4/UART.c **** *  Sets level in the TX FIFO to generate a TX level interrupt.
 297:Generated_Source\PSoC4/UART.c **** *  When the TX FIFO has less entries than the TX FIFO level an TX level
 298:Generated_Source\PSoC4/UART.c **** *  interrupt request is generated.
 299:Generated_Source\PSoC4/UART.c **** *
 300:Generated_Source\PSoC4/UART.c **** *  \param level: Level in the TX FIFO to generate TX level interrupt.
 301:Generated_Source\PSoC4/UART.c **** *   The range of valid level values is between 0 and TX FIFO depth - 1.
 302:Generated_Source\PSoC4/UART.c **** *
 303:Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 304:Generated_Source\PSoC4/UART.c **** void UART_SetTxFifoLevel(uint32 level)
 305:Generated_Source\PSoC4/UART.c **** {
 306:Generated_Source\PSoC4/UART.c ****     uint32 txFifoCtrl;
 307:Generated_Source\PSoC4/UART.c **** 
 308:Generated_Source\PSoC4/UART.c ****     txFifoCtrl = UART_TX_FIFO_CTRL_REG;
 309:Generated_Source\PSoC4/UART.c **** 
 310:Generated_Source\PSoC4/UART.c ****     txFifoCtrl &= ((uint32) ~UART_TX_FIFO_CTRL_TRIGGER_LEVEL_MASK); /* Clear level mask bits */
 311:Generated_Source\PSoC4/UART.c ****     txFifoCtrl |= ((uint32) (UART_TX_FIFO_CTRL_TRIGGER_LEVEL_MASK & level));
 312:Generated_Source\PSoC4/UART.c **** 
 313:Generated_Source\PSoC4/UART.c ****     UART_TX_FIFO_CTRL_REG = txFifoCtrl;
 314:Generated_Source\PSoC4/UART.c **** }
 315:Generated_Source\PSoC4/UART.c **** 
 316:Generated_Source\PSoC4/UART.c **** 
 317:Generated_Source\PSoC4/UART.c **** #if (UART_SCB_IRQ_INTERNAL)
 318:Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 319:Generated_Source\PSoC4/UART.c ****     * Function Name: UART_SetCustomInterruptHandler
 320:Generated_Source\PSoC4/UART.c ****     ****************************************************************************//**
 321:Generated_Source\PSoC4/UART.c ****     *
 322:Generated_Source\PSoC4/UART.c ****     *  Registers a function to be called by the internal interrupt handler.
 323:Generated_Source\PSoC4/UART.c ****     *  First the function that is registered is called, then the internal interrupt
 324:Generated_Source\PSoC4/UART.c ****     *  handler performs any operation such as software buffer management functions
 325:Generated_Source\PSoC4/UART.c ****     *  before the interrupt returns.  It is the user's responsibility not to break
 326:Generated_Source\PSoC4/UART.c ****     *  the software buffer operations. Only one custom handler is supported, which
 327:Generated_Source\PSoC4/UART.c ****     *  is the function provided by the most recent call.
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccGGxvNV.s 			page 8


 328:Generated_Source\PSoC4/UART.c ****     *  At the initialization time no custom handler is registered.
 329:Generated_Source\PSoC4/UART.c ****     *
 330:Generated_Source\PSoC4/UART.c ****     *  \param func: Pointer to the function to register.
 331:Generated_Source\PSoC4/UART.c ****     *        The value NULL indicates to remove the current custom interrupt
 332:Generated_Source\PSoC4/UART.c ****     *        handler.
 333:Generated_Source\PSoC4/UART.c ****     *
 334:Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
 335:Generated_Source\PSoC4/UART.c ****     void UART_SetCustomInterruptHandler(void (*func)(void))
 336:Generated_Source\PSoC4/UART.c ****     {
 337:Generated_Source\PSoC4/UART.c ****     #if !defined (CY_REMOVE_UART_CUSTOM_INTR_HANDLER)
 338:Generated_Source\PSoC4/UART.c ****         UART_customIntrHandler = func; /* Register interrupt handler */
 339:Generated_Source\PSoC4/UART.c ****     #else
 340:Generated_Source\PSoC4/UART.c ****         if (NULL != func)
 341:Generated_Source\PSoC4/UART.c ****         {
 342:Generated_Source\PSoC4/UART.c ****             /* Suppress compiler warning */
 343:Generated_Source\PSoC4/UART.c ****         }
 344:Generated_Source\PSoC4/UART.c ****     #endif /* !defined (CY_REMOVE_UART_CUSTOM_INTR_HANDLER) */
 345:Generated_Source\PSoC4/UART.c ****     }
 346:Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_IRQ_INTERNAL) */
 347:Generated_Source\PSoC4/UART.c **** 
 348:Generated_Source\PSoC4/UART.c **** 
 349:Generated_Source\PSoC4/UART.c **** /*******************************************************************************
 350:Generated_Source\PSoC4/UART.c **** * Function Name: UART_ScbModeEnableIntr
 351:Generated_Source\PSoC4/UART.c **** ****************************************************************************//**
 352:Generated_Source\PSoC4/UART.c **** *
 353:Generated_Source\PSoC4/UART.c **** *  Enables an interrupt for a specific mode.
 354:Generated_Source\PSoC4/UART.c **** *
 355:Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 356:Generated_Source\PSoC4/UART.c **** static void UART_ScbEnableIntr(void)
 357:Generated_Source\PSoC4/UART.c **** {
 358:Generated_Source\PSoC4/UART.c **** #if (UART_SCB_IRQ_INTERNAL)
 359:Generated_Source\PSoC4/UART.c ****     /* Enable interrupt in NVIC */
 360:Generated_Source\PSoC4/UART.c ****     #if (UART_SCB_MODE_UNCONFIG_CONST_CFG)
 361:Generated_Source\PSoC4/UART.c ****         if (0u != UART_scbEnableIntr)
 362:Generated_Source\PSoC4/UART.c ****         {
 363:Generated_Source\PSoC4/UART.c ****             UART_EnableInt();
 364:Generated_Source\PSoC4/UART.c ****         }
 365:Generated_Source\PSoC4/UART.c **** 
 366:Generated_Source\PSoC4/UART.c ****     #else
 367:Generated_Source\PSoC4/UART.c ****         UART_EnableInt();
 368:Generated_Source\PSoC4/UART.c **** 
 369:Generated_Source\PSoC4/UART.c ****     #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
 370:Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_IRQ_INTERNAL) */
 371:Generated_Source\PSoC4/UART.c **** }
 372:Generated_Source\PSoC4/UART.c **** 
 373:Generated_Source\PSoC4/UART.c **** 
 374:Generated_Source\PSoC4/UART.c **** /*******************************************************************************
 375:Generated_Source\PSoC4/UART.c **** * Function Name: UART_ScbModePostEnable
 376:Generated_Source\PSoC4/UART.c **** ****************************************************************************//**
 377:Generated_Source\PSoC4/UART.c **** *
 378:Generated_Source\PSoC4/UART.c **** *  Calls the PostEnable function for a specific operation mode.
 379:Generated_Source\PSoC4/UART.c **** *
 380:Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 381:Generated_Source\PSoC4/UART.c **** static void UART_ScbModePostEnable(void)
 382:Generated_Source\PSoC4/UART.c **** {
 383:Generated_Source\PSoC4/UART.c **** #if (UART_SCB_MODE_UNCONFIG_CONST_CFG)
 384:Generated_Source\PSoC4/UART.c **** #if (!UART_CY_SCBIP_V1)
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccGGxvNV.s 			page 9


 385:Generated_Source\PSoC4/UART.c ****     if (UART_SCB_MODE_SPI_RUNTM_CFG)
 386:Generated_Source\PSoC4/UART.c ****     {
 387:Generated_Source\PSoC4/UART.c ****         UART_SpiPostEnable();
 388:Generated_Source\PSoC4/UART.c ****     }
 389:Generated_Source\PSoC4/UART.c ****     else if (UART_SCB_MODE_UART_RUNTM_CFG)
 390:Generated_Source\PSoC4/UART.c ****     {
 391:Generated_Source\PSoC4/UART.c ****         UART_UartPostEnable();
 392:Generated_Source\PSoC4/UART.c ****     }
 393:Generated_Source\PSoC4/UART.c ****     else
 394:Generated_Source\PSoC4/UART.c ****     {
 395:Generated_Source\PSoC4/UART.c ****         /* Unknown mode: do nothing */
 396:Generated_Source\PSoC4/UART.c ****     }
 397:Generated_Source\PSoC4/UART.c **** #endif /* (!UART_CY_SCBIP_V1) */
 398:Generated_Source\PSoC4/UART.c **** 
 399:Generated_Source\PSoC4/UART.c **** #elif (UART_SCB_MODE_SPI_CONST_CFG)
 400:Generated_Source\PSoC4/UART.c ****     UART_SpiPostEnable();
 401:Generated_Source\PSoC4/UART.c **** 
 402:Generated_Source\PSoC4/UART.c **** #elif (UART_SCB_MODE_UART_CONST_CFG)
 403:Generated_Source\PSoC4/UART.c ****     UART_UartPostEnable();
  72              		.loc 1 403 0
  73 000e FFF7FEFF 		bl	UART_UartPostEnable
  74              	.LVL1:
  75              	.LBE11:
  76              	.LBE10:
 192:Generated_Source\PSoC4/UART.c **** 
  77              		.loc 1 192 0
  78              		@ sp needed
  79 0012 10BD     		pop	{r4, pc}
  80              	.L4:
  81              		.align	2
  82              	.L3:
  83 0014 00002740 		.word	1076297728
  84              		.cfi_endproc
  85              	.LFE2:
  86              		.size	UART_Enable, .-UART_Enable
  87              		.section	.text.UART_Start,"ax",%progbits
  88              		.align	1
  89              		.global	UART_Start
  90              		.code	16
  91              		.thumb_func
  92              		.type	UART_Start, %function
  93              	UART_Start:
  94              	.LFB3:
 211:Generated_Source\PSoC4/UART.c ****     if (0u == UART_initVar)
  95              		.loc 1 211 0
  96              		.cfi_startproc
  97              		@ args = 0, pretend = 0, frame = 0
  98              		@ frame_needed = 0, uses_anonymous_args = 0
  99 0000 10B5     		push	{r4, lr}
 100              		.cfi_def_cfa_offset 8
 101              		.cfi_offset 4, -8
 102              		.cfi_offset 14, -4
 212:Generated_Source\PSoC4/UART.c ****     {
 103              		.loc 1 212 0
 104 0002 054C     		ldr	r4, .L8
 105 0004 2378     		ldrb	r3, [r4]
 106 0006 002B     		cmp	r3, #0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccGGxvNV.s 			page 10


 107 0008 03D1     		bne	.L6
 108              	.LBB12:
 109              	.LBB13:
 142:Generated_Source\PSoC4/UART.c **** 
 110              		.loc 1 142 0
 111 000a FFF7FEFF 		bl	UART_UartInit
 112              	.LVL2:
 113              	.LBE13:
 114              	.LBE12:
 215:Generated_Source\PSoC4/UART.c ****     }
 115              		.loc 1 215 0
 116 000e 0123     		movs	r3, #1
 117 0010 2370     		strb	r3, [r4]
 118              	.L6:
 218:Generated_Source\PSoC4/UART.c **** }
 119              		.loc 1 218 0
 120 0012 FFF7FEFF 		bl	UART_Enable
 121              	.LVL3:
 219:Generated_Source\PSoC4/UART.c **** 
 122              		.loc 1 219 0
 123              		@ sp needed
 124 0016 10BD     		pop	{r4, pc}
 125              	.L9:
 126              		.align	2
 127              	.L8:
 128 0018 00000000 		.word	.LANCHOR0
 129              		.cfi_endproc
 130              	.LFE3:
 131              		.size	UART_Start, .-UART_Start
 132              		.section	.text.UART_Stop,"ax",%progbits
 133              		.align	1
 134              		.global	UART_Stop
 135              		.code	16
 136              		.thumb_func
 137              		.type	UART_Stop, %function
 138              	UART_Stop:
 139              	.LFB4:
 240:Generated_Source\PSoC4/UART.c **** #if (UART_SCB_IRQ_INTERNAL)
 140              		.loc 1 240 0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144 0000 10B5     		push	{r4, lr}
 145              		.cfi_def_cfa_offset 8
 146              		.cfi_offset 4, -8
 147              		.cfi_offset 14, -4
 148              	.LBB14:
 149              	.LBB15:
 404:Generated_Source\PSoC4/UART.c **** 
 405:Generated_Source\PSoC4/UART.c **** #else
 406:Generated_Source\PSoC4/UART.c ****     /* Unknown mode: do nothing */
 407:Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
 408:Generated_Source\PSoC4/UART.c **** }
 409:Generated_Source\PSoC4/UART.c **** 
 410:Generated_Source\PSoC4/UART.c **** 
 411:Generated_Source\PSoC4/UART.c **** /*******************************************************************************
 412:Generated_Source\PSoC4/UART.c **** * Function Name: UART_ScbModeStop
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccGGxvNV.s 			page 11


 413:Generated_Source\PSoC4/UART.c **** ****************************************************************************//**
 414:Generated_Source\PSoC4/UART.c **** *
 415:Generated_Source\PSoC4/UART.c **** *  Calls the Stop function for a specific operation mode.
 416:Generated_Source\PSoC4/UART.c **** *
 417:Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 418:Generated_Source\PSoC4/UART.c **** static void UART_ScbModeStop(void)
 419:Generated_Source\PSoC4/UART.c **** {
 420:Generated_Source\PSoC4/UART.c **** #if (UART_SCB_MODE_UNCONFIG_CONST_CFG)
 421:Generated_Source\PSoC4/UART.c ****     if (UART_SCB_MODE_I2C_RUNTM_CFG)
 422:Generated_Source\PSoC4/UART.c ****     {
 423:Generated_Source\PSoC4/UART.c ****         UART_I2CStop();
 424:Generated_Source\PSoC4/UART.c ****     }
 425:Generated_Source\PSoC4/UART.c ****     else if (UART_SCB_MODE_EZI2C_RUNTM_CFG)
 426:Generated_Source\PSoC4/UART.c ****     {
 427:Generated_Source\PSoC4/UART.c ****         UART_EzI2CStop();
 428:Generated_Source\PSoC4/UART.c ****     }
 429:Generated_Source\PSoC4/UART.c **** #if (!UART_CY_SCBIP_V1)
 430:Generated_Source\PSoC4/UART.c ****     else if (UART_SCB_MODE_SPI_RUNTM_CFG)
 431:Generated_Source\PSoC4/UART.c ****     {
 432:Generated_Source\PSoC4/UART.c ****         UART_SpiStop();
 433:Generated_Source\PSoC4/UART.c ****     }
 434:Generated_Source\PSoC4/UART.c ****     else if (UART_SCB_MODE_UART_RUNTM_CFG)
 435:Generated_Source\PSoC4/UART.c ****     {
 436:Generated_Source\PSoC4/UART.c ****         UART_UartStop();
 437:Generated_Source\PSoC4/UART.c ****     }
 438:Generated_Source\PSoC4/UART.c **** #endif /* (!UART_CY_SCBIP_V1) */
 439:Generated_Source\PSoC4/UART.c ****     else
 440:Generated_Source\PSoC4/UART.c ****     {
 441:Generated_Source\PSoC4/UART.c ****         /* Unknown mode: do nothing */
 442:Generated_Source\PSoC4/UART.c ****     }
 443:Generated_Source\PSoC4/UART.c **** #elif (UART_SCB_MODE_I2C_CONST_CFG)
 444:Generated_Source\PSoC4/UART.c ****     UART_I2CStop();
 445:Generated_Source\PSoC4/UART.c **** 
 446:Generated_Source\PSoC4/UART.c **** #elif (UART_SCB_MODE_EZI2C_CONST_CFG)
 447:Generated_Source\PSoC4/UART.c ****     UART_EzI2CStop();
 448:Generated_Source\PSoC4/UART.c **** 
 449:Generated_Source\PSoC4/UART.c **** #elif (UART_SCB_MODE_SPI_CONST_CFG)
 450:Generated_Source\PSoC4/UART.c ****     UART_SpiStop();
 451:Generated_Source\PSoC4/UART.c **** 
 452:Generated_Source\PSoC4/UART.c **** #elif (UART_SCB_MODE_UART_CONST_CFG)
 453:Generated_Source\PSoC4/UART.c ****     UART_UartStop();
 150              		.loc 1 453 0
 151 0002 FFF7FEFF 		bl	UART_UartStop
 152              	.LVL4:
 153              	.LBE15:
 154              	.LBE14:
 249:Generated_Source\PSoC4/UART.c **** 
 155              		.loc 1 249 0
 156 0006 044A     		ldr	r2, .L11
 264:Generated_Source\PSoC4/UART.c **** 
 157              		.loc 1 264 0
 158              		@ sp needed
 249:Generated_Source\PSoC4/UART.c **** 
 159              		.loc 1 249 0
 160 0008 1368     		ldr	r3, [r2]
 161 000a 5B00     		lsls	r3, r3, #1
 162 000c 5B08     		lsrs	r3, r3, #1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccGGxvNV.s 			page 12


 163 000e 1360     		str	r3, [r2]
 259:Generated_Source\PSoC4/UART.c **** 
 164              		.loc 1 259 0
 165 0010 0022     		movs	r2, #0
 166 0012 024B     		ldr	r3, .L11+4
 167 0014 1A60     		str	r2, [r3]
 264:Generated_Source\PSoC4/UART.c **** 
 168              		.loc 1 264 0
 169 0016 10BD     		pop	{r4, pc}
 170              	.L12:
 171              		.align	2
 172              	.L11:
 173 0018 00002740 		.word	1076297728
 174 001c 880F2740 		.word	1076301704
 175              		.cfi_endproc
 176              	.LFE4:
 177              		.size	UART_Stop, .-UART_Stop
 178              		.section	.text.UART_SetRxFifoLevel,"ax",%progbits
 179              		.align	1
 180              		.global	UART_SetRxFifoLevel
 181              		.code	16
 182              		.thumb_func
 183              		.type	UART_SetRxFifoLevel, %function
 184              	UART_SetRxFifoLevel:
 185              	.LFB5:
 280:Generated_Source\PSoC4/UART.c ****     uint32 rxFifoCtrl;
 186              		.loc 1 280 0
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 0
 189              		@ frame_needed = 0, uses_anonymous_args = 0
 190              		@ link register save eliminated.
 191              	.LVL5:
 285:Generated_Source\PSoC4/UART.c ****     rxFifoCtrl |= ((uint32) (UART_RX_FIFO_CTRL_TRIGGER_LEVEL_MASK & level));
 192              		.loc 1 285 0
 193 0000 0F22     		movs	r2, #15
 283:Generated_Source\PSoC4/UART.c **** 
 194              		.loc 1 283 0
 195 0002 0349     		ldr	r1, .L14
 286:Generated_Source\PSoC4/UART.c **** 
 196              		.loc 1 286 0
 197 0004 1040     		ands	r0, r2
 198              	.LVL6:
 283:Generated_Source\PSoC4/UART.c **** 
 199              		.loc 1 283 0
 200 0006 0B68     		ldr	r3, [r1]
 201              	.LVL7:
 289:Generated_Source\PSoC4/UART.c **** 
 202              		.loc 1 289 0
 203              		@ sp needed
 285:Generated_Source\PSoC4/UART.c ****     rxFifoCtrl |= ((uint32) (UART_RX_FIFO_CTRL_TRIGGER_LEVEL_MASK & level));
 204              		.loc 1 285 0
 205 0008 9343     		bics	r3, r2
 206              	.LVL8:
 286:Generated_Source\PSoC4/UART.c **** 
 207              		.loc 1 286 0
 208 000a 1843     		orrs	r0, r3
 209              	.LVL9:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccGGxvNV.s 			page 13


 288:Generated_Source\PSoC4/UART.c **** }
 210              		.loc 1 288 0
 211 000c 0860     		str	r0, [r1]
 289:Generated_Source\PSoC4/UART.c **** 
 212              		.loc 1 289 0
 213 000e 7047     		bx	lr
 214              	.L15:
 215              		.align	2
 216              	.L14:
 217 0010 04032740 		.word	1076298500
 218              		.cfi_endproc
 219              	.LFE5:
 220              		.size	UART_SetRxFifoLevel, .-UART_SetRxFifoLevel
 221              		.section	.text.UART_SetTxFifoLevel,"ax",%progbits
 222              		.align	1
 223              		.global	UART_SetTxFifoLevel
 224              		.code	16
 225              		.thumb_func
 226              		.type	UART_SetTxFifoLevel, %function
 227              	UART_SetTxFifoLevel:
 228              	.LFB6:
 305:Generated_Source\PSoC4/UART.c ****     uint32 txFifoCtrl;
 229              		.loc 1 305 0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233              		@ link register save eliminated.
 234              	.LVL10:
 310:Generated_Source\PSoC4/UART.c ****     txFifoCtrl |= ((uint32) (UART_TX_FIFO_CTRL_TRIGGER_LEVEL_MASK & level));
 235              		.loc 1 310 0
 236 0000 0F22     		movs	r2, #15
 308:Generated_Source\PSoC4/UART.c **** 
 237              		.loc 1 308 0
 238 0002 0349     		ldr	r1, .L17
 311:Generated_Source\PSoC4/UART.c **** 
 239              		.loc 1 311 0
 240 0004 1040     		ands	r0, r2
 241              	.LVL11:
 308:Generated_Source\PSoC4/UART.c **** 
 242              		.loc 1 308 0
 243 0006 0B68     		ldr	r3, [r1]
 244              	.LVL12:
 314:Generated_Source\PSoC4/UART.c **** 
 245              		.loc 1 314 0
 246              		@ sp needed
 310:Generated_Source\PSoC4/UART.c ****     txFifoCtrl |= ((uint32) (UART_TX_FIFO_CTRL_TRIGGER_LEVEL_MASK & level));
 247              		.loc 1 310 0
 248 0008 9343     		bics	r3, r2
 249              	.LVL13:
 311:Generated_Source\PSoC4/UART.c **** 
 250              		.loc 1 311 0
 251 000a 1843     		orrs	r0, r3
 252              	.LVL14:
 313:Generated_Source\PSoC4/UART.c **** }
 253              		.loc 1 313 0
 254 000c 0860     		str	r0, [r1]
 314:Generated_Source\PSoC4/UART.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccGGxvNV.s 			page 14


 255              		.loc 1 314 0
 256 000e 7047     		bx	lr
 257              	.L18:
 258              		.align	2
 259              	.L17:
 260 0010 04022740 		.word	1076298244
 261              		.cfi_endproc
 262              	.LFE6:
 263              		.size	UART_SetTxFifoLevel, .-UART_SetTxFifoLevel
 264              		.global	UART_IntrTxMask
 265              		.global	UART_initVar
 266              		.bss
 267              		.align	1
 268              		.set	.LANCHOR0,. + 0
 269              		.type	UART_initVar, %object
 270              		.size	UART_initVar, 1
 271              	UART_initVar:
 272 0000 00       		.space	1
 273 0001 00       		.space	1
 274              		.type	UART_IntrTxMask, %object
 275              		.size	UART_IntrTxMask, 2
 276              	UART_IntrTxMask:
 277 0002 0000     		.space	2
 278              		.text
 279              	.Letext0:
 280              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 281              		.file 3 "Generated_Source\\PSoC4\\UART_SPI_UART_PVT.h"
 282              		.section	.debug_info,"",%progbits
 283              	.Ldebug_info0:
 284 0000 4B020000 		.4byte	0x24b
 285 0004 0400     		.2byte	0x4
 286 0006 00000000 		.4byte	.Ldebug_abbrev0
 287 000a 04       		.byte	0x4
 288 000b 01       		.uleb128 0x1
 289 000c 0C020000 		.4byte	.LASF34
 290 0010 0C       		.byte	0xc
 291 0011 EF000000 		.4byte	.LASF35
 292 0015 40010000 		.4byte	.LASF36
 293 0019 00000000 		.4byte	.Ldebug_ranges0+0
 294 001d 00000000 		.4byte	0
 295 0021 00000000 		.4byte	.Ldebug_line0
 296 0025 02       		.uleb128 0x2
 297 0026 01       		.byte	0x1
 298 0027 06       		.byte	0x6
 299 0028 00020000 		.4byte	.LASF0
 300 002c 02       		.uleb128 0x2
 301 002d 01       		.byte	0x1
 302 002e 08       		.byte	0x8
 303 002f 84000000 		.4byte	.LASF1
 304 0033 02       		.uleb128 0x2
 305 0034 02       		.byte	0x2
 306 0035 05       		.byte	0x5
 307 0036 C3010000 		.4byte	.LASF2
 308 003a 02       		.uleb128 0x2
 309 003b 02       		.byte	0x2
 310 003c 07       		.byte	0x7
 311 003d 52000000 		.4byte	.LASF3
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccGGxvNV.s 			page 15


 312 0041 02       		.uleb128 0x2
 313 0042 04       		.byte	0x4
 314 0043 05       		.byte	0x5
 315 0044 EB010000 		.4byte	.LASF4
 316 0048 02       		.uleb128 0x2
 317 0049 04       		.byte	0x4
 318 004a 07       		.byte	0x7
 319 004b B0000000 		.4byte	.LASF5
 320 004f 02       		.uleb128 0x2
 321 0050 08       		.byte	0x8
 322 0051 05       		.byte	0x5
 323 0052 9C010000 		.4byte	.LASF6
 324 0056 02       		.uleb128 0x2
 325 0057 08       		.byte	0x8
 326 0058 07       		.byte	0x7
 327 0059 72010000 		.4byte	.LASF7
 328 005d 03       		.uleb128 0x3
 329 005e 04       		.byte	0x4
 330 005f 05       		.byte	0x5
 331 0060 696E7400 		.ascii	"int\000"
 332 0064 02       		.uleb128 0x2
 333 0065 04       		.byte	0x4
 334 0066 07       		.byte	0x7
 335 0067 25010000 		.4byte	.LASF8
 336 006b 04       		.uleb128 0x4
 337 006c D0000000 		.4byte	.LASF9
 338 0070 02       		.byte	0x2
 339 0071 E401     		.2byte	0x1e4
 340 0073 2C000000 		.4byte	0x2c
 341 0077 04       		.uleb128 0x4
 342 0078 E8000000 		.4byte	.LASF10
 343 007c 02       		.byte	0x2
 344 007d E501     		.2byte	0x1e5
 345 007f 3A000000 		.4byte	0x3a
 346 0083 04       		.uleb128 0x4
 347 0084 0D010000 		.4byte	.LASF11
 348 0088 02       		.byte	0x2
 349 0089 E601     		.2byte	0x1e6
 350 008b 48000000 		.4byte	0x48
 351 008f 02       		.uleb128 0x2
 352 0090 04       		.byte	0x4
 353 0091 04       		.byte	0x4
 354 0092 72000000 		.4byte	.LASF12
 355 0096 02       		.uleb128 0x2
 356 0097 08       		.byte	0x8
 357 0098 04       		.byte	0x4
 358 0099 E1000000 		.4byte	.LASF13
 359 009d 02       		.uleb128 0x2
 360 009e 01       		.byte	0x1
 361 009f 08       		.byte	0x8
 362 00a0 BE010000 		.4byte	.LASF14
 363 00a4 04       		.uleb128 0x4
 364 00a5 00000000 		.4byte	.LASF15
 365 00a9 02       		.byte	0x2
 366 00aa 9002     		.2byte	0x290
 367 00ac B0000000 		.4byte	0xb0
 368 00b0 05       		.uleb128 0x5
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccGGxvNV.s 			page 16


 369 00b1 83000000 		.4byte	0x83
 370 00b5 02       		.uleb128 0x2
 371 00b6 08       		.byte	0x8
 372 00b7 04       		.byte	0x4
 373 00b8 F4010000 		.4byte	.LASF16
 374 00bc 02       		.uleb128 0x2
 375 00bd 04       		.byte	0x4
 376 00be 07       		.byte	0x7
 377 00bf 93010000 		.4byte	.LASF17
 378 00c3 06       		.uleb128 0x6
 379 00c4 3B000000 		.4byte	.LASF18
 380 00c8 01       		.byte	0x1
 381 00c9 7D01     		.2byte	0x17d
 382 00cb 01       		.byte	0x1
 383 00cc 06       		.uleb128 0x6
 384 00cd CD010000 		.4byte	.LASF19
 385 00d1 01       		.byte	0x1
 386 00d2 6401     		.2byte	0x164
 387 00d4 01       		.byte	0x1
 388 00d5 07       		.uleb128 0x7
 389 00d6 92000000 		.4byte	.LASF37
 390 00da 01       		.byte	0x1
 391 00db 7B       		.byte	0x7b
 392 00dc 01       		.byte	0x1
 393 00dd 06       		.uleb128 0x6
 394 00de 14010000 		.4byte	.LASF20
 395 00e2 01       		.byte	0x1
 396 00e3 A201     		.2byte	0x1a2
 397 00e5 01       		.byte	0x1
 398 00e6 08       		.uleb128 0x8
 399 00e7 D5000000 		.4byte	0xd5
 400 00eb 00000000 		.4byte	.LFB1
 401 00ef 08000000 		.4byte	.LFE1-.LFB1
 402 00f3 01       		.uleb128 0x1
 403 00f4 9C       		.byte	0x9c
 404 00f5 03010000 		.4byte	0x103
 405 00f9 09       		.uleb128 0x9
 406 00fa 06000000 		.4byte	.LVL0
 407 00fe 2D020000 		.4byte	0x22d
 408 0102 00       		.byte	0
 409 0103 0A       		.uleb128 0xa
 410 0104 78000000 		.4byte	.LASF21
 411 0108 01       		.byte	0x1
 412 0109 AB       		.byte	0xab
 413 010a 00000000 		.4byte	.LFB2
 414 010e 18000000 		.4byte	.LFE2-.LFB2
 415 0112 01       		.uleb128 0x1
 416 0113 9C       		.byte	0x9c
 417 0114 32010000 		.4byte	0x132
 418 0118 0B       		.uleb128 0xb
 419 0119 C3000000 		.4byte	0xc3
 420 011d 0E000000 		.4byte	.LBB10
 421 0121 04000000 		.4byte	.LBE10-.LBB10
 422 0125 01       		.byte	0x1
 423 0126 BE       		.byte	0xbe
 424 0127 09       		.uleb128 0x9
 425 0128 12000000 		.4byte	.LVL1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccGGxvNV.s 			page 17


 426 012c 38020000 		.4byte	0x238
 427 0130 00       		.byte	0
 428 0131 00       		.byte	0
 429 0132 0A       		.uleb128 0xa
 430 0133 D6000000 		.4byte	.LASF22
 431 0137 01       		.byte	0x1
 432 0138 D2       		.byte	0xd2
 433 0139 00000000 		.4byte	.LFB3
 434 013d 1C000000 		.4byte	.LFE3-.LFB3
 435 0141 01       		.uleb128 0x1
 436 0142 9C       		.byte	0x9c
 437 0143 6E010000 		.4byte	0x16e
 438 0147 0C       		.uleb128 0xc
 439 0148 D5000000 		.4byte	0xd5
 440 014c 0A000000 		.4byte	.LBB12
 441 0150 04000000 		.4byte	.LBE12-.LBB12
 442 0154 01       		.byte	0x1
 443 0155 D6       		.byte	0xd6
 444 0156 64010000 		.4byte	0x164
 445 015a 09       		.uleb128 0x9
 446 015b 0E000000 		.4byte	.LVL2
 447 015f 2D020000 		.4byte	0x22d
 448 0163 00       		.byte	0
 449 0164 09       		.uleb128 0x9
 450 0165 16000000 		.4byte	.LVL3
 451 0169 03010000 		.4byte	0x103
 452 016d 00       		.byte	0
 453 016e 0A       		.uleb128 0xa
 454 016f 89010000 		.4byte	.LASF23
 455 0173 01       		.byte	0x1
 456 0174 EF       		.byte	0xef
 457 0175 00000000 		.4byte	.LFB4
 458 0179 20000000 		.4byte	.LFE4-.LFB4
 459 017d 01       		.uleb128 0x1
 460 017e 9C       		.byte	0x9c
 461 017f 9D010000 		.4byte	0x19d
 462 0183 0B       		.uleb128 0xb
 463 0184 DD000000 		.4byte	0xdd
 464 0188 02000000 		.4byte	.LBB14
 465 018c 04000000 		.4byte	.LBE14-.LBB14
 466 0190 01       		.byte	0x1
 467 0191 F6       		.byte	0xf6
 468 0192 09       		.uleb128 0x9
 469 0193 06000000 		.4byte	.LVL4
 470 0197 43020000 		.4byte	0x243
 471 019b 00       		.byte	0
 472 019c 00       		.byte	0
 473 019d 0D       		.uleb128 0xd
 474 019e AA010000 		.4byte	.LASF24
 475 01a2 01       		.byte	0x1
 476 01a3 1701     		.2byte	0x117
 477 01a5 00000000 		.4byte	.LFB5
 478 01a9 14000000 		.4byte	.LFE5-.LFB5
 479 01ad 01       		.uleb128 0x1
 480 01ae 9C       		.byte	0x9c
 481 01af D4010000 		.4byte	0x1d4
 482 01b3 0E       		.uleb128 0xe
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccGGxvNV.s 			page 18


 483 01b4 35000000 		.4byte	.LASF26
 484 01b8 01       		.byte	0x1
 485 01b9 1701     		.2byte	0x117
 486 01bb 83000000 		.4byte	0x83
 487 01bf 00000000 		.4byte	.LLST0
 488 01c3 0F       		.uleb128 0xf
 489 01c4 E0010000 		.4byte	.LASF27
 490 01c8 01       		.byte	0x1
 491 01c9 1901     		.2byte	0x119
 492 01cb 83000000 		.4byte	0x83
 493 01cf 21000000 		.4byte	.LLST1
 494 01d3 00       		.byte	0
 495 01d4 0D       		.uleb128 0xd
 496 01d5 21000000 		.4byte	.LASF25
 497 01d9 01       		.byte	0x1
 498 01da 3001     		.2byte	0x130
 499 01dc 00000000 		.4byte	.LFB6
 500 01e0 14000000 		.4byte	.LFE6-.LFB6
 501 01e4 01       		.uleb128 0x1
 502 01e5 9C       		.byte	0x9c
 503 01e6 0B020000 		.4byte	0x20b
 504 01ea 0E       		.uleb128 0xe
 505 01eb 35000000 		.4byte	.LASF26
 506 01ef 01       		.byte	0x1
 507 01f0 3001     		.2byte	0x130
 508 01f2 83000000 		.4byte	0x83
 509 01f6 3F000000 		.4byte	.LLST2
 510 01fa 0F       		.uleb128 0xf
 511 01fb 06000000 		.4byte	.LASF28
 512 01ff 01       		.byte	0x1
 513 0200 3201     		.2byte	0x132
 514 0202 83000000 		.4byte	0x83
 515 0206 60000000 		.4byte	.LLST3
 516 020a 00       		.byte	0
 517 020b 10       		.uleb128 0x10
 518 020c 65000000 		.4byte	.LASF29
 519 0210 01       		.byte	0x1
 520 0211 51       		.byte	0x51
 521 0212 6B000000 		.4byte	0x6b
 522 0216 05       		.uleb128 0x5
 523 0217 03       		.byte	0x3
 524 0218 00000000 		.4byte	UART_initVar
 525 021c 10       		.uleb128 0x10
 526 021d 11000000 		.4byte	.LASF30
 527 0221 01       		.byte	0x1
 528 0222 5A       		.byte	0x5a
 529 0223 77000000 		.4byte	0x77
 530 0227 05       		.uleb128 0x5
 531 0228 03       		.byte	0x3
 532 0229 00000000 		.4byte	UART_IntrTxMask
 533 022d 11       		.uleb128 0x11
 534 022e 32010000 		.4byte	.LASF31
 535 0232 32010000 		.4byte	.LASF31
 536 0236 03       		.byte	0x3
 537 0237 50       		.byte	0x50
 538 0238 11       		.uleb128 0x11
 539 0239 9C000000 		.4byte	.LASF32
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccGGxvNV.s 			page 19


 540 023d 9C000000 		.4byte	.LASF32
 541 0241 03       		.byte	0x3
 542 0242 4C       		.byte	0x4c
 543 0243 11       		.uleb128 0x11
 544 0244 C2000000 		.4byte	.LASF33
 545 0248 C2000000 		.4byte	.LASF33
 546 024c 03       		.byte	0x3
 547 024d 4D       		.byte	0x4d
 548 024e 00       		.byte	0
 549              		.section	.debug_abbrev,"",%progbits
 550              	.Ldebug_abbrev0:
 551 0000 01       		.uleb128 0x1
 552 0001 11       		.uleb128 0x11
 553 0002 01       		.byte	0x1
 554 0003 25       		.uleb128 0x25
 555 0004 0E       		.uleb128 0xe
 556 0005 13       		.uleb128 0x13
 557 0006 0B       		.uleb128 0xb
 558 0007 03       		.uleb128 0x3
 559 0008 0E       		.uleb128 0xe
 560 0009 1B       		.uleb128 0x1b
 561 000a 0E       		.uleb128 0xe
 562 000b 55       		.uleb128 0x55
 563 000c 17       		.uleb128 0x17
 564 000d 11       		.uleb128 0x11
 565 000e 01       		.uleb128 0x1
 566 000f 10       		.uleb128 0x10
 567 0010 17       		.uleb128 0x17
 568 0011 00       		.byte	0
 569 0012 00       		.byte	0
 570 0013 02       		.uleb128 0x2
 571 0014 24       		.uleb128 0x24
 572 0015 00       		.byte	0
 573 0016 0B       		.uleb128 0xb
 574 0017 0B       		.uleb128 0xb
 575 0018 3E       		.uleb128 0x3e
 576 0019 0B       		.uleb128 0xb
 577 001a 03       		.uleb128 0x3
 578 001b 0E       		.uleb128 0xe
 579 001c 00       		.byte	0
 580 001d 00       		.byte	0
 581 001e 03       		.uleb128 0x3
 582 001f 24       		.uleb128 0x24
 583 0020 00       		.byte	0
 584 0021 0B       		.uleb128 0xb
 585 0022 0B       		.uleb128 0xb
 586 0023 3E       		.uleb128 0x3e
 587 0024 0B       		.uleb128 0xb
 588 0025 03       		.uleb128 0x3
 589 0026 08       		.uleb128 0x8
 590 0027 00       		.byte	0
 591 0028 00       		.byte	0
 592 0029 04       		.uleb128 0x4
 593 002a 16       		.uleb128 0x16
 594 002b 00       		.byte	0
 595 002c 03       		.uleb128 0x3
 596 002d 0E       		.uleb128 0xe
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccGGxvNV.s 			page 20


 597 002e 3A       		.uleb128 0x3a
 598 002f 0B       		.uleb128 0xb
 599 0030 3B       		.uleb128 0x3b
 600 0031 05       		.uleb128 0x5
 601 0032 49       		.uleb128 0x49
 602 0033 13       		.uleb128 0x13
 603 0034 00       		.byte	0
 604 0035 00       		.byte	0
 605 0036 05       		.uleb128 0x5
 606 0037 35       		.uleb128 0x35
 607 0038 00       		.byte	0
 608 0039 49       		.uleb128 0x49
 609 003a 13       		.uleb128 0x13
 610 003b 00       		.byte	0
 611 003c 00       		.byte	0
 612 003d 06       		.uleb128 0x6
 613 003e 2E       		.uleb128 0x2e
 614 003f 00       		.byte	0
 615 0040 03       		.uleb128 0x3
 616 0041 0E       		.uleb128 0xe
 617 0042 3A       		.uleb128 0x3a
 618 0043 0B       		.uleb128 0xb
 619 0044 3B       		.uleb128 0x3b
 620 0045 05       		.uleb128 0x5
 621 0046 27       		.uleb128 0x27
 622 0047 19       		.uleb128 0x19
 623 0048 20       		.uleb128 0x20
 624 0049 0B       		.uleb128 0xb
 625 004a 00       		.byte	0
 626 004b 00       		.byte	0
 627 004c 07       		.uleb128 0x7
 628 004d 2E       		.uleb128 0x2e
 629 004e 00       		.byte	0
 630 004f 3F       		.uleb128 0x3f
 631 0050 19       		.uleb128 0x19
 632 0051 03       		.uleb128 0x3
 633 0052 0E       		.uleb128 0xe
 634 0053 3A       		.uleb128 0x3a
 635 0054 0B       		.uleb128 0xb
 636 0055 3B       		.uleb128 0x3b
 637 0056 0B       		.uleb128 0xb
 638 0057 27       		.uleb128 0x27
 639 0058 19       		.uleb128 0x19
 640 0059 20       		.uleb128 0x20
 641 005a 0B       		.uleb128 0xb
 642 005b 00       		.byte	0
 643 005c 00       		.byte	0
 644 005d 08       		.uleb128 0x8
 645 005e 2E       		.uleb128 0x2e
 646 005f 01       		.byte	0x1
 647 0060 31       		.uleb128 0x31
 648 0061 13       		.uleb128 0x13
 649 0062 11       		.uleb128 0x11
 650 0063 01       		.uleb128 0x1
 651 0064 12       		.uleb128 0x12
 652 0065 06       		.uleb128 0x6
 653 0066 40       		.uleb128 0x40
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccGGxvNV.s 			page 21


 654 0067 18       		.uleb128 0x18
 655 0068 9742     		.uleb128 0x2117
 656 006a 19       		.uleb128 0x19
 657 006b 01       		.uleb128 0x1
 658 006c 13       		.uleb128 0x13
 659 006d 00       		.byte	0
 660 006e 00       		.byte	0
 661 006f 09       		.uleb128 0x9
 662 0070 898201   		.uleb128 0x4109
 663 0073 00       		.byte	0
 664 0074 11       		.uleb128 0x11
 665 0075 01       		.uleb128 0x1
 666 0076 31       		.uleb128 0x31
 667 0077 13       		.uleb128 0x13
 668 0078 00       		.byte	0
 669 0079 00       		.byte	0
 670 007a 0A       		.uleb128 0xa
 671 007b 2E       		.uleb128 0x2e
 672 007c 01       		.byte	0x1
 673 007d 3F       		.uleb128 0x3f
 674 007e 19       		.uleb128 0x19
 675 007f 03       		.uleb128 0x3
 676 0080 0E       		.uleb128 0xe
 677 0081 3A       		.uleb128 0x3a
 678 0082 0B       		.uleb128 0xb
 679 0083 3B       		.uleb128 0x3b
 680 0084 0B       		.uleb128 0xb
 681 0085 27       		.uleb128 0x27
 682 0086 19       		.uleb128 0x19
 683 0087 11       		.uleb128 0x11
 684 0088 01       		.uleb128 0x1
 685 0089 12       		.uleb128 0x12
 686 008a 06       		.uleb128 0x6
 687 008b 40       		.uleb128 0x40
 688 008c 18       		.uleb128 0x18
 689 008d 9742     		.uleb128 0x2117
 690 008f 19       		.uleb128 0x19
 691 0090 01       		.uleb128 0x1
 692 0091 13       		.uleb128 0x13
 693 0092 00       		.byte	0
 694 0093 00       		.byte	0
 695 0094 0B       		.uleb128 0xb
 696 0095 1D       		.uleb128 0x1d
 697 0096 01       		.byte	0x1
 698 0097 31       		.uleb128 0x31
 699 0098 13       		.uleb128 0x13
 700 0099 11       		.uleb128 0x11
 701 009a 01       		.uleb128 0x1
 702 009b 12       		.uleb128 0x12
 703 009c 06       		.uleb128 0x6
 704 009d 58       		.uleb128 0x58
 705 009e 0B       		.uleb128 0xb
 706 009f 59       		.uleb128 0x59
 707 00a0 0B       		.uleb128 0xb
 708 00a1 00       		.byte	0
 709 00a2 00       		.byte	0
 710 00a3 0C       		.uleb128 0xc
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccGGxvNV.s 			page 22


 711 00a4 1D       		.uleb128 0x1d
 712 00a5 01       		.byte	0x1
 713 00a6 31       		.uleb128 0x31
 714 00a7 13       		.uleb128 0x13
 715 00a8 11       		.uleb128 0x11
 716 00a9 01       		.uleb128 0x1
 717 00aa 12       		.uleb128 0x12
 718 00ab 06       		.uleb128 0x6
 719 00ac 58       		.uleb128 0x58
 720 00ad 0B       		.uleb128 0xb
 721 00ae 59       		.uleb128 0x59
 722 00af 0B       		.uleb128 0xb
 723 00b0 01       		.uleb128 0x1
 724 00b1 13       		.uleb128 0x13
 725 00b2 00       		.byte	0
 726 00b3 00       		.byte	0
 727 00b4 0D       		.uleb128 0xd
 728 00b5 2E       		.uleb128 0x2e
 729 00b6 01       		.byte	0x1
 730 00b7 3F       		.uleb128 0x3f
 731 00b8 19       		.uleb128 0x19
 732 00b9 03       		.uleb128 0x3
 733 00ba 0E       		.uleb128 0xe
 734 00bb 3A       		.uleb128 0x3a
 735 00bc 0B       		.uleb128 0xb
 736 00bd 3B       		.uleb128 0x3b
 737 00be 05       		.uleb128 0x5
 738 00bf 27       		.uleb128 0x27
 739 00c0 19       		.uleb128 0x19
 740 00c1 11       		.uleb128 0x11
 741 00c2 01       		.uleb128 0x1
 742 00c3 12       		.uleb128 0x12
 743 00c4 06       		.uleb128 0x6
 744 00c5 40       		.uleb128 0x40
 745 00c6 18       		.uleb128 0x18
 746 00c7 9742     		.uleb128 0x2117
 747 00c9 19       		.uleb128 0x19
 748 00ca 01       		.uleb128 0x1
 749 00cb 13       		.uleb128 0x13
 750 00cc 00       		.byte	0
 751 00cd 00       		.byte	0
 752 00ce 0E       		.uleb128 0xe
 753 00cf 05       		.uleb128 0x5
 754 00d0 00       		.byte	0
 755 00d1 03       		.uleb128 0x3
 756 00d2 0E       		.uleb128 0xe
 757 00d3 3A       		.uleb128 0x3a
 758 00d4 0B       		.uleb128 0xb
 759 00d5 3B       		.uleb128 0x3b
 760 00d6 05       		.uleb128 0x5
 761 00d7 49       		.uleb128 0x49
 762 00d8 13       		.uleb128 0x13
 763 00d9 02       		.uleb128 0x2
 764 00da 17       		.uleb128 0x17
 765 00db 00       		.byte	0
 766 00dc 00       		.byte	0
 767 00dd 0F       		.uleb128 0xf
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccGGxvNV.s 			page 23


 768 00de 34       		.uleb128 0x34
 769 00df 00       		.byte	0
 770 00e0 03       		.uleb128 0x3
 771 00e1 0E       		.uleb128 0xe
 772 00e2 3A       		.uleb128 0x3a
 773 00e3 0B       		.uleb128 0xb
 774 00e4 3B       		.uleb128 0x3b
 775 00e5 05       		.uleb128 0x5
 776 00e6 49       		.uleb128 0x49
 777 00e7 13       		.uleb128 0x13
 778 00e8 02       		.uleb128 0x2
 779 00e9 17       		.uleb128 0x17
 780 00ea 00       		.byte	0
 781 00eb 00       		.byte	0
 782 00ec 10       		.uleb128 0x10
 783 00ed 34       		.uleb128 0x34
 784 00ee 00       		.byte	0
 785 00ef 03       		.uleb128 0x3
 786 00f0 0E       		.uleb128 0xe
 787 00f1 3A       		.uleb128 0x3a
 788 00f2 0B       		.uleb128 0xb
 789 00f3 3B       		.uleb128 0x3b
 790 00f4 0B       		.uleb128 0xb
 791 00f5 49       		.uleb128 0x49
 792 00f6 13       		.uleb128 0x13
 793 00f7 3F       		.uleb128 0x3f
 794 00f8 19       		.uleb128 0x19
 795 00f9 02       		.uleb128 0x2
 796 00fa 18       		.uleb128 0x18
 797 00fb 00       		.byte	0
 798 00fc 00       		.byte	0
 799 00fd 11       		.uleb128 0x11
 800 00fe 2E       		.uleb128 0x2e
 801 00ff 00       		.byte	0
 802 0100 3F       		.uleb128 0x3f
 803 0101 19       		.uleb128 0x19
 804 0102 3C       		.uleb128 0x3c
 805 0103 19       		.uleb128 0x19
 806 0104 6E       		.uleb128 0x6e
 807 0105 0E       		.uleb128 0xe
 808 0106 03       		.uleb128 0x3
 809 0107 0E       		.uleb128 0xe
 810 0108 3A       		.uleb128 0x3a
 811 0109 0B       		.uleb128 0xb
 812 010a 3B       		.uleb128 0x3b
 813 010b 0B       		.uleb128 0xb
 814 010c 00       		.byte	0
 815 010d 00       		.byte	0
 816 010e 00       		.byte	0
 817              		.section	.debug_loc,"",%progbits
 818              	.Ldebug_loc0:
 819              	.LLST0:
 820 0000 00000000 		.4byte	.LVL5
 821 0004 06000000 		.4byte	.LVL6
 822 0008 0100     		.2byte	0x1
 823 000a 50       		.byte	0x50
 824 000b 06000000 		.4byte	.LVL6
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccGGxvNV.s 			page 24


 825 000f 14000000 		.4byte	.LFE5
 826 0013 0400     		.2byte	0x4
 827 0015 F3       		.byte	0xf3
 828 0016 01       		.uleb128 0x1
 829 0017 50       		.byte	0x50
 830 0018 9F       		.byte	0x9f
 831 0019 00000000 		.4byte	0
 832 001d 00000000 		.4byte	0
 833              	.LLST1:
 834 0021 08000000 		.4byte	.LVL7
 835 0025 0C000000 		.4byte	.LVL9
 836 0029 0100     		.2byte	0x1
 837 002b 53       		.byte	0x53
 838 002c 0C000000 		.4byte	.LVL9
 839 0030 14000000 		.4byte	.LFE5
 840 0034 0100     		.2byte	0x1
 841 0036 50       		.byte	0x50
 842 0037 00000000 		.4byte	0
 843 003b 00000000 		.4byte	0
 844              	.LLST2:
 845 003f 00000000 		.4byte	.LVL10
 846 0043 06000000 		.4byte	.LVL11
 847 0047 0100     		.2byte	0x1
 848 0049 50       		.byte	0x50
 849 004a 06000000 		.4byte	.LVL11
 850 004e 14000000 		.4byte	.LFE6
 851 0052 0400     		.2byte	0x4
 852 0054 F3       		.byte	0xf3
 853 0055 01       		.uleb128 0x1
 854 0056 50       		.byte	0x50
 855 0057 9F       		.byte	0x9f
 856 0058 00000000 		.4byte	0
 857 005c 00000000 		.4byte	0
 858              	.LLST3:
 859 0060 08000000 		.4byte	.LVL12
 860 0064 0C000000 		.4byte	.LVL14
 861 0068 0100     		.2byte	0x1
 862 006a 53       		.byte	0x53
 863 006b 0C000000 		.4byte	.LVL14
 864 006f 14000000 		.4byte	.LFE6
 865 0073 0100     		.2byte	0x1
 866 0075 50       		.byte	0x50
 867 0076 00000000 		.4byte	0
 868 007a 00000000 		.4byte	0
 869              		.section	.debug_aranges,"",%progbits
 870 0000 44000000 		.4byte	0x44
 871 0004 0200     		.2byte	0x2
 872 0006 00000000 		.4byte	.Ldebug_info0
 873 000a 04       		.byte	0x4
 874 000b 00       		.byte	0
 875 000c 0000     		.2byte	0
 876 000e 0000     		.2byte	0
 877 0010 00000000 		.4byte	.LFB1
 878 0014 08000000 		.4byte	.LFE1-.LFB1
 879 0018 00000000 		.4byte	.LFB2
 880 001c 18000000 		.4byte	.LFE2-.LFB2
 881 0020 00000000 		.4byte	.LFB3
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccGGxvNV.s 			page 25


 882 0024 1C000000 		.4byte	.LFE3-.LFB3
 883 0028 00000000 		.4byte	.LFB4
 884 002c 20000000 		.4byte	.LFE4-.LFB4
 885 0030 00000000 		.4byte	.LFB5
 886 0034 14000000 		.4byte	.LFE5-.LFB5
 887 0038 00000000 		.4byte	.LFB6
 888 003c 14000000 		.4byte	.LFE6-.LFB6
 889 0040 00000000 		.4byte	0
 890 0044 00000000 		.4byte	0
 891              		.section	.debug_ranges,"",%progbits
 892              	.Ldebug_ranges0:
 893 0000 00000000 		.4byte	.LFB1
 894 0004 08000000 		.4byte	.LFE1
 895 0008 00000000 		.4byte	.LFB2
 896 000c 18000000 		.4byte	.LFE2
 897 0010 00000000 		.4byte	.LFB3
 898 0014 1C000000 		.4byte	.LFE3
 899 0018 00000000 		.4byte	.LFB4
 900 001c 20000000 		.4byte	.LFE4
 901 0020 00000000 		.4byte	.LFB5
 902 0024 14000000 		.4byte	.LFE5
 903 0028 00000000 		.4byte	.LFB6
 904 002c 14000000 		.4byte	.LFE6
 905 0030 00000000 		.4byte	0
 906 0034 00000000 		.4byte	0
 907              		.section	.debug_line,"",%progbits
 908              	.Ldebug_line0:
 909 0000 02010000 		.section	.debug_str,"MS",%progbits,1
 909      02005800 
 909      00000201 
 909      FB0E0D00 
 909      01010101 
 910              	.LASF15:
 911 0000 72656733 		.ascii	"reg32\000"
 911      3200
 912              	.LASF28:
 913 0006 74784669 		.ascii	"txFifoCtrl\000"
 913      666F4374 
 913      726C00
 914              	.LASF30:
 915 0011 55415254 		.ascii	"UART_IntrTxMask\000"
 915      5F496E74 
 915      7254784D 
 915      61736B00 
 916              	.LASF25:
 917 0021 55415254 		.ascii	"UART_SetTxFifoLevel\000"
 917      5F536574 
 917      54784669 
 917      666F4C65 
 917      76656C00 
 918              	.LASF26:
 919 0035 6C657665 		.ascii	"level\000"
 919      6C00
 920              	.LASF18:
 921 003b 55415254 		.ascii	"UART_ScbModePostEnable\000"
 921      5F536362 
 921      4D6F6465 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccGGxvNV.s 			page 26


 921      506F7374 
 921      456E6162 
 922              	.LASF3:
 923 0052 73686F72 		.ascii	"short unsigned int\000"
 923      7420756E 
 923      7369676E 
 923      65642069 
 923      6E7400
 924              	.LASF29:
 925 0065 55415254 		.ascii	"UART_initVar\000"
 925      5F696E69 
 925      74566172 
 925      00
 926              	.LASF12:
 927 0072 666C6F61 		.ascii	"float\000"
 927      7400
 928              	.LASF21:
 929 0078 55415254 		.ascii	"UART_Enable\000"
 929      5F456E61 
 929      626C6500 
 930              	.LASF1:
 931 0084 756E7369 		.ascii	"unsigned char\000"
 931      676E6564 
 931      20636861 
 931      7200
 932              	.LASF37:
 933 0092 55415254 		.ascii	"UART_Init\000"
 933      5F496E69 
 933      7400
 934              	.LASF32:
 935 009c 55415254 		.ascii	"UART_UartPostEnable\000"
 935      5F556172 
 935      74506F73 
 935      74456E61 
 935      626C6500 
 936              	.LASF5:
 937 00b0 6C6F6E67 		.ascii	"long unsigned int\000"
 937      20756E73 
 937      69676E65 
 937      6420696E 
 937      7400
 938              	.LASF33:
 939 00c2 55415254 		.ascii	"UART_UartStop\000"
 939      5F556172 
 939      7453746F 
 939      7000
 940              	.LASF9:
 941 00d0 75696E74 		.ascii	"uint8\000"
 941      3800
 942              	.LASF22:
 943 00d6 55415254 		.ascii	"UART_Start\000"
 943      5F537461 
 943      727400
 944              	.LASF13:
 945 00e1 646F7562 		.ascii	"double\000"
 945      6C6500
 946              	.LASF10:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccGGxvNV.s 			page 27


 947 00e8 75696E74 		.ascii	"uint16\000"
 947      313600
 948              	.LASF35:
 949 00ef 47656E65 		.ascii	"Generated_Source\\PSoC4\\UART.c\000"
 949      72617465 
 949      645F536F 
 949      75726365 
 949      5C50536F 
 950              	.LASF11:
 951 010d 75696E74 		.ascii	"uint32\000"
 951      333200
 952              	.LASF20:
 953 0114 55415254 		.ascii	"UART_ScbModeStop\000"
 953      5F536362 
 953      4D6F6465 
 953      53746F70 
 953      00
 954              	.LASF8:
 955 0125 756E7369 		.ascii	"unsigned int\000"
 955      676E6564 
 955      20696E74 
 955      00
 956              	.LASF31:
 957 0132 55415254 		.ascii	"UART_UartInit\000"
 957      5F556172 
 957      74496E69 
 957      7400
 958              	.LASF36:
 959 0140 443A5C5F 		.ascii	"D:\\_Project\\_MD\\cypress_button\\EZIIC_button.cyd"
 959      50726F6A 
 959      6563745C 
 959      5F4D445C 
 959      63797072 
 960 016f 736E00   		.ascii	"sn\000"
 961              	.LASF7:
 962 0172 6C6F6E67 		.ascii	"long long unsigned int\000"
 962      206C6F6E 
 962      6720756E 
 962      7369676E 
 962      65642069 
 963              	.LASF23:
 964 0189 55415254 		.ascii	"UART_Stop\000"
 964      5F53746F 
 964      7000
 965              	.LASF17:
 966 0193 73697A65 		.ascii	"sizetype\000"
 966      74797065 
 966      00
 967              	.LASF6:
 968 019c 6C6F6E67 		.ascii	"long long int\000"
 968      206C6F6E 
 968      6720696E 
 968      7400
 969              	.LASF24:
 970 01aa 55415254 		.ascii	"UART_SetRxFifoLevel\000"
 970      5F536574 
 970      52784669 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccGGxvNV.s 			page 28


 970      666F4C65 
 970      76656C00 
 971              	.LASF14:
 972 01be 63686172 		.ascii	"char\000"
 972      00
 973              	.LASF2:
 974 01c3 73686F72 		.ascii	"short int\000"
 974      7420696E 
 974      7400
 975              	.LASF19:
 976 01cd 55415254 		.ascii	"UART_ScbEnableIntr\000"
 976      5F536362 
 976      456E6162 
 976      6C65496E 
 976      747200
 977              	.LASF27:
 978 01e0 72784669 		.ascii	"rxFifoCtrl\000"
 978      666F4374 
 978      726C00
 979              	.LASF4:
 980 01eb 6C6F6E67 		.ascii	"long int\000"
 980      20696E74 
 980      00
 981              	.LASF16:
 982 01f4 6C6F6E67 		.ascii	"long double\000"
 982      20646F75 
 982      626C6500 
 983              	.LASF0:
 984 0200 7369676E 		.ascii	"signed char\000"
 984      65642063 
 984      68617200 
 985              	.LASF34:
 986 020c 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 986      43313120 
 986      352E342E 
 986      31203230 
 986      31363036 
 987 023f 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 987      20726576 
 987      6973696F 
 987      6E203233 
 987      37373135 
 988 0272 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 988      66756E63 
 988      74696F6E 
 988      2D736563 
 988      74696F6E 
 989              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran

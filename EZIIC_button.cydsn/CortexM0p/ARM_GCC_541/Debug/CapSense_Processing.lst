ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_Processing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_DpInitialize,"ax",%progbits
  20              		.align	2
  21              		.global	CapSense_DpInitialize
  22              		.code	16
  23              		.thumb_func
  24              		.type	CapSense_DpInitialize, %function
  25              	CapSense_DpInitialize:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC4\\CapSense_Processing.c"
   1:Generated_Source\PSoC4/CapSense_Processing.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CapSense_Processing.c **** * \file CapSense_Processing.c
   3:Generated_Source\PSoC4/CapSense_Processing.c **** * \version 7.0
   4:Generated_Source\PSoC4/CapSense_Processing.c **** *
   5:Generated_Source\PSoC4/CapSense_Processing.c **** * \brief
   6:Generated_Source\PSoC4/CapSense_Processing.c **** *   This file provides the source code for the Data Processing module APIs
   7:Generated_Source\PSoC4/CapSense_Processing.c **** *   of the Component. The Data Processing module is responsible for the
   8:Generated_Source\PSoC4/CapSense_Processing.c **** *   low level raw counts processing provided by the sensing module, maintaining
   9:Generated_Source\PSoC4/CapSense_Processing.c **** *   baseline and difference values and performing high-level widget processing
  10:Generated_Source\PSoC4/CapSense_Processing.c **** *   like updating button status or calculating slider position.
  11:Generated_Source\PSoC4/CapSense_Processing.c **** *
  12:Generated_Source\PSoC4/CapSense_Processing.c **** * \see CapSense v7.0 Datasheet
  13:Generated_Source\PSoC4/CapSense_Processing.c **** *
  14:Generated_Source\PSoC4/CapSense_Processing.c **** *//*****************************************************************************
  15:Generated_Source\PSoC4/CapSense_Processing.c **** * Copyright (2016-2019), Cypress Semiconductor Corporation.
  16:Generated_Source\PSoC4/CapSense_Processing.c **** ********************************************************************************
  17:Generated_Source\PSoC4/CapSense_Processing.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  18:Generated_Source\PSoC4/CapSense_Processing.c **** * protected by and subject to worldwide patent protection (United States and
  19:Generated_Source\PSoC4/CapSense_Processing.c **** * foreign), United States copyright laws and international treaty provisions.
  20:Generated_Source\PSoC4/CapSense_Processing.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  21:Generated_Source\PSoC4/CapSense_Processing.c **** * license to copy, use, modify, create derivative works of, and compile the
  22:Generated_Source\PSoC4/CapSense_Processing.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  23:Generated_Source\PSoC4/CapSense_Processing.c **** * custom software in support of licensee product to be used only in conjunction
  24:Generated_Source\PSoC4/CapSense_Processing.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  25:Generated_Source\PSoC4/CapSense_Processing.c **** * Any reproduction, modification, translation, compilation, or representation of
  26:Generated_Source\PSoC4/CapSense_Processing.c **** * this software except as specified above is prohibited without the express
  27:Generated_Source\PSoC4/CapSense_Processing.c **** * written permission of Cypress.
  28:Generated_Source\PSoC4/CapSense_Processing.c **** *
  29:Generated_Source\PSoC4/CapSense_Processing.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  30:Generated_Source\PSoC4/CapSense_Processing.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 2


  31:Generated_Source\PSoC4/CapSense_Processing.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  32:Generated_Source\PSoC4/CapSense_Processing.c **** * Cypress reserves the right to make changes without further notice to the
  33:Generated_Source\PSoC4/CapSense_Processing.c **** * materials described herein. Cypress does not assume any liability arising out
  34:Generated_Source\PSoC4/CapSense_Processing.c **** * of the application or use of any product or circuit described herein. Cypress
  35:Generated_Source\PSoC4/CapSense_Processing.c **** * does not authorize its products for use as critical components in life-support
  36:Generated_Source\PSoC4/CapSense_Processing.c **** * systems where a malfunction or failure may reasonably be expected to result in
  37:Generated_Source\PSoC4/CapSense_Processing.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  38:Generated_Source\PSoC4/CapSense_Processing.c **** * support systems application implies that the manufacturer assumes all risk of
  39:Generated_Source\PSoC4/CapSense_Processing.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  40:Generated_Source\PSoC4/CapSense_Processing.c **** * limited by and subject to the applicable Cypress software license agreement.
  41:Generated_Source\PSoC4/CapSense_Processing.c **** *******************************************************************************/
  42:Generated_Source\PSoC4/CapSense_Processing.c **** 
  43:Generated_Source\PSoC4/CapSense_Processing.c **** #include "CyLib.h"
  44:Generated_Source\PSoC4/CapSense_Processing.c **** #include "cytypes.h"
  45:Generated_Source\PSoC4/CapSense_Processing.c **** #include "CapSense_Configuration.h"
  46:Generated_Source\PSoC4/CapSense_Processing.c **** #include "CapSense_Processing.h"
  47:Generated_Source\PSoC4/CapSense_Processing.c **** #include "CapSense_Filter.h"
  48:Generated_Source\PSoC4/CapSense_Processing.c **** 
  49:Generated_Source\PSoC4/CapSense_Processing.c **** #if (0u != CapSense_CENTROID_EN)
  50:Generated_Source\PSoC4/CapSense_Processing.c ****     #include "CapSense_Centroid_LL.h"
  51:Generated_Source\PSoC4/CapSense_Processing.c **** #endif /* (0 != CapSense_CENTROID_EN) */
  52:Generated_Source\PSoC4/CapSense_Processing.c **** 
  53:Generated_Source\PSoC4/CapSense_Processing.c **** #if (0 != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
  54:Generated_Source\PSoC4/CapSense_Processing.c ****     #include "CapSense_SmartSense_LL.h"
  55:Generated_Source\PSoC4/CapSense_Processing.c **** #endif /* (0 != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
  56:Generated_Source\PSoC4/CapSense_Processing.c **** 
  57:Generated_Source\PSoC4/CapSense_Processing.c **** #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
  58:Generated_Source\PSoC4/CapSense_Processing.c ****     #include "CapSense_SelfTest.h"
  59:Generated_Source\PSoC4/CapSense_Processing.c **** #endif
  60:Generated_Source\PSoC4/CapSense_Processing.c **** 
  61:Generated_Source\PSoC4/CapSense_Processing.c **** #if (CapSense_ENABLE == CapSense_CENTROID_5X5_CSD_EN)
  62:Generated_Source\PSoC4/CapSense_Processing.c ****     #include "CapSense_AdvancedCentroid_LL.h"
  63:Generated_Source\PSoC4/CapSense_Processing.c **** #endif
  64:Generated_Source\PSoC4/CapSense_Processing.c **** 
  65:Generated_Source\PSoC4/CapSense_Processing.c **** #if (CapSense_ENABLE == CapSense_POS_ADAPTIVE_IIR_FILTER_EN)
  66:Generated_Source\PSoC4/CapSense_Processing.c ****     #include "CapSense_AdaptiveFilter_LL.h"
  67:Generated_Source\PSoC4/CapSense_Processing.c **** #endif
  68:Generated_Source\PSoC4/CapSense_Processing.c **** 
  69:Generated_Source\PSoC4/CapSense_Processing.c **** #if(CapSense_ENABLE == CapSense_BALLISTIC_MULTIPLIER_EN)
  70:Generated_Source\PSoC4/CapSense_Processing.c ****     #include "CapSense_Gesture.h"
  71:Generated_Source\PSoC4/CapSense_Processing.c **** #endif
  72:Generated_Source\PSoC4/CapSense_Processing.c **** 
  73:Generated_Source\PSoC4/CapSense_Processing.c **** /**************************************************************************************************
  74:Generated_Source\PSoC4/CapSense_Processing.c **** * Local definition
  75:Generated_Source\PSoC4/CapSense_Processing.c **** ***************************************************************************************************
  76:Generated_Source\PSoC4/CapSense_Processing.c **** 
  77:Generated_Source\PSoC4/CapSense_Processing.c **** /* UINT32 constant with all odd bits set. It is used by the processing function of the Proximity wi
  78:Generated_Source\PSoC4/CapSense_Processing.c **** *  determine type of the status bit: odd bits report proximity status; even bits report touch statu
  79:Generated_Source\PSoC4/CapSense_Processing.c **** */
  80:Generated_Source\PSoC4/CapSense_Processing.c **** #define UINT32_ODD_BITS_CONST       (0x55555555u)
  81:Generated_Source\PSoC4/CapSense_Processing.c **** 
  82:Generated_Source\PSoC4/CapSense_Processing.c **** /* Default value for the Off Debounce counter when the Off Debounce is disabled */
  83:Generated_Source\PSoC4/CapSense_Processing.c **** #define DEFAULT_OFF_DEBOUNCE_VALUE  (1u)
  84:Generated_Source\PSoC4/CapSense_Processing.c **** #define PERCENTAGE_100              (100u)
  85:Generated_Source\PSoC4/CapSense_Processing.c **** #define TEMP_BUFFER_MSB_SHIFT       (16)
  86:Generated_Source\PSoC4/CapSense_Processing.c **** 
  87:Generated_Source\PSoC4/CapSense_Processing.c **** /**************************************************************************************************
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 3


  88:Generated_Source\PSoC4/CapSense_Processing.c **** * Local variables
  89:Generated_Source\PSoC4/CapSense_Processing.c **** ***************************************************************************************************
  90:Generated_Source\PSoC4/CapSense_Processing.c **** #if (0u != CapSense_CSX_MULTIPHASE_TX_EN)
  91:Generated_Source\PSoC4/CapSense_Processing.c ****     static uint16 deconvRowData[CapSense_CSX_MAX_TX_PHASE_LENGTH];
  92:Generated_Source\PSoC4/CapSense_Processing.c **** #endif
  93:Generated_Source\PSoC4/CapSense_Processing.c **** 
  94:Generated_Source\PSoC4/CapSense_Processing.c **** 
  95:Generated_Source\PSoC4/CapSense_Processing.c **** /**************************************************************************************************
  96:Generated_Source\PSoC4/CapSense_Processing.c **** * Static Function Prototypes
  97:Generated_Source\PSoC4/CapSense_Processing.c **** ***************************************************************************************************
  98:Generated_Source\PSoC4/CapSense_Processing.c **** /**
  99:Generated_Source\PSoC4/CapSense_Processing.c **** * \cond SECTION_C_INTERNAL
 100:Generated_Source\PSoC4/CapSense_Processing.c **** * \addtogroup group_c_internal
 101:Generated_Source\PSoC4/CapSense_Processing.c **** * \{
 102:Generated_Source\PSoC4/CapSense_Processing.c **** */
 103:Generated_Source\PSoC4/CapSense_Processing.c **** #if (0u != CapSense_TOTAL_LINEAR_SLIDERS)
 104:Generated_Source\PSoC4/CapSense_Processing.c ****     static CY_INLINE void DpUpdateLinSlider(
 105:Generated_Source\PSoC4/CapSense_Processing.c ****                         const uint16 newPos[], uint32 numTouches,
 106:Generated_Source\PSoC4/CapSense_Processing.c ****                         CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt,
 107:Generated_Source\PSoC4/CapSense_Processing.c ****                         CapSense_RAM_WD_SLIDER_STRUCT *ptrRamWdgt);
 108:Generated_Source\PSoC4/CapSense_Processing.c **** #endif /* #if (0u != CapSense_TOTAL_LINEAR_SLIDERS) */
 109:Generated_Source\PSoC4/CapSense_Processing.c **** 
 110:Generated_Source\PSoC4/CapSense_Processing.c **** #if (0u != CapSense_TOTAL_RADIAL_SLIDERS)
 111:Generated_Source\PSoC4/CapSense_Processing.c ****     static CY_INLINE void DpUpdateRadSlider(
 112:Generated_Source\PSoC4/CapSense_Processing.c ****                         const uint16 newPos[], uint32 numTouches,
 113:Generated_Source\PSoC4/CapSense_Processing.c ****                         CapSense_FLASH_WD_STRUCT const * ptrFlashWdgt,
 114:Generated_Source\PSoC4/CapSense_Processing.c ****                         CapSense_RAM_WD_SLIDER_STRUCT *ptrRamWdgt);
 115:Generated_Source\PSoC4/CapSense_Processing.c **** #endif /* #if (0u != CapSense_TOTAL_RADIAL_SLIDERS) */
 116:Generated_Source\PSoC4/CapSense_Processing.c **** 
 117:Generated_Source\PSoC4/CapSense_Processing.c **** #if (0u != CapSense_CSD_TOUCHPAD_WIDGET_EN)
 118:Generated_Source\PSoC4/CapSense_Processing.c ****     static CY_INLINE void CapSense_DpInitCsdTouchpad(CapSense_FLASH_WD_STRUCT const * ptrFlashWdgt)
 119:Generated_Source\PSoC4/CapSense_Processing.c **** #endif /* #if (0u != CapSense_CSD_TOUCHPAD_WIDGET_EN) */
 120:Generated_Source\PSoC4/CapSense_Processing.c **** 
 121:Generated_Source\PSoC4/CapSense_Processing.c **** #if (0u != CapSense_CSX_TOUCHPAD_WIDGET_EN)
 122:Generated_Source\PSoC4/CapSense_Processing.c ****     static CY_INLINE void CapSense_DpInitCsxTouchpad(CapSense_FLASH_WD_STRUCT const * ptrFlashWdgt)
 123:Generated_Source\PSoC4/CapSense_Processing.c **** #endif /* #if (0u != CapSense_CSX_TOUCHPAD_WIDGET_EN) */
 124:Generated_Source\PSoC4/CapSense_Processing.c **** 
 125:Generated_Source\PSoC4/CapSense_Processing.c **** #if (0u != CapSense_SLIDER_WIDGET_EN)
 126:Generated_Source\PSoC4/CapSense_Processing.c ****     static CY_INLINE void CapSense_DpInitSlider(CapSense_FLASH_WD_STRUCT const * ptrFlashWdgt);
 127:Generated_Source\PSoC4/CapSense_Processing.c **** #endif /* #if (0u != CapSense_SLIDER_WIDGET_EN) */
 128:Generated_Source\PSoC4/CapSense_Processing.c **** 
 129:Generated_Source\PSoC4/CapSense_Processing.c **** #if (0u != CapSense_CSD_MATRIX_WIDGET_EN)
 130:Generated_Source\PSoC4/CapSense_Processing.c ****     static CY_INLINE void CapSense_DpInitCsdMatrix(CapSense_FLASH_WD_STRUCT const * ptrFlashWdgt);
 131:Generated_Source\PSoC4/CapSense_Processing.c **** #endif /* #if (0u != CapSense_CSD_MATRIX_WIDGET_EN) */
 132:Generated_Source\PSoC4/CapSense_Processing.c **** 
 133:Generated_Source\PSoC4/CapSense_Processing.c **** /** \}
 134:Generated_Source\PSoC4/CapSense_Processing.c **** * \endcond */
 135:Generated_Source\PSoC4/CapSense_Processing.c **** 
 136:Generated_Source\PSoC4/CapSense_Processing.c **** #if (0u != CapSense_CSD_TOUCHPAD_WIDGET_EN)
 137:Generated_Source\PSoC4/CapSense_Processing.c **** /*******************************************************************************
 138:Generated_Source\PSoC4/CapSense_Processing.c **** * Function Name: CapSense_DpInitCsdTouchpad
 139:Generated_Source\PSoC4/CapSense_Processing.c **** ****************************************************************************//**
 140:Generated_Source\PSoC4/CapSense_Processing.c **** *
 141:Generated_Source\PSoC4/CapSense_Processing.c **** * \brief
 142:Generated_Source\PSoC4/CapSense_Processing.c **** *  Performs initialization of the CSD touchpad widget.
 143:Generated_Source\PSoC4/CapSense_Processing.c **** *   - Resets the position data to NONE
 144:Generated_Source\PSoC4/CapSense_Processing.c **** *   - Initializes the position filter history if enabled.
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 4


 145:Generated_Source\PSoC4/CapSense_Processing.c **** *
 146:Generated_Source\PSoC4/CapSense_Processing.c **** * \details
 147:Generated_Source\PSoC4/CapSense_Processing.c **** *  The position data is always reset to the CapSense_TOUCHPAD_POS_NONE value.
 148:Generated_Source\PSoC4/CapSense_Processing.c **** *  The same happens to the position filter history data if enabled.
 149:Generated_Source\PSoC4/CapSense_Processing.c **** *
 150:Generated_Source\PSoC4/CapSense_Processing.c **** *******************************************************************************/
 151:Generated_Source\PSoC4/CapSense_Processing.c **** static CY_INLINE void CapSense_DpInitCsdTouchpad(CapSense_FLASH_WD_STRUCT const * ptrFlashWdgt)
 152:Generated_Source\PSoC4/CapSense_Processing.c **** {
 153:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (CapSense_ENABLE == CapSense_CENTROID_5X5_CSD_EN)
 154:Generated_Source\PSoC4/CapSense_Processing.c ****         uint32 touchIndex;
 155:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif
 156:Generated_Source\PSoC4/CapSense_Processing.c **** 
 157:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_RAM_WD_CSD_TOUCHPAD_STRUCT *ptrWdTouchpad;
 158:Generated_Source\PSoC4/CapSense_Processing.c **** 
 159:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_POSITION_FILTER_EN)
 160:Generated_Source\PSoC4/CapSense_Processing.c ****         CapSense_TOUCHPAD_POS_HISTORY_STRUCT *ptrHistory;
 161:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif  /* #if (0u != CapSense_POSITION_FILTER_EN) */
 162:Generated_Source\PSoC4/CapSense_Processing.c **** 
 163:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN)
 164:Generated_Source\PSoC4/CapSense_Processing.c ****         ADAPTIVE_FILTER_CONTEXT_STRUCT adpContext;
 165:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN) */
 166:Generated_Source\PSoC4/CapSense_Processing.c **** 
 167:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrWdTouchpad = ptrFlashWdgt->ptr2WdgtRam;
 168:Generated_Source\PSoC4/CapSense_Processing.c **** 
 169:Generated_Source\PSoC4/CapSense_Processing.c ****     /* Reset position data */
 170:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (CapSense_ENABLE == CapSense_CENTROID_5X5_CSD_EN)
 171:Generated_Source\PSoC4/CapSense_Processing.c ****         #if (CapSense_ENABLE == CapSense_CENTROID_3X3_CSD_EN)
 172:Generated_Source\PSoC4/CapSense_Processing.c ****             if (0u != (ptrFlashWdgt->staticConfig & CapSense_CENTROID_5X5_MASK))
 173:Generated_Source\PSoC4/CapSense_Processing.c ****             {
 174:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif
 175:Generated_Source\PSoC4/CapSense_Processing.c **** 
 176:Generated_Source\PSoC4/CapSense_Processing.c ****         ptrWdTouchpad->position.touchNum = 0u;
 177:Generated_Source\PSoC4/CapSense_Processing.c **** 
 178:Generated_Source\PSoC4/CapSense_Processing.c ****         #if (0u != CapSense_POSITION_FILTER_EN)
 179:Generated_Source\PSoC4/CapSense_Processing.c ****             ptrHistory = ptrFlashWdgt->ptr2PosHistory;
 180:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* (0u != CapSense_POSITION_FILTER_EN) */
 181:Generated_Source\PSoC4/CapSense_Processing.c **** 
 182:Generated_Source\PSoC4/CapSense_Processing.c ****         for (touchIndex = 0u; touchIndex < ADVANCED_CENTROID_MAX_TOUCHES; touchIndex++)
 183:Generated_Source\PSoC4/CapSense_Processing.c ****         {
 184:Generated_Source\PSoC4/CapSense_Processing.c ****             ptrWdTouchpad->position.pos[touchIndex].x = ADVANCED_CENTROID_POSITION_NONE;
 185:Generated_Source\PSoC4/CapSense_Processing.c ****             ptrWdTouchpad->position.pos[touchIndex].y = ADVANCED_CENTROID_POSITION_NONE;
 186:Generated_Source\PSoC4/CapSense_Processing.c ****             ptrWdTouchpad->position.pos[touchIndex].zX = ADVANCED_CENTROID_POSITION_NONE;
 187:Generated_Source\PSoC4/CapSense_Processing.c ****             ptrWdTouchpad->position.pos[touchIndex].zY = ADVANCED_CENTROID_POSITION_NONE;
 188:Generated_Source\PSoC4/CapSense_Processing.c **** 
 189:Generated_Source\PSoC4/CapSense_Processing.c ****             /* Clear position filter history data if available */
 190:Generated_Source\PSoC4/CapSense_Processing.c ****             #if (0u != CapSense_POSITION_FILTER_EN)
 191:Generated_Source\PSoC4/CapSense_Processing.c ****                 if (NULL != ptrHistory)
 192:Generated_Source\PSoC4/CapSense_Processing.c ****                 {
 193:Generated_Source\PSoC4/CapSense_Processing.c ****                     CapSense_InitPosFiltersDd(&ptrHistory[touchIndex], CapSense_TOUCHPAD_POS_NONE, 
 194:Generated_Source\PSoC4/CapSense_Processing.c ****                     #if (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN)
 195:Generated_Source\PSoC4/CapSense_Processing.c ****                         AdaptiveFilter_Initialize(&ptrWdTouchpad->aiirConfig, &adpContext);
 196:Generated_Source\PSoC4/CapSense_Processing.c ****                         ptrHistory[touchIndex].xPos.posAIIRCoeff = adpContext.coefficient;
 197:Generated_Source\PSoC4/CapSense_Processing.c ****                         ptrHistory[touchIndex].yPos.posAIIRCoeff = adpContext.coefficient;
 198:Generated_Source\PSoC4/CapSense_Processing.c ****                     #endif /* (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN) */
 199:Generated_Source\PSoC4/CapSense_Processing.c ****                 }
 200:Generated_Source\PSoC4/CapSense_Processing.c ****             #endif /* (0u != CapSense_POSITION_FILTER_EN) */
 201:Generated_Source\PSoC4/CapSense_Processing.c ****         }
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 5


 202:Generated_Source\PSoC4/CapSense_Processing.c **** 
 203:Generated_Source\PSoC4/CapSense_Processing.c ****         #if (CapSense_ENABLE == CapSense_CENTROID_3X3_CSD_EN)
 204:Generated_Source\PSoC4/CapSense_Processing.c ****             }
 205:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif
 206:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif
 207:Generated_Source\PSoC4/CapSense_Processing.c **** 
 208:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (CapSense_ENABLE == CapSense_CENTROID_3X3_CSD_EN)
 209:Generated_Source\PSoC4/CapSense_Processing.c ****         if (0u != (ptrFlashWdgt->staticConfig & CapSense_CENTROID_3X3_MASK))
 210:Generated_Source\PSoC4/CapSense_Processing.c ****         {
 211:Generated_Source\PSoC4/CapSense_Processing.c ****             ptrWdTouchpad->posX = CapSense_TOUCHPAD_POS_NONE;
 212:Generated_Source\PSoC4/CapSense_Processing.c ****             ptrWdTouchpad->posY = CapSense_TOUCHPAD_POS_NONE;
 213:Generated_Source\PSoC4/CapSense_Processing.c **** 
 214:Generated_Source\PSoC4/CapSense_Processing.c ****             /* Clear position filter history data if available */
 215:Generated_Source\PSoC4/CapSense_Processing.c ****             #if (0u != CapSense_POSITION_FILTER_EN)
 216:Generated_Source\PSoC4/CapSense_Processing.c ****                 ptrHistory = ptrFlashWdgt->ptr2PosHistory;
 217:Generated_Source\PSoC4/CapSense_Processing.c ****                 CapSense_InitPosFiltersDd(ptrHistory, CapSense_TOUCHPAD_POS_NONE, CapSense_TOUCHPAD
 218:Generated_Source\PSoC4/CapSense_Processing.c **** 
 219:Generated_Source\PSoC4/CapSense_Processing.c ****                 #if (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN)
 220:Generated_Source\PSoC4/CapSense_Processing.c ****                     if (NULL != ptrHistory)
 221:Generated_Source\PSoC4/CapSense_Processing.c ****                     {
 222:Generated_Source\PSoC4/CapSense_Processing.c ****                         AdaptiveFilter_Initialize(&ptrWdTouchpad->aiirConfig, &adpContext);
 223:Generated_Source\PSoC4/CapSense_Processing.c ****                         ptrHistory->xPos.posAIIRCoeff = adpContext.coefficient;
 224:Generated_Source\PSoC4/CapSense_Processing.c ****                         ptrHistory->yPos.posAIIRCoeff = adpContext.coefficient;
 225:Generated_Source\PSoC4/CapSense_Processing.c ****                     }
 226:Generated_Source\PSoC4/CapSense_Processing.c ****                 #endif /* (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN) */
 227:Generated_Source\PSoC4/CapSense_Processing.c ****             #endif /* (0u != CapSense_POSITION_FILTER_EN) */
 228:Generated_Source\PSoC4/CapSense_Processing.c ****         }
 229:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif
 230:Generated_Source\PSoC4/CapSense_Processing.c **** }
 231:Generated_Source\PSoC4/CapSense_Processing.c **** #endif /* #if (0u != CapSense_CSD_TOUCHPAD_WIDGET_EN) */
 232:Generated_Source\PSoC4/CapSense_Processing.c **** 
 233:Generated_Source\PSoC4/CapSense_Processing.c **** #if (0u != CapSense_CSX_TOUCHPAD_WIDGET_EN)
 234:Generated_Source\PSoC4/CapSense_Processing.c **** /*******************************************************************************
 235:Generated_Source\PSoC4/CapSense_Processing.c **** * Function Name: CapSense_DpInitCsxTouchpad
 236:Generated_Source\PSoC4/CapSense_Processing.c **** ****************************************************************************//**
 237:Generated_Source\PSoC4/CapSense_Processing.c **** *
 238:Generated_Source\PSoC4/CapSense_Processing.c **** * \brief
 239:Generated_Source\PSoC4/CapSense_Processing.c **** *  Performs initialization of the CSX touchpad widget i.e. Resets the position data to NONE.
 240:Generated_Source\PSoC4/CapSense_Processing.c **** *
 241:Generated_Source\PSoC4/CapSense_Processing.c **** * \details
 242:Generated_Source\PSoC4/CapSense_Processing.c **** *  The position data is always reset to the CapSense_TOUCHPAD_POS_NONE value.
 243:Generated_Source\PSoC4/CapSense_Processing.c **** *
 244:Generated_Source\PSoC4/CapSense_Processing.c **** *******************************************************************************/
 245:Generated_Source\PSoC4/CapSense_Processing.c **** static CY_INLINE void CapSense_DpInitCsxTouchpad(CapSense_FLASH_WD_STRUCT const * ptrFlashWdgt)
 246:Generated_Source\PSoC4/CapSense_Processing.c **** {
 247:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_RAM_WD_CSX_TOUCHPAD_STRUCT *ptrWdTouchpad;
 248:Generated_Source\PSoC4/CapSense_Processing.c **** 
 249:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_POSITION_FILTER_EN)
 250:Generated_Source\PSoC4/CapSense_Processing.c ****         uint32 touchIndex;
 251:Generated_Source\PSoC4/CapSense_Processing.c ****         CapSense_TOUCHPAD_POS_HISTORY_STRUCT *ptrHistory;
 252:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif  /* #if (0u != CapSense_POSITION_FILTER_EN) */
 253:Generated_Source\PSoC4/CapSense_Processing.c **** 
 254:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN)
 255:Generated_Source\PSoC4/CapSense_Processing.c ****         ADAPTIVE_FILTER_CONTEXT_STRUCT adpContext;
 256:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN) */
 257:Generated_Source\PSoC4/CapSense_Processing.c **** 
 258:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrWdTouchpad = ptrFlashWdgt->ptr2WdgtRam;
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 6


 259:Generated_Source\PSoC4/CapSense_Processing.c **** 
 260:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_POSITION_FILTER_EN)
 261:Generated_Source\PSoC4/CapSense_Processing.c ****         ptrHistory = ptrFlashWdgt->ptr2PosHistory;
 262:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* (0u != CapSense_POSITION_FILTER_EN) */
 263:Generated_Source\PSoC4/CapSense_Processing.c **** 
 264:Generated_Source\PSoC4/CapSense_Processing.c ****     /* Reset position data for finger */
 265:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrWdTouchpad->touch[0u].x = CapSense_TOUCHPAD_POS_NONE;
 266:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrWdTouchpad->touch[0u].y = CapSense_TOUCHPAD_POS_NONE;
 267:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrWdTouchpad->touch[0u].z = LO8(CapSense_TOUCHPAD_POS_NONE);
 268:Generated_Source\PSoC4/CapSense_Processing.c **** 
 269:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (CapSense_CSX_MAX_FINGERS > 1u)
 270:Generated_Source\PSoC4/CapSense_Processing.c ****         ptrWdTouchpad->touch[1u].x = CapSense_TOUCHPAD_POS_NONE;
 271:Generated_Source\PSoC4/CapSense_Processing.c ****         ptrWdTouchpad->touch[1u].y = CapSense_TOUCHPAD_POS_NONE;
 272:Generated_Source\PSoC4/CapSense_Processing.c ****         ptrWdTouchpad->touch[1u].z = LO8(CapSense_TOUCHPAD_POS_NONE);
 273:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (CapSense_CSX_MAX_FINGERS > 1u) */
 274:Generated_Source\PSoC4/CapSense_Processing.c **** 
 275:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (CapSense_CSX_MAX_FINGERS > 2u)
 276:Generated_Source\PSoC4/CapSense_Processing.c ****         ptrWdTouchpad->touch[2u].x = CapSense_TOUCHPAD_POS_NONE;
 277:Generated_Source\PSoC4/CapSense_Processing.c ****         ptrWdTouchpad->touch[2u].y = CapSense_TOUCHPAD_POS_NONE;
 278:Generated_Source\PSoC4/CapSense_Processing.c ****         ptrWdTouchpad->touch[2u].z = LO8(CapSense_TOUCHPAD_POS_NONE);
 279:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (CapSense_CSX_MAX_FINGERS > 2u) */
 280:Generated_Source\PSoC4/CapSense_Processing.c **** 
 281:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_POSITION_FILTER_EN)
 282:Generated_Source\PSoC4/CapSense_Processing.c ****         for (touchIndex = 0u; touchIndex < CapSense_CSX_MAX_FINGERS; touchIndex++)
 283:Generated_Source\PSoC4/CapSense_Processing.c ****         {
 284:Generated_Source\PSoC4/CapSense_Processing.c ****             if (NULL != ptrHistory)
 285:Generated_Source\PSoC4/CapSense_Processing.c ****             {
 286:Generated_Source\PSoC4/CapSense_Processing.c ****                 /* Clear position filter history data if available */
 287:Generated_Source\PSoC4/CapSense_Processing.c ****                 CapSense_InitPosFiltersDd(&ptrHistory[touchIndex], CapSense_TOUCHPAD_POS_NONE, CapS
 288:Generated_Source\PSoC4/CapSense_Processing.c ****                 #if (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN)
 289:Generated_Source\PSoC4/CapSense_Processing.c ****                     AdaptiveFilter_Initialize(&ptrWdTouchpad->aiirConfig, &adpContext);
 290:Generated_Source\PSoC4/CapSense_Processing.c ****                     ptrHistory[touchIndex].xPos.posAIIRCoeff = adpContext.coefficient;
 291:Generated_Source\PSoC4/CapSense_Processing.c ****                     ptrHistory[touchIndex].yPos.posAIIRCoeff = adpContext.coefficient;
 292:Generated_Source\PSoC4/CapSense_Processing.c ****                 #endif /* (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN) */
 293:Generated_Source\PSoC4/CapSense_Processing.c ****             }
 294:Generated_Source\PSoC4/CapSense_Processing.c ****         }
 295:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* (0u != CapSense_POSITION_FILTER_EN) */
 296:Generated_Source\PSoC4/CapSense_Processing.c **** }
 297:Generated_Source\PSoC4/CapSense_Processing.c **** #endif /* #if (0u != CapSense_CSX_TOUCHPAD_WIDGET_EN) */
 298:Generated_Source\PSoC4/CapSense_Processing.c **** 
 299:Generated_Source\PSoC4/CapSense_Processing.c **** #if (0u != CapSense_SLIDER_WIDGET_EN)
 300:Generated_Source\PSoC4/CapSense_Processing.c **** /*******************************************************************************
 301:Generated_Source\PSoC4/CapSense_Processing.c **** * Function Name: CapSense_DpInitSlider
 302:Generated_Source\PSoC4/CapSense_Processing.c **** ****************************************************************************//**
 303:Generated_Source\PSoC4/CapSense_Processing.c **** *
 304:Generated_Source\PSoC4/CapSense_Processing.c **** * \brief
 305:Generated_Source\PSoC4/CapSense_Processing.c **** *  Performs initialization of the Radial and Linear Slider widget.
 306:Generated_Source\PSoC4/CapSense_Processing.c **** *   - Resets the position data to NONE
 307:Generated_Source\PSoC4/CapSense_Processing.c **** *   - Initializes the position filter history to NONE if enabled.
 308:Generated_Source\PSoC4/CapSense_Processing.c **** *
 309:Generated_Source\PSoC4/CapSense_Processing.c **** * \details
 310:Generated_Source\PSoC4/CapSense_Processing.c **** *  Position data is always reset to the CapSense_SLIDER_POS_NONE value.
 311:Generated_Source\PSoC4/CapSense_Processing.c **** *  The same happens to the position filter history data if enabled.
 312:Generated_Source\PSoC4/CapSense_Processing.c **** *
 313:Generated_Source\PSoC4/CapSense_Processing.c **** *******************************************************************************/
 314:Generated_Source\PSoC4/CapSense_Processing.c **** static CY_INLINE void CapSense_DpInitSlider(CapSense_FLASH_WD_STRUCT const * ptrFlashWdgt)
 315:Generated_Source\PSoC4/CapSense_Processing.c **** {
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 7


 316:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 idx;
 317:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_RAM_WD_SLIDER_STRUCT *ptrWdSlider;
 318:Generated_Source\PSoC4/CapSense_Processing.c **** 
 319:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_POSITION_FILTER_EN)
 320:Generated_Source\PSoC4/CapSense_Processing.c ****         CapSense_SLIDER_POS_HISTORY_STRUCT *ptrHistory;
 321:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_POSITION_FILTER_EN) */
 322:Generated_Source\PSoC4/CapSense_Processing.c **** 
 323:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN)
 324:Generated_Source\PSoC4/CapSense_Processing.c ****         ADAPTIVE_FILTER_CONTEXT_STRUCT context;
 325:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN) */
 326:Generated_Source\PSoC4/CapSense_Processing.c **** 
 327:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrWdSlider = ptrFlashWdgt->ptr2WdgtRam;
 328:Generated_Source\PSoC4/CapSense_Processing.c **** 
 329:Generated_Source\PSoC4/CapSense_Processing.c ****     /* Reset slider position data to NONE */
 330:Generated_Source\PSoC4/CapSense_Processing.c ****     for (idx = 0u; idx < CapSense_NUM_CENTROIDS; idx++)
 331:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 332:Generated_Source\PSoC4/CapSense_Processing.c ****         ptrWdSlider->position[idx] = CapSense_SLIDER_POS_NONE;
 333:Generated_Source\PSoC4/CapSense_Processing.c **** 
 334:Generated_Source\PSoC4/CapSense_Processing.c ****         #if (0u != CapSense_POSITION_FILTER_EN)
 335:Generated_Source\PSoC4/CapSense_Processing.c ****             ptrHistory = ptrFlashWdgt->ptr2PosHistory;
 336:Generated_Source\PSoC4/CapSense_Processing.c ****             if (NULL != ptrHistory)
 337:Generated_Source\PSoC4/CapSense_Processing.c ****             {
 338:Generated_Source\PSoC4/CapSense_Processing.c ****                 CapSense_InitPosFiltersSd(&ptrHistory[idx], CapSense_SLIDER_POS_NONE);
 339:Generated_Source\PSoC4/CapSense_Processing.c ****                 #if (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN)
 340:Generated_Source\PSoC4/CapSense_Processing.c ****                     AdaptiveFilter_Initialize(&ptrWdSlider->aiirConfig, &context);
 341:Generated_Source\PSoC4/CapSense_Processing.c ****                     ptrHistory->posAIIRCoeff = context.coefficient;
 342:Generated_Source\PSoC4/CapSense_Processing.c ****                 #endif /* (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN) */
 343:Generated_Source\PSoC4/CapSense_Processing.c ****             }
 344:Generated_Source\PSoC4/CapSense_Processing.c **** 
 345:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* #if (0u != CapSense_POSITION_FILTER_EN) */
 346:Generated_Source\PSoC4/CapSense_Processing.c ****     }
 347:Generated_Source\PSoC4/CapSense_Processing.c **** }
 348:Generated_Source\PSoC4/CapSense_Processing.c **** #endif /* #if (0u != CapSense_SLIDER_WIDGET_EN) */
 349:Generated_Source\PSoC4/CapSense_Processing.c **** 
 350:Generated_Source\PSoC4/CapSense_Processing.c **** #if (0u != CapSense_CSD_MATRIX_WIDGET_EN)
 351:Generated_Source\PSoC4/CapSense_Processing.c **** /*******************************************************************************
 352:Generated_Source\PSoC4/CapSense_Processing.c **** * Function Name: CapSense_DpInitCsdMatrix
 353:Generated_Source\PSoC4/CapSense_Processing.c **** ****************************************************************************//**
 354:Generated_Source\PSoC4/CapSense_Processing.c **** *
 355:Generated_Source\PSoC4/CapSense_Processing.c **** * \brief
 356:Generated_Source\PSoC4/CapSense_Processing.c **** *  Performs initialization of the CSD Matrix Buttons widget.
 357:Generated_Source\PSoC4/CapSense_Processing.c **** *   - Resets the active button position data to NONE.
 358:Generated_Source\PSoC4/CapSense_Processing.c **** *
 359:Generated_Source\PSoC4/CapSense_Processing.c **** * \details
 360:Generated_Source\PSoC4/CapSense_Processing.c **** *  Position data is always reset to the CapSense_MATRIX_POS_NONE value.
 361:Generated_Source\PSoC4/CapSense_Processing.c **** *
 362:Generated_Source\PSoC4/CapSense_Processing.c **** *******************************************************************************/
 363:Generated_Source\PSoC4/CapSense_Processing.c **** static CY_INLINE void CapSense_DpInitCsdMatrix(CapSense_FLASH_WD_STRUCT const * ptrFlashWdgt)
 364:Generated_Source\PSoC4/CapSense_Processing.c **** {
 365:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_RAM_WD_CSD_MATRIX_STRUCT *ptrRamWdgt;
 366:Generated_Source\PSoC4/CapSense_Processing.c **** 
 367:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrRamWdgt = (CapSense_RAM_WD_CSD_MATRIX_STRUCT *)ptrFlashWdgt->ptr2WdgtRam;
 368:Generated_Source\PSoC4/CapSense_Processing.c **** 
 369:Generated_Source\PSoC4/CapSense_Processing.c ****     /* Reset sensor id, row and col registers in data structure */
 370:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrRamWdgt->posRow   = CapSense_MATRIX_POS_NONE;
 371:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrRamWdgt->posCol   = CapSense_MATRIX_POS_NONE;
 372:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrRamWdgt->posSnsId = CapSense_MATRIX_POS_NONE;
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 8


 373:Generated_Source\PSoC4/CapSense_Processing.c **** }
 374:Generated_Source\PSoC4/CapSense_Processing.c **** #endif /* #if (0u != CapSense_CSD_MATRIX_WIDGET_EN) */
 375:Generated_Source\PSoC4/CapSense_Processing.c **** 
 376:Generated_Source\PSoC4/CapSense_Processing.c **** /*******************************************************************************
 377:Generated_Source\PSoC4/CapSense_Processing.c **** * Function Name: CapSense_DpInitialize
 378:Generated_Source\PSoC4/CapSense_Processing.c **** ****************************************************************************//**
 379:Generated_Source\PSoC4/CapSense_Processing.c **** *
 380:Generated_Source\PSoC4/CapSense_Processing.c **** * \brief
 381:Generated_Source\PSoC4/CapSense_Processing.c **** *  Performs initialization of the data processing FW module:
 382:Generated_Source\PSoC4/CapSense_Processing.c **** *   - Resets the de-bounce counters of all the widgets
 383:Generated_Source\PSoC4/CapSense_Processing.c **** *   - Resets the position filter history for slider and touchpad widgets
 384:Generated_Source\PSoC4/CapSense_Processing.c **** *   - Clears widget and sensor statuses
 385:Generated_Source\PSoC4/CapSense_Processing.c **** *   - Enables all the widgets.
 386:Generated_Source\PSoC4/CapSense_Processing.c **** *
 387:Generated_Source\PSoC4/CapSense_Processing.c **** * \details
 388:Generated_Source\PSoC4/CapSense_Processing.c **** *  The Button and Matrix Button widgets have individual de-bounce counter per
 389:Generated_Source\PSoC4/CapSense_Processing.c **** *  sensor for the CSD widgets and per node for the CSX widgets.
 390:Generated_Source\PSoC4/CapSense_Processing.c **** *
 391:Generated_Source\PSoC4/CapSense_Processing.c **** *  The Slider and Touchpad widgets have a single de-bounce counter per widget.
 392:Generated_Source\PSoC4/CapSense_Processing.c **** *
 393:Generated_Source\PSoC4/CapSense_Processing.c **** *  The Proximity widget has two de-bounce counters per sensor. One for the
 394:Generated_Source\PSoC4/CapSense_Processing.c **** *  proximity event and second for the touch event.
 395:Generated_Source\PSoC4/CapSense_Processing.c **** *
 396:Generated_Source\PSoC4/CapSense_Processing.c **** *  All debounce counters during initialization are set to the value of the
 397:Generated_Source\PSoC4/CapSense_Processing.c **** *  onDebounce widget parameter.
 398:Generated_Source\PSoC4/CapSense_Processing.c **** *
 399:Generated_Source\PSoC4/CapSense_Processing.c **** *******************************************************************************/
 400:Generated_Source\PSoC4/CapSense_Processing.c **** void CapSense_DpInitialize(void)
 401:Generated_Source\PSoC4/CapSense_Processing.c **** {
  28              		.loc 1 401 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 70B5     		push	{r4, r5, r6, lr}
  33              		.cfi_def_cfa_offset 16
  34              		.cfi_offset 4, -16
  35              		.cfi_offset 5, -12
  36              		.cfi_offset 6, -8
  37              		.cfi_offset 14, -4
  38              	.LVL0:
 402:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 wdgtId;
 403:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_WD_TYPE_ENUM widgetType;
 404:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_RAM_WD_BASE_STRUCT * ptrRamWdgt;
 405:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_FLASH_WD_STRUCT const * ptrFlashWdgt;
 406:Generated_Source\PSoC4/CapSense_Processing.c **** 
 407:Generated_Source\PSoC4/CapSense_Processing.c ****     for (wdgtId = 0u; wdgtId < CapSense_WDGT_STATUS_WORDS; wdgtId++)
  39              		.loc 1 407 0
  40 0002 0023     		movs	r3, #0
  41 0004 09E0     		b	.L2
  42              	.LVL1:
  43              	.L3:
 408:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 409:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Clear widget status */
 410:Generated_Source\PSoC4/CapSense_Processing.c ****         CapSense_dsRam.wdgtStatus[wdgtId] = 0u;
  44              		.loc 1 410 0 discriminator 3
  45 0006 1849     		ldr	r1, .L9
  46 0008 1A1D     		adds	r2, r3, #4
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 9


  47 000a 9200     		lsls	r2, r2, #2
  48 000c 8818     		adds	r0, r1, r2
  49 000e 0024     		movs	r4, #0
  50 0010 4460     		str	r4, [r0, #4]
 411:Generated_Source\PSoC4/CapSense_Processing.c **** 
 412:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Enable all the widgets */
 413:Generated_Source\PSoC4/CapSense_Processing.c ****         CapSense_dsRam.wdgtEnable[wdgtId] = 0xFFFFFFFFLu;
  51              		.loc 1 413 0 discriminator 3
  52 0012 0120     		movs	r0, #1
  53 0014 4042     		rsbs	r0, r0, #0
  54 0016 5050     		str	r0, [r2, r1]
 407:Generated_Source\PSoC4/CapSense_Processing.c ****     {
  55              		.loc 1 407 0 discriminator 3
  56 0018 0133     		adds	r3, r3, #1
  57              	.LVL2:
  58              	.L2:
 407:Generated_Source\PSoC4/CapSense_Processing.c ****     {
  59              		.loc 1 407 0 is_stmt 0 discriminator 1
  60 001a 002B     		cmp	r3, #0
  61 001c F3D0     		beq	.L3
  62 001e 134C     		ldr	r4, .L9+4
  63 0020 0623     		movs	r3, #6
  64              	.LVL3:
  65 0022 1CE0     		b	.L4
  66              	.LVL4:
  67              	.L8:
 414:Generated_Source\PSoC4/CapSense_Processing.c **** 
 415:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Set all the widgets to working state if the Self-Test is not enabled */
 416:Generated_Source\PSoC4/CapSense_Processing.c ****         #if (0u != CapSense_SELF_TEST_EN)
 417:Generated_Source\PSoC4/CapSense_Processing.c ****             CapSense_dsRam.wdgtWorking[wdgtId] = 0xFFFFFFFFLu;
 418:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* #if (0u == CapSense_SELF_TEST_EN) */
 419:Generated_Source\PSoC4/CapSense_Processing.c ****     }
 420:Generated_Source\PSoC4/CapSense_Processing.c **** 
 421:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrFlashWdgt = CapSense_dsFlash.wdgtArray;
 422:Generated_Source\PSoC4/CapSense_Processing.c **** 
 423:Generated_Source\PSoC4/CapSense_Processing.c ****     for (wdgtId = CapSense_TOTAL_WIDGETS; wdgtId-- > 0u; )
 424:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 425:Generated_Source\PSoC4/CapSense_Processing.c ****         ptrRamWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdgt->ptr2WdgtRam;
  68              		.loc 1 425 0 is_stmt 1
  69 0024 6668     		ldr	r6, [r4, #4]
  70              	.LVL5:
 426:Generated_Source\PSoC4/CapSense_Processing.c ****         widgetType = (CapSense_WD_TYPE_ENUM)ptrFlashWdgt->wdgtType;
  71              		.loc 1 426 0
  72 0026 A27E     		ldrb	r2, [r4, #26]
  73              	.LVL6:
 427:Generated_Source\PSoC4/CapSense_Processing.c **** 
 428:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Clear all sensor statuses */
 429:Generated_Source\PSoC4/CapSense_Processing.c ****         CapSense_dsRam.snsStatus[wdgtId] = 0u;
  74              		.loc 1 429 0
  75 0028 0F4B     		ldr	r3, .L9
  76 002a 5B19     		adds	r3, r3, r5
  77 002c 0021     		movs	r1, #0
  78 002e 1976     		strb	r1, [r3, #24]
 430:Generated_Source\PSoC4/CapSense_Processing.c **** 
 431:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Reset de-bounce counters */
 432:Generated_Source\PSoC4/CapSense_Processing.c ****         switch (widgetType)
  79              		.loc 1 432 0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 10


  80 0030 012A     		cmp	r2, #1
  81 0032 02D0     		beq	.L6
  82 0034 062A     		cmp	r2, #6
  83 0036 08D0     		beq	.L7
  84 0038 0FE0     		b	.L5
  85              	.L6:
 433:Generated_Source\PSoC4/CapSense_Processing.c ****         {
 434:Generated_Source\PSoC4/CapSense_Processing.c ****         #if (0u != CapSense_MATRIX_WIDGET_EN)
 435:Generated_Source\PSoC4/CapSense_Processing.c ****             case CapSense_WD_MATRIX_BUTTON_E:
 436:Generated_Source\PSoC4/CapSense_Processing.c ****                 #if (0u != CapSense_CSD_MATRIX_WIDGET_EN)
 437:Generated_Source\PSoC4/CapSense_Processing.c ****                     if (CapSense_SENSE_METHOD_CSD_E == CapSense_GET_SENSE_METHOD(ptrFlashWdgt))
 438:Generated_Source\PSoC4/CapSense_Processing.c ****                     {
 439:Generated_Source\PSoC4/CapSense_Processing.c ****                         CapSense_DpInitCsdMatrix(ptrFlashWdgt);
 440:Generated_Source\PSoC4/CapSense_Processing.c ****                     }
 441:Generated_Source\PSoC4/CapSense_Processing.c ****                 #endif /* #if (0u != CapSense_CSD_MATRIX_WIDGET_EN) */
 442:Generated_Source\PSoC4/CapSense_Processing.c **** 
 443:Generated_Source\PSoC4/CapSense_Processing.c ****                 if (NULL != ptrFlashWdgt->ptr2DebounceArr)
 444:Generated_Source\PSoC4/CapSense_Processing.c ****                 {
 445:Generated_Source\PSoC4/CapSense_Processing.c ****                     /* Initialize array of debounce counters */
 446:Generated_Source\PSoC4/CapSense_Processing.c ****                     (void)memset(ptrFlashWdgt->ptr2DebounceArr,
 447:Generated_Source\PSoC4/CapSense_Processing.c ****                                  (int32)ptrRamWdgt->onDebounce,
 448:Generated_Source\PSoC4/CapSense_Processing.c ****                                  (size_t)ptrFlashWdgt->totalNumSns);
 449:Generated_Source\PSoC4/CapSense_Processing.c ****                 }
 450:Generated_Source\PSoC4/CapSense_Processing.c ****                 break;
 451:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* #if (0u != CapSense_MATRIX_WIDGET_EN) */
 452:Generated_Source\PSoC4/CapSense_Processing.c **** 
 453:Generated_Source\PSoC4/CapSense_Processing.c ****         #if (0u != CapSense_BUTTON_WIDGET_EN)
 454:Generated_Source\PSoC4/CapSense_Processing.c ****             case CapSense_WD_BUTTON_E:
 455:Generated_Source\PSoC4/CapSense_Processing.c ****                 if (NULL != ptrFlashWdgt->ptr2DebounceArr)
  86              		.loc 1 455 0
  87 003a 2069     		ldr	r0, [r4, #16]
  88 003c 0028     		cmp	r0, #0
  89 003e 0CD0     		beq	.L5
 456:Generated_Source\PSoC4/CapSense_Processing.c ****                 {
 457:Generated_Source\PSoC4/CapSense_Processing.c ****                     /* Initialize array of debounce counters */
 458:Generated_Source\PSoC4/CapSense_Processing.c ****                     (void)memset(ptrFlashWdgt->ptr2DebounceArr,
 459:Generated_Source\PSoC4/CapSense_Processing.c ****                                  (int32)ptrRamWdgt->onDebounce,
  90              		.loc 1 459 0
  91 0040 F179     		ldrb	r1, [r6, #7]
 460:Generated_Source\PSoC4/CapSense_Processing.c ****                                  (size_t)ptrFlashWdgt->totalNumSns);
  92              		.loc 1 460 0
  93 0042 228B     		ldrh	r2, [r4, #24]
  94              	.LVL7:
 458:Generated_Source\PSoC4/CapSense_Processing.c ****                                  (int32)ptrRamWdgt->onDebounce,
  95              		.loc 1 458 0
  96 0044 FFF7FEFF 		bl	memset
  97              	.LVL8:
  98 0048 07E0     		b	.L5
  99              	.LVL9:
 100              	.L7:
 461:Generated_Source\PSoC4/CapSense_Processing.c ****                 }
 462:Generated_Source\PSoC4/CapSense_Processing.c ****                 break;
 463:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* #if (0u != CapSense_BUTTON_WIDGET_EN) */
 464:Generated_Source\PSoC4/CapSense_Processing.c **** 
 465:Generated_Source\PSoC4/CapSense_Processing.c ****         #if (0u != CapSense_SLIDER_WIDGET_EN)
 466:Generated_Source\PSoC4/CapSense_Processing.c ****             case CapSense_WD_LINEAR_SLIDER_E:
 467:Generated_Source\PSoC4/CapSense_Processing.c ****             case CapSense_WD_RADIAL_SLIDER_E:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 11


 468:Generated_Source\PSoC4/CapSense_Processing.c ****                 if (NULL != ptrFlashWdgt->ptr2DebounceArr)
 469:Generated_Source\PSoC4/CapSense_Processing.c ****                 {
 470:Generated_Source\PSoC4/CapSense_Processing.c ****                     /* Initialize single debounce counter of slider */
 471:Generated_Source\PSoC4/CapSense_Processing.c ****                     *(uint8 *)(ptrFlashWdgt->ptr2DebounceArr) = ptrRamWdgt->onDebounce;
 472:Generated_Source\PSoC4/CapSense_Processing.c ****                 }
 473:Generated_Source\PSoC4/CapSense_Processing.c **** 
 474:Generated_Source\PSoC4/CapSense_Processing.c ****                 CapSense_DpInitSlider(ptrFlashWdgt);
 475:Generated_Source\PSoC4/CapSense_Processing.c **** 
 476:Generated_Source\PSoC4/CapSense_Processing.c ****                 break;
 477:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* #if (0u != CapSense_SLIDER_WIDGET_EN) */
 478:Generated_Source\PSoC4/CapSense_Processing.c **** 
 479:Generated_Source\PSoC4/CapSense_Processing.c ****         #if (0u != CapSense_TOUCHPAD_WIDGET_EN)
 480:Generated_Source\PSoC4/CapSense_Processing.c ****             case CapSense_WD_TOUCHPAD_E:
 481:Generated_Source\PSoC4/CapSense_Processing.c ****                 if (NULL != ptrFlashWdgt->ptr2DebounceArr)
 482:Generated_Source\PSoC4/CapSense_Processing.c ****                 {
 483:Generated_Source\PSoC4/CapSense_Processing.c ****                     /* Initialize single debounce counter of touchpad */
 484:Generated_Source\PSoC4/CapSense_Processing.c ****                     *(uint8 *)(ptrFlashWdgt->ptr2DebounceArr) = ptrRamWdgt->onDebounce;
 485:Generated_Source\PSoC4/CapSense_Processing.c ****                 }
 486:Generated_Source\PSoC4/CapSense_Processing.c **** 
 487:Generated_Source\PSoC4/CapSense_Processing.c ****                 #if (0u != CapSense_CSD_TOUCHPAD_WIDGET_EN)
 488:Generated_Source\PSoC4/CapSense_Processing.c ****                     if (CapSense_SENSE_METHOD_CSD_E == CapSense_GET_SENSE_METHOD(ptrFlashWdgt))
 489:Generated_Source\PSoC4/CapSense_Processing.c ****                     {
 490:Generated_Source\PSoC4/CapSense_Processing.c ****                         CapSense_DpInitCsdTouchpad(ptrFlashWdgt);
 491:Generated_Source\PSoC4/CapSense_Processing.c ****                     }
 492:Generated_Source\PSoC4/CapSense_Processing.c ****                 #endif /* #if (0u != CapSense_CSD_TOUCHPAD_WIDGET_EN) */
 493:Generated_Source\PSoC4/CapSense_Processing.c **** 
 494:Generated_Source\PSoC4/CapSense_Processing.c ****                 #if (0u != CapSense_CSX_TOUCHPAD_WIDGET_EN)
 495:Generated_Source\PSoC4/CapSense_Processing.c ****                     if (CapSense_SENSE_METHOD_CSX_E == CapSense_GET_SENSE_METHOD(ptrFlashWdgt))
 496:Generated_Source\PSoC4/CapSense_Processing.c ****                     {
 497:Generated_Source\PSoC4/CapSense_Processing.c ****                         CapSense_DpInitCsxTouchpad(ptrFlashWdgt);
 498:Generated_Source\PSoC4/CapSense_Processing.c ****                     }
 499:Generated_Source\PSoC4/CapSense_Processing.c ****                 #endif /* #if (0u != CapSense_CSX_TOUCHPAD_WIDGET_EN) */
 500:Generated_Source\PSoC4/CapSense_Processing.c **** 
 501:Generated_Source\PSoC4/CapSense_Processing.c ****                 break;
 502:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* #if (0u != CapSense_TOUCHPAD_WIDGET_EN) */
 503:Generated_Source\PSoC4/CapSense_Processing.c **** 
 504:Generated_Source\PSoC4/CapSense_Processing.c ****         #if (0u != CapSense_PROXIMITY_WIDGET_EN)
 505:Generated_Source\PSoC4/CapSense_Processing.c ****             case CapSense_WD_PROXIMITY_E:
 506:Generated_Source\PSoC4/CapSense_Processing.c ****                 if (NULL != ptrFlashWdgt->ptr2DebounceArr)
 101              		.loc 1 506 0
 102 004a 2069     		ldr	r0, [r4, #16]
 103 004c 0028     		cmp	r0, #0
 104 004e 04D0     		beq	.L5
 507:Generated_Source\PSoC4/CapSense_Processing.c ****                 {
 508:Generated_Source\PSoC4/CapSense_Processing.c ****                     /* Proximity widgets have 2 de-bounce counters per sensor.
 509:Generated_Source\PSoC4/CapSense_Processing.c ****                      * Therefore the number of sensors is multiplied by 2.
 510:Generated_Source\PSoC4/CapSense_Processing.c ****                      */
 511:Generated_Source\PSoC4/CapSense_Processing.c ****                    (void)memset(ptrFlashWdgt->ptr2DebounceArr,
 512:Generated_Source\PSoC4/CapSense_Processing.c ****                                 (int32)ptrRamWdgt->onDebounce,
 105              		.loc 1 512 0
 106 0050 F179     		ldrb	r1, [r6, #7]
 513:Generated_Source\PSoC4/CapSense_Processing.c ****                                 (size_t)ptrFlashWdgt->totalNumSns * 2u);
 107              		.loc 1 513 0
 108 0052 228B     		ldrh	r2, [r4, #24]
 109              	.LVL10:
 511:Generated_Source\PSoC4/CapSense_Processing.c ****                                 (int32)ptrRamWdgt->onDebounce,
 110              		.loc 1 511 0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 12


 111 0054 5200     		lsls	r2, r2, #1
 112 0056 FFF7FEFF 		bl	memset
 113              	.LVL11:
 114              	.L5:
 514:Generated_Source\PSoC4/CapSense_Processing.c ****                 }
 515:Generated_Source\PSoC4/CapSense_Processing.c ****                 break;
 516:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* #if (0u != CapSense_PROXIMITY_WIDGET_EN) */
 517:Generated_Source\PSoC4/CapSense_Processing.c **** 
 518:Generated_Source\PSoC4/CapSense_Processing.c ****         #if (0u != CapSense_ENCODERDIAL_WIDGET_EN)
 519:Generated_Source\PSoC4/CapSense_Processing.c ****             case CapSense_WD_ENCODERDIAL_E:
 520:Generated_Source\PSoC4/CapSense_Processing.c ****                 if (NULL != ptrFlashWdgt->ptr2DebounceArr)
 521:Generated_Source\PSoC4/CapSense_Processing.c ****                 {
 522:Generated_Source\PSoC4/CapSense_Processing.c ****                     /* Proximity widgets have 2 de-bounce counters per sensor.
 523:Generated_Source\PSoC4/CapSense_Processing.c ****                      * Therefore the number of sensors is multiplied by 2.
 524:Generated_Source\PSoC4/CapSense_Processing.c ****                      */
 525:Generated_Source\PSoC4/CapSense_Processing.c ****                    (void)memset(ptrFlashWdgt->ptr2DebounceArr,
 526:Generated_Source\PSoC4/CapSense_Processing.c ****                                 (int32)ptrRamWdgt->onDebounce,
 527:Generated_Source\PSoC4/CapSense_Processing.c ****                                 (size_t)ptrFlashWdgt->totalNumSns);
 528:Generated_Source\PSoC4/CapSense_Processing.c ****                 }
 529:Generated_Source\PSoC4/CapSense_Processing.c ****                 break;
 530:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* (0u != CapSense_ENCODERDIAL_WIDGET_EN) */
 531:Generated_Source\PSoC4/CapSense_Processing.c ****             default:
 532:Generated_Source\PSoC4/CapSense_Processing.c ****                 break;
 533:Generated_Source\PSoC4/CapSense_Processing.c ****         }
 534:Generated_Source\PSoC4/CapSense_Processing.c **** 
 535:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Move to next widget */
 536:Generated_Source\PSoC4/CapSense_Processing.c ****         ptrFlashWdgt++;
 115              		.loc 1 536 0
 116 005a 1C34     		adds	r4, r4, #28
 117              	.LVL12:
 423:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 118              		.loc 1 423 0
 119 005c 2B00     		movs	r3, r5
 120              	.LVL13:
 121              	.L4:
 423:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 122              		.loc 1 423 0 is_stmt 0 discriminator 1
 123 005e 5D1E     		subs	r5, r3, #1
 124              	.LVL14:
 125 0060 002B     		cmp	r3, #0
 126 0062 DFD1     		bne	.L8
 537:Generated_Source\PSoC4/CapSense_Processing.c ****     }
 538:Generated_Source\PSoC4/CapSense_Processing.c **** }
 127              		.loc 1 538 0 is_stmt 1
 128              		@ sp needed
 129              	.LVL15:
 130              	.LVL16:
 131 0064 70BD     		pop	{r4, r5, r6, pc}
 132              	.L10:
 133 0066 C046     		.align	2
 134              	.L9:
 135 0068 00000000 		.word	CapSense_dsRam
 136 006c 00000000 		.word	CapSense_dsFlash
 137              		.cfi_endproc
 138              	.LFE1:
 139              		.size	CapSense_DpInitialize, .-CapSense_DpInitialize
 140              		.section	.text.CapSense_DpUpdateDifferences,"ax",%progbits
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 13


 141              		.align	2
 142              		.global	CapSense_DpUpdateDifferences
 143              		.code	16
 144              		.thumb_func
 145              		.type	CapSense_DpUpdateDifferences, %function
 146              	CapSense_DpUpdateDifferences:
 147              	.LFB5:
 539:Generated_Source\PSoC4/CapSense_Processing.c **** 
 540:Generated_Source\PSoC4/CapSense_Processing.c **** #if (0u != CapSense_TOTAL_CSX_WIDGETS)
 541:Generated_Source\PSoC4/CapSense_Processing.c **** /*******************************************************************************
 542:Generated_Source\PSoC4/CapSense_Processing.c **** * Function Name: CapSense_DpProcessCsxWidgetRawCounts
 543:Generated_Source\PSoC4/CapSense_Processing.c **** ****************************************************************************//**
 544:Generated_Source\PSoC4/CapSense_Processing.c **** *
 545:Generated_Source\PSoC4/CapSense_Processing.c **** * \brief
 546:Generated_Source\PSoC4/CapSense_Processing.c **** *  Performs default processing of the CSX raw counts.
 547:Generated_Source\PSoC4/CapSense_Processing.c **** *
 548:Generated_Source\PSoC4/CapSense_Processing.c **** * \details
 549:Generated_Source\PSoC4/CapSense_Processing.c **** *  Performs default processing of the CSX raw counts:
 550:Generated_Source\PSoC4/CapSense_Processing.c **** *   - Run Filters
 551:Generated_Source\PSoC4/CapSense_Processing.c **** *   - Update Baselines
 552:Generated_Source\PSoC4/CapSense_Processing.c **** *   - Update Differences
 553:Generated_Source\PSoC4/CapSense_Processing.c **** *   - Update Status.
 554:Generated_Source\PSoC4/CapSense_Processing.c **** *  The same process is applied to all the sensors of the specified widget.
 555:Generated_Source\PSoC4/CapSense_Processing.c **** *
 556:Generated_Source\PSoC4/CapSense_Processing.c **** * \param ptrFlashWdgt The pointer to the Flash widget structure.
 557:Generated_Source\PSoC4/CapSense_Processing.c **** *
 558:Generated_Source\PSoC4/CapSense_Processing.c **** * \return
 559:Generated_Source\PSoC4/CapSense_Processing.c **** *  Returns the status of the specified widget processing operation:
 560:Generated_Source\PSoC4/CapSense_Processing.c **** *  - CYRET_SUCCESS if operation was successfully completed;
 561:Generated_Source\PSoC4/CapSense_Processing.c **** *  - CapSense_PROCESS_BASELINE_FAILED if baseline processing of any
 562:Generated_Source\PSoC4/CapSense_Processing.c **** *    sensor of the specified widget failed. The result is concatenated with the index
 563:Generated_Source\PSoC4/CapSense_Processing.c **** *    of failed sensor.
 564:Generated_Source\PSoC4/CapSense_Processing.c **** *
 565:Generated_Source\PSoC4/CapSense_Processing.c **** *******************************************************************************/
 566:Generated_Source\PSoC4/CapSense_Processing.c **** uint32 CapSense_DpProcessCsxWidgetRawCounts(CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt)
 567:Generated_Source\PSoC4/CapSense_Processing.c **** {
 568:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 result = CYRET_SUCCESS;
 569:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 widgetType;
 570:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 snsCount;
 571:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_RAM_SNS_STRUCT *ptrSnsTmp;
 572:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrRamWdgt;
 573:Generated_Source\PSoC4/CapSense_Processing.c **** 
 574:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
 575:Generated_Source\PSoC4/CapSense_Processing.c ****         CapSense_PTR_FILTER_VARIANT fltrHistV;
 576:Generated_Source\PSoC4/CapSense_Processing.c **** 
 577:Generated_Source\PSoC4/CapSense_Processing.c ****         fltrHistV.ptr = ptrFlashWdgt->ptr2FltrHistory;
 578:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
 579:Generated_Source\PSoC4/CapSense_Processing.c **** 
 580:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrSnsTmp = ptrFlashWdgt->ptr2SnsRam;
 581:Generated_Source\PSoC4/CapSense_Processing.c ****     snsCount = ptrFlashWdgt->totalNumSns;
 582:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrRamWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdgt->ptr2WdgtRam;
 583:Generated_Source\PSoC4/CapSense_Processing.c ****     widgetType = ptrFlashWdgt->wdgtType;
 584:Generated_Source\PSoC4/CapSense_Processing.c **** 
 585:Generated_Source\PSoC4/CapSense_Processing.c ****     /* Run deconvolution algorithm for the widgets with multiphase TX support */
 586:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_CSX_MULTIPHASE_TX_EN)
 587:Generated_Source\PSoC4/CapSense_Processing.c ****         if (0u != (ptrFlashWdgt->staticConfig & CapSense_MULTIPHASE_TX_MASK))
 588:Generated_Source\PSoC4/CapSense_Processing.c ****         {
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 14


 589:Generated_Source\PSoC4/CapSense_Processing.c ****             CapSense_DpDeconvolution(ptrFlashWdgt);
 590:Generated_Source\PSoC4/CapSense_Processing.c ****         }
 591:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif  /* #if (0u != CapSense_CSX_MULTIPHASE_TX_EN) */
 592:Generated_Source\PSoC4/CapSense_Processing.c **** 
 593:Generated_Source\PSoC4/CapSense_Processing.c ****     for (;snsCount-- > 0u;)
 594:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 595:Generated_Source\PSoC4/CapSense_Processing.c ****         #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
 596:Generated_Source\PSoC4/CapSense_Processing.c ****             CapSense_FtRunEnabledFiltersInternal(fltrHistV, ptrSnsTmp, widgetType);
 597:Generated_Source\PSoC4/CapSense_Processing.c ****             #if (CapSense_ALP_FILTER_EN)
 598:Generated_Source\PSoC4/CapSense_Processing.c ****                 CapSense_ConfigRunALPInternal(fltrHistV, ptrRamWdgt, ptrSnsTmp, widgetType);
 599:Generated_Source\PSoC4/CapSense_Processing.c ****             #endif
 600:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* #if (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
 601:Generated_Source\PSoC4/CapSense_Processing.c **** 
 602:Generated_Source\PSoC4/CapSense_Processing.c ****         result = CapSense_FtUpdateBaseline(ptrRamWdgt, ptrSnsTmp, widgetType);
 603:Generated_Source\PSoC4/CapSense_Processing.c **** 
 604:Generated_Source\PSoC4/CapSense_Processing.c ****         #if (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN)
 605:Generated_Source\PSoC4/CapSense_Processing.c ****             if (CYRET_SUCCESS != result)
 606:Generated_Source\PSoC4/CapSense_Processing.c ****             {
 607:Generated_Source\PSoC4/CapSense_Processing.c ****                 result = snsCount | CapSense_PROCESS_BASELINE_FAILED;
 608:Generated_Source\PSoC4/CapSense_Processing.c ****             }
 609:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN) */
 610:Generated_Source\PSoC4/CapSense_Processing.c **** 
 611:Generated_Source\PSoC4/CapSense_Processing.c ****         CapSense_DpUpdateDifferences(ptrRamWdgt, ptrSnsTmp);
 612:Generated_Source\PSoC4/CapSense_Processing.c **** 
 613:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Move pointers to the next sensor and filter history objects */
 614:Generated_Source\PSoC4/CapSense_Processing.c ****         ptrSnsTmp++;
 615:Generated_Source\PSoC4/CapSense_Processing.c **** 
 616:Generated_Source\PSoC4/CapSense_Processing.c ****         #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
 617:Generated_Source\PSoC4/CapSense_Processing.c ****             CapSense_INC_REG_FLTR_OBJ(fltrHistV);
 618:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* #if (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
 619:Generated_Source\PSoC4/CapSense_Processing.c ****     }
 620:Generated_Source\PSoC4/CapSense_Processing.c ****     return result;
 621:Generated_Source\PSoC4/CapSense_Processing.c **** }
 622:Generated_Source\PSoC4/CapSense_Processing.c **** 
 623:Generated_Source\PSoC4/CapSense_Processing.c **** /*******************************************************************************
 624:Generated_Source\PSoC4/CapSense_Processing.c **** * Function Name: CapSense_DpProcessCsxSensorRawCountsExt
 625:Generated_Source\PSoC4/CapSense_Processing.c **** ****************************************************************************//**
 626:Generated_Source\PSoC4/CapSense_Processing.c **** *
 627:Generated_Source\PSoC4/CapSense_Processing.c **** * \brief
 628:Generated_Source\PSoC4/CapSense_Processing.c **** *   Performs customized processing of the CSX sensor raw counts.
 629:Generated_Source\PSoC4/CapSense_Processing.c **** *
 630:Generated_Source\PSoC4/CapSense_Processing.c **** * \details
 631:Generated_Source\PSoC4/CapSense_Processing.c **** *   Performs customized processing of the CSX sensor raw counts.
 632:Generated_Source\PSoC4/CapSense_Processing.c **** *
 633:Generated_Source\PSoC4/CapSense_Processing.c **** *   If all bits are set at once the default processing order will take place.
 634:Generated_Source\PSoC4/CapSense_Processing.c **** *   For the custom order this API can be called multiple times and execute one task at a time.
 635:Generated_Source\PSoC4/CapSense_Processing.c **** *
 636:Generated_Source\PSoC4/CapSense_Processing.c **** * \param ptrFlashWdgt The pointer to the Flash Widget Object.
 637:Generated_Source\PSoC4/CapSense_Processing.c **** * \param curSnsPtr    The pointer to the specific RAM Sensor Object.
 638:Generated_Source\PSoC4/CapSense_Processing.c **** * \param fltrHistV    The pointer to the Filter History Object in RAM associated with specific sens
 639:Generated_Source\PSoC4/CapSense_Processing.c **** * \param mode         The bit-mask with the data processing tasks to be executed.
 640:Generated_Source\PSoC4/CapSense_Processing.c **** *   The mode parameters can take the following values:
 641:Generated_Source\PSoC4/CapSense_Processing.c **** *    - CapSense_PROCESS_FILTER     (0x01) Run Firmware Filter
 642:Generated_Source\PSoC4/CapSense_Processing.c **** *    - CapSense_PROCESS_BASELINE   (0x02) Update Baselines
 643:Generated_Source\PSoC4/CapSense_Processing.c **** *    - CapSense_PROCESS_DIFFCOUNTS (0x04) Update Difference Counts
 644:Generated_Source\PSoC4/CapSense_Processing.c **** *    - CapSense_PROCESS_ALL               Execute all tasks
 645:Generated_Source\PSoC4/CapSense_Processing.c **** *
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 15


 646:Generated_Source\PSoC4/CapSense_Processing.c **** * \return
 647:Generated_Source\PSoC4/CapSense_Processing.c **** *  Returns the status of the specified sensor processing operation:
 648:Generated_Source\PSoC4/CapSense_Processing.c **** *  - CYRET_SUCCESS if operation was successfully completed;
 649:Generated_Source\PSoC4/CapSense_Processing.c **** *  - CapSense_PROCESS_BASELINE_FAILED if baseline processing of any
 650:Generated_Source\PSoC4/CapSense_Processing.c **** *    sensor of the specified widget failed. The result is concatenated with the index
 651:Generated_Source\PSoC4/CapSense_Processing.c **** *    of failed sensor.
 652:Generated_Source\PSoC4/CapSense_Processing.c **** *
 653:Generated_Source\PSoC4/CapSense_Processing.c **** *******************************************************************************/
 654:Generated_Source\PSoC4/CapSense_Processing.c **** uint32 CapSense_DpProcessCsxSensorRawCountsExt(
 655:Generated_Source\PSoC4/CapSense_Processing.c ****                 CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt,
 656:Generated_Source\PSoC4/CapSense_Processing.c ****                 CapSense_RAM_SNS_STRUCT *curSnsPtr,
 657:Generated_Source\PSoC4/CapSense_Processing.c ****                 CapSense_PTR_FILTER_VARIANT fltrHistV,
 658:Generated_Source\PSoC4/CapSense_Processing.c ****                 uint32 mode)
 659:Generated_Source\PSoC4/CapSense_Processing.c **** {
 660:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32  result = CYRET_SUCCESS;
 661:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32  widgetType;
 662:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrRamWdgt;
 663:Generated_Source\PSoC4/CapSense_Processing.c **** 
 664:Generated_Source\PSoC4/CapSense_Processing.c ****     widgetType = ptrFlashWdgt->wdgtType;
 665:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrRamWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdgt->ptr2WdgtRam;
 666:Generated_Source\PSoC4/CapSense_Processing.c **** 
 667:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
 668:Generated_Source\PSoC4/CapSense_Processing.c ****         if (0u != (mode & CapSense_PROCESS_FILTER))
 669:Generated_Source\PSoC4/CapSense_Processing.c ****         {
 670:Generated_Source\PSoC4/CapSense_Processing.c ****             CapSense_FtRunEnabledFiltersInternal(fltrHistV, curSnsPtr, widgetType);
 671:Generated_Source\PSoC4/CapSense_Processing.c ****             #if (CapSense_ALP_FILTER_EN)
 672:Generated_Source\PSoC4/CapSense_Processing.c ****                 CapSense_ConfigRunALPInternal(fltrHistV, ptrRamWdgt, curSnsPtr, widgetType);
 673:Generated_Source\PSoC4/CapSense_Processing.c ****             #endif
 674:Generated_Source\PSoC4/CapSense_Processing.c ****         }
 675:Generated_Source\PSoC4/CapSense_Processing.c ****     #else
 676:Generated_Source\PSoC4/CapSense_Processing.c ****         (void)fltrHistV; /* This parameter is unused in such configurations */
 677:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
 678:Generated_Source\PSoC4/CapSense_Processing.c **** 
 679:Generated_Source\PSoC4/CapSense_Processing.c ****     if (0u != (mode & CapSense_PROCESS_BASELINE))
 680:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 681:Generated_Source\PSoC4/CapSense_Processing.c ****         result = CapSense_FtUpdateBaseline(ptrRamWdgt, curSnsPtr, widgetType);
 682:Generated_Source\PSoC4/CapSense_Processing.c ****     }
 683:Generated_Source\PSoC4/CapSense_Processing.c **** 
 684:Generated_Source\PSoC4/CapSense_Processing.c ****     if (0u != (mode & CapSense_PROCESS_DIFFCOUNTS))
 685:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 686:Generated_Source\PSoC4/CapSense_Processing.c ****         CapSense_DpUpdateDifferences(ptrRamWdgt, curSnsPtr);
 687:Generated_Source\PSoC4/CapSense_Processing.c ****     }
 688:Generated_Source\PSoC4/CapSense_Processing.c ****     return result;
 689:Generated_Source\PSoC4/CapSense_Processing.c **** }
 690:Generated_Source\PSoC4/CapSense_Processing.c **** 
 691:Generated_Source\PSoC4/CapSense_Processing.c **** 
 692:Generated_Source\PSoC4/CapSense_Processing.c **** /*******************************************************************************
 693:Generated_Source\PSoC4/CapSense_Processing.c **** * Function Name: CapSense_DpProcessCsxWidgetStatus
 694:Generated_Source\PSoC4/CapSense_Processing.c **** ****************************************************************************//**
 695:Generated_Source\PSoC4/CapSense_Processing.c **** *
 696:Generated_Source\PSoC4/CapSense_Processing.c **** * \brief
 697:Generated_Source\PSoC4/CapSense_Processing.c **** *   Updates the status of the CSX widget in the Data Structure.
 698:Generated_Source\PSoC4/CapSense_Processing.c **** *
 699:Generated_Source\PSoC4/CapSense_Processing.c **** * \details
 700:Generated_Source\PSoC4/CapSense_Processing.c **** *  This API determines the type of widget and runs the appropriate function
 701:Generated_Source\PSoC4/CapSense_Processing.c **** *  that implements the status update algorithm for this type of widget.
 702:Generated_Source\PSoC4/CapSense_Processing.c **** *
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 16


 703:Generated_Source\PSoC4/CapSense_Processing.c **** *  When the widget-specific processing completes this API updates the snsStatus
 704:Generated_Source\PSoC4/CapSense_Processing.c **** *  and wdgtStatus registers in the data structure. The wdgtStatus register
 705:Generated_Source\PSoC4/CapSense_Processing.c **** *  is a bitmask were each bit corresponds to the specific widget identified by
 706:Generated_Source\PSoC4/CapSense_Processing.c **** *  the widget index. When the bit is set the widget is active (touched);
 707:Generated_Source\PSoC4/CapSense_Processing.c **** *
 708:Generated_Source\PSoC4/CapSense_Processing.c **** *  Depending on the type of widget the snsStatus register may contain either
 709:Generated_Source\PSoC4/CapSense_Processing.c **** *  status of each widget node (active/non-active) or in case of the CSX Touchpad
 710:Generated_Source\PSoC4/CapSense_Processing.c **** *  is contains the number of touches. In both cases 0 means that widget is not
 711:Generated_Source\PSoC4/CapSense_Processing.c **** *  active.
 712:Generated_Source\PSoC4/CapSense_Processing.c **** *
 713:Generated_Source\PSoC4/CapSense_Processing.c **** * \param widgetId     The widget ID number.
 714:Generated_Source\PSoC4/CapSense_Processing.c **** * \param ptrFlashWdgt The pointer to the Flash Widget Object.
 715:Generated_Source\PSoC4/CapSense_Processing.c **** *
 716:Generated_Source\PSoC4/CapSense_Processing.c **** *******************************************************************************/
 717:Generated_Source\PSoC4/CapSense_Processing.c **** void CapSense_DpProcessCsxWidgetStatus(uint32 widgetId, CapSense_FLASH_WD_STRUCT const *ptrFlashWdg
 718:Generated_Source\PSoC4/CapSense_Processing.c **** {
 719:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 sensorStatus;
 720:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 wdStatusIndex;
 721:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 wdStatusMask;
 722:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_WD_TYPE_ENUM widgetType;
 723:Generated_Source\PSoC4/CapSense_Processing.c **** 
 724:Generated_Source\PSoC4/CapSense_Processing.c ****     widgetType = (CapSense_WD_TYPE_ENUM)ptrFlashWdgt->wdgtType;
 725:Generated_Source\PSoC4/CapSense_Processing.c ****     sensorStatus = CapSense_dsRam.snsStatus[widgetId];
 726:Generated_Source\PSoC4/CapSense_Processing.c **** 
 727:Generated_Source\PSoC4/CapSense_Processing.c ****     switch (widgetType)
 728:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 729:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_BUTTON_WIDGET_EN)
 730:Generated_Source\PSoC4/CapSense_Processing.c ****         case CapSense_WD_BUTTON_E:
 731:Generated_Source\PSoC4/CapSense_Processing.c ****             sensorStatus = CapSense_DpProcessButton(sensorStatus, ptrFlashWdgt);
 732:Generated_Source\PSoC4/CapSense_Processing.c ****             break;
 733:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_BUTTON_WIDGET_EN) */
 734:Generated_Source\PSoC4/CapSense_Processing.c **** 
 735:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_CSX_MATRIX_WIDGET_EN)
 736:Generated_Source\PSoC4/CapSense_Processing.c ****         case CapSense_WD_MATRIX_BUTTON_E:
 737:Generated_Source\PSoC4/CapSense_Processing.c ****             sensorStatus = CapSense_DpProcessButton(sensorStatus, ptrFlashWdgt);
 738:Generated_Source\PSoC4/CapSense_Processing.c ****             break;
 739:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_CSX_MATRIX_WIDGET_EN) */
 740:Generated_Source\PSoC4/CapSense_Processing.c **** 
 741:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_CSX_TOUCHPAD_WIDGET_EN)
 742:Generated_Source\PSoC4/CapSense_Processing.c ****         case CapSense_WD_TOUCHPAD_E:
 743:Generated_Source\PSoC4/CapSense_Processing.c ****             sensorStatus = CapSense_DpProcessCsxTouchpad(sensorStatus, ptrFlashWdgt);
 744:Generated_Source\PSoC4/CapSense_Processing.c ****             break;
 745:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_CSX_TOUCHPAD_WIDGET_EN) */
 746:Generated_Source\PSoC4/CapSense_Processing.c **** 
 747:Generated_Source\PSoC4/CapSense_Processing.c ****     default:
 748:Generated_Source\PSoC4/CapSense_Processing.c ****         CYASSERT(0u);
 749:Generated_Source\PSoC4/CapSense_Processing.c ****         break;
 750:Generated_Source\PSoC4/CapSense_Processing.c ****     }
 751:Generated_Source\PSoC4/CapSense_Processing.c **** 
 752:Generated_Source\PSoC4/CapSense_Processing.c ****     /* Update sensor status in the data structure */
 753:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_dsRam.snsStatus[widgetId] = (CapSense_SNS_STS_TYPE)sensorStatus;
 754:Generated_Source\PSoC4/CapSense_Processing.c **** 
 755:Generated_Source\PSoC4/CapSense_Processing.c ****     /* The next two lines calculate index and bitmask of the widget status bit in the wdgtStatus ar
 756:Generated_Source\PSoC4/CapSense_Processing.c ****     wdStatusIndex = CapSense_GET_WDGT_STATUS_INDEX(widgetId);
 757:Generated_Source\PSoC4/CapSense_Processing.c ****     wdStatusMask = CapSense_GET_WDGT_STATUS_MASK(widgetId);
 758:Generated_Source\PSoC4/CapSense_Processing.c **** 
 759:Generated_Source\PSoC4/CapSense_Processing.c ****     /* Check if there are active sensors and update widget status accordingly */
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 17


 760:Generated_Source\PSoC4/CapSense_Processing.c ****     if (0u == sensorStatus)
 761:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 762:Generated_Source\PSoC4/CapSense_Processing.c ****         CapSense_dsRam.wdgtStatus[wdStatusIndex] &= ~wdStatusMask;
 763:Generated_Source\PSoC4/CapSense_Processing.c ****     }
 764:Generated_Source\PSoC4/CapSense_Processing.c ****     else
 765:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 766:Generated_Source\PSoC4/CapSense_Processing.c ****         CapSense_dsRam.wdgtStatus[wdStatusIndex] |= wdStatusMask;
 767:Generated_Source\PSoC4/CapSense_Processing.c ****     }
 768:Generated_Source\PSoC4/CapSense_Processing.c **** }
 769:Generated_Source\PSoC4/CapSense_Processing.c **** #endif /* #if CapSense_TOTAL_CSX_WIDGETS */
 770:Generated_Source\PSoC4/CapSense_Processing.c **** 
 771:Generated_Source\PSoC4/CapSense_Processing.c **** #if (0u != CapSense_TOTAL_ISX_WIDGETS)
 772:Generated_Source\PSoC4/CapSense_Processing.c **** /*******************************************************************************
 773:Generated_Source\PSoC4/CapSense_Processing.c **** * Function Name: CapSense_DpProcessIsxWidgetRawCounts
 774:Generated_Source\PSoC4/CapSense_Processing.c **** ****************************************************************************//**
 775:Generated_Source\PSoC4/CapSense_Processing.c **** *
 776:Generated_Source\PSoC4/CapSense_Processing.c **** * \brief
 777:Generated_Source\PSoC4/CapSense_Processing.c **** *  Performs default processing of the ISX raw counts.
 778:Generated_Source\PSoC4/CapSense_Processing.c **** *
 779:Generated_Source\PSoC4/CapSense_Processing.c **** * \details
 780:Generated_Source\PSoC4/CapSense_Processing.c **** *  Performs default processing of the ISX raw counts:
 781:Generated_Source\PSoC4/CapSense_Processing.c **** *   - Run Filters
 782:Generated_Source\PSoC4/CapSense_Processing.c **** *   - Update Baselines
 783:Generated_Source\PSoC4/CapSense_Processing.c **** *   - Update Differences
 784:Generated_Source\PSoC4/CapSense_Processing.c **** *   - Update Status.
 785:Generated_Source\PSoC4/CapSense_Processing.c **** *  The same process is applied to all the sensors of the specified widget.
 786:Generated_Source\PSoC4/CapSense_Processing.c **** *
 787:Generated_Source\PSoC4/CapSense_Processing.c **** * \param ptrFlashWdgt The pointer to the Flash widget structure.
 788:Generated_Source\PSoC4/CapSense_Processing.c **** *
 789:Generated_Source\PSoC4/CapSense_Processing.c **** * \return
 790:Generated_Source\PSoC4/CapSense_Processing.c **** *  Returns the status of the specified widget processing operation:
 791:Generated_Source\PSoC4/CapSense_Processing.c **** *  - CYRET_SUCCESS if operation was successfully completed;
 792:Generated_Source\PSoC4/CapSense_Processing.c **** *  - CapSense_PROCESS_BASELINE_FAILED if baseline processing of any
 793:Generated_Source\PSoC4/CapSense_Processing.c **** *    sensor of the specified widget failed. The result is concatenated with the index
 794:Generated_Source\PSoC4/CapSense_Processing.c **** *    of failed sensor.
 795:Generated_Source\PSoC4/CapSense_Processing.c **** *
 796:Generated_Source\PSoC4/CapSense_Processing.c **** *******************************************************************************/
 797:Generated_Source\PSoC4/CapSense_Processing.c **** uint32 CapSense_DpProcessIsxWidgetRawCounts(CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt)
 798:Generated_Source\PSoC4/CapSense_Processing.c **** {
 799:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 result = CYRET_SUCCESS;
 800:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 widgetType;
 801:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 snsCount;
 802:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_RAM_SNS_STRUCT *ptrSns;
 803:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrRamWdgt;
 804:Generated_Source\PSoC4/CapSense_Processing.c **** 
 805:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
 806:Generated_Source\PSoC4/CapSense_Processing.c ****         CapSense_PTR_FILTER_VARIANT fltrHistV;
 807:Generated_Source\PSoC4/CapSense_Processing.c **** 
 808:Generated_Source\PSoC4/CapSense_Processing.c ****         fltrHistV.ptr = ptrFlashWdgt->ptr2FltrHistory;
 809:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
 810:Generated_Source\PSoC4/CapSense_Processing.c **** 
 811:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrSns = ptrFlashWdgt->ptr2SnsRam;
 812:Generated_Source\PSoC4/CapSense_Processing.c ****     snsCount = ptrFlashWdgt->totalNumSns;
 813:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrRamWdgt = ptrFlashWdgt->ptr2WdgtRam;
 814:Generated_Source\PSoC4/CapSense_Processing.c ****     widgetType = ptrFlashWdgt->wdgtType;
 815:Generated_Source\PSoC4/CapSense_Processing.c **** 
 816:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_ISX_SKIP_OVSMPL_SPECIFIC_NODES)
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 18


 817:Generated_Source\PSoC4/CapSense_Processing.c ****         if (0u != ptrSns->resolution)
 818:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif
 819:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 820:Generated_Source\PSoC4/CapSense_Processing.c ****         for(;snsCount-- > 0u;)
 821:Generated_Source\PSoC4/CapSense_Processing.c ****         {
 822:Generated_Source\PSoC4/CapSense_Processing.c ****             #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
 823:Generated_Source\PSoC4/CapSense_Processing.c ****                 CapSense_FtRunEnabledFiltersInternal(fltrHistV, ptrSns, widgetType);
 824:Generated_Source\PSoC4/CapSense_Processing.c ****             #endif /* #if (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
 825:Generated_Source\PSoC4/CapSense_Processing.c **** 
 826:Generated_Source\PSoC4/CapSense_Processing.c ****             result = CapSense_FtUpdateBaseline(ptrRamWdgt, ptrSns, widgetType);
 827:Generated_Source\PSoC4/CapSense_Processing.c **** 
 828:Generated_Source\PSoC4/CapSense_Processing.c ****             #if (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN)
 829:Generated_Source\PSoC4/CapSense_Processing.c ****                 if (CYRET_SUCCESS != result)
 830:Generated_Source\PSoC4/CapSense_Processing.c ****                 {
 831:Generated_Source\PSoC4/CapSense_Processing.c ****                     result = CapSense_PROCESS_BASELINE_FAILED;
 832:Generated_Source\PSoC4/CapSense_Processing.c ****                 }
 833:Generated_Source\PSoC4/CapSense_Processing.c ****             #endif /* (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN) */
 834:Generated_Source\PSoC4/CapSense_Processing.c **** 
 835:Generated_Source\PSoC4/CapSense_Processing.c ****             CapSense_DpUpdateDifferences(ptrRamWdgt, ptrSns);
 836:Generated_Source\PSoC4/CapSense_Processing.c ****             ptrSns++;
 837:Generated_Source\PSoC4/CapSense_Processing.c **** 
 838:Generated_Source\PSoC4/CapSense_Processing.c ****             #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
 839:Generated_Source\PSoC4/CapSense_Processing.c ****                 CapSense_INC_FLTR_OBJ_VARIANT(0u, fltrHistV);
 840:Generated_Source\PSoC4/CapSense_Processing.c ****             #endif /* #if (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
 841:Generated_Source\PSoC4/CapSense_Processing.c ****         }
 842:Generated_Source\PSoC4/CapSense_Processing.c ****     }
 843:Generated_Source\PSoC4/CapSense_Processing.c **** 
 844:Generated_Source\PSoC4/CapSense_Processing.c ****     return result;
 845:Generated_Source\PSoC4/CapSense_Processing.c **** }
 846:Generated_Source\PSoC4/CapSense_Processing.c **** 
 847:Generated_Source\PSoC4/CapSense_Processing.c **** /*******************************************************************************
 848:Generated_Source\PSoC4/CapSense_Processing.c **** * Function Name: CapSense_DpProcessIsxSensorRawCountsExt
 849:Generated_Source\PSoC4/CapSense_Processing.c **** ****************************************************************************//**
 850:Generated_Source\PSoC4/CapSense_Processing.c **** *
 851:Generated_Source\PSoC4/CapSense_Processing.c **** * \brief
 852:Generated_Source\PSoC4/CapSense_Processing.c **** *   Performs customized processing of the ISX sensor raw counts.
 853:Generated_Source\PSoC4/CapSense_Processing.c **** *
 854:Generated_Source\PSoC4/CapSense_Processing.c **** * \details
 855:Generated_Source\PSoC4/CapSense_Processing.c **** *   Performs customized processing of the ISX sensor raw counts.
 856:Generated_Source\PSoC4/CapSense_Processing.c **** *
 857:Generated_Source\PSoC4/CapSense_Processing.c **** *   If all bits are set at once the default processing order will take place.
 858:Generated_Source\PSoC4/CapSense_Processing.c **** *   For the custom order this API can be called multiple times and execute one task at a time.
 859:Generated_Source\PSoC4/CapSense_Processing.c **** *
 860:Generated_Source\PSoC4/CapSense_Processing.c **** * \param ptrFlashWdgt The pointer to the Flash Widget Object.
 861:Generated_Source\PSoC4/CapSense_Processing.c **** * \param ptrSns       The pointer to the specific RAM Sensor Object.
 862:Generated_Source\PSoC4/CapSense_Processing.c **** * \param fltrHistV    The pointer to the Filter History Object in RAM associated with specific sens
 863:Generated_Source\PSoC4/CapSense_Processing.c **** * \param mode         The bit-mask with the data processing tasks to be executed.
 864:Generated_Source\PSoC4/CapSense_Processing.c **** *   The mode parameters can take the following values:
 865:Generated_Source\PSoC4/CapSense_Processing.c **** *    - CapSense_PROCESS_FILTER     (0x01) Run Firmware Filter
 866:Generated_Source\PSoC4/CapSense_Processing.c **** *    - CapSense_PROCESS_BASELINE   (0x02) Update Baselines
 867:Generated_Source\PSoC4/CapSense_Processing.c **** *    - CapSense_PROCESS_DIFFCOUNTS (0x04) Update Difference Counts
 868:Generated_Source\PSoC4/CapSense_Processing.c **** *    - CapSense_PROCESS_ALL               Execute all tasks
 869:Generated_Source\PSoC4/CapSense_Processing.c **** *
 870:Generated_Source\PSoC4/CapSense_Processing.c **** * \return
 871:Generated_Source\PSoC4/CapSense_Processing.c **** *  Returns the status of the specified sensor processing operation:
 872:Generated_Source\PSoC4/CapSense_Processing.c **** *  - CYRET_SUCCESS if operation was successfully completed;
 873:Generated_Source\PSoC4/CapSense_Processing.c **** *  - CapSense_PROCESS_BASELINE_FAILED if baseline processing of any
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 19


 874:Generated_Source\PSoC4/CapSense_Processing.c **** *    sensor of the specified widget failed. The result is concatenated with the index
 875:Generated_Source\PSoC4/CapSense_Processing.c **** *    of failed sensor.
 876:Generated_Source\PSoC4/CapSense_Processing.c **** *
 877:Generated_Source\PSoC4/CapSense_Processing.c **** *******************************************************************************/
 878:Generated_Source\PSoC4/CapSense_Processing.c **** uint32 CapSense_DpProcessIsxSensorRawCountsExt(
 879:Generated_Source\PSoC4/CapSense_Processing.c ****                 CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt,
 880:Generated_Source\PSoC4/CapSense_Processing.c ****                 CapSense_RAM_SNS_STRUCT *ptrSns,
 881:Generated_Source\PSoC4/CapSense_Processing.c ****                 CapSense_PTR_FILTER_VARIANT fltrHistV,
 882:Generated_Source\PSoC4/CapSense_Processing.c ****                 uint32 mode)
 883:Generated_Source\PSoC4/CapSense_Processing.c **** {
 884:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32  result = CYRET_SUCCESS;
 885:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32  widgetType;
 886:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrRamWdgt;
 887:Generated_Source\PSoC4/CapSense_Processing.c **** 
 888:Generated_Source\PSoC4/CapSense_Processing.c ****     widgetType = ptrFlashWdgt->wdgtType;
 889:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrRamWdgt = ptrFlashWdgt->ptr2WdgtRam;
 890:Generated_Source\PSoC4/CapSense_Processing.c **** 
 891:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
 892:Generated_Source\PSoC4/CapSense_Processing.c ****         if (0u != (mode & CapSense_PROCESS_FILTER))
 893:Generated_Source\PSoC4/CapSense_Processing.c ****         {
 894:Generated_Source\PSoC4/CapSense_Processing.c ****             CapSense_FtRunEnabledFiltersInternal(fltrHistV, ptrSns, widgetType);
 895:Generated_Source\PSoC4/CapSense_Processing.c ****         }
 896:Generated_Source\PSoC4/CapSense_Processing.c ****     #else
 897:Generated_Source\PSoC4/CapSense_Processing.c ****         (void)fltrHistV; /* This parameter is unused in such configurations */
 898:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
 899:Generated_Source\PSoC4/CapSense_Processing.c **** 
 900:Generated_Source\PSoC4/CapSense_Processing.c ****     if (0u != (mode & CapSense_PROCESS_BASELINE))
 901:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 902:Generated_Source\PSoC4/CapSense_Processing.c ****         result = CapSense_FtUpdateBaseline(ptrRamWdgt, ptrSns, widgetType);
 903:Generated_Source\PSoC4/CapSense_Processing.c ****     }
 904:Generated_Source\PSoC4/CapSense_Processing.c **** 
 905:Generated_Source\PSoC4/CapSense_Processing.c ****     if (0u != (mode & CapSense_PROCESS_DIFFCOUNTS))
 906:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 907:Generated_Source\PSoC4/CapSense_Processing.c ****         CapSense_DpUpdateDifferences(ptrRamWdgt, ptrSns);
 908:Generated_Source\PSoC4/CapSense_Processing.c ****     }
 909:Generated_Source\PSoC4/CapSense_Processing.c ****     return result;
 910:Generated_Source\PSoC4/CapSense_Processing.c **** }
 911:Generated_Source\PSoC4/CapSense_Processing.c **** 
 912:Generated_Source\PSoC4/CapSense_Processing.c **** 
 913:Generated_Source\PSoC4/CapSense_Processing.c **** /*******************************************************************************
 914:Generated_Source\PSoC4/CapSense_Processing.c **** * Function Name: CapSense_DpProcessIsxWidgetStatus
 915:Generated_Source\PSoC4/CapSense_Processing.c **** ****************************************************************************//**
 916:Generated_Source\PSoC4/CapSense_Processing.c **** *
 917:Generated_Source\PSoC4/CapSense_Processing.c **** * \brief
 918:Generated_Source\PSoC4/CapSense_Processing.c **** *   Updates the status of the ISX widget in the Data Structure.
 919:Generated_Source\PSoC4/CapSense_Processing.c **** *
 920:Generated_Source\PSoC4/CapSense_Processing.c **** * \details
 921:Generated_Source\PSoC4/CapSense_Processing.c **** *  This API determines the type of widget and runs the appropriate function
 922:Generated_Source\PSoC4/CapSense_Processing.c **** *  that implements the status update algorithm for this type of widget.
 923:Generated_Source\PSoC4/CapSense_Processing.c **** *
 924:Generated_Source\PSoC4/CapSense_Processing.c **** *  When the widget-specific processing completes this API updates the snsStatus
 925:Generated_Source\PSoC4/CapSense_Processing.c **** *  and wdgtStatus registers in the data structure. The wdgtStatus register
 926:Generated_Source\PSoC4/CapSense_Processing.c **** *  is a bitmask were each bit corresponds to the specific widget identified by
 927:Generated_Source\PSoC4/CapSense_Processing.c **** *  the widget index. When the bit is set the widget is active (touched);
 928:Generated_Source\PSoC4/CapSense_Processing.c **** *
 929:Generated_Source\PSoC4/CapSense_Processing.c **** *  Depending on the type of widget the snsStatus register may contain either
 930:Generated_Source\PSoC4/CapSense_Processing.c **** *  status of each widget node (active/non-active) or in case of the ISX Touchpad
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 20


 931:Generated_Source\PSoC4/CapSense_Processing.c **** *  is contains the number of touches. In both cases 0 means that widget is not
 932:Generated_Source\PSoC4/CapSense_Processing.c **** *  active.
 933:Generated_Source\PSoC4/CapSense_Processing.c **** *
 934:Generated_Source\PSoC4/CapSense_Processing.c **** * \param wdgtId       The widget index number.
 935:Generated_Source\PSoC4/CapSense_Processing.c **** * \param ptrFlashWdgt The pointer to the Flash Widget Object.
 936:Generated_Source\PSoC4/CapSense_Processing.c **** *
 937:Generated_Source\PSoC4/CapSense_Processing.c **** *******************************************************************************/
 938:Generated_Source\PSoC4/CapSense_Processing.c **** void CapSense_DpProcessIsxWidgetStatus(uint32 wdgtId, CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt)
 939:Generated_Source\PSoC4/CapSense_Processing.c **** {
 940:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 sensorStatus;
 941:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 wdStatusIndex;
 942:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 wdStatusMask;
 943:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_WD_TYPE_ENUM widgetType;
 944:Generated_Source\PSoC4/CapSense_Processing.c **** 
 945:Generated_Source\PSoC4/CapSense_Processing.c ****     widgetType = (CapSense_WD_TYPE_ENUM)ptrFlashWdgt->wdgtType;
 946:Generated_Source\PSoC4/CapSense_Processing.c ****     sensorStatus = CapSense_dsRam.snsStatus[wdgtId];
 947:Generated_Source\PSoC4/CapSense_Processing.c **** 
 948:Generated_Source\PSoC4/CapSense_Processing.c ****     switch (widgetType)
 949:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 950:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_PROXIMITY_WIDGET_EN)
 951:Generated_Source\PSoC4/CapSense_Processing.c ****         case CapSense_WD_PROXIMITY_E:
 952:Generated_Source\PSoC4/CapSense_Processing.c ****             sensorStatus = CapSense_DpProcessProximity(sensorStatus, ptrFlashWdgt);
 953:Generated_Source\PSoC4/CapSense_Processing.c ****             break;
 954:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_Proximity_WIDGET_EN) */
 955:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_ENCODERDIAL_WIDGET_EN)
 956:Generated_Source\PSoC4/CapSense_Processing.c ****         case CapSense_WD_ENCODERDIAL_E:
 957:Generated_Source\PSoC4/CapSense_Processing.c ****             sensorStatus = CapSense_DpProcessEncoderDial(sensorStatus, ptrFlashWdgt);
 958:Generated_Source\PSoC4/CapSense_Processing.c ****             break;
 959:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_Proximity_WIDGET_EN) */
 960:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_BUTTON_WIDGET_EN)
 961:Generated_Source\PSoC4/CapSense_Processing.c ****         case CapSense_WD_BUTTON_E:
 962:Generated_Source\PSoC4/CapSense_Processing.c ****             sensorStatus = CapSense_DpProcessButton(sensorStatus, ptrFlashWdgt);
 963:Generated_Source\PSoC4/CapSense_Processing.c ****             break;
 964:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_Proximity_WIDGET_EN) */
 965:Generated_Source\PSoC4/CapSense_Processing.c **** 
 966:Generated_Source\PSoC4/CapSense_Processing.c ****     default:
 967:Generated_Source\PSoC4/CapSense_Processing.c ****         CYASSERT(0u);
 968:Generated_Source\PSoC4/CapSense_Processing.c ****         break;
 969:Generated_Source\PSoC4/CapSense_Processing.c ****     }
 970:Generated_Source\PSoC4/CapSense_Processing.c **** 
 971:Generated_Source\PSoC4/CapSense_Processing.c ****     /* Update sensor status in the data structure */
 972:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_dsRam.snsStatus[wdgtId] = (CapSense_SNS_STS_TYPE)sensorStatus;
 973:Generated_Source\PSoC4/CapSense_Processing.c **** 
 974:Generated_Source\PSoC4/CapSense_Processing.c ****     /* The next two lines calculate index and bitmask of the widget status bit in the wdgtStatus ar
 975:Generated_Source\PSoC4/CapSense_Processing.c ****     wdStatusIndex = CapSense_GET_WDGT_STATUS_INDEX(wdgtId);
 976:Generated_Source\PSoC4/CapSense_Processing.c ****     wdStatusMask = CapSense_GET_WDGT_STATUS_MASK(wdgtId);
 977:Generated_Source\PSoC4/CapSense_Processing.c **** 
 978:Generated_Source\PSoC4/CapSense_Processing.c ****     /* Check if there are active sensors and update widget status accordingly */
 979:Generated_Source\PSoC4/CapSense_Processing.c ****     if (0u == sensorStatus)
 980:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 981:Generated_Source\PSoC4/CapSense_Processing.c ****         CapSense_dsRam.wdgtStatus[wdStatusIndex] &= ~wdStatusMask;
 982:Generated_Source\PSoC4/CapSense_Processing.c ****     }
 983:Generated_Source\PSoC4/CapSense_Processing.c ****     else
 984:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 985:Generated_Source\PSoC4/CapSense_Processing.c ****         CapSense_dsRam.wdgtStatus[wdStatusIndex] |= wdStatusMask;
 986:Generated_Source\PSoC4/CapSense_Processing.c ****     }
 987:Generated_Source\PSoC4/CapSense_Processing.c **** }
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 21


 988:Generated_Source\PSoC4/CapSense_Processing.c **** #endif /* #if CapSense_TOTAL_ISX_WIDGETS */
 989:Generated_Source\PSoC4/CapSense_Processing.c **** 
 990:Generated_Source\PSoC4/CapSense_Processing.c **** #if (0u != CapSense_TOTAL_CSD_WIDGETS)
 991:Generated_Source\PSoC4/CapSense_Processing.c **** /*******************************************************************************
 992:Generated_Source\PSoC4/CapSense_Processing.c **** * Function Name: CapSense_DpProcessCsdWidgetRawCounts
 993:Generated_Source\PSoC4/CapSense_Processing.c **** ****************************************************************************//**
 994:Generated_Source\PSoC4/CapSense_Processing.c **** *
 995:Generated_Source\PSoC4/CapSense_Processing.c **** * \brief
 996:Generated_Source\PSoC4/CapSense_Processing.c **** *   Performs default processing for the CSD widget raw counts.
 997:Generated_Source\PSoC4/CapSense_Processing.c **** *
 998:Generated_Source\PSoC4/CapSense_Processing.c **** * \details
 999:Generated_Source\PSoC4/CapSense_Processing.c **** *   Performs default processing for the CSD widget raw counts:
1000:Generated_Source\PSoC4/CapSense_Processing.c **** *    - Run Filters
1001:Generated_Source\PSoC4/CapSense_Processing.c **** *    - Update Thresholds (FW Auto-tuning)
1002:Generated_Source\PSoC4/CapSense_Processing.c **** *    - Update Baselines
1003:Generated_Source\PSoC4/CapSense_Processing.c **** *    - Update Differences.
1004:Generated_Source\PSoC4/CapSense_Processing.c **** *   The process is applied to all widget's sensors.
1005:Generated_Source\PSoC4/CapSense_Processing.c **** *
1006:Generated_Source\PSoC4/CapSense_Processing.c **** * \param ptrFlashWdgt The pointer to the Flash Widget Object.
1007:Generated_Source\PSoC4/CapSense_Processing.c **** *
1008:Generated_Source\PSoC4/CapSense_Processing.c **** * \return
1009:Generated_Source\PSoC4/CapSense_Processing.c **** *  Returns the status of the specified widget processing operation:
1010:Generated_Source\PSoC4/CapSense_Processing.c **** *  - CYRET_SUCCESS if operation was successfully completed;
1011:Generated_Source\PSoC4/CapSense_Processing.c **** *  - CapSense_PROCESS_BASELINE_FAILED if baseline processing of any
1012:Generated_Source\PSoC4/CapSense_Processing.c **** *    sensor of the specified widget failed. The result is concatenated with the index
1013:Generated_Source\PSoC4/CapSense_Processing.c **** *    of failed sensor.
1014:Generated_Source\PSoC4/CapSense_Processing.c **** *
1015:Generated_Source\PSoC4/CapSense_Processing.c **** *******************************************************************************/
1016:Generated_Source\PSoC4/CapSense_Processing.c **** uint32 CapSense_DpProcessCsdWidgetRawCounts(CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt)
1017:Generated_Source\PSoC4/CapSense_Processing.c **** {
1018:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32  result = CYRET_SUCCESS;
1019:Generated_Source\PSoC4/CapSense_Processing.c **** 
1020:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN)
1021:Generated_Source\PSoC4/CapSense_Processing.c ****         uint32 bslnTstResult = CYRET_SUCCESS;
1022:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN) */
1023:Generated_Source\PSoC4/CapSense_Processing.c **** 
1024:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32  widgetType;
1025:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32  snsId;
1026:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_RAM_SNS_STRUCT *ptrSnsTmp;
1027:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrRamWdgt;
1028:Generated_Source\PSoC4/CapSense_Processing.c **** 
1029:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
1030:Generated_Source\PSoC4/CapSense_Processing.c ****         /* The noise envelope data is available only when Full CSD Auto-Tuning is enabled */
1031:Generated_Source\PSoC4/CapSense_Processing.c ****         SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT *ptrNoiseEnvelope;
1032:Generated_Source\PSoC4/CapSense_Processing.c ****         #if (CapSense_ENABLE == CapSense_PROXIMITY_WIDGET_EN)
1033:Generated_Source\PSoC4/CapSense_Processing.c ****             uint32  proximityThreshold;
1034:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* (0 != CapSense_PROXIMITY_WIDGET_EN) */
1035:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
1036:Generated_Source\PSoC4/CapSense_Processing.c **** 
1037:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
1038:Generated_Source\PSoC4/CapSense_Processing.c ****         CapSense_PTR_FILTER_VARIANT fltrHistV;
1039:Generated_Source\PSoC4/CapSense_Processing.c **** 
1040:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Determine if widget type is proximity */
1041:Generated_Source\PSoC4/CapSense_Processing.c ****         uint32 isProxWdgt = (CapSense_GET_WIDGET_TYPE(ptrFlashWdgt) == CapSense_WD_PROXIMITY_E) ? 1
1042:Generated_Source\PSoC4/CapSense_Processing.c **** 
1043:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Get pointer to the filter history object */
1044:Generated_Source\PSoC4/CapSense_Processing.c ****         fltrHistV.ptr = ptrFlashWdgt->ptr2FltrHistory;
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 22


1045:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
1046:Generated_Source\PSoC4/CapSense_Processing.c **** 
1047:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrSnsTmp = ptrFlashWdgt->ptr2SnsRam;
1048:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrRamWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdgt->ptr2WdgtRam;
1049:Generated_Source\PSoC4/CapSense_Processing.c ****     widgetType = ptrFlashWdgt->wdgtType;
1050:Generated_Source\PSoC4/CapSense_Processing.c **** 
1051:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
1052:Generated_Source\PSoC4/CapSense_Processing.c ****         ptrNoiseEnvelope = ptrFlashWdgt->ptr2NoiseEnvlp;
1053:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
1054:Generated_Source\PSoC4/CapSense_Processing.c **** 
1055:Generated_Source\PSoC4/CapSense_Processing.c ****     /* Iterate through all widget's sensors */
1056:Generated_Source\PSoC4/CapSense_Processing.c ****     for(snsId = 0u; snsId < ptrFlashWdgt->totalNumSns; snsId++)
1057:Generated_Source\PSoC4/CapSense_Processing.c ****     {
1058:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Run all enabled filter on specified widget's sensor */
1059:Generated_Source\PSoC4/CapSense_Processing.c ****         #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
1060:Generated_Source\PSoC4/CapSense_Processing.c ****             CapSense_FtRunEnabledFiltersInternal(fltrHistV, ptrSnsTmp, widgetType);
1061:Generated_Source\PSoC4/CapSense_Processing.c ****             #if (CapSense_ALP_FILTER_EN)
1062:Generated_Source\PSoC4/CapSense_Processing.c ****                 CapSense_ConfigRunALPInternal(fltrHistV, ptrRamWdgt, ptrSnsTmp, widgetType);
1063:Generated_Source\PSoC4/CapSense_Processing.c ****             #endif
1064:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* #if (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
1065:Generated_Source\PSoC4/CapSense_Processing.c **** 
1066:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Run auto-tuning activities */
1067:Generated_Source\PSoC4/CapSense_Processing.c ****         #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
1068:Generated_Source\PSoC4/CapSense_Processing.c ****             SmartSense_RunNoiseEnvelope(ptrSnsTmp->raw[0u], ptrRamWdgt->sigPFC, ptrNoiseEnvelope);
1069:Generated_Source\PSoC4/CapSense_Processing.c ****             CapSense_DpUpdateThresholds(ptrRamWdgt, ptrNoiseEnvelope, snsId);
1070:Generated_Source\PSoC4/CapSense_Processing.c **** 
1071:Generated_Source\PSoC4/CapSense_Processing.c ****             /* Calculate Proximity Touch Threshold in SmartSense mode based on Finger Threshold and
1072:Generated_Source\PSoC4/CapSense_Processing.c ****             #if (CapSense_ENABLE == CapSense_PROXIMITY_WIDGET_EN)
1073:Generated_Source\PSoC4/CapSense_Processing.c ****                 if (CapSense_WD_PROXIMITY_E == CapSense_GET_WIDGET_TYPE(ptrFlashWdgt))
1074:Generated_Source\PSoC4/CapSense_Processing.c ****                 {
1075:Generated_Source\PSoC4/CapSense_Processing.c ****                     proximityThreshold = ((uint32)ptrRamWdgt->fingerTh * CapSense_PROX_TOUCH_COEFF)
1076:Generated_Source\PSoC4/CapSense_Processing.c ****                     if ((((1Lu) << CapSense_THRESHOLD_SIZE) - 1u) < proximityThreshold)
1077:Generated_Source\PSoC4/CapSense_Processing.c ****                     {
1078:Generated_Source\PSoC4/CapSense_Processing.c ****                         proximityThreshold = ((1Lu) << CapSense_THRESHOLD_SIZE) - 1u;
1079:Generated_Source\PSoC4/CapSense_Processing.c ****                     }
1080:Generated_Source\PSoC4/CapSense_Processing.c ****                     ((CapSense_RAM_WD_PROXIMITY_STRUCT *)ptrFlashWdgt->ptr2WdgtRam)->proxTouchTh =
1081:Generated_Source\PSoC4/CapSense_Processing.c ****                         (CapSense_THRESHOLD_TYPE)proximityThreshold;
1082:Generated_Source\PSoC4/CapSense_Processing.c ****                 }
1083:Generated_Source\PSoC4/CapSense_Processing.c ****             #endif /* (0 != CapSense_PROXIMITY_WIDGET_EN) */
1084:Generated_Source\PSoC4/CapSense_Processing.c **** 
1085:Generated_Source\PSoC4/CapSense_Processing.c ****             /* Move to next noise-envelope object */
1086:Generated_Source\PSoC4/CapSense_Processing.c ****             ptrNoiseEnvelope++;
1087:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
1088:Generated_Source\PSoC4/CapSense_Processing.c **** 
1089:Generated_Source\PSoC4/CapSense_Processing.c ****         #if (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN)
1090:Generated_Source\PSoC4/CapSense_Processing.c ****             bslnTstResult = CapSense_FtUpdateBaseline(ptrRamWdgt, ptrSnsTmp, widgetType);
1091:Generated_Source\PSoC4/CapSense_Processing.c ****             if ((CYRET_SUCCESS != bslnTstResult) && (CYRET_SUCCESS == result))
1092:Generated_Source\PSoC4/CapSense_Processing.c ****             {
1093:Generated_Source\PSoC4/CapSense_Processing.c ****                 result = snsId | CapSense_PROCESS_BASELINE_FAILED;
1094:Generated_Source\PSoC4/CapSense_Processing.c ****             }
1095:Generated_Source\PSoC4/CapSense_Processing.c ****         #else /* (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN) */
1096:Generated_Source\PSoC4/CapSense_Processing.c ****             result = CapSense_FtUpdateBaseline(ptrRamWdgt, ptrSnsTmp, widgetType);
1097:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN) */
1098:Generated_Source\PSoC4/CapSense_Processing.c **** 
1099:Generated_Source\PSoC4/CapSense_Processing.c ****         CapSense_DpUpdateDifferences(ptrRamWdgt, ptrSnsTmp);
1100:Generated_Source\PSoC4/CapSense_Processing.c **** 
1101:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Move to next sensor object */
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 23


1102:Generated_Source\PSoC4/CapSense_Processing.c ****         ptrSnsTmp++;
1103:Generated_Source\PSoC4/CapSense_Processing.c **** 
1104:Generated_Source\PSoC4/CapSense_Processing.c ****         #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
1105:Generated_Source\PSoC4/CapSense_Processing.c ****             /* Move to the next filter history object */
1106:Generated_Source\PSoC4/CapSense_Processing.c ****             CapSense_INC_FLTR_OBJ_VARIANT(isProxWdgt, fltrHistV);
1107:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* #if (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
1108:Generated_Source\PSoC4/CapSense_Processing.c ****     }
1109:Generated_Source\PSoC4/CapSense_Processing.c ****     return result;
1110:Generated_Source\PSoC4/CapSense_Processing.c **** }
1111:Generated_Source\PSoC4/CapSense_Processing.c **** 
1112:Generated_Source\PSoC4/CapSense_Processing.c **** 
1113:Generated_Source\PSoC4/CapSense_Processing.c **** /*******************************************************************************
1114:Generated_Source\PSoC4/CapSense_Processing.c **** * Function Name: CapSense_DpProcessCsdSensorRawCountsExt
1115:Generated_Source\PSoC4/CapSense_Processing.c **** ****************************************************************************//**
1116:Generated_Source\PSoC4/CapSense_Processing.c **** *
1117:Generated_Source\PSoC4/CapSense_Processing.c **** * \brief
1118:Generated_Source\PSoC4/CapSense_Processing.c **** *   Performs customized processing of the CSD sensor raw counts.
1119:Generated_Source\PSoC4/CapSense_Processing.c **** *
1120:Generated_Source\PSoC4/CapSense_Processing.c **** * \details
1121:Generated_Source\PSoC4/CapSense_Processing.c **** *   Performs customized processing of the CSD sensor raw counts.
1122:Generated_Source\PSoC4/CapSense_Processing.c **** *
1123:Generated_Source\PSoC4/CapSense_Processing.c **** *   Note that this API updates data associated only with the sensor. It cannot be used to update
1124:Generated_Source\PSoC4/CapSense_Processing.c **** *   widget status.
1125:Generated_Source\PSoC4/CapSense_Processing.c **** *
1126:Generated_Source\PSoC4/CapSense_Processing.c **** * \param ptrFlashWdgt The pointer to the Flash widget structure.
1127:Generated_Source\PSoC4/CapSense_Processing.c **** * \param curSnsPtr    The pointer to the sensor object in RAM.
1128:Generated_Source\PSoC4/CapSense_Processing.c **** * \param fltrHistV    The pointer to the Filter History Object in RAM.
1129:Generated_Source\PSoC4/CapSense_Processing.c **** * \param mode         The bit-mask with the data processing tasks to be executed.
1130:Generated_Source\PSoC4/CapSense_Processing.c **** *   The mode parameters can take the following values:
1131:Generated_Source\PSoC4/CapSense_Processing.c **** *    - CapSense_PROCESS_FILTER     (0x01) Run Firmware Filter
1132:Generated_Source\PSoC4/CapSense_Processing.c **** *    - CapSense_PROCESS_BASELINE   (0x02) Update Baselines
1133:Generated_Source\PSoC4/CapSense_Processing.c **** *    - CapSense_PROCESS_DIFFCOUNTS (0x04) Update Difference Counts
1134:Generated_Source\PSoC4/CapSense_Processing.c **** *    - CapSense_PROCESS_CALC_NOISE (0x08) Calculate Noise (only if FW Tuning is enabled)
1135:Generated_Source\PSoC4/CapSense_Processing.c **** *    - CapSense_PROCESS_THRESHOLDS (0x10) Update Thresholds (only if FW Tuning is enabled)
1136:Generated_Source\PSoC4/CapSense_Processing.c **** *    - CapSense_PROCESS_ALL               Execute all tasks
1137:Generated_Source\PSoC4/CapSense_Processing.c **** *
1138:Generated_Source\PSoC4/CapSense_Processing.c **** * \return
1139:Generated_Source\PSoC4/CapSense_Processing.c **** *  Returns the status of the specified sensor processing operation:
1140:Generated_Source\PSoC4/CapSense_Processing.c **** *  - CYRET_SUCCESS if operation was successfully completed.
1141:Generated_Source\PSoC4/CapSense_Processing.c **** *  - CapSense_PROCESS_BASELINE_FAILED if baseline processing of any
1142:Generated_Source\PSoC4/CapSense_Processing.c **** *    sensor of the specified widget failed. The result is concatenated with the index
1143:Generated_Source\PSoC4/CapSense_Processing.c **** *    of failed sensor.
1144:Generated_Source\PSoC4/CapSense_Processing.c **** *
1145:Generated_Source\PSoC4/CapSense_Processing.c **** *******************************************************************************/
1146:Generated_Source\PSoC4/CapSense_Processing.c **** uint32 CapSense_DpProcessCsdSensorRawCountsExt(
1147:Generated_Source\PSoC4/CapSense_Processing.c ****                 CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt,
1148:Generated_Source\PSoC4/CapSense_Processing.c ****                 CapSense_RAM_SNS_STRUCT *curSnsPtr,
1149:Generated_Source\PSoC4/CapSense_Processing.c ****                 CapSense_PTR_FILTER_VARIANT fltrHistV,
1150:Generated_Source\PSoC4/CapSense_Processing.c ****                  uint32 mode)
1151:Generated_Source\PSoC4/CapSense_Processing.c **** {
1152:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 result = CYRET_SUCCESS;
1153:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32  widgetType;
1154:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrRamWdgt;
1155:Generated_Source\PSoC4/CapSense_Processing.c **** 
1156:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
1157:Generated_Source\PSoC4/CapSense_Processing.c ****         SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT *ptrNoiseEnvelope;
1158:Generated_Source\PSoC4/CapSense_Processing.c ****         #if (CapSense_ENABLE == CapSense_PROXIMITY_WIDGET_EN)
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 24


1159:Generated_Source\PSoC4/CapSense_Processing.c ****             uint32  proximityThreshold;
1160:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* (0 != CapSense_PROXIMITY_WIDGET_EN) */
1161:Generated_Source\PSoC4/CapSense_Processing.c **** 
1162:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Need to specify pointer to corresponding sensor's noise-envelope object.*/
1163:Generated_Source\PSoC4/CapSense_Processing.c ****         ptrNoiseEnvelope = ptrFlashWdgt->ptr2NoiseEnvlp;
1164:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
1165:Generated_Source\PSoC4/CapSense_Processing.c **** 
1166:Generated_Source\PSoC4/CapSense_Processing.c ****     widgetType = ptrFlashWdgt->wdgtType;
1167:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrRamWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdgt->ptr2WdgtRam;
1168:Generated_Source\PSoC4/CapSense_Processing.c **** 
1169:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
1170:Generated_Source\PSoC4/CapSense_Processing.c ****         if (0u != (mode & CapSense_PROCESS_FILTER))
1171:Generated_Source\PSoC4/CapSense_Processing.c ****         {
1172:Generated_Source\PSoC4/CapSense_Processing.c ****             CapSense_FtRunEnabledFiltersInternal(fltrHistV, curSnsPtr, widgetType);
1173:Generated_Source\PSoC4/CapSense_Processing.c ****             #if (CapSense_ALP_FILTER_EN)
1174:Generated_Source\PSoC4/CapSense_Processing.c ****                 CapSense_ConfigRunALPInternal(fltrHistV, ptrRamWdgt, curSnsPtr, widgetType);
1175:Generated_Source\PSoC4/CapSense_Processing.c ****             #endif
1176:Generated_Source\PSoC4/CapSense_Processing.c ****         }
1177:Generated_Source\PSoC4/CapSense_Processing.c ****     #else
1178:Generated_Source\PSoC4/CapSense_Processing.c ****         (void)fltrHistV; /* This parameter is unused in such configurations */
1179:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
1180:Generated_Source\PSoC4/CapSense_Processing.c **** 
1181:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
1182:Generated_Source\PSoC4/CapSense_Processing.c ****         if (0u != (mode & CapSense_PROCESS_CALC_NOISE))
1183:Generated_Source\PSoC4/CapSense_Processing.c ****         {
1184:Generated_Source\PSoC4/CapSense_Processing.c ****             SmartSense_RunNoiseEnvelope(curSnsPtr->raw[0u], ptrRamWdgt->sigPFC, ptrNoiseEnvelope);
1185:Generated_Source\PSoC4/CapSense_Processing.c ****         }
1186:Generated_Source\PSoC4/CapSense_Processing.c **** 
1187:Generated_Source\PSoC4/CapSense_Processing.c ****         if (0u != (mode & CapSense_PROCESS_THRESHOLDS))
1188:Generated_Source\PSoC4/CapSense_Processing.c ****         {
1189:Generated_Source\PSoC4/CapSense_Processing.c ****             CapSense_DpUpdateThresholds(ptrRamWdgt, ptrNoiseEnvelope, 0u);
1190:Generated_Source\PSoC4/CapSense_Processing.c **** 
1191:Generated_Source\PSoC4/CapSense_Processing.c ****             /* Calculate Proximity Touch Threshold in SmartSense mode based on Finger Threshold and
1192:Generated_Source\PSoC4/CapSense_Processing.c ****             #if (CapSense_ENABLE == CapSense_PROXIMITY_WIDGET_EN)
1193:Generated_Source\PSoC4/CapSense_Processing.c ****                 if (CapSense_WD_PROXIMITY_E == CapSense_GET_WIDGET_TYPE(ptrFlashWdgt))
1194:Generated_Source\PSoC4/CapSense_Processing.c ****                 {
1195:Generated_Source\PSoC4/CapSense_Processing.c ****                     proximityThreshold = ((uint32)ptrRamWdgt->fingerTh * CapSense_PROX_TOUCH_COEFF)
1196:Generated_Source\PSoC4/CapSense_Processing.c ****                     if ((((1Lu) << CapSense_THRESHOLD_SIZE) - 1u) < proximityThreshold)
1197:Generated_Source\PSoC4/CapSense_Processing.c ****                     {
1198:Generated_Source\PSoC4/CapSense_Processing.c ****                         proximityThreshold = ((1Lu) << CapSense_THRESHOLD_SIZE) - 1u;
1199:Generated_Source\PSoC4/CapSense_Processing.c ****                     }
1200:Generated_Source\PSoC4/CapSense_Processing.c ****                     ((CapSense_RAM_WD_PROXIMITY_STRUCT *)ptrFlashWdgt->ptr2WdgtRam)->proxTouchTh =
1201:Generated_Source\PSoC4/CapSense_Processing.c ****                         (CapSense_THRESHOLD_TYPE)proximityThreshold;
1202:Generated_Source\PSoC4/CapSense_Processing.c ****                 }
1203:Generated_Source\PSoC4/CapSense_Processing.c ****             #endif /* (0 != CapSense_PROXIMITY_WIDGET_EN) */
1204:Generated_Source\PSoC4/CapSense_Processing.c ****         }
1205:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
1206:Generated_Source\PSoC4/CapSense_Processing.c **** 
1207:Generated_Source\PSoC4/CapSense_Processing.c ****     if (0u != (mode & CapSense_PROCESS_BASELINE))
1208:Generated_Source\PSoC4/CapSense_Processing.c ****     {
1209:Generated_Source\PSoC4/CapSense_Processing.c ****         result = CapSense_FtUpdateBaseline(ptrRamWdgt, curSnsPtr, widgetType);
1210:Generated_Source\PSoC4/CapSense_Processing.c ****     }
1211:Generated_Source\PSoC4/CapSense_Processing.c **** 
1212:Generated_Source\PSoC4/CapSense_Processing.c ****     if (0u != (mode & CapSense_PROCESS_DIFFCOUNTS))
1213:Generated_Source\PSoC4/CapSense_Processing.c ****     {
1214:Generated_Source\PSoC4/CapSense_Processing.c ****         CapSense_DpUpdateDifferences(ptrRamWdgt, curSnsPtr);
1215:Generated_Source\PSoC4/CapSense_Processing.c ****     }
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 25


1216:Generated_Source\PSoC4/CapSense_Processing.c ****     return result;
1217:Generated_Source\PSoC4/CapSense_Processing.c **** }
1218:Generated_Source\PSoC4/CapSense_Processing.c **** 
1219:Generated_Source\PSoC4/CapSense_Processing.c **** /*******************************************************************************
1220:Generated_Source\PSoC4/CapSense_Processing.c **** * Function Name: CapSense_DpProcessCsdWidgetStatus
1221:Generated_Source\PSoC4/CapSense_Processing.c **** ****************************************************************************//**
1222:Generated_Source\PSoC4/CapSense_Processing.c **** *
1223:Generated_Source\PSoC4/CapSense_Processing.c **** * \brief
1224:Generated_Source\PSoC4/CapSense_Processing.c **** *  Runs the status processing of the CSD widget and updates it in the Data Structure.
1225:Generated_Source\PSoC4/CapSense_Processing.c **** *
1226:Generated_Source\PSoC4/CapSense_Processing.c **** * \details
1227:Generated_Source\PSoC4/CapSense_Processing.c **** *  This API determines the widget type and calls the appropriate low-level processing
1228:Generated_Source\PSoC4/CapSense_Processing.c **** *  function. Based on the returned results it updates the widget and sensor
1229:Generated_Source\PSoC4/CapSense_Processing.c **** *  status in the data structure. Any widget specific registers like the centroid
1230:Generated_Source\PSoC4/CapSense_Processing.c **** *  position are updated directly in the low-level processing function.
1231:Generated_Source\PSoC4/CapSense_Processing.c **** *
1232:Generated_Source\PSoC4/CapSense_Processing.c **** *  When the widget-specific processing completes this API updates the snsStatus
1233:Generated_Source\PSoC4/CapSense_Processing.c **** *  and wdgtStatus registers in the data structure. The wdgtStatus register
1234:Generated_Source\PSoC4/CapSense_Processing.c **** *  is a bitmask were each bit corresponds to the specific widget identified by
1235:Generated_Source\PSoC4/CapSense_Processing.c **** *  the widget index. When the bit is set the widget is active (touched);
1236:Generated_Source\PSoC4/CapSense_Processing.c **** *
1237:Generated_Source\PSoC4/CapSense_Processing.c **** *  The snsStatus register for CSD widgets contains status of each widget sensor
1238:Generated_Source\PSoC4/CapSense_Processing.c **** *  (active/non-active). Each bit corresponds to one sensor. In case of the
1239:Generated_Source\PSoC4/CapSense_Processing.c **** *  Proximity widget two bits are used per sensor: one for proximity status and
1240:Generated_Source\PSoC4/CapSense_Processing.c **** *  second for the touch status.
1241:Generated_Source\PSoC4/CapSense_Processing.c **** *
1242:Generated_Source\PSoC4/CapSense_Processing.c **** * \param widgetId      The widget index number.
1243:Generated_Source\PSoC4/CapSense_Processing.c **** * \param ptrFlashWdgt  The pointer to the Flash widget structure.
1244:Generated_Source\PSoC4/CapSense_Processing.c **** *
1245:Generated_Source\PSoC4/CapSense_Processing.c **** *******************************************************************************/
1246:Generated_Source\PSoC4/CapSense_Processing.c **** void CapSense_DpProcessCsdWidgetStatus(uint32 widgetId, CapSense_FLASH_WD_STRUCT const *ptrFlashWdg
1247:Generated_Source\PSoC4/CapSense_Processing.c **** {
1248:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 sensorStatus;
1249:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 wdStatusIndex;
1250:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 wdStatusMask;
1251:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_WD_TYPE_ENUM widgetType;
1252:Generated_Source\PSoC4/CapSense_Processing.c **** 
1253:Generated_Source\PSoC4/CapSense_Processing.c ****     widgetType = (CapSense_WD_TYPE_ENUM)ptrFlashWdgt->wdgtType;
1254:Generated_Source\PSoC4/CapSense_Processing.c ****     sensorStatus = CapSense_dsRam.snsStatus[widgetId];
1255:Generated_Source\PSoC4/CapSense_Processing.c **** 
1256:Generated_Source\PSoC4/CapSense_Processing.c ****     switch (widgetType)
1257:Generated_Source\PSoC4/CapSense_Processing.c ****     {
1258:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_BUTTON_WIDGET_EN)
1259:Generated_Source\PSoC4/CapSense_Processing.c ****         case CapSense_WD_BUTTON_E:
1260:Generated_Source\PSoC4/CapSense_Processing.c ****             sensorStatus = CapSense_DpProcessButton(sensorStatus, ptrFlashWdgt);
1261:Generated_Source\PSoC4/CapSense_Processing.c ****             break;
1262:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_BUTTON_WIDGET_EN) */
1263:Generated_Source\PSoC4/CapSense_Processing.c **** 
1264:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_SLIDER_WIDGET_EN)
1265:Generated_Source\PSoC4/CapSense_Processing.c ****         case CapSense_WD_LINEAR_SLIDER_E:
1266:Generated_Source\PSoC4/CapSense_Processing.c ****         case CapSense_WD_RADIAL_SLIDER_E:
1267:Generated_Source\PSoC4/CapSense_Processing.c ****             sensorStatus = CapSense_DpProcessSlider(sensorStatus, ptrFlashWdgt);
1268:Generated_Source\PSoC4/CapSense_Processing.c ****             break;
1269:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_SLIDER_WIDGET_EN) */
1270:Generated_Source\PSoC4/CapSense_Processing.c **** 
1271:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_CSD_MATRIX_WIDGET_EN)
1272:Generated_Source\PSoC4/CapSense_Processing.c ****         case CapSense_WD_MATRIX_BUTTON_E:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 26


1273:Generated_Source\PSoC4/CapSense_Processing.c ****             sensorStatus = CapSense_DpProcessCsdMatrix(sensorStatus, ptrFlashWdgt);
1274:Generated_Source\PSoC4/CapSense_Processing.c ****             break;
1275:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_CSD_MATRIX_WIDGET_EN) */
1276:Generated_Source\PSoC4/CapSense_Processing.c **** 
1277:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_CSD_TOUCHPAD_WIDGET_EN)
1278:Generated_Source\PSoC4/CapSense_Processing.c ****         case CapSense_WD_TOUCHPAD_E:
1279:Generated_Source\PSoC4/CapSense_Processing.c ****             sensorStatus = CapSense_DpProcessCsdTouchpad(sensorStatus, ptrFlashWdgt);
1280:Generated_Source\PSoC4/CapSense_Processing.c ****             #if (0u != CapSense_BALLISTIC_MULTIPLIER_EN)
1281:Generated_Source\PSoC4/CapSense_Processing.c ****                 CapSense_RunBallisticMultiplier(widgetId);
1282:Generated_Source\PSoC4/CapSense_Processing.c ****             #endif /* (0u != CapSense_BALLISTIC_MULTIPLIER_EN) */
1283:Generated_Source\PSoC4/CapSense_Processing.c ****             break;
1284:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1285:Generated_Source\PSoC4/CapSense_Processing.c **** 
1286:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_PROXIMITY_WIDGET_EN)
1287:Generated_Source\PSoC4/CapSense_Processing.c ****         case CapSense_WD_PROXIMITY_E:
1288:Generated_Source\PSoC4/CapSense_Processing.c ****             sensorStatus = CapSense_DpProcessProximity(sensorStatus, ptrFlashWdgt);
1289:Generated_Source\PSoC4/CapSense_Processing.c ****             break;
1290:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_PROXIMITY_WIDGET_EN) */
1291:Generated_Source\PSoC4/CapSense_Processing.c **** 
1292:Generated_Source\PSoC4/CapSense_Processing.c ****     default:
1293:Generated_Source\PSoC4/CapSense_Processing.c ****         CYASSERT(0u);
1294:Generated_Source\PSoC4/CapSense_Processing.c ****         break;
1295:Generated_Source\PSoC4/CapSense_Processing.c ****     }
1296:Generated_Source\PSoC4/CapSense_Processing.c **** 
1297:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_dsRam.snsStatus[widgetId] = (CapSense_SNS_STS_TYPE)sensorStatus;
1298:Generated_Source\PSoC4/CapSense_Processing.c **** 
1299:Generated_Source\PSoC4/CapSense_Processing.c ****     /* The next two lines calculate index and bitmask of the widget status bit in the wdgtStatus ar
1300:Generated_Source\PSoC4/CapSense_Processing.c ****     wdStatusIndex = CapSense_GET_WDGT_STATUS_INDEX(widgetId);
1301:Generated_Source\PSoC4/CapSense_Processing.c ****     wdStatusMask = CapSense_GET_WDGT_STATUS_MASK(widgetId);
1302:Generated_Source\PSoC4/CapSense_Processing.c **** 
1303:Generated_Source\PSoC4/CapSense_Processing.c ****     /* Check if there are active sensors and update widget status accordingly */
1304:Generated_Source\PSoC4/CapSense_Processing.c ****     if (0u == sensorStatus)
1305:Generated_Source\PSoC4/CapSense_Processing.c ****     {
1306:Generated_Source\PSoC4/CapSense_Processing.c ****         CapSense_dsRam.wdgtStatus[wdStatusIndex] &= ~wdStatusMask;
1307:Generated_Source\PSoC4/CapSense_Processing.c ****     }
1308:Generated_Source\PSoC4/CapSense_Processing.c ****     else
1309:Generated_Source\PSoC4/CapSense_Processing.c ****     {
1310:Generated_Source\PSoC4/CapSense_Processing.c ****         CapSense_dsRam.wdgtStatus[wdStatusIndex] |= wdStatusMask;
1311:Generated_Source\PSoC4/CapSense_Processing.c ****     }
1312:Generated_Source\PSoC4/CapSense_Processing.c **** }
1313:Generated_Source\PSoC4/CapSense_Processing.c **** #endif /* #if (0u != CapSense_TOTAL_CSD_WIDGETS) */
1314:Generated_Source\PSoC4/CapSense_Processing.c **** 
1315:Generated_Source\PSoC4/CapSense_Processing.c **** 
1316:Generated_Source\PSoC4/CapSense_Processing.c **** #if (0 != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
1317:Generated_Source\PSoC4/CapSense_Processing.c **** /*******************************************************************************
1318:Generated_Source\PSoC4/CapSense_Processing.c **** * Function Name: CapSense_DpUpdateThresholds
1319:Generated_Source\PSoC4/CapSense_Processing.c **** ****************************************************************************//**
1320:Generated_Source\PSoC4/CapSense_Processing.c **** *
1321:Generated_Source\PSoC4/CapSense_Processing.c **** * \brief
1322:Generated_Source\PSoC4/CapSense_Processing.c **** *   Updates noise and finger thresholds for a specified widget.
1323:Generated_Source\PSoC4/CapSense_Processing.c **** *
1324:Generated_Source\PSoC4/CapSense_Processing.c **** * \details
1325:Generated_Source\PSoC4/CapSense_Processing.c **** *   Updates noise and finger thresholds for a specified widget.
1326:Generated_Source\PSoC4/CapSense_Processing.c **** *   This algorithm is a part of Auto-tuning feature.
1327:Generated_Source\PSoC4/CapSense_Processing.c **** *
1328:Generated_Source\PSoC4/CapSense_Processing.c **** * \param ptrRamWdgt       The pointer to the RAM widget object.
1329:Generated_Source\PSoC4/CapSense_Processing.c **** * \param ptrNoiseEnvelope The pointer to the noise-envelope object in RAM.
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 27


1330:Generated_Source\PSoC4/CapSense_Processing.c **** * \param startFlag        The flag indicates when new widget is processed.
1331:Generated_Source\PSoC4/CapSense_Processing.c **** *
1332:Generated_Source\PSoC4/CapSense_Processing.c **** *******************************************************************************/
1333:Generated_Source\PSoC4/CapSense_Processing.c **** void CapSense_DpUpdateThresholds(CapSense_RAM_WD_BASE_STRUCT *ptrRamWdgt,
1334:Generated_Source\PSoC4/CapSense_Processing.c ****                                          SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT *ptrNoiseEnvelope,
1335:Generated_Source\PSoC4/CapSense_Processing.c ****                                          uint32 startFlag)
1336:Generated_Source\PSoC4/CapSense_Processing.c **** {
1337:Generated_Source\PSoC4/CapSense_Processing.c ****     SMARTSENSE_UPDATE_THRESHOLDS_STRUCT thresholds;
1338:Generated_Source\PSoC4/CapSense_Processing.c ****     SMARTSENSE_UPDATE_THRESHOLDS_STRUCT *ptrThresholds = &thresholds;
1339:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrThresholds->fingerTh = ptrRamWdgt->fingerTh;
1340:Generated_Source\PSoC4/CapSense_Processing.c **** 
1341:Generated_Source\PSoC4/CapSense_Processing.c ****     SmartSense_UpdateThresholds(ptrNoiseEnvelope, ptrThresholds, ptrRamWdgt->sigPFC, startFlag);
1342:Generated_Source\PSoC4/CapSense_Processing.c **** 
1343:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrRamWdgt->fingerTh = ptrThresholds->fingerTh;
1344:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrRamWdgt->noiseTh = ptrThresholds->noiseTh;
1345:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrRamWdgt->nNoiseTh = ptrThresholds->nNoiseTh;
1346:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrRamWdgt->hysteresis = ptrThresholds->hysteresis;
1347:Generated_Source\PSoC4/CapSense_Processing.c **** }
1348:Generated_Source\PSoC4/CapSense_Processing.c **** #endif /* #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
1349:Generated_Source\PSoC4/CapSense_Processing.c **** 
1350:Generated_Source\PSoC4/CapSense_Processing.c **** 
1351:Generated_Source\PSoC4/CapSense_Processing.c **** /*******************************************************************************
1352:Generated_Source\PSoC4/CapSense_Processing.c **** * Function Name: CapSense_DpUpdateDifferences
1353:Generated_Source\PSoC4/CapSense_Processing.c **** ****************************************************************************//**
1354:Generated_Source\PSoC4/CapSense_Processing.c **** *
1355:Generated_Source\PSoC4/CapSense_Processing.c **** * \brief
1356:Generated_Source\PSoC4/CapSense_Processing.c **** *   Calculates new difference values.
1357:Generated_Source\PSoC4/CapSense_Processing.c **** *   Also, executes the multi-frequency scan algorithm if it is enabled.
1358:Generated_Source\PSoC4/CapSense_Processing.c **** *
1359:Generated_Source\PSoC4/CapSense_Processing.c **** * \details
1360:Generated_Source\PSoC4/CapSense_Processing.c **** *   This API calculates the difference between the baseline and raw counts.
1361:Generated_Source\PSoC4/CapSense_Processing.c **** *   If the difference is positive (raw > baseline), and higher than the widget
1362:Generated_Source\PSoC4/CapSense_Processing.c **** *   noise threshold, it is saved into the data structure for further processing.
1363:Generated_Source\PSoC4/CapSense_Processing.c **** *   Otherwise the difference is set to zero. The final difference value is saved
1364:Generated_Source\PSoC4/CapSense_Processing.c **** *   with the subtracted noise threshold value.
1365:Generated_Source\PSoC4/CapSense_Processing.c **** *
1366:Generated_Source\PSoC4/CapSense_Processing.c **** *   If the multi-frequency scan algorithm is enabled, the difference is calculated
1367:Generated_Source\PSoC4/CapSense_Processing.c **** *   for the three sets of data available for each sensor. Then
1368:Generated_Source\PSoC4/CapSense_Processing.c **** *   the median filter selects the final difference value.
1369:Generated_Source\PSoC4/CapSense_Processing.c **** *
1370:Generated_Source\PSoC4/CapSense_Processing.c **** * \param ptrRamWdgt The pointer to the RAR Widget Object.
1371:Generated_Source\PSoC4/CapSense_Processing.c **** * \param curSnsPtr  The pointer to the sensor object in RAM.
1372:Generated_Source\PSoC4/CapSense_Processing.c **** *
1373:Generated_Source\PSoC4/CapSense_Processing.c **** *******************************************************************************/
1374:Generated_Source\PSoC4/CapSense_Processing.c **** void CapSense_DpUpdateDifferences(
1375:Generated_Source\PSoC4/CapSense_Processing.c ****                         CapSense_RAM_WD_BASE_STRUCT *ptrRamWdgt,
1376:Generated_Source\PSoC4/CapSense_Processing.c ****                         CapSense_RAM_SNS_STRUCT *curSnsPtr)
1377:Generated_Source\PSoC4/CapSense_Processing.c **** {
 148              		.loc 1 1377 0
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 0
 151              		@ frame_needed = 0, uses_anonymous_args = 0
 152              	.LVL17:
 153 0000 30B5     		push	{r4, r5, lr}
 154              		.cfi_def_cfa_offset 12
 155              		.cfi_offset 4, -12
 156              		.cfi_offset 5, -8
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 28


 157              		.cfi_offset 14, -4
 158              	.LVL18:
1378:Generated_Source\PSoC4/CapSense_Processing.c ****     register int32 diffValue = 0;
1379:Generated_Source\PSoC4/CapSense_Processing.c **** 
1380:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_MULTI_FREQ_SCAN_EN)
1381:Generated_Source\PSoC4/CapSense_Processing.c ****         register int32 diffValue_0 = 0;
1382:Generated_Source\PSoC4/CapSense_Processing.c ****         register int32 diffValue_2 = 0;
1383:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_MULTI_FREQ_SCAN_EN) */
1384:Generated_Source\PSoC4/CapSense_Processing.c **** 
1385:Generated_Source\PSoC4/CapSense_Processing.c ****     /* Calculate difference */
1386:Generated_Source\PSoC4/CapSense_Processing.c ****     diffValue = (int32)curSnsPtr->raw[0u] - (int32)curSnsPtr->bsln[0u];
 159              		.loc 1 1386 0
 160 0002 0B88     		ldrh	r3, [r1]
 161 0004 4A88     		ldrh	r2, [r1, #2]
 162 0006 9C1A     		subs	r4, r3, r2
 163              	.LVL19:
1387:Generated_Source\PSoC4/CapSense_Processing.c **** 
1388:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_MULTI_FREQ_SCAN_EN)
1389:Generated_Source\PSoC4/CapSense_Processing.c ****         diffValue_0 = (int32)curSnsPtr->raw[1u] - (int32)curSnsPtr->bsln[1u];
1390:Generated_Source\PSoC4/CapSense_Processing.c ****         diffValue_2 = (int32)curSnsPtr->raw[2u] - (int32)curSnsPtr->bsln[2u];
1391:Generated_Source\PSoC4/CapSense_Processing.c **** 
1392:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Find median and put it into [0u] element */
1393:Generated_Source\PSoC4/CapSense_Processing.c ****         if (diffValue_0 > diffValue)
1394:Generated_Source\PSoC4/CapSense_Processing.c ****         {
1395:Generated_Source\PSoC4/CapSense_Processing.c ****             register int32 swapv = diffValue_0;
1396:Generated_Source\PSoC4/CapSense_Processing.c ****             diffValue_0 = diffValue;
1397:Generated_Source\PSoC4/CapSense_Processing.c ****             diffValue = swapv;
1398:Generated_Source\PSoC4/CapSense_Processing.c ****         }
1399:Generated_Source\PSoC4/CapSense_Processing.c **** 
1400:Generated_Source\PSoC4/CapSense_Processing.c ****         if (diffValue > diffValue_2)
1401:Generated_Source\PSoC4/CapSense_Processing.c ****         {
1402:Generated_Source\PSoC4/CapSense_Processing.c ****             register int32 swapv = diffValue;
1403:Generated_Source\PSoC4/CapSense_Processing.c ****             diffValue = diffValue_2;
1404:Generated_Source\PSoC4/CapSense_Processing.c ****             diffValue_2 = swapv;
1405:Generated_Source\PSoC4/CapSense_Processing.c ****         }
1406:Generated_Source\PSoC4/CapSense_Processing.c **** 
1407:Generated_Source\PSoC4/CapSense_Processing.c ****         if (diffValue_0 > diffValue)
1408:Generated_Source\PSoC4/CapSense_Processing.c ****         {
1409:Generated_Source\PSoC4/CapSense_Processing.c ****             register int32 swapv = diffValue_0;
1410:Generated_Source\PSoC4/CapSense_Processing.c ****             diffValue_0 = diffValue;
1411:Generated_Source\PSoC4/CapSense_Processing.c ****             diffValue = swapv;
1412:Generated_Source\PSoC4/CapSense_Processing.c ****         }
1413:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_MULTI_FREQ_SCAN_EN) */
1414:Generated_Source\PSoC4/CapSense_Processing.c **** 
1415:Generated_Source\PSoC4/CapSense_Processing.c ****     curSnsPtr->diff = 0u;
 164              		.loc 1 1415 0
 165 0008 0025     		movs	r5, #0
 166 000a CD80     		strh	r5, [r1, #6]
1416:Generated_Source\PSoC4/CapSense_Processing.c **** 
1417:Generated_Source\PSoC4/CapSense_Processing.c ****     if (diffValue > (int32)ptrRamWdgt->noiseTh)
 167              		.loc 1 1417 0
 168 000c 0079     		ldrb	r0, [r0, #4]
 169              	.LVL20:
 170 000e 8442     		cmp	r4, r0
 171 0010 00DD     		ble	.L11
1418:Generated_Source\PSoC4/CapSense_Processing.c ****     {
1419:Generated_Source\PSoC4/CapSense_Processing.c ****         curSnsPtr->diff = (CapSense_THRESHOLD_TYPE) diffValue;
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 29


 172              		.loc 1 1419 0
 173 0012 CC80     		strh	r4, [r1, #6]
 174              	.L11:
1420:Generated_Source\PSoC4/CapSense_Processing.c ****     }
1421:Generated_Source\PSoC4/CapSense_Processing.c **** }
 175              		.loc 1 1421 0
 176              		@ sp needed
 177              	.LVL21:
 178 0014 30BD     		pop	{r4, r5, pc}
 179              		.cfi_endproc
 180              	.LFE5:
 181              		.size	CapSense_DpUpdateDifferences, .-CapSense_DpUpdateDifferences
 182 0016 C046     		.section	.text.CapSense_DpProcessCsdWidgetRawCounts,"ax",%progbits
 183              		.align	2
 184              		.global	CapSense_DpProcessCsdWidgetRawCounts
 185              		.code	16
 186              		.thumb_func
 187              		.type	CapSense_DpProcessCsdWidgetRawCounts, %function
 188              	CapSense_DpProcessCsdWidgetRawCounts:
 189              	.LFB2:
1017:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32  result = CYRET_SUCCESS;
 190              		.loc 1 1017 0
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 16
 193              		@ frame_needed = 0, uses_anonymous_args = 0
 194              	.LVL22:
 195 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 196              		.cfi_def_cfa_offset 20
 197              		.cfi_offset 4, -20
 198              		.cfi_offset 5, -16
 199              		.cfi_offset 6, -12
 200              		.cfi_offset 7, -8
 201              		.cfi_offset 14, -4
 202 0002 5F46     		mov	r7, fp
 203 0004 80B4     		push	{r7}
 204              		.cfi_def_cfa_offset 24
 205              		.cfi_offset 11, -24
 206 0006 84B0     		sub	sp, sp, #16
 207              		.cfi_def_cfa_offset 40
 208 0008 0600     		movs	r6, r0
 209              	.LVL23:
1041:Generated_Source\PSoC4/CapSense_Processing.c **** 
 210              		.loc 1 1041 0
 211 000a 837E     		ldrb	r3, [r0, #26]
 212 000c 062B     		cmp	r3, #6
 213 000e 02D1     		bne	.L19
 214 0010 0122     		movs	r2, #1
 215 0012 9346     		mov	fp, r2
 216 0014 01E0     		b	.L14
 217              	.L19:
 218 0016 0022     		movs	r2, #0
 219 0018 9346     		mov	fp, r2
 220              	.L14:
 221              	.LVL24:
1044:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
 222              		.loc 1 1044 0 discriminator 4
 223 001a F568     		ldr	r5, [r6, #12]
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 30


 224              	.LVL25:
1047:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrRamWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdgt->ptr2WdgtRam;
 225              		.loc 1 1047 0 discriminator 4
 226 001c B468     		ldr	r4, [r6, #8]
 227              	.LVL26:
1048:Generated_Source\PSoC4/CapSense_Processing.c ****     widgetType = ptrFlashWdgt->wdgtType;
 228              		.loc 1 1048 0 discriminator 4
 229 001e 7268     		ldr	r2, [r6, #4]
 230 0020 0192     		str	r2, [sp, #4]
 231              	.LVL27:
1049:Generated_Source\PSoC4/CapSense_Processing.c **** 
 232              		.loc 1 1049 0 discriminator 4
 233 0022 0293     		str	r3, [sp, #8]
 234              	.LVL28:
1056:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 235              		.loc 1 1056 0 discriminator 4
 236 0024 0027     		movs	r7, #0
1018:Generated_Source\PSoC4/CapSense_Processing.c **** 
 237              		.loc 1 1018 0 discriminator 4
 238 0026 0023     		movs	r3, #0
 239 0028 0393     		str	r3, [sp, #12]
1056:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 240              		.loc 1 1056 0 discriminator 4
 241 002a 16E0     		b	.L15
 242              	.LVL29:
 243              	.L18:
1060:Generated_Source\PSoC4/CapSense_Processing.c ****             #if (CapSense_ALP_FILTER_EN)
 244              		.loc 1 1060 0
 245 002c 029A     		ldr	r2, [sp, #8]
 246 002e 2100     		movs	r1, r4
 247              	.LVL30:
 248 0030 2800     		movs	r0, r5
 249 0032 FFF7FEFF 		bl	CapSense_FtRunEnabledFiltersInternal
 250              	.LVL31:
1096:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN) */
 251              		.loc 1 1096 0
 252 0036 029A     		ldr	r2, [sp, #8]
 253 0038 2100     		movs	r1, r4
 254 003a 0198     		ldr	r0, [sp, #4]
 255 003c FFF7FEFF 		bl	CapSense_FtUpdateBaseline
 256              	.LVL32:
 257 0040 0390     		str	r0, [sp, #12]
 258              	.LVL33:
1099:Generated_Source\PSoC4/CapSense_Processing.c **** 
 259              		.loc 1 1099 0
 260 0042 2100     		movs	r1, r4
 261 0044 0198     		ldr	r0, [sp, #4]
 262              	.LVL34:
 263 0046 FFF7FEFF 		bl	CapSense_DpUpdateDifferences
 264              	.LVL35:
1102:Generated_Source\PSoC4/CapSense_Processing.c **** 
 265              		.loc 1 1102 0
 266 004a 0A34     		adds	r4, r4, #10
 267              	.LVL36:
1106:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* #if (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
 268              		.loc 1 1106 0
 269 004c 5B46     		mov	r3, fp
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 31


 270 004e 002B     		cmp	r3, #0
 271 0050 01D1     		bne	.L16
 272              	.LVL37:
1106:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* #if (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
 273              		.loc 1 1106 0 is_stmt 0 discriminator 1
 274 0052 0C35     		adds	r5, r5, #12
 275              	.LVL38:
 276 0054 00E0     		b	.L17
 277              	.LVL39:
 278              	.L16:
1106:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* #if (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
 279              		.loc 1 1106 0 discriminator 2
 280 0056 0C35     		adds	r5, r5, #12
 281              	.LVL40:
 282              	.L17:
1056:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 283              		.loc 1 1056 0 is_stmt 1 discriminator 2
 284 0058 0137     		adds	r7, r7, #1
 285              	.LVL41:
 286              	.L15:
1056:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 287              		.loc 1 1056 0 is_stmt 0 discriminator 1
 288 005a 338B     		ldrh	r3, [r6, #24]
 289 005c 9F42     		cmp	r7, r3
 290 005e E5D3     		bcc	.L18
1110:Generated_Source\PSoC4/CapSense_Processing.c **** 
 291              		.loc 1 1110 0 is_stmt 1
 292 0060 0398     		ldr	r0, [sp, #12]
 293 0062 04B0     		add	sp, sp, #16
 294              		@ sp needed
 295              	.LVL42:
 296              	.LVL43:
 297              	.LVL44:
 298              	.LVL45:
 299 0064 04BC     		pop	{r2}
 300 0066 9346     		mov	fp, r2
 301 0068 F0BD     		pop	{r4, r5, r6, r7, pc}
 302              		.cfi_endproc
 303              	.LFE2:
 304              		.size	CapSense_DpProcessCsdWidgetRawCounts, .-CapSense_DpProcessCsdWidgetRawCounts
 305 006a C046     		.section	.text.CapSense_DpProcessCsdSensorRawCountsExt,"ax",%progbits
 306              		.align	2
 307              		.global	CapSense_DpProcessCsdSensorRawCountsExt
 308              		.code	16
 309              		.thumb_func
 310              		.type	CapSense_DpProcessCsdSensorRawCountsExt, %function
 311              	CapSense_DpProcessCsdSensorRawCountsExt:
 312              	.LFB3:
1151:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 result = CYRET_SUCCESS;
 313              		.loc 1 1151 0
 314              		.cfi_startproc
 315              		@ args = 0, pretend = 0, frame = 8
 316              		@ frame_needed = 0, uses_anonymous_args = 0
 317              	.LVL46:
 318 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 319              		.cfi_def_cfa_offset 20
 320              		.cfi_offset 4, -20
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 32


 321              		.cfi_offset 5, -16
 322              		.cfi_offset 6, -12
 323              		.cfi_offset 7, -8
 324              		.cfi_offset 14, -4
 325 0002 83B0     		sub	sp, sp, #12
 326              		.cfi_def_cfa_offset 32
 327 0004 0E00     		movs	r6, r1
 328 0006 0192     		str	r2, [sp, #4]
 329 0008 1C00     		movs	r4, r3
 330              	.LVL47:
1166:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrRamWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdgt->ptr2WdgtRam;
 331              		.loc 1 1166 0
 332 000a 857E     		ldrb	r5, [r0, #26]
 333              	.LVL48:
1167:Generated_Source\PSoC4/CapSense_Processing.c **** 
 334              		.loc 1 1167 0
 335 000c 4768     		ldr	r7, [r0, #4]
 336              	.LVL49:
1170:Generated_Source\PSoC4/CapSense_Processing.c ****         {
 337              		.loc 1 1170 0
 338 000e E307     		lsls	r3, r4, #31
 339 0010 03D5     		bpl	.L21
 340              	.LVL50:
1172:Generated_Source\PSoC4/CapSense_Processing.c ****             #if (CapSense_ALP_FILTER_EN)
 341              		.loc 1 1172 0
 342 0012 2A00     		movs	r2, r5
 343              	.LVL51:
 344 0014 0198     		ldr	r0, [sp, #4]
 345              	.LVL52:
 346 0016 FFF7FEFF 		bl	CapSense_FtRunEnabledFiltersInternal
 347              	.LVL53:
 348              	.L21:
1207:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 349              		.loc 1 1207 0
 350 001a A307     		lsls	r3, r4, #30
 351 001c 06D5     		bpl	.L24
1209:Generated_Source\PSoC4/CapSense_Processing.c ****     }
 352              		.loc 1 1209 0
 353 001e 2A00     		movs	r2, r5
 354              	.LVL54:
 355 0020 3100     		movs	r1, r6
 356 0022 3800     		movs	r0, r7
 357 0024 FFF7FEFF 		bl	CapSense_FtUpdateBaseline
 358              	.LVL55:
 359 0028 0500     		movs	r5, r0
 360              	.LVL56:
 361 002a 00E0     		b	.L22
 362              	.LVL57:
 363              	.L24:
1152:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32  widgetType;
 364              		.loc 1 1152 0
 365 002c 0025     		movs	r5, #0
 366              	.LVL58:
 367              	.L22:
1212:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 368              		.loc 1 1212 0
 369 002e 6307     		lsls	r3, r4, #29
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 33


 370 0030 03D5     		bpl	.L23
1214:Generated_Source\PSoC4/CapSense_Processing.c ****     }
 371              		.loc 1 1214 0
 372 0032 3100     		movs	r1, r6
 373 0034 3800     		movs	r0, r7
 374 0036 FFF7FEFF 		bl	CapSense_DpUpdateDifferences
 375              	.LVL59:
 376              	.L23:
1217:Generated_Source\PSoC4/CapSense_Processing.c **** 
 377              		.loc 1 1217 0
 378 003a 2800     		movs	r0, r5
 379 003c 03B0     		add	sp, sp, #12
 380              		@ sp needed
 381              	.LVL60:
 382              	.LVL61:
 383              	.LVL62:
 384              	.LVL63:
 385 003e F0BD     		pop	{r4, r5, r6, r7, pc}
 386              		.cfi_endproc
 387              	.LFE3:
 388              		.size	CapSense_DpProcessCsdSensorRawCountsExt, .-CapSense_DpProcessCsdSensorRawCountsExt
 389              		.section	.text.CapSense_DpProcessButton,"ax",%progbits
 390              		.align	2
 391              		.global	CapSense_DpProcessButton
 392              		.code	16
 393              		.thumb_func
 394              		.type	CapSense_DpProcessButton, %function
 395              	CapSense_DpProcessButton:
 396              	.LFB6:
1422:Generated_Source\PSoC4/CapSense_Processing.c **** 
1423:Generated_Source\PSoC4/CapSense_Processing.c **** 
1424:Generated_Source\PSoC4/CapSense_Processing.c **** #if ((0u != CapSense_BUTTON_WIDGET_EN) || (0u != CapSense_CSX_MATRIX_WIDGET_EN))
1425:Generated_Source\PSoC4/CapSense_Processing.c **** /*******************************************************************************
1426:Generated_Source\PSoC4/CapSense_Processing.c **** * Function Name: CapSense_DpProcessButton
1427:Generated_Source\PSoC4/CapSense_Processing.c **** ****************************************************************************//**
1428:Generated_Source\PSoC4/CapSense_Processing.c **** *
1429:Generated_Source\PSoC4/CapSense_Processing.c **** * \brief
1430:Generated_Source\PSoC4/CapSense_Processing.c **** *   Processes the status of the Button widget.
1431:Generated_Source\PSoC4/CapSense_Processing.c **** *
1432:Generated_Source\PSoC4/CapSense_Processing.c **** * \details
1433:Generated_Source\PSoC4/CapSense_Processing.c **** *   This API processes the status of the CSD/CSX Button widget and
1434:Generated_Source\PSoC4/CapSense_Processing.c **** *   CSX Matrix Button widget. It applies the hysteresis and de-bounce algorithm
1435:Generated_Source\PSoC4/CapSense_Processing.c **** *   to each sensor difference value. This API is expected to be called
1436:Generated_Source\PSoC4/CapSense_Processing.c **** *   after each new widget scan. If it is called multiple times for the same
1437:Generated_Source\PSoC4/CapSense_Processing.c **** *   scan data, the de-bounce algorithm will not work properly.
1438:Generated_Source\PSoC4/CapSense_Processing.c **** *
1439:Generated_Source\PSoC4/CapSense_Processing.c **** *   This API does not update any Data Structure registers
1440:Generated_Source\PSoC4/CapSense_Processing.c **** *   except the de-bounce counters.
1441:Generated_Source\PSoC4/CapSense_Processing.c **** *
1442:Generated_Source\PSoC4/CapSense_Processing.c **** * \param currStatus   The current status of the widget sensors.
1443:Generated_Source\PSoC4/CapSense_Processing.c **** * \param ptrFlashWdgt The pointer to the Flash Widget Object.
1444:Generated_Source\PSoC4/CapSense_Processing.c **** *
1445:Generated_Source\PSoC4/CapSense_Processing.c **** * \return Returns the status of the widget's sensors. Bit #0 - corresponds to Sensor #0.
1446:Generated_Source\PSoC4/CapSense_Processing.c **** *
1447:Generated_Source\PSoC4/CapSense_Processing.c **** *******************************************************************************/
1448:Generated_Source\PSoC4/CapSense_Processing.c **** uint32 CapSense_DpProcessButton(uint32 currStatus, CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt)
1449:Generated_Source\PSoC4/CapSense_Processing.c **** {
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 34


 397              		.loc 1 1449 0
 398              		.cfi_startproc
 399              		@ args = 0, pretend = 0, frame = 0
 400              		@ frame_needed = 0, uses_anonymous_args = 0
 401              	.LVL64:
 402 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 403              		.cfi_def_cfa_offset 20
 404              		.cfi_offset 4, -20
 405              		.cfi_offset 5, -16
 406              		.cfi_offset 6, -12
 407              		.cfi_offset 7, -8
 408              		.cfi_offset 14, -4
1450:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 snsCnt;
1451:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 snsMask;
1452:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 newStatus;
1453:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 touchTh;
1454:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_RAM_SNS_STRUCT *ptrSnsTmp;
1455:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrRamWdgt;
1456:Generated_Source\PSoC4/CapSense_Processing.c ****     uint8 * ptrDebounceCnt;
1457:Generated_Source\PSoC4/CapSense_Processing.c **** 
1458:Generated_Source\PSoC4/CapSense_Processing.c ****     snsCnt = ptrFlashWdgt->totalNumSns;
 409              		.loc 1 1458 0
 410 0002 0A8B     		ldrh	r2, [r1, #24]
 411              	.LVL65:
1459:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrSnsTmp = ptrFlashWdgt->ptr2SnsRam;
 412              		.loc 1 1459 0
 413 0004 8D68     		ldr	r5, [r1, #8]
 414              	.LVL66:
1460:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrRamWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdgt->ptr2WdgtRam;
 415              		.loc 1 1460 0
 416 0006 4F68     		ldr	r7, [r1, #4]
 417              	.LVL67:
1461:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrDebounceCnt = ptrFlashWdgt->ptr2DebounceArr;
 418              		.loc 1 1461 0
 419 0008 0B69     		ldr	r3, [r1, #16]
 420              	.LVL68:
1462:Generated_Source\PSoC4/CapSense_Processing.c **** 
1463:Generated_Source\PSoC4/CapSense_Processing.c ****     /* Go through all widget's sensors */
1464:Generated_Source\PSoC4/CapSense_Processing.c ****     snsMask = 1Lu;
 421              		.loc 1 1464 0
 422 000a 0121     		movs	r1, #1
 423              	.LVL69:
1465:Generated_Source\PSoC4/CapSense_Processing.c ****     for (; snsCnt-- > 0u; )
 424              		.loc 1 1465 0
 425 000c 25E0     		b	.L26
 426              	.LVL70:
 427              	.L34:
1466:Generated_Source\PSoC4/CapSense_Processing.c ****     {
1467:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Calculate touch threshold taking into account hysteresis
1468:Generated_Source\PSoC4/CapSense_Processing.c ****            and current sensor state. */
1469:Generated_Source\PSoC4/CapSense_Processing.c ****         touchTh = (0u == (currStatus & snsMask)) ?
 428              		.loc 1 1469 0
 429 000e 0C00     		movs	r4, r1
 430              	.LVL71:
 431 0010 0440     		ands	r4, r0
1470:Generated_Source\PSoC4/CapSense_Processing.c ****                   ((uint32)ptrRamWdgt->fingerTh + ptrRamWdgt->hysteresis) :
 432              		.loc 1 1470 0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 35


 433 0012 03D1     		bne	.L27
 434              		.loc 1 1470 0 is_stmt 0 discriminator 1
 435 0014 7E88     		ldrh	r6, [r7, #2]
 436 0016 BA79     		ldrb	r2, [r7, #6]
 437 0018 B218     		adds	r2, r6, r2
 438 001a 02E0     		b	.L28
 439              	.L27:
1471:Generated_Source\PSoC4/CapSense_Processing.c ****                   ((uint32)ptrRamWdgt->fingerTh - ptrRamWdgt->hysteresis);
 440              		.loc 1 1471 0 is_stmt 1 discriminator 2
 441 001c 7A88     		ldrh	r2, [r7, #2]
 442 001e BE79     		ldrb	r6, [r7, #6]
1470:Generated_Source\PSoC4/CapSense_Processing.c ****                   ((uint32)ptrRamWdgt->fingerTh + ptrRamWdgt->hysteresis) :
 443              		.loc 1 1470 0 discriminator 2
 444 0020 921B     		subs	r2, r2, r6
 445              	.L28:
 446              	.LVL72:
1472:Generated_Source\PSoC4/CapSense_Processing.c **** 
1473:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Determine new potential sensor state */
1474:Generated_Source\PSoC4/CapSense_Processing.c ****         newStatus = (ptrSnsTmp->diff > touchTh) ? snsMask : 0u;
 447              		.loc 1 1474 0
 448 0022 EE88     		ldrh	r6, [r5, #6]
 449 0024 B242     		cmp	r2, r6
 450 0026 01D3     		bcc	.L35
 451 0028 0022     		movs	r2, #0
 452              	.LVL73:
 453 002a 00E0     		b	.L29
 454              	.LVL74:
 455              	.L35:
 456 002c 0A00     		movs	r2, r1
 457              	.LVL75:
 458              	.L29:
1475:Generated_Source\PSoC4/CapSense_Processing.c **** 
1476:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Sensor state changed ? */
1477:Generated_Source\PSoC4/CapSense_Processing.c ****         if (newStatus != (currStatus & snsMask))
 459              		.loc 1 1477 0 discriminator 4
 460 002e A242     		cmp	r2, r4
 461 0030 02D0     		beq	.L30
1478:Generated_Source\PSoC4/CapSense_Processing.c ****         {
1479:Generated_Source\PSoC4/CapSense_Processing.c ****             /* Decrement de-bounce counter */
1480:Generated_Source\PSoC4/CapSense_Processing.c ****             (*ptrDebounceCnt)--;
 462              		.loc 1 1480 0
 463 0032 1E78     		ldrb	r6, [r3]
 464 0034 013E     		subs	r6, r6, #1
 465 0036 1E70     		strb	r6, [r3]
 466              	.L30:
1481:Generated_Source\PSoC4/CapSense_Processing.c ****         }
1482:Generated_Source\PSoC4/CapSense_Processing.c **** 
1483:Generated_Source\PSoC4/CapSense_Processing.c ****         /*
1484:Generated_Source\PSoC4/CapSense_Processing.c ****         *  This piece of code has two objectives:
1485:Generated_Source\PSoC4/CapSense_Processing.c ****         *  1. Reset de-bounce counter if the sensor state did not change.
1486:Generated_Source\PSoC4/CapSense_Processing.c ****         *     (It is possible that during previous processing cycles sensor
1487:Generated_Source\PSoC4/CapSense_Processing.c ****         *     was active and de-bounce counter was decremented.)
1488:Generated_Source\PSoC4/CapSense_Processing.c ****         *  2. Set new sensor state after successful de-bounce.
1489:Generated_Source\PSoC4/CapSense_Processing.c ****         */
1490:Generated_Source\PSoC4/CapSense_Processing.c ****         if ((newStatus == (currStatus & snsMask)) || (0u == (*ptrDebounceCnt)))
 467              		.loc 1 1490 0
 468 0038 A242     		cmp	r2, r4
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 36


 469 003a 02D0     		beq	.L31
 470              		.loc 1 1490 0 is_stmt 0 discriminator 1
 471 003c 1C78     		ldrb	r4, [r3]
 472 003e 002C     		cmp	r4, #0
 473 0040 07D1     		bne	.L32
 474              	.L31:
1491:Generated_Source\PSoC4/CapSense_Processing.c ****         {
1492:Generated_Source\PSoC4/CapSense_Processing.c ****             /* Set new sensor status */
1493:Generated_Source\PSoC4/CapSense_Processing.c ****             currStatus &= ~snsMask;
 475              		.loc 1 1493 0 is_stmt 1
 476 0042 8843     		bics	r0, r1
 477              	.LVL76:
1494:Generated_Source\PSoC4/CapSense_Processing.c ****             currStatus |= newStatus;
 478              		.loc 1 1494 0
 479 0044 1043     		orrs	r0, r2
 480              	.LVL77:
1495:Generated_Source\PSoC4/CapSense_Processing.c **** 
1496:Generated_Source\PSoC4/CapSense_Processing.c ****             /* Reset de-bounce counter */
1497:Generated_Source\PSoC4/CapSense_Processing.c ****             #if (0u != CapSense_OFF_DEBOUNCE_EN)
1498:Generated_Source\PSoC4/CapSense_Processing.c ****                 *ptrDebounceCnt = (0Lu == newStatus) ? ptrRamWdgt->onDebounce : ptrRamWdgt->offDebo
1499:Generated_Source\PSoC4/CapSense_Processing.c ****             #else
1500:Generated_Source\PSoC4/CapSense_Processing.c ****                 *ptrDebounceCnt = (0Lu == newStatus) ? ptrRamWdgt->onDebounce : DEFAULT_OFF_DEBOUNC
 481              		.loc 1 1500 0
 482 0046 002A     		cmp	r2, #0
 483 0048 01D1     		bne	.L36
 484              		.loc 1 1500 0 is_stmt 0 discriminator 1
 485 004a FA79     		ldrb	r2, [r7, #7]
 486              	.LVL78:
 487 004c 00E0     		b	.L33
 488              	.LVL79:
 489              	.L36:
 490              		.loc 1 1500 0
 491 004e 0122     		movs	r2, #1
 492              	.LVL80:
 493              	.L33:
 494              		.loc 1 1500 0 discriminator 4
 495 0050 1A70     		strb	r2, [r3]
 496              	.L32:
1501:Generated_Source\PSoC4/CapSense_Processing.c ****             #endif /* #if (0u != CapSense_OFF_DEBOUNCE_EN) */
1502:Generated_Source\PSoC4/CapSense_Processing.c ****         }
1503:Generated_Source\PSoC4/CapSense_Processing.c **** 
1504:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Move mask to the next sensor */
1505:Generated_Source\PSoC4/CapSense_Processing.c ****         snsMask <<= 1u;
 497              		.loc 1 1505 0 is_stmt 1
 498 0052 4900     		lsls	r1, r1, #1
 499              	.LVL81:
1506:Generated_Source\PSoC4/CapSense_Processing.c **** 
1507:Generated_Source\PSoC4/CapSense_Processing.c ****         ptrSnsTmp++;
 500              		.loc 1 1507 0
 501 0054 0A35     		adds	r5, r5, #10
 502              	.LVL82:
1508:Generated_Source\PSoC4/CapSense_Processing.c ****         ptrDebounceCnt++;
 503              		.loc 1 1508 0
 504 0056 0133     		adds	r3, r3, #1
 505              	.LVL83:
1465:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 506              		.loc 1 1465 0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 37


 507 0058 6246     		mov	r2, ip
 508              	.LVL84:
 509              	.L26:
 510 005a 541E     		subs	r4, r2, #1
 511 005c A446     		mov	ip, r4
 512              	.LVL85:
 513 005e 002A     		cmp	r2, #0
 514 0060 D5D1     		bne	.L34
1509:Generated_Source\PSoC4/CapSense_Processing.c ****     }
1510:Generated_Source\PSoC4/CapSense_Processing.c **** 
1511:Generated_Source\PSoC4/CapSense_Processing.c ****     return currStatus;
1512:Generated_Source\PSoC4/CapSense_Processing.c **** }
 515              		.loc 1 1512 0
 516              		@ sp needed
 517              	.LVL86:
 518              	.LVL87:
 519              	.LVL88:
 520 0062 F0BD     		pop	{r4, r5, r6, r7, pc}
 521              		.cfi_endproc
 522              	.LFE6:
 523              		.size	CapSense_DpProcessButton, .-CapSense_DpProcessButton
 524              		.section	.text.CapSense_DpProcessProximity,"ax",%progbits
 525              		.align	2
 526              		.global	CapSense_DpProcessProximity
 527              		.code	16
 528              		.thumb_func
 529              		.type	CapSense_DpProcessProximity, %function
 530              	CapSense_DpProcessProximity:
 531              	.LFB7:
1513:Generated_Source\PSoC4/CapSense_Processing.c **** #endif /* #if ((0u != CapSense_BUTTON_WIDGET_EN) || (0u != CapSense_CSX_MATRIX_WIDGET_EN)) */
1514:Generated_Source\PSoC4/CapSense_Processing.c **** 
1515:Generated_Source\PSoC4/CapSense_Processing.c **** 
1516:Generated_Source\PSoC4/CapSense_Processing.c **** #if (0u != CapSense_PROXIMITY_WIDGET_EN)
1517:Generated_Source\PSoC4/CapSense_Processing.c **** /*******************************************************************************
1518:Generated_Source\PSoC4/CapSense_Processing.c **** * Function Name: CapSense_DpProcessProximity
1519:Generated_Source\PSoC4/CapSense_Processing.c **** ****************************************************************************//**
1520:Generated_Source\PSoC4/CapSense_Processing.c **** *
1521:Generated_Source\PSoC4/CapSense_Processing.c **** * \brief
1522:Generated_Source\PSoC4/CapSense_Processing.c **** *   Processes the status of the Proximity widget.
1523:Generated_Source\PSoC4/CapSense_Processing.c **** *
1524:Generated_Source\PSoC4/CapSense_Processing.c **** * \details
1525:Generated_Source\PSoC4/CapSense_Processing.c **** *   This API processes the status of the CSD Proximity widget. It applies the
1526:Generated_Source\PSoC4/CapSense_Processing.c **** *   hysteresis and debounce algorithm to each sensor difference value.
1527:Generated_Source\PSoC4/CapSense_Processing.c **** *   The proximity and touch events are considered independently so debounce and
1528:Generated_Source\PSoC4/CapSense_Processing.c **** *   hysteresis are also applied independently.
1529:Generated_Source\PSoC4/CapSense_Processing.c **** *
1530:Generated_Source\PSoC4/CapSense_Processing.c **** *   This API is expected to be called after each new widget scan. If it is
1531:Generated_Source\PSoC4/CapSense_Processing.c **** *   called multiple times for the same scan data the debounce algorithm
1532:Generated_Source\PSoC4/CapSense_Processing.c **** *   will not work properly.
1533:Generated_Source\PSoC4/CapSense_Processing.c **** *
1534:Generated_Source\PSoC4/CapSense_Processing.c **** *   This API does not update any Data Structure registers
1535:Generated_Source\PSoC4/CapSense_Processing.c **** *   except the debounce counters.
1536:Generated_Source\PSoC4/CapSense_Processing.c **** *
1537:Generated_Source\PSoC4/CapSense_Processing.c **** * \param currStatus   The value with the current widget status.
1538:Generated_Source\PSoC4/CapSense_Processing.c **** * \param ptrFlashWdgt The pointer to the Flash Widget Object.
1539:Generated_Source\PSoC4/CapSense_Processing.c **** *
1540:Generated_Source\PSoC4/CapSense_Processing.c **** * \return
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 38


1541:Generated_Source\PSoC4/CapSense_Processing.c **** *  Returns the status of the proximity sensors. Each sensor is represented by two bits
1542:Generated_Source\PSoC4/CapSense_Processing.c **** *  that can take the following values:
1543:Generated_Source\PSoC4/CapSense_Processing.c **** *   - 00b not active
1544:Generated_Source\PSoC4/CapSense_Processing.c **** *   - 01b proximity is detected (signal is above finger threshold)
1545:Generated_Source\PSoC4/CapSense_Processing.c **** *   - 11b finger touch is detected (signal is above the touch threshold)
1546:Generated_Source\PSoC4/CapSense_Processing.c **** *
1547:Generated_Source\PSoC4/CapSense_Processing.c **** *******************************************************************************/
1548:Generated_Source\PSoC4/CapSense_Processing.c **** uint32 CapSense_DpProcessProximity(uint32 currStatus, CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt)
1549:Generated_Source\PSoC4/CapSense_Processing.c **** {
 532              		.loc 1 1549 0
 533              		.cfi_startproc
 534              		@ args = 0, pretend = 0, frame = 0
 535              		@ frame_needed = 0, uses_anonymous_args = 0
 536              	.LVL89:
 537 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 538              		.cfi_def_cfa_offset 20
 539              		.cfi_offset 4, -20
 540              		.cfi_offset 5, -16
 541              		.cfi_offset 6, -12
 542              		.cfi_offset 7, -8
 543              		.cfi_offset 14, -4
 544 0002 4F46     		mov	r7, r9
 545 0004 4646     		mov	r6, r8
 546 0006 C0B4     		push	{r6, r7}
 547              		.cfi_def_cfa_offset 28
 548              		.cfi_offset 8, -28
 549              		.cfi_offset 9, -24
 550              	.LVL90:
1550:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 currTh;
1551:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 snsCnt;
1552:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 snsMask;
1553:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 newStatus;
1554:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 difference;
1555:Generated_Source\PSoC4/CapSense_Processing.c **** 
1556:Generated_Source\PSoC4/CapSense_Processing.c ****     uint8 *ptrDebounceCnt;
1557:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_RAM_SNS_STRUCT *ptrSnsTmp;
1558:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_RAM_WD_PROXIMITY_STRUCT *ptrRamWdgt;
1559:Generated_Source\PSoC4/CapSense_Processing.c **** 
1560:Generated_Source\PSoC4/CapSense_Processing.c ****     /* Mask for proximity status bits. (All odd bits.) */
1561:Generated_Source\PSoC4/CapSense_Processing.c ****     const uint32 proxMask = UINT32_ODD_BITS_CONST;
1562:Generated_Source\PSoC4/CapSense_Processing.c **** 
1563:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrSnsTmp = ptrFlashWdgt->ptr2SnsRam;
 551              		.loc 1 1563 0
 552 0008 8B68     		ldr	r3, [r1, #8]
 553 000a 9946     		mov	r9, r3
 554              	.LVL91:
1564:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrRamWdgt = (CapSense_RAM_WD_PROXIMITY_STRUCT *)ptrFlashWdgt->ptr2WdgtRam;
 555              		.loc 1 1564 0
 556 000c 4D68     		ldr	r5, [r1, #4]
 557              	.LVL92:
1565:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrDebounceCnt = ptrFlashWdgt->ptr2DebounceArr;
 558              		.loc 1 1565 0
 559 000e 0A69     		ldr	r2, [r1, #16]
 560              	.LVL93:
1566:Generated_Source\PSoC4/CapSense_Processing.c **** 
1567:Generated_Source\PSoC4/CapSense_Processing.c ****     /* Get number of sensors and multiply it by 2 - proximity and touch statuses per sensor. */
1568:Generated_Source\PSoC4/CapSense_Processing.c ****     snsCnt = (uint32)ptrFlashWdgt->totalNumSns << 1u;
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 39


 561              		.loc 1 1568 0
 562 0010 098B     		ldrh	r1, [r1, #24]
 563              	.LVL94:
 564 0012 4900     		lsls	r1, r1, #1
 565              	.LVL95:
1569:Generated_Source\PSoC4/CapSense_Processing.c **** 
1570:Generated_Source\PSoC4/CapSense_Processing.c ****     /* Go through all sensor's status bits */
1571:Generated_Source\PSoC4/CapSense_Processing.c ****     snsMask = 1Lu;
 566              		.loc 1 1571 0
 567 0014 0123     		movs	r3, #1
 568              	.LVL96:
1572:Generated_Source\PSoC4/CapSense_Processing.c ****     for (; snsCnt-- > 0u;)
 569              		.loc 1 1572 0
 570 0016 2CE0     		b	.L38
 571              	.LVL97:
 572              	.L47:
1573:Generated_Source\PSoC4/CapSense_Processing.c ****     {
1574:Generated_Source\PSoC4/CapSense_Processing.c ****         difference = ptrSnsTmp->diff;
 573              		.loc 1 1574 0
 574 0018 4946     		mov	r1, r9
 575 001a CE88     		ldrh	r6, [r1, #6]
 576              	.LVL98:
1575:Generated_Source\PSoC4/CapSense_Processing.c **** 
1576:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Determine current event (proximity - odd; touch - even) and get appropriate threshold. *
1577:Generated_Source\PSoC4/CapSense_Processing.c ****         currTh = ptrRamWdgt->fingerTh;
 577              		.loc 1 1577 0
 578 001c 6988     		ldrh	r1, [r5, #2]
 579              	.LVL99:
1578:Generated_Source\PSoC4/CapSense_Processing.c **** 
1579:Generated_Source\PSoC4/CapSense_Processing.c ****         if (0u == (snsMask & proxMask))
 580              		.loc 1 1579 0
 581 001e 194C     		ldr	r4, .L50
 582              	.LVL100:
 583 0020 2342     		tst	r3, r4
 584 0022 03D1     		bne	.L39
1580:Generated_Source\PSoC4/CapSense_Processing.c ****         {
1581:Generated_Source\PSoC4/CapSense_Processing.c ****             currTh = ptrRamWdgt->proxTouchTh;
 585              		.loc 1 1581 0
 586 0024 298A     		ldrh	r1, [r5, #16]
 587              	.LVL101:
1582:Generated_Source\PSoC4/CapSense_Processing.c ****             ptrSnsTmp++;
 588              		.loc 1 1582 0
 589 0026 0A24     		movs	r4, #10
 590 0028 A046     		mov	r8, r4
 591 002a C144     		add	r9, r9, r8
 592              	.LVL102:
 593              	.L39:
1583:Generated_Source\PSoC4/CapSense_Processing.c ****         }
1584:Generated_Source\PSoC4/CapSense_Processing.c **** 
1585:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Calculate finger threshold applying hysteresis based on current sensor state. */
1586:Generated_Source\PSoC4/CapSense_Processing.c ****         currTh = (0u == (currStatus & snsMask)) ? (currTh + ptrRamWdgt->hysteresis) : (currTh - ptr
 594              		.loc 1 1586 0
 595 002c 1C00     		movs	r4, r3
 596 002e 0440     		ands	r4, r0
 597 0030 03D1     		bne	.L40
 598              		.loc 1 1586 0 is_stmt 0 discriminator 1
 599 0032 AF79     		ldrb	r7, [r5, #6]
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 40


 600 0034 B846     		mov	r8, r7
 601 0036 4144     		add	r1, r1, r8
 602              	.LVL103:
 603 0038 01E0     		b	.L41
 604              	.LVL104:
 605              	.L40:
 606              		.loc 1 1586 0 discriminator 2
 607 003a AF79     		ldrb	r7, [r5, #6]
 608 003c C91B     		subs	r1, r1, r7
 609              	.LVL105:
 610              	.L41:
1587:Generated_Source\PSoC4/CapSense_Processing.c **** 
1588:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Determine new potential sensor state before de-bounce */
1589:Generated_Source\PSoC4/CapSense_Processing.c ****         newStatus = (difference > currTh) ? snsMask : 0Lu;
 611              		.loc 1 1589 0 is_stmt 1 discriminator 4
 612 003e B142     		cmp	r1, r6
 613 0040 01D3     		bcc	.L48
 614              		.loc 1 1589 0 is_stmt 0
 615 0042 0021     		movs	r1, #0
 616              	.LVL106:
 617 0044 00E0     		b	.L42
 618              	.LVL107:
 619              	.L48:
 620 0046 1900     		movs	r1, r3
 621              	.LVL108:
 622              	.L42:
1590:Generated_Source\PSoC4/CapSense_Processing.c **** 
1591:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Sensor state changed ? */
1592:Generated_Source\PSoC4/CapSense_Processing.c ****         if (newStatus != (currStatus & snsMask))
 623              		.loc 1 1592 0 is_stmt 1 discriminator 4
 624 0048 A142     		cmp	r1, r4
 625 004a 02D0     		beq	.L43
1593:Generated_Source\PSoC4/CapSense_Processing.c ****         {
1594:Generated_Source\PSoC4/CapSense_Processing.c ****             /* Decrement de-bounce counter */
1595:Generated_Source\PSoC4/CapSense_Processing.c ****             (*ptrDebounceCnt)--;
 626              		.loc 1 1595 0
 627 004c 1678     		ldrb	r6, [r2]
 628              	.LVL109:
 629 004e 013E     		subs	r6, r6, #1
 630 0050 1670     		strb	r6, [r2]
 631              	.L43:
1596:Generated_Source\PSoC4/CapSense_Processing.c ****         }
1597:Generated_Source\PSoC4/CapSense_Processing.c **** 
1598:Generated_Source\PSoC4/CapSense_Processing.c ****         /*
1599:Generated_Source\PSoC4/CapSense_Processing.c ****         *  This piece of code has two objectives:
1600:Generated_Source\PSoC4/CapSense_Processing.c ****         *  1. Reset de-bounce counter if new sensor state has not changed.
1601:Generated_Source\PSoC4/CapSense_Processing.c ****         *     (It is possible that during previous processing cycles the sensor
1602:Generated_Source\PSoC4/CapSense_Processing.c ****         *     state was different which caused de-bounce counter change.)
1603:Generated_Source\PSoC4/CapSense_Processing.c ****         *  2. Set new sensor state after successful de-bounce.
1604:Generated_Source\PSoC4/CapSense_Processing.c ****         */
1605:Generated_Source\PSoC4/CapSense_Processing.c ****         if ((newStatus == (currStatus & snsMask)) || (0u == (*ptrDebounceCnt)))
 632              		.loc 1 1605 0
 633 0052 A142     		cmp	r1, r4
 634 0054 02D0     		beq	.L44
 635              		.loc 1 1605 0 is_stmt 0 discriminator 1
 636 0056 1478     		ldrb	r4, [r2]
 637 0058 002C     		cmp	r4, #0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 41


 638 005a 07D1     		bne	.L45
 639              	.L44:
1606:Generated_Source\PSoC4/CapSense_Processing.c ****         {
1607:Generated_Source\PSoC4/CapSense_Processing.c ****             /* Set new sensor status */
1608:Generated_Source\PSoC4/CapSense_Processing.c ****             currStatus &= ~snsMask;
 640              		.loc 1 1608 0 is_stmt 1
 641 005c 9843     		bics	r0, r3
 642              	.LVL110:
1609:Generated_Source\PSoC4/CapSense_Processing.c ****             currStatus |= newStatus;
 643              		.loc 1 1609 0
 644 005e 0843     		orrs	r0, r1
 645              	.LVL111:
1610:Generated_Source\PSoC4/CapSense_Processing.c **** 
1611:Generated_Source\PSoC4/CapSense_Processing.c ****             /* Reset de-bounce counter */
1612:Generated_Source\PSoC4/CapSense_Processing.c ****             #if (0u != CapSense_OFF_DEBOUNCE_EN)
1613:Generated_Source\PSoC4/CapSense_Processing.c ****                 *ptrDebounceCnt = (0Lu == newStatus) ? ptrRamWdgt->onDebounce : ptrRamWdgt->offDebo
1614:Generated_Source\PSoC4/CapSense_Processing.c ****             #else
1615:Generated_Source\PSoC4/CapSense_Processing.c ****                 *ptrDebounceCnt = (0Lu == newStatus) ? ptrRamWdgt->onDebounce : DEFAULT_OFF_DEBOUNC
 646              		.loc 1 1615 0
 647 0060 0029     		cmp	r1, #0
 648 0062 01D1     		bne	.L49
 649              		.loc 1 1615 0 is_stmt 0 discriminator 1
 650 0064 E979     		ldrb	r1, [r5, #7]
 651              	.LVL112:
 652 0066 00E0     		b	.L46
 653              	.LVL113:
 654              	.L49:
 655              		.loc 1 1615 0
 656 0068 0121     		movs	r1, #1
 657              	.LVL114:
 658              	.L46:
 659              		.loc 1 1615 0 discriminator 4
 660 006a 1170     		strb	r1, [r2]
 661              	.L45:
1616:Generated_Source\PSoC4/CapSense_Processing.c ****             #endif /* #if (0u != CapSense_OFF_DEBOUNCE_EN) */
1617:Generated_Source\PSoC4/CapSense_Processing.c ****         }
1618:Generated_Source\PSoC4/CapSense_Processing.c **** 
1619:Generated_Source\PSoC4/CapSense_Processing.c ****         ptrDebounceCnt++;
 662              		.loc 1 1619 0 is_stmt 1
 663 006c 0132     		adds	r2, r2, #1
 664              	.LVL115:
1620:Generated_Source\PSoC4/CapSense_Processing.c **** 
1621:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Move sensor mask to the next sensor */
1622:Generated_Source\PSoC4/CapSense_Processing.c ****         snsMask <<= 1u;
 665              		.loc 1 1622 0
 666 006e 5B00     		lsls	r3, r3, #1
 667              	.LVL116:
1572:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 668              		.loc 1 1572 0
 669 0070 6146     		mov	r1, ip
 670              	.LVL117:
 671              	.L38:
 672 0072 4C1E     		subs	r4, r1, #1
 673 0074 A446     		mov	ip, r4
 674              	.LVL118:
 675 0076 0029     		cmp	r1, #0
 676 0078 CED1     		bne	.L47
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 42


1623:Generated_Source\PSoC4/CapSense_Processing.c ****     }
1624:Generated_Source\PSoC4/CapSense_Processing.c **** 
1625:Generated_Source\PSoC4/CapSense_Processing.c ****     return currStatus;
1626:Generated_Source\PSoC4/CapSense_Processing.c **** }
 677              		.loc 1 1626 0
 678              		@ sp needed
 679              	.LVL119:
 680              	.LVL120:
 681              	.LVL121:
 682 007a 0CBC     		pop	{r2, r3}
 683 007c 9046     		mov	r8, r2
 684 007e 9946     		mov	r9, r3
 685 0080 F0BD     		pop	{r4, r5, r6, r7, pc}
 686              	.L51:
 687 0082 C046     		.align	2
 688              	.L50:
 689 0084 55555555 		.word	1431655765
 690              		.cfi_endproc
 691              	.LFE7:
 692              		.size	CapSense_DpProcessProximity, .-CapSense_DpProcessProximity
 693              		.section	.text.CapSense_DpProcessCsdWidgetStatus,"ax",%progbits
 694              		.align	2
 695              		.global	CapSense_DpProcessCsdWidgetStatus
 696              		.code	16
 697              		.thumb_func
 698              		.type	CapSense_DpProcessCsdWidgetStatus, %function
 699              	CapSense_DpProcessCsdWidgetStatus:
 700              	.LFB4:
1247:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 sensorStatus;
 701              		.loc 1 1247 0
 702              		.cfi_startproc
 703              		@ args = 0, pretend = 0, frame = 0
 704              		@ frame_needed = 0, uses_anonymous_args = 0
 705              	.LVL122:
 706 0000 70B5     		push	{r4, r5, r6, lr}
 707              		.cfi_def_cfa_offset 16
 708              		.cfi_offset 4, -16
 709              		.cfi_offset 5, -12
 710              		.cfi_offset 6, -8
 711              		.cfi_offset 14, -4
 712 0002 0400     		movs	r4, r0
1253:Generated_Source\PSoC4/CapSense_Processing.c ****     sensorStatus = CapSense_dsRam.snsStatus[widgetId];
 713              		.loc 1 1253 0
 714 0004 8A7E     		ldrb	r2, [r1, #26]
 715              	.LVL123:
1254:Generated_Source\PSoC4/CapSense_Processing.c **** 
 716              		.loc 1 1254 0
 717 0006 174B     		ldr	r3, .L60
 718 0008 1B18     		adds	r3, r3, r0
 719 000a 1D7E     		ldrb	r5, [r3, #24]
 720              	.LVL124:
1256:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 721              		.loc 1 1256 0
 722 000c 012A     		cmp	r2, #1
 723 000e 02D0     		beq	.L54
 724 0010 062A     		cmp	r2, #6
 725 0012 05D0     		beq	.L55
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 43


 726 0014 09E0     		b	.L59
 727              	.L54:
1260:Generated_Source\PSoC4/CapSense_Processing.c ****             break;
 728              		.loc 1 1260 0
 729 0016 2800     		movs	r0, r5
 730              	.LVL125:
 731 0018 FFF7FEFF 		bl	CapSense_DpProcessButton
 732              	.LVL126:
 733 001c 0500     		movs	r5, r0
 734              	.LVL127:
1261:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_BUTTON_WIDGET_EN) */
 735              		.loc 1 1261 0
 736 001e 07E0     		b	.L56
 737              	.LVL128:
 738              	.L55:
1288:Generated_Source\PSoC4/CapSense_Processing.c ****             break;
 739              		.loc 1 1288 0
 740 0020 2800     		movs	r0, r5
 741              	.LVL129:
 742 0022 FFF7FEFF 		bl	CapSense_DpProcessProximity
 743              	.LVL130:
 744 0026 0500     		movs	r5, r0
 745              	.LVL131:
1289:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_PROXIMITY_WIDGET_EN) */
 746              		.loc 1 1289 0
 747 0028 02E0     		b	.L56
 748              	.LVL132:
 749              	.L59:
1293:Generated_Source\PSoC4/CapSense_Processing.c ****         break;
 750              		.loc 1 1293 0 discriminator 1
 751 002a 0020     		movs	r0, #0
 752              	.LVL133:
 753 002c FFF7FEFF 		bl	CyHalt
 754              	.LVL134:
 755              	.L56:
1297:Generated_Source\PSoC4/CapSense_Processing.c **** 
 756              		.loc 1 1297 0
 757 0030 0C4B     		ldr	r3, .L60
 758 0032 1B19     		adds	r3, r3, r4
 759 0034 1D76     		strb	r5, [r3, #24]
1300:Generated_Source\PSoC4/CapSense_Processing.c ****     wdStatusMask = CapSense_GET_WDGT_STATUS_MASK(widgetId);
 760              		.loc 1 1300 0
 761 0036 6309     		lsrs	r3, r4, #5
 762              	.LVL135:
1301:Generated_Source\PSoC4/CapSense_Processing.c **** 
 763              		.loc 1 1301 0
 764 0038 1F22     		movs	r2, #31
 765 003a 1440     		ands	r4, r2
 766              	.LVL136:
 767 003c 1E3A     		subs	r2, r2, #30
 768 003e A240     		lsls	r2, r2, r4
 769              	.LVL137:
1304:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 770              		.loc 1 1304 0
 771 0040 002D     		cmp	r5, #0
 772 0042 07D1     		bne	.L57
1306:Generated_Source\PSoC4/CapSense_Processing.c ****     }
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 44


 773              		.loc 1 1306 0
 774 0044 0433     		adds	r3, r3, #4
 775              	.LVL138:
 776 0046 9B00     		lsls	r3, r3, #2
 777              	.LVL139:
 778 0048 0649     		ldr	r1, .L60
 779 004a CB18     		adds	r3, r1, r3
 780 004c 5968     		ldr	r1, [r3, #4]
 781 004e 9143     		bics	r1, r2
 782 0050 5960     		str	r1, [r3, #4]
 783 0052 06E0     		b	.L52
 784              	.LVL140:
 785              	.L57:
1310:Generated_Source\PSoC4/CapSense_Processing.c ****     }
 786              		.loc 1 1310 0
 787 0054 0433     		adds	r3, r3, #4
 788              	.LVL141:
 789 0056 9B00     		lsls	r3, r3, #2
 790              	.LVL142:
 791 0058 0249     		ldr	r1, .L60
 792 005a CB18     		adds	r3, r1, r3
 793 005c 5968     		ldr	r1, [r3, #4]
 794 005e 0A43     		orrs	r2, r1
 795              	.LVL143:
 796 0060 5A60     		str	r2, [r3, #4]
 797              	.L52:
1312:Generated_Source\PSoC4/CapSense_Processing.c **** #endif /* #if (0u != CapSense_TOTAL_CSD_WIDGETS) */
 798              		.loc 1 1312 0
 799              		@ sp needed
 800              	.LVL144:
 801              	.LVL145:
 802 0062 70BD     		pop	{r4, r5, r6, pc}
 803              	.L61:
 804              		.align	2
 805              	.L60:
 806 0064 00000000 		.word	CapSense_dsRam
 807              		.cfi_endproc
 808              	.LFE4:
 809              		.size	CapSense_DpProcessCsdWidgetStatus, .-CapSense_DpProcessCsdWidgetStatus
 810              		.text
 811              	.Letext0:
 812              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 813              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 814              		.file 4 "Generated_Source\\PSoC4\\CapSense_Configuration.h"
 815              		.file 5 "Generated_Source\\PSoC4\\CapSense_Structure.h"
 816              		.file 6 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 817              		.file 7 "Generated_Source\\PSoC4\\CapSense_Filter.h"
 818              		.file 8 "Generated_Source\\PSoC4\\CyLib.h"
 819              		.section	.debug_info,"",%progbits
 820              	.Ldebug_info0:
 821 0000 CC0C0000 		.4byte	0xccc
 822 0004 0400     		.2byte	0x4
 823 0006 00000000 		.4byte	.Ldebug_abbrev0
 824 000a 04       		.byte	0x4
 825 000b 01       		.uleb128 0x1
 826 000c C7010000 		.4byte	.LASF140
 827 0010 0C       		.byte	0xc
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 45


 828 0011 5F040000 		.4byte	.LASF141
 829 0015 F7000000 		.4byte	.LASF142
 830 0019 00000000 		.4byte	.Ldebug_ranges0+0
 831 001d 00000000 		.4byte	0
 832 0021 00000000 		.4byte	.Ldebug_line0
 833 0025 02       		.uleb128 0x2
 834 0026 01       		.byte	0x1
 835 0027 06       		.byte	0x6
 836 0028 7E080000 		.4byte	.LASF0
 837 002c 02       		.uleb128 0x2
 838 002d 01       		.byte	0x1
 839 002e 08       		.byte	0x8
 840 002f E3070000 		.4byte	.LASF1
 841 0033 02       		.uleb128 0x2
 842 0034 02       		.byte	0x2
 843 0035 05       		.byte	0x5
 844 0036 88060000 		.4byte	.LASF2
 845 003a 02       		.uleb128 0x2
 846 003b 02       		.byte	0x2
 847 003c 07       		.byte	0x7
 848 003d 8F080000 		.4byte	.LASF3
 849 0041 02       		.uleb128 0x2
 850 0042 04       		.byte	0x4
 851 0043 05       		.byte	0x5
 852 0044 C3060000 		.4byte	.LASF4
 853 0048 02       		.uleb128 0x2
 854 0049 04       		.byte	0x4
 855 004a 07       		.byte	0x7
 856 004b 74070000 		.4byte	.LASF5
 857 004f 02       		.uleb128 0x2
 858 0050 08       		.byte	0x8
 859 0051 05       		.byte	0x5
 860 0052 C9040000 		.4byte	.LASF6
 861 0056 02       		.uleb128 0x2
 862 0057 08       		.byte	0x8
 863 0058 07       		.byte	0x7
 864 0059 C7020000 		.4byte	.LASF7
 865 005d 03       		.uleb128 0x3
 866 005e 04       		.byte	0x4
 867 005f 05       		.byte	0x5
 868 0060 696E7400 		.ascii	"int\000"
 869 0064 02       		.uleb128 0x2
 870 0065 04       		.byte	0x4
 871 0066 07       		.byte	0x7
 872 0067 9D000000 		.4byte	.LASF8
 873 006b 04       		.uleb128 0x4
 874 006c BA080000 		.4byte	.LASF9
 875 0070 02       		.byte	0x2
 876 0071 E401     		.2byte	0x1e4
 877 0073 2C000000 		.4byte	0x2c
 878 0077 04       		.uleb128 0x4
 879 0078 36040000 		.4byte	.LASF10
 880 007c 02       		.byte	0x2
 881 007d E501     		.2byte	0x1e5
 882 007f 3A000000 		.4byte	0x3a
 883 0083 04       		.uleb128 0x4
 884 0084 A9050000 		.4byte	.LASF11
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 46


 885 0088 02       		.byte	0x2
 886 0089 E601     		.2byte	0x1e6
 887 008b 48000000 		.4byte	0x48
 888 008f 04       		.uleb128 0x4
 889 0090 65020000 		.4byte	.LASF12
 890 0094 02       		.byte	0x2
 891 0095 E901     		.2byte	0x1e9
 892 0097 41000000 		.4byte	0x41
 893 009b 02       		.uleb128 0x2
 894 009c 04       		.byte	0x4
 895 009d 04       		.byte	0x4
 896 009e C1010000 		.4byte	.LASF13
 897 00a2 02       		.uleb128 0x2
 898 00a3 08       		.byte	0x8
 899 00a4 04       		.byte	0x4
 900 00a5 C0080000 		.4byte	.LASF14
 901 00a9 02       		.uleb128 0x2
 902 00aa 01       		.byte	0x1
 903 00ab 08       		.byte	0x8
 904 00ac 0C040000 		.4byte	.LASF15
 905 00b0 05       		.uleb128 0x5
 906 00b1 83000000 		.4byte	0x83
 907 00b5 06       		.uleb128 0x6
 908 00b6 A1030000 		.4byte	.LASF16
 909 00ba 03       		.byte	0x3
 910 00bb D8       		.byte	0xd8
 911 00bc 64000000 		.4byte	0x64
 912 00c0 02       		.uleb128 0x2
 913 00c1 08       		.byte	0x8
 914 00c2 04       		.byte	0x4
 915 00c3 06060000 		.4byte	.LASF17
 916 00c7 02       		.uleb128 0x2
 917 00c8 04       		.byte	0x4
 918 00c9 07       		.byte	0x7
 919 00ca 6B070000 		.4byte	.LASF18
 920 00ce 07       		.uleb128 0x7
 921 00cf 04       		.byte	0x4
 922 00d0 04       		.uleb128 0x4
 923 00d1 3E080000 		.4byte	.LASF19
 924 00d5 04       		.byte	0x4
 925 00d6 3201     		.2byte	0x132
 926 00d8 77000000 		.4byte	0x77
 927 00dc 04       		.uleb128 0x4
 928 00dd 8C040000 		.4byte	.LASF20
 929 00e1 04       		.byte	0x4
 930 00e2 3601     		.2byte	0x136
 931 00e4 6B000000 		.4byte	0x6b
 932 00e8 08       		.uleb128 0x8
 933 00e9 01       		.byte	0x1
 934 00ea 2C000000 		.4byte	0x2c
 935 00ee 05       		.byte	0x5
 936 00ef 61       		.byte	0x61
 937 00f0 1F010000 		.4byte	0x11f
 938 00f4 09       		.uleb128 0x9
 939 00f5 EB060000 		.4byte	.LASF21
 940 00f9 01       		.byte	0x1
 941 00fa 09       		.uleb128 0x9
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 47


 942 00fb C8050000 		.4byte	.LASF22
 943 00ff 02       		.byte	0x2
 944 0100 09       		.uleb128 0x9
 945 0101 B8030000 		.4byte	.LASF23
 946 0105 03       		.byte	0x3
 947 0106 09       		.uleb128 0x9
 948 0107 DE020000 		.4byte	.LASF24
 949 010b 04       		.byte	0x4
 950 010c 09       		.uleb128 0x9
 951 010d 5E010000 		.4byte	.LASF25
 952 0111 05       		.byte	0x5
 953 0112 09       		.uleb128 0x9
 954 0113 00000000 		.4byte	.LASF26
 955 0117 06       		.byte	0x6
 956 0118 09       		.uleb128 0x9
 957 0119 61060000 		.4byte	.LASF27
 958 011d 07       		.byte	0x7
 959 011e 00       		.byte	0
 960 011f 06       		.uleb128 0x6
 961 0120 86050000 		.4byte	.LASF28
 962 0124 05       		.byte	0x5
 963 0125 69       		.byte	0x69
 964 0126 E8000000 		.4byte	0xe8
 965 012a 0A       		.uleb128 0xa
 966 012b 10       		.byte	0x10
 967 012c 05       		.byte	0x5
 968 012d AD       		.byte	0xad
 969 012e B7010000 		.4byte	0x1b7
 970 0132 0B       		.uleb128 0xb
 971 0133 4D040000 		.4byte	.LASF29
 972 0137 05       		.byte	0x5
 973 0138 B2       		.byte	0xb2
 974 0139 77000000 		.4byte	0x77
 975 013d 00       		.byte	0
 976 013e 0B       		.uleb128 0xb
 977 013f 93070000 		.4byte	.LASF30
 978 0143 05       		.byte	0x5
 979 0144 B7       		.byte	0xb7
 980 0145 D0000000 		.4byte	0xd0
 981 0149 02       		.byte	0x2
 982 014a 0B       		.uleb128 0xb
 983 014b 04040000 		.4byte	.LASF31
 984 014f 05       		.byte	0x5
 985 0150 BC       		.byte	0xbc
 986 0151 6B000000 		.4byte	0x6b
 987 0155 04       		.byte	0x4
 988 0156 0B       		.uleb128 0xb
 989 0157 49050000 		.4byte	.LASF32
 990 015b 05       		.byte	0x5
 991 015c C1       		.byte	0xc1
 992 015d 6B000000 		.4byte	0x6b
 993 0161 05       		.byte	0x5
 994 0162 0B       		.uleb128 0xb
 995 0163 AD030000 		.4byte	.LASF33
 996 0167 05       		.byte	0x5
 997 0168 C7       		.byte	0xc7
 998 0169 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 48


 999 016d 06       		.byte	0x6
 1000 016e 0B       		.uleb128 0xb
 1001 016f F9040000 		.4byte	.LASF34
 1002 0173 05       		.byte	0x5
 1003 0174 CD       		.byte	0xcd
 1004 0175 6B000000 		.4byte	0x6b
 1005 0179 07       		.byte	0x7
 1006 017a 0B       		.uleb128 0xb
 1007 017b ED030000 		.4byte	.LASF35
 1008 017f 05       		.byte	0x5
 1009 0180 D4       		.byte	0xd4
 1010 0181 DC000000 		.4byte	0xdc
 1011 0185 08       		.byte	0x8
 1012 0186 0B       		.uleb128 0xb
 1013 0187 86070000 		.4byte	.LASF36
 1014 018b 05       		.byte	0x5
 1015 018c DB       		.byte	0xdb
 1016 018d B7010000 		.4byte	0x1b7
 1017 0191 09       		.byte	0x9
 1018 0192 0B       		.uleb128 0xb
 1019 0193 A9010000 		.4byte	.LASF37
 1020 0197 05       		.byte	0x5
 1021 0198 E0       		.byte	0xe0
 1022 0199 6B000000 		.4byte	0x6b
 1023 019d 0A       		.byte	0xa
 1024 019e 0B       		.uleb128 0xb
 1025 019f 77080000 		.4byte	.LASF38
 1026 01a3 05       		.byte	0x5
 1027 01a4 E8       		.byte	0xe8
 1028 01a5 77000000 		.4byte	0x77
 1029 01a9 0C       		.byte	0xc
 1030 01aa 0B       		.uleb128 0xb
 1031 01ab 7B060000 		.4byte	.LASF39
 1032 01af 05       		.byte	0x5
 1033 01b0 ED       		.byte	0xed
 1034 01b1 6B000000 		.4byte	0x6b
 1035 01b5 0E       		.byte	0xe
 1036 01b6 00       		.byte	0
 1037 01b7 0C       		.uleb128 0xc
 1038 01b8 6B000000 		.4byte	0x6b
 1039 01bc C7010000 		.4byte	0x1c7
 1040 01c0 0D       		.uleb128 0xd
 1041 01c1 C7000000 		.4byte	0xc7
 1042 01c5 00       		.byte	0
 1043 01c6 00       		.byte	0
 1044 01c7 06       		.uleb128 0x6
 1045 01c8 6A050000 		.4byte	.LASF40
 1046 01cc 05       		.byte	0x5
 1047 01cd EE       		.byte	0xee
 1048 01ce 2A010000 		.4byte	0x12a
 1049 01d2 0A       		.uleb128 0xa
 1050 01d3 10       		.byte	0x10
 1051 01d4 05       		.byte	0x5
 1052 01d5 F3       		.byte	0xf3
 1053 01d6 68020000 		.4byte	0x268
 1054 01da 0B       		.uleb128 0xb
 1055 01db 4D040000 		.4byte	.LASF29
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 49


 1056 01df 05       		.byte	0x5
 1057 01e0 F8       		.byte	0xf8
 1058 01e1 77000000 		.4byte	0x77
 1059 01e5 00       		.byte	0
 1060 01e6 0B       		.uleb128 0xb
 1061 01e7 93070000 		.4byte	.LASF30
 1062 01eb 05       		.byte	0x5
 1063 01ec FD       		.byte	0xfd
 1064 01ed D0000000 		.4byte	0xd0
 1065 01f1 02       		.byte	0x2
 1066 01f2 0E       		.uleb128 0xe
 1067 01f3 04040000 		.4byte	.LASF31
 1068 01f7 05       		.byte	0x5
 1069 01f8 0201     		.2byte	0x102
 1070 01fa 6B000000 		.4byte	0x6b
 1071 01fe 04       		.byte	0x4
 1072 01ff 0E       		.uleb128 0xe
 1073 0200 49050000 		.4byte	.LASF32
 1074 0204 05       		.byte	0x5
 1075 0205 0701     		.2byte	0x107
 1076 0207 6B000000 		.4byte	0x6b
 1077 020b 05       		.byte	0x5
 1078 020c 0E       		.uleb128 0xe
 1079 020d AD030000 		.4byte	.LASF33
 1080 0211 05       		.byte	0x5
 1081 0212 0D01     		.2byte	0x10d
 1082 0214 6B000000 		.4byte	0x6b
 1083 0218 06       		.byte	0x6
 1084 0219 0E       		.uleb128 0xe
 1085 021a F9040000 		.4byte	.LASF34
 1086 021e 05       		.byte	0x5
 1087 021f 1301     		.2byte	0x113
 1088 0221 6B000000 		.4byte	0x6b
 1089 0225 07       		.byte	0x7
 1090 0226 0E       		.uleb128 0xe
 1091 0227 ED030000 		.4byte	.LASF35
 1092 022b 05       		.byte	0x5
 1093 022c 1A01     		.2byte	0x11a
 1094 022e DC000000 		.4byte	0xdc
 1095 0232 08       		.byte	0x8
 1096 0233 0E       		.uleb128 0xe
 1097 0234 86070000 		.4byte	.LASF36
 1098 0238 05       		.byte	0x5
 1099 0239 2101     		.2byte	0x121
 1100 023b B7010000 		.4byte	0x1b7
 1101 023f 09       		.byte	0x9
 1102 0240 0E       		.uleb128 0xe
 1103 0241 A9010000 		.4byte	.LASF37
 1104 0245 05       		.byte	0x5
 1105 0246 2601     		.2byte	0x126
 1106 0248 6B000000 		.4byte	0x6b
 1107 024c 0A       		.byte	0xa
 1108 024d 0E       		.uleb128 0xe
 1109 024e 77080000 		.4byte	.LASF38
 1110 0252 05       		.byte	0x5
 1111 0253 2E01     		.2byte	0x12e
 1112 0255 77000000 		.4byte	0x77
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 50


 1113 0259 0C       		.byte	0xc
 1114 025a 0E       		.uleb128 0xe
 1115 025b 7B060000 		.4byte	.LASF39
 1116 025f 05       		.byte	0x5
 1117 0260 3301     		.2byte	0x133
 1118 0262 6B000000 		.4byte	0x6b
 1119 0266 0E       		.byte	0xe
 1120 0267 00       		.byte	0
 1121 0268 04       		.uleb128 0x4
 1122 0269 A4070000 		.4byte	.LASF41
 1123 026d 05       		.byte	0x5
 1124 026e 3401     		.2byte	0x134
 1125 0270 D2010000 		.4byte	0x1d2
 1126 0274 0F       		.uleb128 0xf
 1127 0275 12       		.byte	0x12
 1128 0276 05       		.byte	0x5
 1129 0277 3901     		.2byte	0x139
 1130 0279 1A030000 		.4byte	0x31a
 1131 027d 0E       		.uleb128 0xe
 1132 027e 4D040000 		.4byte	.LASF29
 1133 0282 05       		.byte	0x5
 1134 0283 3E01     		.2byte	0x13e
 1135 0285 77000000 		.4byte	0x77
 1136 0289 00       		.byte	0
 1137 028a 0E       		.uleb128 0xe
 1138 028b 93070000 		.4byte	.LASF30
 1139 028f 05       		.byte	0x5
 1140 0290 4301     		.2byte	0x143
 1141 0292 D0000000 		.4byte	0xd0
 1142 0296 02       		.byte	0x2
 1143 0297 0E       		.uleb128 0xe
 1144 0298 04040000 		.4byte	.LASF31
 1145 029c 05       		.byte	0x5
 1146 029d 4801     		.2byte	0x148
 1147 029f 6B000000 		.4byte	0x6b
 1148 02a3 04       		.byte	0x4
 1149 02a4 0E       		.uleb128 0xe
 1150 02a5 49050000 		.4byte	.LASF32
 1151 02a9 05       		.byte	0x5
 1152 02aa 4D01     		.2byte	0x14d
 1153 02ac 6B000000 		.4byte	0x6b
 1154 02b0 05       		.byte	0x5
 1155 02b1 0E       		.uleb128 0xe
 1156 02b2 AD030000 		.4byte	.LASF33
 1157 02b6 05       		.byte	0x5
 1158 02b7 5301     		.2byte	0x153
 1159 02b9 6B000000 		.4byte	0x6b
 1160 02bd 06       		.byte	0x6
 1161 02be 0E       		.uleb128 0xe
 1162 02bf F9040000 		.4byte	.LASF34
 1163 02c3 05       		.byte	0x5
 1164 02c4 5901     		.2byte	0x159
 1165 02c6 6B000000 		.4byte	0x6b
 1166 02ca 07       		.byte	0x7
 1167 02cb 0E       		.uleb128 0xe
 1168 02cc ED030000 		.4byte	.LASF35
 1169 02d0 05       		.byte	0x5
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 51


 1170 02d1 6001     		.2byte	0x160
 1171 02d3 DC000000 		.4byte	0xdc
 1172 02d7 08       		.byte	0x8
 1173 02d8 0E       		.uleb128 0xe
 1174 02d9 86070000 		.4byte	.LASF36
 1175 02dd 05       		.byte	0x5
 1176 02de 6701     		.2byte	0x167
 1177 02e0 B7010000 		.4byte	0x1b7
 1178 02e4 09       		.byte	0x9
 1179 02e5 0E       		.uleb128 0xe
 1180 02e6 A9010000 		.4byte	.LASF37
 1181 02ea 05       		.byte	0x5
 1182 02eb 6C01     		.2byte	0x16c
 1183 02ed 6B000000 		.4byte	0x6b
 1184 02f1 0A       		.byte	0xa
 1185 02f2 0E       		.uleb128 0xe
 1186 02f3 77080000 		.4byte	.LASF38
 1187 02f7 05       		.byte	0x5
 1188 02f8 7401     		.2byte	0x174
 1189 02fa 77000000 		.4byte	0x77
 1190 02fe 0C       		.byte	0xc
 1191 02ff 0E       		.uleb128 0xe
 1192 0300 7B060000 		.4byte	.LASF39
 1193 0304 05       		.byte	0x5
 1194 0305 7901     		.2byte	0x179
 1195 0307 6B000000 		.4byte	0x6b
 1196 030b 0E       		.byte	0xe
 1197 030c 0E       		.uleb128 0xe
 1198 030d 4E000000 		.4byte	.LASF42
 1199 0311 05       		.byte	0x5
 1200 0312 7E01     		.2byte	0x17e
 1201 0314 D0000000 		.4byte	0xd0
 1202 0318 10       		.byte	0x10
 1203 0319 00       		.byte	0
 1204 031a 04       		.uleb128 0x4
 1205 031b C2070000 		.4byte	.LASF43
 1206 031f 05       		.byte	0x5
 1207 0320 7F01     		.2byte	0x17f
 1208 0322 74020000 		.4byte	0x274
 1209 0326 0F       		.uleb128 0xf
 1210 0327 62       		.byte	0x62
 1211 0328 05       		.byte	0x5
 1212 0329 8501     		.2byte	0x185
 1213 032b 7E030000 		.4byte	0x37e
 1214 032f 0E       		.uleb128 0xe
 1215 0330 40000000 		.4byte	.LASF44
 1216 0334 05       		.byte	0x5
 1217 0335 8A01     		.2byte	0x18a
 1218 0337 68020000 		.4byte	0x268
 1219 033b 00       		.byte	0
 1220 033c 0E       		.uleb128 0xe
 1221 033d 4B010000 		.4byte	.LASF45
 1222 0341 05       		.byte	0x5
 1223 0342 8F01     		.2byte	0x18f
 1224 0344 68020000 		.4byte	0x268
 1225 0348 10       		.byte	0x10
 1226 0349 0E       		.uleb128 0xe
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 52


 1227 034a A2080000 		.4byte	.LASF46
 1228 034e 05       		.byte	0x5
 1229 034f 9401     		.2byte	0x194
 1230 0351 68020000 		.4byte	0x268
 1231 0355 20       		.byte	0x20
 1232 0356 0E       		.uleb128 0xe
 1233 0357 52050000 		.4byte	.LASF47
 1234 035b 05       		.byte	0x5
 1235 035c 9901     		.2byte	0x199
 1236 035e 68020000 		.4byte	0x268
 1237 0362 30       		.byte	0x30
 1238 0363 0E       		.uleb128 0xe
 1239 0364 97030000 		.4byte	.LASF48
 1240 0368 05       		.byte	0x5
 1241 0369 9E01     		.2byte	0x19e
 1242 036b 68020000 		.4byte	0x268
 1243 036f 40       		.byte	0x40
 1244 0370 0E       		.uleb128 0xe
 1245 0371 8E070000 		.4byte	.LASF49
 1246 0375 05       		.byte	0x5
 1247 0376 A301     		.2byte	0x1a3
 1248 0378 1A030000 		.4byte	0x31a
 1249 037c 50       		.byte	0x50
 1250 037d 00       		.byte	0
 1251 037e 04       		.uleb128 0x4
 1252 037f 75010000 		.4byte	.LASF50
 1253 0383 05       		.byte	0x5
 1254 0384 A401     		.2byte	0x1a4
 1255 0386 26030000 		.4byte	0x326
 1256 038a 0F       		.uleb128 0xf
 1257 038b 0A       		.byte	0xa
 1258 038c 05       		.byte	0x5
 1259 038d AA01     		.2byte	0x1aa
 1260 038f E2030000 		.4byte	0x3e2
 1261 0393 10       		.uleb128 0x10
 1262 0394 72617700 		.ascii	"raw\000"
 1263 0398 05       		.byte	0x5
 1264 0399 AF01     		.2byte	0x1af
 1265 039b E2030000 		.4byte	0x3e2
 1266 039f 00       		.byte	0
 1267 03a0 0E       		.uleb128 0xe
 1268 03a1 8A080000 		.4byte	.LASF51
 1269 03a5 05       		.byte	0x5
 1270 03a6 B401     		.2byte	0x1b4
 1271 03a8 E2030000 		.4byte	0x3e2
 1272 03ac 02       		.byte	0x2
 1273 03ad 0E       		.uleb128 0xe
 1274 03ae 9C070000 		.4byte	.LASF52
 1275 03b2 05       		.byte	0x5
 1276 03b3 BA01     		.2byte	0x1ba
 1277 03b5 B7010000 		.4byte	0x1b7
 1278 03b9 04       		.byte	0x4
 1279 03ba 0E       		.uleb128 0xe
 1280 03bb D7060000 		.4byte	.LASF53
 1281 03bf 05       		.byte	0x5
 1282 03c0 BF01     		.2byte	0x1bf
 1283 03c2 D0000000 		.4byte	0xd0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 53


 1284 03c6 06       		.byte	0x6
 1285 03c7 0E       		.uleb128 0xe
 1286 03c8 C7080000 		.4byte	.LASF54
 1287 03cc 05       		.byte	0x5
 1288 03cd C401     		.2byte	0x1c4
 1289 03cf F2030000 		.4byte	0x3f2
 1290 03d3 08       		.byte	0x8
 1291 03d4 0E       		.uleb128 0xe
 1292 03d5 C0040000 		.4byte	.LASF55
 1293 03d9 05       		.byte	0x5
 1294 03da C901     		.2byte	0x1c9
 1295 03dc B7010000 		.4byte	0x1b7
 1296 03e0 09       		.byte	0x9
 1297 03e1 00       		.byte	0
 1298 03e2 0C       		.uleb128 0xc
 1299 03e3 77000000 		.4byte	0x77
 1300 03e7 F2030000 		.4byte	0x3f2
 1301 03eb 0D       		.uleb128 0xd
 1302 03ec C7000000 		.4byte	0xc7
 1303 03f0 00       		.byte	0
 1304 03f1 00       		.byte	0
 1305 03f2 0C       		.uleb128 0xc
 1306 03f3 DC000000 		.4byte	0xdc
 1307 03f7 02040000 		.4byte	0x402
 1308 03fb 0D       		.uleb128 0xd
 1309 03fc C7000000 		.4byte	0xc7
 1310 0400 00       		.byte	0
 1311 0401 00       		.byte	0
 1312 0402 04       		.uleb128 0x4
 1313 0403 7F030000 		.4byte	.LASF56
 1314 0407 05       		.byte	0x5
 1315 0408 CA01     		.2byte	0x1ca
 1316 040a 8A030000 		.4byte	0x38a
 1317 040e 0F       		.uleb128 0xf
 1318 040f 3C       		.byte	0x3c
 1319 0410 05       		.byte	0x5
 1320 0411 D001     		.2byte	0x1d0
 1321 0413 66040000 		.4byte	0x466
 1322 0417 0E       		.uleb128 0xe
 1323 0418 40000000 		.4byte	.LASF44
 1324 041c 05       		.byte	0x5
 1325 041d D501     		.2byte	0x1d5
 1326 041f 66040000 		.4byte	0x466
 1327 0423 00       		.byte	0
 1328 0424 0E       		.uleb128 0xe
 1329 0425 4B010000 		.4byte	.LASF45
 1330 0429 05       		.byte	0x5
 1331 042a DA01     		.2byte	0x1da
 1332 042c 66040000 		.4byte	0x466
 1333 0430 0A       		.byte	0xa
 1334 0431 0E       		.uleb128 0xe
 1335 0432 A2080000 		.4byte	.LASF46
 1336 0436 05       		.byte	0x5
 1337 0437 DF01     		.2byte	0x1df
 1338 0439 66040000 		.4byte	0x466
 1339 043d 14       		.byte	0x14
 1340 043e 0E       		.uleb128 0xe
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 54


 1341 043f 52050000 		.4byte	.LASF47
 1342 0443 05       		.byte	0x5
 1343 0444 E401     		.2byte	0x1e4
 1344 0446 66040000 		.4byte	0x466
 1345 044a 1E       		.byte	0x1e
 1346 044b 0E       		.uleb128 0xe
 1347 044c 97030000 		.4byte	.LASF48
 1348 0450 05       		.byte	0x5
 1349 0451 E901     		.2byte	0x1e9
 1350 0453 66040000 		.4byte	0x466
 1351 0457 28       		.byte	0x28
 1352 0458 0E       		.uleb128 0xe
 1353 0459 8E070000 		.4byte	.LASF49
 1354 045d 05       		.byte	0x5
 1355 045e EE01     		.2byte	0x1ee
 1356 0460 66040000 		.4byte	0x466
 1357 0464 32       		.byte	0x32
 1358 0465 00       		.byte	0
 1359 0466 0C       		.uleb128 0xc
 1360 0467 02040000 		.4byte	0x402
 1361 046b 76040000 		.4byte	0x476
 1362 046f 0D       		.uleb128 0xd
 1363 0470 C7000000 		.4byte	0xc7
 1364 0474 00       		.byte	0
 1365 0475 00       		.byte	0
 1366 0476 04       		.uleb128 0x4
 1367 0477 F2080000 		.4byte	.LASF57
 1368 047b 05       		.byte	0x5
 1369 047c EF01     		.2byte	0x1ef
 1370 047e 0E040000 		.4byte	0x40e
 1371 0482 0F       		.uleb128 0xf
 1372 0483 C8       		.byte	0xc8
 1373 0484 05       		.byte	0x5
 1374 0485 F501     		.2byte	0x1f5
 1375 0487 83050000 		.4byte	0x583
 1376 048b 0E       		.uleb128 0xe
 1377 048c 38060000 		.4byte	.LASF58
 1378 0490 05       		.byte	0x5
 1379 0491 FC01     		.2byte	0x1fc
 1380 0493 77000000 		.4byte	0x77
 1381 0497 00       		.byte	0
 1382 0498 0E       		.uleb128 0xe
 1383 0499 E0080000 		.4byte	.LASF59
 1384 049d 05       		.byte	0x5
 1385 049e 0102     		.2byte	0x201
 1386 04a0 77000000 		.4byte	0x77
 1387 04a4 02       		.byte	0x2
 1388 04a5 0E       		.uleb128 0xe
 1389 04a6 D3000000 		.4byte	.LASF60
 1390 04aa 05       		.byte	0x5
 1391 04ab 0602     		.2byte	0x206
 1392 04ad 77000000 		.4byte	0x77
 1393 04b1 04       		.byte	0x4
 1394 04b2 0E       		.uleb128 0xe
 1395 04b3 DC060000 		.4byte	.LASF61
 1396 04b7 05       		.byte	0x5
 1397 04b8 0C02     		.2byte	0x20c
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 55


 1398 04ba 77000000 		.4byte	0x77
 1399 04be 06       		.byte	0x6
 1400 04bf 0E       		.uleb128 0xe
 1401 04c0 AA000000 		.4byte	.LASF62
 1402 04c4 05       		.byte	0x5
 1403 04c5 1102     		.2byte	0x211
 1404 04c7 77000000 		.4byte	0x77
 1405 04cb 08       		.byte	0x8
 1406 04cc 0E       		.uleb128 0xe
 1407 04cd 58040000 		.4byte	.LASF63
 1408 04d1 05       		.byte	0x5
 1409 04d2 1602     		.2byte	0x216
 1410 04d4 B0000000 		.4byte	0xb0
 1411 04d8 0C       		.byte	0xc
 1412 04d9 0E       		.uleb128 0xe
 1413 04da CC060000 		.4byte	.LASF64
 1414 04de 05       		.byte	0x5
 1415 04df 1C02     		.2byte	0x21c
 1416 04e1 83050000 		.4byte	0x583
 1417 04e5 10       		.byte	0x10
 1418 04e6 0E       		.uleb128 0xe
 1419 04e7 60070000 		.4byte	.LASF65
 1420 04eb 05       		.byte	0x5
 1421 04ec 2302     		.2byte	0x223
 1422 04ee 83050000 		.4byte	0x583
 1423 04f2 14       		.byte	0x14
 1424 04f3 0E       		.uleb128 0xe
 1425 04f4 57060000 		.4byte	.LASF66
 1426 04f8 05       		.byte	0x5
 1427 04f9 3302     		.2byte	0x233
 1428 04fb 93050000 		.4byte	0x593
 1429 04ff 18       		.byte	0x18
 1430 0500 0E       		.uleb128 0xe
 1431 0501 5F050000 		.4byte	.LASF67
 1432 0505 05       		.byte	0x5
 1433 0506 3902     		.2byte	0x239
 1434 0508 77000000 		.4byte	0x77
 1435 050c 1E       		.byte	0x1e
 1436 050d 0E       		.uleb128 0xe
 1437 050e 75030000 		.4byte	.LASF68
 1438 0512 05       		.byte	0x5
 1439 0513 3E02     		.2byte	0x23e
 1440 0515 6B000000 		.4byte	0x6b
 1441 0519 20       		.byte	0x20
 1442 051a 0E       		.uleb128 0xe
 1443 051b 04050000 		.4byte	.LASF69
 1444 051f 05       		.byte	0x5
 1445 0520 4302     		.2byte	0x243
 1446 0522 7E030000 		.4byte	0x37e
 1447 0526 22       		.byte	0x22
 1448 0527 0E       		.uleb128 0xe
 1449 0528 B7020000 		.4byte	.LASF70
 1450 052c 05       		.byte	0x5
 1451 052d 4802     		.2byte	0x248
 1452 052f 76040000 		.4byte	0x476
 1453 0533 84       		.byte	0x84
 1454 0534 0E       		.uleb128 0xe
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 56


 1455 0535 6B000000 		.4byte	.LASF71
 1456 0539 05       		.byte	0x5
 1457 053a 4D02     		.2byte	0x24d
 1458 053c 6B000000 		.4byte	0x6b
 1459 0540 C0       		.byte	0xc0
 1460 0541 0E       		.uleb128 0xe
 1461 0542 0C030000 		.4byte	.LASF72
 1462 0546 05       		.byte	0x5
 1463 0547 5202     		.2byte	0x252
 1464 0549 6B000000 		.4byte	0x6b
 1465 054d C1       		.byte	0xc1
 1466 054e 0E       		.uleb128 0xe
 1467 054f 25060000 		.4byte	.LASF73
 1468 0553 05       		.byte	0x5
 1469 0554 5702     		.2byte	0x257
 1470 0556 77000000 		.4byte	0x77
 1471 055a C2       		.byte	0xc2
 1472 055b 0E       		.uleb128 0xe
 1473 055c 32050000 		.4byte	.LASF74
 1474 0560 05       		.byte	0x5
 1475 0561 5C02     		.2byte	0x25c
 1476 0563 E2030000 		.4byte	0x3e2
 1477 0567 C4       		.byte	0xc4
 1478 0568 0E       		.uleb128 0xe
 1479 0569 DB000000 		.4byte	.LASF75
 1480 056d 05       		.byte	0x5
 1481 056e 6102     		.2byte	0x261
 1482 0570 6B000000 		.4byte	0x6b
 1483 0574 C6       		.byte	0xc6
 1484 0575 0E       		.uleb128 0xe
 1485 0576 23080000 		.4byte	.LASF76
 1486 057a 05       		.byte	0x5
 1487 057b 6602     		.2byte	0x266
 1488 057d 6B000000 		.4byte	0x6b
 1489 0581 C7       		.byte	0xc7
 1490 0582 00       		.byte	0
 1491 0583 0C       		.uleb128 0xc
 1492 0584 83000000 		.4byte	0x83
 1493 0588 93050000 		.4byte	0x593
 1494 058c 0D       		.uleb128 0xd
 1495 058d C7000000 		.4byte	0xc7
 1496 0591 00       		.byte	0
 1497 0592 00       		.byte	0
 1498 0593 0C       		.uleb128 0xc
 1499 0594 6B000000 		.4byte	0x6b
 1500 0598 A3050000 		.4byte	0x5a3
 1501 059c 0D       		.uleb128 0xd
 1502 059d C7000000 		.4byte	0xc7
 1503 05a1 05       		.byte	0x5
 1504 05a2 00       		.byte	0
 1505 05a3 04       		.uleb128 0x4
 1506 05a4 92060000 		.4byte	.LASF77
 1507 05a8 05       		.byte	0x5
 1508 05a9 6702     		.2byte	0x267
 1509 05ab 82040000 		.4byte	0x482
 1510 05af 0F       		.uleb128 0xf
 1511 05b0 1C       		.byte	0x1c
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 57


 1512 05b1 05       		.byte	0x5
 1513 05b2 CE02     		.2byte	0x2ce
 1514 05b4 2E060000 		.4byte	0x62e
 1515 05b8 0E       		.uleb128 0xe
 1516 05b9 AD080000 		.4byte	.LASF78
 1517 05bd 05       		.byte	0x5
 1518 05be D702     		.2byte	0x2d7
 1519 05c0 2E060000 		.4byte	0x62e
 1520 05c4 00       		.byte	0
 1521 05c5 0E       		.uleb128 0xe
 1522 05c6 32080000 		.4byte	.LASF79
 1523 05ca 05       		.byte	0x5
 1524 05cb DE02     		.2byte	0x2de
 1525 05cd CE000000 		.4byte	0xce
 1526 05d1 04       		.byte	0x4
 1527 05d2 0E       		.uleb128 0xe
 1528 05d3 41060000 		.4byte	.LASF80
 1529 05d7 05       		.byte	0x5
 1530 05d8 E402     		.2byte	0x2e4
 1531 05da 35060000 		.4byte	0x635
 1532 05de 08       		.byte	0x8
 1533 05df 0E       		.uleb128 0xe
 1534 05e0 B8050000 		.4byte	.LASF81
 1535 05e4 05       		.byte	0x5
 1536 05e5 EA02     		.2byte	0x2ea
 1537 05e7 CE000000 		.4byte	0xce
 1538 05eb 0C       		.byte	0xc
 1539 05ec 0E       		.uleb128 0xe
 1540 05ed 3D040000 		.4byte	.LASF82
 1541 05f1 05       		.byte	0x5
 1542 05f2 F102     		.2byte	0x2f1
 1543 05f4 3B060000 		.4byte	0x63b
 1544 05f8 10       		.byte	0x10
 1545 05f9 0E       		.uleb128 0xe
 1546 05fa 16080000 		.4byte	.LASF83
 1547 05fe 05       		.byte	0x5
 1548 05ff F602     		.2byte	0x2f6
 1549 0601 83000000 		.4byte	0x83
 1550 0605 14       		.byte	0x14
 1551 0606 0E       		.uleb128 0xe
 1552 0607 F8030000 		.4byte	.LASF84
 1553 060b 05       		.byte	0x5
 1554 060c FD02     		.2byte	0x2fd
 1555 060e 77000000 		.4byte	0x77
 1556 0612 18       		.byte	0x18
 1557 0613 0E       		.uleb128 0xe
 1558 0614 1C030000 		.4byte	.LASF85
 1559 0618 05       		.byte	0x5
 1560 0619 0403     		.2byte	0x304
 1561 061b 6B000000 		.4byte	0x6b
 1562 061f 1A       		.byte	0x1a
 1563 0620 0E       		.uleb128 0xe
 1564 0621 D7040000 		.4byte	.LASF86
 1565 0625 05       		.byte	0x5
 1566 0626 0E03     		.2byte	0x30e
 1567 0628 6B000000 		.4byte	0x6b
 1568 062c 1B       		.byte	0x1b
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 58


 1569 062d 00       		.byte	0
 1570 062e 11       		.uleb128 0x11
 1571 062f 04       		.byte	0x4
 1572 0630 34060000 		.4byte	0x634
 1573 0634 12       		.uleb128 0x12
 1574 0635 11       		.uleb128 0x11
 1575 0636 04       		.byte	0x4
 1576 0637 02040000 		.4byte	0x402
 1577 063b 11       		.uleb128 0x11
 1578 063c 04       		.byte	0x4
 1579 063d 6B000000 		.4byte	0x6b
 1580 0641 04       		.uleb128 0x4
 1581 0642 D4030000 		.4byte	.LASF87
 1582 0646 05       		.byte	0x5
 1583 0647 0F03     		.2byte	0x30f
 1584 0649 AF050000 		.4byte	0x5af
 1585 064d 0F       		.uleb128 0xf
 1586 064e A8       		.byte	0xa8
 1587 064f 05       		.byte	0x5
 1588 0650 1503     		.2byte	0x315
 1589 0652 64060000 		.4byte	0x664
 1590 0656 0E       		.uleb128 0xe
 1591 0657 0F090000 		.4byte	.LASF88
 1592 065b 05       		.byte	0x5
 1593 065c 1A03     		.2byte	0x31a
 1594 065e 64060000 		.4byte	0x664
 1595 0662 00       		.byte	0
 1596 0663 00       		.byte	0
 1597 0664 0C       		.uleb128 0xc
 1598 0665 41060000 		.4byte	0x641
 1599 0669 74060000 		.4byte	0x674
 1600 066d 0D       		.uleb128 0xd
 1601 066e C7000000 		.4byte	0xc7
 1602 0672 05       		.byte	0x5
 1603 0673 00       		.byte	0
 1604 0674 04       		.uleb128 0x4
 1605 0675 0D050000 		.4byte	.LASF89
 1606 0679 05       		.byte	0x5
 1607 067a 1B03     		.2byte	0x31b
 1608 067c 4D060000 		.4byte	0x64d
 1609 0680 0F       		.uleb128 0xf
 1610 0681 0C       		.byte	0xc
 1611 0682 05       		.byte	0x5
 1612 0683 7903     		.2byte	0x379
 1613 0685 B1060000 		.4byte	0x6b1
 1614 0689 0E       		.uleb128 0xe
 1615 068a 56080000 		.4byte	.LASF90
 1616 068e 05       		.byte	0x5
 1617 068f 7E03     		.2byte	0x37e
 1618 0691 77000000 		.4byte	0x77
 1619 0695 00       		.byte	0
 1620 0696 0E       		.uleb128 0xe
 1621 0697 F2050000 		.4byte	.LASF91
 1622 069b 05       		.byte	0x5
 1623 069c 8403     		.2byte	0x384
 1624 069e B1060000 		.4byte	0x6b1
 1625 06a2 02       		.byte	0x2
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 59


 1626 06a3 0E       		.uleb128 0xe
 1627 06a4 4C060000 		.4byte	.LASF92
 1628 06a8 05       		.byte	0x5
 1629 06a9 8903     		.2byte	0x389
 1630 06ab C1060000 		.4byte	0x6c1
 1631 06af 06       		.byte	0x6
 1632 06b0 00       		.byte	0
 1633 06b1 0C       		.uleb128 0xc
 1634 06b2 77000000 		.4byte	0x77
 1635 06b6 C1060000 		.4byte	0x6c1
 1636 06ba 0D       		.uleb128 0xd
 1637 06bb C7000000 		.4byte	0xc7
 1638 06bf 01       		.byte	0x1
 1639 06c0 00       		.byte	0
 1640 06c1 0C       		.uleb128 0xc
 1641 06c2 77000000 		.4byte	0x77
 1642 06c6 D1060000 		.4byte	0x6d1
 1643 06ca 0D       		.uleb128 0xd
 1644 06cb C7000000 		.4byte	0xc7
 1645 06cf 02       		.byte	0x2
 1646 06d0 00       		.byte	0
 1647 06d1 04       		.uleb128 0x4
 1648 06d2 00070000 		.4byte	.LASF93
 1649 06d6 05       		.byte	0x5
 1650 06d7 8A03     		.2byte	0x38a
 1651 06d9 80060000 		.4byte	0x680
 1652 06dd 0F       		.uleb128 0xf
 1653 06de 0C       		.byte	0xc
 1654 06df 05       		.byte	0x5
 1655 06e0 8F03     		.2byte	0x38f
 1656 06e2 0E070000 		.4byte	0x70e
 1657 06e6 0E       		.uleb128 0xe
 1658 06e7 56080000 		.4byte	.LASF90
 1659 06eb 05       		.byte	0x5
 1660 06ec 9403     		.2byte	0x394
 1661 06ee 77000000 		.4byte	0x77
 1662 06f2 00       		.byte	0
 1663 06f3 0E       		.uleb128 0xe
 1664 06f4 F2050000 		.4byte	.LASF91
 1665 06f8 05       		.byte	0x5
 1666 06f9 9903     		.2byte	0x399
 1667 06fb B1060000 		.4byte	0x6b1
 1668 06ff 02       		.byte	0x2
 1669 0700 0E       		.uleb128 0xe
 1670 0701 4C060000 		.4byte	.LASF92
 1671 0705 05       		.byte	0x5
 1672 0706 9E03     		.2byte	0x39e
 1673 0708 C1060000 		.4byte	0x6c1
 1674 070c 06       		.byte	0x6
 1675 070d 00       		.byte	0
 1676 070e 04       		.uleb128 0x4
 1677 070f 2F070000 		.4byte	.LASF94
 1678 0713 05       		.byte	0x5
 1679 0714 9F03     		.2byte	0x39f
 1680 0716 DD060000 		.4byte	0x6dd
 1681 071a 0F       		.uleb128 0xf
 1682 071b 0C       		.byte	0xc
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 60


 1683 071c 05       		.byte	0x5
 1684 071d A403     		.2byte	0x3a4
 1685 071f 31070000 		.4byte	0x731
 1686 0723 0E       		.uleb128 0xe
 1687 0724 66030000 		.4byte	.LASF95
 1688 0728 05       		.byte	0x5
 1689 0729 A903     		.2byte	0x3a9
 1690 072b 31070000 		.4byte	0x731
 1691 072f 00       		.byte	0
 1692 0730 00       		.byte	0
 1693 0731 0C       		.uleb128 0xc
 1694 0732 D1060000 		.4byte	0x6d1
 1695 0736 41070000 		.4byte	0x741
 1696 073a 0D       		.uleb128 0xd
 1697 073b C7000000 		.4byte	0xc7
 1698 073f 00       		.byte	0
 1699 0740 00       		.byte	0
 1700 0741 04       		.uleb128 0x4
 1701 0742 A6060000 		.4byte	.LASF96
 1702 0746 05       		.byte	0x5
 1703 0747 AA03     		.2byte	0x3aa
 1704 0749 1A070000 		.4byte	0x71a
 1705 074d 0F       		.uleb128 0xf
 1706 074e 0C       		.byte	0xc
 1707 074f 05       		.byte	0x5
 1708 0750 AF03     		.2byte	0x3af
 1709 0752 64070000 		.4byte	0x764
 1710 0756 0E       		.uleb128 0xe
 1711 0757 59020000 		.4byte	.LASF97
 1712 075b 05       		.byte	0x5
 1713 075c B403     		.2byte	0x3b4
 1714 075e 64070000 		.4byte	0x764
 1715 0762 00       		.byte	0
 1716 0763 00       		.byte	0
 1717 0764 0C       		.uleb128 0xc
 1718 0765 0E070000 		.4byte	0x70e
 1719 0769 74070000 		.4byte	0x774
 1720 076d 0D       		.uleb128 0xd
 1721 076e C7000000 		.4byte	0xc7
 1722 0772 00       		.byte	0
 1723 0773 00       		.byte	0
 1724 0774 04       		.uleb128 0x4
 1725 0775 DF040000 		.4byte	.LASF98
 1726 0779 05       		.byte	0x5
 1727 077a B503     		.2byte	0x3b5
 1728 077c 4D070000 		.4byte	0x74d
 1729 0780 13       		.uleb128 0x13
 1730 0781 04       		.byte	0x4
 1731 0782 05       		.byte	0x5
 1732 0783 BB03     		.2byte	0x3bb
 1733 0785 AE070000 		.4byte	0x7ae
 1734 0789 14       		.uleb128 0x14
 1735 078a 70747200 		.ascii	"ptr\000"
 1736 078e 05       		.byte	0x5
 1737 078f C003     		.2byte	0x3c0
 1738 0791 CE000000 		.4byte	0xce
 1739 0795 15       		.uleb128 0x15
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 61


 1740 0796 FA020000 		.4byte	.LASF99
 1741 079a 05       		.byte	0x5
 1742 079b C503     		.2byte	0x3c5
 1743 079d AE070000 		.4byte	0x7ae
 1744 07a1 15       		.uleb128 0x15
 1745 07a2 BF020000 		.4byte	.LASF100
 1746 07a6 05       		.byte	0x5
 1747 07a7 CA03     		.2byte	0x3ca
 1748 07a9 B4070000 		.4byte	0x7b4
 1749 07ad 00       		.byte	0
 1750 07ae 11       		.uleb128 0x11
 1751 07af 04       		.byte	0x4
 1752 07b0 41070000 		.4byte	0x741
 1753 07b4 11       		.uleb128 0x11
 1754 07b5 04       		.byte	0x4
 1755 07b6 74070000 		.4byte	0x774
 1756 07ba 04       		.uleb128 0x4
 1757 07bb 4A030000 		.4byte	.LASF101
 1758 07bf 05       		.byte	0x5
 1759 07c0 CB03     		.2byte	0x3cb
 1760 07c2 80070000 		.4byte	0x780
 1761 07c6 16       		.uleb128 0x16
 1762 07c7 87020000 		.4byte	.LASF106
 1763 07cb 01       		.byte	0x1
 1764 07cc 9001     		.2byte	0x190
 1765 07ce 00000000 		.4byte	.LFB1
 1766 07d2 70000000 		.4byte	.LFE1-.LFB1
 1767 07d6 01       		.uleb128 0x1
 1768 07d7 9C       		.byte	0x9c
 1769 07d8 2F080000 		.4byte	0x82f
 1770 07dc 17       		.uleb128 0x17
 1771 07dd 5A000000 		.4byte	.LASF102
 1772 07e1 01       		.byte	0x1
 1773 07e2 9201     		.2byte	0x192
 1774 07e4 83000000 		.4byte	0x83
 1775 07e8 00000000 		.4byte	.LLST0
 1776 07ec 17       		.uleb128 0x17
 1777 07ed D5080000 		.4byte	.LASF103
 1778 07f1 01       		.byte	0x1
 1779 07f2 9301     		.2byte	0x193
 1780 07f4 1F010000 		.4byte	0x11f
 1781 07f8 4D000000 		.4byte	.LLST1
 1782 07fc 17       		.uleb128 0x17
 1783 07fd 12060000 		.4byte	.LASF104
 1784 0801 01       		.byte	0x1
 1785 0802 9401     		.2byte	0x194
 1786 0804 2F080000 		.4byte	0x82f
 1787 0808 6B000000 		.4byte	.LLST2
 1788 080c 17       		.uleb128 0x17
 1789 080d 09080000 		.4byte	.LASF105
 1790 0811 01       		.byte	0x1
 1791 0812 9501     		.2byte	0x195
 1792 0814 35080000 		.4byte	0x835
 1793 0818 7E000000 		.4byte	.LLST3
 1794 081c 18       		.uleb128 0x18
 1795 081d 48000000 		.4byte	.LVL8
 1796 0821 A30C0000 		.4byte	0xca3
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 62


 1797 0825 18       		.uleb128 0x18
 1798 0826 5A000000 		.4byte	.LVL11
 1799 082a A30C0000 		.4byte	0xca3
 1800 082e 00       		.byte	0
 1801 082f 11       		.uleb128 0x11
 1802 0830 04       		.byte	0x4
 1803 0831 C7010000 		.4byte	0x1c7
 1804 0835 11       		.uleb128 0x11
 1805 0836 04       		.byte	0x4
 1806 0837 3B080000 		.4byte	0x83b
 1807 083b 19       		.uleb128 0x19
 1808 083c 41060000 		.4byte	0x641
 1809 0840 16       		.uleb128 0x16
 1810 0841 B6000000 		.4byte	.LASF107
 1811 0845 01       		.byte	0x1
 1812 0846 5E05     		.2byte	0x55e
 1813 0848 00000000 		.4byte	.LFB5
 1814 084c 16000000 		.4byte	.LFE5-.LFB5
 1815 0850 01       		.uleb128 0x1
 1816 0851 9C       		.byte	0x9c
 1817 0852 85080000 		.4byte	0x885
 1818 0856 1A       		.uleb128 0x1a
 1819 0857 12060000 		.4byte	.LASF104
 1820 085b 01       		.byte	0x1
 1821 085c 5F05     		.2byte	0x55f
 1822 085e 2F080000 		.4byte	0x82f
 1823 0862 91000000 		.4byte	.LLST4
 1824 0866 1B       		.uleb128 0x1b
 1825 0867 54010000 		.4byte	.LASF108
 1826 086b 01       		.byte	0x1
 1827 086c 6005     		.2byte	0x560
 1828 086e 35060000 		.4byte	0x635
 1829 0872 01       		.uleb128 0x1
 1830 0873 51       		.byte	0x51
 1831 0874 17       		.uleb128 0x17
 1832 0875 ED000000 		.4byte	.LASF109
 1833 0879 01       		.byte	0x1
 1834 087a 6205     		.2byte	0x562
 1835 087c 8F000000 		.4byte	0x8f
 1836 0880 B2000000 		.4byte	.LLST5
 1837 0884 00       		.byte	0
 1838 0885 1C       		.uleb128 0x1c
 1839 0886 11040000 		.4byte	.LASF115
 1840 088a 01       		.byte	0x1
 1841 088b F803     		.2byte	0x3f8
 1842 088d 83000000 		.4byte	0x83
 1843 0891 00000000 		.4byte	.LFB2
 1844 0895 6A000000 		.4byte	.LFE2-.LFB2
 1845 0899 01       		.uleb128 0x1
 1846 089a 9C       		.byte	0x9c
 1847 089b 79090000 		.4byte	0x979
 1848 089f 1A       		.uleb128 0x1a
 1849 08a0 09080000 		.4byte	.LASF105
 1850 08a4 01       		.byte	0x1
 1851 08a5 F803     		.2byte	0x3f8
 1852 08a7 35080000 		.4byte	0x835
 1853 08ab E1000000 		.4byte	.LLST6
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 63


 1854 08af 17       		.uleb128 0x17
 1855 08b0 A2010000 		.4byte	.LASF110
 1856 08b4 01       		.byte	0x1
 1857 08b5 FA03     		.2byte	0x3fa
 1858 08b7 83000000 		.4byte	0x83
 1859 08bb 0D010000 		.4byte	.LLST7
 1860 08bf 1D       		.uleb128 0x1d
 1861 08c0 D5080000 		.4byte	.LASF103
 1862 08c4 01       		.byte	0x1
 1863 08c5 0004     		.2byte	0x400
 1864 08c7 83000000 		.4byte	0x83
 1865 08cb 02       		.uleb128 0x2
 1866 08cc 91       		.byte	0x91
 1867 08cd 60       		.sleb128 -32
 1868 08ce 17       		.uleb128 0x17
 1869 08cf E5060000 		.4byte	.LASF111
 1870 08d3 01       		.byte	0x1
 1871 08d4 0104     		.2byte	0x401
 1872 08d6 83000000 		.4byte	0x83
 1873 08da 44010000 		.4byte	.LLST8
 1874 08de 17       		.uleb128 0x17
 1875 08df 25070000 		.4byte	.LASF112
 1876 08e3 01       		.byte	0x1
 1877 08e4 0204     		.2byte	0x402
 1878 08e6 35060000 		.4byte	0x635
 1879 08ea 63010000 		.4byte	.LLST9
 1880 08ee 17       		.uleb128 0x17
 1881 08ef 12060000 		.4byte	.LASF104
 1882 08f3 01       		.byte	0x1
 1883 08f4 0304     		.2byte	0x403
 1884 08f6 2F080000 		.4byte	0x82f
 1885 08fa 76010000 		.4byte	.LLST10
 1886 08fe 17       		.uleb128 0x17
 1887 08ff 61000000 		.4byte	.LASF113
 1888 0903 01       		.byte	0x1
 1889 0904 0E04     		.2byte	0x40e
 1890 0906 BA070000 		.4byte	0x7ba
 1891 090a 95010000 		.4byte	.LLST11
 1892 090e 17       		.uleb128 0x17
 1893 090f FE070000 		.4byte	.LASF114
 1894 0913 01       		.byte	0x1
 1895 0914 1104     		.2byte	0x411
 1896 0916 83000000 		.4byte	0x83
 1897 091a B3010000 		.4byte	.LLST12
 1898 091e 1E       		.uleb128 0x1e
 1899 091f 36000000 		.4byte	.LVL31
 1900 0923 AE0C0000 		.4byte	0xcae
 1901 0927 3F090000 		.4byte	0x93f
 1902 092b 1F       		.uleb128 0x1f
 1903 092c 01       		.uleb128 0x1
 1904 092d 50       		.byte	0x50
 1905 092e 02       		.uleb128 0x2
 1906 092f 75       		.byte	0x75
 1907 0930 00       		.sleb128 0
 1908 0931 1F       		.uleb128 0x1f
 1909 0932 01       		.uleb128 0x1
 1910 0933 51       		.byte	0x51
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 64


 1911 0934 02       		.uleb128 0x2
 1912 0935 74       		.byte	0x74
 1913 0936 00       		.sleb128 0
 1914 0937 1F       		.uleb128 0x1f
 1915 0938 01       		.uleb128 0x1
 1916 0939 52       		.byte	0x52
 1917 093a 03       		.uleb128 0x3
 1918 093b 91       		.byte	0x91
 1919 093c 60       		.sleb128 -32
 1920 093d 06       		.byte	0x6
 1921 093e 00       		.byte	0
 1922 093f 1E       		.uleb128 0x1e
 1923 0940 40000000 		.4byte	.LVL32
 1924 0944 B90C0000 		.4byte	0xcb9
 1925 0948 61090000 		.4byte	0x961
 1926 094c 1F       		.uleb128 0x1f
 1927 094d 01       		.uleb128 0x1
 1928 094e 50       		.byte	0x50
 1929 094f 03       		.uleb128 0x3
 1930 0950 91       		.byte	0x91
 1931 0951 5C       		.sleb128 -36
 1932 0952 06       		.byte	0x6
 1933 0953 1F       		.uleb128 0x1f
 1934 0954 01       		.uleb128 0x1
 1935 0955 51       		.byte	0x51
 1936 0956 02       		.uleb128 0x2
 1937 0957 74       		.byte	0x74
 1938 0958 00       		.sleb128 0
 1939 0959 1F       		.uleb128 0x1f
 1940 095a 01       		.uleb128 0x1
 1941 095b 52       		.byte	0x52
 1942 095c 03       		.uleb128 0x3
 1943 095d 91       		.byte	0x91
 1944 095e 60       		.sleb128 -32
 1945 095f 06       		.byte	0x6
 1946 0960 00       		.byte	0
 1947 0961 20       		.uleb128 0x20
 1948 0962 4A000000 		.4byte	.LVL35
 1949 0966 40080000 		.4byte	0x840
 1950 096a 1F       		.uleb128 0x1f
 1951 096b 01       		.uleb128 0x1
 1952 096c 50       		.byte	0x50
 1953 096d 03       		.uleb128 0x3
 1954 096e 91       		.byte	0x91
 1955 096f 5C       		.sleb128 -36
 1956 0970 06       		.byte	0x6
 1957 0971 1F       		.uleb128 0x1f
 1958 0972 01       		.uleb128 0x1
 1959 0973 51       		.byte	0x51
 1960 0974 02       		.uleb128 0x2
 1961 0975 74       		.byte	0x74
 1962 0976 00       		.sleb128 0
 1963 0977 00       		.byte	0
 1964 0978 00       		.byte	0
 1965 0979 1C       		.uleb128 0x1c
 1966 097a 18000000 		.4byte	.LASF116
 1967 097e 01       		.byte	0x1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 65


 1968 097f 7A04     		.2byte	0x47a
 1969 0981 83000000 		.4byte	0x83
 1970 0985 00000000 		.4byte	.LFB3
 1971 0989 40000000 		.4byte	.LFE3-.LFB3
 1972 098d 01       		.uleb128 0x1
 1973 098e 9C       		.byte	0x9c
 1974 098f 5B0A0000 		.4byte	0xa5b
 1975 0993 1A       		.uleb128 0x1a
 1976 0994 09080000 		.4byte	.LASF105
 1977 0998 01       		.byte	0x1
 1978 0999 7B04     		.2byte	0x47b
 1979 099b 35080000 		.4byte	0x835
 1980 099f DC010000 		.4byte	.LLST13
 1981 09a3 1A       		.uleb128 0x1a
 1982 09a4 54010000 		.4byte	.LASF108
 1983 09a8 01       		.byte	0x1
 1984 09a9 7C04     		.2byte	0x47c
 1985 09ab 35060000 		.4byte	0x635
 1986 09af FD010000 		.4byte	.LLST14
 1987 09b3 1A       		.uleb128 0x1a
 1988 09b4 61000000 		.4byte	.LASF113
 1989 09b8 01       		.byte	0x1
 1990 09b9 7D04     		.2byte	0x47d
 1991 09bb BA070000 		.4byte	0x7ba
 1992 09bf 29020000 		.4byte	.LLST15
 1993 09c3 1A       		.uleb128 0x1a
 1994 09c4 A8030000 		.4byte	.LASF117
 1995 09c8 01       		.byte	0x1
 1996 09c9 7E04     		.2byte	0x47e
 1997 09cb 83000000 		.4byte	0x83
 1998 09cf 5D020000 		.4byte	.LLST16
 1999 09d3 17       		.uleb128 0x17
 2000 09d4 A2010000 		.4byte	.LASF110
 2001 09d8 01       		.byte	0x1
 2002 09d9 8004     		.2byte	0x480
 2003 09db 83000000 		.4byte	0x83
 2004 09df 89020000 		.4byte	.LLST17
 2005 09e3 17       		.uleb128 0x17
 2006 09e4 D5080000 		.4byte	.LASF103
 2007 09e8 01       		.byte	0x1
 2008 09e9 8104     		.2byte	0x481
 2009 09eb 83000000 		.4byte	0x83
 2010 09ef CA020000 		.4byte	.LLST18
 2011 09f3 17       		.uleb128 0x17
 2012 09f4 12060000 		.4byte	.LASF104
 2013 09f8 01       		.byte	0x1
 2014 09f9 8204     		.2byte	0x482
 2015 09fb 2F080000 		.4byte	0x82f
 2016 09ff E8020000 		.4byte	.LLST19
 2017 0a03 1E       		.uleb128 0x1e
 2018 0a04 1A000000 		.4byte	.LVL53
 2019 0a08 AE0C0000 		.4byte	0xcae
 2020 0a0c 240A0000 		.4byte	0xa24
 2021 0a10 1F       		.uleb128 0x1f
 2022 0a11 01       		.uleb128 0x1
 2023 0a12 50       		.byte	0x50
 2024 0a13 03       		.uleb128 0x3
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 66


 2025 0a14 91       		.byte	0x91
 2026 0a15 64       		.sleb128 -28
 2027 0a16 06       		.byte	0x6
 2028 0a17 1F       		.uleb128 0x1f
 2029 0a18 01       		.uleb128 0x1
 2030 0a19 51       		.byte	0x51
 2031 0a1a 02       		.uleb128 0x2
 2032 0a1b 76       		.byte	0x76
 2033 0a1c 00       		.sleb128 0
 2034 0a1d 1F       		.uleb128 0x1f
 2035 0a1e 01       		.uleb128 0x1
 2036 0a1f 52       		.byte	0x52
 2037 0a20 02       		.uleb128 0x2
 2038 0a21 75       		.byte	0x75
 2039 0a22 00       		.sleb128 0
 2040 0a23 00       		.byte	0
 2041 0a24 1E       		.uleb128 0x1e
 2042 0a25 28000000 		.4byte	.LVL55
 2043 0a29 B90C0000 		.4byte	0xcb9
 2044 0a2d 440A0000 		.4byte	0xa44
 2045 0a31 1F       		.uleb128 0x1f
 2046 0a32 01       		.uleb128 0x1
 2047 0a33 50       		.byte	0x50
 2048 0a34 02       		.uleb128 0x2
 2049 0a35 77       		.byte	0x77
 2050 0a36 00       		.sleb128 0
 2051 0a37 1F       		.uleb128 0x1f
 2052 0a38 01       		.uleb128 0x1
 2053 0a39 51       		.byte	0x51
 2054 0a3a 02       		.uleb128 0x2
 2055 0a3b 76       		.byte	0x76
 2056 0a3c 00       		.sleb128 0
 2057 0a3d 1F       		.uleb128 0x1f
 2058 0a3e 01       		.uleb128 0x1
 2059 0a3f 52       		.byte	0x52
 2060 0a40 02       		.uleb128 0x2
 2061 0a41 75       		.byte	0x75
 2062 0a42 00       		.sleb128 0
 2063 0a43 00       		.byte	0
 2064 0a44 20       		.uleb128 0x20
 2065 0a45 3A000000 		.4byte	.LVL59
 2066 0a49 40080000 		.4byte	0x840
 2067 0a4d 1F       		.uleb128 0x1f
 2068 0a4e 01       		.uleb128 0x1
 2069 0a4f 50       		.byte	0x50
 2070 0a50 02       		.uleb128 0x2
 2071 0a51 77       		.byte	0x77
 2072 0a52 00       		.sleb128 0
 2073 0a53 1F       		.uleb128 0x1f
 2074 0a54 01       		.uleb128 0x1
 2075 0a55 51       		.byte	0x51
 2076 0a56 02       		.uleb128 0x2
 2077 0a57 76       		.byte	0x76
 2078 0a58 00       		.sleb128 0
 2079 0a59 00       		.byte	0
 2080 0a5a 00       		.byte	0
 2081 0a5b 1C       		.uleb128 0x1c
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 67


 2082 0a5c A7040000 		.4byte	.LASF118
 2083 0a60 01       		.byte	0x1
 2084 0a61 A805     		.2byte	0x5a8
 2085 0a63 83000000 		.4byte	0x83
 2086 0a67 00000000 		.4byte	.LFB6
 2087 0a6b 64000000 		.4byte	.LFE6-.LFB6
 2088 0a6f 01       		.uleb128 0x1
 2089 0a70 9C       		.byte	0x9c
 2090 0a71 040B0000 		.4byte	0xb04
 2091 0a75 1A       		.uleb128 0x1a
 2092 0a76 61080000 		.4byte	.LASF119
 2093 0a7a 01       		.byte	0x1
 2094 0a7b A805     		.2byte	0x5a8
 2095 0a7d 83000000 		.4byte	0x83
 2096 0a81 FB020000 		.4byte	.LLST20
 2097 0a85 1A       		.uleb128 0x1a
 2098 0a86 09080000 		.4byte	.LASF105
 2099 0a8a 01       		.byte	0x1
 2100 0a8b A805     		.2byte	0x5a8
 2101 0a8d 35080000 		.4byte	0x835
 2102 0a91 19030000 		.4byte	.LLST21
 2103 0a95 17       		.uleb128 0x17
 2104 0a96 47000000 		.4byte	.LASF120
 2105 0a9a 01       		.byte	0x1
 2106 0a9b AA05     		.2byte	0x5aa
 2107 0a9d 83000000 		.4byte	0x83
 2108 0aa1 3A030000 		.4byte	.LLST22
 2109 0aa5 17       		.uleb128 0x17
 2110 0aa6 1D060000 		.4byte	.LASF121
 2111 0aaa 01       		.byte	0x1
 2112 0aab AB05     		.2byte	0x5ab
 2113 0aad 83000000 		.4byte	0x83
 2114 0ab1 84030000 		.4byte	.LLST23
 2115 0ab5 17       		.uleb128 0x17
 2116 0ab6 B7010000 		.4byte	.LASF122
 2117 0aba 01       		.byte	0x1
 2118 0abb AC05     		.2byte	0x5ac
 2119 0abd 83000000 		.4byte	0x83
 2120 0ac1 A3030000 		.4byte	.LLST24
 2121 0ac5 17       		.uleb128 0x17
 2122 0ac6 B0050000 		.4byte	.LASF123
 2123 0aca 01       		.byte	0x1
 2124 0acb AD05     		.2byte	0x5ad
 2125 0acd 83000000 		.4byte	0x83
 2126 0ad1 C1030000 		.4byte	.LLST25
 2127 0ad5 17       		.uleb128 0x17
 2128 0ad6 25070000 		.4byte	.LASF112
 2129 0ada 01       		.byte	0x1
 2130 0adb AE05     		.2byte	0x5ae
 2131 0add 35060000 		.4byte	0x635
 2132 0ae1 DF030000 		.4byte	.LLST26
 2133 0ae5 17       		.uleb128 0x17
 2134 0ae6 12060000 		.4byte	.LASF104
 2135 0aea 01       		.byte	0x1
 2136 0aeb AF05     		.2byte	0x5af
 2137 0aed 2F080000 		.4byte	0x82f
 2138 0af1 F2030000 		.4byte	.LLST27
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 68


 2139 0af5 1D       		.uleb128 0x1d
 2140 0af6 51070000 		.4byte	.LASF124
 2141 0afa 01       		.byte	0x1
 2142 0afb B005     		.2byte	0x5b0
 2143 0afd 3B060000 		.4byte	0x63b
 2144 0b01 01       		.uleb128 0x1
 2145 0b02 53       		.byte	0x53
 2146 0b03 00       		.byte	0
 2147 0b04 1C       		.uleb128 0x1c
 2148 0b05 6B020000 		.4byte	.LASF125
 2149 0b09 01       		.byte	0x1
 2150 0b0a 0C06     		.2byte	0x60c
 2151 0b0c 83000000 		.4byte	0x83
 2152 0b10 00000000 		.4byte	.LFB7
 2153 0b14 88000000 		.4byte	.LFE7-.LFB7
 2154 0b18 01       		.uleb128 0x1
 2155 0b19 9C       		.byte	0x9c
 2156 0b1a CD0B0000 		.4byte	0xbcd
 2157 0b1e 1A       		.uleb128 0x1a
 2158 0b1f 61080000 		.4byte	.LASF119
 2159 0b23 01       		.byte	0x1
 2160 0b24 0C06     		.2byte	0x60c
 2161 0b26 83000000 		.4byte	0x83
 2162 0b2a 05040000 		.4byte	.LLST28
 2163 0b2e 1A       		.uleb128 0x1a
 2164 0b2f 09080000 		.4byte	.LASF105
 2165 0b33 01       		.byte	0x1
 2166 0b34 0C06     		.2byte	0x60c
 2167 0b36 35080000 		.4byte	0x835
 2168 0b3a 23040000 		.4byte	.LLST29
 2169 0b3e 17       		.uleb128 0x17
 2170 0b3f 05030000 		.4byte	.LASF126
 2171 0b43 01       		.byte	0x1
 2172 0b44 0E06     		.2byte	0x60e
 2173 0b46 83000000 		.4byte	0x83
 2174 0b4a 44040000 		.4byte	.LLST30
 2175 0b4e 17       		.uleb128 0x17
 2176 0b4f 47000000 		.4byte	.LASF120
 2177 0b53 01       		.byte	0x1
 2178 0b54 0F06     		.2byte	0x60f
 2179 0b56 83000000 		.4byte	0x83
 2180 0b5a 6D040000 		.4byte	.LLST31
 2181 0b5e 17       		.uleb128 0x17
 2182 0b5f 1D060000 		.4byte	.LASF121
 2183 0b63 01       		.byte	0x1
 2184 0b64 1006     		.2byte	0x610
 2185 0b66 83000000 		.4byte	0x83
 2186 0b6a B7040000 		.4byte	.LLST32
 2187 0b6e 17       		.uleb128 0x17
 2188 0b6f B7010000 		.4byte	.LASF122
 2189 0b73 01       		.byte	0x1
 2190 0b74 1106     		.2byte	0x611
 2191 0b76 83000000 		.4byte	0x83
 2192 0b7a D6040000 		.4byte	.LLST33
 2193 0b7e 17       		.uleb128 0x17
 2194 0b7f 6C080000 		.4byte	.LASF127
 2195 0b83 01       		.byte	0x1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 69


 2196 0b84 1206     		.2byte	0x612
 2197 0b86 83000000 		.4byte	0x83
 2198 0b8a F4040000 		.4byte	.LLST34
 2199 0b8e 1D       		.uleb128 0x1d
 2200 0b8f 51070000 		.4byte	.LASF124
 2201 0b93 01       		.byte	0x1
 2202 0b94 1406     		.2byte	0x614
 2203 0b96 3B060000 		.4byte	0x63b
 2204 0b9a 01       		.uleb128 0x1
 2205 0b9b 52       		.byte	0x52
 2206 0b9c 17       		.uleb128 0x17
 2207 0b9d 25070000 		.4byte	.LASF112
 2208 0ba1 01       		.byte	0x1
 2209 0ba2 1506     		.2byte	0x615
 2210 0ba4 35060000 		.4byte	0x635
 2211 0ba8 07050000 		.4byte	.LLST35
 2212 0bac 17       		.uleb128 0x17
 2213 0bad 12060000 		.4byte	.LASF104
 2214 0bb1 01       		.byte	0x1
 2215 0bb2 1606     		.2byte	0x616
 2216 0bb4 CD0B0000 		.4byte	0xbcd
 2217 0bb8 25050000 		.4byte	.LLST36
 2218 0bbc 21       		.uleb128 0x21
 2219 0bbd FD050000 		.4byte	.LASF128
 2220 0bc1 01       		.byte	0x1
 2221 0bc2 1906     		.2byte	0x619
 2222 0bc4 D30B0000 		.4byte	0xbd3
 2223 0bc8 55555555 		.4byte	0x55555555
 2224 0bcc 00       		.byte	0
 2225 0bcd 11       		.uleb128 0x11
 2226 0bce 04       		.byte	0x4
 2227 0bcf 1A030000 		.4byte	0x31a
 2228 0bd3 19       		.uleb128 0x19
 2229 0bd4 83000000 		.4byte	0x83
 2230 0bd8 16       		.uleb128 0x16
 2231 0bd9 7B000000 		.4byte	.LASF129
 2232 0bdd 01       		.byte	0x1
 2233 0bde DE04     		.2byte	0x4de
 2234 0be0 00000000 		.4byte	.LFB4
 2235 0be4 68000000 		.4byte	.LFE4-.LFB4
 2236 0be8 01       		.uleb128 0x1
 2237 0be9 9C       		.byte	0x9c
 2238 0bea 860C0000 		.4byte	0xc86
 2239 0bee 1A       		.uleb128 0x1a
 2240 0bef E9080000 		.4byte	.LASF130
 2241 0bf3 01       		.byte	0x1
 2242 0bf4 DE04     		.2byte	0x4de
 2243 0bf6 83000000 		.4byte	0x83
 2244 0bfa 38050000 		.4byte	.LLST37
 2245 0bfe 1A       		.uleb128 0x1a
 2246 0bff 09080000 		.4byte	.LASF105
 2247 0c03 01       		.byte	0x1
 2248 0c04 DE04     		.2byte	0x4de
 2249 0c06 35080000 		.4byte	0x835
 2250 0c0a 90050000 		.4byte	.LLST38
 2251 0c0e 17       		.uleb128 0x17
 2252 0c0f 9C050000 		.4byte	.LASF131
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 70


 2253 0c13 01       		.byte	0x1
 2254 0c14 E004     		.2byte	0x4e0
 2255 0c16 83000000 		.4byte	0x83
 2256 0c1a E3050000 		.4byte	.LLST39
 2257 0c1e 17       		.uleb128 0x17
 2258 0c1f E4050000 		.4byte	.LASF132
 2259 0c23 01       		.byte	0x1
 2260 0c24 E104     		.2byte	0x4e1
 2261 0c26 83000000 		.4byte	0x83
 2262 0c2a 22060000 		.4byte	.LLST40
 2263 0c2e 17       		.uleb128 0x17
 2264 0c2f F1070000 		.4byte	.LASF133
 2265 0c33 01       		.byte	0x1
 2266 0c34 E204     		.2byte	0x4e2
 2267 0c36 83000000 		.4byte	0x83
 2268 0c3a 7A060000 		.4byte	.LLST41
 2269 0c3e 17       		.uleb128 0x17
 2270 0c3f D5080000 		.4byte	.LASF103
 2271 0c43 01       		.byte	0x1
 2272 0c44 E304     		.2byte	0x4e3
 2273 0c46 1F010000 		.4byte	0x11f
 2274 0c4a AE060000 		.4byte	.LLST42
 2275 0c4e 1E       		.uleb128 0x1e
 2276 0c4f 1C000000 		.4byte	.LVL126
 2277 0c53 5B0A0000 		.4byte	0xa5b
 2278 0c57 620C0000 		.4byte	0xc62
 2279 0c5b 1F       		.uleb128 0x1f
 2280 0c5c 01       		.uleb128 0x1
 2281 0c5d 50       		.byte	0x50
 2282 0c5e 02       		.uleb128 0x2
 2283 0c5f 75       		.byte	0x75
 2284 0c60 00       		.sleb128 0
 2285 0c61 00       		.byte	0
 2286 0c62 1E       		.uleb128 0x1e
 2287 0c63 26000000 		.4byte	.LVL130
 2288 0c67 040B0000 		.4byte	0xb04
 2289 0c6b 760C0000 		.4byte	0xc76
 2290 0c6f 1F       		.uleb128 0x1f
 2291 0c70 01       		.uleb128 0x1
 2292 0c71 50       		.byte	0x50
 2293 0c72 02       		.uleb128 0x2
 2294 0c73 75       		.byte	0x75
 2295 0c74 00       		.sleb128 0
 2296 0c75 00       		.byte	0
 2297 0c76 20       		.uleb128 0x20
 2298 0c77 30000000 		.4byte	.LVL134
 2299 0c7b C40C0000 		.4byte	0xcc4
 2300 0c7f 1F       		.uleb128 0x1f
 2301 0c80 01       		.uleb128 0x1
 2302 0c81 50       		.byte	0x50
 2303 0c82 01       		.uleb128 0x1
 2304 0c83 30       		.byte	0x30
 2305 0c84 00       		.byte	0
 2306 0c85 00       		.byte	0
 2307 0c86 22       		.uleb128 0x22
 2308 0c87 23050000 		.4byte	.LASF134
 2309 0c8b 05       		.byte	0x5
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 71


 2310 0c8c 0C05     		.2byte	0x50c
 2311 0c8e A3050000 		.4byte	0x5a3
 2312 0c92 22       		.uleb128 0x22
 2313 0c93 91010000 		.4byte	.LASF135
 2314 0c97 05       		.byte	0x5
 2315 0c98 0D05     		.2byte	0x50d
 2316 0c9a 9E0C0000 		.4byte	0xc9e
 2317 0c9e 19       		.uleb128 0x19
 2318 0c9f 74060000 		.4byte	0x674
 2319 0ca3 23       		.uleb128 0x23
 2320 0ca4 42050000 		.4byte	.LASF136
 2321 0ca8 42050000 		.4byte	.LASF136
 2322 0cac 06       		.byte	0x6
 2323 0cad 19       		.byte	0x19
 2324 0cae 23       		.uleb128 0x23
 2325 0caf 25030000 		.4byte	.LASF137
 2326 0cb3 25030000 		.4byte	.LASF137
 2327 0cb7 07       		.byte	0x7
 2328 0cb8 85       		.byte	0x85
 2329 0cb9 23       		.uleb128 0x23
 2330 0cba 9D020000 		.4byte	.LASF138
 2331 0cbe 9D020000 		.4byte	.LASF138
 2332 0cc2 07       		.byte	0x7
 2333 0cc3 72       		.byte	0x72
 2334 0cc4 23       		.uleb128 0x23
 2335 0cc5 E6000000 		.4byte	.LASF139
 2336 0cc9 E6000000 		.4byte	.LASF139
 2337 0ccd 08       		.byte	0x8
 2338 0cce E7       		.byte	0xe7
 2339 0ccf 00       		.byte	0
 2340              		.section	.debug_abbrev,"",%progbits
 2341              	.Ldebug_abbrev0:
 2342 0000 01       		.uleb128 0x1
 2343 0001 11       		.uleb128 0x11
 2344 0002 01       		.byte	0x1
 2345 0003 25       		.uleb128 0x25
 2346 0004 0E       		.uleb128 0xe
 2347 0005 13       		.uleb128 0x13
 2348 0006 0B       		.uleb128 0xb
 2349 0007 03       		.uleb128 0x3
 2350 0008 0E       		.uleb128 0xe
 2351 0009 1B       		.uleb128 0x1b
 2352 000a 0E       		.uleb128 0xe
 2353 000b 55       		.uleb128 0x55
 2354 000c 17       		.uleb128 0x17
 2355 000d 11       		.uleb128 0x11
 2356 000e 01       		.uleb128 0x1
 2357 000f 10       		.uleb128 0x10
 2358 0010 17       		.uleb128 0x17
 2359 0011 00       		.byte	0
 2360 0012 00       		.byte	0
 2361 0013 02       		.uleb128 0x2
 2362 0014 24       		.uleb128 0x24
 2363 0015 00       		.byte	0
 2364 0016 0B       		.uleb128 0xb
 2365 0017 0B       		.uleb128 0xb
 2366 0018 3E       		.uleb128 0x3e
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 72


 2367 0019 0B       		.uleb128 0xb
 2368 001a 03       		.uleb128 0x3
 2369 001b 0E       		.uleb128 0xe
 2370 001c 00       		.byte	0
 2371 001d 00       		.byte	0
 2372 001e 03       		.uleb128 0x3
 2373 001f 24       		.uleb128 0x24
 2374 0020 00       		.byte	0
 2375 0021 0B       		.uleb128 0xb
 2376 0022 0B       		.uleb128 0xb
 2377 0023 3E       		.uleb128 0x3e
 2378 0024 0B       		.uleb128 0xb
 2379 0025 03       		.uleb128 0x3
 2380 0026 08       		.uleb128 0x8
 2381 0027 00       		.byte	0
 2382 0028 00       		.byte	0
 2383 0029 04       		.uleb128 0x4
 2384 002a 16       		.uleb128 0x16
 2385 002b 00       		.byte	0
 2386 002c 03       		.uleb128 0x3
 2387 002d 0E       		.uleb128 0xe
 2388 002e 3A       		.uleb128 0x3a
 2389 002f 0B       		.uleb128 0xb
 2390 0030 3B       		.uleb128 0x3b
 2391 0031 05       		.uleb128 0x5
 2392 0032 49       		.uleb128 0x49
 2393 0033 13       		.uleb128 0x13
 2394 0034 00       		.byte	0
 2395 0035 00       		.byte	0
 2396 0036 05       		.uleb128 0x5
 2397 0037 35       		.uleb128 0x35
 2398 0038 00       		.byte	0
 2399 0039 49       		.uleb128 0x49
 2400 003a 13       		.uleb128 0x13
 2401 003b 00       		.byte	0
 2402 003c 00       		.byte	0
 2403 003d 06       		.uleb128 0x6
 2404 003e 16       		.uleb128 0x16
 2405 003f 00       		.byte	0
 2406 0040 03       		.uleb128 0x3
 2407 0041 0E       		.uleb128 0xe
 2408 0042 3A       		.uleb128 0x3a
 2409 0043 0B       		.uleb128 0xb
 2410 0044 3B       		.uleb128 0x3b
 2411 0045 0B       		.uleb128 0xb
 2412 0046 49       		.uleb128 0x49
 2413 0047 13       		.uleb128 0x13
 2414 0048 00       		.byte	0
 2415 0049 00       		.byte	0
 2416 004a 07       		.uleb128 0x7
 2417 004b 0F       		.uleb128 0xf
 2418 004c 00       		.byte	0
 2419 004d 0B       		.uleb128 0xb
 2420 004e 0B       		.uleb128 0xb
 2421 004f 00       		.byte	0
 2422 0050 00       		.byte	0
 2423 0051 08       		.uleb128 0x8
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 73


 2424 0052 04       		.uleb128 0x4
 2425 0053 01       		.byte	0x1
 2426 0054 0B       		.uleb128 0xb
 2427 0055 0B       		.uleb128 0xb
 2428 0056 49       		.uleb128 0x49
 2429 0057 13       		.uleb128 0x13
 2430 0058 3A       		.uleb128 0x3a
 2431 0059 0B       		.uleb128 0xb
 2432 005a 3B       		.uleb128 0x3b
 2433 005b 0B       		.uleb128 0xb
 2434 005c 01       		.uleb128 0x1
 2435 005d 13       		.uleb128 0x13
 2436 005e 00       		.byte	0
 2437 005f 00       		.byte	0
 2438 0060 09       		.uleb128 0x9
 2439 0061 28       		.uleb128 0x28
 2440 0062 00       		.byte	0
 2441 0063 03       		.uleb128 0x3
 2442 0064 0E       		.uleb128 0xe
 2443 0065 1C       		.uleb128 0x1c
 2444 0066 0B       		.uleb128 0xb
 2445 0067 00       		.byte	0
 2446 0068 00       		.byte	0
 2447 0069 0A       		.uleb128 0xa
 2448 006a 13       		.uleb128 0x13
 2449 006b 01       		.byte	0x1
 2450 006c 0B       		.uleb128 0xb
 2451 006d 0B       		.uleb128 0xb
 2452 006e 3A       		.uleb128 0x3a
 2453 006f 0B       		.uleb128 0xb
 2454 0070 3B       		.uleb128 0x3b
 2455 0071 0B       		.uleb128 0xb
 2456 0072 01       		.uleb128 0x1
 2457 0073 13       		.uleb128 0x13
 2458 0074 00       		.byte	0
 2459 0075 00       		.byte	0
 2460 0076 0B       		.uleb128 0xb
 2461 0077 0D       		.uleb128 0xd
 2462 0078 00       		.byte	0
 2463 0079 03       		.uleb128 0x3
 2464 007a 0E       		.uleb128 0xe
 2465 007b 3A       		.uleb128 0x3a
 2466 007c 0B       		.uleb128 0xb
 2467 007d 3B       		.uleb128 0x3b
 2468 007e 0B       		.uleb128 0xb
 2469 007f 49       		.uleb128 0x49
 2470 0080 13       		.uleb128 0x13
 2471 0081 38       		.uleb128 0x38
 2472 0082 0B       		.uleb128 0xb
 2473 0083 00       		.byte	0
 2474 0084 00       		.byte	0
 2475 0085 0C       		.uleb128 0xc
 2476 0086 01       		.uleb128 0x1
 2477 0087 01       		.byte	0x1
 2478 0088 49       		.uleb128 0x49
 2479 0089 13       		.uleb128 0x13
 2480 008a 01       		.uleb128 0x1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 74


 2481 008b 13       		.uleb128 0x13
 2482 008c 00       		.byte	0
 2483 008d 00       		.byte	0
 2484 008e 0D       		.uleb128 0xd
 2485 008f 21       		.uleb128 0x21
 2486 0090 00       		.byte	0
 2487 0091 49       		.uleb128 0x49
 2488 0092 13       		.uleb128 0x13
 2489 0093 2F       		.uleb128 0x2f
 2490 0094 0B       		.uleb128 0xb
 2491 0095 00       		.byte	0
 2492 0096 00       		.byte	0
 2493 0097 0E       		.uleb128 0xe
 2494 0098 0D       		.uleb128 0xd
 2495 0099 00       		.byte	0
 2496 009a 03       		.uleb128 0x3
 2497 009b 0E       		.uleb128 0xe
 2498 009c 3A       		.uleb128 0x3a
 2499 009d 0B       		.uleb128 0xb
 2500 009e 3B       		.uleb128 0x3b
 2501 009f 05       		.uleb128 0x5
 2502 00a0 49       		.uleb128 0x49
 2503 00a1 13       		.uleb128 0x13
 2504 00a2 38       		.uleb128 0x38
 2505 00a3 0B       		.uleb128 0xb
 2506 00a4 00       		.byte	0
 2507 00a5 00       		.byte	0
 2508 00a6 0F       		.uleb128 0xf
 2509 00a7 13       		.uleb128 0x13
 2510 00a8 01       		.byte	0x1
 2511 00a9 0B       		.uleb128 0xb
 2512 00aa 0B       		.uleb128 0xb
 2513 00ab 3A       		.uleb128 0x3a
 2514 00ac 0B       		.uleb128 0xb
 2515 00ad 3B       		.uleb128 0x3b
 2516 00ae 05       		.uleb128 0x5
 2517 00af 01       		.uleb128 0x1
 2518 00b0 13       		.uleb128 0x13
 2519 00b1 00       		.byte	0
 2520 00b2 00       		.byte	0
 2521 00b3 10       		.uleb128 0x10
 2522 00b4 0D       		.uleb128 0xd
 2523 00b5 00       		.byte	0
 2524 00b6 03       		.uleb128 0x3
 2525 00b7 08       		.uleb128 0x8
 2526 00b8 3A       		.uleb128 0x3a
 2527 00b9 0B       		.uleb128 0xb
 2528 00ba 3B       		.uleb128 0x3b
 2529 00bb 05       		.uleb128 0x5
 2530 00bc 49       		.uleb128 0x49
 2531 00bd 13       		.uleb128 0x13
 2532 00be 38       		.uleb128 0x38
 2533 00bf 0B       		.uleb128 0xb
 2534 00c0 00       		.byte	0
 2535 00c1 00       		.byte	0
 2536 00c2 11       		.uleb128 0x11
 2537 00c3 0F       		.uleb128 0xf
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 75


 2538 00c4 00       		.byte	0
 2539 00c5 0B       		.uleb128 0xb
 2540 00c6 0B       		.uleb128 0xb
 2541 00c7 49       		.uleb128 0x49
 2542 00c8 13       		.uleb128 0x13
 2543 00c9 00       		.byte	0
 2544 00ca 00       		.byte	0
 2545 00cb 12       		.uleb128 0x12
 2546 00cc 26       		.uleb128 0x26
 2547 00cd 00       		.byte	0
 2548 00ce 00       		.byte	0
 2549 00cf 00       		.byte	0
 2550 00d0 13       		.uleb128 0x13
 2551 00d1 17       		.uleb128 0x17
 2552 00d2 01       		.byte	0x1
 2553 00d3 0B       		.uleb128 0xb
 2554 00d4 0B       		.uleb128 0xb
 2555 00d5 3A       		.uleb128 0x3a
 2556 00d6 0B       		.uleb128 0xb
 2557 00d7 3B       		.uleb128 0x3b
 2558 00d8 05       		.uleb128 0x5
 2559 00d9 01       		.uleb128 0x1
 2560 00da 13       		.uleb128 0x13
 2561 00db 00       		.byte	0
 2562 00dc 00       		.byte	0
 2563 00dd 14       		.uleb128 0x14
 2564 00de 0D       		.uleb128 0xd
 2565 00df 00       		.byte	0
 2566 00e0 03       		.uleb128 0x3
 2567 00e1 08       		.uleb128 0x8
 2568 00e2 3A       		.uleb128 0x3a
 2569 00e3 0B       		.uleb128 0xb
 2570 00e4 3B       		.uleb128 0x3b
 2571 00e5 05       		.uleb128 0x5
 2572 00e6 49       		.uleb128 0x49
 2573 00e7 13       		.uleb128 0x13
 2574 00e8 00       		.byte	0
 2575 00e9 00       		.byte	0
 2576 00ea 15       		.uleb128 0x15
 2577 00eb 0D       		.uleb128 0xd
 2578 00ec 00       		.byte	0
 2579 00ed 03       		.uleb128 0x3
 2580 00ee 0E       		.uleb128 0xe
 2581 00ef 3A       		.uleb128 0x3a
 2582 00f0 0B       		.uleb128 0xb
 2583 00f1 3B       		.uleb128 0x3b
 2584 00f2 05       		.uleb128 0x5
 2585 00f3 49       		.uleb128 0x49
 2586 00f4 13       		.uleb128 0x13
 2587 00f5 00       		.byte	0
 2588 00f6 00       		.byte	0
 2589 00f7 16       		.uleb128 0x16
 2590 00f8 2E       		.uleb128 0x2e
 2591 00f9 01       		.byte	0x1
 2592 00fa 3F       		.uleb128 0x3f
 2593 00fb 19       		.uleb128 0x19
 2594 00fc 03       		.uleb128 0x3
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 76


 2595 00fd 0E       		.uleb128 0xe
 2596 00fe 3A       		.uleb128 0x3a
 2597 00ff 0B       		.uleb128 0xb
 2598 0100 3B       		.uleb128 0x3b
 2599 0101 05       		.uleb128 0x5
 2600 0102 27       		.uleb128 0x27
 2601 0103 19       		.uleb128 0x19
 2602 0104 11       		.uleb128 0x11
 2603 0105 01       		.uleb128 0x1
 2604 0106 12       		.uleb128 0x12
 2605 0107 06       		.uleb128 0x6
 2606 0108 40       		.uleb128 0x40
 2607 0109 18       		.uleb128 0x18
 2608 010a 9742     		.uleb128 0x2117
 2609 010c 19       		.uleb128 0x19
 2610 010d 01       		.uleb128 0x1
 2611 010e 13       		.uleb128 0x13
 2612 010f 00       		.byte	0
 2613 0110 00       		.byte	0
 2614 0111 17       		.uleb128 0x17
 2615 0112 34       		.uleb128 0x34
 2616 0113 00       		.byte	0
 2617 0114 03       		.uleb128 0x3
 2618 0115 0E       		.uleb128 0xe
 2619 0116 3A       		.uleb128 0x3a
 2620 0117 0B       		.uleb128 0xb
 2621 0118 3B       		.uleb128 0x3b
 2622 0119 05       		.uleb128 0x5
 2623 011a 49       		.uleb128 0x49
 2624 011b 13       		.uleb128 0x13
 2625 011c 02       		.uleb128 0x2
 2626 011d 17       		.uleb128 0x17
 2627 011e 00       		.byte	0
 2628 011f 00       		.byte	0
 2629 0120 18       		.uleb128 0x18
 2630 0121 898201   		.uleb128 0x4109
 2631 0124 00       		.byte	0
 2632 0125 11       		.uleb128 0x11
 2633 0126 01       		.uleb128 0x1
 2634 0127 31       		.uleb128 0x31
 2635 0128 13       		.uleb128 0x13
 2636 0129 00       		.byte	0
 2637 012a 00       		.byte	0
 2638 012b 19       		.uleb128 0x19
 2639 012c 26       		.uleb128 0x26
 2640 012d 00       		.byte	0
 2641 012e 49       		.uleb128 0x49
 2642 012f 13       		.uleb128 0x13
 2643 0130 00       		.byte	0
 2644 0131 00       		.byte	0
 2645 0132 1A       		.uleb128 0x1a
 2646 0133 05       		.uleb128 0x5
 2647 0134 00       		.byte	0
 2648 0135 03       		.uleb128 0x3
 2649 0136 0E       		.uleb128 0xe
 2650 0137 3A       		.uleb128 0x3a
 2651 0138 0B       		.uleb128 0xb
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 77


 2652 0139 3B       		.uleb128 0x3b
 2653 013a 05       		.uleb128 0x5
 2654 013b 49       		.uleb128 0x49
 2655 013c 13       		.uleb128 0x13
 2656 013d 02       		.uleb128 0x2
 2657 013e 17       		.uleb128 0x17
 2658 013f 00       		.byte	0
 2659 0140 00       		.byte	0
 2660 0141 1B       		.uleb128 0x1b
 2661 0142 05       		.uleb128 0x5
 2662 0143 00       		.byte	0
 2663 0144 03       		.uleb128 0x3
 2664 0145 0E       		.uleb128 0xe
 2665 0146 3A       		.uleb128 0x3a
 2666 0147 0B       		.uleb128 0xb
 2667 0148 3B       		.uleb128 0x3b
 2668 0149 05       		.uleb128 0x5
 2669 014a 49       		.uleb128 0x49
 2670 014b 13       		.uleb128 0x13
 2671 014c 02       		.uleb128 0x2
 2672 014d 18       		.uleb128 0x18
 2673 014e 00       		.byte	0
 2674 014f 00       		.byte	0
 2675 0150 1C       		.uleb128 0x1c
 2676 0151 2E       		.uleb128 0x2e
 2677 0152 01       		.byte	0x1
 2678 0153 3F       		.uleb128 0x3f
 2679 0154 19       		.uleb128 0x19
 2680 0155 03       		.uleb128 0x3
 2681 0156 0E       		.uleb128 0xe
 2682 0157 3A       		.uleb128 0x3a
 2683 0158 0B       		.uleb128 0xb
 2684 0159 3B       		.uleb128 0x3b
 2685 015a 05       		.uleb128 0x5
 2686 015b 27       		.uleb128 0x27
 2687 015c 19       		.uleb128 0x19
 2688 015d 49       		.uleb128 0x49
 2689 015e 13       		.uleb128 0x13
 2690 015f 11       		.uleb128 0x11
 2691 0160 01       		.uleb128 0x1
 2692 0161 12       		.uleb128 0x12
 2693 0162 06       		.uleb128 0x6
 2694 0163 40       		.uleb128 0x40
 2695 0164 18       		.uleb128 0x18
 2696 0165 9742     		.uleb128 0x2117
 2697 0167 19       		.uleb128 0x19
 2698 0168 01       		.uleb128 0x1
 2699 0169 13       		.uleb128 0x13
 2700 016a 00       		.byte	0
 2701 016b 00       		.byte	0
 2702 016c 1D       		.uleb128 0x1d
 2703 016d 34       		.uleb128 0x34
 2704 016e 00       		.byte	0
 2705 016f 03       		.uleb128 0x3
 2706 0170 0E       		.uleb128 0xe
 2707 0171 3A       		.uleb128 0x3a
 2708 0172 0B       		.uleb128 0xb
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 78


 2709 0173 3B       		.uleb128 0x3b
 2710 0174 05       		.uleb128 0x5
 2711 0175 49       		.uleb128 0x49
 2712 0176 13       		.uleb128 0x13
 2713 0177 02       		.uleb128 0x2
 2714 0178 18       		.uleb128 0x18
 2715 0179 00       		.byte	0
 2716 017a 00       		.byte	0
 2717 017b 1E       		.uleb128 0x1e
 2718 017c 898201   		.uleb128 0x4109
 2719 017f 01       		.byte	0x1
 2720 0180 11       		.uleb128 0x11
 2721 0181 01       		.uleb128 0x1
 2722 0182 31       		.uleb128 0x31
 2723 0183 13       		.uleb128 0x13
 2724 0184 01       		.uleb128 0x1
 2725 0185 13       		.uleb128 0x13
 2726 0186 00       		.byte	0
 2727 0187 00       		.byte	0
 2728 0188 1F       		.uleb128 0x1f
 2729 0189 8A8201   		.uleb128 0x410a
 2730 018c 00       		.byte	0
 2731 018d 02       		.uleb128 0x2
 2732 018e 18       		.uleb128 0x18
 2733 018f 9142     		.uleb128 0x2111
 2734 0191 18       		.uleb128 0x18
 2735 0192 00       		.byte	0
 2736 0193 00       		.byte	0
 2737 0194 20       		.uleb128 0x20
 2738 0195 898201   		.uleb128 0x4109
 2739 0198 01       		.byte	0x1
 2740 0199 11       		.uleb128 0x11
 2741 019a 01       		.uleb128 0x1
 2742 019b 31       		.uleb128 0x31
 2743 019c 13       		.uleb128 0x13
 2744 019d 00       		.byte	0
 2745 019e 00       		.byte	0
 2746 019f 21       		.uleb128 0x21
 2747 01a0 34       		.uleb128 0x34
 2748 01a1 00       		.byte	0
 2749 01a2 03       		.uleb128 0x3
 2750 01a3 0E       		.uleb128 0xe
 2751 01a4 3A       		.uleb128 0x3a
 2752 01a5 0B       		.uleb128 0xb
 2753 01a6 3B       		.uleb128 0x3b
 2754 01a7 05       		.uleb128 0x5
 2755 01a8 49       		.uleb128 0x49
 2756 01a9 13       		.uleb128 0x13
 2757 01aa 1C       		.uleb128 0x1c
 2758 01ab 06       		.uleb128 0x6
 2759 01ac 00       		.byte	0
 2760 01ad 00       		.byte	0
 2761 01ae 22       		.uleb128 0x22
 2762 01af 34       		.uleb128 0x34
 2763 01b0 00       		.byte	0
 2764 01b1 03       		.uleb128 0x3
 2765 01b2 0E       		.uleb128 0xe
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 79


 2766 01b3 3A       		.uleb128 0x3a
 2767 01b4 0B       		.uleb128 0xb
 2768 01b5 3B       		.uleb128 0x3b
 2769 01b6 05       		.uleb128 0x5
 2770 01b7 49       		.uleb128 0x49
 2771 01b8 13       		.uleb128 0x13
 2772 01b9 3F       		.uleb128 0x3f
 2773 01ba 19       		.uleb128 0x19
 2774 01bb 3C       		.uleb128 0x3c
 2775 01bc 19       		.uleb128 0x19
 2776 01bd 00       		.byte	0
 2777 01be 00       		.byte	0
 2778 01bf 23       		.uleb128 0x23
 2779 01c0 2E       		.uleb128 0x2e
 2780 01c1 00       		.byte	0
 2781 01c2 3F       		.uleb128 0x3f
 2782 01c3 19       		.uleb128 0x19
 2783 01c4 3C       		.uleb128 0x3c
 2784 01c5 19       		.uleb128 0x19
 2785 01c6 6E       		.uleb128 0x6e
 2786 01c7 0E       		.uleb128 0xe
 2787 01c8 03       		.uleb128 0x3
 2788 01c9 0E       		.uleb128 0xe
 2789 01ca 3A       		.uleb128 0x3a
 2790 01cb 0B       		.uleb128 0xb
 2791 01cc 3B       		.uleb128 0x3b
 2792 01cd 0B       		.uleb128 0xb
 2793 01ce 00       		.byte	0
 2794 01cf 00       		.byte	0
 2795 01d0 00       		.byte	0
 2796              		.section	.debug_loc,"",%progbits
 2797              	.Ldebug_loc0:
 2798              	.LLST0:
 2799 0000 02000000 		.4byte	.LVL0
 2800 0004 06000000 		.4byte	.LVL1
 2801 0008 0200     		.2byte	0x2
 2802 000a 30       		.byte	0x30
 2803 000b 9F       		.byte	0x9f
 2804 000c 06000000 		.4byte	.LVL1
 2805 0010 22000000 		.4byte	.LVL3
 2806 0014 0100     		.2byte	0x1
 2807 0016 53       		.byte	0x53
 2808 0017 24000000 		.4byte	.LVL4
 2809 001b 5E000000 		.4byte	.LVL13
 2810 001f 0100     		.2byte	0x1
 2811 0021 55       		.byte	0x55
 2812 0022 5E000000 		.4byte	.LVL13
 2813 0026 60000000 		.4byte	.LVL14
 2814 002a 0100     		.2byte	0x1
 2815 002c 53       		.byte	0x53
 2816 002d 60000000 		.4byte	.LVL14
 2817 0031 64000000 		.4byte	.LVL16
 2818 0035 0100     		.2byte	0x1
 2819 0037 55       		.byte	0x55
 2820 0038 64000000 		.4byte	.LVL16
 2821 003c 70000000 		.4byte	.LFE1
 2822 0040 0300     		.2byte	0x3
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 80


 2823 0042 73       		.byte	0x73
 2824 0043 7F       		.sleb128 -1
 2825 0044 9F       		.byte	0x9f
 2826 0045 00000000 		.4byte	0
 2827 0049 00000000 		.4byte	0
 2828              	.LLST1:
 2829 004d 28000000 		.4byte	.LVL6
 2830 0051 44000000 		.4byte	.LVL7
 2831 0055 0100     		.2byte	0x1
 2832 0057 52       		.byte	0x52
 2833 0058 4A000000 		.4byte	.LVL9
 2834 005c 54000000 		.4byte	.LVL10
 2835 0060 0100     		.2byte	0x1
 2836 0062 52       		.byte	0x52
 2837 0063 00000000 		.4byte	0
 2838 0067 00000000 		.4byte	0
 2839              	.LLST2:
 2840 006b 26000000 		.4byte	.LVL5
 2841 006f 5E000000 		.4byte	.LVL13
 2842 0073 0100     		.2byte	0x1
 2843 0075 56       		.byte	0x56
 2844 0076 00000000 		.4byte	0
 2845 007a 00000000 		.4byte	0
 2846              	.LLST3:
 2847 007e 24000000 		.4byte	.LVL4
 2848 0082 64000000 		.4byte	.LVL15
 2849 0086 0100     		.2byte	0x1
 2850 0088 54       		.byte	0x54
 2851 0089 00000000 		.4byte	0
 2852 008d 00000000 		.4byte	0
 2853              	.LLST4:
 2854 0091 00000000 		.4byte	.LVL17
 2855 0095 0E000000 		.4byte	.LVL20
 2856 0099 0100     		.2byte	0x1
 2857 009b 50       		.byte	0x50
 2858 009c 0E000000 		.4byte	.LVL20
 2859 00a0 16000000 		.4byte	.LFE5
 2860 00a4 0400     		.2byte	0x4
 2861 00a6 F3       		.byte	0xf3
 2862 00a7 01       		.uleb128 0x1
 2863 00a8 50       		.byte	0x50
 2864 00a9 9F       		.byte	0x9f
 2865 00aa 00000000 		.4byte	0
 2866 00ae 00000000 		.4byte	0
 2867              	.LLST5:
 2868 00b2 02000000 		.4byte	.LVL18
 2869 00b6 08000000 		.4byte	.LVL19
 2870 00ba 0200     		.2byte	0x2
 2871 00bc 30       		.byte	0x30
 2872 00bd 9F       		.byte	0x9f
 2873 00be 08000000 		.4byte	.LVL19
 2874 00c2 14000000 		.4byte	.LVL21
 2875 00c6 0100     		.2byte	0x1
 2876 00c8 54       		.byte	0x54
 2877 00c9 14000000 		.4byte	.LVL21
 2878 00cd 16000000 		.4byte	.LFE5
 2879 00d1 0600     		.2byte	0x6
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 81


 2880 00d3 73       		.byte	0x73
 2881 00d4 00       		.sleb128 0
 2882 00d5 72       		.byte	0x72
 2883 00d6 00       		.sleb128 0
 2884 00d7 1C       		.byte	0x1c
 2885 00d8 9F       		.byte	0x9f
 2886 00d9 00000000 		.4byte	0
 2887 00dd 00000000 		.4byte	0
 2888              	.LLST6:
 2889 00e1 00000000 		.4byte	.LVL22
 2890 00e5 2C000000 		.4byte	.LVL29
 2891 00e9 0100     		.2byte	0x1
 2892 00eb 50       		.byte	0x50
 2893 00ec 2C000000 		.4byte	.LVL29
 2894 00f0 64000000 		.4byte	.LVL43
 2895 00f4 0100     		.2byte	0x1
 2896 00f6 56       		.byte	0x56
 2897 00f7 64000000 		.4byte	.LVL43
 2898 00fb 6A000000 		.4byte	.LFE2
 2899 00ff 0400     		.2byte	0x4
 2900 0101 F3       		.byte	0xf3
 2901 0102 01       		.uleb128 0x1
 2902 0103 50       		.byte	0x50
 2903 0104 9F       		.byte	0x9f
 2904 0105 00000000 		.4byte	0
 2905 0109 00000000 		.4byte	0
 2906              	.LLST7:
 2907 010d 0A000000 		.4byte	.LVL23
 2908 0111 2C000000 		.4byte	.LVL29
 2909 0115 0200     		.2byte	0x2
 2910 0117 30       		.byte	0x30
 2911 0118 9F       		.byte	0x9f
 2912 0119 2C000000 		.4byte	.LVL29
 2913 011d 42000000 		.4byte	.LVL33
 2914 0121 0200     		.2byte	0x2
 2915 0123 91       		.byte	0x91
 2916 0124 64       		.sleb128 -28
 2917 0125 42000000 		.4byte	.LVL33
 2918 0129 46000000 		.4byte	.LVL34
 2919 012d 0100     		.2byte	0x1
 2920 012f 50       		.byte	0x50
 2921 0130 46000000 		.4byte	.LVL34
 2922 0134 6A000000 		.4byte	.LFE2
 2923 0138 0200     		.2byte	0x2
 2924 013a 91       		.byte	0x91
 2925 013b 64       		.sleb128 -28
 2926 013c 00000000 		.4byte	0
 2927 0140 00000000 		.4byte	0
 2928              	.LLST8:
 2929 0144 24000000 		.4byte	.LVL28
 2930 0148 2C000000 		.4byte	.LVL29
 2931 014c 0200     		.2byte	0x2
 2932 014e 30       		.byte	0x30
 2933 014f 9F       		.byte	0x9f
 2934 0150 2C000000 		.4byte	.LVL29
 2935 0154 64000000 		.4byte	.LVL44
 2936 0158 0100     		.2byte	0x1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 82


 2937 015a 57       		.byte	0x57
 2938 015b 00000000 		.4byte	0
 2939 015f 00000000 		.4byte	0
 2940              	.LLST9:
 2941 0163 1E000000 		.4byte	.LVL26
 2942 0167 64000000 		.4byte	.LVL42
 2943 016b 0100     		.2byte	0x1
 2944 016d 54       		.byte	0x54
 2945 016e 00000000 		.4byte	0
 2946 0172 00000000 		.4byte	0
 2947              	.LLST10:
 2948 0176 22000000 		.4byte	.LVL27
 2949 017a 2C000000 		.4byte	.LVL29
 2950 017e 0100     		.2byte	0x1
 2951 0180 52       		.byte	0x52
 2952 0181 2C000000 		.4byte	.LVL29
 2953 0185 6A000000 		.4byte	.LFE2
 2954 0189 0200     		.2byte	0x2
 2955 018b 91       		.byte	0x91
 2956 018c 5C       		.sleb128 -36
 2957 018d 00000000 		.4byte	0
 2958 0191 00000000 		.4byte	0
 2959              	.LLST11:
 2960 0195 30000000 		.4byte	.LVL30
 2961 0199 54000000 		.4byte	.LVL38
 2962 019d 0100     		.2byte	0x1
 2963 019f 55       		.byte	0x55
 2964 01a0 56000000 		.4byte	.LVL39
 2965 01a4 58000000 		.4byte	.LVL40
 2966 01a8 0100     		.2byte	0x1
 2967 01aa 55       		.byte	0x55
 2968 01ab 00000000 		.4byte	0
 2969 01af 00000000 		.4byte	0
 2970              	.LLST12:
 2971 01b3 1A000000 		.4byte	.LVL24
 2972 01b7 52000000 		.4byte	.LVL37
 2973 01bb 0100     		.2byte	0x1
 2974 01bd 5B       		.byte	0x5b
 2975 01be 52000000 		.4byte	.LVL37
 2976 01c2 5A000000 		.4byte	.LVL41
 2977 01c6 0100     		.2byte	0x1
 2978 01c8 53       		.byte	0x53
 2979 01c9 5A000000 		.4byte	.LVL41
 2980 01cd 64000000 		.4byte	.LVL45
 2981 01d1 0100     		.2byte	0x1
 2982 01d3 5B       		.byte	0x5b
 2983 01d4 00000000 		.4byte	0
 2984 01d8 00000000 		.4byte	0
 2985              	.LLST13:
 2986 01dc 00000000 		.4byte	.LVL46
 2987 01e0 16000000 		.4byte	.LVL52
 2988 01e4 0100     		.2byte	0x1
 2989 01e6 50       		.byte	0x50
 2990 01e7 16000000 		.4byte	.LVL52
 2991 01eb 40000000 		.4byte	.LFE3
 2992 01ef 0400     		.2byte	0x4
 2993 01f1 F3       		.byte	0xf3
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 83


 2994 01f2 01       		.uleb128 0x1
 2995 01f3 50       		.byte	0x50
 2996 01f4 9F       		.byte	0x9f
 2997 01f5 00000000 		.4byte	0
 2998 01f9 00000000 		.4byte	0
 2999              	.LLST14:
 3000 01fd 00000000 		.4byte	.LVL46
 3001 0201 19000000 		.4byte	.LVL53-1
 3002 0205 0100     		.2byte	0x1
 3003 0207 51       		.byte	0x51
 3004 0208 19000000 		.4byte	.LVL53-1
 3005 020c 3E000000 		.4byte	.LVL62
 3006 0210 0100     		.2byte	0x1
 3007 0212 56       		.byte	0x56
 3008 0213 3E000000 		.4byte	.LVL62
 3009 0217 40000000 		.4byte	.LFE3
 3010 021b 0400     		.2byte	0x4
 3011 021d F3       		.byte	0xf3
 3012 021e 01       		.uleb128 0x1
 3013 021f 51       		.byte	0x51
 3014 0220 9F       		.byte	0x9f
 3015 0221 00000000 		.4byte	0
 3016 0225 00000000 		.4byte	0
 3017              	.LLST15:
 3018 0229 00000000 		.4byte	.LVL46
 3019 022d 14000000 		.4byte	.LVL51
 3020 0231 0100     		.2byte	0x1
 3021 0233 52       		.byte	0x52
 3022 0234 1A000000 		.4byte	.LVL53
 3023 0238 20000000 		.4byte	.LVL54
 3024 023c 0100     		.2byte	0x1
 3025 023e 52       		.byte	0x52
 3026 023f 2C000000 		.4byte	.LVL57
 3027 0243 39000000 		.4byte	.LVL59-1
 3028 0247 0100     		.2byte	0x1
 3029 0249 52       		.byte	0x52
 3030 024a 3A000000 		.4byte	.LVL59
 3031 024e 40000000 		.4byte	.LFE3
 3032 0252 0100     		.2byte	0x1
 3033 0254 52       		.byte	0x52
 3034 0255 00000000 		.4byte	0
 3035 0259 00000000 		.4byte	0
 3036              	.LLST16:
 3037 025d 00000000 		.4byte	.LVL46
 3038 0261 12000000 		.4byte	.LVL50
 3039 0265 0100     		.2byte	0x1
 3040 0267 53       		.byte	0x53
 3041 0268 12000000 		.4byte	.LVL50
 3042 026c 3E000000 		.4byte	.LVL60
 3043 0270 0100     		.2byte	0x1
 3044 0272 54       		.byte	0x54
 3045 0273 3E000000 		.4byte	.LVL60
 3046 0277 40000000 		.4byte	.LFE3
 3047 027b 0400     		.2byte	0x4
 3048 027d F3       		.byte	0xf3
 3049 027e 01       		.uleb128 0x1
 3050 027f 53       		.byte	0x53
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 84


 3051 0280 9F       		.byte	0x9f
 3052 0281 00000000 		.4byte	0
 3053 0285 00000000 		.4byte	0
 3054              	.LLST17:
 3055 0289 0A000000 		.4byte	.LVL47
 3056 028d 2A000000 		.4byte	.LVL56
 3057 0291 0200     		.2byte	0x2
 3058 0293 30       		.byte	0x30
 3059 0294 9F       		.byte	0x9f
 3060 0295 2A000000 		.4byte	.LVL56
 3061 0299 2C000000 		.4byte	.LVL57
 3062 029d 0100     		.2byte	0x1
 3063 029f 50       		.byte	0x50
 3064 02a0 2C000000 		.4byte	.LVL57
 3065 02a4 2E000000 		.4byte	.LVL58
 3066 02a8 0200     		.2byte	0x2
 3067 02aa 30       		.byte	0x30
 3068 02ab 9F       		.byte	0x9f
 3069 02ac 2E000000 		.4byte	.LVL58
 3070 02b0 3E000000 		.4byte	.LVL61
 3071 02b4 0100     		.2byte	0x1
 3072 02b6 55       		.byte	0x55
 3073 02b7 3E000000 		.4byte	.LVL61
 3074 02bb 40000000 		.4byte	.LFE3
 3075 02bf 0100     		.2byte	0x1
 3076 02c1 50       		.byte	0x50
 3077 02c2 00000000 		.4byte	0
 3078 02c6 00000000 		.4byte	0
 3079              	.LLST18:
 3080 02ca 0C000000 		.4byte	.LVL48
 3081 02ce 2A000000 		.4byte	.LVL56
 3082 02d2 0100     		.2byte	0x1
 3083 02d4 55       		.byte	0x55
 3084 02d5 2C000000 		.4byte	.LVL57
 3085 02d9 2E000000 		.4byte	.LVL58
 3086 02dd 0100     		.2byte	0x1
 3087 02df 55       		.byte	0x55
 3088 02e0 00000000 		.4byte	0
 3089 02e4 00000000 		.4byte	0
 3090              	.LLST19:
 3091 02e8 0E000000 		.4byte	.LVL49
 3092 02ec 3E000000 		.4byte	.LVL63
 3093 02f0 0100     		.2byte	0x1
 3094 02f2 57       		.byte	0x57
 3095 02f3 00000000 		.4byte	0
 3096 02f7 00000000 		.4byte	0
 3097              	.LLST20:
 3098 02fb 00000000 		.4byte	.LVL64
 3099 02ff 44000000 		.4byte	.LVL76
 3100 0303 0100     		.2byte	0x1
 3101 0305 50       		.byte	0x50
 3102 0306 44000000 		.4byte	.LVL76
 3103 030a 64000000 		.4byte	.LFE6
 3104 030e 0100     		.2byte	0x1
 3105 0310 50       		.byte	0x50
 3106 0311 00000000 		.4byte	0
 3107 0315 00000000 		.4byte	0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 85


 3108              	.LLST21:
 3109 0319 00000000 		.4byte	.LVL64
 3110 031d 0C000000 		.4byte	.LVL69
 3111 0321 0100     		.2byte	0x1
 3112 0323 51       		.byte	0x51
 3113 0324 0C000000 		.4byte	.LVL69
 3114 0328 64000000 		.4byte	.LFE6
 3115 032c 0400     		.2byte	0x4
 3116 032e F3       		.byte	0xf3
 3117 032f 01       		.uleb128 0x1
 3118 0330 51       		.byte	0x51
 3119 0331 9F       		.byte	0x9f
 3120 0332 00000000 		.4byte	0
 3121 0336 00000000 		.4byte	0
 3122              	.LLST22:
 3123 033a 04000000 		.4byte	.LVL65
 3124 033e 0E000000 		.4byte	.LVL70
 3125 0342 0100     		.2byte	0x1
 3126 0344 52       		.byte	0x52
 3127 0345 0E000000 		.4byte	.LVL70
 3128 0349 10000000 		.4byte	.LVL71
 3129 034d 0100     		.2byte	0x1
 3130 034f 54       		.byte	0x54
 3131 0350 10000000 		.4byte	.LVL71
 3132 0354 5A000000 		.4byte	.LVL84
 3133 0358 0100     		.2byte	0x1
 3134 035a 5C       		.byte	0x5c
 3135 035b 5A000000 		.4byte	.LVL84
 3136 035f 5E000000 		.4byte	.LVL85
 3137 0363 0100     		.2byte	0x1
 3138 0365 52       		.byte	0x52
 3139 0366 5E000000 		.4byte	.LVL85
 3140 036a 62000000 		.4byte	.LVL86
 3141 036e 0100     		.2byte	0x1
 3142 0370 54       		.byte	0x54
 3143 0371 62000000 		.4byte	.LVL86
 3144 0375 64000000 		.4byte	.LFE6
 3145 0379 0100     		.2byte	0x1
 3146 037b 5C       		.byte	0x5c
 3147 037c 00000000 		.4byte	0
 3148 0380 00000000 		.4byte	0
 3149              	.LLST23:
 3150 0384 0A000000 		.4byte	.LVL68
 3151 0388 0E000000 		.4byte	.LVL70
 3152 038c 0200     		.2byte	0x2
 3153 038e 31       		.byte	0x31
 3154 038f 9F       		.byte	0x9f
 3155 0390 0E000000 		.4byte	.LVL70
 3156 0394 64000000 		.4byte	.LFE6
 3157 0398 0100     		.2byte	0x1
 3158 039a 51       		.byte	0x51
 3159 039b 00000000 		.4byte	0
 3160 039f 00000000 		.4byte	0
 3161              	.LLST24:
 3162 03a3 2E000000 		.4byte	.LVL75
 3163 03a7 4C000000 		.4byte	.LVL78
 3164 03ab 0100     		.2byte	0x1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 86


 3165 03ad 52       		.byte	0x52
 3166 03ae 4E000000 		.4byte	.LVL79
 3167 03b2 50000000 		.4byte	.LVL80
 3168 03b6 0100     		.2byte	0x1
 3169 03b8 52       		.byte	0x52
 3170 03b9 00000000 		.4byte	0
 3171 03bd 00000000 		.4byte	0
 3172              	.LLST25:
 3173 03c1 22000000 		.4byte	.LVL72
 3174 03c5 2A000000 		.4byte	.LVL73
 3175 03c9 0100     		.2byte	0x1
 3176 03cb 52       		.byte	0x52
 3177 03cc 2C000000 		.4byte	.LVL74
 3178 03d0 2E000000 		.4byte	.LVL75
 3179 03d4 0100     		.2byte	0x1
 3180 03d6 52       		.byte	0x52
 3181 03d7 00000000 		.4byte	0
 3182 03db 00000000 		.4byte	0
 3183              	.LLST26:
 3184 03df 06000000 		.4byte	.LVL66
 3185 03e3 62000000 		.4byte	.LVL87
 3186 03e7 0100     		.2byte	0x1
 3187 03e9 55       		.byte	0x55
 3188 03ea 00000000 		.4byte	0
 3189 03ee 00000000 		.4byte	0
 3190              	.LLST27:
 3191 03f2 08000000 		.4byte	.LVL67
 3192 03f6 62000000 		.4byte	.LVL88
 3193 03fa 0100     		.2byte	0x1
 3194 03fc 57       		.byte	0x57
 3195 03fd 00000000 		.4byte	0
 3196 0401 00000000 		.4byte	0
 3197              	.LLST28:
 3198 0405 00000000 		.4byte	.LVL89
 3199 0409 5E000000 		.4byte	.LVL110
 3200 040d 0100     		.2byte	0x1
 3201 040f 50       		.byte	0x50
 3202 0410 5E000000 		.4byte	.LVL110
 3203 0414 88000000 		.4byte	.LFE7
 3204 0418 0100     		.2byte	0x1
 3205 041a 50       		.byte	0x50
 3206 041b 00000000 		.4byte	0
 3207 041f 00000000 		.4byte	0
 3208              	.LLST29:
 3209 0423 00000000 		.4byte	.LVL89
 3210 0427 12000000 		.4byte	.LVL94
 3211 042b 0100     		.2byte	0x1
 3212 042d 51       		.byte	0x51
 3213 042e 12000000 		.4byte	.LVL94
 3214 0432 88000000 		.4byte	.LFE7
 3215 0436 0400     		.2byte	0x4
 3216 0438 F3       		.byte	0xf3
 3217 0439 01       		.uleb128 0x1
 3218 043a 51       		.byte	0x51
 3219 043b 9F       		.byte	0x9f
 3220 043c 00000000 		.4byte	0
 3221 0440 00000000 		.4byte	0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 87


 3222              	.LLST30:
 3223 0444 1E000000 		.4byte	.LVL99
 3224 0448 38000000 		.4byte	.LVL103
 3225 044c 0100     		.2byte	0x1
 3226 044e 51       		.byte	0x51
 3227 044f 3A000000 		.4byte	.LVL104
 3228 0453 44000000 		.4byte	.LVL106
 3229 0457 0100     		.2byte	0x1
 3230 0459 51       		.byte	0x51
 3231 045a 46000000 		.4byte	.LVL107
 3232 045e 48000000 		.4byte	.LVL108
 3233 0462 0100     		.2byte	0x1
 3234 0464 51       		.byte	0x51
 3235 0465 00000000 		.4byte	0
 3236 0469 00000000 		.4byte	0
 3237              	.LLST31:
 3238 046d 14000000 		.4byte	.LVL95
 3239 0471 18000000 		.4byte	.LVL97
 3240 0475 0100     		.2byte	0x1
 3241 0477 51       		.byte	0x51
 3242 0478 18000000 		.4byte	.LVL97
 3243 047c 20000000 		.4byte	.LVL100
 3244 0480 0100     		.2byte	0x1
 3245 0482 54       		.byte	0x54
 3246 0483 20000000 		.4byte	.LVL100
 3247 0487 72000000 		.4byte	.LVL117
 3248 048b 0100     		.2byte	0x1
 3249 048d 5C       		.byte	0x5c
 3250 048e 72000000 		.4byte	.LVL117
 3251 0492 76000000 		.4byte	.LVL118
 3252 0496 0100     		.2byte	0x1
 3253 0498 51       		.byte	0x51
 3254 0499 76000000 		.4byte	.LVL118
 3255 049d 7A000000 		.4byte	.LVL119
 3256 04a1 0100     		.2byte	0x1
 3257 04a3 54       		.byte	0x54
 3258 04a4 7A000000 		.4byte	.LVL119
 3259 04a8 88000000 		.4byte	.LFE7
 3260 04ac 0100     		.2byte	0x1
 3261 04ae 5C       		.byte	0x5c
 3262 04af 00000000 		.4byte	0
 3263 04b3 00000000 		.4byte	0
 3264              	.LLST32:
 3265 04b7 14000000 		.4byte	.LVL95
 3266 04bb 18000000 		.4byte	.LVL97
 3267 04bf 0200     		.2byte	0x2
 3268 04c1 31       		.byte	0x31
 3269 04c2 9F       		.byte	0x9f
 3270 04c3 18000000 		.4byte	.LVL97
 3271 04c7 88000000 		.4byte	.LFE7
 3272 04cb 0100     		.2byte	0x1
 3273 04cd 53       		.byte	0x53
 3274 04ce 00000000 		.4byte	0
 3275 04d2 00000000 		.4byte	0
 3276              	.LLST33:
 3277 04d6 48000000 		.4byte	.LVL108
 3278 04da 66000000 		.4byte	.LVL112
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 88


 3279 04de 0100     		.2byte	0x1
 3280 04e0 51       		.byte	0x51
 3281 04e1 68000000 		.4byte	.LVL113
 3282 04e5 6A000000 		.4byte	.LVL114
 3283 04e9 0100     		.2byte	0x1
 3284 04eb 51       		.byte	0x51
 3285 04ec 00000000 		.4byte	0
 3286 04f0 00000000 		.4byte	0
 3287              	.LLST34:
 3288 04f4 1C000000 		.4byte	.LVL98
 3289 04f8 4E000000 		.4byte	.LVL109
 3290 04fc 0100     		.2byte	0x1
 3291 04fe 56       		.byte	0x56
 3292 04ff 00000000 		.4byte	0
 3293 0503 00000000 		.4byte	0
 3294              	.LLST35:
 3295 0507 0C000000 		.4byte	.LVL91
 3296 050b 16000000 		.4byte	.LVL96
 3297 050f 0100     		.2byte	0x1
 3298 0511 53       		.byte	0x53
 3299 0512 16000000 		.4byte	.LVL96
 3300 0516 7A000000 		.4byte	.LVL121
 3301 051a 0100     		.2byte	0x1
 3302 051c 59       		.byte	0x59
 3303 051d 00000000 		.4byte	0
 3304 0521 00000000 		.4byte	0
 3305              	.LLST36:
 3306 0525 0E000000 		.4byte	.LVL92
 3307 0529 7A000000 		.4byte	.LVL120
 3308 052d 0100     		.2byte	0x1
 3309 052f 55       		.byte	0x55
 3310 0530 00000000 		.4byte	0
 3311 0534 00000000 		.4byte	0
 3312              	.LLST37:
 3313 0538 00000000 		.4byte	.LVL122
 3314 053c 18000000 		.4byte	.LVL125
 3315 0540 0100     		.2byte	0x1
 3316 0542 50       		.byte	0x50
 3317 0543 18000000 		.4byte	.LVL125
 3318 0547 20000000 		.4byte	.LVL128
 3319 054b 0100     		.2byte	0x1
 3320 054d 54       		.byte	0x54
 3321 054e 20000000 		.4byte	.LVL128
 3322 0552 22000000 		.4byte	.LVL129
 3323 0556 0100     		.2byte	0x1
 3324 0558 50       		.byte	0x50
 3325 0559 22000000 		.4byte	.LVL129
 3326 055d 2A000000 		.4byte	.LVL132
 3327 0561 0100     		.2byte	0x1
 3328 0563 54       		.byte	0x54
 3329 0564 2A000000 		.4byte	.LVL132
 3330 0568 2C000000 		.4byte	.LVL133
 3331 056c 0100     		.2byte	0x1
 3332 056e 50       		.byte	0x50
 3333 056f 2C000000 		.4byte	.LVL133
 3334 0573 3C000000 		.4byte	.LVL136
 3335 0577 0100     		.2byte	0x1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 89


 3336 0579 54       		.byte	0x54
 3337 057a 3C000000 		.4byte	.LVL136
 3338 057e 68000000 		.4byte	.LFE4
 3339 0582 0400     		.2byte	0x4
 3340 0584 F3       		.byte	0xf3
 3341 0585 01       		.uleb128 0x1
 3342 0586 50       		.byte	0x50
 3343 0587 9F       		.byte	0x9f
 3344 0588 00000000 		.4byte	0
 3345 058c 00000000 		.4byte	0
 3346              	.LLST38:
 3347 0590 00000000 		.4byte	.LVL122
 3348 0594 1B000000 		.4byte	.LVL126-1
 3349 0598 0100     		.2byte	0x1
 3350 059a 51       		.byte	0x51
 3351 059b 1B000000 		.4byte	.LVL126-1
 3352 059f 20000000 		.4byte	.LVL128
 3353 05a3 0400     		.2byte	0x4
 3354 05a5 F3       		.byte	0xf3
 3355 05a6 01       		.uleb128 0x1
 3356 05a7 51       		.byte	0x51
 3357 05a8 9F       		.byte	0x9f
 3358 05a9 20000000 		.4byte	.LVL128
 3359 05ad 25000000 		.4byte	.LVL130-1
 3360 05b1 0100     		.2byte	0x1
 3361 05b3 51       		.byte	0x51
 3362 05b4 25000000 		.4byte	.LVL130-1
 3363 05b8 2A000000 		.4byte	.LVL132
 3364 05bc 0400     		.2byte	0x4
 3365 05be F3       		.byte	0xf3
 3366 05bf 01       		.uleb128 0x1
 3367 05c0 51       		.byte	0x51
 3368 05c1 9F       		.byte	0x9f
 3369 05c2 2A000000 		.4byte	.LVL132
 3370 05c6 2F000000 		.4byte	.LVL134-1
 3371 05ca 0100     		.2byte	0x1
 3372 05cc 51       		.byte	0x51
 3373 05cd 2F000000 		.4byte	.LVL134-1
 3374 05d1 68000000 		.4byte	.LFE4
 3375 05d5 0400     		.2byte	0x4
 3376 05d7 F3       		.byte	0xf3
 3377 05d8 01       		.uleb128 0x1
 3378 05d9 51       		.byte	0x51
 3379 05da 9F       		.byte	0x9f
 3380 05db 00000000 		.4byte	0
 3381 05df 00000000 		.4byte	0
 3382              	.LLST39:
 3383 05e3 0C000000 		.4byte	.LVL124
 3384 05e7 1E000000 		.4byte	.LVL127
 3385 05eb 0100     		.2byte	0x1
 3386 05ed 55       		.byte	0x55
 3387 05ee 1E000000 		.4byte	.LVL127
 3388 05f2 20000000 		.4byte	.LVL128
 3389 05f6 0100     		.2byte	0x1
 3390 05f8 50       		.byte	0x50
 3391 05f9 20000000 		.4byte	.LVL128
 3392 05fd 28000000 		.4byte	.LVL131
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 90


 3393 0601 0100     		.2byte	0x1
 3394 0603 55       		.byte	0x55
 3395 0604 28000000 		.4byte	.LVL131
 3396 0608 2A000000 		.4byte	.LVL132
 3397 060c 0100     		.2byte	0x1
 3398 060e 50       		.byte	0x50
 3399 060f 2A000000 		.4byte	.LVL132
 3400 0613 62000000 		.4byte	.LVL145
 3401 0617 0100     		.2byte	0x1
 3402 0619 55       		.byte	0x55
 3403 061a 00000000 		.4byte	0
 3404 061e 00000000 		.4byte	0
 3405              	.LLST40:
 3406 0622 38000000 		.4byte	.LVL135
 3407 0626 46000000 		.4byte	.LVL138
 3408 062a 0100     		.2byte	0x1
 3409 062c 53       		.byte	0x53
 3410 062d 46000000 		.4byte	.LVL138
 3411 0631 48000000 		.4byte	.LVL139
 3412 0635 0300     		.2byte	0x3
 3413 0637 73       		.byte	0x73
 3414 0638 7C       		.sleb128 -4
 3415 0639 9F       		.byte	0x9f
 3416 063a 48000000 		.4byte	.LVL139
 3417 063e 54000000 		.4byte	.LVL140
 3418 0642 0600     		.2byte	0x6
 3419 0644 F3       		.byte	0xf3
 3420 0645 01       		.uleb128 0x1
 3421 0646 50       		.byte	0x50
 3422 0647 35       		.byte	0x35
 3423 0648 25       		.byte	0x25
 3424 0649 9F       		.byte	0x9f
 3425 064a 54000000 		.4byte	.LVL140
 3426 064e 56000000 		.4byte	.LVL141
 3427 0652 0100     		.2byte	0x1
 3428 0654 53       		.byte	0x53
 3429 0655 56000000 		.4byte	.LVL141
 3430 0659 58000000 		.4byte	.LVL142
 3431 065d 0300     		.2byte	0x3
 3432 065f 73       		.byte	0x73
 3433 0660 7C       		.sleb128 -4
 3434 0661 9F       		.byte	0x9f
 3435 0662 58000000 		.4byte	.LVL142
 3436 0666 68000000 		.4byte	.LFE4
 3437 066a 0600     		.2byte	0x6
 3438 066c F3       		.byte	0xf3
 3439 066d 01       		.uleb128 0x1
 3440 066e 50       		.byte	0x50
 3441 066f 35       		.byte	0x35
 3442 0670 25       		.byte	0x25
 3443 0671 9F       		.byte	0x9f
 3444 0672 00000000 		.4byte	0
 3445 0676 00000000 		.4byte	0
 3446              	.LLST41:
 3447 067a 40000000 		.4byte	.LVL137
 3448 067e 60000000 		.4byte	.LVL143
 3449 0682 0100     		.2byte	0x1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 91


 3450 0684 52       		.byte	0x52
 3451 0685 60000000 		.4byte	.LVL143
 3452 0689 62000000 		.4byte	.LVL144
 3453 068d 0500     		.2byte	0x5
 3454 068f 31       		.byte	0x31
 3455 0690 74       		.byte	0x74
 3456 0691 00       		.sleb128 0
 3457 0692 24       		.byte	0x24
 3458 0693 9F       		.byte	0x9f
 3459 0694 62000000 		.4byte	.LVL144
 3460 0698 68000000 		.4byte	.LFE4
 3461 069c 0800     		.2byte	0x8
 3462 069e 31       		.byte	0x31
 3463 069f F3       		.byte	0xf3
 3464 06a0 01       		.uleb128 0x1
 3465 06a1 50       		.byte	0x50
 3466 06a2 4F       		.byte	0x4f
 3467 06a3 1A       		.byte	0x1a
 3468 06a4 24       		.byte	0x24
 3469 06a5 9F       		.byte	0x9f
 3470 06a6 00000000 		.4byte	0
 3471 06aa 00000000 		.4byte	0
 3472              	.LLST42:
 3473 06ae 06000000 		.4byte	.LVL123
 3474 06b2 1B000000 		.4byte	.LVL126-1
 3475 06b6 0100     		.2byte	0x1
 3476 06b8 52       		.byte	0x52
 3477 06b9 20000000 		.4byte	.LVL128
 3478 06bd 25000000 		.4byte	.LVL130-1
 3479 06c1 0100     		.2byte	0x1
 3480 06c3 52       		.byte	0x52
 3481 06c4 2A000000 		.4byte	.LVL132
 3482 06c8 2F000000 		.4byte	.LVL134-1
 3483 06cc 0100     		.2byte	0x1
 3484 06ce 52       		.byte	0x52
 3485 06cf 00000000 		.4byte	0
 3486 06d3 00000000 		.4byte	0
 3487              		.section	.debug_aranges,"",%progbits
 3488 0000 4C000000 		.4byte	0x4c
 3489 0004 0200     		.2byte	0x2
 3490 0006 00000000 		.4byte	.Ldebug_info0
 3491 000a 04       		.byte	0x4
 3492 000b 00       		.byte	0
 3493 000c 0000     		.2byte	0
 3494 000e 0000     		.2byte	0
 3495 0010 00000000 		.4byte	.LFB1
 3496 0014 70000000 		.4byte	.LFE1-.LFB1
 3497 0018 00000000 		.4byte	.LFB5
 3498 001c 16000000 		.4byte	.LFE5-.LFB5
 3499 0020 00000000 		.4byte	.LFB2
 3500 0024 6A000000 		.4byte	.LFE2-.LFB2
 3501 0028 00000000 		.4byte	.LFB3
 3502 002c 40000000 		.4byte	.LFE3-.LFB3
 3503 0030 00000000 		.4byte	.LFB6
 3504 0034 64000000 		.4byte	.LFE6-.LFB6
 3505 0038 00000000 		.4byte	.LFB7
 3506 003c 88000000 		.4byte	.LFE7-.LFB7
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 92


 3507 0040 00000000 		.4byte	.LFB4
 3508 0044 68000000 		.4byte	.LFE4-.LFB4
 3509 0048 00000000 		.4byte	0
 3510 004c 00000000 		.4byte	0
 3511              		.section	.debug_ranges,"",%progbits
 3512              	.Ldebug_ranges0:
 3513 0000 00000000 		.4byte	.LFB1
 3514 0004 70000000 		.4byte	.LFE1
 3515 0008 00000000 		.4byte	.LFB5
 3516 000c 16000000 		.4byte	.LFE5
 3517 0010 00000000 		.4byte	.LFB2
 3518 0014 6A000000 		.4byte	.LFE2
 3519 0018 00000000 		.4byte	.LFB3
 3520 001c 40000000 		.4byte	.LFE3
 3521 0020 00000000 		.4byte	.LFB6
 3522 0024 64000000 		.4byte	.LFE6
 3523 0028 00000000 		.4byte	.LFB7
 3524 002c 88000000 		.4byte	.LFE7
 3525 0030 00000000 		.4byte	.LFB4
 3526 0034 68000000 		.4byte	.LFE4
 3527 0038 00000000 		.4byte	0
 3528 003c 00000000 		.4byte	0
 3529              		.section	.debug_line,"",%progbits
 3530              	.Ldebug_line0:
 3531 0000 5A030000 		.section	.debug_str,"MS",%progbits,1
 3531      02009A01 
 3531      00000201 
 3531      FB0E0D00 
 3531      01010101 
 3532              	.LASF26:
 3533 0000 43617053 		.ascii	"CapSense_WD_PROXIMITY_E\000"
 3533      656E7365 
 3533      5F57445F 
 3533      50524F58 
 3533      494D4954 
 3534              	.LASF116:
 3535 0018 43617053 		.ascii	"CapSense_DpProcessCsdSensorRawCountsExt\000"
 3535      656E7365 
 3535      5F447050 
 3535      726F6365 
 3535      73734373 
 3536              	.LASF44:
 3537 0040 766F6C5F 		.ascii	"vol_up\000"
 3537      757000
 3538              	.LASF120:
 3539 0047 736E7343 		.ascii	"snsCnt\000"
 3539      6E7400
 3540              	.LASF42:
 3541 004e 70726F78 		.ascii	"proxTouchTh\000"
 3541      546F7563 
 3541      68546800 
 3542              	.LASF102:
 3543 005a 77646774 		.ascii	"wdgtId\000"
 3543      496400
 3544              	.LASF113:
 3545 0061 666C7472 		.ascii	"fltrHistV\000"
 3545      48697374 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 93


 3545      5600
 3546              	.LASF71:
 3547 006b 736E7254 		.ascii	"snrTestWidgetId\000"
 3547      65737457 
 3547      69646765 
 3547      74496400 
 3548              	.LASF129:
 3549 007b 43617053 		.ascii	"CapSense_DpProcessCsdWidgetStatus\000"
 3549      656E7365 
 3549      5F447050 
 3549      726F6365 
 3549      73734373 
 3550              	.LASF8:
 3551 009d 756E7369 		.ascii	"unsigned int\000"
 3551      676E6564 
 3551      20696E74 
 3551      00
 3552              	.LASF62:
 3553 00aa 7363616E 		.ascii	"scanCounter\000"
 3553      436F756E 
 3553      74657200 
 3554              	.LASF107:
 3555 00b6 43617053 		.ascii	"CapSense_DpUpdateDifferences\000"
 3555      656E7365 
 3555      5F447055 
 3555      70646174 
 3555      65446966 
 3556              	.LASF60:
 3557 00d3 6877436C 		.ascii	"hwClock\000"
 3557      6F636B00 
 3558              	.LASF75:
 3559 00db 7363616E 		.ascii	"scanCsdISC\000"
 3559      43736449 
 3559      534300
 3560              	.LASF139:
 3561 00e6 43794861 		.ascii	"CyHalt\000"
 3561      6C7400
 3562              	.LASF109:
 3563 00ed 64696666 		.ascii	"diffValue\000"
 3563      56616C75 
 3563      6500
 3564              	.LASF142:
 3565 00f7 443A5C71 		.ascii	"D:\\qcs40x\\Cypress\\project\\4025LQIS412_workspace"
 3565      63733430 
 3565      785C4379 
 3565      70726573 
 3565      735C7072 
 3566 0126 5C343032 		.ascii	"\\4025LQIS412-EZIIC\\EZIIC_wadge.cydsn\000"
 3566      354C5149 
 3566      53343132 
 3566      2D455A49 
 3566      49435C45 
 3567              	.LASF45:
 3568 014b 766F6C5F 		.ascii	"vol_down\000"
 3568      646F776E 
 3568      00
 3569              	.LASF108:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 94


 3570 0154 63757253 		.ascii	"curSnsPtr\000"
 3570      6E735074 
 3570      7200
 3571              	.LASF25:
 3572 015e 43617053 		.ascii	"CapSense_WD_TOUCHPAD_E\000"
 3572      656E7365 
 3572      5F57445F 
 3572      544F5543 
 3572      48504144 
 3573              	.LASF50:
 3574 0175 43617053 		.ascii	"CapSense_RAM_WD_LIST_STRUCT\000"
 3574      656E7365 
 3574      5F52414D 
 3574      5F57445F 
 3574      4C495354 
 3575              	.LASF135:
 3576 0191 43617053 		.ascii	"CapSense_dsFlash\000"
 3576      656E7365 
 3576      5F647346 
 3576      6C617368 
 3576      00
 3577              	.LASF110:
 3578 01a2 72657375 		.ascii	"result\000"
 3578      6C7400
 3579              	.LASF37:
 3580 01a9 69646163 		.ascii	"idacGainIndex\000"
 3580      4761696E 
 3580      496E6465 
 3580      7800
 3581              	.LASF122:
 3582 01b7 6E657753 		.ascii	"newStatus\000"
 3582      74617475 
 3582      7300
 3583              	.LASF13:
 3584 01c1 666C6F61 		.ascii	"float\000"
 3584      7400
 3585              	.LASF140:
 3586 01c7 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3586      43313120 
 3586      352E342E 
 3586      31203230 
 3586      31363036 
 3587 01fa 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 3587      20726576 
 3587      6973696F 
 3587      6E203233 
 3587      37373135 
 3588 022d 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 3588      67202D66 
 3588      66756E63 
 3588      74696F6E 
 3588      2D736563 
 3589              	.LASF97:
 3590 0259 70726F78 		.ascii	"proxChannel\000"
 3590      4368616E 
 3590      6E656C00 
 3591              	.LASF12:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 95


 3592 0265 696E7433 		.ascii	"int32\000"
 3592      3200
 3593              	.LASF125:
 3594 026b 43617053 		.ascii	"CapSense_DpProcessProximity\000"
 3594      656E7365 
 3594      5F447050 
 3594      726F6365 
 3594      73735072 
 3595              	.LASF106:
 3596 0287 43617053 		.ascii	"CapSense_DpInitialize\000"
 3596      656E7365 
 3596      5F447049 
 3596      6E697469 
 3596      616C697A 
 3597              	.LASF138:
 3598 029d 43617053 		.ascii	"CapSense_FtUpdateBaseline\000"
 3598      656E7365 
 3598      5F467455 
 3598      70646174 
 3598      65426173 
 3599              	.LASF70:
 3600 02b7 736E734C 		.ascii	"snsList\000"
 3600      69737400 
 3601              	.LASF100:
 3602 02bf 70747250 		.ascii	"ptrProx\000"
 3602      726F7800 
 3603              	.LASF7:
 3604 02c7 6C6F6E67 		.ascii	"long long unsigned int\000"
 3604      206C6F6E 
 3604      6720756E 
 3604      7369676E 
 3604      65642069 
 3605              	.LASF24:
 3606 02de 43617053 		.ascii	"CapSense_WD_MATRIX_BUTTON_E\000"
 3606      656E7365 
 3606      5F57445F 
 3606      4D415452 
 3606      49585F42 
 3607              	.LASF99:
 3608 02fa 70747252 		.ascii	"ptrRegular\000"
 3608      6567756C 
 3608      617200
 3609              	.LASF126:
 3610 0305 63757272 		.ascii	"currTh\000"
 3610      546800
 3611              	.LASF72:
 3612 030c 736E7254 		.ascii	"snrTestSensorId\000"
 3612      65737453 
 3612      656E736F 
 3612      72496400 
 3613              	.LASF85:
 3614 031c 77646774 		.ascii	"wdgtType\000"
 3614      54797065 
 3614      00
 3615              	.LASF137:
 3616 0325 43617053 		.ascii	"CapSense_FtRunEnabledFiltersInternal\000"
 3616      656E7365 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 96


 3616      5F467452 
 3616      756E456E 
 3616      61626C65 
 3617              	.LASF101:
 3618 034a 43617053 		.ascii	"CapSense_PTR_FILTER_VARIANT\000"
 3618      656E7365 
 3618      5F505452 
 3618      5F46494C 
 3618      5445525F 
 3619              	.LASF95:
 3620 0366 72656775 		.ascii	"regularChannel\000"
 3620      6C617243 
 3620      68616E6E 
 3620      656C00
 3621              	.LASF68:
 3622 0375 6D6F6443 		.ascii	"modCsdClk\000"
 3622      7364436C 
 3622      6B00
 3623              	.LASF56:
 3624 037f 43617053 		.ascii	"CapSense_RAM_SNS_STRUCT\000"
 3624      656E7365 
 3624      5F52414D 
 3624      5F534E53 
 3624      5F535452 
 3625              	.LASF48:
 3626 0397 666F726D 		.ascii	"formation\000"
 3626      6174696F 
 3626      6E00
 3627              	.LASF16:
 3628 03a1 73697A65 		.ascii	"size_t\000"
 3628      5F7400
 3629              	.LASF117:
 3630 03a8 6D6F6465 		.ascii	"mode\000"
 3630      00
 3631              	.LASF33:
 3632 03ad 68797374 		.ascii	"hysteresis\000"
 3632      65726573 
 3632      697300
 3633              	.LASF23:
 3634 03b8 43617053 		.ascii	"CapSense_WD_RADIAL_SLIDER_E\000"
 3634      656E7365 
 3634      5F57445F 
 3634      52414449 
 3634      414C5F53 
 3635              	.LASF87:
 3636 03d4 43617053 		.ascii	"CapSense_FLASH_WD_STRUCT\000"
 3636      656E7365 
 3636      5F464C41 
 3636      53485F57 
 3636      445F5354 
 3637              	.LASF35:
 3638 03ed 6C6F7742 		.ascii	"lowBslnRst\000"
 3638      736C6E52 
 3638      737400
 3639              	.LASF84:
 3640 03f8 746F7461 		.ascii	"totalNumSns\000"
 3640      6C4E756D 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 97


 3640      536E7300 
 3641              	.LASF31:
 3642 0404 6E6F6973 		.ascii	"noiseTh\000"
 3642      65546800 
 3643              	.LASF15:
 3644 040c 63686172 		.ascii	"char\000"
 3644      00
 3645              	.LASF115:
 3646 0411 43617053 		.ascii	"CapSense_DpProcessCsdWidgetRawCounts\000"
 3646      656E7365 
 3646      5F447050 
 3646      726F6365 
 3646      73734373 
 3647              	.LASF10:
 3648 0436 75696E74 		.ascii	"uint16\000"
 3648      313600
 3649              	.LASF82:
 3650 043d 70747232 		.ascii	"ptr2DebounceArr\000"
 3650      4465626F 
 3650      756E6365 
 3650      41727200 
 3651              	.LASF29:
 3652 044d 7265736F 		.ascii	"resolution\000"
 3652      6C757469 
 3652      6F6E00
 3653              	.LASF63:
 3654 0458 73746174 		.ascii	"status\000"
 3654      757300
 3655              	.LASF141:
 3656 045f 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_Processing.c\000"
 3656      72617465 
 3656      645F536F 
 3656      75726365 
 3656      5C50536F 
 3657              	.LASF20:
 3658 048c 43617053 		.ascii	"CapSense_LOW_BSLN_RST_TYPE\000"
 3658      656E7365 
 3658      5F4C4F57 
 3658      5F42534C 
 3658      4E5F5253 
 3659              	.LASF118:
 3660 04a7 43617053 		.ascii	"CapSense_DpProcessButton\000"
 3660      656E7365 
 3660      5F447050 
 3660      726F6365 
 3660      73734275 
 3661              	.LASF55:
 3662 04c0 69646163 		.ascii	"idacComp\000"
 3662      436F6D70 
 3662      00
 3663              	.LASF6:
 3664 04c9 6C6F6E67 		.ascii	"long long int\000"
 3664      206C6F6E 
 3664      6720696E 
 3664      7400
 3665              	.LASF86:
 3666 04d7 6E756D43 		.ascii	"numCols\000"
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 98


 3666      6F6C7300 
 3667              	.LASF98:
 3668 04df 43617053 		.ascii	"CapSense_PROX_FLTR_STRUCT\000"
 3668      656E7365 
 3668      5F50524F 
 3668      585F464C 
 3668      54525F53 
 3669              	.LASF34:
 3670 04f9 6F6E4465 		.ascii	"onDebounce\000"
 3670      626F756E 
 3670      636500
 3671              	.LASF69:
 3672 0504 77646774 		.ascii	"wdgtList\000"
 3672      4C697374 
 3672      00
 3673              	.LASF89:
 3674 050d 43617053 		.ascii	"CapSense_FLASH_STRUCT\000"
 3674      656E7365 
 3674      5F464C41 
 3674      53485F53 
 3674      54525543 
 3675              	.LASF134:
 3676 0523 43617053 		.ascii	"CapSense_dsRam\000"
 3676      656E7365 
 3676      5F647352 
 3676      616D00
 3677              	.LASF74:
 3678 0532 736E7254 		.ascii	"snrTestRawCount\000"
 3678      65737452 
 3678      6177436F 
 3678      756E7400 
 3679              	.LASF136:
 3680 0542 6D656D73 		.ascii	"memset\000"
 3680      657400
 3681              	.LASF32:
 3682 0549 6E4E6F69 		.ascii	"nNoiseTh\000"
 3682      73655468 
 3682      00
 3683              	.LASF47:
 3684 0552 6C696265 		.ascii	"liberty_pull\000"
 3684      7274795F 
 3684      70756C6C 
 3684      00
 3685              	.LASF67:
 3686 055f 63736430 		.ascii	"csd0Config\000"
 3686      436F6E66 
 3686      696700
 3687              	.LASF40:
 3688 056a 43617053 		.ascii	"CapSense_RAM_WD_BASE_STRUCT\000"
 3688      656E7365 
 3688      5F52414D 
 3688      5F57445F 
 3688      42415345 
 3689              	.LASF28:
 3690 0586 43617053 		.ascii	"CapSense_WD_TYPE_ENUM\000"
 3690      656E7365 
 3690      5F57445F 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 99


 3690      54595045 
 3690      5F454E55 
 3691              	.LASF131:
 3692 059c 73656E73 		.ascii	"sensorStatus\000"
 3692      6F725374 
 3692      61747573 
 3692      00
 3693              	.LASF11:
 3694 05a9 75696E74 		.ascii	"uint32\000"
 3694      333200
 3695              	.LASF123:
 3696 05b0 746F7563 		.ascii	"touchTh\000"
 3696      68546800 
 3697              	.LASF81:
 3698 05b8 70747232 		.ascii	"ptr2FltrHistory\000"
 3698      466C7472 
 3698      48697374 
 3698      6F727900 
 3699              	.LASF22:
 3700 05c8 43617053 		.ascii	"CapSense_WD_LINEAR_SLIDER_E\000"
 3700      656E7365 
 3700      5F57445F 
 3700      4C494E45 
 3700      41525F53 
 3701              	.LASF132:
 3702 05e4 77645374 		.ascii	"wdStatusIndex\000"
 3702      61747573 
 3702      496E6465 
 3702      7800
 3703              	.LASF91:
 3704 05f2 6D656448 		.ascii	"medHistory\000"
 3704      6973746F 
 3704      727900
 3705              	.LASF128:
 3706 05fd 70726F78 		.ascii	"proxMask\000"
 3706      4D61736B 
 3706      00
 3707              	.LASF17:
 3708 0606 6C6F6E67 		.ascii	"long double\000"
 3708      20646F75 
 3708      626C6500 
 3709              	.LASF104:
 3710 0612 70747252 		.ascii	"ptrRamWdgt\000"
 3710      616D5764 
 3710      677400
 3711              	.LASF121:
 3712 061d 736E734D 		.ascii	"snsMask\000"
 3712      61736B00 
 3713              	.LASF73:
 3714 0625 736E7254 		.ascii	"snrTestScanCounter\000"
 3714      65737453 
 3714      63616E43 
 3714      6F756E74 
 3714      657200
 3715              	.LASF58:
 3716 0638 636F6E66 		.ascii	"configId\000"
 3716      69674964 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 100


 3716      00
 3717              	.LASF80:
 3718 0641 70747232 		.ascii	"ptr2SnsRam\000"
 3718      536E7352 
 3718      616D00
 3719              	.LASF92:
 3720 064c 61766748 		.ascii	"avgHistory\000"
 3720      6973746F 
 3720      727900
 3721              	.LASF66:
 3722 0657 736E7353 		.ascii	"snsStatus\000"
 3722      74617475 
 3722      7300
 3723              	.LASF27:
 3724 0661 43617053 		.ascii	"CapSense_WD_ENCODERDIAL_E\000"
 3724      656E7365 
 3724      5F57445F 
 3724      454E434F 
 3724      44455244 
 3725              	.LASF39:
 3726 067b 736E7343 		.ascii	"snsClkSource\000"
 3726      6C6B536F 
 3726      75726365 
 3726      00
 3727              	.LASF2:
 3728 0688 73686F72 		.ascii	"short int\000"
 3728      7420696E 
 3728      7400
 3729              	.LASF77:
 3730 0692 43617053 		.ascii	"CapSense_RAM_STRUCT\000"
 3730      656E7365 
 3730      5F52414D 
 3730      5F535452 
 3730      55435400 
 3731              	.LASF96:
 3732 06a6 43617053 		.ascii	"CapSense_REGULAR_FLTR_STRUCT\000"
 3732      656E7365 
 3732      5F524547 
 3732      554C4152 
 3732      5F464C54 
 3733              	.LASF4:
 3734 06c3 6C6F6E67 		.ascii	"long int\000"
 3734      20696E74 
 3734      00
 3735              	.LASF64:
 3736 06cc 77646774 		.ascii	"wdgtEnable\000"
 3736      456E6162 
 3736      6C6500
 3737              	.LASF53:
 3738 06d7 64696666 		.ascii	"diff\000"
 3738      00
 3739              	.LASF61:
 3740 06dc 74756E65 		.ascii	"tunerCmd\000"
 3740      72436D64 
 3740      00
 3741              	.LASF111:
 3742 06e5 736E7349 		.ascii	"snsId\000"
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 101


 3742      6400
 3743              	.LASF21:
 3744 06eb 43617053 		.ascii	"CapSense_WD_BUTTON_E\000"
 3744      656E7365 
 3744      5F57445F 
 3744      42555454 
 3744      4F4E5F45 
 3745              	.LASF93:
 3746 0700 43617053 		.ascii	"CapSense_REGULAR_FLTR_CHANNEL_STRUCT\000"
 3746      656E7365 
 3746      5F524547 
 3746      554C4152 
 3746      5F464C54 
 3747              	.LASF112:
 3748 0725 70747253 		.ascii	"ptrSnsTmp\000"
 3748      6E73546D 
 3748      7000
 3749              	.LASF94:
 3750 072f 43617053 		.ascii	"CapSense_PROX_FLTR_CHANNEL_STRUCT\000"
 3750      656E7365 
 3750      5F50524F 
 3750      585F464C 
 3750      54525F43 
 3751              	.LASF124:
 3752 0751 70747244 		.ascii	"ptrDebounceCnt\000"
 3752      65626F75 
 3752      6E636543 
 3752      6E7400
 3753              	.LASF65:
 3754 0760 77646774 		.ascii	"wdgtStatus\000"
 3754      53746174 
 3754      757300
 3755              	.LASF18:
 3756 076b 73697A65 		.ascii	"sizetype\000"
 3756      74797065 
 3756      00
 3757              	.LASF5:
 3758 0774 6C6F6E67 		.ascii	"long unsigned int\000"
 3758      20756E73 
 3758      69676E65 
 3758      6420696E 
 3758      7400
 3759              	.LASF36:
 3760 0786 69646163 		.ascii	"idacMod\000"
 3760      4D6F6400 
 3761              	.LASF49:
 3762 078e 70726F78 		.ascii	"prox\000"
 3762      00
 3763              	.LASF30:
 3764 0793 66696E67 		.ascii	"fingerTh\000"
 3764      65725468 
 3764      00
 3765              	.LASF52:
 3766 079c 62736C6E 		.ascii	"bslnExt\000"
 3766      45787400 
 3767              	.LASF41:
 3768 07a4 43617053 		.ascii	"CapSense_RAM_WD_BUTTON_STRUCT\000"
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 102


 3768      656E7365 
 3768      5F52414D 
 3768      5F57445F 
 3768      42555454 
 3769              	.LASF43:
 3770 07c2 43617053 		.ascii	"CapSense_RAM_WD_PROXIMITY_STRUCT\000"
 3770      656E7365 
 3770      5F52414D 
 3770      5F57445F 
 3770      50524F58 
 3771              	.LASF1:
 3772 07e3 756E7369 		.ascii	"unsigned char\000"
 3772      676E6564 
 3772      20636861 
 3772      7200
 3773              	.LASF133:
 3774 07f1 77645374 		.ascii	"wdStatusMask\000"
 3774      61747573 
 3774      4D61736B 
 3774      00
 3775              	.LASF114:
 3776 07fe 69735072 		.ascii	"isProxWdgt\000"
 3776      6F785764 
 3776      677400
 3777              	.LASF105:
 3778 0809 70747246 		.ascii	"ptrFlashWdgt\000"
 3778      6C617368 
 3778      57646774 
 3778      00
 3779              	.LASF83:
 3780 0816 73746174 		.ascii	"staticConfig\000"
 3780      6963436F 
 3780      6E666967 
 3780      00
 3781              	.LASF76:
 3782 0823 7363616E 		.ascii	"scanCurrentISC\000"
 3782      43757272 
 3782      656E7449 
 3782      534300
 3783              	.LASF79:
 3784 0832 70747232 		.ascii	"ptr2WdgtRam\000"
 3784      57646774 
 3784      52616D00 
 3785              	.LASF19:
 3786 083e 43617053 		.ascii	"CapSense_THRESHOLD_TYPE\000"
 3786      656E7365 
 3786      5F544852 
 3786      4553484F 
 3786      4C445F54 
 3787              	.LASF90:
 3788 0856 69697248 		.ascii	"iirHistory\000"
 3788      6973746F 
 3788      727900
 3789              	.LASF119:
 3790 0861 63757272 		.ascii	"currStatus\000"
 3790      53746174 
 3790      757300
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 103


 3791              	.LASF127:
 3792 086c 64696666 		.ascii	"difference\000"
 3792      6572656E 
 3792      636500
 3793              	.LASF38:
 3794 0877 736E7343 		.ascii	"snsClk\000"
 3794      6C6B00
 3795              	.LASF0:
 3796 087e 7369676E 		.ascii	"signed char\000"
 3796      65642063 
 3796      68617200 
 3797              	.LASF51:
 3798 088a 62736C6E 		.ascii	"bsln\000"
 3798      00
 3799              	.LASF3:
 3800 088f 73686F72 		.ascii	"short unsigned int\000"
 3800      7420756E 
 3800      7369676E 
 3800      65642069 
 3800      6E7400
 3801              	.LASF46:
 3802 08a2 706C6179 		.ascii	"play_pause\000"
 3802      5F706175 
 3802      736500
 3803              	.LASF78:
 3804 08ad 70747232 		.ascii	"ptr2SnsFlash\000"
 3804      536E7346 
 3804      6C617368 
 3804      00
 3805              	.LASF9:
 3806 08ba 75696E74 		.ascii	"uint8\000"
 3806      3800
 3807              	.LASF14:
 3808 08c0 646F7562 		.ascii	"double\000"
 3808      6C6500
 3809              	.LASF54:
 3810 08c7 6E656742 		.ascii	"negBslnRstCnt\000"
 3810      736C6E52 
 3810      7374436E 
 3810      7400
 3811              	.LASF103:
 3812 08d5 77696467 		.ascii	"widgetType\000"
 3812      65745479 
 3812      706500
 3813              	.LASF59:
 3814 08e0 64657669 		.ascii	"deviceId\000"
 3814      63654964 
 3814      00
 3815              	.LASF130:
 3816 08e9 77696467 		.ascii	"widgetId\000"
 3816      65744964 
 3816      00
 3817              	.LASF57:
 3818 08f2 43617053 		.ascii	"CapSense_RAM_SNS_LIST_STRUCT\000"
 3818      656E7365 
 3818      5F52414D 
 3818      5F534E53 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccr2IpWf.s 			page 104


 3818      5F4C4953 
 3819              	.LASF88:
 3820 090f 77646774 		.ascii	"wdgtArray\000"
 3820      41727261 
 3820      7900
 3821              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran

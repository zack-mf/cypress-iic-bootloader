ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc0leXkL.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_INT.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_SsCSDPostScan,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	CapSense_SsCSDPostScan, %function
  24              	CapSense_SsCSDPostScan:
  25              	.LFB3:
  26              		.file 1 "Generated_Source\\PSoC4\\CapSense_INT.c"
   1:Generated_Source\PSoC4/CapSense_INT.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CapSense_INT.c **** * \file CapSense_INT.c
   3:Generated_Source\PSoC4/CapSense_INT.c **** * \version 7.0
   4:Generated_Source\PSoC4/CapSense_INT.c **** *
   5:Generated_Source\PSoC4/CapSense_INT.c **** * \brief
   6:Generated_Source\PSoC4/CapSense_INT.c **** *   This file contains the source code for implementation of the Component's
   7:Generated_Source\PSoC4/CapSense_INT.c **** *   Interrupt Service Routine (ISR).
   8:Generated_Source\PSoC4/CapSense_INT.c **** *
   9:Generated_Source\PSoC4/CapSense_INT.c **** * \see CapSense v7.0 Datasheet
  10:Generated_Source\PSoC4/CapSense_INT.c **** *
  11:Generated_Source\PSoC4/CapSense_INT.c **** *//*****************************************************************************
  12:Generated_Source\PSoC4/CapSense_INT.c **** * Copyright (2016-2019), Cypress Semiconductor Corporation.
  13:Generated_Source\PSoC4/CapSense_INT.c **** ********************************************************************************
  14:Generated_Source\PSoC4/CapSense_INT.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  15:Generated_Source\PSoC4/CapSense_INT.c **** * protected by and subject to worldwide patent protection (United States and
  16:Generated_Source\PSoC4/CapSense_INT.c **** * foreign), United States copyright laws and international treaty provisions.
  17:Generated_Source\PSoC4/CapSense_INT.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  18:Generated_Source\PSoC4/CapSense_INT.c **** * license to copy, use, modify, create derivative works of, and compile the
  19:Generated_Source\PSoC4/CapSense_INT.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  20:Generated_Source\PSoC4/CapSense_INT.c **** * custom software in support of licensee product to be used only in conjunction
  21:Generated_Source\PSoC4/CapSense_INT.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  22:Generated_Source\PSoC4/CapSense_INT.c **** * Any reproduction, modification, translation, compilation, or representation of
  23:Generated_Source\PSoC4/CapSense_INT.c **** * this software except as specified above is prohibited without the express
  24:Generated_Source\PSoC4/CapSense_INT.c **** * written permission of Cypress.
  25:Generated_Source\PSoC4/CapSense_INT.c **** *
  26:Generated_Source\PSoC4/CapSense_INT.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  27:Generated_Source\PSoC4/CapSense_INT.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  28:Generated_Source\PSoC4/CapSense_INT.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  29:Generated_Source\PSoC4/CapSense_INT.c **** * Cypress reserves the right to make changes without further notice to the
  30:Generated_Source\PSoC4/CapSense_INT.c **** * materials described herein. Cypress does not assume any liability arising out
  31:Generated_Source\PSoC4/CapSense_INT.c **** * of the application or use of any product or circuit described herein. Cypress
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc0leXkL.s 			page 2


  32:Generated_Source\PSoC4/CapSense_INT.c **** * does not authorize its products for use as critical components in life-support
  33:Generated_Source\PSoC4/CapSense_INT.c **** * systems where a malfunction or failure may reasonably be expected to result in
  34:Generated_Source\PSoC4/CapSense_INT.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  35:Generated_Source\PSoC4/CapSense_INT.c **** * support systems application implies that the manufacturer assumes all risk of
  36:Generated_Source\PSoC4/CapSense_INT.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  37:Generated_Source\PSoC4/CapSense_INT.c **** * limited by and subject to the applicable Cypress software license agreement.
  38:Generated_Source\PSoC4/CapSense_INT.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/CapSense_INT.c **** #include "cytypes.h"
  40:Generated_Source\PSoC4/CapSense_INT.c **** #include "cyfitter.h"
  41:Generated_Source\PSoC4/CapSense_INT.c **** #include "CapSense_Configuration.h"
  42:Generated_Source\PSoC4/CapSense_INT.c **** #include "CapSense_Structure.h"
  43:Generated_Source\PSoC4/CapSense_INT.c **** #include "CapSense_Sensing.h"
  44:Generated_Source\PSoC4/CapSense_INT.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
  45:Generated_Source\PSoC4/CapSense_INT.c ****     #include "CapSense_SensingCSD_LL.h"
  46:Generated_Source\PSoC4/CapSense_INT.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
  47:Generated_Source\PSoC4/CapSense_INT.c **** #include "cyapicallbacks.h"
  48:Generated_Source\PSoC4/CapSense_INT.c **** 
  49:Generated_Source\PSoC4/CapSense_INT.c **** /*******************************************************************************
  50:Generated_Source\PSoC4/CapSense_INT.c **** * Static Function Prototypes
  51:Generated_Source\PSoC4/CapSense_INT.c **** *******************************************************************************/
  52:Generated_Source\PSoC4/CapSense_INT.c **** /**
  53:Generated_Source\PSoC4/CapSense_INT.c **** * \cond SECTION_C_INTERNAL
  54:Generated_Source\PSoC4/CapSense_INT.c **** * \addtogroup group_c_internal
  55:Generated_Source\PSoC4/CapSense_INT.c **** * \{
  56:Generated_Source\PSoC4/CapSense_INT.c **** */
  57:Generated_Source\PSoC4/CapSense_INT.c **** 
  58:Generated_Source\PSoC4/CapSense_INT.c **** #if (((CapSense_ENABLE == CapSense_CSD_EN) || (CapSense_ENABLE == CapSense_CSD_CSX_EN)) && \
  59:Generated_Source\PSoC4/CapSense_INT.c ****      (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN))
  60:Generated_Source\PSoC4/CapSense_INT.c ****     static void CapSense_SsNextFrequencyScan(void);
  61:Generated_Source\PSoC4/CapSense_INT.c **** #endif /* (((CapSense_ENABLE == CapSense_CSD_EN) || (CapSense_ENABLE == CapSense_CSD_CSX_EN)) && \
  62:Generated_Source\PSoC4/CapSense_INT.c ****             (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)) */
  63:Generated_Source\PSoC4/CapSense_INT.c **** 
  64:Generated_Source\PSoC4/CapSense_INT.c **** #if ((CapSense_ENABLE == CapSense_CSD_EN) || (CapSense_ENABLE == CapSense_CSD_CSX_EN))
  65:Generated_Source\PSoC4/CapSense_INT.c ****     static void CapSense_SsCSDPostScan(void);
  66:Generated_Source\PSoC4/CapSense_INT.c ****     static void CapSense_SsCSDInitNextScan(void);
  67:Generated_Source\PSoC4/CapSense_INT.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) || (CapSense_ENABLE == CapSense_CSD_CSX_EN)) */
  68:Generated_Source\PSoC4/CapSense_INT.c **** /** \}
  69:Generated_Source\PSoC4/CapSense_INT.c **** * \endcond */
  70:Generated_Source\PSoC4/CapSense_INT.c **** 
  71:Generated_Source\PSoC4/CapSense_INT.c **** 
  72:Generated_Source\PSoC4/CapSense_INT.c **** /**
  73:Generated_Source\PSoC4/CapSense_INT.c **** * \cond SECTION_C_INTERRUPT
  74:Generated_Source\PSoC4/CapSense_INT.c **** * \addtogroup group_c_interrupt
  75:Generated_Source\PSoC4/CapSense_INT.c **** * \{
  76:Generated_Source\PSoC4/CapSense_INT.c **** */
  77:Generated_Source\PSoC4/CapSense_INT.c **** 
  78:Generated_Source\PSoC4/CapSense_INT.c **** 
  79:Generated_Source\PSoC4/CapSense_INT.c **** #if ((CapSense_ENABLE == CapSense_CSD_EN) || (CapSense_ENABLE == CapSense_CSD_CSX_EN))
  80:Generated_Source\PSoC4/CapSense_INT.c **** 
  81:Generated_Source\PSoC4/CapSense_INT.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
  82:Generated_Source\PSoC4/CapSense_INT.c ****     /* Fourth-generation HW block part */
  83:Generated_Source\PSoC4/CapSense_INT.c **** 
  84:Generated_Source\PSoC4/CapSense_INT.c ****     /*******************************************************************************
  85:Generated_Source\PSoC4/CapSense_INT.c ****     * Function Name: CapSense_CSDPostSingleScan
  86:Generated_Source\PSoC4/CapSense_INT.c ****     ****************************************************************************//**
  87:Generated_Source\PSoC4/CapSense_INT.c ****     *
  88:Generated_Source\PSoC4/CapSense_INT.c ****     * \brief
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc0leXkL.s 			page 3


  89:Generated_Source\PSoC4/CapSense_INT.c ****     *  This is an internal ISR function for the single-sensor scanning implementation.
  90:Generated_Source\PSoC4/CapSense_INT.c ****     *
  91:Generated_Source\PSoC4/CapSense_INT.c ****     * \details
  92:Generated_Source\PSoC4/CapSense_INT.c ****     *  This ISR handler is triggered when the user calls the
  93:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_CSDScanExt() function.
  94:Generated_Source\PSoC4/CapSense_INT.c ****     *
  95:Generated_Source\PSoC4/CapSense_INT.c ****     *  The following tasks are performed for Third-generation HW block:
  96:Generated_Source\PSoC4/CapSense_INT.c ****     *    1. Disable the CSD interrupt.
  97:Generated_Source\PSoC4/CapSense_INT.c ****     *    2. Read the Counter register and update the data structure with raw data.
  98:Generated_Source\PSoC4/CapSense_INT.c ****     *    3. Connect the Vref buffer to the AMUX bus.
  99:Generated_Source\PSoC4/CapSense_INT.c ****     *    4. Update the Scan Counter.
 100:Generated_Source\PSoC4/CapSense_INT.c ****     *    5. Reset the BUSY flag.
 101:Generated_Source\PSoC4/CapSense_INT.c ****     *    6. Enable the CSD interrupt.
 102:Generated_Source\PSoC4/CapSense_INT.c ****     *
 103:Generated_Source\PSoC4/CapSense_INT.c ****     *  The following tasks are performed for Fourth-generation HW block:
 104:Generated_Source\PSoC4/CapSense_INT.c ****     *    1. Check if the raw data is not noisy.
 105:Generated_Source\PSoC4/CapSense_INT.c ****     *    2. Read the Counter register and update the data structure with raw data.
 106:Generated_Source\PSoC4/CapSense_INT.c ****     *    3. Configure and start the scan for the next frequency if the
 107:Generated_Source\PSoC4/CapSense_INT.c ****     *      multi-frequency is enabled.
 108:Generated_Source\PSoC4/CapSense_INT.c ****     *    4. Update the Scan Counter.
 109:Generated_Source\PSoC4/CapSense_INT.c ****     *    5. Reset the BUSY flag.
 110:Generated_Source\PSoC4/CapSense_INT.c ****     *    6. Enable the CSD interrupt.
 111:Generated_Source\PSoC4/CapSense_INT.c ****     *
 112:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler changes the IMO and initializes scanning for the next frequency
 113:Generated_Source\PSoC4/CapSense_INT.c ****     *  channels when multi-frequency scanning is enabled.
 114:Generated_Source\PSoC4/CapSense_INT.c ****     *
 115:Generated_Source\PSoC4/CapSense_INT.c ****     *  This function has two Macro Callbacks that allow calling the user code
 116:Generated_Source\PSoC4/CapSense_INT.c ****     *  from macros specified in Component's generated code. Refer to the
 117:Generated_Source\PSoC4/CapSense_INT.c ****     *  \ref group_c_macrocallbacks section of the PSoC Creator User Guide
 118:Generated_Source\PSoC4/CapSense_INT.c ****     *  for details.
 119:Generated_Source\PSoC4/CapSense_INT.c ****     *
 120:Generated_Source\PSoC4/CapSense_INT.c ****     *******************************************************************************/
 121:Generated_Source\PSoC4/CapSense_INT.c ****     CY_ISR(CapSense_CSDPostSingleScan)
 122:Generated_Source\PSoC4/CapSense_INT.c ****     {
 123:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_ENTRY_CALLBACK
 124:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_EntryCallback();
 125:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_ENTRY_CALLBACK */
 126:Generated_Source\PSoC4/CapSense_INT.c **** 
 127:Generated_Source\PSoC4/CapSense_INT.c ****         /* Clear pending interrupt */
 128:Generated_Source\PSoC4/CapSense_INT.c ****         CY_SET_REG32(CapSense_INTR_PTR, CapSense_INTR_SET_MASK);
 129:Generated_Source\PSoC4/CapSense_INT.c **** 
 130:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN)
 131:Generated_Source\PSoC4/CapSense_INT.c ****             if ((CapSense_CSD_NOISE_METRIC_TH < ((CY_GET_REG32(CapSense_RESULT_VAL1_PTR) &
 132:Generated_Source\PSoC4/CapSense_INT.c ****                                                         CapSense_RESULT_VAL1_BAD_CONVS_MASK) >>
 133:Generated_Source\PSoC4/CapSense_INT.c ****                                                         CapSense_RESULT_VAL1_BAD_CONVS_SHIFT)) &&
 134:Generated_Source\PSoC4/CapSense_INT.c ****                                                         (0u < CapSense_badConversionsNum))
 135:Generated_Source\PSoC4/CapSense_INT.c ****             {
 136:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Decrement bad conversions number */
 137:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_badConversionsNum--;
 138:Generated_Source\PSoC4/CapSense_INT.c **** 
 139:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Start the re-scan */
 140:Generated_Source\PSoC4/CapSense_INT.c ****                 CY_SET_REG32(CapSense_SEQ_START_PTR, CapSense_SEQ_START_AZ0_SKIP_MASK |
 141:Generated_Source\PSoC4/CapSense_INT.c ****                                                              CapSense_SEQ_START_AZ1_SKIP_MASK |
 142:Generated_Source\PSoC4/CapSense_INT.c ****                                                              CapSense_SEQ_START_START_MASK);
 143:Generated_Source\PSoC4/CapSense_INT.c ****             }
 144:Generated_Source\PSoC4/CapSense_INT.c ****             else
 145:Generated_Source\PSoC4/CapSense_INT.c ****             {
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc0leXkL.s 			page 4


 146:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN) */
 147:Generated_Source\PSoC4/CapSense_INT.c **** 
 148:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_SsCSDPostScan();
 149:Generated_Source\PSoC4/CapSense_INT.c **** 
 150:Generated_Source\PSoC4/CapSense_INT.c ****             #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 151:Generated_Source\PSoC4/CapSense_INT.c ****                 if (CapSense_FREQ_CHANNEL_2 > CapSense_scanFreqIndex)
 152:Generated_Source\PSoC4/CapSense_INT.c ****                 {
 153:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Scan the next channel */
 154:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsNextFrequencyScan();
 155:Generated_Source\PSoC4/CapSense_INT.c ****                 }
 156:Generated_Source\PSoC4/CapSense_INT.c ****                 else
 157:Generated_Source\PSoC4/CapSense_INT.c ****                 {
 158:Generated_Source\PSoC4/CapSense_INT.c ****                     /* All channels are scanned. Set IMO to zero channel */
 159:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
 160:Generated_Source\PSoC4/CapSense_INT.c **** 
 161:Generated_Source\PSoC4/CapSense_INT.c ****                     #if (CapSense_MFS_IMO == CapSense_MFS_METHOD)
 162:Generated_Source\PSoC4/CapSense_INT.c ****                         CapSense_SsChangeImoFreq(CapSense_FREQ_CHANNEL_0);
 163:Generated_Source\PSoC4/CapSense_INT.c ****                     #else
 164:Generated_Source\PSoC4/CapSense_INT.c ****                         CapSense_SsChangeClkFreq(CapSense_FREQ_CHANNEL_0);
 165:Generated_Source\PSoC4/CapSense_INT.c ****                     #endif /* (CapSense_MFS_IMO == CapSense_MFS_METHOD) */
 166:Generated_Source\PSoC4/CapSense_INT.c **** 
 167:Generated_Source\PSoC4/CapSense_INT.c ****                     #if (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN)
 168:Generated_Source\PSoC4/CapSense_INT.c ****                         /* Disable Fourth-generation HW block */
 169:Generated_Source\PSoC4/CapSense_INT.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd);
 170:Generated_Source\PSoC4/CapSense_INT.c ****                     #endif /* (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) */
 171:Generated_Source\PSoC4/CapSense_INT.c **** 
 172:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Update Scan Counter */
 173:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_dsRam.scanCounter++;
 174:Generated_Source\PSoC4/CapSense_INT.c **** 
 175:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Sensor is totally scanned. Reset BUSY flag */
 176:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_dsRam.status &= ~(CapSense_SW_STS_BUSY | CapSense_WDGT_SW_STS_BUSY);
 177:Generated_Source\PSoC4/CapSense_INT.c ****                 }
 178:Generated_Source\PSoC4/CapSense_INT.c ****             #else
 179:Generated_Source\PSoC4/CapSense_INT.c ****                 {
 180:Generated_Source\PSoC4/CapSense_INT.c ****                     #if (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN)
 181:Generated_Source\PSoC4/CapSense_INT.c ****                         /* Disable Fourth-generation HW block */
 182:Generated_Source\PSoC4/CapSense_INT.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd);
 183:Generated_Source\PSoC4/CapSense_INT.c ****                     #endif /* (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) */
 184:Generated_Source\PSoC4/CapSense_INT.c **** 
 185:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Update Scan Counter */
 186:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_dsRam.scanCounter++;
 187:Generated_Source\PSoC4/CapSense_INT.c **** 
 188:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Sensor is totally scanned. Reset BUSY flag */
 189:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_dsRam.status &= ~(CapSense_SW_STS_BUSY | CapSense_WDGT_SW_STS_BUSY);
 190:Generated_Source\PSoC4/CapSense_INT.c ****                 }
 191:Generated_Source\PSoC4/CapSense_INT.c ****             #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 192:Generated_Source\PSoC4/CapSense_INT.c ****     #if (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN)
 193:Generated_Source\PSoC4/CapSense_INT.c ****         }
 194:Generated_Source\PSoC4/CapSense_INT.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN) */
 195:Generated_Source\PSoC4/CapSense_INT.c **** 
 196:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_EXIT_CALLBACK
 197:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_ExitCallback();
 198:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_EXIT_CALLBACK */
 199:Generated_Source\PSoC4/CapSense_INT.c ****     }
 200:Generated_Source\PSoC4/CapSense_INT.c **** 
 201:Generated_Source\PSoC4/CapSense_INT.c **** 
 202:Generated_Source\PSoC4/CapSense_INT.c ****     /*******************************************************************************
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc0leXkL.s 			page 5


 203:Generated_Source\PSoC4/CapSense_INT.c ****     * Function Name: CapSense_CSDPostMultiScan
 204:Generated_Source\PSoC4/CapSense_INT.c ****     ****************************************************************************//**
 205:Generated_Source\PSoC4/CapSense_INT.c ****     *
 206:Generated_Source\PSoC4/CapSense_INT.c ****     * \brief
 207:Generated_Source\PSoC4/CapSense_INT.c ****     *  This is an internal ISR function for the multiple-sensor scanning
 208:Generated_Source\PSoC4/CapSense_INT.c ****     *  implementation.
 209:Generated_Source\PSoC4/CapSense_INT.c ****     *
 210:Generated_Source\PSoC4/CapSense_INT.c ****     * \details
 211:Generated_Source\PSoC4/CapSense_INT.c ****     *  This ISR handler is triggered when the user calls the
 212:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_Scan() or CapSense_ScanAllWidgets() APIs.
 213:Generated_Source\PSoC4/CapSense_INT.c ****     *
 214:Generated_Source\PSoC4/CapSense_INT.c ****     *  The following tasks are performed:
 215:Generated_Source\PSoC4/CapSense_INT.c ****     *    1. Disable the CSD interrupt.
 216:Generated_Source\PSoC4/CapSense_INT.c ****     *    2. Read the Counter register and update the data structure with raw data.
 217:Generated_Source\PSoC4/CapSense_INT.c ****     *    3. Connect the Vref buffer to the AMUX bus.
 218:Generated_Source\PSoC4/CapSense_INT.c ****     *    4. Disable the CSD block (after the widget has been scanned).
 219:Generated_Source\PSoC4/CapSense_INT.c ****     *    5. Update the Scan Counter.
 220:Generated_Source\PSoC4/CapSense_INT.c ****     *    6. Reset the BUSY flag.
 221:Generated_Source\PSoC4/CapSense_INT.c ****     *    7. Enable the CSD interrupt.
 222:Generated_Source\PSoC4/CapSense_INT.c ****     *
 223:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler initializes scanning for the previous sensor when the
 224:Generated_Source\PSoC4/CapSense_INT.c ****     *  widget has more than one sensor.
 225:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler initializes scanning for the next widget when the
 226:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_ScanAllWidgets() APIs are called and the project has
 227:Generated_Source\PSoC4/CapSense_INT.c ****     *  more than one widget.
 228:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler changes the IMO and initializes scanning for the next
 229:Generated_Source\PSoC4/CapSense_INT.c ****     *  frequency channels when multi-frequency scanning is enabled.
 230:Generated_Source\PSoC4/CapSense_INT.c ****     *
 231:Generated_Source\PSoC4/CapSense_INT.c ****     *  This function has two Macro Callbacks that allow calling the user
 232:Generated_Source\PSoC4/CapSense_INT.c ****     *  code from macros specified in Component's generated code. Refer to the
 233:Generated_Source\PSoC4/CapSense_INT.c ****     *  \ref group_c_macrocallbacks section of the PSoC Creator User Guide
 234:Generated_Source\PSoC4/CapSense_INT.c ****     *  for details.
 235:Generated_Source\PSoC4/CapSense_INT.c ****     *
 236:Generated_Source\PSoC4/CapSense_INT.c ****     *******************************************************************************/
 237:Generated_Source\PSoC4/CapSense_INT.c ****     CY_ISR(CapSense_CSDPostMultiScan)
 238:Generated_Source\PSoC4/CapSense_INT.c ****     {
 239:Generated_Source\PSoC4/CapSense_INT.c ****         /* Declare and initialize ptr to sensor IO structure to appropriate address */
 240:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_FLASH_IO_STRUCT const *curSnsIOPtr = (CapSense_FLASH_IO_STRUCT const *)
 241:Generated_Source\PSoC4/CapSense_INT.c ****                                                           CapSense_dsFlash.wdgtArray[CapSense_widge
 242:Generated_Source\PSoC4/CapSense_INT.c ****                                                           + CapSense_sensorIndex;
 243:Generated_Source\PSoC4/CapSense_INT.c **** 
 244:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_ENTRY_CALLBACK
 245:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_EntryCallback();
 246:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_ENTRY_CALLBACK */
 247:Generated_Source\PSoC4/CapSense_INT.c **** 
 248:Generated_Source\PSoC4/CapSense_INT.c ****         /* Clear pending interrupt */
 249:Generated_Source\PSoC4/CapSense_INT.c ****         CY_SET_REG32(CapSense_INTR_PTR, CapSense_INTR_SET_MASK);
 250:Generated_Source\PSoC4/CapSense_INT.c **** 
 251:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN)
 252:Generated_Source\PSoC4/CapSense_INT.c ****             if ((CapSense_CSD_NOISE_METRIC_TH < ((CY_GET_REG32(CapSense_RESULT_VAL1_PTR) &
 253:Generated_Source\PSoC4/CapSense_INT.c ****                                                       CapSense_RESULT_VAL1_BAD_CONVS_MASK) >>
 254:Generated_Source\PSoC4/CapSense_INT.c ****                                                       CapSense_RESULT_VAL1_BAD_CONVS_SHIFT)) &&
 255:Generated_Source\PSoC4/CapSense_INT.c ****                                                       (0u < CapSense_badConversionsNum))
 256:Generated_Source\PSoC4/CapSense_INT.c ****             {
 257:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Decrement bad conversions number */
 258:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_badConversionsNum--;
 259:Generated_Source\PSoC4/CapSense_INT.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc0leXkL.s 			page 6


 260:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Start the re-scan */
 261:Generated_Source\PSoC4/CapSense_INT.c ****                 CY_SET_REG32(CapSense_SEQ_START_PTR, CapSense_SEQ_START_AZ0_SKIP_MASK |
 262:Generated_Source\PSoC4/CapSense_INT.c ****                                                              CapSense_SEQ_START_AZ1_SKIP_MASK |
 263:Generated_Source\PSoC4/CapSense_INT.c ****                                                              CapSense_SEQ_START_START_MASK);
 264:Generated_Source\PSoC4/CapSense_INT.c ****             }
 265:Generated_Source\PSoC4/CapSense_INT.c ****             else
 266:Generated_Source\PSoC4/CapSense_INT.c ****             {
 267:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN) */
 268:Generated_Source\PSoC4/CapSense_INT.c **** 
 269:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_SsCSDPostScan();
 270:Generated_Source\PSoC4/CapSense_INT.c **** 
 271:Generated_Source\PSoC4/CapSense_INT.c ****             /* Disable sensor when all frequency channels are scanned */
 272:Generated_Source\PSoC4/CapSense_INT.c ****             #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 273:Generated_Source\PSoC4/CapSense_INT.c ****                 if (CapSense_FREQ_CHANNEL_2 == CapSense_scanFreqIndex)
 274:Generated_Source\PSoC4/CapSense_INT.c ****             #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 275:Generated_Source\PSoC4/CapSense_INT.c ****             {
 276:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Disable sensor */
 277:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_CSDDisconnectSns(curSnsIOPtr);
 278:Generated_Source\PSoC4/CapSense_INT.c ****             }
 279:Generated_Source\PSoC4/CapSense_INT.c **** 
 280:Generated_Source\PSoC4/CapSense_INT.c ****             #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 281:Generated_Source\PSoC4/CapSense_INT.c ****                 if (CapSense_FREQ_CHANNEL_2 > CapSense_scanFreqIndex)
 282:Generated_Source\PSoC4/CapSense_INT.c ****                 {
 283:Generated_Source\PSoC4/CapSense_INT.c ****                      /* Scan the next channel */
 284:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsNextFrequencyScan();
 285:Generated_Source\PSoC4/CapSense_INT.c ****                 }
 286:Generated_Source\PSoC4/CapSense_INT.c ****                 else
 287:Generated_Source\PSoC4/CapSense_INT.c ****                 {
 288:Generated_Source\PSoC4/CapSense_INT.c ****                      /* All channels are scanned. Set IMO to zero channel */
 289:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
 290:Generated_Source\PSoC4/CapSense_INT.c **** 
 291:Generated_Source\PSoC4/CapSense_INT.c ****                     #if (CapSense_MFS_IMO == CapSense_MFS_METHOD)
 292:Generated_Source\PSoC4/CapSense_INT.c ****                         CapSense_SsChangeImoFreq(CapSense_FREQ_CHANNEL_0);
 293:Generated_Source\PSoC4/CapSense_INT.c ****                     #else
 294:Generated_Source\PSoC4/CapSense_INT.c ****                         CapSense_SsChangeClkFreq(CapSense_FREQ_CHANNEL_0);
 295:Generated_Source\PSoC4/CapSense_INT.c ****                     #endif /* (CapSense_MFS_IMO == CapSense_MFS_METHOD) */
 296:Generated_Source\PSoC4/CapSense_INT.c **** 
 297:Generated_Source\PSoC4/CapSense_INT.c ****                      /* Scan the next sensor */
 298:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsCSDInitNextScan();
 299:Generated_Source\PSoC4/CapSense_INT.c ****                 }
 300:Generated_Source\PSoC4/CapSense_INT.c ****             #else
 301:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Scan the next sensor */
 302:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsCSDInitNextScan();
 303:Generated_Source\PSoC4/CapSense_INT.c ****             #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 304:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN)
 305:Generated_Source\PSoC4/CapSense_INT.c ****             }
 306:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN) */
 307:Generated_Source\PSoC4/CapSense_INT.c **** 
 308:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_EXIT_CALLBACK
 309:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_ExitCallback();
 310:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_EXIT_CALLBACK */
 311:Generated_Source\PSoC4/CapSense_INT.c ****     }
 312:Generated_Source\PSoC4/CapSense_INT.c **** 
 313:Generated_Source\PSoC4/CapSense_INT.c **** 
 314:Generated_Source\PSoC4/CapSense_INT.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
 315:Generated_Source\PSoC4/CapSense_INT.c ****     /*******************************************************************************
 316:Generated_Source\PSoC4/CapSense_INT.c ****     * Function Name: CapSense_CSDPostMultiScanGanged
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc0leXkL.s 			page 7


 317:Generated_Source\PSoC4/CapSense_INT.c ****     ****************************************************************************//**
 318:Generated_Source\PSoC4/CapSense_INT.c ****     *
 319:Generated_Source\PSoC4/CapSense_INT.c ****     * \brief
 320:Generated_Source\PSoC4/CapSense_INT.c ****     *  This is an internal ISR function for the multiple-sensor scanning
 321:Generated_Source\PSoC4/CapSense_INT.c ****     *  implementation for ganged sensors.
 322:Generated_Source\PSoC4/CapSense_INT.c ****     *
 323:Generated_Source\PSoC4/CapSense_INT.c ****     * \details
 324:Generated_Source\PSoC4/CapSense_INT.c ****     *  This ISR handler is triggered when the user calls the
 325:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_Scan() API for a ganged sensor or the
 326:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_ScanAllWidgets() API in the project with ganged sensors.
 327:Generated_Source\PSoC4/CapSense_INT.c ****     *
 328:Generated_Source\PSoC4/CapSense_INT.c ****     *  The following tasks are performed:
 329:Generated_Source\PSoC4/CapSense_INT.c ****     *    1. Disable the CSD interrupt.
 330:Generated_Source\PSoC4/CapSense_INT.c ****     *    2. Read the Counter register and update the data structure with raw data.
 331:Generated_Source\PSoC4/CapSense_INT.c ****     *    3. Connect the Vref buffer to the AMUX bus.
 332:Generated_Source\PSoC4/CapSense_INT.c ****     *    4. Disable the CSD block (after the widget has been scanned).
 333:Generated_Source\PSoC4/CapSense_INT.c ****     *    5. Update the Scan Counter.
 334:Generated_Source\PSoC4/CapSense_INT.c ****     *    6. Reset the BUSY flag.
 335:Generated_Source\PSoC4/CapSense_INT.c ****     *    7. Enable the CSD interrupt.
 336:Generated_Source\PSoC4/CapSense_INT.c ****     *
 337:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler initializes scanning for the previous sensor when the
 338:Generated_Source\PSoC4/CapSense_INT.c ****     *  widget has more than one sensor.
 339:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler initializes scanning for the next widget when the
 340:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_ScanAllWidgets() APIs are called and the project has
 341:Generated_Source\PSoC4/CapSense_INT.c ****     *  more than one widget.
 342:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler changes the IMO and initializes scanning for the next
 343:Generated_Source\PSoC4/CapSense_INT.c ****     *  frequency channels when multi-frequency scanning is enabled.
 344:Generated_Source\PSoC4/CapSense_INT.c ****     *
 345:Generated_Source\PSoC4/CapSense_INT.c ****     *  This function has two Macro Callbacks that allow calling the user
 346:Generated_Source\PSoC4/CapSense_INT.c ****     *  code from macros specified in Component's generated code. Refer to the
 347:Generated_Source\PSoC4/CapSense_INT.c ****     *  \ref group_c_macrocallbacks section of the PSoC Creator User Guide
 348:Generated_Source\PSoC4/CapSense_INT.c ****     *  for details.
 349:Generated_Source\PSoC4/CapSense_INT.c ****     *
 350:Generated_Source\PSoC4/CapSense_INT.c ****     *******************************************************************************/
 351:Generated_Source\PSoC4/CapSense_INT.c ****     CY_ISR(CapSense_CSDPostMultiScanGanged)
 352:Generated_Source\PSoC4/CapSense_INT.c ****     {
 353:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_ENTRY_CALLBACK
 354:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_EntryCallback();
 355:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_ENTRY_CALLBACK */
 356:Generated_Source\PSoC4/CapSense_INT.c **** 
 357:Generated_Source\PSoC4/CapSense_INT.c ****         /* Clear pending interrupt */
 358:Generated_Source\PSoC4/CapSense_INT.c ****         CY_SET_REG32(CapSense_INTR_PTR, CapSense_INTR_SET_MASK);
 359:Generated_Source\PSoC4/CapSense_INT.c **** 
 360:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN)
 361:Generated_Source\PSoC4/CapSense_INT.c ****             if ((CapSense_CSD_NOISE_METRIC_TH < ((CY_GET_REG32(CapSense_RESULT_VAL1_PTR) &
 362:Generated_Source\PSoC4/CapSense_INT.c ****                                                       CapSense_RESULT_VAL1_BAD_CONVS_MASK) >>
 363:Generated_Source\PSoC4/CapSense_INT.c ****                                                       CapSense_RESULT_VAL1_BAD_CONVS_SHIFT)) &&
 364:Generated_Source\PSoC4/CapSense_INT.c ****                                                       (0u < CapSense_badConversionsNum))
 365:Generated_Source\PSoC4/CapSense_INT.c ****             {
 366:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Decrement bad conversions number */
 367:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_badConversionsNum--;
 368:Generated_Source\PSoC4/CapSense_INT.c **** 
 369:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Start the re-scan */
 370:Generated_Source\PSoC4/CapSense_INT.c ****                 CY_SET_REG32(CapSense_SEQ_START_PTR, CapSense_SEQ_START_AZ0_SKIP_MASK |
 371:Generated_Source\PSoC4/CapSense_INT.c ****                                                              CapSense_SEQ_START_AZ1_SKIP_MASK |
 372:Generated_Source\PSoC4/CapSense_INT.c ****                                                              CapSense_SEQ_START_START_MASK);
 373:Generated_Source\PSoC4/CapSense_INT.c ****             }
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc0leXkL.s 			page 8


 374:Generated_Source\PSoC4/CapSense_INT.c ****             else
 375:Generated_Source\PSoC4/CapSense_INT.c ****             {
 376:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN) */
 377:Generated_Source\PSoC4/CapSense_INT.c **** 
 378:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_SsCSDPostScan();
 379:Generated_Source\PSoC4/CapSense_INT.c **** 
 380:Generated_Source\PSoC4/CapSense_INT.c ****             #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 381:Generated_Source\PSoC4/CapSense_INT.c ****                 if (CapSense_FREQ_CHANNEL_2 == CapSense_scanFreqIndex)
 382:Generated_Source\PSoC4/CapSense_INT.c ****             #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 383:Generated_Source\PSoC4/CapSense_INT.c ****             {
 384:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsCSDDisconnectSnsExt((uint32)CapSense_widgetIndex, (uint32)CapSense_senso
 385:Generated_Source\PSoC4/CapSense_INT.c ****             }
 386:Generated_Source\PSoC4/CapSense_INT.c **** 
 387:Generated_Source\PSoC4/CapSense_INT.c ****             #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 388:Generated_Source\PSoC4/CapSense_INT.c ****                 if (CapSense_FREQ_CHANNEL_2 > CapSense_scanFreqIndex)
 389:Generated_Source\PSoC4/CapSense_INT.c ****                 {
 390:Generated_Source\PSoC4/CapSense_INT.c ****                      /* Scan the next channel */
 391:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsNextFrequencyScan();
 392:Generated_Source\PSoC4/CapSense_INT.c ****                 }
 393:Generated_Source\PSoC4/CapSense_INT.c ****                 else
 394:Generated_Source\PSoC4/CapSense_INT.c ****                 {
 395:Generated_Source\PSoC4/CapSense_INT.c ****                     /* All channels are scanned. Set IMO to zero channel */
 396:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
 397:Generated_Source\PSoC4/CapSense_INT.c **** 
 398:Generated_Source\PSoC4/CapSense_INT.c ****                     #if (CapSense_MFS_IMO == CapSense_MFS_METHOD)
 399:Generated_Source\PSoC4/CapSense_INT.c ****                         CapSense_SsChangeImoFreq(CapSense_FREQ_CHANNEL_0);
 400:Generated_Source\PSoC4/CapSense_INT.c ****                     #else
 401:Generated_Source\PSoC4/CapSense_INT.c ****                         CapSense_SsChangeClkFreq(CapSense_FREQ_CHANNEL_0);
 402:Generated_Source\PSoC4/CapSense_INT.c ****                     #endif /* (CapSense_MFS_IMO == CapSense_MFS_METHOD) */
 403:Generated_Source\PSoC4/CapSense_INT.c **** 
 404:Generated_Source\PSoC4/CapSense_INT.c ****                      /* Scan the next sensor */
 405:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsCSDInitNextScan();
 406:Generated_Source\PSoC4/CapSense_INT.c ****                 }
 407:Generated_Source\PSoC4/CapSense_INT.c ****             #else
 408:Generated_Source\PSoC4/CapSense_INT.c ****                  /* Scan the next sensor */
 409:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsCSDInitNextScan();
 410:Generated_Source\PSoC4/CapSense_INT.c ****             #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 411:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN)
 412:Generated_Source\PSoC4/CapSense_INT.c ****             }
 413:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN) */
 414:Generated_Source\PSoC4/CapSense_INT.c **** 
 415:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_EXIT_CALLBACK
 416:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_ExitCallback();
 417:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_EXIT_CALLBACK */
 418:Generated_Source\PSoC4/CapSense_INT.c ****     }
 419:Generated_Source\PSoC4/CapSense_INT.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
 420:Generated_Source\PSoC4/CapSense_INT.c **** 
 421:Generated_Source\PSoC4/CapSense_INT.c **** #else
 422:Generated_Source\PSoC4/CapSense_INT.c **** 
 423:Generated_Source\PSoC4/CapSense_INT.c ****     /* Third-generation HW block part */
 424:Generated_Source\PSoC4/CapSense_INT.c **** 
 425:Generated_Source\PSoC4/CapSense_INT.c ****     /*******************************************************************************
 426:Generated_Source\PSoC4/CapSense_INT.c ****     * Function Name: CapSense_CSDPostSingleScan
 427:Generated_Source\PSoC4/CapSense_INT.c ****     ****************************************************************************//**
 428:Generated_Source\PSoC4/CapSense_INT.c ****     *
 429:Generated_Source\PSoC4/CapSense_INT.c ****     * \brief
 430:Generated_Source\PSoC4/CapSense_INT.c ****     *  This is an internal ISR function for the single-sensor scanning implementation.
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc0leXkL.s 			page 9


 431:Generated_Source\PSoC4/CapSense_INT.c ****     *
 432:Generated_Source\PSoC4/CapSense_INT.c ****     * \details
 433:Generated_Source\PSoC4/CapSense_INT.c ****     *  This ISR handler is triggered when the user calls the
 434:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_CSDScanExt() function.
 435:Generated_Source\PSoC4/CapSense_INT.c ****     *
 436:Generated_Source\PSoC4/CapSense_INT.c ****     *  The following tasks are performed for Third-generation HW block:
 437:Generated_Source\PSoC4/CapSense_INT.c ****     *    1. Disable the CSD interrupt.
 438:Generated_Source\PSoC4/CapSense_INT.c ****     *    2. Read the Counter register and update the data structure with raw data.
 439:Generated_Source\PSoC4/CapSense_INT.c ****     *    3. Connect the Vref buffer to the AMUX bus.
 440:Generated_Source\PSoC4/CapSense_INT.c ****     *    4. Update the Scan Counter.
 441:Generated_Source\PSoC4/CapSense_INT.c ****     *    5. Reset the BUSY flag.
 442:Generated_Source\PSoC4/CapSense_INT.c ****     *    6. Enable the CSD interrupt.
 443:Generated_Source\PSoC4/CapSense_INT.c ****     *
 444:Generated_Source\PSoC4/CapSense_INT.c ****     *  The following tasks are performed for Fourth-generation HW block:
 445:Generated_Source\PSoC4/CapSense_INT.c ****     *    1. Check if the raw data is not noisy.
 446:Generated_Source\PSoC4/CapSense_INT.c ****     *    2. Read the Counter register and update the data structure with raw data.
 447:Generated_Source\PSoC4/CapSense_INT.c ****     *    3. Configure and start the scan for the next frequency if the
 448:Generated_Source\PSoC4/CapSense_INT.c ****     *      multi-frequency is enabled.
 449:Generated_Source\PSoC4/CapSense_INT.c ****     *    4. Update the Scan Counter.
 450:Generated_Source\PSoC4/CapSense_INT.c ****     *    5. Reset the BUSY flag.
 451:Generated_Source\PSoC4/CapSense_INT.c ****     *    6. Enable the CSD interrupt.
 452:Generated_Source\PSoC4/CapSense_INT.c ****     *
 453:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler changes the IMO and initializes scanning for the next frequency
 454:Generated_Source\PSoC4/CapSense_INT.c ****     *  channels when multi-frequency scanning is enabled.
 455:Generated_Source\PSoC4/CapSense_INT.c ****     *
 456:Generated_Source\PSoC4/CapSense_INT.c ****     *  This function has two Macro Callbacks that allow calling the user code
 457:Generated_Source\PSoC4/CapSense_INT.c ****     *  from macros specified in Component's generated code. Refer to the
 458:Generated_Source\PSoC4/CapSense_INT.c ****     *  \ref group_c_macrocallbacks section of the PSoC Creator User Guide
 459:Generated_Source\PSoC4/CapSense_INT.c ****     *  for details.
 460:Generated_Source\PSoC4/CapSense_INT.c ****     *
 461:Generated_Source\PSoC4/CapSense_INT.c ****     *******************************************************************************/
 462:Generated_Source\PSoC4/CapSense_INT.c ****     CY_ISR(CapSense_CSDPostSingleScan)
 463:Generated_Source\PSoC4/CapSense_INT.c ****     {
 464:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_ENTRY_CALLBACK
 465:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_EntryCallback();
 466:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_ENTRY_CALLBACK */
 467:Generated_Source\PSoC4/CapSense_INT.c **** 
 468:Generated_Source\PSoC4/CapSense_INT.c ****         /* Clear pending interrupt */
 469:Generated_Source\PSoC4/CapSense_INT.c ****         CY_SET_REG32(CapSense_INTR_PTR, CapSense_INTR_SET_MASK);
 470:Generated_Source\PSoC4/CapSense_INT.c **** 
 471:Generated_Source\PSoC4/CapSense_INT.c ****         /* Read Rawdata */
 472:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_SsCSDPostScan();
 473:Generated_Source\PSoC4/CapSense_INT.c **** 
 474:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 475:Generated_Source\PSoC4/CapSense_INT.c ****             if (CapSense_FREQ_CHANNEL_2 > CapSense_scanFreqIndex)
 476:Generated_Source\PSoC4/CapSense_INT.c ****             {
 477:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Connect Vref Buffer to AMUX bus. Third-generation HW block is enabled */
 478:Generated_Source\PSoC4/CapSense_INT.c ****                 CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECHARGE_CON
 479:Generated_Source\PSoC4/CapSense_INT.c **** 
 480:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsNextFrequencyScan();
 481:Generated_Source\PSoC4/CapSense_INT.c ****             }
 482:Generated_Source\PSoC4/CapSense_INT.c ****             else
 483:Generated_Source\PSoC4/CapSense_INT.c ****             {
 484:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
 485:Generated_Source\PSoC4/CapSense_INT.c **** 
 486:Generated_Source\PSoC4/CapSense_INT.c ****                 #if (CapSense_MFS_IMO == CapSense_MFS_METHOD)
 487:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsChangeImoFreq(CapSense_FREQ_CHANNEL_0);
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc0leXkL.s 			page 10


 488:Generated_Source\PSoC4/CapSense_INT.c ****                 #else
 489:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsChangeClkFreq(CapSense_FREQ_CHANNEL_0);
 490:Generated_Source\PSoC4/CapSense_INT.c ****                 #endif /* (CapSense_MFS_IMO == CapSense_MFS_METHOD) */
 491:Generated_Source\PSoC4/CapSense_INT.c **** 
 492:Generated_Source\PSoC4/CapSense_INT.c ****                 #if (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN)
 493:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Disable Third-generation HW block. Connect Vref Buffer to AMUX bus */
 494:Generated_Source\PSoC4/CapSense_INT.c ****                     #if ((CapSense_CSH_PRECHARGE_IO_BUF == CapSense_CSD_CSH_PRECHARGE_SRC) &&\
 495:Generated_Source\PSoC4/CapSense_INT.c ****                          (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
 496:Generated_Source\PSoC4/CapSense_INT.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CMOD_PRECHA
 497:Generated_Source\PSoC4/CapSense_INT.c ****                     #else
 498:Generated_Source\PSoC4/CapSense_INT.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECH
 499:Generated_Source\PSoC4/CapSense_INT.c ****                     #endif
 500:Generated_Source\PSoC4/CapSense_INT.c ****                 #else
 501:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Connect Vref Buffer to AMUX bus. Third-generation HW block is enabled */
 502:Generated_Source\PSoC4/CapSense_INT.c ****                     CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECHARGE
 503:Generated_Source\PSoC4/CapSense_INT.c ****                 #endif
 504:Generated_Source\PSoC4/CapSense_INT.c **** 
 505:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Update Scan Counter */
 506:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_dsRam.scanCounter++;
 507:Generated_Source\PSoC4/CapSense_INT.c **** 
 508:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Sensor is totally scanned. Reset BUSY flag */
 509:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_dsRam.status &= ~(CapSense_SW_STS_BUSY | CapSense_WDGT_SW_STS_BUSY);
 510:Generated_Source\PSoC4/CapSense_INT.c ****             }
 511:Generated_Source\PSoC4/CapSense_INT.c ****         #else
 512:Generated_Source\PSoC4/CapSense_INT.c ****             {
 513:Generated_Source\PSoC4/CapSense_INT.c ****                 #if (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN)
 514:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Disable Third-generation HW block. Connect Vref Buffer to AMUX bus */
 515:Generated_Source\PSoC4/CapSense_INT.c ****                     #if ((CapSense_CSH_PRECHARGE_IO_BUF == CapSense_CSD_CSH_PRECHARGE_SRC) &&\
 516:Generated_Source\PSoC4/CapSense_INT.c ****                          (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
 517:Generated_Source\PSoC4/CapSense_INT.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CMOD_PRECHA
 518:Generated_Source\PSoC4/CapSense_INT.c ****                     #else
 519:Generated_Source\PSoC4/CapSense_INT.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECH
 520:Generated_Source\PSoC4/CapSense_INT.c ****                     #endif
 521:Generated_Source\PSoC4/CapSense_INT.c ****                 #else
 522:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Connect Vref Buffer to AMUX bus. Third-generation HW block is enabled */
 523:Generated_Source\PSoC4/CapSense_INT.c ****                     CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECHARGE
 524:Generated_Source\PSoC4/CapSense_INT.c ****                 #endif
 525:Generated_Source\PSoC4/CapSense_INT.c **** 
 526:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Update Scan Counter */
 527:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_dsRam.scanCounter++;
 528:Generated_Source\PSoC4/CapSense_INT.c **** 
 529:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Sensor is totally scanned. Reset BUSY flag */
 530:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_dsRam.status &= ~(CapSense_SW_STS_BUSY | CapSense_WDGT_SW_STS_BUSY);
 531:Generated_Source\PSoC4/CapSense_INT.c ****             }
 532:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 533:Generated_Source\PSoC4/CapSense_INT.c **** 
 534:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_EXIT_CALLBACK
 535:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_ExitCallback();
 536:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_EXIT_CALLBACK */
 537:Generated_Source\PSoC4/CapSense_INT.c ****     }
 538:Generated_Source\PSoC4/CapSense_INT.c **** 
 539:Generated_Source\PSoC4/CapSense_INT.c **** 
 540:Generated_Source\PSoC4/CapSense_INT.c ****     /*******************************************************************************
 541:Generated_Source\PSoC4/CapSense_INT.c ****     * Function Name: CapSense_CSDPostMultiScan
 542:Generated_Source\PSoC4/CapSense_INT.c ****     ****************************************************************************//**
 543:Generated_Source\PSoC4/CapSense_INT.c ****     *
 544:Generated_Source\PSoC4/CapSense_INT.c ****     * \brief
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc0leXkL.s 			page 11


 545:Generated_Source\PSoC4/CapSense_INT.c ****     *  This is an internal ISR function for the multiple-sensor scanning
 546:Generated_Source\PSoC4/CapSense_INT.c ****     *  implementation.
 547:Generated_Source\PSoC4/CapSense_INT.c ****     *
 548:Generated_Source\PSoC4/CapSense_INT.c ****     * \details
 549:Generated_Source\PSoC4/CapSense_INT.c ****     *  This ISR handler is triggered when the user calls the
 550:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_Scan() or CapSense_ScanAllWidgets() APIs.
 551:Generated_Source\PSoC4/CapSense_INT.c ****     *
 552:Generated_Source\PSoC4/CapSense_INT.c ****     *  The following tasks are performed:
 553:Generated_Source\PSoC4/CapSense_INT.c ****     *    1. Disable the CSD interrupt.
 554:Generated_Source\PSoC4/CapSense_INT.c ****     *    2. Read the Counter register and update the data structure with raw data.
 555:Generated_Source\PSoC4/CapSense_INT.c ****     *    3. Connect the Vref buffer to the AMUX bus.
 556:Generated_Source\PSoC4/CapSense_INT.c ****     *    4. Disable the CSD block (after the widget has been scanned).
 557:Generated_Source\PSoC4/CapSense_INT.c ****     *    5. Update the Scan Counter.
 558:Generated_Source\PSoC4/CapSense_INT.c ****     *    6. Reset the BUSY flag.
 559:Generated_Source\PSoC4/CapSense_INT.c ****     *    7. Enable the CSD interrupt.
 560:Generated_Source\PSoC4/CapSense_INT.c ****     *
 561:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler initializes scanning for the previous sensor when the
 562:Generated_Source\PSoC4/CapSense_INT.c ****     *  widget has more than one sensor.
 563:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler initializes scanning for the next widget when the
 564:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_ScanAllWidgets() APIs are called and the project has
 565:Generated_Source\PSoC4/CapSense_INT.c ****     *  more than one widget.
 566:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler changes the IMO and initializes scanning for the next
 567:Generated_Source\PSoC4/CapSense_INT.c ****     *  frequency channels when multi-frequency scanning is enabled.
 568:Generated_Source\PSoC4/CapSense_INT.c ****     *
 569:Generated_Source\PSoC4/CapSense_INT.c ****     *  This function has two Macro Callbacks that allow calling the user
 570:Generated_Source\PSoC4/CapSense_INT.c ****     *  code from macros specified in Component's generated code. Refer to the
 571:Generated_Source\PSoC4/CapSense_INT.c ****     *  \ref group_c_macrocallbacks section of the PSoC Creator User Guide
 572:Generated_Source\PSoC4/CapSense_INT.c ****     *  for details.
 573:Generated_Source\PSoC4/CapSense_INT.c ****     *
 574:Generated_Source\PSoC4/CapSense_INT.c ****     *******************************************************************************/
 575:Generated_Source\PSoC4/CapSense_INT.c ****     CY_ISR(CapSense_CSDPostMultiScan)
 576:Generated_Source\PSoC4/CapSense_INT.c ****     {
 577:Generated_Source\PSoC4/CapSense_INT.c ****         /* Declare and initialize ptr to sensor IO structure to appropriate address        */
 578:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_FLASH_IO_STRUCT const *curSnsIOPtr = (CapSense_FLASH_IO_STRUCT const *)
 579:Generated_Source\PSoC4/CapSense_INT.c ****                                                           CapSense_dsFlash.wdgtArray[CapSense_widge
 580:Generated_Source\PSoC4/CapSense_INT.c ****                                                           + CapSense_sensorIndex;
 581:Generated_Source\PSoC4/CapSense_INT.c **** 
 582:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_ENTRY_CALLBACK
 583:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_EntryCallback();
 584:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_ENTRY_CALLBACK */
 585:Generated_Source\PSoC4/CapSense_INT.c **** 
 586:Generated_Source\PSoC4/CapSense_INT.c ****         /* Clear pending interrupt */
 587:Generated_Source\PSoC4/CapSense_INT.c ****         CY_SET_REG32(CapSense_INTR_PTR, CapSense_INTR_SET_MASK);
 588:Generated_Source\PSoC4/CapSense_INT.c **** 
 589:Generated_Source\PSoC4/CapSense_INT.c ****          /* Read Rawdata */
 590:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_SsCSDPostScan();
 591:Generated_Source\PSoC4/CapSense_INT.c **** 
 592:Generated_Source\PSoC4/CapSense_INT.c ****         /* Connect Vref Buffer to AMUX bus */
 593:Generated_Source\PSoC4/CapSense_INT.c ****         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECHARGE_CONFIG_CSD_
 594:Generated_Source\PSoC4/CapSense_INT.c **** 
 595:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 596:Generated_Source\PSoC4/CapSense_INT.c ****             /* Disable sensor when all frequency channels are scanned */
 597:Generated_Source\PSoC4/CapSense_INT.c ****             if (CapSense_FREQ_CHANNEL_2 == CapSense_scanFreqIndex)
 598:Generated_Source\PSoC4/CapSense_INT.c ****             {
 599:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Disable sensor */
 600:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_CSDDisconnectSns(curSnsIOPtr);
 601:Generated_Source\PSoC4/CapSense_INT.c ****             }
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc0leXkL.s 			page 12


 602:Generated_Source\PSoC4/CapSense_INT.c ****         #else
 603:Generated_Source\PSoC4/CapSense_INT.c ****             /* Disable sensor */
 604:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_CSDDisconnectSns(curSnsIOPtr);
 605:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 606:Generated_Source\PSoC4/CapSense_INT.c **** 
 607:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 608:Generated_Source\PSoC4/CapSense_INT.c ****             if (CapSense_FREQ_CHANNEL_2 > CapSense_scanFreqIndex)
 609:Generated_Source\PSoC4/CapSense_INT.c ****             {
 610:Generated_Source\PSoC4/CapSense_INT.c ****                  /* Scan the next channel */
 611:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsNextFrequencyScan();
 612:Generated_Source\PSoC4/CapSense_INT.c ****             }
 613:Generated_Source\PSoC4/CapSense_INT.c ****             else
 614:Generated_Source\PSoC4/CapSense_INT.c ****             {
 615:Generated_Source\PSoC4/CapSense_INT.c ****                  /* All channels are scanned. Set IMO to zero channel */
 616:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
 617:Generated_Source\PSoC4/CapSense_INT.c **** 
 618:Generated_Source\PSoC4/CapSense_INT.c ****                 #if (CapSense_MFS_IMO == CapSense_MFS_METHOD)
 619:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsChangeImoFreq(CapSense_FREQ_CHANNEL_0);
 620:Generated_Source\PSoC4/CapSense_INT.c ****                 #else
 621:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsChangeClkFreq(CapSense_FREQ_CHANNEL_0);
 622:Generated_Source\PSoC4/CapSense_INT.c ****                 #endif /* (CapSense_MFS_IMO == CapSense_MFS_METHOD) */
 623:Generated_Source\PSoC4/CapSense_INT.c **** 
 624:Generated_Source\PSoC4/CapSense_INT.c ****                  /* Scan the next sensor */
 625:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsCSDInitNextScan();
 626:Generated_Source\PSoC4/CapSense_INT.c ****             }
 627:Generated_Source\PSoC4/CapSense_INT.c ****         #else
 628:Generated_Source\PSoC4/CapSense_INT.c ****             /* Scan the next sensor */
 629:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_SsCSDInitNextScan();
 630:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 631:Generated_Source\PSoC4/CapSense_INT.c **** 
 632:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_EXIT_CALLBACK
 633:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_ExitCallback();
 634:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_EXIT_CALLBACK */
 635:Generated_Source\PSoC4/CapSense_INT.c ****     }
 636:Generated_Source\PSoC4/CapSense_INT.c **** 
 637:Generated_Source\PSoC4/CapSense_INT.c **** 
 638:Generated_Source\PSoC4/CapSense_INT.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
 639:Generated_Source\PSoC4/CapSense_INT.c ****     /*******************************************************************************
 640:Generated_Source\PSoC4/CapSense_INT.c ****     * Function Name: CapSense_CSDPostMultiScanGanged
 641:Generated_Source\PSoC4/CapSense_INT.c ****     ****************************************************************************//**
 642:Generated_Source\PSoC4/CapSense_INT.c ****     *
 643:Generated_Source\PSoC4/CapSense_INT.c ****     * \brief
 644:Generated_Source\PSoC4/CapSense_INT.c ****     *  This is an internal ISR function for the multiple-sensor scanning
 645:Generated_Source\PSoC4/CapSense_INT.c ****     *  implementation for ganged sensors.
 646:Generated_Source\PSoC4/CapSense_INT.c ****     *
 647:Generated_Source\PSoC4/CapSense_INT.c ****     * \details
 648:Generated_Source\PSoC4/CapSense_INT.c ****     *  This ISR handler is triggered when the user calls the
 649:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_Scan() API for a ganged sensor or the
 650:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_ScanAllWidgets() API in the project with ganged sensors.
 651:Generated_Source\PSoC4/CapSense_INT.c ****     *
 652:Generated_Source\PSoC4/CapSense_INT.c ****     *  The following tasks are performed:
 653:Generated_Source\PSoC4/CapSense_INT.c ****     *    1. Disable the CSD interrupt.
 654:Generated_Source\PSoC4/CapSense_INT.c ****     *    2. Read the Counter register and update the data structure with raw data.
 655:Generated_Source\PSoC4/CapSense_INT.c ****     *    3. Connect the Vref buffer to the AMUX bus.
 656:Generated_Source\PSoC4/CapSense_INT.c ****     *    4. Disable the CSD block (after the widget has been scanned).
 657:Generated_Source\PSoC4/CapSense_INT.c ****     *    5. Update the Scan Counter.
 658:Generated_Source\PSoC4/CapSense_INT.c ****     *    6. Reset the BUSY flag.
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc0leXkL.s 			page 13


 659:Generated_Source\PSoC4/CapSense_INT.c ****     *    7. Enable the CSD interrupt.
 660:Generated_Source\PSoC4/CapSense_INT.c ****     *
 661:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler initializes scanning for the previous sensor when the
 662:Generated_Source\PSoC4/CapSense_INT.c ****     *  widget has more than one sensor.
 663:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler initializes scanning for the next widget when the
 664:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_ScanAllWidgets() APIs are called and the project has
 665:Generated_Source\PSoC4/CapSense_INT.c ****     *  more than one widget.
 666:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler changes the IMO and initializes scanning for the next
 667:Generated_Source\PSoC4/CapSense_INT.c ****     *  frequency channels when multi-frequency scanning is enabled.
 668:Generated_Source\PSoC4/CapSense_INT.c ****     *
 669:Generated_Source\PSoC4/CapSense_INT.c ****     *  This function has two Macro Callbacks that allow calling the user
 670:Generated_Source\PSoC4/CapSense_INT.c ****     *  code from macros specified in Component's generated code. Refer to the
 671:Generated_Source\PSoC4/CapSense_INT.c ****     *  \ref group_c_macrocallbacks section of the PSoC Creator User Guide
 672:Generated_Source\PSoC4/CapSense_INT.c ****     *  for details.
 673:Generated_Source\PSoC4/CapSense_INT.c ****     *
 674:Generated_Source\PSoC4/CapSense_INT.c ****     *******************************************************************************/
 675:Generated_Source\PSoC4/CapSense_INT.c ****     CY_ISR(CapSense_CSDPostMultiScanGanged)
 676:Generated_Source\PSoC4/CapSense_INT.c ****     {
 677:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_ENTRY_CALLBACK
 678:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_EntryCallback();
 679:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_ENTRY_CALLBACK */
 680:Generated_Source\PSoC4/CapSense_INT.c **** 
 681:Generated_Source\PSoC4/CapSense_INT.c ****         /* Clear pending interrupt */
 682:Generated_Source\PSoC4/CapSense_INT.c ****         CY_SET_REG32(CapSense_INTR_PTR, CapSense_INTR_SET_MASK);
 683:Generated_Source\PSoC4/CapSense_INT.c **** 
 684:Generated_Source\PSoC4/CapSense_INT.c ****          /* Read Rawdata */
 685:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_SsCSDPostScan();
 686:Generated_Source\PSoC4/CapSense_INT.c **** 
 687:Generated_Source\PSoC4/CapSense_INT.c ****         /* Connect Vref Buffer to AMUX bus */
 688:Generated_Source\PSoC4/CapSense_INT.c ****         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECHARGE_CONFIG_CSD_
 689:Generated_Source\PSoC4/CapSense_INT.c **** 
 690:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 691:Generated_Source\PSoC4/CapSense_INT.c ****             if (CapSense_FREQ_CHANNEL_2 == CapSense_scanFreqIndex)
 692:Generated_Source\PSoC4/CapSense_INT.c ****             {
 693:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsCSDDisconnectSnsExt((uint32)CapSense_widgetIndex, (uint32)CapSense_senso
 694:Generated_Source\PSoC4/CapSense_INT.c ****             }
 695:Generated_Source\PSoC4/CapSense_INT.c ****         #else
 696:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_SsCSDDisconnectSnsExt((uint32)CapSense_widgetIndex, (uint32)CapSense_sensorInd
 697:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 698:Generated_Source\PSoC4/CapSense_INT.c **** 
 699:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 700:Generated_Source\PSoC4/CapSense_INT.c ****             if (CapSense_FREQ_CHANNEL_2 > CapSense_scanFreqIndex)
 701:Generated_Source\PSoC4/CapSense_INT.c ****             {
 702:Generated_Source\PSoC4/CapSense_INT.c ****                  /* Scan the next channel */
 703:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsNextFrequencyScan();
 704:Generated_Source\PSoC4/CapSense_INT.c ****             }
 705:Generated_Source\PSoC4/CapSense_INT.c ****             else
 706:Generated_Source\PSoC4/CapSense_INT.c ****             {
 707:Generated_Source\PSoC4/CapSense_INT.c ****                 /* All channels are scanned. Set IMO to zero channel */
 708:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
 709:Generated_Source\PSoC4/CapSense_INT.c **** 
 710:Generated_Source\PSoC4/CapSense_INT.c ****                 #if (CapSense_MFS_IMO == CapSense_MFS_METHOD)
 711:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsChangeImoFreq(CapSense_FREQ_CHANNEL_0);
 712:Generated_Source\PSoC4/CapSense_INT.c ****                 #else
 713:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsChangeClkFreq(CapSense_FREQ_CHANNEL_0);
 714:Generated_Source\PSoC4/CapSense_INT.c ****                 #endif /* (CapSense_MFS_IMO == CapSense_MFS_METHOD) */
 715:Generated_Source\PSoC4/CapSense_INT.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc0leXkL.s 			page 14


 716:Generated_Source\PSoC4/CapSense_INT.c ****                  /* Scan the next sensor */
 717:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsCSDInitNextScan();
 718:Generated_Source\PSoC4/CapSense_INT.c ****             }
 719:Generated_Source\PSoC4/CapSense_INT.c ****         #else
 720:Generated_Source\PSoC4/CapSense_INT.c ****              /* Scan the next sensor */
 721:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_SsCSDInitNextScan();
 722:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 723:Generated_Source\PSoC4/CapSense_INT.c **** 
 724:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_EXIT_CALLBACK
 725:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_ExitCallback();
 726:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_EXIT_CALLBACK */
 727:Generated_Source\PSoC4/CapSense_INT.c ****     }
 728:Generated_Source\PSoC4/CapSense_INT.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
 729:Generated_Source\PSoC4/CapSense_INT.c **** 
 730:Generated_Source\PSoC4/CapSense_INT.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 731:Generated_Source\PSoC4/CapSense_INT.c **** 
 732:Generated_Source\PSoC4/CapSense_INT.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) || (CapSense_ENABLE == CapSense_CSD_CSX_EN)) */
 733:Generated_Source\PSoC4/CapSense_INT.c **** 
 734:Generated_Source\PSoC4/CapSense_INT.c **** /** \}
 735:Generated_Source\PSoC4/CapSense_INT.c ****  * \endcond */
 736:Generated_Source\PSoC4/CapSense_INT.c **** 
 737:Generated_Source\PSoC4/CapSense_INT.c **** 
 738:Generated_Source\PSoC4/CapSense_INT.c **** #if ((CapSense_ENABLE == CapSense_CSD_EN) || (CapSense_ENABLE == CapSense_CSD_CSX_EN))
 739:Generated_Source\PSoC4/CapSense_INT.c **** 
 740:Generated_Source\PSoC4/CapSense_INT.c **** /*******************************************************************************
 741:Generated_Source\PSoC4/CapSense_INT.c **** * Function Name: CapSense_SsCSDPostScan
 742:Generated_Source\PSoC4/CapSense_INT.c **** ****************************************************************************//**
 743:Generated_Source\PSoC4/CapSense_INT.c **** *
 744:Generated_Source\PSoC4/CapSense_INT.c **** * \brief
 745:Generated_Source\PSoC4/CapSense_INT.c **** *   This function reads rawdata and releases required HW resources after scan.
 746:Generated_Source\PSoC4/CapSense_INT.c **** *
 747:Generated_Source\PSoC4/CapSense_INT.c **** * \details
 748:Generated_Source\PSoC4/CapSense_INT.c **** *   This function performs following tasks after scan:
 749:Generated_Source\PSoC4/CapSense_INT.c **** *   - Reads SlotResult from Raw Counter;
 750:Generated_Source\PSoC4/CapSense_INT.c **** *   - Inits bad Conversions number;
 751:Generated_Source\PSoC4/CapSense_INT.c **** *   - Disconnects Vrefhi from AMUBUF positive input;
 752:Generated_Source\PSoC4/CapSense_INT.c **** *   - Disconnects AMUBUF output from CSDBUSB with sych PHI2+HSCMP;
 753:Generated_Source\PSoC4/CapSense_INT.c **** *   - Opens HCBV and HCBG switches.
 754:Generated_Source\PSoC4/CapSense_INT.c **** *
 755:Generated_Source\PSoC4/CapSense_INT.c **** *******************************************************************************/
 756:Generated_Source\PSoC4/CapSense_INT.c **** static void CapSense_SsCSDPostScan(void)
 757:Generated_Source\PSoC4/CapSense_INT.c **** {
  27              		.loc 1 757 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 758:Generated_Source\PSoC4/CapSense_INT.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
 759:Generated_Source\PSoC4/CapSense_INT.c **** 
 760:Generated_Source\PSoC4/CapSense_INT.c ****         uint32 tmpRawData;
 761:Generated_Source\PSoC4/CapSense_INT.c ****         uint32 tmpMaxCount;
 762:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
 763:Generated_Source\PSoC4/CapSense_INT.c ****                                             CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2Wd
  32              		.loc 1 763 0
  33 0000 114B     		ldr	r3, .L4
  34 0002 1A78     		ldrb	r2, [r3]
  35 0004 D2B2     		uxtb	r2, r2
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc0leXkL.s 			page 15


 762:Generated_Source\PSoC4/CapSense_INT.c ****                                             CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2Wd
  36              		.loc 1 762 0
  37 0006 D300     		lsls	r3, r2, #3
  38 0008 9A1A     		subs	r2, r3, r2
  39 000a 9300     		lsls	r3, r2, #2
  40 000c 0F4A     		ldr	r2, .L4+4
  41 000e D318     		adds	r3, r2, r3
  42 0010 5B68     		ldr	r3, [r3, #4]
  43              	.LVL0:
 764:Generated_Source\PSoC4/CapSense_INT.c **** 
 765:Generated_Source\PSoC4/CapSense_INT.c ****         /* Read SlotResult from Raw Counter */
 766:Generated_Source\PSoC4/CapSense_INT.c ****         tmpRawData = CapSense_RESULT_VAL1_VALUE_MASK & CY_GET_REG32(CapSense_COUNTER_PTR);
  44              		.loc 1 766 0
  45 0012 0F4A     		ldr	r2, .L4+8
  46 0014 1168     		ldr	r1, [r2]
  47 0016 0A04     		lsls	r2, r1, #16
  48 0018 120C     		lsrs	r2, r2, #16
  49              	.LVL1:
 767:Generated_Source\PSoC4/CapSense_INT.c **** 
 768:Generated_Source\PSoC4/CapSense_INT.c ****         tmpMaxCount = ((1uL << ptrWdgt->resolution) - 1uL);
  50              		.loc 1 768 0
  51 001a 1888     		ldrh	r0, [r3]
  52 001c 0123     		movs	r3, #1
  53              	.LVL2:
  54 001e 8340     		lsls	r3, r3, r0
  55 0020 013B     		subs	r3, r3, #1
  56              	.LVL3:
 769:Generated_Source\PSoC4/CapSense_INT.c ****         if(tmpRawData < tmpMaxCount)
  57              		.loc 1 769 0
  58 0022 9A42     		cmp	r2, r3
  59 0024 06D2     		bcs	.L2
 770:Generated_Source\PSoC4/CapSense_INT.c ****         {
 771:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_curRamSnsPtr->raw[CapSense_scanFreqIndex] = LO16(tmpRawData);
  60              		.loc 1 771 0
  61 0026 0B4B     		ldr	r3, .L4+12
  62              	.LVL4:
  63 0028 1A68     		ldr	r2, [r3]
  64              	.LVL5:
  65 002a 0B4B     		ldr	r3, .L4+16
  66 002c 1B78     		ldrb	r3, [r3]
  67 002e 5B00     		lsls	r3, r3, #1
  68 0030 D152     		strh	r1, [r2, r3]
  69 0032 05E0     		b	.L3
  70              	.LVL6:
  71              	.L2:
 772:Generated_Source\PSoC4/CapSense_INT.c ****         }
 773:Generated_Source\PSoC4/CapSense_INT.c ****         else
 774:Generated_Source\PSoC4/CapSense_INT.c ****         {
 775:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_curRamSnsPtr->raw[CapSense_scanFreqIndex] = LO16(tmpMaxCount);
  72              		.loc 1 775 0
  73 0034 074A     		ldr	r2, .L4+12
  74              	.LVL7:
  75 0036 1168     		ldr	r1, [r2]
  76              	.LVL8:
  77 0038 074A     		ldr	r2, .L4+16
  78 003a 1278     		ldrb	r2, [r2]
  79 003c 5200     		lsls	r2, r2, #1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc0leXkL.s 			page 16


  80 003e 8B52     		strh	r3, [r1, r2]
  81              	.LVL9:
  82              	.L3:
 776:Generated_Source\PSoC4/CapSense_INT.c ****         }
 777:Generated_Source\PSoC4/CapSense_INT.c **** 
 778:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN)
 779:Generated_Source\PSoC4/CapSense_INT.c ****             /* Init bad Conversions number */
 780:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_badConversionsNum = CapSense_BAD_CONVERSIONS_NUM;
 781:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN) */
 782:Generated_Source\PSoC4/CapSense_INT.c **** 
 783:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 784:Generated_Source\PSoC4/CapSense_INT.c ****             /* Open HCBV and HCBG switches */
 785:Generated_Source\PSoC4/CapSense_INT.c ****             CY_SET_REG32(CapSense_SW_SHIELD_SEL_PTR, CapSense_SW_SHIELD_SEL_SW_HCBV_STATIC_OPEN |
  83              		.loc 1 785 0
  84 0040 0022     		movs	r2, #0
  85 0042 064B     		ldr	r3, .L4+20
  86 0044 1A60     		str	r2, [r3]
 786:Generated_Source\PSoC4/CapSense_INT.c ****                                                              CapSense_SW_SHIELD_SEL_SW_HCBG_STATIC_
 787:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 788:Generated_Source\PSoC4/CapSense_INT.c **** 
 789:Generated_Source\PSoC4/CapSense_INT.c ****     #else
 790:Generated_Source\PSoC4/CapSense_INT.c **** 
 791:Generated_Source\PSoC4/CapSense_INT.c ****         /* Read SlotResult from Raw Counter */
 792:Generated_Source\PSoC4/CapSense_INT.c ****        CapSense_curRamSnsPtr->raw[CapSense_scanFreqIndex] = (uint16)CY_GET_REG32(CapSense_COUNTER_P
 793:Generated_Source\PSoC4/CapSense_INT.c **** 
 794:Generated_Source\PSoC4/CapSense_INT.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 795:Generated_Source\PSoC4/CapSense_INT.c **** }
  87              		.loc 1 795 0
  88              		@ sp needed
  89 0046 7047     		bx	lr
  90              	.L5:
  91              		.align	2
  92              	.L4:
  93 0048 00000000 		.word	CapSense_widgetIndex
  94 004c 00000000 		.word	CapSense_dsFlash
  95 0050 D0000B40 		.word	1074462928
  96 0054 00000000 		.word	CapSense_curRamSnsPtr
  97 0058 00000000 		.word	CapSense_scanFreqIndex
  98 005c 88020B40 		.word	1074463368
  99              		.cfi_endproc
 100              	.LFE3:
 101              		.size	CapSense_SsCSDPostScan, .-CapSense_SsCSDPostScan
 102              		.section	.text.CapSense_SsCSDInitNextScan,"ax",%progbits
 103              		.align	2
 104              		.code	16
 105              		.thumb_func
 106              		.type	CapSense_SsCSDInitNextScan, %function
 107              	CapSense_SsCSDInitNextScan:
 108              	.LFB4:
 796:Generated_Source\PSoC4/CapSense_INT.c **** 
 797:Generated_Source\PSoC4/CapSense_INT.c **** 
 798:Generated_Source\PSoC4/CapSense_INT.c **** /*******************************************************************************
 799:Generated_Source\PSoC4/CapSense_INT.c **** * Function Name: CapSense_SsCSDInitNextScan
 800:Generated_Source\PSoC4/CapSense_INT.c **** ****************************************************************************//**
 801:Generated_Source\PSoC4/CapSense_INT.c **** *
 802:Generated_Source\PSoC4/CapSense_INT.c **** * \brief
 803:Generated_Source\PSoC4/CapSense_INT.c **** *   This function initializes the next sensor scan.
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc0leXkL.s 			page 17


 804:Generated_Source\PSoC4/CapSense_INT.c **** *
 805:Generated_Source\PSoC4/CapSense_INT.c **** * \details
 806:Generated_Source\PSoC4/CapSense_INT.c **** *   The function increments the sensor index, updates sense clock for matrix
 807:Generated_Source\PSoC4/CapSense_INT.c **** *   or touchpad widgets only, sets up Compensation IDAC, enables the sensor and
 808:Generated_Source\PSoC4/CapSense_INT.c **** *   scans it. When all the sensors are scanned it continues to set up the next widget
 809:Generated_Source\PSoC4/CapSense_INT.c **** *   until all the widgets are scanned. The CSD block is disabled when all the widgets are
 810:Generated_Source\PSoC4/CapSense_INT.c **** *   scanned.
 811:Generated_Source\PSoC4/CapSense_INT.c **** *
 812:Generated_Source\PSoC4/CapSense_INT.c **** *******************************************************************************/
 813:Generated_Source\PSoC4/CapSense_INT.c **** static void CapSense_SsCSDInitNextScan(void)
 814:Generated_Source\PSoC4/CapSense_INT.c **** {
 109              		.loc 1 814 0
 110              		.cfi_startproc
 111              		@ args = 0, pretend = 0, frame = 0
 112              		@ frame_needed = 0, uses_anonymous_args = 0
 113 0000 70B5     		push	{r4, r5, r6, lr}
 114              		.cfi_def_cfa_offset 16
 115              		.cfi_offset 4, -16
 116              		.cfi_offset 5, -12
 117              		.cfi_offset 6, -8
 118              		.cfi_offset 14, -4
 815:Generated_Source\PSoC4/CapSense_INT.c ****     /* Declare and initialize ptr to widget and sensor structures to appropriate address */
 816:Generated_Source\PSoC4/CapSense_INT.c ****     #if (((CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) || \
 817:Generated_Source\PSoC4/CapSense_INT.c ****           (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)) || \
 818:Generated_Source\PSoC4/CapSense_INT.c ****           (((CapSense_DISABLE == CapSense_CSD_COMMON_SNS_CLK_EN) && \
 819:Generated_Source\PSoC4/CapSense_INT.c ****           (CapSense_ENABLE == CapSense_CSDV2) && \
 820:Generated_Source\PSoC4/CapSense_INT.c ****           (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN))))
 821:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_RAM_WD_BASE_STRUCT *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
 822:Generated_Source\PSoC4/CapSense_INT.c ****                                                         CapSense_dsFlash.wdgtArray[CapSense_widgetI
 119              		.loc 1 822 0
 120 0002 274B     		ldr	r3, .L10
 121 0004 1978     		ldrb	r1, [r3]
 122 0006 C9B2     		uxtb	r1, r1
 821:Generated_Source\PSoC4/CapSense_INT.c ****                                                         CapSense_dsFlash.wdgtArray[CapSense_widgetI
 123              		.loc 1 821 0
 124 0008 264C     		ldr	r4, .L10+4
 125 000a CA00     		lsls	r2, r1, #3
 126 000c 511A     		subs	r1, r2, r1
 127 000e 8A00     		lsls	r2, r1, #2
 128 0010 A218     		adds	r2, r4, r2
 129 0012 5068     		ldr	r0, [r2, #4]
 130              	.LVL10:
 823:Generated_Source\PSoC4/CapSense_INT.c ****     #endif
 824:Generated_Source\PSoC4/CapSense_INT.c **** 
 825:Generated_Source\PSoC4/CapSense_INT.c ****     /* Check if all the sensors are scanned in widget */
 826:Generated_Source\PSoC4/CapSense_INT.c ****     if (((uint8)CapSense_dsFlash.wdgtArray[(CapSense_widgetIndex)].totalNumSns - 1u) > CapSense_sen
 131              		.loc 1 826 0
 132 0014 1A78     		ldrb	r2, [r3]
 133 0016 D2B2     		uxtb	r2, r2
 134 0018 D100     		lsls	r1, r2, #3
 135 001a 8A1A     		subs	r2, r1, r2
 136 001c 9300     		lsls	r3, r2, #2
 137 001e E318     		adds	r3, r4, r3
 138 0020 1A7E     		ldrb	r2, [r3, #24]
 139 0022 013A     		subs	r2, r2, #1
 140 0024 204B     		ldr	r3, .L10+8
 141 0026 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc0leXkL.s 			page 18


 142 0028 DBB2     		uxtb	r3, r3
 143 002a 9A42     		cmp	r2, r3
 144 002c 20D9     		bls	.L7
 827:Generated_Source\PSoC4/CapSense_INT.c ****     {
 828:Generated_Source\PSoC4/CapSense_INT.c ****         /* Increment sensor index to configure next sensor in widget */
 829:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_sensorIndex++;
 145              		.loc 1 829 0
 146 002e 1E4C     		ldr	r4, .L10+8
 147 0030 2378     		ldrb	r3, [r4]
 148 0032 0133     		adds	r3, r3, #1
 149 0034 DBB2     		uxtb	r3, r3
 150 0036 2370     		strb	r3, [r4]
 830:Generated_Source\PSoC4/CapSense_INT.c **** 
 831:Generated_Source\PSoC4/CapSense_INT.c ****         /* Update global pointer to CapSense_RAM_SNS_STRUCT to current sensor  */
 832:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_curRamSnsPtr = (CapSense_RAM_SNS_STRUCT *)
 151              		.loc 1 832 0
 152 0038 194D     		ldr	r5, .L10
 153 003a 2A78     		ldrb	r2, [r5]
 154 003c D2B2     		uxtb	r2, r2
 833:Generated_Source\PSoC4/CapSense_INT.c ****                                                   CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].
 155              		.loc 1 833 0
 156 003e D300     		lsls	r3, r2, #3
 157 0040 9A1A     		subs	r2, r3, r2
 158 0042 9300     		lsls	r3, r2, #2
 159 0044 174A     		ldr	r2, .L10+4
 160 0046 D318     		adds	r3, r2, r3
 161 0048 9968     		ldr	r1, [r3, #8]
 834:Generated_Source\PSoC4/CapSense_INT.c ****                                                   + CapSense_sensorIndex;
 162              		.loc 1 834 0
 163 004a 2378     		ldrb	r3, [r4]
 164 004c DBB2     		uxtb	r3, r3
 165 004e 9A00     		lsls	r2, r3, #2
 166 0050 D318     		adds	r3, r2, r3
 167 0052 5A00     		lsls	r2, r3, #1
 168 0054 8A18     		adds	r2, r1, r2
 832:Generated_Source\PSoC4/CapSense_INT.c ****                                                   CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].
 169              		.loc 1 832 0
 170 0056 154B     		ldr	r3, .L10+12
 171 0058 1A60     		str	r2, [r3]
 835:Generated_Source\PSoC4/CapSense_INT.c **** 
 836:Generated_Source\PSoC4/CapSense_INT.c ****         /* Configure clock divider to row or column */
 837:Generated_Source\PSoC4/CapSense_INT.c ****         #if ((CapSense_DISABLE == CapSense_CSD_COMMON_SNS_CLK_EN) && \
 838:Generated_Source\PSoC4/CapSense_INT.c ****              (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN))
 839:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_SsCSDConfigClock();
 840:Generated_Source\PSoC4/CapSense_INT.c **** 
 841:Generated_Source\PSoC4/CapSense_INT.c ****             #if (CapSense_ENABLE == CapSense_CSDV2)
 842:Generated_Source\PSoC4/CapSense_INT.c ****                  /* Set up scanning resolution */
 843:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsCSDCalculateScanDuration(ptrWdgt);
 844:Generated_Source\PSoC4/CapSense_INT.c ****             #endif
 845:Generated_Source\PSoC4/CapSense_INT.c ****         #endif
 846:Generated_Source\PSoC4/CapSense_INT.c **** 
 847:Generated_Source\PSoC4/CapSense_INT.c ****         /* Setup Compensation IDAC for next sensor in widget */
 848:Generated_Source\PSoC4/CapSense_INT.c ****         #if ((CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) || \
 849:Generated_Source\PSoC4/CapSense_INT.c ****              (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN))
 850:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_SsCSDSetUpIdacs(ptrWdgt);
 172              		.loc 1 850 0
 173 005a FFF7FEFF 		bl	CapSense_SsCSDSetUpIdacs
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc0leXkL.s 			page 19


 174              	.LVL11:
 851:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) || \
 852:Generated_Source\PSoC4/CapSense_INT.c ****                    (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)) */
 853:Generated_Source\PSoC4/CapSense_INT.c **** 
 854:Generated_Source\PSoC4/CapSense_INT.c ****         /* Enable sensor */
 855:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_SsCSDConnectSensorExt((uint32)CapSense_widgetIndex, (uint32)CapSense_sensorIndex);
 175              		.loc 1 855 0
 176 005e 2878     		ldrb	r0, [r5]
 177 0060 C0B2     		uxtb	r0, r0
 178 0062 2178     		ldrb	r1, [r4]
 179 0064 C9B2     		uxtb	r1, r1
 180 0066 FFF7FEFF 		bl	CapSense_SsCSDConnectSensorExt
 181              	.LVL12:
 856:Generated_Source\PSoC4/CapSense_INT.c **** 
 857:Generated_Source\PSoC4/CapSense_INT.c ****         /* Proceed scanning */
 858:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_SsCSDStartSample();
 182              		.loc 1 858 0
 183 006a FFF7FEFF 		bl	CapSense_SsCSDStartSample
 184              	.LVL13:
 185 006e 16E0     		b	.L6
 186              	.LVL14:
 187              	.L7:
 859:Generated_Source\PSoC4/CapSense_INT.c ****     }
 860:Generated_Source\PSoC4/CapSense_INT.c ****     /* Call scan next widget API if requested, if not, complete the scan  */
 861:Generated_Source\PSoC4/CapSense_INT.c ****     else
 862:Generated_Source\PSoC4/CapSense_INT.c ****     {
 863:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_sensorIndex = 0u;
 188              		.loc 1 863 0
 189 0070 0022     		movs	r2, #0
 190 0072 0D4B     		ldr	r3, .L10+8
 191 0074 1A70     		strb	r2, [r3]
 864:Generated_Source\PSoC4/CapSense_INT.c **** 
 865:Generated_Source\PSoC4/CapSense_INT.c ****         /* Current widget is totally scanned. Reset WIDGET BUSY flag */
 866:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_dsRam.status &= ~CapSense_WDGT_SW_STS_BUSY;
 192              		.loc 1 866 0
 193 0076 0E4A     		ldr	r2, .L10+16
 194 0078 D168     		ldr	r1, [r2, #12]
 195 007a 0E4B     		ldr	r3, .L10+20
 196 007c 0B40     		ands	r3, r1
 197 007e D360     		str	r3, [r2, #12]
 867:Generated_Source\PSoC4/CapSense_INT.c **** 
 868:Generated_Source\PSoC4/CapSense_INT.c ****         /* Check if all the widgets have been scanned */
 869:Generated_Source\PSoC4/CapSense_INT.c ****         if (CapSense_ENABLE == CapSense_requestScanAllWidget)
 198              		.loc 1 869 0
 199 0080 0D4B     		ldr	r3, .L10+24
 200 0082 1B78     		ldrb	r3, [r3]
 201 0084 012B     		cmp	r3, #1
 202 0086 02D1     		bne	.L9
 870:Generated_Source\PSoC4/CapSense_INT.c ****         {
 871:Generated_Source\PSoC4/CapSense_INT.c ****             /* Configure and begin scanning next widget */
 872:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_SsPostAllWidgetsScan();
 203              		.loc 1 872 0
 204 0088 FFF7FEFF 		bl	CapSense_SsPostAllWidgetsScan
 205              	.LVL15:
 206 008c 07E0     		b	.L6
 207              	.LVL16:
 208              	.L9:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc0leXkL.s 			page 20


 873:Generated_Source\PSoC4/CapSense_INT.c ****         }
 874:Generated_Source\PSoC4/CapSense_INT.c ****         else
 875:Generated_Source\PSoC4/CapSense_INT.c ****         {
 876:Generated_Source\PSoC4/CapSense_INT.c ****             #if (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN)
 877:Generated_Source\PSoC4/CapSense_INT.c ****                 #if (CapSense_ENABLE == CapSense_CSDV2)
 878:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Disable the CSD block */
 879:Generated_Source\PSoC4/CapSense_INT.c ****                     CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd);
 880:Generated_Source\PSoC4/CapSense_INT.c ****                 #else
 881:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Disable the CSD block. Connect Vref Buffer to AMUX bus */
 882:Generated_Source\PSoC4/CapSense_INT.c ****                     #if ((CapSense_CSH_PRECHARGE_IO_BUF == CapSense_CSD_CSH_PRECHARGE_SRC) &&\
 883:Generated_Source\PSoC4/CapSense_INT.c ****                          (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
 884:Generated_Source\PSoC4/CapSense_INT.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CMOD_PRECHA
 885:Generated_Source\PSoC4/CapSense_INT.c ****                     #else
 886:Generated_Source\PSoC4/CapSense_INT.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECH
 887:Generated_Source\PSoC4/CapSense_INT.c ****                     #endif
 888:Generated_Source\PSoC4/CapSense_INT.c ****                 #endif
 889:Generated_Source\PSoC4/CapSense_INT.c ****             #endif
 890:Generated_Source\PSoC4/CapSense_INT.c **** 
 891:Generated_Source\PSoC4/CapSense_INT.c ****             /* All widgets are totally scanned. Reset BUSY flag */
 892:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_dsRam.status &= ~CapSense_SW_STS_BUSY;
 209              		.loc 1 892 0
 210 008e 084B     		ldr	r3, .L10+16
 211 0090 DA68     		ldr	r2, [r3, #12]
 212 0092 8021     		movs	r1, #128
 213 0094 8A43     		bics	r2, r1
 214 0096 DA60     		str	r2, [r3, #12]
 893:Generated_Source\PSoC4/CapSense_INT.c **** 
 894:Generated_Source\PSoC4/CapSense_INT.c ****             /* Update scan Counter */
 895:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_dsRam.scanCounter++;
 215              		.loc 1 895 0
 216 0098 1A89     		ldrh	r2, [r3, #8]
 217 009a 0132     		adds	r2, r2, #1
 218 009c 1A81     		strh	r2, [r3, #8]
 219              	.LVL17:
 220              	.L6:
 896:Generated_Source\PSoC4/CapSense_INT.c ****         }
 897:Generated_Source\PSoC4/CapSense_INT.c ****     }
 898:Generated_Source\PSoC4/CapSense_INT.c **** }
 221              		.loc 1 898 0
 222              		@ sp needed
 223 009e 70BD     		pop	{r4, r5, r6, pc}
 224              	.L11:
 225              		.align	2
 226              	.L10:
 227 00a0 00000000 		.word	CapSense_widgetIndex
 228 00a4 00000000 		.word	CapSense_dsFlash
 229 00a8 00000000 		.word	CapSense_sensorIndex
 230 00ac 00000000 		.word	CapSense_curRamSnsPtr
 231 00b0 00000000 		.word	CapSense_dsRam
 232 00b4 FFFFFEFF 		.word	-65537
 233 00b8 00000000 		.word	CapSense_requestScanAllWidget
 234              		.cfi_endproc
 235              	.LFE4:
 236              		.size	CapSense_SsCSDInitNextScan, .-CapSense_SsCSDInitNextScan
 237              		.section	.text.CapSense_CSDPostSingleScan,"ax",%progbits
 238              		.align	2
 239              		.global	CapSense_CSDPostSingleScan
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc0leXkL.s 			page 21


 240              		.code	16
 241              		.thumb_func
 242              		.type	CapSense_CSDPostSingleScan, %function
 243              	CapSense_CSDPostSingleScan:
 244              	.LFB1:
 122:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_ENTRY_CALLBACK
 245              		.loc 1 122 0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 0
 248              		@ frame_needed = 0, uses_anonymous_args = 0
 249 0000 10B5     		push	{r4, lr}
 250              		.cfi_def_cfa_offset 8
 251              		.cfi_offset 4, -8
 252              		.cfi_offset 14, -4
 128:Generated_Source\PSoC4/CapSense_INT.c **** 
 253              		.loc 1 128 0
 254 0002 8322     		movs	r2, #131
 255 0004 5200     		lsls	r2, r2, #1
 256 0006 064B     		ldr	r3, .L13
 257 0008 1A60     		str	r2, [r3]
 148:Generated_Source\PSoC4/CapSense_INT.c **** 
 258              		.loc 1 148 0
 259 000a FFF7FEFF 		bl	CapSense_SsCSDPostScan
 260              	.LVL18:
 186:Generated_Source\PSoC4/CapSense_INT.c **** 
 261              		.loc 1 186 0
 262 000e 054B     		ldr	r3, .L13+4
 263 0010 1A89     		ldrh	r2, [r3, #8]
 264 0012 0132     		adds	r2, r2, #1
 265 0014 1A81     		strh	r2, [r3, #8]
 189:Generated_Source\PSoC4/CapSense_INT.c ****                 }
 266              		.loc 1 189 0
 267 0016 D968     		ldr	r1, [r3, #12]
 268 0018 034A     		ldr	r2, .L13+8
 269 001a 0A40     		ands	r2, r1
 270 001c DA60     		str	r2, [r3, #12]
 199:Generated_Source\PSoC4/CapSense_INT.c **** 
 271              		.loc 1 199 0
 272              		@ sp needed
 273 001e 10BD     		pop	{r4, pc}
 274              	.L14:
 275              		.align	2
 276              	.L13:
 277 0020 F0000B40 		.word	1074462960
 278 0024 00000000 		.word	CapSense_dsRam
 279 0028 7FFFFEFF 		.word	-65665
 280              		.cfi_endproc
 281              	.LFE1:
 282              		.size	CapSense_CSDPostSingleScan, .-CapSense_CSDPostSingleScan
 283              		.section	.text.CapSense_CSDPostMultiScan,"ax",%progbits
 284              		.align	2
 285              		.global	CapSense_CSDPostMultiScan
 286              		.code	16
 287              		.thumb_func
 288              		.type	CapSense_CSDPostMultiScan, %function
 289              	CapSense_CSDPostMultiScan:
 290              	.LFB2:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc0leXkL.s 			page 22


 238:Generated_Source\PSoC4/CapSense_INT.c ****         /* Declare and initialize ptr to sensor IO structure to appropriate address */
 291              		.loc 1 238 0
 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 0
 294              		@ frame_needed = 0, uses_anonymous_args = 0
 295 0000 10B5     		push	{r4, lr}
 296              		.cfi_def_cfa_offset 8
 297              		.cfi_offset 4, -8
 298              		.cfi_offset 14, -4
 240:Generated_Source\PSoC4/CapSense_INT.c ****                                                           CapSense_dsFlash.wdgtArray[CapSense_widge
 299              		.loc 1 240 0
 300 0002 0D4B     		ldr	r3, .L16
 301 0004 1B78     		ldrb	r3, [r3]
 302 0006 DBB2     		uxtb	r3, r3
 241:Generated_Source\PSoC4/CapSense_INT.c ****                                                           + CapSense_sensorIndex;
 303              		.loc 1 241 0
 304 0008 DA00     		lsls	r2, r3, #3
 305 000a D31A     		subs	r3, r2, r3
 306 000c 9A00     		lsls	r2, r3, #2
 307 000e 0B4B     		ldr	r3, .L16+4
 308 0010 D458     		ldr	r4, [r2, r3]
 242:Generated_Source\PSoC4/CapSense_INT.c **** 
 309              		.loc 1 242 0
 310 0012 0B4B     		ldr	r3, .L16+8
 311 0014 1A78     		ldrb	r2, [r3]
 312 0016 D2B2     		uxtb	r2, r2
 313 0018 D100     		lsls	r1, r2, #3
 314 001a 8A1A     		subs	r2, r1, r2
 315 001c 9300     		lsls	r3, r2, #2
 240:Generated_Source\PSoC4/CapSense_INT.c ****                                                           CapSense_dsFlash.wdgtArray[CapSense_widge
 316              		.loc 1 240 0
 317 001e E418     		adds	r4, r4, r3
 318              	.LVL19:
 249:Generated_Source\PSoC4/CapSense_INT.c **** 
 319              		.loc 1 249 0
 320 0020 8322     		movs	r2, #131
 321 0022 5200     		lsls	r2, r2, #1
 322 0024 074B     		ldr	r3, .L16+12
 323 0026 1A60     		str	r2, [r3]
 269:Generated_Source\PSoC4/CapSense_INT.c **** 
 324              		.loc 1 269 0
 325 0028 FFF7FEFF 		bl	CapSense_SsCSDPostScan
 326              	.LVL20:
 277:Generated_Source\PSoC4/CapSense_INT.c ****             }
 327              		.loc 1 277 0
 328 002c 2000     		movs	r0, r4
 329 002e FFF7FEFF 		bl	CapSense_CSDDisconnectSns
 330              	.LVL21:
 302:Generated_Source\PSoC4/CapSense_INT.c ****             #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 331              		.loc 1 302 0
 332 0032 FFF7FEFF 		bl	CapSense_SsCSDInitNextScan
 333              	.LVL22:
 311:Generated_Source\PSoC4/CapSense_INT.c **** 
 334              		.loc 1 311 0
 335              		@ sp needed
 336              	.LVL23:
 337 0036 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc0leXkL.s 			page 23


 338              	.L17:
 339              		.align	2
 340              	.L16:
 341 0038 00000000 		.word	CapSense_widgetIndex
 342 003c 00000000 		.word	CapSense_dsFlash
 343 0040 00000000 		.word	CapSense_sensorIndex
 344 0044 F0000B40 		.word	1074462960
 345              		.cfi_endproc
 346              	.LFE2:
 347              		.size	CapSense_CSDPostMultiScan, .-CapSense_CSDPostMultiScan
 348              		.text
 349              	.Letext0:
 350              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 351              		.file 3 "Generated_Source\\PSoC4\\CapSense_Configuration.h"
 352              		.file 4 "Generated_Source\\PSoC4\\CapSense_Structure.h"
 353              		.file 5 "Generated_Source\\PSoC4\\CapSense_Sensing.h"
 354              		.file 6 "Generated_Source\\PSoC4\\CapSense_SensingCSD_LL.h"
 355              		.section	.debug_info,"",%progbits
 356              	.Ldebug_info0:
 357 0000 72080000 		.4byte	0x872
 358 0004 0400     		.2byte	0x4
 359 0006 00000000 		.4byte	.Ldebug_abbrev0
 360 000a 04       		.byte	0x4
 361 000b 01       		.uleb128 0x1
 362 000c F3000000 		.4byte	.LASF111
 363 0010 0C       		.byte	0xc
 364 0011 63030000 		.4byte	.LASF112
 365 0015 BE050000 		.4byte	.LASF113
 366 0019 00000000 		.4byte	.Ldebug_ranges0+0
 367 001d 00000000 		.4byte	0
 368 0021 00000000 		.4byte	.Ldebug_line0
 369 0025 02       		.uleb128 0x2
 370 0026 01       		.byte	0x1
 371 0027 06       		.byte	0x6
 372 0028 70060000 		.4byte	.LASF0
 373 002c 02       		.uleb128 0x2
 374 002d 01       		.byte	0x1
 375 002e 08       		.byte	0x8
 376 002f 89030000 		.4byte	.LASF1
 377 0033 02       		.uleb128 0x2
 378 0034 02       		.byte	0x2
 379 0035 05       		.byte	0x5
 380 0036 A3000000 		.4byte	.LASF2
 381 003a 02       		.uleb128 0x2
 382 003b 02       		.byte	0x2
 383 003c 07       		.byte	0x7
 384 003d CB040000 		.4byte	.LASF3
 385 0041 02       		.uleb128 0x2
 386 0042 04       		.byte	0x4
 387 0043 05       		.byte	0x5
 388 0044 CC020000 		.4byte	.LASF4
 389 0048 02       		.uleb128 0x2
 390 0049 04       		.byte	0x4
 391 004a 07       		.byte	0x7
 392 004b 8B050000 		.4byte	.LASF5
 393 004f 02       		.uleb128 0x2
 394 0050 08       		.byte	0x8
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc0leXkL.s 			page 24


 395 0051 05       		.byte	0x5
 396 0052 1F070000 		.4byte	.LASF6
 397 0056 02       		.uleb128 0x2
 398 0057 08       		.byte	0x8
 399 0058 07       		.byte	0x7
 400 0059 00040000 		.4byte	.LASF7
 401 005d 03       		.uleb128 0x3
 402 005e 04       		.byte	0x4
 403 005f 05       		.byte	0x5
 404 0060 696E7400 		.ascii	"int\000"
 405 0064 02       		.uleb128 0x2
 406 0065 04       		.byte	0x4
 407 0066 07       		.byte	0x7
 408 0067 45040000 		.4byte	.LASF8
 409 006b 04       		.uleb128 0x4
 410 006c 00020000 		.4byte	.LASF9
 411 0070 02       		.byte	0x2
 412 0071 E401     		.2byte	0x1e4
 413 0073 2C000000 		.4byte	0x2c
 414 0077 04       		.uleb128 0x4
 415 0078 E9010000 		.4byte	.LASF10
 416 007c 02       		.byte	0x2
 417 007d E501     		.2byte	0x1e5
 418 007f 3A000000 		.4byte	0x3a
 419 0083 04       		.uleb128 0x4
 420 0084 79050000 		.4byte	.LASF11
 421 0088 02       		.byte	0x2
 422 0089 E601     		.2byte	0x1e6
 423 008b 48000000 		.4byte	0x48
 424 008f 02       		.uleb128 0x2
 425 0090 04       		.byte	0x4
 426 0091 04       		.byte	0x4
 427 0092 33020000 		.4byte	.LASF12
 428 0096 02       		.uleb128 0x2
 429 0097 08       		.byte	0x8
 430 0098 04       		.byte	0x4
 431 0099 9D050000 		.4byte	.LASF13
 432 009d 02       		.uleb128 0x2
 433 009e 01       		.byte	0x1
 434 009f 08       		.byte	0x8
 435 00a0 AD020000 		.4byte	.LASF14
 436 00a4 05       		.uleb128 0x5
 437 00a5 6B000000 		.4byte	0x6b
 438 00a9 04       		.uleb128 0x4
 439 00aa 65040000 		.4byte	.LASF15
 440 00ae 02       		.byte	0x2
 441 00af 9002     		.2byte	0x290
 442 00b1 B5000000 		.4byte	0xb5
 443 00b5 05       		.uleb128 0x5
 444 00b6 83000000 		.4byte	0x83
 445 00ba 04       		.uleb128 0x4
 446 00bb AC030000 		.4byte	.LASF16
 447 00bf 03       		.byte	0x3
 448 00c0 3201     		.2byte	0x132
 449 00c2 77000000 		.4byte	0x77
 450 00c6 04       		.uleb128 0x4
 451 00c7 83040000 		.4byte	.LASF17
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc0leXkL.s 			page 25


 452 00cb 03       		.byte	0x3
 453 00cc 3601     		.2byte	0x136
 454 00ce 6B000000 		.4byte	0x6b
 455 00d2 06       		.uleb128 0x6
 456 00d3 10       		.byte	0x10
 457 00d4 04       		.byte	0x4
 458 00d5 AD       		.byte	0xad
 459 00d6 5F010000 		.4byte	0x15f
 460 00da 07       		.uleb128 0x7
 461 00db C0040000 		.4byte	.LASF18
 462 00df 04       		.byte	0x4
 463 00e0 B2       		.byte	0xb2
 464 00e1 77000000 		.4byte	0x77
 465 00e5 00       		.byte	0
 466 00e6 07       		.uleb128 0x7
 467 00e7 27030000 		.4byte	.LASF19
 468 00eb 04       		.byte	0x4
 469 00ec B7       		.byte	0xb7
 470 00ed BA000000 		.4byte	0xba
 471 00f1 02       		.byte	0x2
 472 00f2 07       		.uleb128 0x7
 473 00f3 DC010000 		.4byte	.LASF20
 474 00f7 04       		.byte	0x4
 475 00f8 BC       		.byte	0xbc
 476 00f9 6B000000 		.4byte	0x6b
 477 00fd 04       		.byte	0x4
 478 00fe 07       		.uleb128 0x7
 479 00ff 41050000 		.4byte	.LASF21
 480 0103 04       		.byte	0x4
 481 0104 C1       		.byte	0xc1
 482 0105 6B000000 		.4byte	0x6b
 483 0109 05       		.byte	0x5
 484 010a 07       		.uleb128 0x7
 485 010b 38030000 		.4byte	.LASF22
 486 010f 04       		.byte	0x4
 487 0110 C7       		.byte	0xc7
 488 0111 6B000000 		.4byte	0x6b
 489 0115 06       		.byte	0x6
 490 0116 07       		.uleb128 0x7
 491 0117 B6000000 		.4byte	.LASF23
 492 011b 04       		.byte	0x4
 493 011c CD       		.byte	0xcd
 494 011d 6B000000 		.4byte	0x6b
 495 0121 07       		.byte	0x7
 496 0122 07       		.uleb128 0x7
 497 0123 6D000000 		.4byte	.LASF24
 498 0127 04       		.byte	0x4
 499 0128 D4       		.byte	0xd4
 500 0129 C6000000 		.4byte	0xc6
 501 012d 08       		.byte	0x8
 502 012e 07       		.uleb128 0x7
 503 012f 95000000 		.4byte	.LASF25
 504 0133 04       		.byte	0x4
 505 0134 DB       		.byte	0xdb
 506 0135 5F010000 		.4byte	0x15f
 507 0139 09       		.byte	0x9
 508 013a 07       		.uleb128 0x7
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc0leXkL.s 			page 26


 509 013b 53000000 		.4byte	.LASF26
 510 013f 04       		.byte	0x4
 511 0140 E0       		.byte	0xe0
 512 0141 6B000000 		.4byte	0x6b
 513 0145 0A       		.byte	0xa
 514 0146 07       		.uleb128 0x7
 515 0147 0C020000 		.4byte	.LASF27
 516 014b 04       		.byte	0x4
 517 014c E8       		.byte	0xe8
 518 014d 77000000 		.4byte	0x77
 519 0151 0C       		.byte	0xc
 520 0152 07       		.uleb128 0x7
 521 0153 B4010000 		.4byte	.LASF28
 522 0157 04       		.byte	0x4
 523 0158 ED       		.byte	0xed
 524 0159 6B000000 		.4byte	0x6b
 525 015d 0E       		.byte	0xe
 526 015e 00       		.byte	0
 527 015f 08       		.uleb128 0x8
 528 0160 6B000000 		.4byte	0x6b
 529 0164 6F010000 		.4byte	0x16f
 530 0168 09       		.uleb128 0x9
 531 0169 6F010000 		.4byte	0x16f
 532 016d 00       		.byte	0
 533 016e 00       		.byte	0
 534 016f 02       		.uleb128 0x2
 535 0170 04       		.byte	0x4
 536 0171 07       		.byte	0x7
 537 0172 C8000000 		.4byte	.LASF29
 538 0176 0A       		.uleb128 0xa
 539 0177 A7060000 		.4byte	.LASF30
 540 017b 04       		.byte	0x4
 541 017c EE       		.byte	0xee
 542 017d D2000000 		.4byte	0xd2
 543 0181 06       		.uleb128 0x6
 544 0182 10       		.byte	0x10
 545 0183 04       		.byte	0x4
 546 0184 F3       		.byte	0xf3
 547 0185 17020000 		.4byte	0x217
 548 0189 07       		.uleb128 0x7
 549 018a C0040000 		.4byte	.LASF18
 550 018e 04       		.byte	0x4
 551 018f F8       		.byte	0xf8
 552 0190 77000000 		.4byte	0x77
 553 0194 00       		.byte	0
 554 0195 07       		.uleb128 0x7
 555 0196 27030000 		.4byte	.LASF19
 556 019a 04       		.byte	0x4
 557 019b FD       		.byte	0xfd
 558 019c BA000000 		.4byte	0xba
 559 01a0 02       		.byte	0x2
 560 01a1 0B       		.uleb128 0xb
 561 01a2 DC010000 		.4byte	.LASF20
 562 01a6 04       		.byte	0x4
 563 01a7 0201     		.2byte	0x102
 564 01a9 6B000000 		.4byte	0x6b
 565 01ad 04       		.byte	0x4
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc0leXkL.s 			page 27


 566 01ae 0B       		.uleb128 0xb
 567 01af 41050000 		.4byte	.LASF21
 568 01b3 04       		.byte	0x4
 569 01b4 0701     		.2byte	0x107
 570 01b6 6B000000 		.4byte	0x6b
 571 01ba 05       		.byte	0x5
 572 01bb 0B       		.uleb128 0xb
 573 01bc 38030000 		.4byte	.LASF22
 574 01c0 04       		.byte	0x4
 575 01c1 0D01     		.2byte	0x10d
 576 01c3 6B000000 		.4byte	0x6b
 577 01c7 06       		.byte	0x6
 578 01c8 0B       		.uleb128 0xb
 579 01c9 B6000000 		.4byte	.LASF23
 580 01cd 04       		.byte	0x4
 581 01ce 1301     		.2byte	0x113
 582 01d0 6B000000 		.4byte	0x6b
 583 01d4 07       		.byte	0x7
 584 01d5 0B       		.uleb128 0xb
 585 01d6 6D000000 		.4byte	.LASF24
 586 01da 04       		.byte	0x4
 587 01db 1A01     		.2byte	0x11a
 588 01dd C6000000 		.4byte	0xc6
 589 01e1 08       		.byte	0x8
 590 01e2 0B       		.uleb128 0xb
 591 01e3 95000000 		.4byte	.LASF25
 592 01e7 04       		.byte	0x4
 593 01e8 2101     		.2byte	0x121
 594 01ea 5F010000 		.4byte	0x15f
 595 01ee 09       		.byte	0x9
 596 01ef 0B       		.uleb128 0xb
 597 01f0 53000000 		.4byte	.LASF26
 598 01f4 04       		.byte	0x4
 599 01f5 2601     		.2byte	0x126
 600 01f7 6B000000 		.4byte	0x6b
 601 01fb 0A       		.byte	0xa
 602 01fc 0B       		.uleb128 0xb
 603 01fd 0C020000 		.4byte	.LASF27
 604 0201 04       		.byte	0x4
 605 0202 2E01     		.2byte	0x12e
 606 0204 77000000 		.4byte	0x77
 607 0208 0C       		.byte	0xc
 608 0209 0B       		.uleb128 0xb
 609 020a B4010000 		.4byte	.LASF28
 610 020e 04       		.byte	0x4
 611 020f 3301     		.2byte	0x133
 612 0211 6B000000 		.4byte	0x6b
 613 0215 0E       		.byte	0xe
 614 0216 00       		.byte	0
 615 0217 04       		.uleb128 0x4
 616 0218 71020000 		.4byte	.LASF31
 617 021c 04       		.byte	0x4
 618 021d 3401     		.2byte	0x134
 619 021f 81010000 		.4byte	0x181
 620 0223 0C       		.uleb128 0xc
 621 0224 12       		.byte	0x12
 622 0225 04       		.byte	0x4
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc0leXkL.s 			page 28


 623 0226 3901     		.2byte	0x139
 624 0228 C9020000 		.4byte	0x2c9
 625 022c 0B       		.uleb128 0xb
 626 022d C0040000 		.4byte	.LASF18
 627 0231 04       		.byte	0x4
 628 0232 3E01     		.2byte	0x13e
 629 0234 77000000 		.4byte	0x77
 630 0238 00       		.byte	0
 631 0239 0B       		.uleb128 0xb
 632 023a 27030000 		.4byte	.LASF19
 633 023e 04       		.byte	0x4
 634 023f 4301     		.2byte	0x143
 635 0241 BA000000 		.4byte	0xba
 636 0245 02       		.byte	0x2
 637 0246 0B       		.uleb128 0xb
 638 0247 DC010000 		.4byte	.LASF20
 639 024b 04       		.byte	0x4
 640 024c 4801     		.2byte	0x148
 641 024e 6B000000 		.4byte	0x6b
 642 0252 04       		.byte	0x4
 643 0253 0B       		.uleb128 0xb
 644 0254 41050000 		.4byte	.LASF21
 645 0258 04       		.byte	0x4
 646 0259 4D01     		.2byte	0x14d
 647 025b 6B000000 		.4byte	0x6b
 648 025f 05       		.byte	0x5
 649 0260 0B       		.uleb128 0xb
 650 0261 38030000 		.4byte	.LASF22
 651 0265 04       		.byte	0x4
 652 0266 5301     		.2byte	0x153
 653 0268 6B000000 		.4byte	0x6b
 654 026c 06       		.byte	0x6
 655 026d 0B       		.uleb128 0xb
 656 026e B6000000 		.4byte	.LASF23
 657 0272 04       		.byte	0x4
 658 0273 5901     		.2byte	0x159
 659 0275 6B000000 		.4byte	0x6b
 660 0279 07       		.byte	0x7
 661 027a 0B       		.uleb128 0xb
 662 027b 6D000000 		.4byte	.LASF24
 663 027f 04       		.byte	0x4
 664 0280 6001     		.2byte	0x160
 665 0282 C6000000 		.4byte	0xc6
 666 0286 08       		.byte	0x8
 667 0287 0B       		.uleb128 0xb
 668 0288 95000000 		.4byte	.LASF25
 669 028c 04       		.byte	0x4
 670 028d 6701     		.2byte	0x167
 671 028f 5F010000 		.4byte	0x15f
 672 0293 09       		.byte	0x9
 673 0294 0B       		.uleb128 0xb
 674 0295 53000000 		.4byte	.LASF26
 675 0299 04       		.byte	0x4
 676 029a 6C01     		.2byte	0x16c
 677 029c 6B000000 		.4byte	0x6b
 678 02a0 0A       		.byte	0xa
 679 02a1 0B       		.uleb128 0xb
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc0leXkL.s 			page 29


 680 02a2 0C020000 		.4byte	.LASF27
 681 02a6 04       		.byte	0x4
 682 02a7 7401     		.2byte	0x174
 683 02a9 77000000 		.4byte	0x77
 684 02ad 0C       		.byte	0xc
 685 02ae 0B       		.uleb128 0xb
 686 02af B4010000 		.4byte	.LASF28
 687 02b3 04       		.byte	0x4
 688 02b4 7901     		.2byte	0x179
 689 02b6 6B000000 		.4byte	0x6b
 690 02ba 0E       		.byte	0xe
 691 02bb 0B       		.uleb128 0xb
 692 02bc 99010000 		.4byte	.LASF32
 693 02c0 04       		.byte	0x4
 694 02c1 7E01     		.2byte	0x17e
 695 02c3 BA000000 		.4byte	0xba
 696 02c7 10       		.byte	0x10
 697 02c8 00       		.byte	0
 698 02c9 04       		.uleb128 0x4
 699 02ca 24040000 		.4byte	.LASF33
 700 02ce 04       		.byte	0x4
 701 02cf 7F01     		.2byte	0x17f
 702 02d1 23020000 		.4byte	0x223
 703 02d5 0C       		.uleb128 0xc
 704 02d6 62       		.byte	0x62
 705 02d7 04       		.byte	0x4
 706 02d8 8501     		.2byte	0x185
 707 02da 2D030000 		.4byte	0x32d
 708 02de 0B       		.uleb128 0xb
 709 02df C1000000 		.4byte	.LASF34
 710 02e3 04       		.byte	0x4
 711 02e4 8A01     		.2byte	0x18a
 712 02e6 17020000 		.4byte	0x217
 713 02ea 00       		.byte	0
 714 02eb 0B       		.uleb128 0xb
 715 02ec 2A020000 		.4byte	.LASF35
 716 02f0 04       		.byte	0x4
 717 02f1 8F01     		.2byte	0x18f
 718 02f3 17020000 		.4byte	0x217
 719 02f7 10       		.byte	0x10
 720 02f8 0B       		.uleb128 0xb
 721 02f9 0D030000 		.4byte	.LASF36
 722 02fd 04       		.byte	0x4
 723 02fe 9401     		.2byte	0x194
 724 0300 17020000 		.4byte	0x217
 725 0304 20       		.byte	0x20
 726 0305 0B       		.uleb128 0xb
 727 0306 DE040000 		.4byte	.LASF37
 728 030a 04       		.byte	0x4
 729 030b 9901     		.2byte	0x199
 730 030d 17020000 		.4byte	0x217
 731 0311 30       		.byte	0x30
 732 0312 0B       		.uleb128 0xb
 733 0313 3E000000 		.4byte	.LASF38
 734 0317 04       		.byte	0x4
 735 0318 9E01     		.2byte	0x19e
 736 031a 17020000 		.4byte	0x217
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc0leXkL.s 			page 30


 737 031e 40       		.byte	0x40
 738 031f 0B       		.uleb128 0xb
 739 0320 A5010000 		.4byte	.LASF39
 740 0324 04       		.byte	0x4
 741 0325 A301     		.2byte	0x1a3
 742 0327 C9020000 		.4byte	0x2c9
 743 032b 50       		.byte	0x50
 744 032c 00       		.byte	0
 745 032d 04       		.uleb128 0x4
 746 032e 45020000 		.4byte	.LASF40
 747 0332 04       		.byte	0x4
 748 0333 A401     		.2byte	0x1a4
 749 0335 D5020000 		.4byte	0x2d5
 750 0339 0C       		.uleb128 0xc
 751 033a 0A       		.byte	0xa
 752 033b 04       		.byte	0x4
 753 033c AA01     		.2byte	0x1aa
 754 033e 91030000 		.4byte	0x391
 755 0342 0D       		.uleb128 0xd
 756 0343 72617700 		.ascii	"raw\000"
 757 0347 04       		.byte	0x4
 758 0348 AF01     		.2byte	0x1af
 759 034a 91030000 		.4byte	0x391
 760 034e 00       		.byte	0
 761 034f 0B       		.uleb128 0xb
 762 0350 E4010000 		.4byte	.LASF41
 763 0354 04       		.byte	0x4
 764 0355 B401     		.2byte	0x1b4
 765 0357 91030000 		.4byte	0x391
 766 035b 02       		.byte	0x2
 767 035c 0B       		.uleb128 0xb
 768 035d 52040000 		.4byte	.LASF42
 769 0361 04       		.byte	0x4
 770 0362 BA01     		.2byte	0x1ba
 771 0364 5F010000 		.4byte	0x15f
 772 0368 04       		.byte	0x4
 773 0369 0B       		.uleb128 0xb
 774 036a 78000000 		.4byte	.LASF43
 775 036e 04       		.byte	0x4
 776 036f BF01     		.2byte	0x1bf
 777 0371 BA000000 		.4byte	0xba
 778 0375 06       		.byte	0x6
 779 0376 0B       		.uleb128 0xb
 780 0377 3E060000 		.4byte	.LASF44
 781 037b 04       		.byte	0x4
 782 037c C401     		.2byte	0x1c4
 783 037e A1030000 		.4byte	0x3a1
 784 0382 08       		.byte	0x8
 785 0383 0B       		.uleb128 0xb
 786 0384 85010000 		.4byte	.LASF45
 787 0388 04       		.byte	0x4
 788 0389 C901     		.2byte	0x1c9
 789 038b 5F010000 		.4byte	0x15f
 790 038f 09       		.byte	0x9
 791 0390 00       		.byte	0
 792 0391 08       		.uleb128 0x8
 793 0392 77000000 		.4byte	0x77
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc0leXkL.s 			page 31


 794 0396 A1030000 		.4byte	0x3a1
 795 039a 09       		.uleb128 0x9
 796 039b 6F010000 		.4byte	0x16f
 797 039f 00       		.byte	0
 798 03a0 00       		.byte	0
 799 03a1 08       		.uleb128 0x8
 800 03a2 C6000000 		.4byte	0xc6
 801 03a6 B1030000 		.4byte	0x3b1
 802 03aa 09       		.uleb128 0x9
 803 03ab 6F010000 		.4byte	0x16f
 804 03af 00       		.byte	0
 805 03b0 00       		.byte	0
 806 03b1 04       		.uleb128 0x4
 807 03b2 6B040000 		.4byte	.LASF46
 808 03b6 04       		.byte	0x4
 809 03b7 CA01     		.2byte	0x1ca
 810 03b9 39030000 		.4byte	0x339
 811 03bd 0C       		.uleb128 0xc
 812 03be 3C       		.byte	0x3c
 813 03bf 04       		.byte	0x4
 814 03c0 D001     		.2byte	0x1d0
 815 03c2 15040000 		.4byte	0x415
 816 03c6 0B       		.uleb128 0xb
 817 03c7 C1000000 		.4byte	.LASF34
 818 03cb 04       		.byte	0x4
 819 03cc D501     		.2byte	0x1d5
 820 03ce 15040000 		.4byte	0x415
 821 03d2 00       		.byte	0
 822 03d3 0B       		.uleb128 0xb
 823 03d4 2A020000 		.4byte	.LASF35
 824 03d8 04       		.byte	0x4
 825 03d9 DA01     		.2byte	0x1da
 826 03db 15040000 		.4byte	0x415
 827 03df 0A       		.byte	0xa
 828 03e0 0B       		.uleb128 0xb
 829 03e1 0D030000 		.4byte	.LASF36
 830 03e5 04       		.byte	0x4
 831 03e6 DF01     		.2byte	0x1df
 832 03e8 15040000 		.4byte	0x415
 833 03ec 14       		.byte	0x14
 834 03ed 0B       		.uleb128 0xb
 835 03ee DE040000 		.4byte	.LASF37
 836 03f2 04       		.byte	0x4
 837 03f3 E401     		.2byte	0x1e4
 838 03f5 15040000 		.4byte	0x415
 839 03f9 1E       		.byte	0x1e
 840 03fa 0B       		.uleb128 0xb
 841 03fb 3E000000 		.4byte	.LASF38
 842 03ff 04       		.byte	0x4
 843 0400 E901     		.2byte	0x1e9
 844 0402 15040000 		.4byte	0x415
 845 0406 28       		.byte	0x28
 846 0407 0B       		.uleb128 0xb
 847 0408 A5010000 		.4byte	.LASF39
 848 040c 04       		.byte	0x4
 849 040d EE01     		.2byte	0x1ee
 850 040f 15040000 		.4byte	0x415
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc0leXkL.s 			page 32


 851 0413 32       		.byte	0x32
 852 0414 00       		.byte	0
 853 0415 08       		.uleb128 0x8
 854 0416 B1030000 		.4byte	0x3b1
 855 041a 25040000 		.4byte	0x425
 856 041e 09       		.uleb128 0x9
 857 041f 6F010000 		.4byte	0x16f
 858 0423 00       		.byte	0
 859 0424 00       		.byte	0
 860 0425 04       		.uleb128 0x4
 861 0426 E3030000 		.4byte	.LASF47
 862 042a 04       		.byte	0x4
 863 042b EF01     		.2byte	0x1ef
 864 042d BD030000 		.4byte	0x3bd
 865 0431 0C       		.uleb128 0xc
 866 0432 C8       		.byte	0xc8
 867 0433 04       		.byte	0x4
 868 0434 F501     		.2byte	0x1f5
 869 0436 32050000 		.4byte	0x532
 870 043a 0B       		.uleb128 0xb
 871 043b EA000000 		.4byte	.LASF48
 872 043f 04       		.byte	0x4
 873 0440 FC01     		.2byte	0x1fc
 874 0442 77000000 		.4byte	0x77
 875 0446 00       		.byte	0
 876 0447 0B       		.uleb128 0xb
 877 0448 D3060000 		.4byte	.LASF49
 878 044c 04       		.byte	0x4
 879 044d 0102     		.2byte	0x201
 880 044f 77000000 		.4byte	0x77
 881 0453 02       		.byte	0x2
 882 0454 0B       		.uleb128 0xb
 883 0455 A5040000 		.4byte	.LASF50
 884 0459 04       		.byte	0x4
 885 045a 0602     		.2byte	0x206
 886 045c 77000000 		.4byte	0x77
 887 0460 04       		.byte	0x4
 888 0461 0B       		.uleb128 0xb
 889 0462 43030000 		.4byte	.LASF51
 890 0466 04       		.byte	0x4
 891 0467 0C02     		.2byte	0x20c
 892 0469 77000000 		.4byte	0x77
 893 046d 06       		.byte	0x6
 894 046e 0B       		.uleb128 0xb
 895 046f 35050000 		.4byte	.LASF52
 896 0473 04       		.byte	0x4
 897 0474 1102     		.2byte	0x211
 898 0476 77000000 		.4byte	0x77
 899 047a 08       		.byte	0x8
 900 047b 0B       		.uleb128 0xb
 901 047c 9E040000 		.4byte	.LASF53
 902 0480 04       		.byte	0x4
 903 0481 1602     		.2byte	0x216
 904 0483 B5000000 		.4byte	0xb5
 905 0487 0C       		.byte	0xc
 906 0488 0B       		.uleb128 0xb
 907 0489 5A040000 		.4byte	.LASF54
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc0leXkL.s 			page 33


 908 048d 04       		.byte	0x4
 909 048e 1C02     		.2byte	0x21c
 910 0490 32050000 		.4byte	0x532
 911 0494 10       		.byte	0x10
 912 0495 0B       		.uleb128 0xb
 913 0496 58030000 		.4byte	.LASF55
 914 049a 04       		.byte	0x4
 915 049b 2302     		.2byte	0x223
 916 049d 32050000 		.4byte	0x532
 917 04a1 14       		.byte	0x14
 918 04a2 0B       		.uleb128 0xb
 919 04a3 00070000 		.4byte	.LASF56
 920 04a7 04       		.byte	0x4
 921 04a8 3302     		.2byte	0x233
 922 04aa 42050000 		.4byte	0x542
 923 04ae 18       		.byte	0x18
 924 04af 0B       		.uleb128 0xb
 925 04b0 8E010000 		.4byte	.LASF57
 926 04b4 04       		.byte	0x4
 927 04b5 3902     		.2byte	0x239
 928 04b7 77000000 		.4byte	0x77
 929 04bb 1E       		.byte	0x1e
 930 04bc 0B       		.uleb128 0xb
 931 04bd 2B050000 		.4byte	.LASF58
 932 04c1 04       		.byte	0x4
 933 04c2 3E02     		.2byte	0x23e
 934 04c4 6B000000 		.4byte	0x6b
 935 04c8 20       		.byte	0x20
 936 04c9 0B       		.uleb128 0xb
 937 04ca 16000000 		.4byte	.LASF59
 938 04ce 04       		.byte	0x4
 939 04cf 4302     		.2byte	0x243
 940 04d1 2D030000 		.4byte	0x32d
 941 04d5 22       		.byte	0x22
 942 04d6 0B       		.uleb128 0xb
 943 04d7 05050000 		.4byte	.LASF60
 944 04db 04       		.byte	0x4
 945 04dc 4802     		.2byte	0x248
 946 04de 25040000 		.4byte	0x425
 947 04e2 84       		.byte	0x84
 948 04e3 0B       		.uleb128 0xb
 949 04e4 C3060000 		.4byte	.LASF61
 950 04e8 04       		.byte	0x4
 951 04e9 4D02     		.2byte	0x24d
 952 04eb 6B000000 		.4byte	0x6b
 953 04ef C0       		.byte	0xc0
 954 04f0 0B       		.uleb128 0xb
 955 04f1 61020000 		.4byte	.LASF62
 956 04f5 04       		.byte	0x4
 957 04f6 5202     		.2byte	0x252
 958 04f8 6B000000 		.4byte	0x6b
 959 04fc C1       		.byte	0xc1
 960 04fd 0B       		.uleb128 0xb
 961 04fe AD040000 		.4byte	.LASF63
 962 0502 04       		.byte	0x4
 963 0503 5702     		.2byte	0x257
 964 0505 77000000 		.4byte	0x77
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc0leXkL.s 			page 34


 965 0509 C2       		.byte	0xc2
 966 050a 0B       		.uleb128 0xb
 967 050b 1F000000 		.4byte	.LASF64
 968 050f 04       		.byte	0x4
 969 0510 5C02     		.2byte	0x25c
 970 0512 91030000 		.4byte	0x391
 971 0516 C4       		.byte	0xc4
 972 0517 0B       		.uleb128 0xb
 973 0518 80050000 		.4byte	.LASF65
 974 051c 04       		.byte	0x4
 975 051d 6102     		.2byte	0x261
 976 051f 6B000000 		.4byte	0x6b
 977 0523 C6       		.byte	0xc6
 978 0524 0B       		.uleb128 0xb
 979 0525 2F000000 		.4byte	.LASF66
 980 0529 04       		.byte	0x4
 981 052a 6602     		.2byte	0x266
 982 052c 6B000000 		.4byte	0x6b
 983 0530 C7       		.byte	0xc7
 984 0531 00       		.byte	0
 985 0532 08       		.uleb128 0x8
 986 0533 83000000 		.4byte	0x83
 987 0537 42050000 		.4byte	0x542
 988 053b 09       		.uleb128 0x9
 989 053c 6F010000 		.4byte	0x16f
 990 0540 00       		.byte	0
 991 0541 00       		.byte	0
 992 0542 08       		.uleb128 0x8
 993 0543 6B000000 		.4byte	0x6b
 994 0547 52050000 		.4byte	0x552
 995 054b 09       		.uleb128 0x9
 996 054c 6F010000 		.4byte	0x16f
 997 0550 05       		.byte	0x5
 998 0551 00       		.byte	0
 999 0552 04       		.uleb128 0x4
 1000 0553 4A050000 		.4byte	.LASF67
 1001 0557 04       		.byte	0x4
 1002 0558 6702     		.2byte	0x267
 1003 055a 31040000 		.4byte	0x431
 1004 055e 0C       		.uleb128 0xc
 1005 055f 1C       		.byte	0x1c
 1006 0560 04       		.byte	0x4
 1007 0561 6D02     		.2byte	0x26d
 1008 0563 DD050000 		.4byte	0x5dd
 1009 0567 0B       		.uleb128 0xb
 1010 0568 AD000000 		.4byte	.LASF68
 1011 056c 04       		.byte	0x4
 1012 056d 7202     		.2byte	0x272
 1013 056f DD050000 		.4byte	0x5dd
 1014 0573 00       		.byte	0
 1015 0574 0B       		.uleb128 0xb
 1016 0575 9D000000 		.4byte	.LASF69
 1017 0579 04       		.byte	0x4
 1018 057a 7702     		.2byte	0x277
 1019 057c DD050000 		.4byte	0x5dd
 1020 0580 04       		.byte	0x4
 1021 0581 0B       		.uleb128 0xb
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc0leXkL.s 			page 35


 1022 0582 33060000 		.4byte	.LASF70
 1023 0586 04       		.byte	0x4
 1024 0587 7C02     		.2byte	0x27c
 1025 0589 DD050000 		.4byte	0x5dd
 1026 058d 08       		.byte	0x8
 1027 058e 0B       		.uleb128 0xb
 1028 058f 06020000 		.4byte	.LASF71
 1029 0593 04       		.byte	0x4
 1030 0594 8102     		.2byte	0x281
 1031 0596 DD050000 		.4byte	0x5dd
 1032 059a 0C       		.byte	0xc
 1033 059b 0B       		.uleb128 0xb
 1034 059c AA010000 		.4byte	.LASF72
 1035 05a0 04       		.byte	0x4
 1036 05a1 8602     		.2byte	0x286
 1037 05a3 83000000 		.4byte	0x83
 1038 05a7 10       		.byte	0x10
 1039 05a8 0B       		.uleb128 0xb
 1040 05a9 39060000 		.4byte	.LASF73
 1041 05ad 04       		.byte	0x4
 1042 05ae 8B02     		.2byte	0x28b
 1043 05b0 83000000 		.4byte	0x83
 1044 05b4 14       		.byte	0x14
 1045 05b5 0B       		.uleb128 0xb
 1046 05b6 12060000 		.4byte	.LASF74
 1047 05ba 04       		.byte	0x4
 1048 05bb 9002     		.2byte	0x290
 1049 05bd 6B000000 		.4byte	0x6b
 1050 05c1 18       		.byte	0x18
 1051 05c2 0B       		.uleb128 0xb
 1052 05c3 EC020000 		.4byte	.LASF75
 1053 05c7 04       		.byte	0x4
 1054 05c8 9502     		.2byte	0x295
 1055 05ca 6B000000 		.4byte	0x6b
 1056 05ce 19       		.byte	0x19
 1057 05cf 0B       		.uleb128 0xb
 1058 05d0 D5020000 		.4byte	.LASF76
 1059 05d4 04       		.byte	0x4
 1060 05d5 9A02     		.2byte	0x29a
 1061 05d7 6B000000 		.4byte	0x6b
 1062 05db 1A       		.byte	0x1a
 1063 05dc 00       		.byte	0
 1064 05dd 0E       		.uleb128 0xe
 1065 05de 04       		.byte	0x4
 1066 05df A9000000 		.4byte	0xa9
 1067 05e3 04       		.uleb128 0x4
 1068 05e4 F4020000 		.4byte	.LASF77
 1069 05e8 04       		.byte	0x4
 1070 05e9 9B02     		.2byte	0x29b
 1071 05eb 5E050000 		.4byte	0x55e
 1072 05ef 0C       		.uleb128 0xc
 1073 05f0 1C       		.byte	0x1c
 1074 05f1 04       		.byte	0x4
 1075 05f2 CE02     		.2byte	0x2ce
 1076 05f4 6E060000 		.4byte	0x66e
 1077 05f8 0B       		.uleb128 0xb
 1078 05f9 F3060000 		.4byte	.LASF78
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc0leXkL.s 			page 36


 1079 05fd 04       		.byte	0x4
 1080 05fe D702     		.2byte	0x2d7
 1081 0600 6E060000 		.4byte	0x66e
 1082 0604 00       		.byte	0
 1083 0605 0B       		.uleb128 0xb
 1084 0606 89000000 		.4byte	.LASF79
 1085 060a 04       		.byte	0x4
 1086 060b DE02     		.2byte	0x2de
 1087 060d 75060000 		.4byte	0x675
 1088 0611 04       		.byte	0x4
 1089 0612 0B       		.uleb128 0xb
 1090 0613 65060000 		.4byte	.LASF80
 1091 0617 04       		.byte	0x4
 1092 0618 E402     		.2byte	0x2e4
 1093 061a 77060000 		.4byte	0x677
 1094 061e 08       		.byte	0x8
 1095 061f 0B       		.uleb128 0xb
 1096 0620 7C060000 		.4byte	.LASF81
 1097 0624 04       		.byte	0x4
 1098 0625 EA02     		.2byte	0x2ea
 1099 0627 75060000 		.4byte	0x675
 1100 062b 0C       		.byte	0xc
 1101 062c 0B       		.uleb128 0xb
 1102 062d F0010000 		.4byte	.LASF82
 1103 0631 04       		.byte	0x4
 1104 0632 F102     		.2byte	0x2f1
 1105 0634 7D060000 		.4byte	0x67d
 1106 0638 10       		.byte	0x10
 1107 0639 0B       		.uleb128 0xb
 1108 063a 17040000 		.4byte	.LASF83
 1109 063e 04       		.byte	0x4
 1110 063f F602     		.2byte	0x2f6
 1111 0641 83000000 		.4byte	0x83
 1112 0645 14       		.byte	0x14
 1113 0646 0B       		.uleb128 0xb
 1114 0647 7D000000 		.4byte	.LASF84
 1115 064b 04       		.byte	0x4
 1116 064c FD02     		.2byte	0x2fd
 1117 064e 77000000 		.4byte	0x77
 1118 0652 18       		.byte	0x18
 1119 0653 0B       		.uleb128 0xb
 1120 0654 DB020000 		.4byte	.LASF85
 1121 0658 04       		.byte	0x4
 1122 0659 0403     		.2byte	0x304
 1123 065b 6B000000 		.4byte	0x6b
 1124 065f 1A       		.byte	0x1a
 1125 0660 0B       		.uleb128 0xb
 1126 0661 30030000 		.4byte	.LASF86
 1127 0665 04       		.byte	0x4
 1128 0666 0E03     		.2byte	0x30e
 1129 0668 6B000000 		.4byte	0x6b
 1130 066c 1B       		.byte	0x1b
 1131 066d 00       		.byte	0
 1132 066e 0E       		.uleb128 0xe
 1133 066f 04       		.byte	0x4
 1134 0670 74060000 		.4byte	0x674
 1135 0674 0F       		.uleb128 0xf
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc0leXkL.s 			page 37


 1136 0675 10       		.uleb128 0x10
 1137 0676 04       		.byte	0x4
 1138 0677 0E       		.uleb128 0xe
 1139 0678 04       		.byte	0x4
 1140 0679 B1030000 		.4byte	0x3b1
 1141 067d 0E       		.uleb128 0xe
 1142 067e 04       		.byte	0x4
 1143 067f 6B000000 		.4byte	0x6b
 1144 0683 04       		.uleb128 0x4
 1145 0684 D1000000 		.4byte	.LASF87
 1146 0688 04       		.byte	0x4
 1147 0689 0F03     		.2byte	0x30f
 1148 068b EF050000 		.4byte	0x5ef
 1149 068f 0C       		.uleb128 0xc
 1150 0690 A8       		.byte	0xa8
 1151 0691 04       		.byte	0x4
 1152 0692 1503     		.2byte	0x315
 1153 0694 A6060000 		.4byte	0x6a6
 1154 0698 0B       		.uleb128 0xb
 1155 0699 8C060000 		.4byte	.LASF88
 1156 069d 04       		.byte	0x4
 1157 069e 1A03     		.2byte	0x31a
 1158 06a0 A6060000 		.4byte	0x6a6
 1159 06a4 00       		.byte	0
 1160 06a5 00       		.byte	0
 1161 06a6 08       		.uleb128 0x8
 1162 06a7 83060000 		.4byte	0x683
 1163 06ab B6060000 		.4byte	0x6b6
 1164 06af 09       		.uleb128 0x9
 1165 06b0 6F010000 		.4byte	0x16f
 1166 06b4 05       		.byte	0x5
 1167 06b5 00       		.byte	0
 1168 06b6 04       		.uleb128 0x4
 1169 06b7 00000000 		.4byte	.LASF89
 1170 06bb 04       		.byte	0x4
 1171 06bc 1B03     		.2byte	0x31b
 1172 06be 8F060000 		.4byte	0x68f
 1173 06c2 02       		.uleb128 0x2
 1174 06c3 08       		.byte	0x8
 1175 06c4 04       		.byte	0x4
 1176 06c5 4C030000 		.4byte	.LASF90
 1177 06c9 11       		.uleb128 0x11
 1178 06ca 13020000 		.4byte	.LASF94
 1179 06ce 01       		.byte	0x1
 1180 06cf F402     		.2byte	0x2f4
 1181 06d1 00000000 		.4byte	.LFB3
 1182 06d5 60000000 		.4byte	.LFE3-.LFB3
 1183 06d9 01       		.uleb128 0x1
 1184 06da 9C       		.byte	0x9c
 1185 06db 10070000 		.4byte	0x710
 1186 06df 12       		.uleb128 0x12
 1187 06e0 48000000 		.4byte	.LASF91
 1188 06e4 01       		.byte	0x1
 1189 06e5 F802     		.2byte	0x2f8
 1190 06e7 83000000 		.4byte	0x83
 1191 06eb 00000000 		.4byte	.LLST0
 1192 06ef 12       		.uleb128 0x12
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc0leXkL.s 			page 38


 1193 06f0 61000000 		.4byte	.LASF92
 1194 06f4 01       		.byte	0x1
 1195 06f5 F902     		.2byte	0x2f9
 1196 06f7 83000000 		.4byte	0x83
 1197 06fb 40000000 		.4byte	.LLST1
 1198 06ff 12       		.uleb128 0x12
 1199 0700 E4020000 		.4byte	.LASF93
 1200 0704 01       		.byte	0x1
 1201 0705 FA02     		.2byte	0x2fa
 1202 0707 10070000 		.4byte	0x710
 1203 070b 80000000 		.4byte	.LLST2
 1204 070f 00       		.byte	0
 1205 0710 0E       		.uleb128 0xe
 1206 0711 04       		.byte	0x4
 1207 0712 16070000 		.4byte	0x716
 1208 0716 13       		.uleb128 0x13
 1209 0717 76010000 		.4byte	0x176
 1210 071b 11       		.uleb128 0x11
 1211 071c 5E050000 		.4byte	.LASF95
 1212 0720 01       		.byte	0x1
 1213 0721 2D03     		.2byte	0x32d
 1214 0723 00000000 		.4byte	.LFB4
 1215 0727 BC000000 		.4byte	.LFE4-.LFB4
 1216 072b 01       		.uleb128 0x1
 1217 072c 9C       		.byte	0x9c
 1218 072d 66070000 		.4byte	0x766
 1219 0731 12       		.uleb128 0x12
 1220 0732 E4020000 		.4byte	.LASF93
 1221 0736 01       		.byte	0x1
 1222 0737 3503     		.2byte	0x335
 1223 0739 66070000 		.4byte	0x766
 1224 073d 93000000 		.4byte	.LLST3
 1225 0741 14       		.uleb128 0x14
 1226 0742 5E000000 		.4byte	.LVL11
 1227 0746 3A080000 		.4byte	0x83a
 1228 074a 14       		.uleb128 0x14
 1229 074b 6A000000 		.4byte	.LVL12
 1230 074f 46080000 		.4byte	0x846
 1231 0753 14       		.uleb128 0x14
 1232 0754 6E000000 		.4byte	.LVL13
 1233 0758 52080000 		.4byte	0x852
 1234 075c 14       		.uleb128 0x14
 1235 075d 8C000000 		.4byte	.LVL15
 1236 0761 5E080000 		.4byte	0x85e
 1237 0765 00       		.byte	0
 1238 0766 0E       		.uleb128 0xe
 1239 0767 04       		.byte	0x4
 1240 0768 76010000 		.4byte	0x176
 1241 076c 15       		.uleb128 0x15
 1242 076d C1010000 		.4byte	.LASF96
 1243 0771 01       		.byte	0x1
 1244 0772 79       		.byte	0x79
 1245 0773 00000000 		.4byte	.LFB1
 1246 0777 2C000000 		.4byte	.LFE1-.LFB1
 1247 077b 01       		.uleb128 0x1
 1248 077c 9C       		.byte	0x9c
 1249 077d 8B070000 		.4byte	0x78b
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc0leXkL.s 			page 39


 1250 0781 14       		.uleb128 0x14
 1251 0782 0E000000 		.4byte	.LVL18
 1252 0786 C9060000 		.4byte	0x6c9
 1253 078a 00       		.byte	0
 1254 078b 15       		.uleb128 0x15
 1255 078c A4050000 		.4byte	.LASF97
 1256 0790 01       		.byte	0x1
 1257 0791 ED       		.byte	0xed
 1258 0792 00000000 		.4byte	.LFB2
 1259 0796 48000000 		.4byte	.LFE2-.LFB2
 1260 079a 01       		.uleb128 0x1
 1261 079b 9C       		.byte	0x9c
 1262 079c D6070000 		.4byte	0x7d6
 1263 07a0 16       		.uleb128 0x16
 1264 07a1 39020000 		.4byte	.LASF98
 1265 07a5 01       		.byte	0x1
 1266 07a6 F0       		.byte	0xf0
 1267 07a7 D6070000 		.4byte	0x7d6
 1268 07ab BC000000 		.4byte	.LLST4
 1269 07af 14       		.uleb128 0x14
 1270 07b0 2C000000 		.4byte	.LVL20
 1271 07b4 C9060000 		.4byte	0x6c9
 1272 07b8 17       		.uleb128 0x17
 1273 07b9 32000000 		.4byte	.LVL21
 1274 07bd 69080000 		.4byte	0x869
 1275 07c1 CC070000 		.4byte	0x7cc
 1276 07c5 18       		.uleb128 0x18
 1277 07c6 01       		.uleb128 0x1
 1278 07c7 50       		.byte	0x50
 1279 07c8 02       		.uleb128 0x2
 1280 07c9 74       		.byte	0x74
 1281 07ca 00       		.sleb128 0
 1282 07cb 00       		.byte	0
 1283 07cc 14       		.uleb128 0x14
 1284 07cd 36000000 		.4byte	.LVL22
 1285 07d1 1B070000 		.4byte	0x71b
 1286 07d5 00       		.byte	0
 1287 07d6 0E       		.uleb128 0xe
 1288 07d7 04       		.byte	0x4
 1289 07d8 DC070000 		.4byte	0x7dc
 1290 07dc 13       		.uleb128 0x13
 1291 07dd E3050000 		.4byte	0x5e3
 1292 07e1 19       		.uleb128 0x19
 1293 07e2 18030000 		.4byte	.LASF99
 1294 07e6 04       		.byte	0x4
 1295 07e7 0C05     		.2byte	0x50c
 1296 07e9 52050000 		.4byte	0x552
 1297 07ed 19       		.uleb128 0x19
 1298 07ee 96060000 		.4byte	.LASF100
 1299 07f2 04       		.byte	0x4
 1300 07f3 0D05     		.2byte	0x50d
 1301 07f5 F9070000 		.4byte	0x7f9
 1302 07f9 13       		.uleb128 0x13
 1303 07fa B6060000 		.4byte	0x6b6
 1304 07fe 1A       		.uleb128 0x1a
 1305 07ff 97030000 		.4byte	.LASF101
 1306 0803 05       		.byte	0x5
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc0leXkL.s 			page 40


 1307 0804 B1       		.byte	0xb1
 1308 0805 A4000000 		.4byte	0xa4
 1309 0809 1A       		.uleb128 0x1a
 1310 080a 0A070000 		.4byte	.LASF102
 1311 080e 05       		.byte	0x5
 1312 080f B2       		.byte	0xb2
 1313 0810 A4000000 		.4byte	0xa4
 1314 0814 1A       		.uleb128 0x1a
 1315 0815 0D050000 		.4byte	.LASF103
 1316 0819 05       		.byte	0x5
 1317 081a B3       		.byte	0xb3
 1318 081b 6B000000 		.4byte	0x6b
 1319 081f 1A       		.uleb128 0x1a
 1320 0820 1D060000 		.4byte	.LASF104
 1321 0824 05       		.byte	0x5
 1322 0825 B5       		.byte	0xb5
 1323 0826 77060000 		.4byte	0x677
 1324 082a 1A       		.uleb128 0x1a
 1325 082b DC060000 		.4byte	.LASF105
 1326 082f 05       		.byte	0x5
 1327 0830 BC       		.byte	0xbc
 1328 0831 35080000 		.4byte	0x835
 1329 0835 13       		.uleb128 0x13
 1330 0836 6B000000 		.4byte	0x6b
 1331 083a 1B       		.uleb128 0x1b
 1332 083b 4C060000 		.4byte	.LASF106
 1333 083f 4C060000 		.4byte	.LASF106
 1334 0843 06       		.byte	0x6
 1335 0844 A301     		.2byte	0x1a3
 1336 0846 1B       		.uleb128 0x1b
 1337 0847 C4030000 		.4byte	.LASF107
 1338 084b C4030000 		.4byte	.LASF107
 1339 084f 06       		.byte	0x6
 1340 0850 B101     		.2byte	0x1b1
 1341 0852 1B       		.uleb128 0x1b
 1342 0853 EB040000 		.4byte	.LASF108
 1343 0857 EB040000 		.4byte	.LASF108
 1344 085b 06       		.byte	0x6
 1345 085c A201     		.2byte	0x1a2
 1346 085e 1C       		.uleb128 0x1c
 1347 085f 8F020000 		.4byte	.LASF109
 1348 0863 8F020000 		.4byte	.LASF109
 1349 0867 05       		.byte	0x5
 1350 0868 83       		.byte	0x83
 1351 0869 1B       		.uleb128 0x1b
 1352 086a B2020000 		.4byte	.LASF110
 1353 086e B2020000 		.4byte	.LASF110
 1354 0872 06       		.byte	0x6
 1355 0873 9201     		.2byte	0x192
 1356 0875 00       		.byte	0
 1357              		.section	.debug_abbrev,"",%progbits
 1358              	.Ldebug_abbrev0:
 1359 0000 01       		.uleb128 0x1
 1360 0001 11       		.uleb128 0x11
 1361 0002 01       		.byte	0x1
 1362 0003 25       		.uleb128 0x25
 1363 0004 0E       		.uleb128 0xe
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc0leXkL.s 			page 41


 1364 0005 13       		.uleb128 0x13
 1365 0006 0B       		.uleb128 0xb
 1366 0007 03       		.uleb128 0x3
 1367 0008 0E       		.uleb128 0xe
 1368 0009 1B       		.uleb128 0x1b
 1369 000a 0E       		.uleb128 0xe
 1370 000b 55       		.uleb128 0x55
 1371 000c 17       		.uleb128 0x17
 1372 000d 11       		.uleb128 0x11
 1373 000e 01       		.uleb128 0x1
 1374 000f 10       		.uleb128 0x10
 1375 0010 17       		.uleb128 0x17
 1376 0011 00       		.byte	0
 1377 0012 00       		.byte	0
 1378 0013 02       		.uleb128 0x2
 1379 0014 24       		.uleb128 0x24
 1380 0015 00       		.byte	0
 1381 0016 0B       		.uleb128 0xb
 1382 0017 0B       		.uleb128 0xb
 1383 0018 3E       		.uleb128 0x3e
 1384 0019 0B       		.uleb128 0xb
 1385 001a 03       		.uleb128 0x3
 1386 001b 0E       		.uleb128 0xe
 1387 001c 00       		.byte	0
 1388 001d 00       		.byte	0
 1389 001e 03       		.uleb128 0x3
 1390 001f 24       		.uleb128 0x24
 1391 0020 00       		.byte	0
 1392 0021 0B       		.uleb128 0xb
 1393 0022 0B       		.uleb128 0xb
 1394 0023 3E       		.uleb128 0x3e
 1395 0024 0B       		.uleb128 0xb
 1396 0025 03       		.uleb128 0x3
 1397 0026 08       		.uleb128 0x8
 1398 0027 00       		.byte	0
 1399 0028 00       		.byte	0
 1400 0029 04       		.uleb128 0x4
 1401 002a 16       		.uleb128 0x16
 1402 002b 00       		.byte	0
 1403 002c 03       		.uleb128 0x3
 1404 002d 0E       		.uleb128 0xe
 1405 002e 3A       		.uleb128 0x3a
 1406 002f 0B       		.uleb128 0xb
 1407 0030 3B       		.uleb128 0x3b
 1408 0031 05       		.uleb128 0x5
 1409 0032 49       		.uleb128 0x49
 1410 0033 13       		.uleb128 0x13
 1411 0034 00       		.byte	0
 1412 0035 00       		.byte	0
 1413 0036 05       		.uleb128 0x5
 1414 0037 35       		.uleb128 0x35
 1415 0038 00       		.byte	0
 1416 0039 49       		.uleb128 0x49
 1417 003a 13       		.uleb128 0x13
 1418 003b 00       		.byte	0
 1419 003c 00       		.byte	0
 1420 003d 06       		.uleb128 0x6
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc0leXkL.s 			page 42


 1421 003e 13       		.uleb128 0x13
 1422 003f 01       		.byte	0x1
 1423 0040 0B       		.uleb128 0xb
 1424 0041 0B       		.uleb128 0xb
 1425 0042 3A       		.uleb128 0x3a
 1426 0043 0B       		.uleb128 0xb
 1427 0044 3B       		.uleb128 0x3b
 1428 0045 0B       		.uleb128 0xb
 1429 0046 01       		.uleb128 0x1
 1430 0047 13       		.uleb128 0x13
 1431 0048 00       		.byte	0
 1432 0049 00       		.byte	0
 1433 004a 07       		.uleb128 0x7
 1434 004b 0D       		.uleb128 0xd
 1435 004c 00       		.byte	0
 1436 004d 03       		.uleb128 0x3
 1437 004e 0E       		.uleb128 0xe
 1438 004f 3A       		.uleb128 0x3a
 1439 0050 0B       		.uleb128 0xb
 1440 0051 3B       		.uleb128 0x3b
 1441 0052 0B       		.uleb128 0xb
 1442 0053 49       		.uleb128 0x49
 1443 0054 13       		.uleb128 0x13
 1444 0055 38       		.uleb128 0x38
 1445 0056 0B       		.uleb128 0xb
 1446 0057 00       		.byte	0
 1447 0058 00       		.byte	0
 1448 0059 08       		.uleb128 0x8
 1449 005a 01       		.uleb128 0x1
 1450 005b 01       		.byte	0x1
 1451 005c 49       		.uleb128 0x49
 1452 005d 13       		.uleb128 0x13
 1453 005e 01       		.uleb128 0x1
 1454 005f 13       		.uleb128 0x13
 1455 0060 00       		.byte	0
 1456 0061 00       		.byte	0
 1457 0062 09       		.uleb128 0x9
 1458 0063 21       		.uleb128 0x21
 1459 0064 00       		.byte	0
 1460 0065 49       		.uleb128 0x49
 1461 0066 13       		.uleb128 0x13
 1462 0067 2F       		.uleb128 0x2f
 1463 0068 0B       		.uleb128 0xb
 1464 0069 00       		.byte	0
 1465 006a 00       		.byte	0
 1466 006b 0A       		.uleb128 0xa
 1467 006c 16       		.uleb128 0x16
 1468 006d 00       		.byte	0
 1469 006e 03       		.uleb128 0x3
 1470 006f 0E       		.uleb128 0xe
 1471 0070 3A       		.uleb128 0x3a
 1472 0071 0B       		.uleb128 0xb
 1473 0072 3B       		.uleb128 0x3b
 1474 0073 0B       		.uleb128 0xb
 1475 0074 49       		.uleb128 0x49
 1476 0075 13       		.uleb128 0x13
 1477 0076 00       		.byte	0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc0leXkL.s 			page 43


 1478 0077 00       		.byte	0
 1479 0078 0B       		.uleb128 0xb
 1480 0079 0D       		.uleb128 0xd
 1481 007a 00       		.byte	0
 1482 007b 03       		.uleb128 0x3
 1483 007c 0E       		.uleb128 0xe
 1484 007d 3A       		.uleb128 0x3a
 1485 007e 0B       		.uleb128 0xb
 1486 007f 3B       		.uleb128 0x3b
 1487 0080 05       		.uleb128 0x5
 1488 0081 49       		.uleb128 0x49
 1489 0082 13       		.uleb128 0x13
 1490 0083 38       		.uleb128 0x38
 1491 0084 0B       		.uleb128 0xb
 1492 0085 00       		.byte	0
 1493 0086 00       		.byte	0
 1494 0087 0C       		.uleb128 0xc
 1495 0088 13       		.uleb128 0x13
 1496 0089 01       		.byte	0x1
 1497 008a 0B       		.uleb128 0xb
 1498 008b 0B       		.uleb128 0xb
 1499 008c 3A       		.uleb128 0x3a
 1500 008d 0B       		.uleb128 0xb
 1501 008e 3B       		.uleb128 0x3b
 1502 008f 05       		.uleb128 0x5
 1503 0090 01       		.uleb128 0x1
 1504 0091 13       		.uleb128 0x13
 1505 0092 00       		.byte	0
 1506 0093 00       		.byte	0
 1507 0094 0D       		.uleb128 0xd
 1508 0095 0D       		.uleb128 0xd
 1509 0096 00       		.byte	0
 1510 0097 03       		.uleb128 0x3
 1511 0098 08       		.uleb128 0x8
 1512 0099 3A       		.uleb128 0x3a
 1513 009a 0B       		.uleb128 0xb
 1514 009b 3B       		.uleb128 0x3b
 1515 009c 05       		.uleb128 0x5
 1516 009d 49       		.uleb128 0x49
 1517 009e 13       		.uleb128 0x13
 1518 009f 38       		.uleb128 0x38
 1519 00a0 0B       		.uleb128 0xb
 1520 00a1 00       		.byte	0
 1521 00a2 00       		.byte	0
 1522 00a3 0E       		.uleb128 0xe
 1523 00a4 0F       		.uleb128 0xf
 1524 00a5 00       		.byte	0
 1525 00a6 0B       		.uleb128 0xb
 1526 00a7 0B       		.uleb128 0xb
 1527 00a8 49       		.uleb128 0x49
 1528 00a9 13       		.uleb128 0x13
 1529 00aa 00       		.byte	0
 1530 00ab 00       		.byte	0
 1531 00ac 0F       		.uleb128 0xf
 1532 00ad 26       		.uleb128 0x26
 1533 00ae 00       		.byte	0
 1534 00af 00       		.byte	0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc0leXkL.s 			page 44


 1535 00b0 00       		.byte	0
 1536 00b1 10       		.uleb128 0x10
 1537 00b2 0F       		.uleb128 0xf
 1538 00b3 00       		.byte	0
 1539 00b4 0B       		.uleb128 0xb
 1540 00b5 0B       		.uleb128 0xb
 1541 00b6 00       		.byte	0
 1542 00b7 00       		.byte	0
 1543 00b8 11       		.uleb128 0x11
 1544 00b9 2E       		.uleb128 0x2e
 1545 00ba 01       		.byte	0x1
 1546 00bb 03       		.uleb128 0x3
 1547 00bc 0E       		.uleb128 0xe
 1548 00bd 3A       		.uleb128 0x3a
 1549 00be 0B       		.uleb128 0xb
 1550 00bf 3B       		.uleb128 0x3b
 1551 00c0 05       		.uleb128 0x5
 1552 00c1 27       		.uleb128 0x27
 1553 00c2 19       		.uleb128 0x19
 1554 00c3 11       		.uleb128 0x11
 1555 00c4 01       		.uleb128 0x1
 1556 00c5 12       		.uleb128 0x12
 1557 00c6 06       		.uleb128 0x6
 1558 00c7 40       		.uleb128 0x40
 1559 00c8 18       		.uleb128 0x18
 1560 00c9 9742     		.uleb128 0x2117
 1561 00cb 19       		.uleb128 0x19
 1562 00cc 01       		.uleb128 0x1
 1563 00cd 13       		.uleb128 0x13
 1564 00ce 00       		.byte	0
 1565 00cf 00       		.byte	0
 1566 00d0 12       		.uleb128 0x12
 1567 00d1 34       		.uleb128 0x34
 1568 00d2 00       		.byte	0
 1569 00d3 03       		.uleb128 0x3
 1570 00d4 0E       		.uleb128 0xe
 1571 00d5 3A       		.uleb128 0x3a
 1572 00d6 0B       		.uleb128 0xb
 1573 00d7 3B       		.uleb128 0x3b
 1574 00d8 05       		.uleb128 0x5
 1575 00d9 49       		.uleb128 0x49
 1576 00da 13       		.uleb128 0x13
 1577 00db 02       		.uleb128 0x2
 1578 00dc 17       		.uleb128 0x17
 1579 00dd 00       		.byte	0
 1580 00de 00       		.byte	0
 1581 00df 13       		.uleb128 0x13
 1582 00e0 26       		.uleb128 0x26
 1583 00e1 00       		.byte	0
 1584 00e2 49       		.uleb128 0x49
 1585 00e3 13       		.uleb128 0x13
 1586 00e4 00       		.byte	0
 1587 00e5 00       		.byte	0
 1588 00e6 14       		.uleb128 0x14
 1589 00e7 898201   		.uleb128 0x4109
 1590 00ea 00       		.byte	0
 1591 00eb 11       		.uleb128 0x11
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc0leXkL.s 			page 45


 1592 00ec 01       		.uleb128 0x1
 1593 00ed 31       		.uleb128 0x31
 1594 00ee 13       		.uleb128 0x13
 1595 00ef 00       		.byte	0
 1596 00f0 00       		.byte	0
 1597 00f1 15       		.uleb128 0x15
 1598 00f2 2E       		.uleb128 0x2e
 1599 00f3 01       		.byte	0x1
 1600 00f4 3F       		.uleb128 0x3f
 1601 00f5 19       		.uleb128 0x19
 1602 00f6 03       		.uleb128 0x3
 1603 00f7 0E       		.uleb128 0xe
 1604 00f8 3A       		.uleb128 0x3a
 1605 00f9 0B       		.uleb128 0xb
 1606 00fa 3B       		.uleb128 0x3b
 1607 00fb 0B       		.uleb128 0xb
 1608 00fc 27       		.uleb128 0x27
 1609 00fd 19       		.uleb128 0x19
 1610 00fe 11       		.uleb128 0x11
 1611 00ff 01       		.uleb128 0x1
 1612 0100 12       		.uleb128 0x12
 1613 0101 06       		.uleb128 0x6
 1614 0102 40       		.uleb128 0x40
 1615 0103 18       		.uleb128 0x18
 1616 0104 9742     		.uleb128 0x2117
 1617 0106 19       		.uleb128 0x19
 1618 0107 01       		.uleb128 0x1
 1619 0108 13       		.uleb128 0x13
 1620 0109 00       		.byte	0
 1621 010a 00       		.byte	0
 1622 010b 16       		.uleb128 0x16
 1623 010c 34       		.uleb128 0x34
 1624 010d 00       		.byte	0
 1625 010e 03       		.uleb128 0x3
 1626 010f 0E       		.uleb128 0xe
 1627 0110 3A       		.uleb128 0x3a
 1628 0111 0B       		.uleb128 0xb
 1629 0112 3B       		.uleb128 0x3b
 1630 0113 0B       		.uleb128 0xb
 1631 0114 49       		.uleb128 0x49
 1632 0115 13       		.uleb128 0x13
 1633 0116 02       		.uleb128 0x2
 1634 0117 17       		.uleb128 0x17
 1635 0118 00       		.byte	0
 1636 0119 00       		.byte	0
 1637 011a 17       		.uleb128 0x17
 1638 011b 898201   		.uleb128 0x4109
 1639 011e 01       		.byte	0x1
 1640 011f 11       		.uleb128 0x11
 1641 0120 01       		.uleb128 0x1
 1642 0121 31       		.uleb128 0x31
 1643 0122 13       		.uleb128 0x13
 1644 0123 01       		.uleb128 0x1
 1645 0124 13       		.uleb128 0x13
 1646 0125 00       		.byte	0
 1647 0126 00       		.byte	0
 1648 0127 18       		.uleb128 0x18
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc0leXkL.s 			page 46


 1649 0128 8A8201   		.uleb128 0x410a
 1650 012b 00       		.byte	0
 1651 012c 02       		.uleb128 0x2
 1652 012d 18       		.uleb128 0x18
 1653 012e 9142     		.uleb128 0x2111
 1654 0130 18       		.uleb128 0x18
 1655 0131 00       		.byte	0
 1656 0132 00       		.byte	0
 1657 0133 19       		.uleb128 0x19
 1658 0134 34       		.uleb128 0x34
 1659 0135 00       		.byte	0
 1660 0136 03       		.uleb128 0x3
 1661 0137 0E       		.uleb128 0xe
 1662 0138 3A       		.uleb128 0x3a
 1663 0139 0B       		.uleb128 0xb
 1664 013a 3B       		.uleb128 0x3b
 1665 013b 05       		.uleb128 0x5
 1666 013c 49       		.uleb128 0x49
 1667 013d 13       		.uleb128 0x13
 1668 013e 3F       		.uleb128 0x3f
 1669 013f 19       		.uleb128 0x19
 1670 0140 3C       		.uleb128 0x3c
 1671 0141 19       		.uleb128 0x19
 1672 0142 00       		.byte	0
 1673 0143 00       		.byte	0
 1674 0144 1A       		.uleb128 0x1a
 1675 0145 34       		.uleb128 0x34
 1676 0146 00       		.byte	0
 1677 0147 03       		.uleb128 0x3
 1678 0148 0E       		.uleb128 0xe
 1679 0149 3A       		.uleb128 0x3a
 1680 014a 0B       		.uleb128 0xb
 1681 014b 3B       		.uleb128 0x3b
 1682 014c 0B       		.uleb128 0xb
 1683 014d 49       		.uleb128 0x49
 1684 014e 13       		.uleb128 0x13
 1685 014f 3F       		.uleb128 0x3f
 1686 0150 19       		.uleb128 0x19
 1687 0151 3C       		.uleb128 0x3c
 1688 0152 19       		.uleb128 0x19
 1689 0153 00       		.byte	0
 1690 0154 00       		.byte	0
 1691 0155 1B       		.uleb128 0x1b
 1692 0156 2E       		.uleb128 0x2e
 1693 0157 00       		.byte	0
 1694 0158 3F       		.uleb128 0x3f
 1695 0159 19       		.uleb128 0x19
 1696 015a 3C       		.uleb128 0x3c
 1697 015b 19       		.uleb128 0x19
 1698 015c 6E       		.uleb128 0x6e
 1699 015d 0E       		.uleb128 0xe
 1700 015e 03       		.uleb128 0x3
 1701 015f 0E       		.uleb128 0xe
 1702 0160 3A       		.uleb128 0x3a
 1703 0161 0B       		.uleb128 0xb
 1704 0162 3B       		.uleb128 0x3b
 1705 0163 05       		.uleb128 0x5
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc0leXkL.s 			page 47


 1706 0164 00       		.byte	0
 1707 0165 00       		.byte	0
 1708 0166 1C       		.uleb128 0x1c
 1709 0167 2E       		.uleb128 0x2e
 1710 0168 00       		.byte	0
 1711 0169 3F       		.uleb128 0x3f
 1712 016a 19       		.uleb128 0x19
 1713 016b 3C       		.uleb128 0x3c
 1714 016c 19       		.uleb128 0x19
 1715 016d 6E       		.uleb128 0x6e
 1716 016e 0E       		.uleb128 0xe
 1717 016f 03       		.uleb128 0x3
 1718 0170 0E       		.uleb128 0xe
 1719 0171 3A       		.uleb128 0x3a
 1720 0172 0B       		.uleb128 0xb
 1721 0173 3B       		.uleb128 0x3b
 1722 0174 0B       		.uleb128 0xb
 1723 0175 00       		.byte	0
 1724 0176 00       		.byte	0
 1725 0177 00       		.byte	0
 1726              		.section	.debug_loc,"",%progbits
 1727              	.Ldebug_loc0:
 1728              	.LLST0:
 1729 0000 1A000000 		.4byte	.LVL1
 1730 0004 2A000000 		.4byte	.LVL5
 1731 0008 0100     		.2byte	0x1
 1732 000a 52       		.byte	0x52
 1733 000b 2A000000 		.4byte	.LVL5
 1734 000f 34000000 		.4byte	.LVL6
 1735 0013 0700     		.2byte	0x7
 1736 0015 71       		.byte	0x71
 1737 0016 00       		.sleb128 0
 1738 0017 40       		.byte	0x40
 1739 0018 24       		.byte	0x24
 1740 0019 40       		.byte	0x40
 1741 001a 25       		.byte	0x25
 1742 001b 9F       		.byte	0x9f
 1743 001c 34000000 		.4byte	.LVL6
 1744 0020 36000000 		.4byte	.LVL7
 1745 0024 0100     		.2byte	0x1
 1746 0026 52       		.byte	0x52
 1747 0027 36000000 		.4byte	.LVL7
 1748 002b 38000000 		.4byte	.LVL8
 1749 002f 0700     		.2byte	0x7
 1750 0031 71       		.byte	0x71
 1751 0032 00       		.sleb128 0
 1752 0033 40       		.byte	0x40
 1753 0034 24       		.byte	0x24
 1754 0035 40       		.byte	0x40
 1755 0036 25       		.byte	0x25
 1756 0037 9F       		.byte	0x9f
 1757 0038 00000000 		.4byte	0
 1758 003c 00000000 		.4byte	0
 1759              	.LLST1:
 1760 0040 22000000 		.4byte	.LVL3
 1761 0044 28000000 		.4byte	.LVL4
 1762 0048 0100     		.2byte	0x1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc0leXkL.s 			page 48


 1763 004a 53       		.byte	0x53
 1764 004b 28000000 		.4byte	.LVL4
 1765 004f 34000000 		.4byte	.LVL6
 1766 0053 0700     		.2byte	0x7
 1767 0055 31       		.byte	0x31
 1768 0056 70       		.byte	0x70
 1769 0057 00       		.sleb128 0
 1770 0058 24       		.byte	0x24
 1771 0059 31       		.byte	0x31
 1772 005a 1C       		.byte	0x1c
 1773 005b 9F       		.byte	0x9f
 1774 005c 34000000 		.4byte	.LVL6
 1775 0060 40000000 		.4byte	.LVL9
 1776 0064 0100     		.2byte	0x1
 1777 0066 53       		.byte	0x53
 1778 0067 40000000 		.4byte	.LVL9
 1779 006b 60000000 		.4byte	.LFE3
 1780 006f 0700     		.2byte	0x7
 1781 0071 31       		.byte	0x31
 1782 0072 70       		.byte	0x70
 1783 0073 00       		.sleb128 0
 1784 0074 24       		.byte	0x24
 1785 0075 31       		.byte	0x31
 1786 0076 1C       		.byte	0x1c
 1787 0077 9F       		.byte	0x9f
 1788 0078 00000000 		.4byte	0
 1789 007c 00000000 		.4byte	0
 1790              	.LLST2:
 1791 0080 12000000 		.4byte	.LVL0
 1792 0084 1E000000 		.4byte	.LVL2
 1793 0088 0100     		.2byte	0x1
 1794 008a 53       		.byte	0x53
 1795 008b 00000000 		.4byte	0
 1796 008f 00000000 		.4byte	0
 1797              	.LLST3:
 1798 0093 14000000 		.4byte	.LVL10
 1799 0097 5D000000 		.4byte	.LVL11-1
 1800 009b 0100     		.2byte	0x1
 1801 009d 50       		.byte	0x50
 1802 009e 70000000 		.4byte	.LVL14
 1803 00a2 8B000000 		.4byte	.LVL15-1
 1804 00a6 0100     		.2byte	0x1
 1805 00a8 50       		.byte	0x50
 1806 00a9 8E000000 		.4byte	.LVL16
 1807 00ad 9E000000 		.4byte	.LVL17
 1808 00b1 0100     		.2byte	0x1
 1809 00b3 50       		.byte	0x50
 1810 00b4 00000000 		.4byte	0
 1811 00b8 00000000 		.4byte	0
 1812              	.LLST4:
 1813 00bc 20000000 		.4byte	.LVL19
 1814 00c0 36000000 		.4byte	.LVL23
 1815 00c4 0100     		.2byte	0x1
 1816 00c6 54       		.byte	0x54
 1817 00c7 00000000 		.4byte	0
 1818 00cb 00000000 		.4byte	0
 1819              		.section	.debug_aranges,"",%progbits
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc0leXkL.s 			page 49


 1820 0000 34000000 		.4byte	0x34
 1821 0004 0200     		.2byte	0x2
 1822 0006 00000000 		.4byte	.Ldebug_info0
 1823 000a 04       		.byte	0x4
 1824 000b 00       		.byte	0
 1825 000c 0000     		.2byte	0
 1826 000e 0000     		.2byte	0
 1827 0010 00000000 		.4byte	.LFB3
 1828 0014 60000000 		.4byte	.LFE3-.LFB3
 1829 0018 00000000 		.4byte	.LFB4
 1830 001c BC000000 		.4byte	.LFE4-.LFB4
 1831 0020 00000000 		.4byte	.LFB1
 1832 0024 2C000000 		.4byte	.LFE1-.LFB1
 1833 0028 00000000 		.4byte	.LFB2
 1834 002c 48000000 		.4byte	.LFE2-.LFB2
 1835 0030 00000000 		.4byte	0
 1836 0034 00000000 		.4byte	0
 1837              		.section	.debug_ranges,"",%progbits
 1838              	.Ldebug_ranges0:
 1839 0000 00000000 		.4byte	.LFB3
 1840 0004 60000000 		.4byte	.LFE3
 1841 0008 00000000 		.4byte	.LFB4
 1842 000c BC000000 		.4byte	.LFE4
 1843 0010 00000000 		.4byte	.LFB1
 1844 0014 2C000000 		.4byte	.LFE1
 1845 0018 00000000 		.4byte	.LFB2
 1846 001c 48000000 		.4byte	.LFE2
 1847 0020 00000000 		.4byte	0
 1848 0024 00000000 		.4byte	0
 1849              		.section	.debug_line,"",%progbits
 1850              	.Ldebug_line0:
 1851 0000 34010000 		.section	.debug_str,"MS",%progbits,1
 1851      0200AF00 
 1851      00000201 
 1851      FB0E0D00 
 1851      01010101 
 1852              	.LASF89:
 1853 0000 43617053 		.ascii	"CapSense_FLASH_STRUCT\000"
 1853      656E7365 
 1853      5F464C41 
 1853      53485F53 
 1853      54525543 
 1854              	.LASF59:
 1855 0016 77646774 		.ascii	"wdgtList\000"
 1855      4C697374 
 1855      00
 1856              	.LASF64:
 1857 001f 736E7254 		.ascii	"snrTestRawCount\000"
 1857      65737452 
 1857      6177436F 
 1857      756E7400 
 1858              	.LASF66:
 1859 002f 7363616E 		.ascii	"scanCurrentISC\000"
 1859      43757272 
 1859      656E7449 
 1859      534300
 1860              	.LASF38:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc0leXkL.s 			page 50


 1861 003e 666F726D 		.ascii	"formation\000"
 1861      6174696F 
 1861      6E00
 1862              	.LASF91:
 1863 0048 746D7052 		.ascii	"tmpRawData\000"
 1863      61774461 
 1863      746100
 1864              	.LASF26:
 1865 0053 69646163 		.ascii	"idacGainIndex\000"
 1865      4761696E 
 1865      496E6465 
 1865      7800
 1866              	.LASF92:
 1867 0061 746D704D 		.ascii	"tmpMaxCount\000"
 1867      6178436F 
 1867      756E7400 
 1868              	.LASF24:
 1869 006d 6C6F7742 		.ascii	"lowBslnRst\000"
 1869      736C6E52 
 1869      737400
 1870              	.LASF43:
 1871 0078 64696666 		.ascii	"diff\000"
 1871      00
 1872              	.LASF84:
 1873 007d 746F7461 		.ascii	"totalNumSns\000"
 1873      6C4E756D 
 1873      536E7300 
 1874              	.LASF79:
 1875 0089 70747232 		.ascii	"ptr2WdgtRam\000"
 1875      57646774 
 1875      52616D00 
 1876              	.LASF25:
 1877 0095 69646163 		.ascii	"idacMod\000"
 1877      4D6F6400 
 1878              	.LASF69:
 1879 009d 70635074 		.ascii	"pcPtr\000"
 1879      7200
 1880              	.LASF2:
 1881 00a3 73686F72 		.ascii	"short int\000"
 1881      7420696E 
 1881      7400
 1882              	.LASF68:
 1883 00ad 6873696F 		.ascii	"hsiomPtr\000"
 1883      6D507472 
 1883      00
 1884              	.LASF23:
 1885 00b6 6F6E4465 		.ascii	"onDebounce\000"
 1885      626F756E 
 1885      636500
 1886              	.LASF34:
 1887 00c1 766F6C5F 		.ascii	"vol_up\000"
 1887      757000
 1888              	.LASF29:
 1889 00c8 73697A65 		.ascii	"sizetype\000"
 1889      74797065 
 1889      00
 1890              	.LASF87:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc0leXkL.s 			page 51


 1891 00d1 43617053 		.ascii	"CapSense_FLASH_WD_STRUCT\000"
 1891      656E7365 
 1891      5F464C41 
 1891      53485F57 
 1891      445F5354 
 1892              	.LASF48:
 1893 00ea 636F6E66 		.ascii	"configId\000"
 1893      69674964 
 1893      00
 1894              	.LASF111:
 1895 00f3 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1895      43313120 
 1895      352E342E 
 1895      31203230 
 1895      31363036 
 1896 0126 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 1896      20726576 
 1896      6973696F 
 1896      6E203233 
 1896      37373135 
 1897 0159 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 1897      67202D66 
 1897      66756E63 
 1897      74696F6E 
 1897      2D736563 
 1898              	.LASF45:
 1899 0185 69646163 		.ascii	"idacComp\000"
 1899      436F6D70 
 1899      00
 1900              	.LASF57:
 1901 018e 63736430 		.ascii	"csd0Config\000"
 1901      436F6E66 
 1901      696700
 1902              	.LASF32:
 1903 0199 70726F78 		.ascii	"proxTouchTh\000"
 1903      546F7563 
 1903      68546800 
 1904              	.LASF39:
 1905 01a5 70726F78 		.ascii	"prox\000"
 1905      00
 1906              	.LASF72:
 1907 01aa 6873696F 		.ascii	"hsiomMask\000"
 1907      6D4D6173 
 1907      6B00
 1908              	.LASF28:
 1909 01b4 736E7343 		.ascii	"snsClkSource\000"
 1909      6C6B536F 
 1909      75726365 
 1909      00
 1910              	.LASF96:
 1911 01c1 43617053 		.ascii	"CapSense_CSDPostSingleScan\000"
 1911      656E7365 
 1911      5F435344 
 1911      506F7374 
 1911      53696E67 
 1912              	.LASF20:
 1913 01dc 6E6F6973 		.ascii	"noiseTh\000"
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc0leXkL.s 			page 52


 1913      65546800 
 1914              	.LASF41:
 1915 01e4 62736C6E 		.ascii	"bsln\000"
 1915      00
 1916              	.LASF10:
 1917 01e9 75696E74 		.ascii	"uint16\000"
 1917      313600
 1918              	.LASF82:
 1919 01f0 70747232 		.ascii	"ptr2DebounceArr\000"
 1919      4465626F 
 1919      756E6365 
 1919      41727200 
 1920              	.LASF9:
 1921 0200 75696E74 		.ascii	"uint8\000"
 1921      3800
 1922              	.LASF71:
 1923 0206 70735074 		.ascii	"psPtr\000"
 1923      7200
 1924              	.LASF27:
 1925 020c 736E7343 		.ascii	"snsClk\000"
 1925      6C6B00
 1926              	.LASF94:
 1927 0213 43617053 		.ascii	"CapSense_SsCSDPostScan\000"
 1927      656E7365 
 1927      5F537343 
 1927      5344506F 
 1927      73745363 
 1928              	.LASF35:
 1929 022a 766F6C5F 		.ascii	"vol_down\000"
 1929      646F776E 
 1929      00
 1930              	.LASF12:
 1931 0233 666C6F61 		.ascii	"float\000"
 1931      7400
 1932              	.LASF98:
 1933 0239 63757253 		.ascii	"curSnsIOPtr\000"
 1933      6E73494F 
 1933      50747200 
 1934              	.LASF40:
 1935 0245 43617053 		.ascii	"CapSense_RAM_WD_LIST_STRUCT\000"
 1935      656E7365 
 1935      5F52414D 
 1935      5F57445F 
 1935      4C495354 
 1936              	.LASF62:
 1937 0261 736E7254 		.ascii	"snrTestSensorId\000"
 1937      65737453 
 1937      656E736F 
 1937      72496400 
 1938              	.LASF31:
 1939 0271 43617053 		.ascii	"CapSense_RAM_WD_BUTTON_STRUCT\000"
 1939      656E7365 
 1939      5F52414D 
 1939      5F57445F 
 1939      42555454 
 1940              	.LASF109:
 1941 028f 43617053 		.ascii	"CapSense_SsPostAllWidgetsScan\000"
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc0leXkL.s 			page 53


 1941      656E7365 
 1941      5F537350 
 1941      6F737441 
 1941      6C6C5769 
 1942              	.LASF14:
 1943 02ad 63686172 		.ascii	"char\000"
 1943      00
 1944              	.LASF110:
 1945 02b2 43617053 		.ascii	"CapSense_CSDDisconnectSns\000"
 1945      656E7365 
 1945      5F435344 
 1945      44697363 
 1945      6F6E6E65 
 1946              	.LASF4:
 1947 02cc 6C6F6E67 		.ascii	"long int\000"
 1947      20696E74 
 1947      00
 1948              	.LASF76:
 1949 02d5 73686966 		.ascii	"shift\000"
 1949      7400
 1950              	.LASF85:
 1951 02db 77646774 		.ascii	"wdgtType\000"
 1951      54797065 
 1951      00
 1952              	.LASF93:
 1953 02e4 70747257 		.ascii	"ptrWdgt\000"
 1953      64677400 
 1954              	.LASF75:
 1955 02ec 64725368 		.ascii	"drShift\000"
 1955      69667400 
 1956              	.LASF77:
 1957 02f4 43617053 		.ascii	"CapSense_FLASH_IO_STRUCT\000"
 1957      656E7365 
 1957      5F464C41 
 1957      53485F49 
 1957      4F5F5354 
 1958              	.LASF36:
 1959 030d 706C6179 		.ascii	"play_pause\000"
 1959      5F706175 
 1959      736500
 1960              	.LASF99:
 1961 0318 43617053 		.ascii	"CapSense_dsRam\000"
 1961      656E7365 
 1961      5F647352 
 1961      616D00
 1962              	.LASF19:
 1963 0327 66696E67 		.ascii	"fingerTh\000"
 1963      65725468 
 1963      00
 1964              	.LASF86:
 1965 0330 6E756D43 		.ascii	"numCols\000"
 1965      6F6C7300 
 1966              	.LASF22:
 1967 0338 68797374 		.ascii	"hysteresis\000"
 1967      65726573 
 1967      697300
 1968              	.LASF51:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc0leXkL.s 			page 54


 1969 0343 74756E65 		.ascii	"tunerCmd\000"
 1969      72436D64 
 1969      00
 1970              	.LASF90:
 1971 034c 6C6F6E67 		.ascii	"long double\000"
 1971      20646F75 
 1971      626C6500 
 1972              	.LASF55:
 1973 0358 77646774 		.ascii	"wdgtStatus\000"
 1973      53746174 
 1973      757300
 1974              	.LASF112:
 1975 0363 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_INT.c\000"
 1975      72617465 
 1975      645F536F 
 1975      75726365 
 1975      5C50536F 
 1976              	.LASF1:
 1977 0389 756E7369 		.ascii	"unsigned char\000"
 1977      676E6564 
 1977      20636861 
 1977      7200
 1978              	.LASF101:
 1979 0397 43617053 		.ascii	"CapSense_widgetIndex\000"
 1979      656E7365 
 1979      5F776964 
 1979      67657449 
 1979      6E646578 
 1980              	.LASF16:
 1981 03ac 43617053 		.ascii	"CapSense_THRESHOLD_TYPE\000"
 1981      656E7365 
 1981      5F544852 
 1981      4553484F 
 1981      4C445F54 
 1982              	.LASF107:
 1983 03c4 43617053 		.ascii	"CapSense_SsCSDConnectSensorExt\000"
 1983      656E7365 
 1983      5F537343 
 1983      5344436F 
 1983      6E6E6563 
 1984              	.LASF47:
 1985 03e3 43617053 		.ascii	"CapSense_RAM_SNS_LIST_STRUCT\000"
 1985      656E7365 
 1985      5F52414D 
 1985      5F534E53 
 1985      5F4C4953 
 1986              	.LASF7:
 1987 0400 6C6F6E67 		.ascii	"long long unsigned int\000"
 1987      206C6F6E 
 1987      6720756E 
 1987      7369676E 
 1987      65642069 
 1988              	.LASF83:
 1989 0417 73746174 		.ascii	"staticConfig\000"
 1989      6963436F 
 1989      6E666967 
 1989      00
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc0leXkL.s 			page 55


 1990              	.LASF33:
 1991 0424 43617053 		.ascii	"CapSense_RAM_WD_PROXIMITY_STRUCT\000"
 1991      656E7365 
 1991      5F52414D 
 1991      5F57445F 
 1991      50524F58 
 1992              	.LASF8:
 1993 0445 756E7369 		.ascii	"unsigned int\000"
 1993      676E6564 
 1993      20696E74 
 1993      00
 1994              	.LASF42:
 1995 0452 62736C6E 		.ascii	"bslnExt\000"
 1995      45787400 
 1996              	.LASF54:
 1997 045a 77646774 		.ascii	"wdgtEnable\000"
 1997      456E6162 
 1997      6C6500
 1998              	.LASF15:
 1999 0465 72656733 		.ascii	"reg32\000"
 1999      3200
 2000              	.LASF46:
 2001 046b 43617053 		.ascii	"CapSense_RAM_SNS_STRUCT\000"
 2001      656E7365 
 2001      5F52414D 
 2001      5F534E53 
 2001      5F535452 
 2002              	.LASF17:
 2003 0483 43617053 		.ascii	"CapSense_LOW_BSLN_RST_TYPE\000"
 2003      656E7365 
 2003      5F4C4F57 
 2003      5F42534C 
 2003      4E5F5253 
 2004              	.LASF53:
 2005 049e 73746174 		.ascii	"status\000"
 2005      757300
 2006              	.LASF50:
 2007 04a5 6877436C 		.ascii	"hwClock\000"
 2007      6F636B00 
 2008              	.LASF63:
 2009 04ad 736E7254 		.ascii	"snrTestScanCounter\000"
 2009      65737453 
 2009      63616E43 
 2009      6F756E74 
 2009      657200
 2010              	.LASF18:
 2011 04c0 7265736F 		.ascii	"resolution\000"
 2011      6C757469 
 2011      6F6E00
 2012              	.LASF3:
 2013 04cb 73686F72 		.ascii	"short unsigned int\000"
 2013      7420756E 
 2013      7369676E 
 2013      65642069 
 2013      6E7400
 2014              	.LASF37:
 2015 04de 6C696265 		.ascii	"liberty_pull\000"
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc0leXkL.s 			page 56


 2015      7274795F 
 2015      70756C6C 
 2015      00
 2016              	.LASF108:
 2017 04eb 43617053 		.ascii	"CapSense_SsCSDStartSample\000"
 2017      656E7365 
 2017      5F537343 
 2017      53445374 
 2017      61727453 
 2018              	.LASF60:
 2019 0505 736E734C 		.ascii	"snsList\000"
 2019      69737400 
 2020              	.LASF103:
 2021 050d 43617053 		.ascii	"CapSense_requestScanAllWidget\000"
 2021      656E7365 
 2021      5F726571 
 2021      75657374 
 2021      5363616E 
 2022              	.LASF58:
 2023 052b 6D6F6443 		.ascii	"modCsdClk\000"
 2023      7364436C 
 2023      6B00
 2024              	.LASF52:
 2025 0535 7363616E 		.ascii	"scanCounter\000"
 2025      436F756E 
 2025      74657200 
 2026              	.LASF21:
 2027 0541 6E4E6F69 		.ascii	"nNoiseTh\000"
 2027      73655468 
 2027      00
 2028              	.LASF67:
 2029 054a 43617053 		.ascii	"CapSense_RAM_STRUCT\000"
 2029      656E7365 
 2029      5F52414D 
 2029      5F535452 
 2029      55435400 
 2030              	.LASF95:
 2031 055e 43617053 		.ascii	"CapSense_SsCSDInitNextScan\000"
 2031      656E7365 
 2031      5F537343 
 2031      5344496E 
 2031      69744E65 
 2032              	.LASF11:
 2033 0579 75696E74 		.ascii	"uint32\000"
 2033      333200
 2034              	.LASF65:
 2035 0580 7363616E 		.ascii	"scanCsdISC\000"
 2035      43736449 
 2035      534300
 2036              	.LASF5:
 2037 058b 6C6F6E67 		.ascii	"long unsigned int\000"
 2037      20756E73 
 2037      69676E65 
 2037      6420696E 
 2037      7400
 2038              	.LASF13:
 2039 059d 646F7562 		.ascii	"double\000"
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc0leXkL.s 			page 57


 2039      6C6500
 2040              	.LASF97:
 2041 05a4 43617053 		.ascii	"CapSense_CSDPostMultiScan\000"
 2041      656E7365 
 2041      5F435344 
 2041      506F7374 
 2041      4D756C74 
 2042              	.LASF113:
 2043 05be 443A5C71 		.ascii	"D:\\qcs40x\\Cypress\\project\\4025LQIS412_workspace"
 2043      63733430 
 2043      785C4379 
 2043      70726573 
 2043      735C7072 
 2044 05ed 5C343032 		.ascii	"\\4025LQIS412-EZIIC\\EZIIC_wadge.cydsn\000"
 2044      354C5149 
 2044      53343132 
 2044      2D455A49 
 2044      49435C45 
 2045              	.LASF74:
 2046 0612 6873696F 		.ascii	"hsiomShift\000"
 2046      6D536869 
 2046      667400
 2047              	.LASF104:
 2048 061d 43617053 		.ascii	"CapSense_curRamSnsPtr\000"
 2048      656E7365 
 2048      5F637572 
 2048      52616D53 
 2048      6E735074 
 2049              	.LASF70:
 2050 0633 64725074 		.ascii	"drPtr\000"
 2050      7200
 2051              	.LASF73:
 2052 0639 6D61736B 		.ascii	"mask\000"
 2052      00
 2053              	.LASF44:
 2054 063e 6E656742 		.ascii	"negBslnRstCnt\000"
 2054      736C6E52 
 2054      7374436E 
 2054      7400
 2055              	.LASF106:
 2056 064c 43617053 		.ascii	"CapSense_SsCSDSetUpIdacs\000"
 2056      656E7365 
 2056      5F537343 
 2056      53445365 
 2056      74557049 
 2057              	.LASF80:
 2058 0665 70747232 		.ascii	"ptr2SnsRam\000"
 2058      536E7352 
 2058      616D00
 2059              	.LASF0:
 2060 0670 7369676E 		.ascii	"signed char\000"
 2060      65642063 
 2060      68617200 
 2061              	.LASF81:
 2062 067c 70747232 		.ascii	"ptr2FltrHistory\000"
 2062      466C7472 
 2062      48697374 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc0leXkL.s 			page 58


 2062      6F727900 
 2063              	.LASF88:
 2064 068c 77646774 		.ascii	"wdgtArray\000"
 2064      41727261 
 2064      7900
 2065              	.LASF100:
 2066 0696 43617053 		.ascii	"CapSense_dsFlash\000"
 2066      656E7365 
 2066      5F647346 
 2066      6C617368 
 2066      00
 2067              	.LASF30:
 2068 06a7 43617053 		.ascii	"CapSense_RAM_WD_BASE_STRUCT\000"
 2068      656E7365 
 2068      5F52414D 
 2068      5F57445F 
 2068      42415345 
 2069              	.LASF61:
 2070 06c3 736E7254 		.ascii	"snrTestWidgetId\000"
 2070      65737457 
 2070      69646765 
 2070      74496400 
 2071              	.LASF49:
 2072 06d3 64657669 		.ascii	"deviceId\000"
 2072      63654964 
 2072      00
 2073              	.LASF105:
 2074 06dc 43617053 		.ascii	"CapSense_scanFreqIndex\000"
 2074      656E7365 
 2074      5F736361 
 2074      6E467265 
 2074      71496E64 
 2075              	.LASF78:
 2076 06f3 70747232 		.ascii	"ptr2SnsFlash\000"
 2076      536E7346 
 2076      6C617368 
 2076      00
 2077              	.LASF56:
 2078 0700 736E7353 		.ascii	"snsStatus\000"
 2078      74617475 
 2078      7300
 2079              	.LASF102:
 2080 070a 43617053 		.ascii	"CapSense_sensorIndex\000"
 2080      656E7365 
 2080      5F73656E 
 2080      736F7249 
 2080      6E646578 
 2081              	.LASF6:
 2082 071f 6C6F6E67 		.ascii	"long long int\000"
 2082      206C6F6E 
 2082      6720696E 
 2082      7400
 2083              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran

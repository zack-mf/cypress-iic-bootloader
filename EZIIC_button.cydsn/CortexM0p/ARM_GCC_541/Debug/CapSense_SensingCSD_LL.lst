ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_SensingCSD_LL.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_SsSetShieldDelay,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	CapSense_SsSetShieldDelay, %function
  24              	CapSense_SsSetShieldDelay:
  25              	.LFB1:
  26              		.file 1 "Generated_Source\\PSoC4\\CapSense_SensingCSD_LL.c"
   1:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \file CapSense_SensingCSD_LL.c
   3:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \version 7.0
   4:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
   5:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
   6:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   This file defines the data structure global variables and provides
   7:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   implementation for the low-level APIs of the CSD part of
   8:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   the Sensing module. The file contains the APIs used for the CSD block
   9:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   initialization, calibration, and scanning.
  10:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
  11:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \see CapSense v7.0 Datasheet
  12:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
  13:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *//*****************************************************************************
  14:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Copyright (2016-2019), Cypress Semiconductor Corporation.
  15:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ********************************************************************************
  16:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  17:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * protected by and subject to worldwide patent protection (United States and
  18:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * foreign), United States copyright laws and international treaty provisions.
  19:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  20:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * license to copy, use, modify, create derivative works of, and compile the
  21:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  22:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * custom software in support of licensee product to be used only in conjunction
  23:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  24:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Any reproduction, modification, translation, compilation, or representation of
  25:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * this software except as specified above is prohibited without the express
  26:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * written permission of Cypress.
  27:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
  28:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  29:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  30:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  31:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Cypress reserves the right to make changes without further notice to the
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 2


  32:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * materials described herein. Cypress does not assume any liability arising out
  33:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * of the application or use of any product or circuit described herein. Cypress
  34:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * does not authorize its products for use as critical components in life-support
  35:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * systems where a malfunction or failure may reasonably be expected to result in
  36:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  37:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * support systems application implies that the manufacturer assumes all risk of
  38:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  39:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * limited by and subject to the applicable Cypress software license agreement.
  40:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
  41:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #include "CapSense_Structure.h"
  42:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #include "CapSense_Configuration.h"
  43:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #include "CapSense_SensingCSD_LL.h"
  44:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
  45:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #include "CapSense_SelfTest.h"
  46:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif
  47:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
  48:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #include "cyapicallbacks.h"
  49:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
  50:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
  51:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
  52:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /***************************************
  53:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * API Constants
  54:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ***************************************/
  55:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
  56:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
  57:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
  58:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_AUTO_ZERO_EN)
  59:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #define CapSense_CSD_AZ_ENABLE_CFG                  (CapSense_CSD_AZ_EN_MASK)
  60:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
  61:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #define CapSense_CSD_AZ_ENABLE_CFG                  (0uL)
  62:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_AUTO_ZERO_EN) */
  63:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
  64:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)
  65:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #define CapSense_HSCMP_SCAN_MASK                    (CapSense_HSCMP_EN_MASK | CapSense_CSD_
  66:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                                      CapSense_HSCMP_INVERT_MASK)
  67:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
  68:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #define CapSense_HSCMP_SCAN_MASK                    (CapSense_HSCMP_EN_MASK | CapSense_CSD_
  69:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG) */
  70:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
  71:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #define CapSense_HSCMP_INIT_MASK                        (CapSense_HSCMP_EN_MASK | CapSense_CSD_
  72:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
  73:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #define CapSense_DEFAULT_SW_SHIELD_SEL                  (0x00000000uL)
  74:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #define CapSense_DEFAULT_CSD_SW_DSI_SEL                 (CapSense_SW_DSI_SEL_CMODPAD | CapSense
  75:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #define CapSense_DEFAULT_CSD_INTR_SET                   (0x00000000uL)
  76:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #define CapSense_DEFAULT_SW_HS_P_SEL                    (0x00000000uL)
  77:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #define CapSense_DEFAULT_SW_HS_N_SEL                    (0x00000000uL)
  78:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #define CapSense_DEFAULT_CSD_SW_FW_TANK_SEL             (0x00000000uL)
  79:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #define CapSense_DEFAULT_CSD_ADC_CTL                    (0x00000000uL)
  80:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #define CapSense_DEFAULT_HSCMP_CFG                      (0x00000000uL)
  81:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
  82:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* CY_ID285392 */
  83:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #define CapSense_FILTER_DELAY_MAX                   (CapSense_CONFIG_FILTER_DELAY_4_CYCLES)
  84:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #define CapSense_EXTRA_COUNTS_MAX                   (CapSense_FILTER_DELAY_MAX + 5u + 20u)
  85:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
  86:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #else
  87:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
  88:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Set IDAC ranges */
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 3


  89:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_IDAC_GAIN_8X == CapSense_CSD_IDAC_GAIN)
  90:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #define CapSense_DEFAULT_IDAC_MOD_RANGE         (CapSense_IDAC_MOD_RANGE_MASK)
  91:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #define CapSense_DEFAULT_IDAC_COMP_RANGE        (CapSense_IDAC_COMP_RANGE_MASK)
  92:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
  93:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #define CapSense_DEFAULT_IDAC_MOD_RANGE         (0u)
  94:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #define CapSense_DEFAULT_IDAC_COMP_RANGE        (0u)
  95:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_IDAC_GAIN_8X == CapSense_CSD_IDAC_GAIN) */
  96:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
  97:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Defining default IDACs configuration according to settings in customizer. */
  98:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
  99:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #define CapSense_DEFAULT_CSD_IDAC_CONFIG        (CapSense_IDAC_MOD_MODE_VARIABLE |\
 100:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                                  CapSense_IDAC_COMP_MODE_FIXED |\
 101:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                                  CapSense_DEFAULT_IDAC_MOD_RANGE |\
 102:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                                  CapSense_DEFAULT_IDAC_COMP_RANGE)
 103:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
 104:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #define CapSense_DEFAULT_CSD_IDAC_CONFIG        (CapSense_IDAC_MOD_MODE_VARIABLE |\
 105:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                                  CapSense_DEFAULT_IDAC_MOD_RANGE)
 106:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
 107:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 108:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 109:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 110:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 111:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /***************************************
 112:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Variables
 113:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ***************************************/
 114:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 115:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
 116:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 CapSense_configCsd = CapSense_DEFAULT_CSD_CONFIG;
 117:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #else
 118:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 CapSense_configCsd = CapSense_DEFAULT_CSD_CONFIG | CapSense_DEFAULT_MODULATION_MODE;
 119:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     static uint32 CapSense_counterResolution = CapSense_CNT_RESOLUTION_12_BITS;
 120:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 121:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 122:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /* Flag to indicate electrodes that were connected previously */
 123:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** static uint8 CapSense_eleCsdDisconnectFlag = 0u;
 124:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if ((CapSense_ENABLE == CapSense_CSDV2) && (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN))
 125:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Number of re-samplings when the bad conversion occurs */
 126:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint8 CapSense_badConversionsNum = CapSense_BAD_CONVERSIONS_NUM;
 127:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* ((CapSense_ENABLE == CapSense_CSDV2) && (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN)
 128:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 129:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 130:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
 131:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Static Function Prototypes
 132:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
 133:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 134:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /**
 135:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \cond SECTION_C_INTERNAL
 136:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \addtogroup group_c_internal
 137:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \{
 138:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** */
 139:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 140:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 141:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     static void CapSense_SsSetShieldDelay(uint32 delay);
 142:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN)
 143:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         static void CapSense_SsCSDEnableShieldTank(void);
 144:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN) */
 145:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 4


 146:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 147:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if ((CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE) || \
 148:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****      (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN))
 149:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     static cystatus CapSense_SsCSDCalibrateCheck(uint32 widgetId, uint32 target);
 150:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     static void CapSense_SsCSDCalibrate(uint32 widgetId, uint32 target);
 151:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
 152:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         static void CapSense_SsCSDNormalizeIdac(CapSense_FLASH_WD_STRUCT const *ptrFlashWidget, uin
 153:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif
 154:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_IDAC_AUTO_GAIN_EN)
 155:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         static uint32 CapSense_SsCSDSwitchIdacGain(CapSense_FLASH_WD_STRUCT const *ptrFlashWidget);
 156:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif
 157:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* ((CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE) || \
 158:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****            (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN))  */
 159:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 160:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
 161:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     static void CapSense_SsCSDSetFilterDelay(void);
 162:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #else
 163:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CY_INLINE static void CapSense_SsCSDClockRestart(void);
 164:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 165:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** CY_INLINE static void CapSense_SsCSDCmodPrecharge(void);
 166:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** CY_INLINE static void CapSense_SsCSDTriggerScan(void);
 167:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** static void CapSense_SsCSDConfigIDACs(void);
 168:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** static void CapSense_SsCSDSetModeSnsClockDivider(uint32 snsClkSource, uint32 snsClkDivider);
 169:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 170:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /** \}
 171:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \endcond */
 172:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 173:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 174:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 175:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /*******************************************************************************
 176:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * Function Name: CapSense_SsSetShieldDelay
 177:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     ****************************************************************************//**
 178:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
 179:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \brief
 180:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   This is an internal function that sets a shield delay.
 181:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
 182:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \details
 183:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   The function updates the CSD configuration register bits that define the shield
 184:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   signal delay relatively to the sense signal.
 185:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
 186:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \param delay
 187:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   Specifies the shield delay value:
 188:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *    PSoC 4100/4200 value interpretation:
 189:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *         0 - no delay
 190:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *         1 - 1 cycle of HFCLK
 191:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *         2 - 2 cycles of HFCLK
 192:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *    Third-generation HW block (except 4100/4200 devices):
 193:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *         0 - no delay
 194:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *         3 - 10ns delay
 195:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *         2 - 50ns delay
 196:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *    Fourth-generation HW block:
 197:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *         0 - no delay
 198:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *         1 - 5ns delay
 199:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *         2 - 10ns delay
 200:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *         3 - 20ns delay
 201:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
 202:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *******************************************************************************/
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 5


 203:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     static void CapSense_SsSetShieldDelay(uint32 delay)
 204:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
  27              		.loc 1 204 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 205:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Update CSD config register shield delay bits with shield delay value */
 206:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_configCsd &= (uint32)(~CapSense_CONFIG_SHIELD_DELAY_MASK);
  33              		.loc 1 206 0
  34 0000 034A     		ldr	r2, .L2
  35 0002 044B     		ldr	r3, .L2+4
  36 0004 1168     		ldr	r1, [r2]
  37 0006 0B40     		ands	r3, r1
 207:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_configCsd |= (delay << CapSense_SHIELD_DELAY_SHIFT);
  38              		.loc 1 207 0
  39 0008 0002     		lsls	r0, r0, #8
  40              	.LVL1:
  41 000a 1843     		orrs	r0, r3
  42 000c 1060     		str	r0, [r2]
 208:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
  43              		.loc 1 208 0
  44              		@ sp needed
  45 000e 7047     		bx	lr
  46              	.L3:
  47              		.align	2
  48              	.L2:
  49 0010 00000000 		.word	.LANCHOR0
  50 0014 FFFCFFFF 		.word	-769
  51              		.cfi_endproc
  52              	.LFE1:
  53              		.size	CapSense_SsSetShieldDelay, .-CapSense_SsSetShieldDelay
  54              		.section	.text.CapSense_SsCSDSetModeSnsClockDivider,"ax",%progbits
  55              		.align	2
  56              		.code	16
  57              		.thumb_func
  58              		.type	CapSense_SsCSDSetModeSnsClockDivider, %function
  59              	CapSense_SsCSDSetModeSnsClockDivider:
  60              	.LFB5:
 209:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 210:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN)
 211:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /*******************************************************************************
 212:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * Function Name: CapSense_SsCSDEnableShieldTank
 213:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         ****************************************************************************//**
 214:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
 215:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \brief
 216:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   This function configures Csh pin
 217:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
 218:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \details
 219:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   The function updates the CSH_HSIOM register to connect Csh to AMUXBUS-B.
 220:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   For Third-generation HW block it additionally sets Strong drive mode for Csh
 221:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   and applies High level to Csh pin when precharge is set to IO buffer.
 222:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
 223:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *******************************************************************************/
 224:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         static void CapSense_SsCSDEnableShieldTank(void)
 225:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 6


 226:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Update the CSH_HSIOM register to connect Csh to AMUXBUS-B */
 227:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_WriteBitsSafe(CapSense_CSH_HSIOM_PTR, CapSense_CSH_HSIOM_MASK,
 228:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         (uint32)(CapSense_HSIOM_SEL_AMUXB << CapSense_CSH_HSIOM_SHIFT));
 229:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 230:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if ((CapSense_CSH_PRECHARGE_IO_BUF == CapSense_CSD_CSH_PRECHARGE_SRC) &&\
 231:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                  (CapSense_DISABLE == CapSense_CSDV2))
 232:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Set Strong drive mode for Csh */
 233:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_PC_PTR,
 234:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             (uint32)(CapSense_CSH_PC_MASK << CapSense_CSH_PC_SHIFT),
 235:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             (uint32)(CapSense_CSH_PC_STRONG_MODE << CapSense_CSH_PC_SHIFT));
 236:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Appliy High level to Csh pin for Csh */
 237:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_DR_PTR, (uint32)(CapSense_DR_MASK << CapSense_C
 238:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #else
 239:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Set output port register to 0 to connect to GND */
 240:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_DR_PTR, (uint32)(CapSense_DR_MASK << CapSense_C
 241:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif
 242:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
 243:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN) */
 244:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 245:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (0u != CapSense_CSD_TOTAL_SHIELD_COUNT)
 246:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /*******************************************************************************
 247:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * Function Name: CapSense_SsCSDEnableShieldElectrodes
 248:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         ****************************************************************************//**
 249:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
 250:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \brief
 251:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   This internal function initializes Shield Electrodes.
 252:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
 253:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \details
 254:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   The function sets the bit in the HSIOM register which enables the shield electrode
 255:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   functionality on the pin. The port and pin configurations are stored in
 256:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   the CapSense_shieldIoList structure.
 257:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
 258:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *******************************************************************************/
 259:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         void CapSense_SsCSDEnableShieldElectrodes(void)
 260:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 261:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_SsCSDSetShieldElectrodesState(CapSense_SNS_CONNECTION_SHIELD);
 262:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
 263:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 264:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 265:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /*******************************************************************************
 266:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * Function Name: CapSense_SsCSDDisableShieldElectrodes
 267:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         ****************************************************************************//**
 268:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
 269:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \brief
 270:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   This internal function disables Shield Electrodes.
 271:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
 272:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \details
 273:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   The function resets the bit in the HSIOM register which disables the shield
 274:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   electrode functionality on the pin. The port and pin configurations are
 275:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   stored in  the CapSense_shieldIoList structure.
 276:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
 277:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *******************************************************************************/
 278:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         void CapSense_SsCSDDisableShieldElectrodes(void)
 279:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 280:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_SsCSDSetShieldElectrodesState(CapSense_SNS_CONNECTION_GROUND);
 281:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
 282:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 7


 283:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 284:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /*******************************************************************************
 285:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * Function Name: CapSense_SsCSDSetShieldElectrodesState
 286:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         ****************************************************************************//**
 287:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
 288:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \brief
 289:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   Sets specified shield electrode pin connection state for all dedicated
 290:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   shield electrodes.
 291:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
 292:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \details
 293:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   The function updates following registers for each shield
 294:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   electrode:
 295:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   - port configuration register
 296:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   - pin data register
 297:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   - pin HSIOM register
 298:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   The shield electrodes port and pin configuration registers addresses are
 299:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   stored in the CapSense_shieldIoList structure.
 300:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
 301:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \param state
 302:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   A new state of the shield electrodes. Available values:
 303:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   - CapSense_SNS_CONNECTION_GROUND - disconnects electrode from
 304:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *       CSD hardware block and sets it to GPIO mode with Strong Drive
 305:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   - CapSense_SNS_CONNECTION_HIGHZ - disconnects electrode from
 306:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *       CSD hardware block and sets it to GPIO mode with Analog Hi-Z
 307:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   - CapSense_SNS_CONNECTION_SHIELD - connects electrode to
 308:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *       CSD hardware block
 309:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   - CapSense_SNS_CONNECTION_UNDEFINED - sets the same electrode
 310:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *       connection as for CapSense_SNS_CONNECTION_GROUND
 311:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
 312:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *******************************************************************************/
 313:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         void CapSense_SsCSDSetShieldElectrodesState(uint32 state)
 314:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 315:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint8  interruptState;
 316:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 317:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 loopIndex;
 318:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 319:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 newPinPcVal;
 320:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 newPinHsiomVal;
 321:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 322:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 tmpPcDrRegValue;
 323:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 tmpHsiomRegValue;
 324:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 325:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_SHIELD_IO_STRUCT const *shieldIoPtr;
 326:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 327:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             switch(state)
 328:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 329:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 case CapSense_SNS_CONNECTION_GROUND:
 330:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     newPinPcVal = CY_SYS_PINS_DM_STRONG;
 331:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
 332:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     break;
 333:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 case CapSense_SNS_CONNECTION_HIGHZ:
 334:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     newPinPcVal = CY_SYS_PINS_DM_ALG_HIZ;
 335:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
 336:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     break;
 337:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 case CapSense_SNS_CONNECTION_SHIELD:
 338:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     newPinPcVal = CY_SYS_PINS_DM_ALG_HIZ;
 339:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     newPinHsiomVal = CapSense_HSIOM_SEL_CSD_SHIELD;
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 8


 340:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     break;
 341:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 default:
 342:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     newPinPcVal = CY_SYS_PINS_DM_STRONG;
 343:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
 344:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     break;
 345:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 346:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 347:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             shieldIoPtr = &CapSense_shieldIoList[0u];
 348:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             for (loopIndex = 0u; loopIndex < CapSense_CSD_TOTAL_SHIELD_COUNT; loopIndex++)
 349:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 350:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 interruptState = CyEnterCriticalSection();
 351:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 352:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tmpHsiomRegValue = CY_GET_REG32 (shieldIoPtr->hsiomPtr);
 353:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tmpHsiomRegValue &= ~(shieldIoPtr->hsiomMask);
 354:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CY_SET_REG32 (shieldIoPtr->hsiomPtr, tmpHsiomRegValue);
 355:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 356:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tmpPcDrRegValue = CY_GET_REG32 (shieldIoPtr->pcPtr);
 357:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tmpPcDrRegValue &= ~(CapSense_GPIO_PC_MASK << shieldIoPtr->shift);
 358:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tmpPcDrRegValue |=  (newPinPcVal << shieldIoPtr->shift);
 359:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CY_SET_REG32 (shieldIoPtr->pcPtr, tmpPcDrRegValue);
 360:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 361:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tmpHsiomRegValue |=  (newPinHsiomVal << shieldIoPtr->hsiomShift);
 362:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CY_SET_REG32 (shieldIoPtr->hsiomPtr, tmpHsiomRegValue);
 363:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 364:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tmpPcDrRegValue = CY_GET_REG32 (shieldIoPtr->drPtr);
 365:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tmpPcDrRegValue &= ~(1uL << shieldIoPtr->drShift);
 366:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CY_SET_REG32 (shieldIoPtr->drPtr, tmpPcDrRegValue);
 367:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 368:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CyExitCriticalSection(interruptState);
 369:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 370:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Get next electrode */
 371:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 shieldIoPtr++;
 372:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 373:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
 374:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (0u != CapSense_CSD_TOTAL_SHIELD_COUNT) */
 375:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 376:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 377:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 378:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
 379:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_SsCSDSetModeSnsClockDivider
 380:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
 381:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 382:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
 383:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   Sets sense source and Sense Clock Divider
 384:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 385:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
 386:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   For Fourth-generation HW block: Updates CapSense_SENSE_PERIOD register with
 387:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   sense source and Sense Clock Divider.
 388:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   For Third-generation HW block: Updates CapSense_configCsd variable with
 389:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   sense source and sets sense clock divider.
 390:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 391:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param
 392:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   snsClkSource The sense source for the sense clock.
 393:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param
 394:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   snsClkDivider The divider value for the sense clock.
 395:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 396:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 9


 397:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** static void CapSense_SsCSDSetModeSnsClockDivider(uint32 snsClkSource, uint32 snsClkDivider)
 398:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
  61              		.loc 1 398 0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 0, uses_anonymous_args = 0
  65              		@ link register save eliminated.
  66              	.LVL2:
 399:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
 400:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Update reg value with divider and configuration */
 401:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SENSE_PERIOD_PTR, snsClkSource | (snsClkDivider - 1u));
  67              		.loc 1 401 0
  68 0000 0139     		subs	r1, r1, #1
  69              	.LVL3:
  70 0002 0843     		orrs	r0, r1
  71              	.LVL4:
  72 0004 014B     		ldr	r3, .L5
  73 0006 1860     		str	r0, [r3]
 402:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
 403:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set configuration */
 404:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_configCsd &= ~(CapSense_CONFIG_PRS_SELECT_MASK | CapSense_CSD_PRS_12_BIT);
 405:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_configCsd |= snsClkSource;
 406:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 407:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set sense clock divider */
 408:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsSetSnsClockDivider(snsClkDivider);
 409:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 410:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
  74              		.loc 1 410 0
  75              		@ sp needed
  76 0008 7047     		bx	lr
  77              	.L6:
  78 000a C046     		.align	2
  79              	.L5:
  80 000c 00020B40 		.word	1074463232
  81              		.cfi_endproc
  82              	.LFE5:
  83              		.size	CapSense_SsCSDSetModeSnsClockDivider, .-CapSense_SsCSDSetModeSnsClockDivider
  84              		.global	__aeabi_uidiv
  85              		.section	.text.CapSense_SsCSDSetFilterDelay,"ax",%progbits
  86              		.align	2
  87              		.code	16
  88              		.thumb_func
  89              		.type	CapSense_SsCSDSetFilterDelay, %function
  90              	CapSense_SsCSDSetFilterDelay:
  91              	.LFB6:
 411:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 412:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 413:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
 414:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /*******************************************************************************
 415:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * Function Name: CapSense_SsCSDSetFilterDelay
 416:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     ****************************************************************************//**
 417:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
 418:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \brief
 419:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   Sets the filter delay for Fourth-generation HW block.
 420:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
 421:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \details
 422:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   This function updates Fourth-generation HW block configuration
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 10


 423:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   variable CapSense_configCsd
 424:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   with the filter delay which depends on the sample clock frequency.
 425:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   This variable is written into register during enabling
 426:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   Fourth-generation HW block .
 427:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
 428:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *******************************************************************************/
 429:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     static void CapSense_SsCSDSetFilterDelay(void)
 430:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
  92              		.loc 1 430 0
  93              		.cfi_startproc
  94              		@ args = 0, pretend = 0, frame = 0
  95              		@ frame_needed = 0, uses_anonymous_args = 0
  96 0000 10B5     		push	{r4, lr}
  97              		.cfi_def_cfa_offset 8
  98              		.cfi_offset 4, -8
  99              		.cfi_offset 14, -4
 431:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ)
 432:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 sampleClkFreqHz;
 433:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) */
 434:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 435:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_configCsd &= ~CapSense_CONFIG_FILTER_DELAY_MASK;
 100              		.loc 1 435 0
 101 0002 104B     		ldr	r3, .L11
 102 0004 1B68     		ldr	r3, [r3]
 103 0006 7022     		movs	r2, #112
 104 0008 9343     		bics	r3, r2
 105 000a 1C00     		movs	r4, r3
 436:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 437:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ)
 438:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             sampleClkFreqHz = CYDEV_BCLK__HFCLK__HZ / (uint32)CapSense_dsRam.modCsdClk;
 106              		.loc 1 438 0
 107 000c 2023     		movs	r3, #32
 108 000e 0E4A     		ldr	r2, .L11+4
 109 0010 D15C     		ldrb	r1, [r2, r3]
 110 0012 0E48     		ldr	r0, .L11+8
 111 0014 FFF7FEFF 		bl	__aeabi_uidiv
 112              	.LVL5:
 439:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             if(sampleClkFreqHz <= CapSense_MOD_CSD_CLK_12MHZ)
 113              		.loc 1 439 0
 114 0018 0D4B     		ldr	r3, .L11+12
 115 001a 9842     		cmp	r0, r3
 116 001c 04D8     		bhi	.L8
 440:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 441:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_configCsd |= CapSense_CONFIG_FILTER_DELAY_12MHZ;
 117              		.loc 1 441 0
 118 001e 2023     		movs	r3, #32
 119 0020 2343     		orrs	r3, r4
 120 0022 084A     		ldr	r2, .L11
 121 0024 1360     		str	r3, [r2]
 122 0026 0BE0     		b	.L7
 123              	.L8:
 442:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 443:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             else if(sampleClkFreqHz <= CapSense_MOD_CSD_CLK_24MHZ)
 124              		.loc 1 443 0
 125 0028 084B     		ldr	r3, .L11+8
 126 002a 9842     		cmp	r0, r3
 127 002c 04D8     		bhi	.L10
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 11


 444:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 445:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_configCsd |= CapSense_CONFIG_FILTER_DELAY_24MHZ;
 128              		.loc 1 445 0
 129 002e 3023     		movs	r3, #48
 130 0030 2343     		orrs	r3, r4
 131 0032 044A     		ldr	r2, .L11
 132 0034 1360     		str	r3, [r2]
 133 0036 03E0     		b	.L7
 134              	.L10:
 446:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 447:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             else
 448:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 449:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_configCsd |= CapSense_CONFIG_FILTER_DELAY_48MHZ;
 135              		.loc 1 449 0
 136 0038 4023     		movs	r3, #64
 137 003a 2343     		orrs	r3, r4
 138 003c 014A     		ldr	r2, .L11
 139 003e 1360     		str	r3, [r2]
 140              	.L7:
 450:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 451:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
 452:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_configCsd |= CapSense_CONFIG_FILTER_DELAY_12MHZ;
 453:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) */
 454:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
 141              		.loc 1 454 0
 142              		@ sp needed
 143 0040 10BD     		pop	{r4, pc}
 144              	.L12:
 145 0042 C046     		.align	2
 146              	.L11:
 147 0044 00000000 		.word	.LANCHOR0
 148 0048 00000000 		.word	CapSense_dsRam
 149 004c 00366E01 		.word	24000000
 150 0050 001BB700 		.word	12000000
 151              		.cfi_endproc
 152              	.LFE6:
 153              		.size	CapSense_SsCSDSetFilterDelay, .-CapSense_SsCSDSetFilterDelay
 154              		.section	.text.CapSense_SsCSDConfigIDACs,"ax",%progbits
 155              		.align	2
 156              		.code	16
 157              		.thumb_func
 158              		.type	CapSense_SsCSDConfigIDACs, %function
 159              	CapSense_SsCSDConfigIDACs:
 160              	.LFB7:
 455:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)  */
 456:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 457:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 458:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
 459:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_SsCSDConfigIDACs
 460:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
 461:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 462:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
 463:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   Configures the mode for IDAC registers
 464:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 465:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
 466:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   This function configures the IDAC modes depend on Compensation IDAC
 467:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   enabled or disabled.
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 12


 468:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 469:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
 470:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** static void CapSense_SsCSDConfigIDACs(void)
 471:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
 161              		.loc 1 471 0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165              		@ link register save eliminated.
 472:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
 473:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_CSD_IDACA_PTR, CapSense_IDAC_MOD_DEFAULT_CFG);
 166              		.loc 1 473 0
 167 0000 034A     		ldr	r2, .L14
 168 0002 044B     		ldr	r3, .L14+4
 169 0004 1A60     		str	r2, [r3]
 474:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
 475:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_CSD_IDACB_PTR, CapSense_IDAC_COMP_DEFAULT_CFG);
 170              		.loc 1 475 0
 171 0006 C522     		movs	r2, #197
 172 0008 5204     		lsls	r2, r2, #17
 173 000a 034B     		ldr	r3, .L14+8
 174 000c 1A60     		str	r2, [r3]
 476:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
 477:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
 478:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
 479:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_IDAC_PTR, CapSense_DEFAULT_CSD_IDAC_CONFIG);
 480:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
 481:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_IDAC_PTR, CY_GET_REG32(CapSense_IDAC_PTR) &
 482:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                                 ~(CapSense_IDAC_MOD_MODE_MASK |
 483:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                                   CapSense_IDAC_MOD_MASK));
 484:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_IDAC_PTR, CY_GET_REG32(CapSense_IDAC_PTR) |
 485:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                                  CapSense_DEFAULT_CSD_IDAC_CONFIG);
 486:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
 487:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 488:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
 175              		.loc 1 488 0
 176              		@ sp needed
 177 000e 7047     		bx	lr
 178              	.L15:
 179              		.align	2
 180              	.L14:
 181 0010 00008F01 		.word	26148864
 182 0014 C0010B40 		.word	1074463168
 183 0018 C4010B40 		.word	1074463172
 184              		.cfi_endproc
 185              	.LFE7:
 186              		.size	CapSense_SsCSDConfigIDACs, .-CapSense_SsCSDConfigIDACs
 187              		.section	.text.CapSense_SsCSDCalibrateCheck,"ax",%progbits
 188              		.align	2
 189              		.code	16
 190              		.thumb_func
 191              		.type	CapSense_SsCSDCalibrateCheck, %function
 192              	CapSense_SsCSDCalibrateCheck:
 193              	.LFB23:
 489:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 490:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 491:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 13


 492:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_SsCSDInitialize
 493:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
 494:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 495:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
 496:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   This API initializes the CSD module.
 497:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 498:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
 499:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   The function performs the following steps for Fourth-generation HW block:
 500:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   1) Sets GPIO output to "0" for all sensor pins;
 501:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   2) Connects CMOD to AMUXBUS-A and to CSDBUS-A;
 502:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   3) Connects CMOD to (sense path) to CSDCOMP;
 503:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   4) Connects Csh_tank to AMUXBUS-B and to CSDBUS-B;
 504:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   5) Connects VREF to REFGEN;
 505:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   6) Configures REFGEN and sets the reference voltage;
 506:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   7) Connects VREF to CSDCOMP and HSCOMP;
 507:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   8) Configures IDAC and connect to CSDBUS-A (to drive CMOD);
 508:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   9) Configures ModClk;
 509:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   10) Configure SnsClk source;
 510:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   11) Sets other CSD configurations (Csd Auto Zero time,
 511:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *       Sample Init period, interrupts,
 512:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *       CMOD and Csh_tank/shield initialization switch resistance).
 513:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 514:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   The function performs the following steps for Third-generation HW block:
 515:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   1) Sets all the sensors to the inactive state;
 516:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   2) Enables Shield Electrodes;
 517:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   3) Configures the CSD block and IDACs;
 518:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   4) Connects Cmod to AMUXBUS-A;
 519:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   5) Enables the clocks;
 520:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   6) Sets the shield delay;
 521:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   7) Enables the CSD block; connects Vref Buffer to the AMUX bus.
 522:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 523:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
 524:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_SsCSDInitialize(void)
 525:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
 526:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
 527:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 newRegValue;
 528:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif
 529:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 530:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Set all the sensors to inactive state */
 531:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     if(CapSense_dsRam.scanCurrentISC != CapSense_dsRam.scanCsdISC)
 532:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
 533:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsSetAllIOsState((uint32)CapSense_dsRam.scanCsdISC);
 534:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_dsRam.scanCurrentISC = CapSense_dsRam.scanCsdISC;
 535:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
 536:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 537:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 538:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Connect shields to AMUX-B bus (config HSIOM regs) */
 539:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (0u != CapSense_CSD_TOTAL_SHIELD_COUNT)
 540:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_SsCSDEnableShieldElectrodes();
 541:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (0u != CapSense_CSD_TOTAL_SHIELD_COUNT) */
 542:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 543:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN)
 544:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Configure Csh */
 545:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_SsCSDEnableShieldTank();
 546:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN) */
 547:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 548:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 14


 549:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
 550:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 551:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_DischargeExtCapacitors(CapSense_EXT_CAP_DISCHARGE_TIME);
 552:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 553:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Initialize the unused CSD registers to defaut state */
 554:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SENSE_DUTY_PTR, CapSense_DEFAULT_SENSE_DUTY_SEL);
 555:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 556:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Configure VREF */
 557:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegValue = CY_GET_REG32(CapSense_SW_REFGEN_SEL_PTR);
 558:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegValue |= CapSense_DEFAULT_SW_REFGEN_SEL;
 559:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 560:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_REFGEN_SEL_PTR, newRegValue);
 561:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_INTR_SET_PTR,         CapSense_DEFAULT_CSD_INTR_SET);
 562:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_FW_TANK_SEL_PTR,   CapSense_DEFAULT_CSD_SW_FW_TANK_SEL);
 563:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_DSI_SEL_PTR,       CapSense_DEFAULT_CSD_SW_DSI_SEL);
 564:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_ADC_CTL_PTR,          CapSense_DEFAULT_CSD_ADC_CTL);
 565:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_AMBUF_PTR,            CapSense_AMBUF_PWR_MODE_OFF);
 566:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_SHIELD_SEL_PTR,    CapSense_DEFAULT_SW_SHIELD_SEL);
 567:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_HS_P_SEL_PTR,      CapSense_DEFAULT_SW_HS_P_SEL);
 568:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_HS_N_SEL_PTR,      CapSense_DEFAULT_SW_HS_N_SEL);
 569:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_HSCMP_PTR,            CapSense_DEFAULT_HSCMP_CFG);
 570:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 571:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Connect CMOD to AMUXBUS-A */
 572:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_WriteBitsSafe(CapSense_CMOD_HSIOM_PTR, CapSense_CMOD_HSIOM_MASK,
 573:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     (uint32)(CapSense_HSIOM_SEL_AMUXA << CapSense_CMOD_HSIOM_SHIFT));
 574:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 575:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set output port register to 0 to connect to GND */
 576:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_WriteBitsSafe(CapSense_CMOD_DR_PTR, CapSense_Cmod__0__MASK, 0u);
 577:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 578:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Connect AMUXBUS-A to CSDBUS-A */
 579:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegValue = CY_GET_REG32(CapSense_SW_BYP_SEL_PTR);
 580:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegValue |= CapSense_SW_BYP_SEL_SW_BYA_MASK;
 581:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_BYP_SEL_PTR, newRegValue);
 582:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 583:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Connect CMOD to (sense path) to CSDCOMP */
 584:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_CSD__CMOD_PAD == CapSense_CMOD_CONNECTION)
 585:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SW_CMP_P_SEL_PTR, CapSense_SW_CMP_P_SEL_SW_SFPM_STATIC_CLOSE);
 586:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #elif (CapSense_CSD__CSHIELD_PAD == CapSense_CMOD_CONNECTION)
 587:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SW_CMP_P_SEL_PTR, CapSense_SW_CMP_P_SEL_SW_SFPS_STATIC_CLOSE);
 588:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
 589:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SW_CMP_P_SEL_PTR, CapSense_SW_CMP_P_SEL_SW_SFPT_STATIC_CLOSE);
 590:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_CSD__CMOD_PAD == CapSense_CMOD_CONNECTION) */
 591:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 592:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Configure shield driving path */
 593:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 594:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Connect AMUXBUS-B to CSDBUS-B (and AMUXBUS-A to CSDBUS-A ) */
 595:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SW_BYP_SEL_PTR, CapSense_SW_BYP_SEL_SW_BYA_MASK | CapSense_SW_BYP
 596:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 597:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Connect AMUXBUS-B to HSCMP positive input */
 598:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SW_HS_P_SEL_PTR, 0x00000000uL);
 599:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 600:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 601:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Configure VREF */
 602:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
 603:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Connect VREF to REFGEN. Connect IDACB to CSDBUSA */
 604:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newRegValue = CY_GET_REG32(CapSense_SW_REFGEN_SEL_PTR);
 605:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newRegValue |= CapSense_SW_REFGEN_SEL_SW_SGR_MASK | CapSense_SW_REFGEN_SEL_SW_IAIB_MASK
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 15


 606:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SW_REFGEN_SEL_PTR, newRegValue);
 607:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
 608:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Connect VREF to REFGEN (IAIB switch is open) */
 609:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newRegValue = CY_GET_REG32(CapSense_SW_REFGEN_SEL_PTR);
 610:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newRegValue |= CapSense_SW_REFGEN_SEL_SW_SGR_MASK;
 611:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SW_REFGEN_SEL_PTR, newRegValue);
 612:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
 613:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 614:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Connect VREFHI (from RefGen) to CSDCOMP when Vdda >= 2 V */
 615:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_CMP_N_SEL_PTR, CapSense_SW_CMP_N_SEL_SW_SCRH_STATIC_CLOSE);
 616:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 617:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_2000_MV > CapSense_CYDEV_VDDA_MV)
 618:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 619:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Configure REFGEN. Set reference voltage when Vdda < 2 V */
 620:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_REFGEN_PTR, CapSense_REFGEN_LV);
 621:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 622:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Connect Vrefhi to AMUBUF positive input when Vdaa < 2V
 623:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****              *  Connect AMUBUF to SCDCMP negative input when Vdaa < 2V
 624:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****              */
 625:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 626:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #if (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)
 627:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     CY_SET_REG32(CapSense_SW_AMUXBUF_SEL_PTR, CapSense_SW_AMUXBUF_SEL_SW_IRH_STATIC
 628:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                                           CapSense_SW_AMUXBUF_SEL_S
 629:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #else
 630:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     CY_SET_REG32(CapSense_SW_AMUXBUF_SEL_PTR, CapSense_SW_AMUXBUF_SEL_SW_DEFAULT);
 631:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 632:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_AMBUF_PTR, CapSense_AMBUF_PWR_MODE_NORM);
 633:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #else
 634:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_AMBUF_PTR, CapSense_AMBUF_PWR_MODE_OFF);
 635:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 636:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 637:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Connect VREFHI to HSCOMP */
 638:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SW_HS_N_SEL_PTR, CapSense_SW_HS_N_SEL_SW_HCRH_STATIC_CLOSE);
 639:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
 640:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 641:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Configure REFGEN. Set reference voltage when Vdda >= 2 V */
 642:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_REFGEN_PTR, CapSense_REFGEN_HV);
 643:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 644:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 645:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Turn on CSD_AMBUF high power level when Vdaa >= 2V */
 646:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_AMBUF_PTR, CapSense_AMBUF_PWR_MODE_HI);
 647:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 648:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #if (CapSense_IDAC_SINKING != CapSense_CSD_IDAC_CONFIG)
 649:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     CY_SET_REG32(CapSense_SW_AMUXBUF_SEL_PTR, CapSense_SW_AMUXBUF_SEL_SW_IRH_STATIC
 650:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                                           CapSense_SW_AMUXBUF_SEL_S
 651:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #else
 652:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     CY_SET_REG32(CapSense_SW_AMUXBUF_SEL_PTR, CapSense_SW_AMUXBUF_SEL_SW_DEFAULT);
 653:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #endif /* (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG) */
 654:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #else
 655:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_SW_AMUXBUF_SEL_PTR, CapSense_SW_AMUXBUF_SEL_SW_DEFAULT);
 656:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 657:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 658:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Connect VREFHI to HSCOMP */
 659:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SW_HS_N_SEL_PTR, CapSense_SW_HS_N_SEL_SW_HCRH_STATIC_CLOSE);
 660:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_2000_MV > CapSense_CYDEV_VDDA_MV) */
 661:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 662:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Configure IDACs mode */
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 16


 663:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDConfigIDACs();
 664:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 665:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Configure ModClk */
 666:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsSetModClkClockDivider((uint32)CapSense_dsRam.modCsdClk);
 667:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 668:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set other CSD configurations */
 669:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 670:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_SsSetShieldDelay(CapSense_CSD_SHIELD_DELAY);
 671:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 672:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 673:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Configure HW block filter delay */
 674:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDSetFilterDelay();
 675:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 676:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_DISABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN)
 677:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Enable power to sub-blocks */
 678:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd |
 679:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                       CapSense_CONFIG_SENSE_EN_MASK |
 680:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                       CapSense_CONFIG_ENABLE_MASK);
 681:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) */
 682:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 683:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set Csd Auto Zero time (set AZ_TIME bitmask) */
 684:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SEQ_TIME_PTR, CapSense_CSD_AUTO_ZERO_TIME);
 685:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 686:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Select CMOD and Csh_tank/shield initialization switch resistance */
 687:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_RES_PTR, 0x00000000);
 688:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 689:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set the number of dummy fine initialization cycles */
 690:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SEQ_INIT_CNT_PTR, CapSense_CSD_FINE_INIT_TIME);
 691:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 692:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
 693:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 694:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Configure IDACs mode */
 695:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDConfigIDACs();
 696:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 697:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Connect Cmod to AMUXBUS-A using HSIOM registers */
 698:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_WriteBitsSafe(CapSense_CMOD_HSIOM_PTR, CapSense_CMOD_HSIOM_MASK,
 699:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     (uint32)(CapSense_HSIOM_SEL_AMUXA << CapSense_CMOD_HSIOM_SHIFT));
 700:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 701:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 702:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_SsSetShieldDelay(CapSense_CSD_SHIELD_DELAY);
 703:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 704:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 705:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Enable CSD block. Connect Vref Buffer to AMUX bus to make sure that Cmod is charged befo
 706:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN)
 707:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd);
 708:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
 709:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECHARGE_CONFIG_
 710:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif
 711:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 712:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 713:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if ((CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) &&\
 714:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****          (CapSense_CLK_SOURCE_DIRECT == CapSense_CSD_SNS_CLK_SOURCE))
 715:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****          /* Set clock dividers and clock source mode */
 716:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDConfigClock();
 717:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif
 718:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
 719:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 17


 720:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 721:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
 722:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_SsCSDElectrodeCheck
 723:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
 724:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 725:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
 726:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   Checks if electrodes were previously connected using
 727:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****  * CapSense_CSDSetupWidgetExt() API and if yes disconnects them.
 728:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 729:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
 730:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   This function checks if CapSense_eleCsdDisconnectFlag is set.
 731:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   If it set, the function disconnects the previously connected electrode.
 732:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   The previous IO is contained in CapSense_curSnsIOPtr and
 733:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   CapSense_curFlashSnsPtr contains the previous data for Ganged
 734:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   sensors.
 735:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 736:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
 737:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_SsCSDElectrodeCheck(void)
 738:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
 739:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
 740:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 tempVal;
 741:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
 742:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 743:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     if (CapSense_ENABLE == CapSense_eleCsdDisconnectFlag)
 744:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
 745:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Disconnect if electrodes were previous connected by CSDSetupWidgetExt() API */
 746:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
 747:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Check ganged sns flag  */
 748:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             if (CapSense_GANGED_SNS_MASK == (CapSense_curFlashWdgtPtr->staticConfig & CapSense_GANG
 749:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 750:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Get number of ganged pins */
 751:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tempVal = CapSense_curFlashSnsPtr->numPins;
 752:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 753:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Get IO pointer  */
 754:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_curSnsIOPtr = &CapSense_ioList[CapSense_curFlashSnsPtr->firstPinId];
 755:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 756:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Disconnect all ganged sensors */
 757:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 do
 758:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
 759:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     CapSense_CSDDisconnectSns(CapSense_curSnsIOPtr);
 760:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     CapSense_curSnsIOPtr++;
 761:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     tempVal--;
 762:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 } while (0u != tempVal);
 763:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 764:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             else
 765:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 766:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Disconnect ganged sensor */
 767:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_CSDDisconnectSns(CapSense_curSnsIOPtr);
 768:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 769:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
 770:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Disable sensor */
 771:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_CSDDisconnectSns(CapSense_curSnsIOPtr);
 772:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)  */
 773:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 774:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_eleCsdDisconnectFlag = 0u;
 775:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
 776:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 18


 777:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 778:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 779:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
 780:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_SsCSDSetUpIdacs
 781:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
 782:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 783:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
 784:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This internal function changes the IDACs values.
 785:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 786:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
 787:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  If Compensation IDAC is enabled, it updates two IDACs.
 788:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  The Modulator IDAC is common for all the sensors of the widget.
 789:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  The Compensation IDAC is updated for the sensor of the widget which
 790:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  is available in the RAM_SNS_STRUCT structure.
 791:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  If the Compensation IDAC is disabled, the function updates the Modulator IDAC
 792:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  value only in the RAM_WD_BASE_STRUCT structure.
 793:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 794:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param
 795:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  ptrWdgt The pointer to the RAM_WD_BASE_STRUCT structure.
 796:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 797:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
 798:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_SsCSDSetUpIdacs(CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt)
 799:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
 800:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint8 interruptState;
 801:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 idacGain;
 802:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 803:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Getting IDAC gain */
 804:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     idacGain = CapSense_idacGainTable[ptrWdgt->idacGainIndex].gainReg;
 805:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 806:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
 807:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 idacARegValue;
 808:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
 809:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 idacBRegValue;
 810:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
 811:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 812:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         interruptState = CyEnterCriticalSection();
 813:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 814:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Get IDACA Value */
 815:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         idacARegValue = CY_GET_REG32(CapSense_CSD_IDACA_PTR);
 816:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 817:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Clear IDACA value and gain */
 818:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         idacARegValue &= ~(CapSense_IDAC_MOD_VAL_MASK | CapSense_IDAC_GAIN_MASK);
 819:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 820:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set IDACA value gain */
 821:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
 822:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             if (CapSense_dsFlash.wdgtArray[(CapSense_widgetIndex)].numCols <= CapSense_sensorIndex)
 823:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 824:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 idacARegValue |= (uint32)ptrWdgt->rowIdacMod[CapSense_scanFreqIndex];
 825:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 826:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             else
 827:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 828:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 idacARegValue |= (uint32)ptrWdgt->idacMod[CapSense_scanFreqIndex];
 829:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 830:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
 831:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             idacARegValue |= (uint32)ptrWdgt->idacMod[CapSense_scanFreqIndex];
 832:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN | CapSense_CSD_TOUCHPAD_WIDGET_EN) */
 833:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         idacARegValue |= idacGain;
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 19


 834:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 835:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Update IDACA register with new value */
 836:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_CSD_IDACA_PTR, idacARegValue);
 837:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CyExitCriticalSection(interruptState);
 838:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 839:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
 840:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             interruptState = CyEnterCriticalSection();
 841:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Get IDACB Value */
 842:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             idacBRegValue = CY_GET_REG32(CapSense_CSD_IDACB_PTR);
 843:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 844:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Clear IDACB value and gain */
 845:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             idacBRegValue &= ~(CapSense_IDAC_COMP_VAL_MASK | CapSense_IDAC_GAIN_MASK);
 846:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 847:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Set IDACB value and gain */
 848:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             idacBRegValue |= (uint32)CapSense_curRamSnsPtr->idacComp[CapSense_scanFreqIndex];
 849:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             idacBRegValue |= idacGain;
 850:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 851:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Update IDACA register with new value */
 852:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_CSD_IDACB_PTR, idacBRegValue);
 853:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CyExitCriticalSection(interruptState);
 854:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
 855:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 856:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
 857:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 858:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 newRegValue;
 859:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint8 const *ptrIdacMod = ptrWdgt->idacMod;
 860:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 861:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN  | CapSense_CSD_TOUCHPAD_WIDGET_EN)
 862:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             if (CapSense_dsFlash.wdgtArray[(CapSense_widgetIndex)].numCols <= CapSense_sensorIndex)
 863:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 864:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 ptrIdacMod = &ptrWdgt->rowIdacMod[0u];
 865:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 866:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN  | CapSense_CSD_TOUCHPAD_WIDGET_EN) */
 867:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 868:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         interruptState = CyEnterCriticalSection();
 869:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 870:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Get Idac Value */
 871:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegValue = CY_GET_REG32(CapSense_IDAC_PTR);
 872:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 873:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Clear Idac value and gain */
 874:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
 875:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newRegValue &= ~(CapSense_IDAC_MOD_MASK | CapSense_IDAC_COMP_MASK |
 876:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_IDAC_GAIN_MASK | (CapSense_IDAC_GAIN_MASK << CapSense_IDAC_COMP_DATA_OFFSE
 877:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
 878:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newRegValue &= ~(CapSense_IDAC_MOD_MASK | CapSense_IDAC_GAIN_MASK);
 879:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
 880:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 881:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set Idac value and gain */
 882:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
 883:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newRegValue |= (ptrIdacMod[CapSense_scanFreqIndex] |
 884:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                            (uint32)((uint32)CapSense_curRamSnsPtr->idacComp[CapSense_scanFreqIndex]
 885:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                            CapSense_IDAC_COMP_DATA_OFFSET));
 886:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newRegValue |= idacGain;
 887:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newRegValue |= (idacGain << CapSense_IDAC_COMP_DATA_OFFSET);
 888:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
 889:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newRegValue |= ptrIdacMod[CapSense_scanFreqIndex];
 890:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newRegValue |= idacGain;
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 20


 891:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
 892:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_IDAC_PTR, newRegValue);
 893:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 894:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CyExitCriticalSection(interruptState);
 895:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 896:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 897:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
 898:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 899:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 900:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
 901:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /*******************************************************************************
 902:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * Function Name: CapSense_SsCSDGetNumberOfConversions
 903:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     ****************************************************************************//**
 904:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
 905:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \brief
 906:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  This function gets Number of conversions.
 907:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
 908:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \details
 909:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  This function gets Number of conversions using foll.owing equation:
 910:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   conversionsNum = (2^resolution - 1) / snsClkDivider.
 911:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
 912:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \param
 913:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  snsClkDivider The divider value for the sense clock.
 914:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  resolution The widget resolution.
 915:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  snsClkSrc The current Sense Clock Source.
 916:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
 917:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \return Returns the Number of conversions.
 918:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
 919:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *******************************************************************************/
 920:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 CapSense_SsCSDGetNumberOfConversions(uint32 snsClkDivider, uint32 resolution, uint32 sns
 921:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
 922:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 conversionsNum;
 923:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if ((CapSense_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) && (CapSense_ENABLE != CapSense_C
 924:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 sampleClkFreqHz;
 925:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* ((CapSense_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) && (CapSense_ENABLE != CapS
 926:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 927:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Calculate scanning resolution value in register */
 928:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         conversionsNum = (uint32)(1uL << resolution);
 929:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 930:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if(CapSense_ENABLE != CapSense_CSDV2_REF9P6UA_EN)
 931:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Apply correction to oveflow for 16 bit resolution */
 932:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             if (CapSense_RES16BIT == resolution)
 933:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 934:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 conversionsNum -= ((snsClkDivider + 1u) >> 1u);
 935:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 936:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #if (CapSense_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ)
 937:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     sampleClkFreqHz = CYDEV_BCLK__HFCLK__HZ / (uint32)CapSense_dsRam.modCsdClk;
 938:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 939:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     if (sampleClkFreqHz <= CapSense_MOD_CSD_CLK_12MHZ)
 940:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
 941:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         conversionsNum -= CapSense_CONFIG_FILTER_DELAY_2_CYCLES;
 942:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
 943:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     else if (sampleClkFreqHz <= CapSense_MOD_CSD_CLK_24MHZ)
 944:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
 945:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         conversionsNum -= CapSense_CONFIG_FILTER_DELAY_3_CYCLES;
 946:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
 947:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     else
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 21


 948:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
 949:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         conversionsNum -= CapSense_CONFIG_FILTER_DELAY_4_CYCLES;
 950:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
 951:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #else
 952:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     conversionsNum -= CapSense_CONFIG_FILTER_DELAY_2_CYCLES;
 953:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #endif /* (INSTANCE_NAME`_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) */
 954:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 955:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
 956:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* CY_ID285392: Apply correction to oveflow for 16 bit resolution */
 957:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             if (CapSense_RES16BIT == resolution)
 958:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 959:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 conversionsNum -= CapSense_EXTRA_COUNTS_MAX;
 960:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 961:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif
 962:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 963:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         if (0u < snsClkDivider)
 964:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 965:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             conversionsNum /= snsClkDivider;
 966:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
 967:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 968:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
 969:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
 970:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
 971:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         switch (snsClkSrc)
 972:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 973:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             case CapSense_CLK_SOURCE_PRS8:
 974:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             case CapSense_CLK_SOURCE_PRS12:
 975:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Divide by 2 for PRS8/PRS12 mode */
 976:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 conversionsNum >>= 1u;
 977:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 break;
 978:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 979:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             default:
 980:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 break;
 981:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
 982:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
 983:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         (void)snsClkSrc;
 984:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif
 985:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 986:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     return((conversionsNum > 0uL) ? (conversionsNum) : 1uL);
 987:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
 988:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 989:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 990:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 991:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
 992:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_SsCSDConfigClock
 993:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
 994:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 995:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
 996:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function configure sense clock for different modes.
 997:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 998:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
 999:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Function sets the clock divider and configures the mode based on configuration.
1000:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1001:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
1002:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_SsCSDConfigClock(void)
1003:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
1004:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 snsClkDivider;
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 22


1005:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 snsClkSrc;
1006:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 newRegValue;
1007:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1008:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
1009:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****              CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2WdgtRam;
1010:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1011:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Get sense divider based on configuration */
1012:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN)
1013:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         snsClkDivider = (uint32)CapSense_dsRam.snsCsdClk;
1014:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
1015:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1016:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Get SnsClck divider for rows or columns */
1017:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             if (CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].numCols <= CapSense_sensorIndex)
1018:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
1019:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 snsClkDivider = (uint32)(ptrWdgt->rowSnsClk);
1020:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
1021:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             else
1022:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
1023:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 snsClkDivider = (uint32)(ptrWdgt->snsClk);
1024:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
1025:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
1026:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             snsClkDivider = (uint32)(ptrWdgt->snsClk);
1027:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1028:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
1029:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1030:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Get sense clk source calculated in CapSense_SsCSDInitialize() before */
1031:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1032:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Get SnsClc Source for rows or columns */
1033:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         if (CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].numCols <= CapSense_sensorIndex)
1034:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1035:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             snsClkSrc = (uint32)ptrWdgt->rowSnsClkSource;
1036:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1037:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         else
1038:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1039:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             snsClkSrc = (uint32)ptrWdgt->snsClkSource;
1040:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1041:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
1042:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         snsClkSrc = (uint32)ptrWdgt->snsClkSource;
1043:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1044:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1045:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
1046:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegValue = (snsClkSrc << CYFLD_CSD_LFSR_SIZE__OFFSET);
1047:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1048:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Configuring PRS SEL_BIT */
1049:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         if ((CapSense_CLK_SOURCE_PRS8 == snsClkSrc) ||
1050:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             (CapSense_CLK_SOURCE_PRS12 == snsClkSrc))
1051:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1052:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newRegValue |= CapSense_SENSE_PERIOD_SEL_LFSR_MSB_MASK;
1053:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1054:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
1055:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegValue = snsClkSrc;
1056:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1057:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1058:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
1059:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
1060:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
1061:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 23


1062:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             switch (snsClkSrc)
1063:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
1064:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             case CapSense_CLK_SOURCE_PRS8:
1065:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             case CapSense_CLK_SOURCE_PRS12:
1066:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Divide by 2 for PRS8/PRS12 mode */
1067:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 snsClkDivider >>= 1;
1068:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 if (snsClkDivider == 0u)
1069:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
1070:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     snsClkDivider = 1u;
1071:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
1072:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 break;
1073:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1074:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             default:
1075:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 break;
1076:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
1077:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* ((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
1078:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                    (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
1079:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                    (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)) */
1080:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif
1081:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_SsCSDSetModeSnsClockDivider(newRegValue, snsClkDivider);
1082:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
1083:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1084:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1085:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
1086:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_SsCSDCalculateScanDuration
1087:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
1088:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1089:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
1090:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   Calculates Scan Duration which is defined by scan resolution
1091:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1092:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
1093:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   For Fourth-generation HW block: The function calculates the number of conversions and updates
1094:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   SEQ_NORM_CNT register. The number of conversions depends on resolution and
1095:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   snsClk divider.
1096:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   For Third-generation HW block: The function recalculate the resolution using following equation
1097:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   2^resolution - 1. The calculated value is contained in
1098:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   CapSense_counterResolution global variable and used in
1099:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   CapSense_SsCSDStartSample() function to trigger the scan process.
1100:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1101:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param wdgtIndex
1102:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  ptrWdgt The pointer to the RAM_WD_BASE_STRUCT structure.
1103:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1104:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
1105:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_SsCSDCalculateScanDuration(CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt)
1106:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
1107:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
1108:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 conversionsNum;
1109:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 snsClkDivider;
1110:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1111:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Get Number Of Conversions */
1112:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN)
1113:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             snsClkDivider = CapSense_dsRam.snsCsdClk;
1114:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
1115:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1116:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Get SnsClck divider for rows or columns */
1117:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 if (CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].numCols <= CapSense_sensorInde
1118:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 24


1119:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     snsClkDivider = (uint32)(ptrWdgt->rowSnsClk);
1120:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
1121:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 else
1122:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
1123:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     snsClkDivider = (uint32)(ptrWdgt->snsClk);
1124:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
1125:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #else
1126:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 snsClkDivider = (uint32)(ptrWdgt->snsClk);
1127:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1128:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
1129:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1130:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         conversionsNum = CapSense_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)ptrWdgt->resol
1131:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1132:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set Number Of Conversions based on scanning resolution */
1133:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SEQ_NORM_CNT_PTR, (conversionsNum & CapSense_SEQ_NORM_CNT_CONV_CNT_MA
1134:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
1135:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set up scanning resolution  */
1136:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_counterResolution = (uint32)((0x00000001Lu << ptrWdgt->resolution) - 1u) << CapSen
1137:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1138:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
1139:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1140:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1141:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
1142:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_CSDSetupWidget
1143:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
1144:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1145:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
1146:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Performs hardware and firmware initialization required for scanning sensors
1147:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  in a specific widget using the CSD sensing method. This function requires using
1148:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  the CapSense_CSDScan() function to start scanning.
1149:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1150:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
1151:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  \note This function is obsolete and kept for backward compatibility only.
1152:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  The CapSense_SetupWidget() function should be used instead.
1153:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1154:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function initializes the specific widget common parameters to perform
1155:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  the CSD scanning. The initialization includes setting up a Modulator and
1156:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Sense clock frequency and scanning resolution.
1157:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1158:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function does not connect any specific sensors to the scanning hardware,
1159:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  neither does it start a scanning process. The CapSense_CSDScan()
1160:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  API must be called after initializing the widget to start scanning.
1161:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1162:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function is called when no scanning is in progress. I.e.
1163:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_IsBusy() returns a non-busy status.
1164:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1165:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function is called by the CapSense_SetupWidget() API if the
1166:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  given widget uses the CSD sensing method.
1167:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1168:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Calling this function directly from the application layer is not
1169:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  recommended. This function is used to implement only the user's specific
1170:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
1171:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1172:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param  widgetId
1173:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Specifies the ID number of the widget to perform hardware and firmware
1174:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  initialization required for scanning sensors in the specific widget.
1175:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  A macro for the widget ID can be found in the CapSense Configuration header
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 25


1176:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  file defined as CapSense_<WidgetName>_WDGT_ID.
1177:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1178:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
1179:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_CSDSetupWidget(uint32 widgetId)
1180:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
1181:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
1182:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                 CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
1183:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1184:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Save widget Id to have assess to it after scanning  */
1185:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_widgetIndex = (uint8)widgetId;
1186:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1187:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_CSD_E);
1188:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1189:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
1190:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Reset the frequency scan channel if enabled */
1191:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
1192:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
1193:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1194:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Disconnect previous electrode if it has been connected */
1195:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_SsCSDElectrodeCheck();
1196:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1197:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Initialize IO Sns electrode structure pointer to current widget */
1198:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_curSnsIOPtr = (CapSense_FLASH_IO_STRUCT const *)
1199:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                     CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2SnsFlash;
1200:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1201:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Update status register in Data structure */
1202:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_dsRam.status &= ~CapSense_STATUS_WDGT0_MASK;
1203:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_dsRam.status |= CapSense_widgetIndex;
1204:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1205:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_SsCSDCalculateScanDuration(ptrWdgt);
1206:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (((CapSense_DISABLE == CapSense_CSD_COMMON_SNS_CLK_EN) || \
1207:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****           (CapSense_CLK_SOURCE_DIRECT != CapSense_CSD_SNS_CLK_SOURCE)) && \
1208:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****          ((!(CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)) || \
1209:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****           (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN)))
1210:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDConfigClock();
1211:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif
1212:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
1213:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1214:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1215:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
1216:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_CSDSetupWidgetExt
1217:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
1218:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1219:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
1220:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Performs extended initialization for the CSD widget and also performs
1221:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  initialization required for a specific sensor in the widget. This function
1222:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  requires using the CapSense_CSDScanExt() function to initiate a scan.
1223:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1224:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
1225:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Performs extended initialization for the CSD widget and also performs
1226:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  initialization required for a specific sensor in the widget. This function
1227:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  requires using the CapSense_CSDScanExt() function to initiate a scan.
1228:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1229:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  \note This function is obsolete and kept for backward compatibility only.
1230:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  The CapSense_SetupWidgetExt() function should be used instead.
1231:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1232:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function does the same as CapSense_CSDSetupWidget() and also
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 26


1233:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  does the following tasks:
1234:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *    1. Connects the first sensor of the widget.
1235:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *    2. Configures the IDAC value.
1236:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *    3. Initializes an interrupt callback function to initialize a scan of the
1237:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  next sensors in a widget.
1238:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1239:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Once this function is called to initialize a widget and a sensor, the
1240:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_CSDScanExt() function is called to scan the sensor.
1241:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1242:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function is called when no scanning is in progress. I.e.
1243:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_IsBusy() returns a non-busy status.
1244:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1245:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Calling this function directly from the application layer is not
1246:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  recommended. This function is used to implement only the user's specific
1247:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
1248:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1249:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param widgetId
1250:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Specifies the ID number of the widget to perform hardware and firmware
1251:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  initialization required for scanning the specific sensor in the specific
1252:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  widget.
1253:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  A macro for the widget ID can be found in the CapSense Configuration header
1254:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  file defined as CapSense_<WidgetName>_WDGT_ID.
1255:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1256:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param sensorId
1257:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Specifies the ID number of the sensor within the widget to perform hardware
1258:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  and firmware initialization required for scanning a specific sensor in a
1259:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  specific widget.
1260:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  A macro for the sensor ID within a specified widget can be found in the
1261:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense Configuration header file defined as
1262:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_<WidgetName>_SNS<SensorNumber>_ID
1263:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1264:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
1265:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_CSDSetupWidgetExt(uint32 widgetId, uint32 sensorId)
1266:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
1267:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
1268:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                     CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRa
1269:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1270:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Save widget and sensor Ids to have access to it after scanning  */
1271:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_sensorIndex = (uint8)sensorId;
1272:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1273:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Update global pointer to CapSense_RAM_SNS_STRUCT to current sensor  */
1274:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_curRamSnsPtr = (CapSense_RAM_SNS_STRUCT *)
1275:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                               CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsRam
1276:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                               + CapSense_sensorIndex;
1277:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1278:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_CSDSetupWidget(widgetId);
1279:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1280:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****      /* Setup Idac Value */
1281:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_SsCSDSetUpIdacs(ptrWdgt);
1282:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1283:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
1284:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* initialize access pointers for current pointer to widget configuration in Flash */
1285:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_curFlashWdgtPtr = &CapSense_dsFlash.wdgtArray[widgetId];
1286:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)  */
1287:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1288:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
1289:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDConnectSensorExt(widgetId, sensorId);
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 27


1290:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
1291:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Enable sensor */
1292:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_curSnsIOPtr += CapSense_sensorIndex;
1293:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_CSDConnectSns(CapSense_curSnsIOPtr);
1294:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)  */
1295:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1296:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
1297:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Save sns pointer */
1298:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_curFlashSnsPtr = (CapSense_FLASH_SNS_STRUCT const *)
1299:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                            CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2Sns
1300:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                            CapSense_sensorIndex;
1301:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
1302:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1303:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_eleCsdDisconnectFlag = CapSense_DISCONNECT_IO_FLAG;
1304:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1305:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Setup ISR handler to single-sensor scan function */
1306:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_ISR_StartEx(&CapSense_CSDPostSingleScan);
1307:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
1308:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1309:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
1310:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_SsCSDStartSample
1311:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
1312:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1313:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
1314:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   Starts the CSD conversion.
1315:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1316:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
1317:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   This function assumes that the CSD block is already set up using
1318:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   the CapSense_CSDSetupWidget API and the sensor port-pin is connected to the CSD
1319:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   block using CapSense_CSDConnectSns.
1320:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   For Third-generation HW block the function performs the following tasks:
1321:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   1. Disconnects the Vref buffer from AMUX;
1322:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   2. Precharges Cmod;
1323:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   3. Makes the PreSettling delay to have a stable Vref voltage;
1324:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   4. Sets the resolution to the Counter register to start scanning.
1325:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1326:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
1327:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_SsCSDStartSample(void)
1328:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
1329:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE != CapSense_CSDV2)
1330:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint8 interruptState;
1331:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif
1332:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1333:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #ifdef CapSense_START_SAMPLE_CALLBACK
1334:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_StartSampleCallback(CapSense_widgetIndex, CapSense_sensorIndex);
1335:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* CapSense_START_SAMPLE_CALLBACK */
1336:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1337:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
1338:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Fourth-generation HW block section */
1339:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1340:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Disable CSD interrupt to prevent it during coarse initialization */
1341:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CyIntDisable(CapSense_ISR_NUMBER);
1342:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1343:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Enable power to sub-blocks */
1344:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_HSCMP_PTR, CapSense_HSCMP_INIT_MASK);
1345:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1346:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN)
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 28


1347:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd |
1348:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                       CapSense_CONFIG_SENSE_EN_MASK |
1349:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                       CapSense_CONFIG_ENABLE_MASK);
1350:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if(CapSense_CSD_ANALOG_STARTUP_DELAY_US > 0uL)
1351:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CyDelayUs(CapSense_CSD_ANALOG_STARTUP_DELAY_US);
1352:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif /* (CapSense_CSD_ANALOG_STARTUP_DELAY_US > 0uL) */
1353:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) */
1354:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1355:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Precharging Cmod and Csh */
1356:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDCmodPrecharge();
1357:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1358:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Trigger Scan */
1359:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDTriggerScan();
1360:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1361:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
1362:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Third-generation HW block section */
1363:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         interruptState = CyEnterCriticalSection();
1364:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1365:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Enable CSD block. Disconnect Vref Buffer from AMUX */
1366:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if ((CapSense_CSH_PRECHARGE_IO_BUF == CapSense_CSD_CSH_PRECHARGE_SRC) &&\
1367:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****              (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
1368:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CMOD_PRECHARGE_CONFIG_C
1369:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
1370:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECHARGE_CONFIG_
1371:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif
1372:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1373:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Restart the clocks. Scan one cycle to reset the flip-flop for Direct clock mode */
1374:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDClockRestart();
1375:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1376:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Precharging Cmod to Vref */
1377:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDCmodPrecharge();
1378:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1379:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_CLK_SOURCE_DIRECT != CapSense_CSD_SNS_CLK_SOURCE)
1380:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Set PreSettling delay to skip IDAC glitch before scanning */
1381:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CyDelayCycles(CapSense_GLITCH_ELIMINATION_CYCLES);
1382:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_CSD_SNS_CLK_SOURCE != CapSense_CLK_SOURCE_DIRECT) */
1383:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1384:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Trigger Scan */
1385:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDTriggerScan();
1386:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1387:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CyExitCriticalSection(interruptState);
1388:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1389:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
1390:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1391:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1392:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
1393:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_CSDScanExt
1394:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
1395:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1396:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
1397:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Starts the CSD conversion on the preconfigured sensor. This function requires
1398:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  using the CapSense_CSDSetupWidgetExt() function to set up the a
1399:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  widget.
1400:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1401:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
1402:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Starts the CSD conversion on the preconfigured sensor. This function requires
1403:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  using the CapSense_CSDSetupWidgetExt() function to set up the a
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 29


1404:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  widget.
1405:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1406:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  \note This function is obsolete and kept for backward compatibility only.
1407:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  The CapSense_ScanExt() function should be used instead.
1408:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1409:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function performs single scanning of one sensor in the widget configured
1410:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  by the CapSense_CSDSetupWidgetExt() function. It does the following
1411:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  tasks:
1412:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *    1. Sets the busy flag in the CapSense_dsRam structure.
1413:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *    2. Performs the clock-phase alignment of the sense and modulator clocks.
1414:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *    3. Performs the Cmod pre-charging.
1415:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *    4. Starts single scanning.
1416:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1417:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Calling this function directly from the application layer is not
1418:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  recommended. This function is used to implement only the user's specific
1419:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
1420:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function is called when no scanning is in progress. I.e.
1421:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_IsBusy() returns a non-busy status.
1422:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1423:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  The sensor must be preconfigured by using the
1424:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_CSDSetupWidgetExt() API prior to calling this function.
1425:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  The sensor remains ready for a next scan if a previous scan was triggered
1426:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  by using the CapSense_CSDScanExt() function. In this case, calling
1427:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_CSDSetupWidgetExt() is not required every time before the
1428:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_CSDScanExt() function. If a previous scan was triggered in
1429:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  any other way - CapSense_Scan(), CapSense_ScanAllWidgets() or
1430:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_RunTuner() - (see the CapSense_RunTuner() function
1431:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  description for more details), the sensor must be preconfigured again by
1432:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  using the CapSense_CSDSetupWidgetExt() API prior to calling the
1433:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_CSDScanExt() function.
1434:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1435:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  If disconnection of the sensors is required after calling
1436:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_CSDScanExt(), the CapSense_CSDDisconnectSns()
1437:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  function can be used.
1438:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1439:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
1440:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_CSDScanExt(void)
1441:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
1442:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if ((CapSense_DISABLE == CapSense_CSD_COMMON_SNS_CLK_EN) && \
1443:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****          (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN))
1444:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
1445:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                         CapSense_dsFlash.wdgtArray[CapSense_widgetI
1446:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1447:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDCalculateScanDuration(ptrWdgt);
1448:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDConfigClock();
1449:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif
1450:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1451:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Set Start of sensor scan flag */
1452:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_dsRam.status |= (CapSense_SW_STS_BUSY | CapSense_WDGT_SW_STS_BUSY);
1453:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1454:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
1455:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Reset the frequency scan channel if enabled */
1456:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
1457:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
1458:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1459:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE != CapSense_BLOCK_OFF_AFTER_SCAN_EN) &&\
1460:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         (CapSense_ENABLE == CapSense_CSDV2)
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 30


1461:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if(CapSense_CSD_ANALOG_STARTUP_DELAY_US > 0uL)
1462:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CyDelayUs(CapSense_CSD_ANALOG_STARTUP_DELAY_US);
1463:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_CSD_ANALOG_STARTUP_DELAY_US > 0uL) */
1464:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE != CapSense_BLOCK_OFF_AFTER_SCAN_EN) &&\
1465:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****               (CapSense_ENABLE == CapSense_CSDV2)*/
1466:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1467:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_SsCSDStartSample();
1468:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
1469:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1470:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1471:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
1472:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_CSDScan
1473:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
1474:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1475:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
1476:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function initiates a scan for the sensors of the widget initialized by the
1477:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_CSDSetupWidget() function.
1478:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1479:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
1480:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function initiates a scan for the sensors of the widget initialized by the
1481:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_CSDSetupWidget() function.
1482:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1483:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  \note This function is obsolete and kept for backward compatibility only.
1484:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  The CapSense_Scan() function should be used instead.
1485:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1486:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function performs scanning of all the sensors in the widget configured by
1487:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  the CapSense_CSDSetupWidget() function. It does the following tasks:
1488:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *    1. Connects the first sensor of the widget.
1489:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *    2. Configures the IDAC value.
1490:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *    3. Initializes the interrupt callback function to initialize a scan of
1491:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *       the next sensors in a widget.
1492:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *    4. Starts scanning for the first sensor in the widget.
1493:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1494:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function is called by the CapSense_Scan() API if the given
1495:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  widget uses the CSD sensing method.
1496:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1497:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Calling this function directly from the application layer is not
1498:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  recommended. This function is used to implement only the user's specific
1499:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
1500:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1501:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function is called when no scanning is in progress. I.e.
1502:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_IsBusy() returns a non-busy status. The widget must be
1503:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  preconfigured by the CapSense_CSDSetupWidget() function if any other
1504:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  widget was previously scanned or any other type of the scan functions was used.
1505:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1506:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
1507:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_CSDScan(void)
1508:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
1509:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
1510:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                     CapSense_dsFlash.wdgtArray[CapSense_widgetIndex
1511:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1512:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Set all the sensors to inactive state */
1513:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     if(CapSense_dsRam.scanCurrentISC != CapSense_dsRam.scanCsdISC)
1514:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
1515:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsSetAllIOsState((uint32)CapSense_dsRam.scanCsdISC);
1516:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_dsRam.scanCurrentISC = CapSense_dsRam.scanCsdISC;
1517:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 31


1518:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1519:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****      /*
1520:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****       * Update CapSense_sensorIndex with the first sensor in
1521:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****       * widget to use it in ISR handler to configure the next sensor
1522:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****       */
1523:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_sensorIndex = 0u;
1524:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1525:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Update global pointer to CapSense_RAM_SNS_STRUCT to current sensor  */
1526:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_curRamSnsPtr = (CapSense_RAM_SNS_STRUCT *)
1527:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                               CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2
1528:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                               + CapSense_sensorIndex;
1529:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1530:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
1531:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Reset the frequency scan channel if enabled */
1532:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
1533:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
1534:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1535:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Setup Idac Value */
1536:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****    CapSense_SsCSDSetUpIdacs(ptrWdgt);
1537:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1538:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
1539:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Check ganged sns flag  */
1540:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         if (CapSense_GANGED_SNS_MASK == (CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].staticCon
1541:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_GANGED_SNS_MASK))
1542:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1543:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Setup ISR handler to multiple-sensor scan function with ganged sensors */
1544:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_ISR_StartEx(&CapSense_CSDPostMultiScanGanged);
1545:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1546:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         else
1547:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1548:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Set up ISR handler to multiple-sensor scan function without ganged sensors */
1549:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_ISR_StartEx(&CapSense_CSDPostMultiScan);
1550:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1551:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1552:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDConnectSensorExt((uint32)CapSense_widgetIndex, (uint32)CapSense_sensorIndex);
1553:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
1554:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* initialize ptr to sensor IO structure to appropriate address */
1555:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_curSnsIOPtr = (CapSense_FLASH_IO_STRUCT const *)
1556:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                         CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2SnsFla
1557:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                         + CapSense_sensorIndex;
1558:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1559:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Enable sensor */
1560:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_CSDConnectSns(CapSense_curSnsIOPtr);
1561:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1562:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set-up ISR handler to multiple-sensor scan function without ganged sensors */
1563:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_ISR_StartEx(&CapSense_CSDPostMultiScan);
1564:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)  */
1565:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1566:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Start scanning */
1567:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_CSDScanExt();
1568:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
1569:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1570:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1571:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
1572:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_SsCSDConnectSensorExt
1573:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
1574:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 32


1575:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
1576:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Connects a ganged sensor port-pin to the sensing HW block via the AMUX bus.
1577:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1578:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
1579:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   The function gets the IO configuration registers addresses, their shifts and
1580:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   masks from the FLASH_IO_STRUCT object. Basing on this data, it updates the HSIOM and
1581:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   PC registers.
1582:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1583:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param widgetId
1584:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Specifies ID of the widget.
1585:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1586:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param sensorId
1587:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Specifies ID of the sensor in the widget.
1588:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1589:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
1590:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_SsCSDConnectSensorExt(uint32 widgetId, uint32 sensorId)
1591:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
1592:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
1593:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 tempVal;
1594:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
1595:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1596:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* initialize ptr to sensor IO structure to appropriate address */
1597:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_curSnsIOPtr = (CapSense_FLASH_IO_STRUCT const *)
1598:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                       CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsF
1599:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                       + sensorId;
1600:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1601:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
1602:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Check ganged sns flag  */
1603:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         if (CapSense_GANGED_SNS_MASK ==
1604:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****            (CapSense_dsFlash.wdgtArray[widgetId].staticConfig &
1605:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_GANGED_SNS_MASK))
1606:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1607:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Get sns pointer */
1608:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_curFlashSnsPtr = (CapSense_FLASH_SNS_STRUCT const *)
1609:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsFlash +
1610:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                sensorId;
1611:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1612:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Get number of ganged pins */
1613:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             tempVal = CapSense_curFlashSnsPtr->numPins;
1614:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1615:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Get IO pointer  */
1616:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_curSnsIOPtr = &CapSense_ioList[CapSense_curFlashSnsPtr->firstPinId];
1617:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1618:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Connect all ganged sensors  */
1619:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             do
1620:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
1621:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_CSDConnectSns(CapSense_curSnsIOPtr);
1622:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_curSnsIOPtr++;
1623:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tempVal--;
1624:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             } while (0u != tempVal);
1625:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1626:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         else
1627:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1628:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Connect sensor */
1629:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_CSDConnectSns(CapSense_curSnsIOPtr);
1630:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1631:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 33


1632:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Connect sensor */
1633:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_CSDConnectSns(CapSense_curSnsIOPtr);
1634:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
1635:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
1636:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1637:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1638:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
1639:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_SsCSDDisconnectSnsExt
1640:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
1641:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1642:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
1643:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Disconnects a ganged sensor port-pin from the sensing HW block and AMUX bus.
1644:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Sets the default state of the un-scanned sensor.
1645:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1646:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
1647:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   The function gets the IO configuration registers addresses, their shifts and
1648:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   masks from the FLASH_IO_STRUCT object. Basing on this data and Inactive sensor
1649:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   connection parameter, it updates the HSIOM, PC and DR registers.
1650:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   The HSIOM register is updated only when the Inactive sensor connection parameter
1651:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   is set to Shield.
1652:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1653:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param widgetId
1654:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Specifies ID of the widget.
1655:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1656:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param sensorId
1657:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Specifies ID of the sensor in the widget.
1658:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1659:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
1660:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_SsCSDDisconnectSnsExt(uint32 widgetId, uint32 sensorId)
1661:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
1662:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
1663:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 tempVal;
1664:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
1665:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1666:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* initialize ptr to sensor IO structure to appropriate address        */
1667:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_curSnsIOPtr = (CapSense_FLASH_IO_STRUCT const *)
1668:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                       CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsF
1669:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                       + sensorId;
1670:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1671:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
1672:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Check ganged sns flag  */
1673:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         if ((CapSense_dsFlash.wdgtArray[widgetId].staticConfig &
1674:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_GANGED_SNS_MASK) == CapSense_GANGED_SNS_MASK)
1675:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1676:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Get sns pointer */
1677:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_curFlashSnsPtr = (CapSense_FLASH_SNS_STRUCT const *)
1678:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsFlash +
1679:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                sensorId;
1680:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1681:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Get number of ganged pins */
1682:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             tempVal = CapSense_curFlashSnsPtr->numPins;
1683:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1684:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Get IO pointer  */
1685:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_curSnsIOPtr = &CapSense_ioList[CapSense_curFlashSnsPtr->firstPinId];
1686:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1687:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Disconnect all ganged sensors */
1688:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             do
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 34


1689:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
1690:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_CSDDisconnectSns(CapSense_curSnsIOPtr);
1691:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_curSnsIOPtr++;
1692:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tempVal--;
1693:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             } while (0u != tempVal);
1694:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1695:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         else
1696:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1697:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Disconnect ganged sensor */
1698:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_CSDDisconnectSns(CapSense_curSnsIOPtr);
1699:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1700:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
1701:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Disconnect ganged sensor */
1702:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_CSDDisconnectSns(CapSense_curSnsIOPtr);
1703:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
1704:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
1705:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1706:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1707:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
1708:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_CSDConnectSns
1709:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
1710:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1711:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
1712:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Connects a port pin used by the sensor to the AMUX bus of the sensing HW block.
1713:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1714:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
1715:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Connects a port pin used by the sensor to the AMUX bus of the sensing HW block
1716:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  while a sensor is being scanned. The function ignores the fact if
1717:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  the sensor is a ganged sensor and connects only a specified pin.
1718:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1719:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Scanning should be completed before calling this API.
1720:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1721:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Calling this function directly from the application layer is not
1722:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  recommended. This function is used to implement only the user's specific
1723:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  use cases. Functions that perform a setup and scan of a sensor/widget,
1724:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  automatically set the required pin states and perform the sensor connection.
1725:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  They do not take into account changes in the design made by the
1726:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_CSDConnectSns() function.
1727:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1728:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param  snsAddrPtr
1729:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Specifies the pointer to the FLASH_IO_STRUCT object belonging to a sensor
1730:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  which to be connected to the sensing HW block.
1731:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1732:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
1733:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_CSDConnectSns(CapSense_FLASH_IO_STRUCT const *snsAddrPtr)
1734:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
1735:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 newRegisterValue;
1736:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint8  interruptState;
1737:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 pinModeShift;
1738:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 pinHSIOMShift;
1739:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1740:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Get offsets for sensor */
1741:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     pinModeShift = (uint32)snsAddrPtr->shift;
1742:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     pinHSIOMShift = (uint32)snsAddrPtr->hsiomShift;
1743:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1744:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     interruptState = CyEnterCriticalSection();
1745:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 35


1746:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Use temporary variable to update registers without multiple writings to them */
1747:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     newRegisterValue = CY_GET_REG32(snsAddrPtr->hsiomPtr);
1748:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     newRegisterValue &= ~(CapSense_HSIOM_SEL_MASK << pinHSIOMShift);
1749:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     newRegisterValue |= (uint32)((uint32)CapSense_HSIOM_SEL_CSD_SENSE << pinHSIOMShift);
1750:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1751:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Update port configuration register (drive mode) for sensor */
1752:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CY_SET_REG32(snsAddrPtr->pcPtr, CY_GET_REG32(snsAddrPtr->pcPtr) & (uint32)~((uint32)CapSense_GP
1753:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1754:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Update HSIOM register for sensor */
1755:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CY_SET_REG32(snsAddrPtr->hsiomPtr, newRegisterValue);
1756:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1757:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CyExitCriticalSection(interruptState);
1758:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
1759:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1760:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1761:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
1762:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_CSDDisconnectSns
1763:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
1764:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1765:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
1766:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Disconnects a sensor port pin from the sensing HW block and the AMUX bus. Sets
1767:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  the default state of the un-scanned sensor.
1768:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1769:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
1770:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function works identically to CapSense_CSDConnectSns() except
1771:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  it disconnects the specified port-pin used by the sensor.
1772:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1773:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Calling this function directly from the application layer is not
1774:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  recommended. This function is used to implement only the user's specific
1775:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  use cases. Functions that perform a setup and scan of sensor/widget
1776:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  automatically set the required pin states and perform the sensor connection.
1777:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  They ignore changes in the design made by the
1778:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_CSDDisconnectSns() function.
1779:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1780:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param  snsAddrPtr
1781:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Specifies the pointer to the FLASH_IO_STRUCT object belonging to a sensor
1782:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  which should be disconnected from the sensing HW block.
1783:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1784:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
1785:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_CSDDisconnectSns(CapSense_FLASH_IO_STRUCT const *snsAddrPtr)
1786:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
1787:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint8  interruptState;
1788:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 pinHSIOMShift;
1789:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 pinModeShift;
1790:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 newPcRegValue;
1791:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 newHsiomRegValue;
1792:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1793:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     pinHSIOMShift = (uint32)snsAddrPtr->hsiomShift;
1794:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     pinModeShift = (uint32)snsAddrPtr->shift;
1795:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1796:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     interruptState = CyEnterCriticalSection();
1797:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1798:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     newPcRegValue  = CY_GET_REG32(snsAddrPtr->pcPtr);
1799:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     newPcRegValue &= ~(CapSense_GPIO_PC_MASK << pinModeShift);
1800:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1801:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     newHsiomRegValue  = CY_GET_REG32(snsAddrPtr->hsiomPtr);
1802:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     newHsiomRegValue &= ~(CapSense_HSIOM_SEL_MASK << pinHSIOMShift);
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 36


1803:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CY_SET_REG32(snsAddrPtr->hsiomPtr, newHsiomRegValue);
1804:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1805:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     if(CapSense_SNS_CONNECTION_GROUND == CapSense_dsRam.scanCurrentISC)
1806:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
1807:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newPcRegValue |= (CY_SYS_PINS_DM_STRONG << pinModeShift);
1808:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(snsAddrPtr->pcPtr, newPcRegValue);
1809:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
1810:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     else
1811:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
1812:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newPcRegValue |= (CY_SYS_PINS_DM_ALG_HIZ << pinModeShift);
1813:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         if(CapSense_SNS_CONNECTION_SHIELD == CapSense_dsRam.scanCurrentISC)
1814:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1815:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Connect to Shield */
1816:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newHsiomRegValue |= (CapSense_HSIOM_SEL_CSD_SHIELD << pinHSIOMShift);
1817:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(snsAddrPtr->pcPtr, newPcRegValue);
1818:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(snsAddrPtr->hsiomPtr, newHsiomRegValue);
1819:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1820:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
1821:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Set logic 0 to port data register */
1822:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CY_SET_REG32(snsAddrPtr->drPtr, CY_GET_REG32(snsAddrPtr->drPtr) & (uint32)~(uint32)((uint32)1u 
1823:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1824:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CyExitCriticalSection(interruptState);
1825:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
1826:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1827:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if ((CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE) || \
1828:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****      (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN))
1829:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /*******************************************************************************
1830:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * Function Name: CapSense_SsCSDCalibrateCheck
1831:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     ****************************************************************************//**
1832:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
1833:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \brief
1834:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  This internal function checks if the calibration is performed successfully.
1835:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
1836:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \details
1837:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  The function verifies that raw counts are within acceptable range
1838:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  defined by target and calibration error parameters.
1839:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
1840:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \param widgetId
1841:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  The desired widget ID.
1842:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
1843:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \param target
1844:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  Raw count target in percentage.
1845:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
1846:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \return Returns the status of the operation:
1847:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   - Zero     - All the sensors in the widget are calibrated successfully.
1848:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   - Non-Zero - Calibration failed for any sensor in the widget.
1849:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
1850:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *******************************************************************************/
1851:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     static cystatus CapSense_SsCSDCalibrateCheck(uint32 widgetId, uint32 target)
1852:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
 194              		.loc 1 1852 0
 195              		.cfi_startproc
 196              		@ args = 0, pretend = 0, frame = 8
 197              		@ frame_needed = 0, uses_anonymous_args = 0
 198              	.LVL6:
 199 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 200              		.cfi_def_cfa_offset 20
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 37


 201              		.cfi_offset 4, -20
 202              		.cfi_offset 5, -16
 203              		.cfi_offset 6, -12
 204              		.cfi_offset 7, -8
 205              		.cfi_offset 14, -4
 206 0002 4746     		mov	r7, r8
 207 0004 80B4     		push	{r7}
 208              		.cfi_def_cfa_offset 24
 209              		.cfi_offset 8, -24
 210 0006 82B0     		sub	sp, sp, #8
 211              		.cfi_def_cfa_offset 32
 212 0008 0500     		movs	r5, r0
 213              	.LVL7:
1853:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1854:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 rawcount;
1855:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 snsIndex;
1856:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 freqChannel;
1857:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 upperLimit;
1858:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 lowerLimit;
1859:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1860:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_FLASH_WD_STRUCT const *ptrFlashWidget = &CapSense_dsFlash.wdgtArray[widgetId];
1861:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_RAM_WD_BASE_STRUCT *ptrRamWidget = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWidget->
 214              		.loc 1 1861 0
 215 000a C200     		lsls	r2, r0, #3
 216 000c 121A     		subs	r2, r2, r0
 217 000e 9300     		lsls	r3, r2, #2
 218 0010 224A     		ldr	r2, .L28
 219 0012 D318     		adds	r3, r2, r3
 220 0014 5A68     		ldr	r2, [r3, #4]
 221              	.LVL8:
1862:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_RAM_SNS_STRUCT *ptrRamSensor = ptrFlashWidget->ptr2SnsRam;
 222              		.loc 1 1862 0
 223 0016 9C68     		ldr	r4, [r3, #8]
 224              	.LVL9:
1863:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1864:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Calculate acceptable raw count range based on the resolution, target and error */
1865:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         rawcount = (0x00000001Lu << ptrRamWidget->resolution) - 1u;
 225              		.loc 1 1865 0
 226 0018 1388     		ldrh	r3, [r2]
 227 001a 0127     		movs	r7, #1
 228 001c 9F40     		lsls	r7, r7, r3
 229 001e 013F     		subs	r7, r7, #1
 230              	.LVL10:
1866:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         lowerLimit = 0u;
1867:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         if (target > CapSense_CSD_CALIBRATION_ERROR)
 231              		.loc 1 1867 0
 232 0020 0A29     		cmp	r1, #10
 233 0022 02D9     		bls	.L23
1868:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1869:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             lowerLimit = target - CapSense_CSD_CALIBRATION_ERROR;
 234              		.loc 1 1869 0
 235 0024 0800     		movs	r0, r1
 236              	.LVL11:
 237 0026 0A38     		subs	r0, r0, #10
 238              	.LVL12:
 239 0028 00E0     		b	.L17
 240              	.LVL13:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 38


 241              	.L23:
1866:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         lowerLimit = 0u;
 242              		.loc 1 1866 0
 243 002a 0020     		movs	r0, #0
 244              	.LVL14:
 245              	.L17:
1870:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1871:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         upperLimit = target + CapSense_CSD_CALIBRATION_ERROR;
 246              		.loc 1 1871 0
 247 002c 0A23     		movs	r3, #10
 248 002e 9846     		mov	r8, r3
 249 0030 8844     		add	r8, r8, r1
 250              	.LVL15:
1872:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         if (upperLimit > CapSense_PERCENTAGE_100)
 251              		.loc 1 1872 0
 252 0032 4346     		mov	r3, r8
 253 0034 642B     		cmp	r3, #100
 254 0036 01D9     		bls	.L18
1873:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1874:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             upperLimit = CapSense_PERCENTAGE_100;
 255              		.loc 1 1874 0
 256 0038 6423     		movs	r3, #100
 257 003a 9846     		mov	r8, r3
 258              	.LVL16:
 259              	.L18:
1875:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1876:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         lowerLimit = (rawcount * lowerLimit) / CapSense_PERCENTAGE_100;
 260              		.loc 1 1876 0
 261 003c 7843     		muls	r0, r7
 262              	.LVL17:
 263 003e 6421     		movs	r1, #100
 264              	.LVL18:
 265 0040 FFF7FEFF 		bl	__aeabi_uidiv
 266              	.LVL19:
 267 0044 0600     		movs	r6, r0
 268              	.LVL20:
1877:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         upperLimit = (rawcount * upperLimit) / CapSense_PERCENTAGE_100;
 269              		.loc 1 1877 0
 270 0046 4046     		mov	r0, r8
 271              	.LVL21:
 272 0048 7843     		muls	r0, r7
 273 004a 6421     		movs	r1, #100
 274 004c FFF7FEFF 		bl	__aeabi_uidiv
 275              	.LVL22:
 276 0050 0100     		movs	r1, r0
 277              	.LVL23:
1878:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1879:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Check if raw count is in the defined range */
1880:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         for(snsIndex = 0u; snsIndex < ptrFlashWidget->totalNumSns; snsIndex++)
 278              		.loc 1 1880 0
 279 0052 0027     		movs	r7, #0
 280              	.LVL24:
1853:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 rawcount;
 281              		.loc 1 1853 0
 282 0054 0023     		movs	r3, #0
 283 0056 0193     		str	r3, [sp, #4]
 284              		.loc 1 1880 0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 39


 285 0058 13E0     		b	.L19
 286              	.LVL25:
 287              	.L21:
1881:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1882:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
1883:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
1884:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 rawcount = ptrRamSensor->raw[freqChannel];
 288              		.loc 1 1884 0
 289 005a 5300     		lsls	r3, r2, #1
 290 005c 185B     		ldrh	r0, [r3, r4]
 291              	.LVL26:
1885:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 if ((rawcount < lowerLimit) || (rawcount > upperLimit))
 292              		.loc 1 1885 0
 293 005e 8642     		cmp	r6, r0
 294 0060 08D8     		bhi	.L25
1882:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 295              		.loc 1 1882 0 discriminator 1
 296 0062 1300     		movs	r3, r2
 297              		.loc 1 1885 0 discriminator 1
 298 0064 8142     		cmp	r1, r0
 299 0066 01D2     		bcs	.L22
 300 0068 07E0     		b	.L26
 301              	.LVL27:
 302              	.L27:
 303 006a 0123     		movs	r3, #1
 304              	.LVL28:
 305              	.L22:
1882:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 306              		.loc 1 1882 0 discriminator 1
 307 006c 5A1E     		subs	r2, r3, #1
 308              	.LVL29:
 309 006e 002B     		cmp	r3, #0
 310 0070 F3D1     		bne	.L21
 311 0072 04E0     		b	.L20
 312              	.LVL30:
 313              	.L25:
1886:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
1887:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     calibrateStatus = CYRET_BAD_DATA;
 314              		.loc 1 1887 0
 315 0074 0623     		movs	r3, #6
 316 0076 0193     		str	r3, [sp, #4]
 317              	.LVL31:
 318 0078 01E0     		b	.L20
 319              	.LVL32:
 320              	.L26:
 321 007a 0623     		movs	r3, #6
 322 007c 0193     		str	r3, [sp, #4]
 323              	.LVL33:
 324              	.L20:
1888:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     break;
1889:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
1890:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
1891:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             ptrRamSensor++;
 325              		.loc 1 1891 0 discriminator 2
 326 007e 0A34     		adds	r4, r4, #10
 327              	.LVL34:
1880:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 40


 328              		.loc 1 1880 0 discriminator 2
 329 0080 0137     		adds	r7, r7, #1
 330              	.LVL35:
 331              	.L19:
1880:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 332              		.loc 1 1880 0 is_stmt 0 discriminator 1
 333 0082 EA00     		lsls	r2, r5, #3
 334 0084 521B     		subs	r2, r2, r5
 335 0086 9300     		lsls	r3, r2, #2
 336 0088 044A     		ldr	r2, .L28
 337              	.LVL36:
 338 008a D318     		adds	r3, r2, r3
 339 008c 1B8B     		ldrh	r3, [r3, #24]
 340 008e 9F42     		cmp	r7, r3
 341 0090 EBD3     		bcc	.L27
1892:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1893:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         return (calibrateStatus);
1894:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
 342              		.loc 1 1894 0 is_stmt 1
 343 0092 0198     		ldr	r0, [sp, #4]
 344 0094 02B0     		add	sp, sp, #8
 345              		@ sp needed
 346              	.LVL37:
 347              	.LVL38:
 348              	.LVL39:
 349              	.LVL40:
 350 0096 04BC     		pop	{r2}
 351 0098 9046     		mov	r8, r2
 352 009a F0BD     		pop	{r4, r5, r6, r7, pc}
 353              	.L29:
 354              		.align	2
 355              	.L28:
 356 009c 00000000 		.word	CapSense_dsFlash
 357              		.cfi_endproc
 358              	.LFE23:
 359              		.size	CapSense_SsCSDCalibrateCheck, .-CapSense_SsCSDCalibrateCheck
 360              		.section	.text.CapSense_SsCSDSwitchIdacGain,"ax",%progbits
 361              		.align	2
 362              		.code	16
 363              		.thumb_func
 364              		.type	CapSense_SsCSDSwitchIdacGain, %function
 365              	CapSense_SsCSDSwitchIdacGain:
 366              	.LFB24:
1895:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1896:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1897:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_IDAC_AUTO_GAIN_EN)
1898:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /*******************************************************************************
1899:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * Function Name: CapSense_SsCSDSwitchIdacGain
1900:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         ****************************************************************************//**
1901:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
1902:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \brief
1903:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *  This internal function switches to the lower IDAC gain is possible.
1904:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
1905:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \details
1906:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *  This internal function switches to the lower IDAC gain is possible.
1907:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *  Conditions of switching to the lower IDAC gains:
1908:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *  1. The current IDAC gain is not the lowest one.
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 41


1909:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *  2. The maximum IDAC at gain switching will not be out of range.
1910:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *  3. The minimum IDAC is still below the acceptable range.
1911:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
1912:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \param ptrFlashWidget
1913:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *  Specifies the pointer to a widget.
1914:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
1915:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \return Returns the status of the operation:
1916:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   - Zero     - Gain switching is not needed.
1917:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   - Non-Zero - Gain was switched to the lower one.
1918:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
1919:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *******************************************************************************/
1920:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         static uint32 CapSense_SsCSDSwitchIdacGain(CapSense_FLASH_WD_STRUCT const *ptrFlashWidget)
1921:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 367              		.loc 1 1921 0
 368              		.cfi_startproc
 369              		@ args = 0, pretend = 0, frame = 0
 370              		@ frame_needed = 0, uses_anonymous_args = 0
 371              	.LVL41:
 372 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 373              		.cfi_def_cfa_offset 24
 374              		.cfi_offset 3, -24
 375              		.cfi_offset 4, -20
 376              		.cfi_offset 5, -16
 377              		.cfi_offset 6, -12
 378              		.cfi_offset 7, -8
 379              		.cfi_offset 14, -4
 380 0002 4F46     		mov	r7, r9
 381 0004 4646     		mov	r6, r8
 382 0006 C0B4     		push	{r6, r7}
 383              		.cfi_def_cfa_offset 32
 384              		.cfi_offset 8, -32
 385              		.cfi_offset 9, -28
 386 0008 0700     		movs	r7, r0
 387              	.LVL42:
1922:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 ratio;
1923:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 maxIdac;
1924:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 minIdac;
1925:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 status = 0u;
1926:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 freqChannel;
1927:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 gainIndex;
1928:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1929:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_RAM_WD_BASE_STRUCT *ptrRamWidget = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWidg
 388              		.loc 1 1929 0
 389 000a 4668     		ldr	r6, [r0, #4]
 390              	.LVL43:
1930:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
1931:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 uint32 snsIndex;
1932:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_RAM_SNS_STRUCT *ptrRamSensor = ptrFlashWidget->ptr2SnsRam;
 391              		.loc 1 1932 0
 392 000c 8468     		ldr	r4, [r0, #8]
 393              	.LVL44:
1933:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif
1934:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1935:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             gainIndex = ptrRamWidget->idacGainIndex;
 394              		.loc 1 1935 0
 395 000e B57A     		ldrb	r5, [r6, #10]
 396 0010 A846     		mov	r8, r5
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 42


 397              	.LVL45:
1936:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1937:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Find maximum and minimum IDACs */
1938:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             maxIdac = 0u;
1939:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             minIdac = CapSense_CSD_CAL_IDAC_MAX_VALUE;
1940:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
 398              		.loc 1 1940 0
 399 0012 0123     		movs	r3, #1
1939:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
 400              		.loc 1 1939 0
 401 0014 7F20     		movs	r0, #127
 402              	.LVL46:
1938:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             minIdac = CapSense_CSD_CAL_IDAC_MAX_VALUE;
 403              		.loc 1 1938 0
 404 0016 0022     		movs	r2, #0
 405 0018 9146     		mov	r9, r2
 406              		.loc 1 1940 0
 407 001a 08E0     		b	.L31
 408              	.LVL47:
 409              	.L34:
1941:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
1942:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 if (maxIdac < ptrRamWidget->idacMod[freqChannel])
 410              		.loc 1 1942 0
 411 001c B318     		adds	r3, r6, r2
 412 001e 5B7A     		ldrb	r3, [r3, #9]
 413 0020 9945     		cmp	r9, r3
 414 0022 00D2     		bcs	.L32
1943:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
1944:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     maxIdac = ptrRamWidget->idacMod[freqChannel];
 415              		.loc 1 1944 0
 416 0024 9946     		mov	r9, r3
 417              	.LVL48:
 418              	.L32:
1945:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
1946:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 if (minIdac > ptrRamWidget->idacMod[freqChannel])
 419              		.loc 1 1946 0
 420 0026 9842     		cmp	r0, r3
 421 0028 00D9     		bls	.L33
1947:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
1948:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     minIdac = ptrRamWidget->idacMod[freqChannel];
 422              		.loc 1 1948 0
 423 002a 1800     		movs	r0, r3
 424              	.LVL49:
 425              	.L33:
 426 002c 1300     		movs	r3, r2
 427              	.LVL50:
 428              	.L31:
1940:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 429              		.loc 1 1940 0 discriminator 1
 430 002e 5A1E     		subs	r2, r3, #1
 431              	.LVL51:
 432 0030 002B     		cmp	r3, #0
 433 0032 F3D1     		bne	.L34
 434 0034 0021     		movs	r1, #0
 435 0036 0CE0     		b	.L35
 436              	.LVL52:
 437              	.L37:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 43


1949:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
1950:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1951:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     if ((CapSense_WD_TOUCHPAD_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)) ||
1952:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         (CapSense_WD_MATRIX_BUTTON_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)))
1953:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
1954:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         if (maxIdac < ptrRamWidget->rowIdacMod[freqChannel])
1955:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         {
1956:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             maxIdac = ptrRamWidget->rowIdacMod[freqChannel];
1957:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         }
1958:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         if (minIdac > ptrRamWidget->rowIdacMod[freqChannel])
1959:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         {
1960:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             minIdac = ptrRamWidget->rowIdacMod[freqChannel];
1961:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         }
1962:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
1963:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #endif
1964:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
1965:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
1966:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 for(snsIndex = 0u; snsIndex < ptrFlashWidget->totalNumSns; snsIndex++)
1967:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
1968:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
1969:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
1970:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         if (minIdac > ptrRamSensor->idacComp[freqChannel])
 438              		.loc 1 1970 0
 439 0038 A318     		adds	r3, r4, r2
 440 003a 5B7A     		ldrb	r3, [r3, #9]
 441 003c 9842     		cmp	r0, r3
 442 003e 00D9     		bls	.L36
1971:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         {
1972:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             minIdac = ptrRamSensor->idacComp[freqChannel];
 443              		.loc 1 1972 0
 444 0040 1800     		movs	r0, r3
 445              	.LVL53:
 446              	.L36:
 447 0042 1300     		movs	r3, r2
 448 0044 00E0     		b	.L38
 449              	.LVL54:
 450              	.L43:
 451 0046 0123     		movs	r3, #1
 452              	.LVL55:
 453              	.L38:
1968:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
 454              		.loc 1 1968 0 discriminator 1
 455 0048 5A1E     		subs	r2, r3, #1
 456              	.LVL56:
 457 004a 002B     		cmp	r3, #0
 458 004c F4D1     		bne	.L37
1973:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         }
1974:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
1975:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     ptrRamSensor++;
 459              		.loc 1 1975 0 discriminator 2
 460 004e 0A34     		adds	r4, r4, #10
 461              	.LVL57:
1966:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
 462              		.loc 1 1966 0 discriminator 2
 463 0050 0131     		adds	r1, r1, #1
 464              	.LVL58:
 465              	.L35:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 44


1966:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
 466              		.loc 1 1966 0 is_stmt 0 discriminator 1
 467 0052 3B8B     		ldrh	r3, [r7, #24]
 468 0054 9942     		cmp	r1, r3
 469 0056 F6D3     		bcc	.L43
1976:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
1977:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif
1978:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1979:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Check gain switch conditions */
1980:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             if (gainIndex != 0u)
 470              		.loc 1 1980 0 is_stmt 1
 471 0058 4346     		mov	r3, r8
 472 005a 002B     		cmp	r3, #0
 473 005c 13D0     		beq	.L44
 474              	.LVL59:
1981:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
1982:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 if (minIdac < CapSense_CSD_IDAC_MIN)
 475              		.loc 1 1982 0
 476 005e 1328     		cmp	r0, #19
 477 0060 13D8     		bhi	.L45
1983:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
1984:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     ratio = CapSense_idacGainTable[gainIndex].gainValue /
 478              		.loc 1 1984 0
 479 0062 0D49     		ldr	r1, .L47
 480              	.LVL60:
 481 0064 EA00     		lsls	r2, r5, #3
 482              	.LVL61:
 483 0066 8A18     		adds	r2, r1, r2
 484 0068 5068     		ldr	r0, [r2, #4]
 485              	.LVL62:
1985:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             CapSense_idacGainTable[gainIndex - 1u].gainValue;
 486              		.loc 1 1985 0
 487 006a 6B1E     		subs	r3, r5, #1
 488              	.LVL63:
 489 006c DB00     		lsls	r3, r3, #3
 490 006e CB18     		adds	r3, r1, r3
 491 0070 5968     		ldr	r1, [r3, #4]
1984:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             CapSense_idacGainTable[gainIndex - 1u].gainValue;
 492              		.loc 1 1984 0
 493 0072 FFF7FEFF 		bl	__aeabi_uidiv
 494              	.LVL64:
1986:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     if ((maxIdac * ratio) < CapSense_CSD_CAL_IDAC_MAX_VALUE)
 495              		.loc 1 1986 0
 496 0076 4F46     		mov	r7, r9
 497              	.LVL65:
 498 0078 4743     		muls	r7, r0
 499 007a 7E2F     		cmp	r7, #126
 500 007c 07D8     		bhi	.L46
1987:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
1988:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         /* Switch to lower idac gain */
1989:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         ptrRamWidget->idacGainIndex--;
 501              		.loc 1 1989 0
 502 007e 013D     		subs	r5, r5, #1
 503              	.LVL66:
 504 0080 B572     		strb	r5, [r6, #10]
 505              	.LVL67:
1990:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         status = 1u;
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 45


 506              		.loc 1 1990 0
 507 0082 0120     		movs	r0, #1
 508              	.LVL68:
 509 0084 04E0     		b	.L39
 510              	.LVL69:
 511              	.L44:
1925:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 freqChannel;
 512              		.loc 1 1925 0
 513 0086 0020     		movs	r0, #0
 514              	.LVL70:
 515 0088 02E0     		b	.L39
 516              	.LVL71:
 517              	.L45:
 518 008a 0020     		movs	r0, #0
 519              	.LVL72:
 520 008c 00E0     		b	.L39
 521              	.LVL73:
 522              	.L46:
 523 008e 0020     		movs	r0, #0
 524              	.LVL74:
 525              	.L39:
1991:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
1992:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
1993:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
1994:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1995:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             return (status);
1996:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
 526              		.loc 1 1996 0
 527              		@ sp needed
 528              	.LVL75:
 529              	.LVL76:
 530              	.LVL77:
 531              	.LVL78:
 532 0090 0CBC     		pop	{r2, r3}
 533 0092 9046     		mov	r8, r2
 534 0094 9946     		mov	r9, r3
 535 0096 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 536              	.L48:
 537              		.align	2
 538              	.L47:
 539 0098 00000000 		.word	CapSense_idacGainTable
 540              		.cfi_endproc
 541              	.LFE24:
 542              		.size	CapSense_SsCSDSwitchIdacGain, .-CapSense_SsCSDSwitchIdacGain
 543              		.section	.text.CapSense_SsCSDNormalizeIdac,"ax",%progbits
 544              		.align	2
 545              		.code	16
 546              		.thumb_func
 547              		.type	CapSense_SsCSDNormalizeIdac, %function
 548              	CapSense_SsCSDNormalizeIdac:
 549              	.LFB25:
1997:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_AUTO_GAIN_EN) */
1998:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1999:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2000:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
2001:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /*******************************************************************************
2002:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * Function Name: CapSense_SsCSDNormalizeIdac
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 46


2003:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         ****************************************************************************//**
2004:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
2005:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \brief
2006:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *  This function normalizes compensation IDAC.
2007:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
2008:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \details
2009:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *  This function normalizes compensation IDAC.
2010:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
2011:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \param ptrFlashWidget
2012:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *  Specifies the pointer to a widget.
2013:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
2014:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \param target
2015:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *  Raw count target in percentage.
2016:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
2017:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *******************************************************************************/
2018:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         static void CapSense_SsCSDNormalizeIdac(CapSense_FLASH_WD_STRUCT const *ptrFlashWidget, uin
2019:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 550              		.loc 1 2019 0
 551              		.cfi_startproc
 552              		@ args = 0, pretend = 0, frame = 8
 553              		@ frame_needed = 0, uses_anonymous_args = 0
 554              	.LVL79:
 555 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 556              		.cfi_def_cfa_offset 20
 557              		.cfi_offset 4, -20
 558              		.cfi_offset 5, -16
 559              		.cfi_offset 6, -12
 560              		.cfi_offset 7, -8
 561              		.cfi_offset 14, -4
 562 0002 5F46     		mov	r7, fp
 563 0004 5646     		mov	r6, r10
 564 0006 4D46     		mov	r5, r9
 565 0008 E0B4     		push	{r5, r6, r7}
 566              		.cfi_def_cfa_offset 32
 567              		.cfi_offset 9, -32
 568              		.cfi_offset 10, -28
 569              		.cfi_offset 11, -24
 570 000a 82B0     		sub	sp, sp, #8
 571              		.cfi_def_cfa_offset 40
 572 000c 0700     		movs	r7, r0
 573 000e 8A46     		mov	r10, r1
2020:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 snsIndex;
2021:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 freqChannel;
2022:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 maxIdac;
2023:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 minIdac;
2024:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 minRaw;
2025:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 maxRawLevel;
2026:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 rawLevel;
2027:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 iMod;
2028:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2029:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_RAM_WD_BASE_STRUCT *ptrRamWidget = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWidg
 574              		.loc 1 2029 0
 575 0010 4368     		ldr	r3, [r0, #4]
 576 0012 9B46     		mov	fp, r3
 577              	.LVL80:
2030:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_RAM_SNS_STRUCT *ptrRamSensor;
2031:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 47


2032:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Calculate raw count level based on resolution and target */
2033:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             maxRawLevel = (0x00000001Lu << ptrRamWidget->resolution) - 1u;
 578              		.loc 1 2033 0
 579 0014 1B88     		ldrh	r3, [r3]
 580              	.LVL81:
 581 0016 0122     		movs	r2, #1
 582 0018 9A40     		lsls	r2, r2, r3
 583 001a 1300     		movs	r3, r2
 584 001c 013B     		subs	r3, r3, #1
 585 001e 0193     		str	r3, [sp, #4]
 586              	.LVL82:
2034:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2035:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /*
2036:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             * IDAC Normalization is performed separately for each multi-frequency channel
2037:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             * and separately for row and column
2038:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             */
2039:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
 587              		.loc 1 2039 0
 588 0020 0123     		movs	r3, #1
 589              	.LVL83:
 590 0022 4AE0     		b	.L50
 591              	.LVL84:
 592              	.L59:
2040:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
2041:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Find maximum and minimum IDACs */
2042:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 maxIdac = ptrRamWidget->idacMod[freqChannel];
 593              		.loc 1 2042 0
 594 0024 5B46     		mov	r3, fp
 595 0026 5B19     		adds	r3, r3, r5
 596 0028 5B7A     		ldrb	r3, [r3, #9]
 597 002a 9946     		mov	r9, r3
 598              	.LVL85:
2043:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 minIdac = ptrRamWidget->idacMod[freqChannel];
2044:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 ptrRamSensor = ptrFlashWidget->ptr2SnsRam;
 599              		.loc 1 2044 0
 600 002c BB68     		ldr	r3, [r7, #8]
 601              	.LVL86:
2045:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 minRaw = ptrRamSensor->raw[freqChannel];
 602              		.loc 1 2045 0
 603 002e 6A00     		lsls	r2, r5, #1
 604 0030 D05A     		ldrh	r0, [r2, r3]
 605              	.LVL87:
2043:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 minIdac = ptrRamWidget->idacMod[freqChannel];
 606              		.loc 1 2043 0
 607 0032 4C46     		mov	r4, r9
2046:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 for(snsIndex = 0u; snsIndex < ptrFlashWidget->numCols; snsIndex++)
 608              		.loc 1 2046 0
 609 0034 0022     		movs	r2, #0
 610 0036 08E0     		b	.L51
 611              	.LVL88:
 612              	.L53:
2047:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
2048:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     if (minIdac > ptrRamSensor->idacComp[freqChannel])
 613              		.loc 1 2048 0
 614 0038 5919     		adds	r1, r3, r5
 615 003a 497A     		ldrb	r1, [r1, #9]
 616 003c 8C42     		cmp	r4, r1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 48


 617 003e 02D9     		bls	.L52
 618              	.LVL89:
2049:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
2050:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         minIdac = ptrRamSensor->idacComp[freqChannel];
2051:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         minRaw = ptrRamSensor->raw[freqChannel];
 619              		.loc 1 2051 0
 620 0040 6800     		lsls	r0, r5, #1
 621              	.LVL90:
 622 0042 C05A     		ldrh	r0, [r0, r3]
 623              	.LVL91:
2050:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         minRaw = ptrRamSensor->raw[freqChannel];
 624              		.loc 1 2050 0
 625 0044 0C00     		movs	r4, r1
 626              	.LVL92:
 627              	.L52:
2052:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
2053:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     ptrRamSensor++;
 628              		.loc 1 2053 0 discriminator 2
 629 0046 0A33     		adds	r3, r3, #10
 630              	.LVL93:
2046:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
 631              		.loc 1 2046 0 discriminator 2
 632 0048 0132     		adds	r2, r2, #1
 633              	.LVL94:
 634              	.L51:
2046:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
 635              		.loc 1 2046 0 is_stmt 0 discriminator 1
 636 004a F97E     		ldrb	r1, [r7, #27]
 637 004c 8A42     		cmp	r2, r1
 638 004e F3D3     		bcc	.L53
2054:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
2055:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2056:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Define new modulator IDAC */
2057:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 rawLevel = ((minRaw * CapSense_PERCENTAGE_100) / maxRawLevel) + CapSense_PERCENTAGE
 639              		.loc 1 2057 0 is_stmt 1
 640 0050 6423     		movs	r3, #100
 641              	.LVL95:
 642 0052 5843     		muls	r0, r3
 643              	.LVL96:
 644 0054 0199     		ldr	r1, [sp, #4]
 645 0056 FFF7FEFF 		bl	__aeabi_uidiv
 646              	.LVL97:
 647 005a 6430     		adds	r0, r0, #100
 648              	.LVL98:
2058:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 iMod = (rawLevel * minIdac) / target;
 649              		.loc 1 2058 0
 650 005c 6043     		muls	r0, r4
 651              	.LVL99:
 652 005e 5146     		mov	r1, r10
 653 0060 FFF7FEFF 		bl	__aeabi_uidiv
 654              	.LVL100:
2059:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2060:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 if (iMod > maxIdac)
 655              		.loc 1 2060 0
 656 0064 8145     		cmp	r9, r0
 657 0066 00D3     		bcc	.L54
2058:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 iMod = (rawLevel * minIdac) / target;
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 49


 658              		.loc 1 2058 0
 659 0068 8146     		mov	r9, r0
 660              	.LVL101:
 661              	.L54:
2061:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
2062:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     iMod = maxIdac;
2063:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
2064:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 ptrRamWidget->idacMod[freqChannel] = (uint8)iMod;
 662              		.loc 1 2064 0
 663 006a 5B46     		mov	r3, fp
 664 006c 5B19     		adds	r3, r3, r5
 665 006e 4A46     		mov	r2, r9
 666 0070 5A72     		strb	r2, [r3, #9]
2065:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2066:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Re-calculate compensation IDAC */
2067:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 ptrRamSensor = ptrFlashWidget->ptr2SnsRam;
 667              		.loc 1 2067 0
 668 0072 BC68     		ldr	r4, [r7, #8]
 669              	.LVL102:
2068:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 for(snsIndex = 0u; snsIndex < ptrFlashWidget->numCols; snsIndex++)
 670              		.loc 1 2068 0
 671 0074 0026     		movs	r6, #0
 672 0076 1CE0     		b	.L55
 673              	.LVL103:
 674              	.L58:
2069:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
2070:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     rawLevel = (((ptrRamSensor->raw[freqChannel] * CapSense_PERCENTAGE_100) / maxRa
 675              		.loc 1 2070 0
 676 0078 6B00     		lsls	r3, r5, #1
 677 007a 185B     		ldrh	r0, [r3, r4]
 678 007c 6423     		movs	r3, #100
 679 007e 5843     		muls	r0, r3
 680 0080 0199     		ldr	r1, [sp, #4]
 681 0082 FFF7FEFF 		bl	__aeabi_uidiv
 682              	.LVL104:
 683 0086 6430     		adds	r0, r0, #100
2071:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         CapSense_PERCENTAGE_100) * ptrRamSensor->idacComp[freqChannel];
 684              		.loc 1 2071 0
 685 0088 6319     		adds	r3, r4, r5
 686 008a 5B7A     		ldrb	r3, [r3, #9]
2070:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         CapSense_PERCENTAGE_100) * ptrRamSensor->idacComp[freqChannel];
 687              		.loc 1 2070 0
 688 008c 5843     		muls	r0, r3
 689              	.LVL105:
2072:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     if (rawLevel < (iMod * target))
 690              		.loc 1 2072 0
 691 008e 5346     		mov	r3, r10
 692 0090 4A46     		mov	r2, r9
 693 0092 5343     		muls	r3, r2
 694 0094 9842     		cmp	r0, r3
 695 0096 03D2     		bcs	.L56
 696              	.LVL106:
2073:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
2074:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         ptrRamSensor->idacComp[freqChannel] = 0u;
 697              		.loc 1 2074 0
 698 0098 6319     		adds	r3, r4, r5
 699 009a 0022     		movs	r2, #0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 50


 700              	.LVL107:
 701 009c 5A72     		strb	r2, [r3, #9]
 702 009e 06E0     		b	.L57
 703              	.LVL108:
 704              	.L56:
2075:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
2076:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     else
2077:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
2078:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         ptrRamSensor->idacComp[freqChannel] = (uint8)(((rawLevel - (iMod * target))
 705              		.loc 1 2078 0
 706 00a0 C01A     		subs	r0, r0, r3
 707              	.LVL109:
 708 00a2 3230     		adds	r0, r0, #50
2079:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             (CapSense_PERCENTAGE_100 >> 1u)) / CapSense_PERCENTAGE_100);
 709              		.loc 1 2079 0
 710 00a4 6421     		movs	r1, #100
 711 00a6 FFF7FEFF 		bl	__aeabi_uidiv
 712              	.LVL110:
2078:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             (CapSense_PERCENTAGE_100 >> 1u)) / CapSense_PERCENTAGE_100);
 713              		.loc 1 2078 0
 714 00aa 6319     		adds	r3, r4, r5
 715 00ac 5872     		strb	r0, [r3, #9]
 716              	.L57:
2080:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
2081:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     ptrRamSensor++;
 717              		.loc 1 2081 0 discriminator 2
 718 00ae 0A34     		adds	r4, r4, #10
 719              	.LVL111:
2068:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
 720              		.loc 1 2068 0 discriminator 2
 721 00b0 0136     		adds	r6, r6, #1
 722              	.LVL112:
 723              	.L55:
2068:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
 724              		.loc 1 2068 0 is_stmt 0 discriminator 1
 725 00b2 FB7E     		ldrb	r3, [r7, #27]
 726 00b4 9E42     		cmp	r6, r3
 727 00b6 DFD3     		bcc	.L58
2039:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 728              		.loc 1 2039 0 is_stmt 1
 729 00b8 2B00     		movs	r3, r5
 730              	.LVL113:
 731              	.L50:
2039:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 732              		.loc 1 2039 0 is_stmt 0 discriminator 1
 733 00ba 5D1E     		subs	r5, r3, #1
 734              	.LVL114:
 735 00bc 002B     		cmp	r3, #0
 736 00be B1D1     		bne	.L59
2082:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
2083:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2084:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2085:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     if ((CapSense_WD_TOUCHPAD_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)) ||
2086:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         (CapSense_WD_MATRIX_BUTTON_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)))
2087:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
2088:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         /* Find maximum and minimum IDACs */
2089:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         maxIdac = ptrRamWidget->rowIdacMod[freqChannel];
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 51


2090:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         minIdac = ptrRamWidget->rowIdacMod[freqChannel];
2091:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         ptrRamSensor = &(ptrFlashWidget->ptr2SnsRam[ptrFlashWidget->numCols]);
2092:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         minRaw = ptrRamSensor->raw[freqChannel];
2093:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         for(snsIndex = ptrFlashWidget->numCols; snsIndex < ptrFlashWidget->totalNum
2094:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         {
2095:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             if (minIdac > ptrRamSensor->idacComp[freqChannel])
2096:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             {
2097:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 minIdac = ptrRamSensor->idacComp[freqChannel];
2098:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 minRaw = ptrRamSensor->raw[freqChannel];
2099:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             }
2100:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             ptrRamSensor++;
2101:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         }
2102:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2103:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         /* Define new modulator IDAC */
2104:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         rawLevel = ((minRaw * CapSense_PERCENTAGE_100) / maxRawLevel) + CapSense_PE
2105:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         iMod = (rawLevel * minIdac) / target;
2106:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2107:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         if (iMod > maxIdac)
2108:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         {
2109:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             iMod = maxIdac;
2110:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         }
2111:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         ptrRamWidget->rowIdacMod[freqChannel] = (uint8)iMod;
2112:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2113:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         /* Re-calculate compensation IDAC */
2114:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         ptrRamSensor = &(ptrFlashWidget->ptr2SnsRam[ptrFlashWidget->numCols]);
2115:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         for(snsIndex = 0u; snsIndex < ptrFlashWidget->numRows; snsIndex++)
2116:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         {
2117:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             rawLevel = (((ptrRamSensor->raw[freqChannel] * CapSense_PERCENTAGE_100)
2118:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 CapSense_PERCENTAGE_100) * ptrRamSensor->idacComp[freqChannel];
2119:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             if (rawLevel < (iMod * target))
2120:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             {
2121:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 ptrRamSensor->idacComp[freqChannel] = 0u;
2122:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             }
2123:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             else
2124:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             {
2125:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 ptrRamSensor->idacComp[freqChannel] = (uint8)(((rawLevel - (iMod * 
2126:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                     (CapSense_PERCENTAGE_100 >> 1u)) / CapSense_PERCENTAGE_100);
2127:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             }
2128:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             ptrRamSensor++;
2129:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         }
2130:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
2131:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #endif
2132:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
2133:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
 737              		.loc 1 2133 0 is_stmt 1
 738 00c0 02B0     		add	sp, sp, #8
 739              		@ sp needed
 740              	.LVL115:
 741              	.LVL116:
 742              	.LVL117:
 743              	.LVL118:
 744 00c2 1CBC     		pop	{r2, r3, r4}
 745 00c4 9146     		mov	r9, r2
 746 00c6 9A46     		mov	r10, r3
 747 00c8 A346     		mov	fp, r4
 748 00ca F0BD     		pop	{r4, r5, r6, r7, pc}
 749              		.cfi_endproc
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 52


 750              	.LFE25:
 751              		.size	CapSense_SsCSDNormalizeIdac, .-CapSense_SsCSDNormalizeIdac
 752              		.section	.text.CapSense_SsCSDSetShieldElectrodesState,"ax",%progbits
 753              		.align	2
 754              		.global	CapSense_SsCSDSetShieldElectrodesState
 755              		.code	16
 756              		.thumb_func
 757              		.type	CapSense_SsCSDSetShieldElectrodesState, %function
 758              	CapSense_SsCSDSetShieldElectrodesState:
 759              	.LFB4:
 314:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint8  interruptState;
 760              		.loc 1 314 0
 761              		.cfi_startproc
 762              		@ args = 0, pretend = 0, frame = 8
 763              		@ frame_needed = 0, uses_anonymous_args = 0
 764              	.LVL119:
 765 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 766              		.cfi_def_cfa_offset 20
 767              		.cfi_offset 4, -20
 768              		.cfi_offset 5, -16
 769              		.cfi_offset 6, -12
 770              		.cfi_offset 7, -8
 771              		.cfi_offset 14, -4
 772 0002 4F46     		mov	r7, r9
 773 0004 4646     		mov	r6, r8
 774 0006 C0B4     		push	{r6, r7}
 775              		.cfi_def_cfa_offset 28
 776              		.cfi_offset 8, -28
 777              		.cfi_offset 9, -24
 778 0008 83B0     		sub	sp, sp, #12
 779              		.cfi_def_cfa_offset 40
 327:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 780              		.loc 1 327 0
 781 000a 0128     		cmp	r0, #1
 782 000c 09D0     		beq	.L66
 783 000e 0228     		cmp	r0, #2
 784 0010 03D0     		beq	.L63
 331:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     break;
 785              		.loc 1 331 0
 786 0012 0027     		movs	r7, #0
 330:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
 787              		.loc 1 330 0
 788 0014 0623     		movs	r3, #6
 789 0016 9946     		mov	r9, r3
 790 0018 06E0     		b	.L62
 791              	.L63:
 792              	.LVL120:
 339:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     break;
 793              		.loc 1 339 0
 794 001a 0527     		movs	r7, #5
 338:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     newPinHsiomVal = CapSense_HSIOM_SEL_CSD_SHIELD;
 795              		.loc 1 338 0
 796 001c 0023     		movs	r3, #0
 797 001e 9946     		mov	r9, r3
 340:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 default:
 798              		.loc 1 340 0
 799 0020 02E0     		b	.L62
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 53


 800              	.LVL121:
 801              	.L66:
 335:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     break;
 802              		.loc 1 335 0
 803 0022 0027     		movs	r7, #0
 334:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
 804              		.loc 1 334 0
 805 0024 0023     		movs	r3, #0
 806 0026 9946     		mov	r9, r3
 807              	.L62:
 808              	.LVL122:
 347:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             for (loopIndex = 0u; loopIndex < CapSense_CSD_TOTAL_SHIELD_COUNT; loopIndex++)
 809              		.loc 1 347 0
 810 0028 184C     		ldr	r4, .L67
 348:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 811              		.loc 1 348 0
 812 002a 0025     		movs	r5, #0
 813 002c 27E0     		b	.L64
 814              	.LVL123:
 815              	.L65:
 350:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 816              		.loc 1 350 0 discriminator 3
 817 002e FFF7FEFF 		bl	CyEnterCriticalSection
 818              	.LVL124:
 819 0032 0190     		str	r0, [sp, #4]
 820              	.LVL125:
 352:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tmpHsiomRegValue &= ~(shieldIoPtr->hsiomMask);
 821              		.loc 1 352 0 discriminator 3
 822 0034 2268     		ldr	r2, [r4]
 823 0036 1368     		ldr	r3, [r2]
 824              	.LVL126:
 353:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CY_SET_REG32 (shieldIoPtr->hsiomPtr, tmpHsiomRegValue);
 825              		.loc 1 353 0 discriminator 3
 826 0038 E168     		ldr	r1, [r4, #12]
 827 003a 8B43     		bics	r3, r1
 828              	.LVL127:
 354:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 829              		.loc 1 354 0 discriminator 3
 830 003c 1360     		str	r3, [r2]
 356:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tmpPcDrRegValue &= ~(CapSense_GPIO_PC_MASK << shieldIoPtr->shift);
 831              		.loc 1 356 0 discriminator 3
 832 003e 6068     		ldr	r0, [r4, #4]
 833 0040 0268     		ldr	r2, [r0]
 834              	.LVL128:
 357:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tmpPcDrRegValue |=  (newPinPcVal << shieldIoPtr->shift);
 835              		.loc 1 357 0 discriminator 3
 836 0042 A17C     		ldrb	r1, [r4, #18]
 837 0044 8846     		mov	r8, r1
 838 0046 0721     		movs	r1, #7
 839 0048 4646     		mov	r6, r8
 840 004a B140     		lsls	r1, r1, r6
 841 004c 8A43     		bics	r2, r1
 842              	.LVL129:
 358:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CY_SET_REG32 (shieldIoPtr->pcPtr, tmpPcDrRegValue);
 843              		.loc 1 358 0 discriminator 3
 844 004e 4946     		mov	r1, r9
 845 0050 B140     		lsls	r1, r1, r6
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 54


 846 0052 0A43     		orrs	r2, r1
 847              	.LVL130:
 359:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 848              		.loc 1 359 0 discriminator 3
 849 0054 0260     		str	r2, [r0]
 361:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CY_SET_REG32 (shieldIoPtr->hsiomPtr, tmpHsiomRegValue);
 850              		.loc 1 361 0 discriminator 3
 851 0056 227C     		ldrb	r2, [r4, #16]
 852              	.LVL131:
 853 0058 3900     		movs	r1, r7
 854 005a 9140     		lsls	r1, r1, r2
 855 005c 0B43     		orrs	r3, r1
 856              	.LVL132:
 362:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 857              		.loc 1 362 0 discriminator 3
 858 005e 2268     		ldr	r2, [r4]
 859 0060 1360     		str	r3, [r2]
 860              	.LVL133:
 364:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tmpPcDrRegValue &= ~(1uL << shieldIoPtr->drShift);
 861              		.loc 1 364 0 discriminator 3
 862 0062 A168     		ldr	r1, [r4, #8]
 863 0064 0B68     		ldr	r3, [r1]
 864              	.LVL134:
 365:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CY_SET_REG32 (shieldIoPtr->drPtr, tmpPcDrRegValue);
 865              		.loc 1 365 0 discriminator 3
 866 0066 627C     		ldrb	r2, [r4, #17]
 867              	.LVL135:
 868 0068 9446     		mov	ip, r2
 869 006a 0122     		movs	r2, #1
 870 006c 6646     		mov	r6, ip
 871 006e B240     		lsls	r2, r2, r6
 872 0070 9343     		bics	r3, r2
 873              	.LVL136:
 366:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 874              		.loc 1 366 0 discriminator 3
 875 0072 0B60     		str	r3, [r1]
 368:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 876              		.loc 1 368 0 discriminator 3
 877 0074 0198     		ldr	r0, [sp, #4]
 878 0076 FFF7FEFF 		bl	CyExitCriticalSection
 879              	.LVL137:
 371:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 880              		.loc 1 371 0 discriminator 3
 881 007a 1434     		adds	r4, r4, #20
 882              	.LVL138:
 348:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 883              		.loc 1 348 0 discriminator 3
 884 007c 0135     		adds	r5, r5, #1
 885              	.LVL139:
 886              	.L64:
 348:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 887              		.loc 1 348 0 is_stmt 0 discriminator 1
 888 007e 002D     		cmp	r5, #0
 889 0080 D5D0     		beq	.L65
 373:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (0u != CapSense_CSD_TOTAL_SHIELD_COUNT) */
 890              		.loc 1 373 0 is_stmt 1
 891 0082 03B0     		add	sp, sp, #12
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 55


 892              		@ sp needed
 893              	.LVL140:
 894              	.LVL141:
 895              	.LVL142:
 896              	.LVL143:
 897 0084 0CBC     		pop	{r2, r3}
 898 0086 9046     		mov	r8, r2
 899 0088 9946     		mov	r9, r3
 900 008a F0BD     		pop	{r4, r5, r6, r7, pc}
 901              	.L68:
 902              		.align	2
 903              	.L67:
 904 008c 00000000 		.word	CapSense_shieldIoList
 905              		.cfi_endproc
 906              	.LFE4:
 907              		.size	CapSense_SsCSDSetShieldElectrodesState, .-CapSense_SsCSDSetShieldElectrodesState
 908              		.section	.text.CapSense_SsCSDEnableShieldElectrodes,"ax",%progbits
 909              		.align	2
 910              		.global	CapSense_SsCSDEnableShieldElectrodes
 911              		.code	16
 912              		.thumb_func
 913              		.type	CapSense_SsCSDEnableShieldElectrodes, %function
 914              	CapSense_SsCSDEnableShieldElectrodes:
 915              	.LFB2:
 260:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_SsCSDSetShieldElectrodesState(CapSense_SNS_CONNECTION_SHIELD);
 916              		.loc 1 260 0
 917              		.cfi_startproc
 918              		@ args = 0, pretend = 0, frame = 0
 919              		@ frame_needed = 0, uses_anonymous_args = 0
 920 0000 10B5     		push	{r4, lr}
 921              		.cfi_def_cfa_offset 8
 922              		.cfi_offset 4, -8
 923              		.cfi_offset 14, -4
 261:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
 924              		.loc 1 261 0
 925 0002 0220     		movs	r0, #2
 926 0004 FFF7FEFF 		bl	CapSense_SsCSDSetShieldElectrodesState
 927              	.LVL144:
 262:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 928              		.loc 1 262 0
 929              		@ sp needed
 930 0008 10BD     		pop	{r4, pc}
 931              		.cfi_endproc
 932              	.LFE2:
 933              		.size	CapSense_SsCSDEnableShieldElectrodes, .-CapSense_SsCSDEnableShieldElectrodes
 934 000a C046     		.section	.text.CapSense_SsCSDDisableShieldElectrodes,"ax",%progbits
 935              		.align	2
 936              		.global	CapSense_SsCSDDisableShieldElectrodes
 937              		.code	16
 938              		.thumb_func
 939              		.type	CapSense_SsCSDDisableShieldElectrodes, %function
 940              	CapSense_SsCSDDisableShieldElectrodes:
 941              	.LFB3:
 279:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_SsCSDSetShieldElectrodesState(CapSense_SNS_CONNECTION_GROUND);
 942              		.loc 1 279 0
 943              		.cfi_startproc
 944              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 56


 945              		@ frame_needed = 0, uses_anonymous_args = 0
 946 0000 10B5     		push	{r4, lr}
 947              		.cfi_def_cfa_offset 8
 948              		.cfi_offset 4, -8
 949              		.cfi_offset 14, -4
 280:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
 950              		.loc 1 280 0
 951 0002 0020     		movs	r0, #0
 952 0004 FFF7FEFF 		bl	CapSense_SsCSDSetShieldElectrodesState
 953              	.LVL145:
 281:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 954              		.loc 1 281 0
 955              		@ sp needed
 956 0008 10BD     		pop	{r4, pc}
 957              		.cfi_endproc
 958              	.LFE3:
 959              		.size	CapSense_SsCSDDisableShieldElectrodes, .-CapSense_SsCSDDisableShieldElectrodes
 960 000a C046     		.section	.text.CapSense_SsCSDInitialize,"ax",%progbits
 961              		.align	2
 962              		.global	CapSense_SsCSDInitialize
 963              		.code	16
 964              		.thumb_func
 965              		.type	CapSense_SsCSDInitialize, %function
 966              	CapSense_SsCSDInitialize:
 967              	.LFB8:
 525:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
 968              		.loc 1 525 0
 969              		.cfi_startproc
 970              		@ args = 0, pretend = 0, frame = 0
 971              		@ frame_needed = 0, uses_anonymous_args = 0
 972 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 973              		.cfi_def_cfa_offset 24
 974              		.cfi_offset 3, -24
 975              		.cfi_offset 4, -20
 976              		.cfi_offset 5, -16
 977              		.cfi_offset 6, -12
 978              		.cfi_offset 7, -8
 979              		.cfi_offset 14, -4
 980 0002 4F46     		mov	r7, r9
 981 0004 4646     		mov	r6, r8
 982 0006 C0B4     		push	{r6, r7}
 983              		.cfi_def_cfa_offset 32
 984              		.cfi_offset 8, -32
 985              		.cfi_offset 9, -28
 531:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
 986              		.loc 1 531 0
 987 0008 3C4B     		ldr	r3, .L73
 988 000a C722     		movs	r2, #199
 989 000c 9A5C     		ldrb	r2, [r3, r2]
 990 000e C621     		movs	r1, #198
 991 0010 585C     		ldrb	r0, [r3, r1]
 992 0012 8242     		cmp	r2, r0
 993 0014 06D0     		beq	.L72
 533:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_dsRam.scanCurrentISC = CapSense_dsRam.scanCsdISC;
 994              		.loc 1 533 0
 995 0016 FFF7FEFF 		bl	CapSense_SsSetAllIOsState
 996              	.LVL146:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 57


 534:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
 997              		.loc 1 534 0
 998 001a 384B     		ldr	r3, .L73
 999 001c C622     		movs	r2, #198
 1000 001e 995C     		ldrb	r1, [r3, r2]
 1001 0020 0132     		adds	r2, r2, #1
 1002 0022 9954     		strb	r1, [r3, r2]
 1003              	.L72:
 540:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (0u != CapSense_CSD_TOTAL_SHIELD_COUNT) */
 1004              		.loc 1 540 0
 1005 0024 FFF7FEFF 		bl	CapSense_SsCSDEnableShieldElectrodes
 1006              	.LVL147:
 551:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1007              		.loc 1 551 0
 1008 0028 0120     		movs	r0, #1
 1009 002a FFF7FEFF 		bl	CapSense_DischargeExtCapacitors
 1010              	.LVL148:
 554:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1011              		.loc 1 554 0
 1012 002e C022     		movs	r2, #192
 1013 0030 1203     		lsls	r2, r2, #12
 1014 0032 334B     		ldr	r3, .L73+4
 1015 0034 1A60     		str	r2, [r3]
 557:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegValue |= CapSense_DEFAULT_SW_REFGEN_SEL;
 1016              		.loc 1 557 0
 1017 0036 334D     		ldr	r5, .L73+8
 1018 0038 2B68     		ldr	r3, [r5]
 1019              	.LVL149:
 558:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1020              		.loc 1 558 0
 1021 003a 334A     		ldr	r2, .L73+12
 1022 003c 9046     		mov	r8, r2
 1023 003e 1343     		orrs	r3, r2
 1024              	.LVL150:
 560:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_INTR_SET_PTR,         CapSense_DEFAULT_CSD_INTR_SET);
 1025              		.loc 1 560 0
 1026 0040 2B60     		str	r3, [r5]
 561:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_FW_TANK_SEL_PTR,   CapSense_DEFAULT_CSD_SW_FW_TANK_SEL);
 1027              		.loc 1 561 0
 1028 0042 0024     		movs	r4, #0
 1029 0044 314B     		ldr	r3, .L73+16
 1030              	.LVL151:
 1031 0046 1C60     		str	r4, [r3]
 1032              	.LVL152:
 562:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_DSI_SEL_PTR,       CapSense_DEFAULT_CSD_SW_DSI_SEL);
 1033              		.loc 1 562 0
 1034 0048 314B     		ldr	r3, .L73+20
 1035 004a 1C60     		str	r4, [r3]
 563:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_ADC_CTL_PTR,          CapSense_DEFAULT_CSD_ADC_CTL);
 1036              		.loc 1 563 0
 1037 004c 314B     		ldr	r3, .L73+24
 1038 004e 1C60     		str	r4, [r3]
 564:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_AMBUF_PTR,            CapSense_AMBUF_PWR_MODE_OFF);
 1039              		.loc 1 564 0
 1040 0050 314B     		ldr	r3, .L73+28
 1041 0052 1C60     		str	r4, [r3]
 565:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_SHIELD_SEL_PTR,    CapSense_DEFAULT_SW_SHIELD_SEL);
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 58


 1042              		.loc 1 565 0
 1043 0054 314F     		ldr	r7, .L73+32
 1044 0056 3C60     		str	r4, [r7]
 566:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_HS_P_SEL_PTR,      CapSense_DEFAULT_SW_HS_P_SEL);
 1045              		.loc 1 566 0
 1046 0058 314B     		ldr	r3, .L73+36
 1047 005a 1C60     		str	r4, [r3]
 567:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_HS_N_SEL_PTR,      CapSense_DEFAULT_SW_HS_N_SEL);
 1048              		.loc 1 567 0
 1049 005c 314B     		ldr	r3, .L73+40
 1050 005e 9946     		mov	r9, r3
 1051 0060 1C60     		str	r4, [r3]
 568:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_HSCMP_PTR,            CapSense_DEFAULT_HSCMP_CFG);
 1052              		.loc 1 568 0
 1053 0062 314E     		ldr	r6, .L73+44
 1054 0064 3460     		str	r4, [r6]
 569:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1055              		.loc 1 569 0
 1056 0066 314B     		ldr	r3, .L73+48
 1057 0068 1C60     		str	r4, [r3]
 572:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     (uint32)(CapSense_HSIOM_SEL_AMUXA << CapSense_CMOD_HSIOM_SHIFT));
 1058              		.loc 1 572 0
 1059 006a 6022     		movs	r2, #96
 1060 006c F021     		movs	r1, #240
 1061 006e 3048     		ldr	r0, .L73+52
 1062 0070 FFF7FEFF 		bl	CapSense_WriteBitsSafe
 1063              	.LVL153:
 576:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1064              		.loc 1 576 0
 1065 0074 0022     		movs	r2, #0
 1066 0076 0221     		movs	r1, #2
 1067 0078 2E48     		ldr	r0, .L73+56
 1068 007a FFF7FEFF 		bl	CapSense_WriteBitsSafe
 1069              	.LVL154:
 579:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegValue |= CapSense_SW_BYP_SEL_SW_BYA_MASK;
 1070              		.loc 1 579 0
 1071 007e 2E4B     		ldr	r3, .L73+60
 1072 0080 1A68     		ldr	r2, [r3]
 1073              	.LVL155:
 580:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_BYP_SEL_PTR, newRegValue);
 1074              		.loc 1 580 0
 1075 0082 8021     		movs	r1, #128
 1076 0084 4901     		lsls	r1, r1, #5
 1077 0086 0A43     		orrs	r2, r1
 1078              	.LVL156:
 581:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1079              		.loc 1 581 0
 1080 0088 1A60     		str	r2, [r3]
 587:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
 1081              		.loc 1 587 0
 1082 008a 8021     		movs	r1, #128
 1083 008c 4900     		lsls	r1, r1, #1
 1084 008e 2B4A     		ldr	r2, .L73+64
 1085              	.LVL157:
 1086 0090 1160     		str	r1, [r2]
 1087              	.LVL158:
 595:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 59


 1088              		.loc 1 595 0
 1089 0092 8822     		movs	r2, #136
 1090 0094 5202     		lsls	r2, r2, #9
 1091 0096 1A60     		str	r2, [r3]
 598:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 1092              		.loc 1 598 0
 1093 0098 4B46     		mov	r3, r9
 1094 009a 1C60     		str	r4, [r3]
 604:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newRegValue |= CapSense_SW_REFGEN_SEL_SW_SGR_MASK | CapSense_SW_REFGEN_SEL_SW_IAIB_MASK
 1095              		.loc 1 604 0
 1096 009c 2B68     		ldr	r3, [r5]
 1097              	.LVL159:
 605:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SW_REFGEN_SEL_PTR, newRegValue);
 1098              		.loc 1 605 0
 1099 009e 4246     		mov	r2, r8
 1100 00a0 1343     		orrs	r3, r2
 1101              	.LVL160:
 606:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
 1102              		.loc 1 606 0
 1103 00a2 2B60     		str	r3, [r5]
 615:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1104              		.loc 1 615 0
 1105 00a4 8023     		movs	r3, #128
 1106              	.LVL161:
 1107 00a6 5B04     		lsls	r3, r3, #17
 1108 00a8 254A     		ldr	r2, .L73+68
 1109 00aa 1360     		str	r3, [r2]
 1110              	.LVL162:
 642:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1111              		.loc 1 642 0
 1112 00ac 2549     		ldr	r1, .L73+72
 1113 00ae 264A     		ldr	r2, .L73+76
 1114 00b0 1160     		str	r1, [r2]
 646:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1115              		.loc 1 646 0
 1116 00b2 0222     		movs	r2, #2
 1117 00b4 3A60     		str	r2, [r7]
 649:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                                           CapSense_SW_AMUXBUF_SEL_S
 1118              		.loc 1 649 0
 1119 00b6 2549     		ldr	r1, .L73+80
 1120 00b8 254A     		ldr	r2, .L73+84
 1121 00ba 1160     		str	r1, [r2]
 659:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_2000_MV > CapSense_CYDEV_VDDA_MV) */
 1122              		.loc 1 659 0
 1123 00bc 3360     		str	r3, [r6]
 663:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1124              		.loc 1 663 0
 1125 00be FFF7FEFF 		bl	CapSense_SsCSDConfigIDACs
 1126              	.LVL163:
 666:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1127              		.loc 1 666 0
 1128 00c2 2023     		movs	r3, #32
 1129 00c4 0D4A     		ldr	r2, .L73
 1130 00c6 D05C     		ldrb	r0, [r2, r3]
 1131 00c8 FFF7FEFF 		bl	CapSense_SsSetModClkClockDivider
 1132              	.LVL164:
 670:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 60


 1133              		.loc 1 670 0
 1134 00cc 0120     		movs	r0, #1
 1135 00ce FFF7FEFF 		bl	CapSense_SsSetShieldDelay
 1136              	.LVL165:
 674:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1137              		.loc 1 674 0
 1138 00d2 FFF7FEFF 		bl	CapSense_SsCSDSetFilterDelay
 1139              	.LVL166:
 678:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                       CapSense_CONFIG_SENSE_EN_MASK |
 1140              		.loc 1 678 0
 1141 00d6 1F4B     		ldr	r3, .L73+88
 1142 00d8 1B68     		ldr	r3, [r3]
 1143 00da 1F4A     		ldr	r2, .L73+92
 1144 00dc 1343     		orrs	r3, r2
 1145 00de 1F4A     		ldr	r2, .L73+96
 1146 00e0 1360     		str	r3, [r2]
 684:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1147              		.loc 1 684 0
 1148 00e2 0F22     		movs	r2, #15
 1149 00e4 1E4B     		ldr	r3, .L73+100
 1150 00e6 1A60     		str	r2, [r3]
 687:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1151              		.loc 1 687 0
 1152 00e8 1E4B     		ldr	r3, .L73+104
 1153 00ea 1C60     		str	r4, [r3]
 690:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1154              		.loc 1 690 0
 1155 00ec 053A     		subs	r2, r2, #5
 1156 00ee 1E4B     		ldr	r3, .L73+108
 1157 00f0 1A60     		str	r2, [r3]
 718:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1158              		.loc 1 718 0
 1159              		@ sp needed
 1160 00f2 0CBC     		pop	{r2, r3}
 1161 00f4 9046     		mov	r8, r2
 1162 00f6 9946     		mov	r9, r3
 1163 00f8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1164              	.L74:
 1165 00fa C046     		.align	2
 1166              	.L73:
 1167 00fc 00000000 		.word	CapSense_dsRam
 1168 0100 04020B40 		.word	1074463236
 1169 0104 A8020B40 		.word	1074463400
 1170 0108 01000010 		.word	268435457
 1171 010c F4000B40 		.word	1074462964
 1172 0110 B4020B40 		.word	1074463412
 1173 0114 C0020B40 		.word	1074463424
 1174 0118 20030B40 		.word	1074463520
 1175 011c 84010B40 		.word	1074463108
 1176 0120 88020B40 		.word	1074463368
 1177 0124 80020B40 		.word	1074463360
 1178 0128 84020B40 		.word	1074463364
 1179 012c 80010B40 		.word	1074463104
 1180 0130 00040240 		.word	1073873920
 1181 0134 00040440 		.word	1074004992
 1182 0138 94020B40 		.word	1074463380
 1183 013c A0020B40 		.word	1074463392
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 61


 1184 0140 A4020B40 		.word	1074463396
 1185 0144 41120000 		.word	4673
 1186 0148 88010B40 		.word	1074463112
 1187 014c 00000301 		.word	16973824
 1188 0150 90020B40 		.word	1074463376
 1189 0154 00000000 		.word	.LANCHOR0
 1190 0158 00100080 		.word	-2147479552
 1191 015c 00000B40 		.word	1074462720
 1192 0160 00030B40 		.word	1074463488
 1193 0164 F0010B40 		.word	1074463216
 1194 0168 10030B40 		.word	1074463504
 1195              		.cfi_endproc
 1196              	.LFE8:
 1197              		.size	CapSense_SsCSDInitialize, .-CapSense_SsCSDInitialize
 1198              		.section	.text.CapSense_SsCSDSetUpIdacs,"ax",%progbits
 1199              		.align	2
 1200              		.global	CapSense_SsCSDSetUpIdacs
 1201              		.code	16
 1202              		.thumb_func
 1203              		.type	CapSense_SsCSDSetUpIdacs, %function
 1204              	CapSense_SsCSDSetUpIdacs:
 1205              	.LFB10:
 799:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint8 interruptState;
 1206              		.loc 1 799 0
 1207              		.cfi_startproc
 1208              		@ args = 0, pretend = 0, frame = 0
 1209              		@ frame_needed = 0, uses_anonymous_args = 0
 1210              	.LVL167:
 1211 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1212              		.cfi_def_cfa_offset 24
 1213              		.cfi_offset 3, -24
 1214              		.cfi_offset 4, -20
 1215              		.cfi_offset 5, -16
 1216              		.cfi_offset 6, -12
 1217              		.cfi_offset 7, -8
 1218              		.cfi_offset 14, -4
 1219 0002 0700     		movs	r7, r0
 804:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1220              		.loc 1 804 0
 1221 0004 837A     		ldrb	r3, [r0, #10]
 1222 0006 DB00     		lsls	r3, r3, #3
 1223 0008 0F4A     		ldr	r2, .L76
 1224 000a 9D58     		ldr	r5, [r3, r2]
 1225              	.LVL168:
 812:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1226              		.loc 1 812 0
 1227 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1228              	.LVL169:
 815:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1229              		.loc 1 815 0
 1230 0010 0E4B     		ldr	r3, .L76+4
 1231 0012 1A68     		ldr	r2, [r3]
 1232              	.LVL170:
 818:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1233              		.loc 1 818 0
 1234 0014 0E4C     		ldr	r4, .L76+8
 1235 0016 2240     		ands	r2, r4
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 62


 1236              	.LVL171:
 831:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN | CapSense_CSD_TOUCHPAD_WIDGET_EN) */
 1237              		.loc 1 831 0
 1238 0018 0E49     		ldr	r1, .L76+12
 1239 001a 0E78     		ldrb	r6, [r1]
 1240 001c BF19     		adds	r7, r7, r6
 1241              	.LVL172:
 1242 001e 797A     		ldrb	r1, [r7, #9]
 1243 0020 0A43     		orrs	r2, r1
 1244              	.LVL173:
 833:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1245              		.loc 1 833 0
 1246 0022 2A43     		orrs	r2, r5
 1247              	.LVL174:
 836:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CyExitCriticalSection(interruptState);
 1248              		.loc 1 836 0
 1249 0024 1A60     		str	r2, [r3]
 837:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1250              		.loc 1 837 0
 1251 0026 FFF7FEFF 		bl	CyExitCriticalSection
 1252              	.LVL175:
 840:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Get IDACB Value */
 1253              		.loc 1 840 0
 1254 002a FFF7FEFF 		bl	CyEnterCriticalSection
 1255              	.LVL176:
 842:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1256              		.loc 1 842 0
 1257 002e 0A49     		ldr	r1, .L76+16
 1258 0030 0B68     		ldr	r3, [r1]
 1259              	.LVL177:
 845:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1260              		.loc 1 845 0
 1261 0032 2340     		ands	r3, r4
 1262              	.LVL178:
 848:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             idacBRegValue |= idacGain;
 1263              		.loc 1 848 0
 1264 0034 094A     		ldr	r2, .L76+20
 1265 0036 1268     		ldr	r2, [r2]
 1266 0038 9619     		adds	r6, r2, r6
 1267 003a 727A     		ldrb	r2, [r6, #9]
 1268 003c 1343     		orrs	r3, r2
 1269              	.LVL179:
 849:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1270              		.loc 1 849 0
 1271 003e 2B43     		orrs	r3, r5
 1272              	.LVL180:
 852:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CyExitCriticalSection(interruptState);
 1273              		.loc 1 852 0
 1274 0040 0B60     		str	r3, [r1]
 853:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
 1275              		.loc 1 853 0
 1276 0042 FFF7FEFF 		bl	CyExitCriticalSection
 1277              	.LVL181:
 897:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1278              		.loc 1 897 0
 1279              		@ sp needed
 1280              	.LVL182:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 63


 1281 0046 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1282              	.L77:
 1283              		.align	2
 1284              	.L76:
 1285 0048 00000000 		.word	CapSense_idacGainTable
 1286 004c C0010B40 		.word	1074463168
 1287 0050 80FF3FFC 		.word	-62914688
 1288 0054 00000000 		.word	CapSense_scanFreqIndex
 1289 0058 C4010B40 		.word	1074463172
 1290 005c 00000000 		.word	CapSense_curRamSnsPtr
 1291              		.cfi_endproc
 1292              	.LFE10:
 1293              		.size	CapSense_SsCSDSetUpIdacs, .-CapSense_SsCSDSetUpIdacs
 1294              		.section	.text.CapSense_SsCSDGetNumberOfConversions,"ax",%progbits
 1295              		.align	2
 1296              		.global	CapSense_SsCSDGetNumberOfConversions
 1297              		.code	16
 1298              		.thumb_func
 1299              		.type	CapSense_SsCSDGetNumberOfConversions, %function
 1300              	CapSense_SsCSDGetNumberOfConversions:
 1301              	.LFB11:
 921:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 conversionsNum;
 1302              		.loc 1 921 0
 1303              		.cfi_startproc
 1304              		@ args = 0, pretend = 0, frame = 0
 1305              		@ frame_needed = 0, uses_anonymous_args = 0
 1306              	.LVL183:
 1307 0000 10B5     		push	{r4, lr}
 1308              		.cfi_def_cfa_offset 8
 1309              		.cfi_offset 4, -8
 1310              		.cfi_offset 14, -4
 1311 0002 0300     		movs	r3, r0
 1312 0004 1400     		movs	r4, r2
 928:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1313              		.loc 1 928 0
 1314 0006 0120     		movs	r0, #1
 1315              	.LVL184:
 1316 0008 8840     		lsls	r0, r0, r1
 1317              	.LVL185:
 957:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 1318              		.loc 1 957 0
 1319 000a 1029     		cmp	r1, #16
 1320 000c 00D1     		bne	.L79
 959:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 1321              		.loc 1 959 0
 1322 000e 1D38     		subs	r0, r0, #29
 1323              	.LVL186:
 1324              	.L79:
 963:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 1325              		.loc 1 963 0
 1326 0010 002B     		cmp	r3, #0
 1327 0012 02D0     		beq	.L80
 965:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
 1328              		.loc 1 965 0
 1329 0014 1900     		movs	r1, r3
 1330              	.LVL187:
 1331 0016 FFF7FEFF 		bl	__aeabi_uidiv
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 64


 1332              	.LVL188:
 1333              	.L80:
 971:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 1334              		.loc 1 971 0
 1335 001a 053C     		subs	r4, r4, #5
 1336              	.LVL189:
 1337 001c 012C     		cmp	r4, #1
 1338 001e 00D8     		bhi	.L81
 976:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 break;
 1339              		.loc 1 976 0
 1340 0020 4008     		lsrs	r0, r0, #1
 1341              	.LVL190:
 1342              	.L81:
 986:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
 1343              		.loc 1 986 0
 1344 0022 0028     		cmp	r0, #0
 1345 0024 00D1     		bne	.L83
 1346 0026 0130     		adds	r0, r0, #1
 1347              	.LVL191:
 1348              	.L83:
 987:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 1349              		.loc 1 987 0 discriminator 4
 1350              		@ sp needed
 1351              	.LVL192:
 1352 0028 10BD     		pop	{r4, pc}
 1353              		.cfi_endproc
 1354              	.LFE11:
 1355              		.size	CapSense_SsCSDGetNumberOfConversions, .-CapSense_SsCSDGetNumberOfConversions
 1356 002a C046     		.section	.text.CapSense_SsCSDConfigClock,"ax",%progbits
 1357              		.align	2
 1358              		.global	CapSense_SsCSDConfigClock
 1359              		.code	16
 1360              		.thumb_func
 1361              		.type	CapSense_SsCSDConfigClock, %function
 1362              	CapSense_SsCSDConfigClock:
 1363              	.LFB12:
1003:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 snsClkDivider;
 1364              		.loc 1 1003 0
 1365              		.cfi_startproc
 1366              		@ args = 0, pretend = 0, frame = 0
 1367              		@ frame_needed = 0, uses_anonymous_args = 0
 1368 0000 10B5     		push	{r4, lr}
 1369              		.cfi_def_cfa_offset 8
 1370              		.cfi_offset 4, -8
 1371              		.cfi_offset 14, -4
1009:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1372              		.loc 1 1009 0
 1373 0002 0E4B     		ldr	r3, .L90
 1374 0004 1A78     		ldrb	r2, [r3]
 1375 0006 D2B2     		uxtb	r2, r2
1008:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****              CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2WdgtRam;
 1376              		.loc 1 1008 0
 1377 0008 D300     		lsls	r3, r2, #3
 1378 000a 9A1A     		subs	r2, r3, r2
 1379 000c 9300     		lsls	r3, r2, #2
 1380 000e 0C4A     		ldr	r2, .L90+4
 1381 0010 D318     		adds	r3, r2, r3
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 65


 1382 0012 5B68     		ldr	r3, [r3, #4]
 1383              	.LVL193:
1026:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
 1384              		.loc 1 1026 0
 1385 0014 9989     		ldrh	r1, [r3, #12]
 1386              	.LVL194:
1042:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
 1387              		.loc 1 1042 0
 1388 0016 9B7B     		ldrb	r3, [r3, #14]
 1389              	.LVL195:
1046:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1390              		.loc 1 1046 0
 1391 0018 1804     		lsls	r0, r3, #16
 1392              	.LVL196:
1049:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             (CapSense_CLK_SOURCE_PRS12 == snsClkSrc))
 1393              		.loc 1 1049 0
 1394 001a 5A1F     		subs	r2, r3, #5
 1395 001c 012A     		cmp	r2, #1
 1396 001e 02D8     		bhi	.L86
1052:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
 1397              		.loc 1 1052 0
 1398 0020 8022     		movs	r2, #128
 1399 0022 9204     		lsls	r2, r2, #18
 1400 0024 1043     		orrs	r0, r2
 1401              	.LVL197:
 1402              	.L86:
1062:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 1403              		.loc 1 1062 0
 1404 0026 053B     		subs	r3, r3, #5
 1405              	.LVL198:
 1406 0028 DBB2     		uxtb	r3, r3
 1407              	.LVL199:
 1408 002a 012B     		cmp	r3, #1
 1409 002c 02D8     		bhi	.L87
1067:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 if (snsClkDivider == 0u)
 1410              		.loc 1 1067 0
 1411 002e 4908     		lsrs	r1, r1, #1
 1412              	.LVL200:
1068:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
 1413              		.loc 1 1068 0
 1414 0030 00D1     		bne	.L87
1070:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
 1415              		.loc 1 1070 0
 1416 0032 0131     		adds	r1, r1, #1
 1417              	.LVL201:
 1418              	.L87:
1081:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
 1419              		.loc 1 1081 0
 1420 0034 FFF7FEFF 		bl	CapSense_SsCSDSetModeSnsClockDivider
 1421              	.LVL202:
1082:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1422              		.loc 1 1082 0
 1423              		@ sp needed
 1424 0038 10BD     		pop	{r4, pc}
 1425              	.L91:
 1426 003a C046     		.align	2
 1427              	.L90:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 66


 1428 003c 00000000 		.word	CapSense_widgetIndex
 1429 0040 00000000 		.word	CapSense_dsFlash
 1430              		.cfi_endproc
 1431              	.LFE12:
 1432              		.size	CapSense_SsCSDConfigClock, .-CapSense_SsCSDConfigClock
 1433              		.section	.text.CapSense_SsCSDCalculateScanDuration,"ax",%progbits
 1434              		.align	2
 1435              		.global	CapSense_SsCSDCalculateScanDuration
 1436              		.code	16
 1437              		.thumb_func
 1438              		.type	CapSense_SsCSDCalculateScanDuration, %function
 1439              	CapSense_SsCSDCalculateScanDuration:
 1440              	.LFB13:
1106:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
 1441              		.loc 1 1106 0
 1442              		.cfi_startproc
 1443              		@ args = 0, pretend = 0, frame = 0
 1444              		@ frame_needed = 0, uses_anonymous_args = 0
 1445              	.LVL203:
 1446 0000 10B5     		push	{r4, lr}
 1447              		.cfi_def_cfa_offset 8
 1448              		.cfi_offset 4, -8
 1449              		.cfi_offset 14, -4
 1450 0002 0300     		movs	r3, r0
1126:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
 1451              		.loc 1 1126 0
 1452 0004 8089     		ldrh	r0, [r0, #12]
 1453              	.LVL204:
1130:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1454              		.loc 1 1130 0
 1455 0006 1988     		ldrh	r1, [r3]
 1456 0008 9A7B     		ldrb	r2, [r3, #14]
 1457 000a FFF7FEFF 		bl	CapSense_SsCSDGetNumberOfConversions
 1458              	.LVL205:
1133:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
 1459              		.loc 1 1133 0
 1460 000e 0004     		lsls	r0, r0, #16
 1461              	.LVL206:
 1462 0010 000C     		lsrs	r0, r0, #16
 1463 0012 014B     		ldr	r3, .L93
 1464 0014 1860     		str	r0, [r3]
1138:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1465              		.loc 1 1138 0
 1466              		@ sp needed
 1467 0016 10BD     		pop	{r4, pc}
 1468              	.L94:
 1469              		.align	2
 1470              	.L93:
 1471 0018 14030B40 		.word	1074463508
 1472              		.cfi_endproc
 1473              	.LFE13:
 1474              		.size	CapSense_SsCSDCalculateScanDuration, .-CapSense_SsCSDCalculateScanDuration
 1475              		.section	.text.CapSense_SsCSDStartSample,"ax",%progbits
 1476              		.align	2
 1477              		.global	CapSense_SsCSDStartSample
 1478              		.code	16
 1479              		.thumb_func
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 67


 1480              		.type	CapSense_SsCSDStartSample, %function
 1481              	CapSense_SsCSDStartSample:
 1482              	.LFB16:
1328:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE != CapSense_CSDV2)
 1483              		.loc 1 1328 0
 1484              		.cfi_startproc
 1485              		@ args = 0, pretend = 0, frame = 0
 1486              		@ frame_needed = 0, uses_anonymous_args = 0
 1487 0000 10B5     		push	{r4, lr}
 1488              		.cfi_def_cfa_offset 8
 1489              		.cfi_offset 4, -8
 1490              		.cfi_offset 14, -4
1341:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1491              		.loc 1 1341 0
 1492 0002 0A20     		movs	r0, #10
 1493 0004 FFF7FEFF 		bl	CyIntDisable
 1494              	.LVL207:
1344:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1495              		.loc 1 1344 0
 1496 0008 0122     		movs	r2, #1
 1497 000a 2E4B     		ldr	r3, .L103
 1498 000c 1A60     		str	r2, [r3]
 1499              	.LBB6:
 1500              	.LBB7:
2134:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif
2135:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2136:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2137:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /*******************************************************************************
2138:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * Function Name: CapSense_SsCSDCalibrate
2139:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     ****************************************************************************//**
2140:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2141:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \brief
2142:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  Implements IDAC calibration for a desired widget using successive
2143:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  approximation algorithm.
2144:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2145:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \details
2146:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  Implements IDAC calibration for a desired widget using successive
2147:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  approximation algorithm. It supports any type of CSD widgets, and works
2148:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  with multi-frequency scan and compensation IDAC features enabled.
2149:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2150:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  As result of function operation, the modulator IDAC that corresponds to the
2151:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  sensor with the highest capacitance (the biggest modulator IDAC) is stored
2152:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  into widget data structure. If it is dual-axis widget type (touchpad or matrix
2153:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  buttons) or if multi-frequency scan feature is enabled then the maximum
2154:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  modulator IDAC found separately for each multi-frequency channel and for
2155:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  rows/columns.
2156:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2157:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  If compensation IDAC is enabled, then it preserves IDAC value of
2158:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  single-sensor calibration. In dual IDAC mode each sensor was calibrated with
2159:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  equal values of modulator and compensation IDAC.
2160:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2161:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  After IDACs were found each sensor scanned again to get real raw count stored
2162:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  in sensor structure.
2163:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2164:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \param widgetId
2165:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  Specifies the ID number of the CSD widget to calibrate its raw count.
2166:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  A macro for the widget ID can be found in the
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 68


2167:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  CapSense Configuration header file defined as
2168:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  CapSense_<WidgetName>_WDGT_ID.
2169:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2170:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \param target
2171:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  Specifies the calibration target in percentages of the maximum raw count.
2172:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2173:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *******************************************************************************/
2174:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     static void CapSense_SsCSDCalibrate(uint32 widgetId, uint32 target)
2175:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
2176:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 snsIndex;
2177:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 freqChannel;
2178:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 calMask;
2179:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 temp;
2180:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 watchdogCounter;
2181:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2182:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint8 *ptrIdacMod;
2183:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint8 *ptrMaxIdac;
2184:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2185:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint8 maxIdac[CapSense_NUM_SCAN_FREQS];
2186:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2187:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2188:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint8 maxRowIdac[CapSense_NUM_SCAN_FREQS];
2189:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 dualWidgetType = 0u;
2190:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif
2191:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2192:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_RAM_SNS_STRUCT *ptrRamSensor;
2193:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_FLASH_WD_STRUCT const *ptrFlashWidget = &CapSense_dsFlash.wdgtArray[widgetId];
2194:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_RAM_WD_BASE_STRUCT *ptrRamWidget = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWidget->
2195:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2196:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         ptrIdacMod = &ptrRamWidget->idacMod[0u];
2197:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         ptrMaxIdac = &maxIdac[0u];
2198:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2199:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
2200:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
2201:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             maxIdac[freqChannel] = 0u;
2202:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2203:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 maxRowIdac[freqChannel] = 0u;
2204:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif
2205:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
2206:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2207:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Calculate raw count level based on resolution and target */
2208:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         temp = (((0x00000001Lu << ptrRamWidget->resolution) - 1u) * target) / CapSense_PERCENTAGE_1
2209:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2210:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2211:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             if ((CapSense_WD_TOUCHPAD_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)) ||
2212:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 (CapSense_WD_MATRIX_BUTTON_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)))
2213:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
2214:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 dualWidgetType = 1u;
2215:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
2216:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif
2217:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2218:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Loop through the widget sensors */
2219:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         for(snsIndex = 0u; snsIndex < ptrFlashWidget->totalNumSns; snsIndex++)
2220:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
2221:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2222:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 if (snsIndex == ptrFlashWidget->numCols)
2223:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 69


2224:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     if (0u != dualWidgetType)
2225:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
2226:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         ptrIdacMod = &ptrRamWidget->rowIdacMod[0u];
2227:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         ptrMaxIdac = &maxRowIdac[0u];
2228:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
2229:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
2230:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif
2231:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2232:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             ptrRamSensor = &((ptrFlashWidget->ptr2SnsRam)[snsIndex]);
2233:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2234:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Set default IDAC code */
2235:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             calMask = CapSense_CSD_CAL_MIDDLE_VALUE;
2236:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
2237:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
2238:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 ptrIdacMod[freqChannel] = CapSense_CSD_CAL_MIDDLE_VALUE;
2239:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
2240:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     ptrRamSensor->idacComp[freqChannel] = ptrIdacMod[freqChannel];
2241:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #endif
2242:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
2243:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2244:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Loop through IDAC code */
2245:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             do
2246:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
2247:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Need to configure HW block with each IDAC change */
2248:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_CSDSetupWidgetExt(widgetId, snsIndex);
2249:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2250:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #if (CapSense_ENABLE == CapSense_CSDV2)
2251:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     CapSense_DischargeExtCapacitors(CapSense_EXT_CAP_DISCHARGE_TIME);
2252:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #endif
2253:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2254:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Scan sensor */
2255:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_CSDScanExt();
2256:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2257:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 watchdogCounter = CapSense_CSD_CALIBR_WATCHDOG_CYCLES_NUM;
2258:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 while (((CapSense_dsRam.status & CapSense_SW_STS_BUSY) != 0u) && (0uL != watchdogCo
2259:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
2260:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     watchdogCounter--;
2261:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
2262:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2263:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Update IDAC based on scan result */
2264:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
2265:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
2266:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     if (ptrRamSensor->raw[freqChannel] < temp)
2267:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
2268:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         ptrIdacMod[freqChannel] &= (uint8)(~calMask);
2269:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
2270:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
2271:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2272:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Switch to the lower IDAC mask */
2273:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 calMask >>= 1u;
2274:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
2275:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
2276:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     ptrIdacMod[freqChannel] |= (uint8)calMask;
2277:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
2278:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         ptrRamSensor->idacComp[freqChannel] = ptrIdacMod[freqChannel];
2279:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     #endif
2280:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     if (0u == calMask)
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 70


2281:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
2282:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         if (0u == ptrIdacMod[freqChannel])
2283:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         {
2284:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             ptrIdacMod[freqChannel] = 1u;
2285:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
2286:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 ptrRamSensor->idacComp[freqChannel] = ptrIdacMod[freqChannel];
2287:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             #endif
2288:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         }
2289:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
2290:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
2291:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
2292:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             while (calMask != 0u);
2293:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2294:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
2295:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
2296:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 if (ptrMaxIdac[freqChannel] < ptrIdacMod[freqChannel])
2297:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
2298:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     ptrMaxIdac[freqChannel] = ptrIdacMod[freqChannel];
2299:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
2300:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
2301:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2302:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Perform scan again to get real raw count if IDAC was changed at the last iteration *
2303:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_CSDSetupWidgetExt(widgetId, snsIndex);
2304:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_CSDScanExt();
2305:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2306:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             watchdogCounter = CapSense_CSD_CALIBR_WATCHDOG_CYCLES_NUM;
2307:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             while (((CapSense_dsRam.status & CapSense_SW_STS_BUSY) != 0u) && (0uL != watchdogCounte
2308:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
2309:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 watchdogCounter--;
2310:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
2311:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
2312:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2313:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
2314:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
2315:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             ptrRamWidget->idacMod[freqChannel] = maxIdac[freqChannel];
2316:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2317:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 if (0u != dualWidgetType)
2318:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
2319:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     ptrRamWidget->rowIdacMod[freqChannel] = maxRowIdac[freqChannel];
2320:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2321:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     #if (CapSense_ENABLE == CapSense_CSD_COL_ROW_IDAC_ALIGNMENT_EN)
2322:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         #if (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN)
2323:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             if (ptrRamWidget->idacMod[freqChannel] < ptrRamWidget->rowIdacMod[freqC
2324:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             {
2325:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 temp = ptrRamWidget->rowIdacMod[freqChannel];
2326:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 if (temp > CapSense_CSD_CAL_IDAC_MAX_VALUE)
2327:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 {
2328:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                     temp = CapSense_CSD_CAL_IDAC_MAX_VALUE;
2329:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 }
2330:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 ptrRamWidget->idacMod[freqChannel] = (uint8)temp;
2331:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             }
2332:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             else
2333:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             {
2334:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 temp = ptrRamWidget->idacMod[freqChannel];
2335:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 if (temp > CapSense_CSD_CAL_IDAC_MAX_VALUE)
2336:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 {
2337:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                     temp = CapSense_CSD_CAL_IDAC_MAX_VALUE;
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 71


2338:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 }
2339:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 ptrRamWidget->rowIdacMod[freqChannel] = (uint8)temp;
2340:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             }
2341:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         #else
2342:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             if (((uint32)ptrRamWidget->idacMod[freqChannel] * ptrRamWidget->snsClk)
2343:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 ((uint32)ptrRamWidget->rowIdacMod[freqChannel] * ptrRamWidget->rowS
2344:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             {
2345:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 temp = ((uint32)ptrRamWidget->rowIdacMod[freqChannel] *
2346:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                 ptrRamWidget->rowSnsClk) / ptrRamWidget->snsClk;
2347:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 if (temp > CapSense_CSD_CAL_IDAC_MAX_VALUE)
2348:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 {
2349:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                     temp = CapSense_CSD_CAL_IDAC_MAX_VALUE;
2350:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 }
2351:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 ptrRamWidget->idacMod[freqChannel] = (uint8)temp;
2352:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             }
2353:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             else
2354:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             {
2355:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 temp = ((uint32)ptrRamWidget->idacMod[freqChannel] *
2356:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                 ptrRamWidget->snsClk) / ptrRamWidget->rowSnsClk;
2357:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 if (temp > CapSense_CSD_CAL_IDAC_MAX_VALUE)
2358:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 {
2359:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                     temp = CapSense_CSD_CAL_IDAC_MAX_VALUE;
2360:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 }
2361:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 ptrRamWidget->rowIdacMod[freqChannel] = (uint8)temp;
2362:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             }
2363:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         #endif
2364:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     #endif
2365:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
2366:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif
2367:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
2368:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
2369:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2370:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2371:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /*******************************************************************************
2372:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * Function Name: CapSense_CSDCalibrateWidget
2373:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     ****************************************************************************//**
2374:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2375:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \brief
2376:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  Executes the IDAC calibration for all the sensors in the widget specified in
2377:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  the input.
2378:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2379:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \details
2380:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  Executes the IDAC calibration for all the sensors in the widget specified in
2381:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  the input.
2382:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2383:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  \note This function is obsolete and kept for backward compatibility only.
2384:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  The CapSense_CalibrateWidget() function should be used instead.
2385:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2386:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  Performs a successive approximation search algorithm to find appropriate
2387:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  IDAC values for sensors in the specified widget that provides the raw
2388:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  count to the level specified by the target parameter.
2389:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2390:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  Calibration fails if the achieved raw count is outside of the range specified
2391:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  by the target and acceptable calibration deviation.
2392:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2393:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  This function is available when the CSD Enable IDAC auto-calibration
2394:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  parameter is enabled or the  SmartSense auto-tuning mode is configured.
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 72


2395:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2396:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \param widgetId
2397:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  Specifies the ID number of the CSD widget to calibrate its raw count.
2398:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  A macro for the widget ID can be found in the
2399:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  CapSense Configuration header file defined as
2400:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  CapSense_<WidgetName>_WDGT_ID.
2401:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2402:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \param target
2403:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  Specifies the calibration target in percentages of the maximum raw count.
2404:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2405:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \return
2406:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  Returns the status of the specified widget calibration:
2407:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *    - CYRET_SUCCESS - The operation is successfully completed.
2408:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *    - CYRET_BAD_PARAM - The input parameter is invalid.
2409:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *    - CYRET_BAD_DATA - The calibration failed and the Component may not operate
2410:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *      as expected.
2411:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *    - CYRET_TIMEOUT - The calibration failed due to timeout.
2412:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *    - CYRET_INVALID_STATE - The previous scanning is not completed and the
2413:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *      hardware block is busy.
2414:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2415:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *******************************************************************************/
2416:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     cystatus CapSense_CSDCalibrateWidget(uint32 widgetId, uint32 target)
2417:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
2418:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
2419:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 watchdogCounter;
2420:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2421:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_IDAC_AUTO_GAIN_EN)
2422:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 gainSwitch;
2423:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif
2424:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2425:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_FLASH_WD_STRUCT const *ptrFlashWidget = &CapSense_dsFlash.wdgtArray[widgetId];
2426:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2427:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
2428:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
2429:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Previous widget is being scanned, return error */
2430:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             calibrateStatus = CYRET_INVALID_STATE;
2431:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
2432:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         else
2433:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
2434:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Set default IDAC gain */
2435:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             ((CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWidget->ptr2WdgtRam)->idacGainIndex =
2436:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_CSD_IDAC_GAIN_INDEX_DEFAULT;
2437:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2438:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Perform calibration */
2439:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_ENABLE != CapSense_CSD_IDAC_AUTO_GAIN_EN)
2440:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_SsCSDCalibrate(widgetId, target);
2441:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #else
2442:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 do
2443:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
2444:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     CapSense_SsCSDCalibrate(widgetId, target);
2445:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     gainSwitch = CapSense_SsCSDSwitchIdacGain(ptrFlashWidget);
2446:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 } while(0u != gainSwitch);
2447:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif
2448:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2449:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
2450:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* IDAC Normalization in Dual IDAC mode */
2451:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_SsCSDNormalizeIdac(ptrFlashWidget, target);
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 73


2452:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif
2453:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2454:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Perform specified widget scan to check calibration result */
2455:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_CSDSetupWidget(widgetId);
2456:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_CSDScan();
2457:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2458:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             watchdogCounter = CapSense_WIDGET_MAX_SCAN_TIME;
2459:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             while (((CapSense_dsRam.status & CapSense_SW_STS_BUSY) != 0u) && (0uL != watchdogCounte
2460:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
2461:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 watchdogCounter--;
2462:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
2463:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2464:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Verification of calibration result */
2465:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             if (0u == watchdogCounter)
2466:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
2467:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 calibrateStatus = CYRET_TIMEOUT;
2468:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
2469:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             else
2470:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
2471:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 calibrateStatus = CapSense_SsCSDCalibrateCheck(widgetId, target);
2472:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
2473:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2474:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****              /* Update CRC */
2475:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_ENABLE ==CapSense_TST_WDGT_CRC_EN)
2476:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_DsUpdateWidgetCrc(widgetId);
2477:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif
2478:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
2479:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2480:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         return calibrateStatus;
2481:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
2482:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* ((CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)) || \
2483:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN)) */
2484:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2485:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2486:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if (CapSense_DISABLE == CapSense_CSDV2)
2487:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /*******************************************************************************
2488:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * Function Name: CapSense_SsCSDClockRestart
2489:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     ****************************************************************************//**
2490:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2491:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \brief
2492:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  This function restarts the clocks.
2493:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2494:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \details
2495:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  The function performs following:
2496:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  1) Stops, sets dividers and starts ModClk clock;
2497:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  2) Stops and starts SnsClk clock;
2498:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  3) Scan one cycle to reset the flip-flop for Direct clock mode.
2499:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2500:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *******************************************************************************/
2501:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CY_INLINE static void CapSense_SsCSDClockRestart(void)
2502:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
2503:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_CLK_SOURCE_DIRECT == CapSense_CSD_SNS_CLK_SOURCE)
2504:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 watchdogCounter;
2505:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_CLK_SOURCE_DIRECT == CapSense_CSD_SNS_CLK_SOURCE) */
2506:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2507:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Stop clocks, set dividers, and start clock to align clock phase */
2508:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsSetModClkClockDivider((uint32)CapSense_dsRam.modCsdClk);
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 74


2509:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2510:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
2511:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Stop sense clock clock   */
2512:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
2513:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                          ((uint32)CapSense_SnsClk__DIV_ID <<
2514:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                          CapSense_SNSCLK_CMD_DIV_SHIFT)|
2515:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                          ((uint32)CapSense_SNSCLK_CMD_DISABLE_MASK));
2516:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2517:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Check whether previous sense clock start command has finished. */
2518:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             while(0u != (CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) & CapSense_SNSCLK_CMD_ENABLE_MASK))
2519:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
2520:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Wait until previous sense clock start command has finished. */
2521:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
2522:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2523:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Start sense clock aligned to previously started modulator clock. */
2524:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
2525:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                          (uint32)(((uint32)CapSense_SnsClk__DIV_ID << CapSense_SNSCLK_CMD_DIV_SHIFT
2526:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                           ((uint32)CapSense_ModClk__PA_DIV_ID << CapSense_SNSCLK_CMD_PA_DIV_SHIFT) 
2527:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                           CapSense_SNSCLK_CMD_ENABLE_MASK));
2528:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
2529:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Clear bit to disable SnsClk clock. */
2530:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
2531:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                          CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) &
2532:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                          (uint32)(~(uint32)CapSense_SnsClk__ENABLE_MASK));
2533:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2534:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Set bit to enable SnsClk clock. */
2535:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
2536:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                          CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) |
2537:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         CapSense_SnsClk__ENABLE_MASK);
2538:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) */
2539:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2540:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_CLK_SOURCE_DIRECT == CapSense_CSD_SNS_CLK_SOURCE)
2541:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Scan one cycle to reset the flip-flop for Direct clock mode */
2542:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CyIntDisable(CapSense_ISR_NUMBER);
2543:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_COUNTER_PTR, CapSense_ONE_CYCLE);
2544:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2545:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             watchdogCounter = CapSense_ONE_CLOCK_WATCHDOG_CYCLES_NUM;
2546:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             while((0u != (CY_GET_REG32(CapSense_COUNTER_PTR) & CapSense_RESOLUTION_16_BITS)) && (0u
2547:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
2548:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 watchdogCounter--;
2549:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
2550:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_INTR_PTR, CapSense_INTR_SET_MASK);
2551:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CyIntClearPending(CapSense_ISR_NUMBER);
2552:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_CLK_SOURCE_DIRECT == CapSense_CSD_SNS_CLK_SOURCE) */
2553:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
2554:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* (CapSense_DISABLE == CapSense_CSDV2) */
2555:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2556:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2557:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
2558:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_SsCSDCmodPrecharge
2559:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
2560:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
2561:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
2562:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function initializes the Cmod charging to Vref.
2563:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
2564:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
2565:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  For Third-generation HW block:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 75


2566:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  The function initializes the Cmod charging to Vref.
2567:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Then it waits the even when Cmod is completely charged
2568:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  to Vref to have stable raw counts. Software Watchdog Counter is implemented to
2569:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  prevent the project hanging.
2570:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
2571:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  For Fourth-generation HW block:
2572:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Coarse initialization for CMOD and Cch.
2573:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  The coarse initialization is performed by HSCOMP.
2574:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  The HSCOMP monitors the Cmod voltage via Cmod sense path
2575:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  and charges the Cmod using HCAV switch via CSDBUS-A, AMUXBUS-A
2576:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  and static connection of Cmod to AMUXBUS-A.
2577:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
2578:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
2579:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** CY_INLINE static void CapSense_SsCSDCmodPrecharge(void)
2580:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
2581:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
2582:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 watchdogCounter;
2583:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Fourth-generation HW block section */
2584:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2585:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_CSDCMP_PTR, CapSense_CSD_CSDCMP_INIT);
 1501              		.loc 1 2585 0
 1502 000e 0023     		movs	r3, #0
 1503 0010 2D49     		ldr	r1, .L103+4
 1504 0012 0B60     		str	r3, [r1]
2586:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_FW_MOD_SEL_PTR,  CapSense_CSD_SW_FW_MOD_SEL_INIT);
 1505              		.loc 1 2586 0
 1506 0014 2D49     		ldr	r1, .L103+8
 1507 0016 0B60     		str	r3, [r1]
2587:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_FW_TANK_SEL_PTR, CapSense_CSD_SW_FW_TANK_SEL_INIT);
 1508              		.loc 1 2587 0
 1509 0018 2D49     		ldr	r1, .L103+12
 1510 001a 0B60     		str	r3, [r1]
2588:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_SHIELD_SEL_PTR,  CapSense_CSD_SW_SHIELD_SEL_INIT);
 1511              		.loc 1 2588 0
 1512 001c 0620     		movs	r0, #6
 1513 001e 2D49     		ldr	r1, .L103+16
 1514 0020 0860     		str	r0, [r1]
2589:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
2590:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /*
2591:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****              * Connect CMOD to (sense path) to HSCOMP: HMPM or HMPS or HMPT switches depend on Cmod
2592:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****              * Connect AMUXBUS-B to HSCMP positive input
2593:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****              */
2594:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SW_HS_P_SEL_PTR, CapSense_SW_HS_P_SEL_COARSE);
 1515              		.loc 1 2594 0
 1516 0022 FA30     		adds	r0, r0, #250
 1517 0024 2C49     		ldr	r1, .L103+20
 1518 0026 0860     		str	r0, [r1]
2595:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2596:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if(0u != CapSense_CSD_SHIELD_TANK_EN)
2597:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Connect CTANK to AMUXBUS-A */
2598:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_HSIOM_PTR, CapSense_CSH_HSIOM_MASK,
2599:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     (uint32)(CapSense_HSIOM_SEL_AMUXA << CapSense_CSH_HSIOM_SHIFT));
2600:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif /* (0u != CapSense_CSD_SHIELD_TANK_EN) */
2601:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
2602:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Connect CMOD to (sense path) to HSCOMP: HMPM or HMPS or HMPT switches depend on Cmod
2603:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SW_HS_P_SEL_PTR, CapSense_SW_HS_P_SEL_COARSE);
2604:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 76


2605:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2606:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_RES_PTR, CapSense_CSD_SW_RES_INIT);
 1519              		.loc 1 2606 0
 1520 0028 2C49     		ldr	r1, .L103+24
 1521 002a 0A60     		str	r2, [r1]
2607:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2608:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Clear all interrupt pending requests */
2609:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_INTR_PTR, CapSense_INTR_ALL_MASK);
 1522              		.loc 1 2609 0
 1523 002c 8321     		movs	r1, #131
 1524 002e 4900     		lsls	r1, r1, #1
 1525 0030 2B4A     		ldr	r2, .L103+28
 1526 0032 1160     		str	r1, [r2]
2610:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2611:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_INTR_MASK_PTR, CapSense_CLEAR_MASK);
 1527              		.loc 1 2611 0
 1528 0034 2B4A     		ldr	r2, .L103+32
 1529 0036 1360     		str	r3, [r2]
2612:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2613:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Start SEQUENCER for coarse initialization for Cmod */
2614:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SEQ_START_PTR, CapSense_SEQ_START_SEQ_MODE_MASK |
 1530              		.loc 1 2614 0
 1531 0038 0322     		movs	r2, #3
 1532 003a 2B4B     		ldr	r3, .L103+36
 1533 003c 1A60     		str	r2, [r3]
 1534              	.LVL208:
2615:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                          CapSense_SEQ_START_START_MASK);
2616:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2617:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Init Watchdog Counter to prevent a hang */
2618:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         watchdogCounter = CapSense_CSD_PRECHARGE_WATCHDOG_CYCLES_NUM;
 1535              		.loc 1 2618 0
 1536 003e F023     		movs	r3, #240
 1537 0040 00E0     		b	.L96
 1538              	.LVL209:
 1539              	.L98:
2619:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2620:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Wait for INTR.INIT goes high */
2621:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         while((0u == (CY_GET_REG32(CapSense_INTR_PTR) & CapSense_INTR_INIT_MASK)) && (0u != watchdo
2622:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
2623:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             watchdogCounter--;
 1540              		.loc 1 2623 0
 1541 0042 013B     		subs	r3, r3, #1
 1542              	.LVL210:
 1543              	.L96:
2621:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 1544              		.loc 1 2621 0
 1545 0044 264A     		ldr	r2, .L103+28
 1546 0046 1268     		ldr	r2, [r2]
 1547 0048 5207     		lsls	r2, r2, #29
 1548 004a 01D4     		bmi	.L97
 1549 004c 002B     		cmp	r3, #0
 1550 004e F8D1     		bne	.L98
 1551              	.L97:
2624:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
2625:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2626:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         if (0u == watchdogCounter)
 1552              		.loc 1 2626 0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 77


 1553 0050 002B     		cmp	r3, #0
 1554 0052 02D1     		bne	.L99
2627:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
2628:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Set sequencer to idle state if coarse initialization fails */
2629:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SEQ_START_PTR, CapSense_SEQ_START_ABORT_MASK);
 1555              		.loc 1 2629 0
 1556 0054 0822     		movs	r2, #8
 1557 0056 244B     		ldr	r3, .L103+36
 1558              	.LVL211:
 1559 0058 1A60     		str	r2, [r3]
 1560              	.L99:
 1561              	.LBE7:
 1562              	.LBE6:
 1563              	.LBB8:
 1564              	.LBB9:
2630:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
2631:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2632:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
2633:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2634:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 tmpRegValue;
2635:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 newRegValue;
2636:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 watchdogCounter;
2637:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2638:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Save the current IDAC configuration */
2639:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         tmpRegValue = CY_GET_REG32(CapSense_IDAC_PTR);
2640:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2641:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Wait until Cmod discharges below Vref */
2642:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CyDelayCycles(CapSense_CMOD_DISCHARGE_CYCLES);
2643:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2644:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegValue = CapSense_CSD_IDAC_PRECHARGE_CONFIG | (tmpRegValue & ~CapSense_IDAC_MOD_CFG_MA
2645:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2646:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set the IDAC configuration for fast Cmod precharge to Vref */
2647:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_IDAC_PTR, newRegValue);
2648:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2649:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)
2650:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_CONFIG_PTR, CY_GET_REG32(CapSense_CONFIG_PTR) & ~CapSense_CONFIG_
2651:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG) */
2652:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2653:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Init Watchdog Counter to prevent a hang */
2654:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         watchdogCounter = CapSense_CSD_PRECHARGE_WATCHDOG_CYCLES_NUM;
2655:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2656:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Wait until Cmod reaches to Vref */
2657:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         while((0u == (CY_GET_REG32(CapSense_STATUS_PTR) & CapSense_STATUS_SAMPLE)) && (0u != watchd
2658:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
2659:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             watchdogCounter--;
2660:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
2661:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2662:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)
2663:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_CONFIG_PTR, CY_GET_REG32(CapSense_CONFIG_PTR) | CapSense_CONFIG_P
2664:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG) */
2665:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2666:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Restore the current IDAC configuration */
2667:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_IDAC_PTR, tmpRegValue);
2668:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2669:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Enable the sense modulator output */
2670:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECHARGE_CONFIG_CSD_
2671:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 78


2672:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CyIntEnable(CapSense_ISR_NUMBER);
2673:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2674:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2675:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
2676:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2677:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2678:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
2679:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_SsCSDTriggerScan
2680:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
2681:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
2682:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
2683:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function triggers the scanning.
2684:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
2685:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
2686:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  For Third-generation HW block:
2687:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Writes resolution to start the scanning.
2688:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
2689:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  For Fourth-generation HW block:
2690:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Trigger the fine initialization (scan some dummy cycles) and start sampling.
2691:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Fine initialization for CMOD and Start scan.
2692:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  For the fine initialization and sampling, Cmod is static connected to AMUXBUS-A
2693:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  and in every conversion (one cycle of SnsClk), the sensor capacitance is charged
2694:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  from Cmod and discharged to ground using the switches in GPIO cell.
2695:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  The CSDCOMP monitors voltage on Cmod using the sense path and charges Cmod back
2696:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  to Vref using IDACs by connecting IDAC to CSDBUS-A and then the AMUXBUS-A.
2697:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
2698:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
2699:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** CY_INLINE static void CapSense_SsCSDTriggerScan(void)
2700:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
2701:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
2702:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2703:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Fourth-generation HW block section */
2704:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2705:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 watchdogCounter;
2706:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2707:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Clear previous interrupts */
2708:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_INTR_PTR, CapSense_INTR_ALL_MASK);
 1565              		.loc 1 2708 0
 1566 005a 8322     		movs	r2, #131
 1567 005c 5200     		lsls	r2, r2, #1
 1568 005e 204B     		ldr	r3, .L103+28
 1569 0060 1A60     		str	r2, [r3]
2709:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2710:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Clear pending interrupts  */
2711:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CyIntClearPending(CapSense_ISR_NUMBER);
 1570              		.loc 1 2711 0
 1571 0062 0A20     		movs	r0, #10
 1572 0064 FFF7FEFF 		bl	CyIntClearPending
 1573              	.LVL212:
2712:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2713:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Enable CSD interrupt */
2714:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CyIntEnable(CapSense_ISR_NUMBER);
 1574              		.loc 1 2714 0
 1575 0068 0A20     		movs	r0, #10
 1576 006a FFF7FEFF 		bl	CyIntEnable
 1577              	.LVL213:
2715:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 79


2716:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2717:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_HS_P_SEL_PTR, CapSense_CSD_SW_HS_P_SEL_SCAN);
 1578              		.loc 1 2717 0
 1579 006e 8022     		movs	r2, #128
 1580 0070 5202     		lsls	r2, r2, #9
 1581 0072 194B     		ldr	r3, .L103+20
 1582 0074 1A60     		str	r2, [r3]
2718:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2719:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set scanning configuration for switches */
2720:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_FW_MOD_SEL_PTR, CapSense_CSD_SW_FW_MOD_SEL_SCAN);
 1583              		.loc 1 2720 0
 1584 0076 0023     		movs	r3, #0
 1585 0078 144A     		ldr	r2, .L103+8
 1586 007a 1360     		str	r3, [r2]
2721:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_FW_TANK_SEL_PTR,CapSense_CSD_SW_FW_TANK_SEL_SCAN);
 1587              		.loc 1 2721 0
 1588 007c 144A     		ldr	r2, .L103+12
 1589 007e 1360     		str	r3, [r2]
2722:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2723:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_SHIELD_SEL_PTR,  CapSense_CSD_SW_SHIELD_SEL_SCAN);
 1590              		.loc 1 2723 0
 1591 0080 9422     		movs	r2, #148
 1592 0082 9201     		lsls	r2, r2, #6
 1593 0084 134B     		ldr	r3, .L103+16
 1594 0086 1A60     		str	r2, [r3]
2724:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2725:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && (CapSense_ENABLE == CapSense_CSD_SHIELD_
2726:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Connect CTANK to AMUXBUS-B */
2727:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_SsCSDEnableShieldTank();
2728:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && (CapSense_ENABLE == CapSense_CSD_
2729:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2730:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_RES_PTR, CapSense_CSD_SW_RES_SCAN);
 1595              		.loc 1 2730 0
 1596 0088 5022     		movs	r2, #80
 1597 008a 144B     		ldr	r3, .L103+24
 1598 008c 1A60     		str	r2, [r3]
2731:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_CSDCMP_PTR, CapSense_CSD_CSDCMP_SCAN);
 1599              		.loc 1 2731 0
 1600 008e 0123     		movs	r3, #1
 1601 0090 0D4A     		ldr	r2, .L103+4
 1602 0092 1360     		str	r3, [r2]
2732:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2733:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_DISABLE == CapSense_CSD_SHIELD_EN)
2734:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Disable HSCOMP during the sampling phase when shield is disabled */
2735:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_HSCMP_PTR, 0u);
2736:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
2737:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_HSCMP_PTR, CapSense_HSCMP_SCAN_MASK);
 1603              		.loc 1 2737 0
 1604 0094 0B4A     		ldr	r2, .L103
 1605 0096 1360     		str	r3, [r2]
2738:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_DISABLE == CapSense_CSD_SHIELD_EN) */
2739:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2740:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_CLK_SOURCE_DIRECT != CapSense_CSD_SNS_CLK_SOURCE)
2741:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Force the LFSR to it's initial state (all ones) */
2742:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SENSE_PERIOD_PTR, CY_GET_REG32(CapSense_SENSE_PERIOD_PTR) |
 1606              		.loc 1 2742 0
 1607 0098 144A     		ldr	r2, .L103+40
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 80


 1608 009a 1368     		ldr	r3, [r2]
 1609 009c 8021     		movs	r1, #128
 1610 009e 4904     		lsls	r1, r1, #17
 1611 00a0 0B43     		orrs	r3, r1
 1612 00a2 1360     		str	r3, [r2]
2743:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                            CapSense_SENSE_PERIOD_LFSR_CLEAR_MASK);
2744:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_CLK_SOURCE_DIRECT != CapSense_CSD_SNS_CLK_SOURCE) */
2745:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2746:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Enable SAMPLE interrupt */
2747:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_INTR_MASK_PTR, CapSense_INTR_MASK_SAMPLE_MASK);
 1613              		.loc 1 2747 0
 1614 00a4 0222     		movs	r2, #2
 1615 00a6 0F4B     		ldr	r3, .L103+32
 1616 00a8 1A60     		str	r2, [r3]
 1617              	.LVL214:
2748:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2749:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Init Watchdog Counter to prevent a hang */
2750:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         watchdogCounter = CapSense_CSD_PRECHARGE_WATCHDOG_CYCLES_NUM;
 1618              		.loc 1 2750 0
 1619 00aa F023     		movs	r3, #240
 1620 00ac 00E0     		b	.L100
 1621              	.LVL215:
 1622              	.L102:
2751:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2752:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Wait for IDLE state of the HW sequencer */
2753:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         while((0u != (CapSense_STAT_SEQ_REG & CapSense_STAT_SEQ_SEQ_STATE_MASK)) && (0u != watchdog
2754:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
2755:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             watchdogCounter--;
 1623              		.loc 1 2755 0
 1624 00ae 013B     		subs	r3, r3, #1
 1625              	.LVL216:
 1626              	.L100:
2753:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 1627              		.loc 1 2753 0
 1628 00b0 0F4A     		ldr	r2, .L103+44
 1629 00b2 1268     		ldr	r2, [r2]
 1630 00b4 5207     		lsls	r2, r2, #29
 1631 00b6 01D0     		beq	.L101
 1632 00b8 002B     		cmp	r3, #0
 1633 00ba F8D1     		bne	.L102
 1634              	.L101:
2756:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
2757:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2758:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Start SEQUENCER for fine initialization scan for Cmod and then for normal scan */
2759:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SEQ_START_PTR, CapSense_SEQ_START_AZ0_SKIP_MASK |
 1635              		.loc 1 2759 0
 1636 00bc 0D4A     		ldr	r2, .L103+48
 1637 00be 0A4B     		ldr	r3, .L103+36
 1638              	.LVL217:
 1639 00c0 1A60     		str	r2, [r3]
 1640              	.LBE9:
 1641              	.LBE8:
1389:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1642              		.loc 1 1389 0
 1643              		@ sp needed
 1644 00c2 10BD     		pop	{r4, pc}
 1645              	.L104:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 81


 1646              		.align	2
 1647              	.L103:
 1648 00c4 80010B40 		.word	1074463104
 1649 00c8 8C010B40 		.word	1074463116
 1650 00cc B0020B40 		.word	1074463408
 1651 00d0 B4020B40 		.word	1074463412
 1652 00d4 88020B40 		.word	1074463368
 1653 00d8 80020B40 		.word	1074463360
 1654 00dc F0010B40 		.word	1074463216
 1655 00e0 F0000B40 		.word	1074462960
 1656 00e4 F8000B40 		.word	1074462968
 1657 00e8 40030B40 		.word	1074463552
 1658 00ec 00020B40 		.word	1074463232
 1659 00f0 00000B40 		.word	1074462720
 1660 00f4 01030000 		.word	769
 1661              		.cfi_endproc
 1662              	.LFE16:
 1663              		.size	CapSense_SsCSDStartSample, .-CapSense_SsCSDStartSample
 1664              		.section	.text.CapSense_CSDScanExt,"ax",%progbits
 1665              		.align	2
 1666              		.global	CapSense_CSDScanExt
 1667              		.code	16
 1668              		.thumb_func
 1669              		.type	CapSense_CSDScanExt, %function
 1670              	CapSense_CSDScanExt:
 1671              	.LFB17:
1441:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if ((CapSense_DISABLE == CapSense_CSD_COMMON_SNS_CLK_EN) && \
 1672              		.loc 1 1441 0
 1673              		.cfi_startproc
 1674              		@ args = 0, pretend = 0, frame = 0
 1675              		@ frame_needed = 0, uses_anonymous_args = 0
 1676 0000 10B5     		push	{r4, lr}
 1677              		.cfi_def_cfa_offset 8
 1678              		.cfi_offset 4, -8
 1679              		.cfi_offset 14, -4
1452:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1680              		.loc 1 1452 0
 1681 0002 054A     		ldr	r2, .L106
 1682 0004 D368     		ldr	r3, [r2, #12]
 1683 0006 0549     		ldr	r1, .L106+4
 1684 0008 0B43     		orrs	r3, r1
 1685 000a D360     		str	r3, [r2, #12]
1462:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_CSD_ANALOG_STARTUP_DELAY_US > 0uL) */
 1686              		.loc 1 1462 0
 1687 000c 0A20     		movs	r0, #10
 1688 000e FFF7FEFF 		bl	CyDelayUs
 1689              	.LVL218:
1467:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
 1690              		.loc 1 1467 0
 1691 0012 FFF7FEFF 		bl	CapSense_SsCSDStartSample
 1692              	.LVL219:
1468:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1693              		.loc 1 1468 0
 1694              		@ sp needed
 1695 0016 10BD     		pop	{r4, pc}
 1696              	.L107:
 1697              		.align	2
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 82


 1698              	.L106:
 1699 0018 00000000 		.word	CapSense_dsRam
 1700 001c 80000100 		.word	65664
 1701              		.cfi_endproc
 1702              	.LFE17:
 1703              		.size	CapSense_CSDScanExt, .-CapSense_CSDScanExt
 1704              		.section	.text.CapSense_CSDConnectSns,"ax",%progbits
 1705              		.align	2
 1706              		.global	CapSense_CSDConnectSns
 1707              		.code	16
 1708              		.thumb_func
 1709              		.type	CapSense_CSDConnectSns, %function
 1710              	CapSense_CSDConnectSns:
 1711              	.LFB21:
1734:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 newRegisterValue;
 1712              		.loc 1 1734 0
 1713              		.cfi_startproc
 1714              		@ args = 0, pretend = 0, frame = 0
 1715              		@ frame_needed = 0, uses_anonymous_args = 0
 1716              	.LVL220:
 1717 0000 70B5     		push	{r4, r5, r6, lr}
 1718              		.cfi_def_cfa_offset 16
 1719              		.cfi_offset 4, -16
 1720              		.cfi_offset 5, -12
 1721              		.cfi_offset 6, -8
 1722              		.cfi_offset 14, -4
 1723 0002 0400     		movs	r4, r0
1741:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     pinHSIOMShift = (uint32)snsAddrPtr->hsiomShift;
 1724              		.loc 1 1741 0
 1725 0004 857E     		ldrb	r5, [r0, #26]
 1726              	.LVL221:
1742:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1727              		.loc 1 1742 0
 1728 0006 067E     		ldrb	r6, [r0, #24]
 1729              	.LVL222:
1744:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1730              		.loc 1 1744 0
 1731 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1732              	.LVL223:
1747:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     newRegisterValue &= ~(CapSense_HSIOM_SEL_MASK << pinHSIOMShift);
 1733              		.loc 1 1747 0
 1734 000c 2368     		ldr	r3, [r4]
 1735 000e 1B68     		ldr	r3, [r3]
 1736              	.LVL224:
1748:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     newRegisterValue |= (uint32)((uint32)CapSense_HSIOM_SEL_CSD_SENSE << pinHSIOMShift);
 1737              		.loc 1 1748 0
 1738 0010 0F22     		movs	r2, #15
 1739 0012 B240     		lsls	r2, r2, r6
 1740 0014 9343     		bics	r3, r2
 1741              	.LVL225:
 1742 0016 1A00     		movs	r2, r3
 1743              	.LVL226:
1749:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1744              		.loc 1 1749 0
 1745 0018 0423     		movs	r3, #4
 1746 001a B340     		lsls	r3, r3, r6
 1747 001c 1343     		orrs	r3, r2
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 83


 1748              	.LVL227:
1752:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1749              		.loc 1 1752 0
 1750 001e 6668     		ldr	r6, [r4, #4]
 1751              	.LVL228:
 1752 0020 3268     		ldr	r2, [r6]
 1753 0022 0721     		movs	r1, #7
 1754 0024 A940     		lsls	r1, r1, r5
 1755 0026 8A43     		bics	r2, r1
 1756 0028 3260     		str	r2, [r6]
1755:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1757              		.loc 1 1755 0
 1758 002a 2268     		ldr	r2, [r4]
 1759 002c 1360     		str	r3, [r2]
1757:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
 1760              		.loc 1 1757 0
 1761 002e FFF7FEFF 		bl	CyExitCriticalSection
 1762              	.LVL229:
1758:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1763              		.loc 1 1758 0
 1764              		@ sp needed
 1765              	.LVL230:
 1766              	.LVL231:
 1767 0032 70BD     		pop	{r4, r5, r6, pc}
 1768              		.cfi_endproc
 1769              	.LFE21:
 1770              		.size	CapSense_CSDConnectSns, .-CapSense_CSDConnectSns
 1771              		.section	.text.CapSense_CSDScan,"ax",%progbits
 1772              		.align	2
 1773              		.global	CapSense_CSDScan
 1774              		.code	16
 1775              		.thumb_func
 1776              		.type	CapSense_CSDScan, %function
 1777              	CapSense_CSDScan:
 1778              	.LFB18:
1508:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
 1779              		.loc 1 1508 0
 1780              		.cfi_startproc
 1781              		@ args = 0, pretend = 0, frame = 0
 1782              		@ frame_needed = 0, uses_anonymous_args = 0
 1783 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1784              		.cfi_def_cfa_offset 24
 1785              		.cfi_offset 3, -24
 1786              		.cfi_offset 4, -20
 1787              		.cfi_offset 5, -16
 1788              		.cfi_offset 6, -12
 1789              		.cfi_offset 7, -8
 1790              		.cfi_offset 14, -4
1510:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1791              		.loc 1 1510 0
 1792 0002 224B     		ldr	r3, .L111
 1793 0004 1A78     		ldrb	r2, [r3]
 1794 0006 D2B2     		uxtb	r2, r2
1509:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                     CapSense_dsFlash.wdgtArray[CapSense_widgetIndex
 1795              		.loc 1 1509 0
 1796 0008 D300     		lsls	r3, r2, #3
 1797 000a 9A1A     		subs	r2, r3, r2
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 84


 1798 000c 9300     		lsls	r3, r2, #2
 1799 000e 204A     		ldr	r2, .L111+4
 1800 0010 D318     		adds	r3, r2, r3
 1801 0012 5F68     		ldr	r7, [r3, #4]
 1802              	.LVL232:
1513:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
 1803              		.loc 1 1513 0
 1804 0014 1F4B     		ldr	r3, .L111+8
 1805 0016 C722     		movs	r2, #199
 1806 0018 9A5C     		ldrb	r2, [r3, r2]
 1807 001a C621     		movs	r1, #198
 1808 001c 585C     		ldrb	r0, [r3, r1]
 1809 001e 8242     		cmp	r2, r0
 1810 0020 06D0     		beq	.L110
1515:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_dsRam.scanCurrentISC = CapSense_dsRam.scanCsdISC;
 1811              		.loc 1 1515 0
 1812 0022 FFF7FEFF 		bl	CapSense_SsSetAllIOsState
 1813              	.LVL233:
1516:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
 1814              		.loc 1 1516 0
 1815 0026 1B4B     		ldr	r3, .L111+8
 1816 0028 C622     		movs	r2, #198
 1817 002a 995C     		ldrb	r1, [r3, r2]
 1818 002c 0132     		adds	r2, r2, #1
 1819 002e 9954     		strb	r1, [r3, r2]
 1820              	.L110:
1523:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1821              		.loc 1 1523 0
 1822 0030 194C     		ldr	r4, .L111+12
 1823 0032 0023     		movs	r3, #0
 1824 0034 2370     		strb	r3, [r4]
1526:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                               CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2
 1825              		.loc 1 1526 0
 1826 0036 154E     		ldr	r6, .L111
 1827 0038 3278     		ldrb	r2, [r6]
 1828 003a D2B2     		uxtb	r2, r2
1527:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                               + CapSense_sensorIndex;
 1829              		.loc 1 1527 0
 1830 003c 144D     		ldr	r5, .L111+4
 1831 003e D300     		lsls	r3, r2, #3
 1832 0040 9A1A     		subs	r2, r3, r2
 1833 0042 9300     		lsls	r3, r2, #2
 1834 0044 EB18     		adds	r3, r5, r3
 1835 0046 9968     		ldr	r1, [r3, #8]
1528:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1836              		.loc 1 1528 0
 1837 0048 2378     		ldrb	r3, [r4]
 1838 004a DBB2     		uxtb	r3, r3
 1839 004c 9A00     		lsls	r2, r3, #2
 1840 004e D318     		adds	r3, r2, r3
 1841 0050 5A00     		lsls	r2, r3, #1
 1842 0052 8A18     		adds	r2, r1, r2
1526:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                               CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2
 1843              		.loc 1 1526 0
 1844 0054 114B     		ldr	r3, .L111+16
 1845 0056 1A60     		str	r2, [r3]
1536:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 85


 1846              		.loc 1 1536 0
 1847 0058 3800     		movs	r0, r7
 1848 005a FFF7FEFF 		bl	CapSense_SsCSDSetUpIdacs
 1849              	.LVL234:
1555:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                         CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2SnsFla
 1850              		.loc 1 1555 0
 1851 005e 3378     		ldrb	r3, [r6]
 1852 0060 DBB2     		uxtb	r3, r3
1556:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                         + CapSense_sensorIndex;
 1853              		.loc 1 1556 0
 1854 0062 DA00     		lsls	r2, r3, #3
 1855 0064 D31A     		subs	r3, r2, r3
 1856 0066 9A00     		lsls	r2, r3, #2
 1857 0068 5059     		ldr	r0, [r2, r5]
1557:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1858              		.loc 1 1557 0
 1859 006a 2278     		ldrb	r2, [r4]
 1860 006c D2B2     		uxtb	r2, r2
 1861 006e D300     		lsls	r3, r2, #3
 1862 0070 9A1A     		subs	r2, r3, r2
 1863 0072 9300     		lsls	r3, r2, #2
 1864 0074 C018     		adds	r0, r0, r3
1555:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                         CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2SnsFla
 1865              		.loc 1 1555 0
 1866 0076 0A4B     		ldr	r3, .L111+20
 1867 0078 1860     		str	r0, [r3]
1560:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1868              		.loc 1 1560 0
 1869 007a FFF7FEFF 		bl	CapSense_CSDConnectSns
 1870              	.LVL235:
1563:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)  */
 1871              		.loc 1 1563 0
 1872 007e 0948     		ldr	r0, .L111+24
 1873 0080 FFF7FEFF 		bl	CapSense_ISR_StartEx
 1874              	.LVL236:
1567:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
 1875              		.loc 1 1567 0
 1876 0084 FFF7FEFF 		bl	CapSense_CSDScanExt
 1877              	.LVL237:
1568:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1878              		.loc 1 1568 0
 1879              		@ sp needed
 1880              	.LVL238:
 1881 0088 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1882              	.L112:
 1883 008a C046     		.align	2
 1884              	.L111:
 1885 008c 00000000 		.word	CapSense_widgetIndex
 1886 0090 00000000 		.word	CapSense_dsFlash
 1887 0094 00000000 		.word	CapSense_dsRam
 1888 0098 00000000 		.word	CapSense_sensorIndex
 1889 009c 00000000 		.word	CapSense_curRamSnsPtr
 1890 00a0 00000000 		.word	CapSense_curSnsIOPtr
 1891 00a4 00000000 		.word	CapSense_CSDPostMultiScan
 1892              		.cfi_endproc
 1893              	.LFE18:
 1894              		.size	CapSense_CSDScan, .-CapSense_CSDScan
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 86


 1895              		.section	.text.CapSense_SsCSDConnectSensorExt,"ax",%progbits
 1896              		.align	2
 1897              		.global	CapSense_SsCSDConnectSensorExt
 1898              		.code	16
 1899              		.thumb_func
 1900              		.type	CapSense_SsCSDConnectSensorExt, %function
 1901              	CapSense_SsCSDConnectSensorExt:
 1902              	.LFB19:
1591:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
 1903              		.loc 1 1591 0
 1904              		.cfi_startproc
 1905              		@ args = 0, pretend = 0, frame = 0
 1906              		@ frame_needed = 0, uses_anonymous_args = 0
 1907              	.LVL239:
 1908 0000 10B5     		push	{r4, lr}
 1909              		.cfi_def_cfa_offset 8
 1910              		.cfi_offset 4, -8
 1911              		.cfi_offset 14, -4
1598:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                       + sensorId;
 1912              		.loc 1 1598 0
 1913 0002 C300     		lsls	r3, r0, #3
 1914 0004 181A     		subs	r0, r3, r0
 1915              	.LVL240:
 1916 0006 8300     		lsls	r3, r0, #2
 1917 0008 054A     		ldr	r2, .L114
 1918 000a 9858     		ldr	r0, [r3, r2]
1599:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1919              		.loc 1 1599 0
 1920 000c CB00     		lsls	r3, r1, #3
 1921 000e 591A     		subs	r1, r3, r1
 1922              	.LVL241:
 1923 0010 8B00     		lsls	r3, r1, #2
 1924 0012 C018     		adds	r0, r0, r3
1597:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                       CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsF
 1925              		.loc 1 1597 0
 1926 0014 034B     		ldr	r3, .L114+4
 1927 0016 1860     		str	r0, [r3]
1633:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
 1928              		.loc 1 1633 0
 1929 0018 FFF7FEFF 		bl	CapSense_CSDConnectSns
 1930              	.LVL242:
1635:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1931              		.loc 1 1635 0
 1932              		@ sp needed
 1933 001c 10BD     		pop	{r4, pc}
 1934              	.L115:
 1935 001e C046     		.align	2
 1936              	.L114:
 1937 0020 00000000 		.word	CapSense_dsFlash
 1938 0024 00000000 		.word	CapSense_curSnsIOPtr
 1939              		.cfi_endproc
 1940              	.LFE19:
 1941              		.size	CapSense_SsCSDConnectSensorExt, .-CapSense_SsCSDConnectSensorExt
 1942              		.section	.text.CapSense_CSDDisconnectSns,"ax",%progbits
 1943              		.align	2
 1944              		.global	CapSense_CSDDisconnectSns
 1945              		.code	16
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 87


 1946              		.thumb_func
 1947              		.type	CapSense_CSDDisconnectSns, %function
 1948              	CapSense_CSDDisconnectSns:
 1949              	.LFB22:
1786:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint8  interruptState;
 1950              		.loc 1 1786 0
 1951              		.cfi_startproc
 1952              		@ args = 0, pretend = 0, frame = 0
 1953              		@ frame_needed = 0, uses_anonymous_args = 0
 1954              	.LVL243:
 1955 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1956              		.cfi_def_cfa_offset 24
 1957              		.cfi_offset 3, -24
 1958              		.cfi_offset 4, -20
 1959              		.cfi_offset 5, -16
 1960              		.cfi_offset 6, -12
 1961              		.cfi_offset 7, -8
 1962              		.cfi_offset 14, -4
 1963 0002 0400     		movs	r4, r0
1793:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     pinModeShift = (uint32)snsAddrPtr->shift;
 1964              		.loc 1 1793 0
 1965 0004 067E     		ldrb	r6, [r0, #24]
 1966              	.LVL244:
1794:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1967              		.loc 1 1794 0
 1968 0006 857E     		ldrb	r5, [r0, #26]
 1969              	.LVL245:
1796:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1970              		.loc 1 1796 0
 1971 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1972              	.LVL246:
1798:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     newPcRegValue &= ~(CapSense_GPIO_PC_MASK << pinModeShift);
 1973              		.loc 1 1798 0
 1974 000c 6368     		ldr	r3, [r4, #4]
 1975 000e 1968     		ldr	r1, [r3]
 1976              	.LVL247:
1799:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1977              		.loc 1 1799 0
 1978 0010 0723     		movs	r3, #7
 1979 0012 AB40     		lsls	r3, r3, r5
 1980 0014 9943     		bics	r1, r3
 1981              	.LVL248:
1801:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     newHsiomRegValue &= ~(CapSense_HSIOM_SEL_MASK << pinHSIOMShift);
 1982              		.loc 1 1801 0
 1983 0016 2768     		ldr	r7, [r4]
 1984 0018 3B68     		ldr	r3, [r7]
 1985              	.LVL249:
1802:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CY_SET_REG32(snsAddrPtr->hsiomPtr, newHsiomRegValue);
 1986              		.loc 1 1802 0
 1987 001a 0F22     		movs	r2, #15
 1988 001c B240     		lsls	r2, r2, r6
 1989 001e 9343     		bics	r3, r2
 1990              	.LVL250:
1803:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1991              		.loc 1 1803 0
 1992 0020 3B60     		str	r3, [r7]
1805:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 88


 1993              		.loc 1 1805 0
 1994 0022 C722     		movs	r2, #199
 1995 0024 0E4F     		ldr	r7, .L119
 1996 0026 BA5C     		ldrb	r2, [r7, r2]
 1997 0028 002A     		cmp	r2, #0
 1998 002a 05D1     		bne	.L117
1807:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(snsAddrPtr->pcPtr, newPcRegValue);
 1999              		.loc 1 1807 0
 2000 002c 0623     		movs	r3, #6
 2001              	.LVL251:
 2002 002e AB40     		lsls	r3, r3, r5
 2003 0030 1943     		orrs	r1, r3
 2004              	.LVL252:
1808:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
 2005              		.loc 1 1808 0
 2006 0032 6368     		ldr	r3, [r4, #4]
 2007 0034 1960     		str	r1, [r3]
 2008 0036 08E0     		b	.L118
 2009              	.LVL253:
 2010              	.L117:
1813:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 2011              		.loc 1 1813 0
 2012 0038 022A     		cmp	r2, #2
 2013 003a 06D1     		bne	.L118
1816:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(snsAddrPtr->pcPtr, newPcRegValue);
 2014              		.loc 1 1816 0
 2015 003c 0332     		adds	r2, r2, #3
 2016 003e B240     		lsls	r2, r2, r6
 2017 0040 1343     		orrs	r3, r2
 2018              	.LVL254:
1817:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(snsAddrPtr->hsiomPtr, newHsiomRegValue);
 2019              		.loc 1 1817 0
 2020 0042 6268     		ldr	r2, [r4, #4]
 2021 0044 1160     		str	r1, [r2]
1818:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
 2022              		.loc 1 1818 0
 2023 0046 2268     		ldr	r2, [r4]
 2024 0048 1360     		str	r3, [r2]
 2025              	.LVL255:
 2026              	.L118:
1822:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 2027              		.loc 1 1822 0
 2028 004a A168     		ldr	r1, [r4, #8]
 2029              	.LVL256:
 2030 004c 0B68     		ldr	r3, [r1]
 2031 004e 647E     		ldrb	r4, [r4, #25]
 2032              	.LVL257:
 2033 0050 0122     		movs	r2, #1
 2034 0052 A240     		lsls	r2, r2, r4
 2035 0054 9343     		bics	r3, r2
 2036 0056 0B60     		str	r3, [r1]
1824:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
 2037              		.loc 1 1824 0
 2038 0058 FFF7FEFF 		bl	CyExitCriticalSection
 2039              	.LVL258:
1825:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 2040              		.loc 1 1825 0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 89


 2041              		@ sp needed
 2042              	.LVL259:
 2043              	.LVL260:
 2044 005c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2045              	.L120:
 2046 005e C046     		.align	2
 2047              	.L119:
 2048 0060 00000000 		.word	CapSense_dsRam
 2049              		.cfi_endproc
 2050              	.LFE22:
 2051              		.size	CapSense_CSDDisconnectSns, .-CapSense_CSDDisconnectSns
 2052              		.section	.text.CapSense_SsCSDElectrodeCheck,"ax",%progbits
 2053              		.align	2
 2054              		.global	CapSense_SsCSDElectrodeCheck
 2055              		.code	16
 2056              		.thumb_func
 2057              		.type	CapSense_SsCSDElectrodeCheck, %function
 2058              	CapSense_SsCSDElectrodeCheck:
 2059              	.LFB9:
 738:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
 2060              		.loc 1 738 0
 2061              		.cfi_startproc
 2062              		@ args = 0, pretend = 0, frame = 0
 2063              		@ frame_needed = 0, uses_anonymous_args = 0
 2064 0000 10B5     		push	{r4, lr}
 2065              		.cfi_def_cfa_offset 8
 2066              		.cfi_offset 4, -8
 2067              		.cfi_offset 14, -4
 743:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
 2068              		.loc 1 743 0
 2069 0002 064B     		ldr	r3, .L123
 2070 0004 1B78     		ldrb	r3, [r3]
 2071 0006 012B     		cmp	r3, #1
 2072 0008 06D1     		bne	.L121
 771:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)  */
 2073              		.loc 1 771 0
 2074 000a 054B     		ldr	r3, .L123+4
 2075 000c 1868     		ldr	r0, [r3]
 2076 000e FFF7FEFF 		bl	CapSense_CSDDisconnectSns
 2077              	.LVL261:
 774:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
 2078              		.loc 1 774 0
 2079 0012 0022     		movs	r2, #0
 2080 0014 014B     		ldr	r3, .L123
 2081 0016 1A70     		strb	r2, [r3]
 2082              	.L121:
 776:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 2083              		.loc 1 776 0
 2084              		@ sp needed
 2085 0018 10BD     		pop	{r4, pc}
 2086              	.L124:
 2087 001a C046     		.align	2
 2088              	.L123:
 2089 001c 00000000 		.word	.LANCHOR1
 2090 0020 00000000 		.word	CapSense_curSnsIOPtr
 2091              		.cfi_endproc
 2092              	.LFE9:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 90


 2093              		.size	CapSense_SsCSDElectrodeCheck, .-CapSense_SsCSDElectrodeCheck
 2094              		.section	.text.CapSense_CSDSetupWidget,"ax",%progbits
 2095              		.align	2
 2096              		.global	CapSense_CSDSetupWidget
 2097              		.code	16
 2098              		.thumb_func
 2099              		.type	CapSense_CSDSetupWidget, %function
 2100              	CapSense_CSDSetupWidget:
 2101              	.LFB14:
1180:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
 2102              		.loc 1 1180 0
 2103              		.cfi_startproc
 2104              		@ args = 0, pretend = 0, frame = 0
 2105              		@ frame_needed = 0, uses_anonymous_args = 0
 2106              	.LVL262:
 2107 0000 70B5     		push	{r4, r5, r6, lr}
 2108              		.cfi_def_cfa_offset 16
 2109              		.cfi_offset 4, -16
 2110              		.cfi_offset 5, -12
 2111              		.cfi_offset 6, -8
 2112              		.cfi_offset 14, -4
1181:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                 CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
 2113              		.loc 1 1181 0
 2114 0002 124E     		ldr	r6, .L126
 2115 0004 C200     		lsls	r2, r0, #3
 2116 0006 121A     		subs	r2, r2, r0
 2117 0008 9300     		lsls	r3, r2, #2
 2118 000a F318     		adds	r3, r6, r3
 2119 000c 5D68     		ldr	r5, [r3, #4]
 2120              	.LVL263:
1185:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 2121              		.loc 1 1185 0
 2122 000e C0B2     		uxtb	r0, r0
 2123              	.LVL264:
 2124 0010 0F4C     		ldr	r4, .L126+4
 2125 0012 2070     		strb	r0, [r4]
1187:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 2126              		.loc 1 1187 0
 2127 0014 0120     		movs	r0, #1
 2128 0016 FFF7FEFF 		bl	CapSense_SsSwitchSensingMode
 2129              	.LVL265:
1195:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 2130              		.loc 1 1195 0
 2131 001a FFF7FEFF 		bl	CapSense_SsCSDElectrodeCheck
 2132              	.LVL266:
1199:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 2133              		.loc 1 1199 0
 2134 001e 2378     		ldrb	r3, [r4]
 2135 0020 DBB2     		uxtb	r3, r3
 2136 0022 DA00     		lsls	r2, r3, #3
 2137 0024 D31A     		subs	r3, r2, r3
 2138 0026 9A00     		lsls	r2, r3, #2
 2139 0028 9259     		ldr	r2, [r2, r6]
1198:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                     CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2SnsFlash;
 2140              		.loc 1 1198 0
 2141 002a 0A4B     		ldr	r3, .L126+8
 2142 002c 1A60     		str	r2, [r3]
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 91


1202:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_dsRam.status |= CapSense_widgetIndex;
 2143              		.loc 1 1202 0
 2144 002e 0A4B     		ldr	r3, .L126+12
 2145 0030 DA68     		ldr	r2, [r3, #12]
 2146 0032 7F21     		movs	r1, #127
 2147 0034 8A43     		bics	r2, r1
 2148 0036 DA60     		str	r2, [r3, #12]
1203:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 2149              		.loc 1 1203 0
 2150 0038 2178     		ldrb	r1, [r4]
 2151 003a DA68     		ldr	r2, [r3, #12]
 2152 003c 0A43     		orrs	r2, r1
 2153 003e DA60     		str	r2, [r3, #12]
1205:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (((CapSense_DISABLE == CapSense_CSD_COMMON_SNS_CLK_EN) || \
 2154              		.loc 1 1205 0
 2155 0040 2800     		movs	r0, r5
 2156 0042 FFF7FEFF 		bl	CapSense_SsCSDCalculateScanDuration
 2157              	.LVL267:
1210:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif
 2158              		.loc 1 1210 0
 2159 0046 FFF7FEFF 		bl	CapSense_SsCSDConfigClock
 2160              	.LVL268:
1212:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 2161              		.loc 1 1212 0
 2162              		@ sp needed
 2163              	.LVL269:
 2164              	.LVL270:
 2165 004a 70BD     		pop	{r4, r5, r6, pc}
 2166              	.L127:
 2167              		.align	2
 2168              	.L126:
 2169 004c 00000000 		.word	CapSense_dsFlash
 2170 0050 00000000 		.word	CapSense_widgetIndex
 2171 0054 00000000 		.word	CapSense_curSnsIOPtr
 2172 0058 00000000 		.word	CapSense_dsRam
 2173              		.cfi_endproc
 2174              	.LFE14:
 2175              		.size	CapSense_CSDSetupWidget, .-CapSense_CSDSetupWidget
 2176              		.section	.text.CapSense_CSDSetupWidgetExt,"ax",%progbits
 2177              		.align	2
 2178              		.global	CapSense_CSDSetupWidgetExt
 2179              		.code	16
 2180              		.thumb_func
 2181              		.type	CapSense_CSDSetupWidgetExt, %function
 2182              	CapSense_CSDSetupWidgetExt:
 2183              	.LFB15:
1266:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
 2184              		.loc 1 1266 0
 2185              		.cfi_startproc
 2186              		@ args = 0, pretend = 0, frame = 0
 2187              		@ frame_needed = 0, uses_anonymous_args = 0
 2188              	.LVL271:
 2189 0000 70B5     		push	{r4, r5, r6, lr}
 2190              		.cfi_def_cfa_offset 16
 2191              		.cfi_offset 4, -16
 2192              		.cfi_offset 5, -12
 2193              		.cfi_offset 6, -8
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 92


 2194              		.cfi_offset 14, -4
1267:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                     CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRa
 2195              		.loc 1 1267 0
 2196 0002 C200     		lsls	r2, r0, #3
 2197 0004 121A     		subs	r2, r2, r0
 2198 0006 9300     		lsls	r3, r2, #2
 2199 0008 134A     		ldr	r2, .L129
 2200 000a D318     		adds	r3, r2, r3
 2201 000c 5D68     		ldr	r5, [r3, #4]
 2202              	.LVL272:
1271:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 2203              		.loc 1 1271 0
 2204 000e C9B2     		uxtb	r1, r1
 2205              	.LVL273:
 2206 0010 124C     		ldr	r4, .L129+4
 2207 0012 2170     		strb	r1, [r4]
1275:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                               + CapSense_sensorIndex;
 2208              		.loc 1 1275 0
 2209 0014 9968     		ldr	r1, [r3, #8]
1276:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 2210              		.loc 1 1276 0
 2211 0016 2378     		ldrb	r3, [r4]
 2212 0018 DBB2     		uxtb	r3, r3
 2213 001a 9A00     		lsls	r2, r3, #2
 2214 001c D318     		adds	r3, r2, r3
 2215 001e 5A00     		lsls	r2, r3, #1
 2216 0020 8A18     		adds	r2, r1, r2
1274:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                               CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsRam
 2217              		.loc 1 1274 0
 2218 0022 0F4B     		ldr	r3, .L129+8
 2219 0024 1A60     		str	r2, [r3]
1278:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 2220              		.loc 1 1278 0
 2221 0026 FFF7FEFF 		bl	CapSense_CSDSetupWidget
 2222              	.LVL274:
1281:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 2223              		.loc 1 1281 0
 2224 002a 2800     		movs	r0, r5
 2225 002c FFF7FEFF 		bl	CapSense_SsCSDSetUpIdacs
 2226              	.LVL275:
1292:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_CSDConnectSns(CapSense_curSnsIOPtr);
 2227              		.loc 1 1292 0
 2228 0030 2378     		ldrb	r3, [r4]
 2229 0032 DBB2     		uxtb	r3, r3
 2230 0034 0B49     		ldr	r1, .L129+12
 2231 0036 DA00     		lsls	r2, r3, #3
 2232 0038 D31A     		subs	r3, r2, r3
 2233 003a 9800     		lsls	r0, r3, #2
 2234 003c 0B68     		ldr	r3, [r1]
 2235 003e 9C46     		mov	ip, r3
 2236 0040 6044     		add	r0, r0, ip
 2237 0042 0860     		str	r0, [r1]
1293:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)  */
 2238              		.loc 1 1293 0
 2239 0044 FFF7FEFF 		bl	CapSense_CSDConnectSns
 2240              	.LVL276:
1303:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 93


 2241              		.loc 1 1303 0
 2242 0048 0122     		movs	r2, #1
 2243 004a 074B     		ldr	r3, .L129+16
 2244 004c 1A70     		strb	r2, [r3]
1306:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
 2245              		.loc 1 1306 0
 2246 004e 0748     		ldr	r0, .L129+20
 2247 0050 FFF7FEFF 		bl	CapSense_ISR_StartEx
 2248              	.LVL277:
1307:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 2249              		.loc 1 1307 0
 2250              		@ sp needed
 2251              	.LVL278:
 2252 0054 70BD     		pop	{r4, r5, r6, pc}
 2253              	.L130:
 2254 0056 C046     		.align	2
 2255              	.L129:
 2256 0058 00000000 		.word	CapSense_dsFlash
 2257 005c 00000000 		.word	CapSense_sensorIndex
 2258 0060 00000000 		.word	CapSense_curRamSnsPtr
 2259 0064 00000000 		.word	CapSense_curSnsIOPtr
 2260 0068 00000000 		.word	.LANCHOR1
 2261 006c 00000000 		.word	CapSense_CSDPostSingleScan
 2262              		.cfi_endproc
 2263              	.LFE15:
 2264              		.size	CapSense_CSDSetupWidgetExt, .-CapSense_CSDSetupWidgetExt
 2265              		.section	.text.CapSense_SsCSDCalibrate,"ax",%progbits
 2266              		.align	2
 2267              		.code	16
 2268              		.thumb_func
 2269              		.type	CapSense_SsCSDCalibrate, %function
 2270              	CapSense_SsCSDCalibrate:
 2271              	.LFB26:
2175:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 snsIndex;
 2272              		.loc 1 2175 0
 2273              		.cfi_startproc
 2274              		@ args = 0, pretend = 0, frame = 16
 2275              		@ frame_needed = 0, uses_anonymous_args = 0
 2276              	.LVL279:
 2277 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2278              		.cfi_def_cfa_offset 20
 2279              		.cfi_offset 4, -20
 2280              		.cfi_offset 5, -16
 2281              		.cfi_offset 6, -12
 2282              		.cfi_offset 7, -8
 2283              		.cfi_offset 14, -4
 2284 0002 5746     		mov	r7, r10
 2285 0004 80B4     		push	{r7}
 2286              		.cfi_def_cfa_offset 24
 2287              		.cfi_offset 10, -24
 2288 0006 84B0     		sub	sp, sp, #16
 2289              		.cfi_def_cfa_offset 40
 2290 0008 0190     		str	r0, [sp, #4]
 2291              	.LVL280:
2194:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 2292              		.loc 1 2194 0
 2293 000a C400     		lsls	r4, r0, #3
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 94


 2294 000c 241A     		subs	r4, r4, r0
 2295 000e A200     		lsls	r2, r4, #2
 2296 0010 534B     		ldr	r3, .L156
 2297 0012 9A18     		adds	r2, r3, r2
 2298 0014 5368     		ldr	r3, [r2, #4]
 2299 0016 9A46     		mov	r10, r3
 2300              	.LVL281:
2196:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         ptrMaxIdac = &maxIdac[0u];
 2301              		.loc 1 2196 0
 2302 0018 1D00     		movs	r5, r3
 2303 001a 0935     		adds	r5, r5, #9
 2304              	.LVL282:
2199:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 2305              		.loc 1 2199 0
 2306 001c 0123     		movs	r3, #1
 2307              	.LVL283:
 2308 001e 03E0     		b	.L132
 2309              	.LVL284:
 2310              	.L133:
2201:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
 2311              		.loc 1 2201 0
 2312 0020 0020     		movs	r0, #0
 2313 0022 03AB     		add	r3, sp, #12
 2314              	.LVL285:
 2315 0024 9854     		strb	r0, [r3, r2]
2199:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 2316              		.loc 1 2199 0
 2317 0026 1300     		movs	r3, r2
 2318              	.LVL286:
 2319              	.L132:
2199:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 2320              		.loc 1 2199 0 is_stmt 0 discriminator 1
 2321 0028 5A1E     		subs	r2, r3, #1
 2322              	.LVL287:
 2323 002a 002B     		cmp	r3, #0
 2324 002c F8D1     		bne	.L133
2208:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 2325              		.loc 1 2208 0 is_stmt 1
 2326 002e 5346     		mov	r3, r10
 2327 0030 1A88     		ldrh	r2, [r3]
 2328              	.LVL288:
 2329 0032 0123     		movs	r3, #1
 2330 0034 9340     		lsls	r3, r3, r2
 2331 0036 013B     		subs	r3, r3, #1
 2332 0038 5943     		muls	r1, r3
 2333              	.LVL289:
 2334 003a 0800     		movs	r0, r1
 2335 003c 6421     		movs	r1, #100
 2336 003e FFF7FEFF 		bl	__aeabi_uidiv
 2337              	.LVL290:
 2338 0042 0600     		movs	r6, r0
 2339              	.LVL291:
2219:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 2340              		.loc 1 2219 0
 2341 0044 0023     		movs	r3, #0
 2342 0046 0093     		str	r3, [sp]
 2343 0048 70E0     		b	.L134
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 95


 2344              	.LVL292:
 2345              	.L152:
2232:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 2346              		.loc 1 2232 0
 2347 004a 019B     		ldr	r3, [sp, #4]
 2348 004c DA00     		lsls	r2, r3, #3
 2349              	.LVL293:
 2350 004e D21A     		subs	r2, r2, r3
 2351 0050 9300     		lsls	r3, r2, #2
 2352 0052 434A     		ldr	r2, .L156
 2353 0054 D318     		adds	r3, r2, r3
 2354 0056 9F68     		ldr	r7, [r3, #8]
 2355 0058 009A     		ldr	r2, [sp]
 2356 005a 9300     		lsls	r3, r2, #2
 2357 005c 9446     		mov	ip, r2
 2358 005e 6344     		add	r3, r3, ip
 2359 0060 5A00     		lsls	r2, r3, #1
 2360 0062 BF18     		adds	r7, r7, r2
 2361              	.LVL294:
2236:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 2362              		.loc 1 2236 0
 2363 0064 0123     		movs	r3, #1
 2364 0066 04E0     		b	.L135
 2365              	.LVL295:
 2366              	.L136:
2238:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
 2367              		.loc 1 2238 0
 2368 0068 4023     		movs	r3, #64
 2369 006a AB54     		strb	r3, [r5, r2]
2240:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #endif
 2370              		.loc 1 2240 0
 2371 006c B918     		adds	r1, r7, r2
 2372 006e 4B72     		strb	r3, [r1, #9]
2236:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 2373              		.loc 1 2236 0
 2374 0070 1300     		movs	r3, r2
 2375              	.LVL296:
 2376              	.L135:
2236:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 2377              		.loc 1 2236 0 is_stmt 0 discriminator 1
 2378 0072 5A1E     		subs	r2, r3, #1
 2379              	.LVL297:
 2380 0074 002B     		cmp	r3, #0
 2381 0076 F7D1     		bne	.L136
 2382 0078 4024     		movs	r4, #64
 2383              	.LVL298:
 2384              	.L145:
2248:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 2385              		.loc 1 2248 0 is_stmt 1
 2386 007a 0099     		ldr	r1, [sp]
 2387 007c 0198     		ldr	r0, [sp, #4]
 2388 007e FFF7FEFF 		bl	CapSense_CSDSetupWidgetExt
 2389              	.LVL299:
2251:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #endif
 2390              		.loc 1 2251 0
 2391 0082 0120     		movs	r0, #1
 2392 0084 FFF7FEFF 		bl	CapSense_DischargeExtCapacitors
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 96


 2393              	.LVL300:
2255:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 2394              		.loc 1 2255 0
 2395 0088 FFF7FEFF 		bl	CapSense_CSDScanExt
 2396              	.LVL301:
2257:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 while (((CapSense_dsRam.status & CapSense_SW_STS_BUSY) != 0u) && (0uL != watchdogCo
 2397              		.loc 1 2257 0
 2398 008c 354B     		ldr	r3, .L156+4
2258:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
 2399              		.loc 1 2258 0
 2400 008e 00E0     		b	.L137
 2401              	.LVL302:
 2402              	.L139:
2260:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
 2403              		.loc 1 2260 0
 2404 0090 013B     		subs	r3, r3, #1
 2405              	.LVL303:
 2406              	.L137:
2258:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
 2407              		.loc 1 2258 0
 2408 0092 354A     		ldr	r2, .L156+8
 2409 0094 D268     		ldr	r2, [r2, #12]
 2410 0096 1206     		lsls	r2, r2, #24
 2411 0098 0DD5     		bpl	.L155
2258:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
 2412              		.loc 1 2258 0 is_stmt 0 discriminator 1
 2413 009a 002B     		cmp	r3, #0
 2414 009c F8D1     		bne	.L139
 2415 009e 0133     		adds	r3, r3, #1
 2416              	.LVL304:
 2417 00a0 0AE0     		b	.L138
 2418              	.LVL305:
 2419              	.L141:
2266:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
 2420              		.loc 1 2266 0 is_stmt 1
 2421 00a2 5300     		lsls	r3, r2, #1
 2422 00a4 DB5B     		ldrh	r3, [r3, r7]
 2423 00a6 9E42     		cmp	r6, r3
 2424 00a8 03D9     		bls	.L140
2268:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
 2425              		.loc 1 2268 0
 2426 00aa A918     		adds	r1, r5, r2
 2427 00ac 0B78     		ldrb	r3, [r1]
 2428 00ae A343     		bics	r3, r4
 2429 00b0 0B70     		strb	r3, [r1]
 2430              	.L140:
 2431 00b2 1300     		movs	r3, r2
 2432 00b4 00E0     		b	.L138
 2433              	.LVL306:
 2434              	.L155:
 2435 00b6 0123     		movs	r3, #1
 2436              	.LVL307:
 2437              	.L138:
2264:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
 2438              		.loc 1 2264 0 discriminator 1
 2439 00b8 5A1E     		subs	r2, r3, #1
 2440              	.LVL308:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 97


 2441 00ba 002B     		cmp	r3, #0
 2442 00bc F1D1     		bne	.L141
2273:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
 2443              		.loc 1 2273 0
 2444 00be 6408     		lsrs	r4, r4, #1
 2445              	.LVL309:
2274:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
 2446              		.loc 1 2274 0
 2447 00c0 0133     		adds	r3, r3, #1
 2448 00c2 0FE0     		b	.L142
 2449              	.LVL310:
 2450              	.L144:
2276:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
 2451              		.loc 1 2276 0
 2452 00c4 A918     		adds	r1, r5, r2
 2453 00c6 0B78     		ldrb	r3, [r1]
 2454 00c8 2343     		orrs	r3, r4
 2455 00ca DBB2     		uxtb	r3, r3
 2456 00cc 0B70     		strb	r3, [r1]
2278:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     #endif
 2457              		.loc 1 2278 0
 2458 00ce B818     		adds	r0, r7, r2
 2459 00d0 4372     		strb	r3, [r0, #9]
2280:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
 2460              		.loc 1 2280 0
 2461 00d2 002C     		cmp	r4, #0
 2462 00d4 05D1     		bne	.L143
2282:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         {
 2463              		.loc 1 2282 0
 2464 00d6 0B78     		ldrb	r3, [r1]
 2465 00d8 002B     		cmp	r3, #0
 2466 00da 02D1     		bne	.L143
2284:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
 2467              		.loc 1 2284 0
 2468 00dc 0133     		adds	r3, r3, #1
 2469 00de 0B70     		strb	r3, [r1]
2286:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             #endif
 2470              		.loc 1 2286 0
 2471 00e0 4372     		strb	r3, [r0, #9]
 2472              	.L143:
 2473 00e2 1300     		movs	r3, r2
 2474              	.LVL311:
 2475              	.L142:
2274:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
 2476              		.loc 1 2274 0 discriminator 1
 2477 00e4 5A1E     		subs	r2, r3, #1
 2478              	.LVL312:
 2479 00e6 002B     		cmp	r3, #0
 2480 00e8 ECD1     		bne	.L144
2292:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 2481              		.loc 1 2292 0
 2482 00ea 002C     		cmp	r4, #0
 2483 00ec C5D1     		bne	.L145
 2484 00ee 0133     		adds	r3, r3, #1
 2485 00f0 07E0     		b	.L146
 2486              	.L148:
2296:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 98


 2487              		.loc 1 2296 0
 2488 00f2 03AB     		add	r3, sp, #12
 2489              	.LVL313:
 2490 00f4 9B18     		adds	r3, r3, r2
 2491              	.LVL314:
 2492 00f6 1878     		ldrb	r0, [r3]
 2493 00f8 A95C     		ldrb	r1, [r5, r2]
 2494 00fa 8842     		cmp	r0, r1
 2495 00fc 00D2     		bcs	.L147
2298:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
 2496              		.loc 1 2298 0
 2497 00fe 1970     		strb	r1, [r3]
 2498              	.L147:
 2499 0100 1300     		movs	r3, r2
 2500              	.L146:
 2501              	.LVL315:
2294:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 2502              		.loc 1 2294 0 discriminator 1
 2503 0102 5A1E     		subs	r2, r3, #1
 2504              	.LVL316:
 2505 0104 002B     		cmp	r3, #0
 2506 0106 F4D1     		bne	.L148
2303:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_CSDScanExt();
 2507              		.loc 1 2303 0
 2508 0108 0099     		ldr	r1, [sp]
 2509 010a 0198     		ldr	r0, [sp, #4]
 2510 010c FFF7FEFF 		bl	CapSense_CSDSetupWidgetExt
 2511              	.LVL317:
2304:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 2512              		.loc 1 2304 0
 2513 0110 FFF7FEFF 		bl	CapSense_CSDScanExt
 2514              	.LVL318:
2306:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             while (((CapSense_dsRam.status & CapSense_SW_STS_BUSY) != 0u) && (0uL != watchdogCounte
 2515              		.loc 1 2306 0
 2516 0114 134B     		ldr	r3, .L156+4
2307:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 2517              		.loc 1 2307 0
 2518 0116 00E0     		b	.L149
 2519              	.LVL319:
 2520              	.L151:
2309:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 2521              		.loc 1 2309 0
 2522 0118 013B     		subs	r3, r3, #1
 2523              	.LVL320:
 2524              	.L149:
2307:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 2525              		.loc 1 2307 0
 2526 011a 134A     		ldr	r2, .L156+8
 2527 011c D268     		ldr	r2, [r2, #12]
 2528 011e 1206     		lsls	r2, r2, #24
 2529 0120 01D5     		bpl	.L150
2307:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 2530              		.loc 1 2307 0 is_stmt 0 discriminator 1
 2531 0122 002B     		cmp	r3, #0
 2532 0124 F8D1     		bne	.L151
 2533              	.L150:
2219:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 99


 2534              		.loc 1 2219 0 is_stmt 1 discriminator 2
 2535 0126 009B     		ldr	r3, [sp]
 2536              	.LVL321:
 2537 0128 0133     		adds	r3, r3, #1
 2538 012a 0093     		str	r3, [sp]
 2539              	.LVL322:
 2540              	.L134:
2219:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 2541              		.loc 1 2219 0 is_stmt 0 discriminator 1
 2542 012c 019B     		ldr	r3, [sp, #4]
 2543 012e DA00     		lsls	r2, r3, #3
 2544 0130 D21A     		subs	r2, r2, r3
 2545 0132 9300     		lsls	r3, r2, #2
 2546 0134 0A4A     		ldr	r2, .L156
 2547 0136 D318     		adds	r3, r2, r3
 2548 0138 1B8B     		ldrh	r3, [r3, #24]
 2549 013a 009A     		ldr	r2, [sp]
 2550 013c 9A42     		cmp	r2, r3
 2551 013e 84D3     		bcc	.L152
 2552 0140 0123     		movs	r3, #1
 2553 0142 05E0     		b	.L153
 2554              	.LVL323:
 2555              	.L154:
2315:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
 2556              		.loc 1 2315 0 is_stmt 1
 2557 0144 03AB     		add	r3, sp, #12
 2558              	.LVL324:
 2559 0146 995C     		ldrb	r1, [r3, r2]
 2560 0148 5346     		mov	r3, r10
 2561              	.LVL325:
 2562 014a 9B18     		adds	r3, r3, r2
 2563 014c 5972     		strb	r1, [r3, #9]
2313:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 2564              		.loc 1 2313 0
 2565 014e 1300     		movs	r3, r2
 2566              	.LVL326:
 2567              	.L153:
2313:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 2568              		.loc 1 2313 0 is_stmt 0 discriminator 1
 2569 0150 5A1E     		subs	r2, r3, #1
 2570              	.LVL327:
 2571 0152 002B     		cmp	r3, #0
 2572 0154 F6D1     		bne	.L154
2368:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 2573              		.loc 1 2368 0 is_stmt 1
 2574 0156 04B0     		add	sp, sp, #16
 2575              	.LVL328:
 2576              		@ sp needed
 2577              	.LVL329:
 2578              	.LVL330:
 2579              	.LVL331:
 2580 0158 04BC     		pop	{r2}
 2581 015a 9246     		mov	r10, r2
 2582 015c F0BD     		pop	{r4, r5, r6, r7, pc}
 2583              	.L157:
 2584 015e C046     		.align	2
 2585              	.L156:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 100


 2586 0160 00000000 		.word	CapSense_dsFlash
 2587 0164 00A60E00 		.word	960000
 2588 0168 00000000 		.word	CapSense_dsRam
 2589              		.cfi_endproc
 2590              	.LFE26:
 2591              		.size	CapSense_SsCSDCalibrate, .-CapSense_SsCSDCalibrate
 2592              		.section	.text.CapSense_SsCSDDisconnectSnsExt,"ax",%progbits
 2593              		.align	2
 2594              		.global	CapSense_SsCSDDisconnectSnsExt
 2595              		.code	16
 2596              		.thumb_func
 2597              		.type	CapSense_SsCSDDisconnectSnsExt, %function
 2598              	CapSense_SsCSDDisconnectSnsExt:
 2599              	.LFB20:
1661:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
 2600              		.loc 1 1661 0
 2601              		.cfi_startproc
 2602              		@ args = 0, pretend = 0, frame = 0
 2603              		@ frame_needed = 0, uses_anonymous_args = 0
 2604              	.LVL332:
 2605 0000 10B5     		push	{r4, lr}
 2606              		.cfi_def_cfa_offset 8
 2607              		.cfi_offset 4, -8
 2608              		.cfi_offset 14, -4
1668:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                       + sensorId;
 2609              		.loc 1 1668 0
 2610 0002 C300     		lsls	r3, r0, #3
 2611 0004 181A     		subs	r0, r3, r0
 2612              	.LVL333:
 2613 0006 8300     		lsls	r3, r0, #2
 2614 0008 054A     		ldr	r2, .L159
 2615 000a 9858     		ldr	r0, [r3, r2]
1669:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 2616              		.loc 1 1669 0
 2617 000c CB00     		lsls	r3, r1, #3
 2618 000e 591A     		subs	r1, r3, r1
 2619              	.LVL334:
 2620 0010 8B00     		lsls	r3, r1, #2
 2621 0012 C018     		adds	r0, r0, r3
1667:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                       CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsF
 2622              		.loc 1 1667 0
 2623 0014 034B     		ldr	r3, .L159+4
 2624 0016 1860     		str	r0, [r3]
1702:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
 2625              		.loc 1 1702 0
 2626 0018 FFF7FEFF 		bl	CapSense_CSDDisconnectSns
 2627              	.LVL335:
1704:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 2628              		.loc 1 1704 0
 2629              		@ sp needed
 2630 001c 10BD     		pop	{r4, pc}
 2631              	.L160:
 2632 001e C046     		.align	2
 2633              	.L159:
 2634 0020 00000000 		.word	CapSense_dsFlash
 2635 0024 00000000 		.word	CapSense_curSnsIOPtr
 2636              		.cfi_endproc
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 101


 2637              	.LFE20:
 2638              		.size	CapSense_SsCSDDisconnectSnsExt, .-CapSense_SsCSDDisconnectSnsExt
 2639              		.section	.text.CapSense_CSDCalibrateWidget,"ax",%progbits
 2640              		.align	2
 2641              		.global	CapSense_CSDCalibrateWidget
 2642              		.code	16
 2643              		.thumb_func
 2644              		.type	CapSense_CSDCalibrateWidget, %function
 2645              	CapSense_CSDCalibrateWidget:
 2646              	.LFB27:
2417:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 2647              		.loc 1 2417 0
 2648              		.cfi_startproc
 2649              		@ args = 0, pretend = 0, frame = 0
 2650              		@ frame_needed = 0, uses_anonymous_args = 0
 2651              	.LVL336:
 2652 0000 70B5     		push	{r4, r5, r6, lr}
 2653              		.cfi_def_cfa_offset 16
 2654              		.cfi_offset 4, -16
 2655              		.cfi_offset 5, -12
 2656              		.cfi_offset 6, -8
 2657              		.cfi_offset 14, -4
 2658 0002 0400     		movs	r4, r0
 2659 0004 0D00     		movs	r5, r1
 2660              	.LVL337:
2425:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 2661              		.loc 1 2425 0
 2662 0006 C300     		lsls	r3, r0, #3
 2663 0008 1B1A     		subs	r3, r3, r0
 2664 000a 9A00     		lsls	r2, r3, #2
 2665 000c 174E     		ldr	r6, .L169
 2666 000e 9619     		adds	r6, r2, r6
 2667              	.LVL338:
2427:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 2668              		.loc 1 2427 0
 2669 0010 174B     		ldr	r3, .L169+4
 2670 0012 DB68     		ldr	r3, [r3, #12]
 2671 0014 DB03     		lsls	r3, r3, #15
 2672 0016 24D4     		bmi	.L167
2435:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_CSD_IDAC_GAIN_INDEX_DEFAULT;
 2673              		.loc 1 2435 0
 2674 0018 7368     		ldr	r3, [r6, #4]
 2675 001a 0422     		movs	r2, #4
 2676 001c 9A72     		strb	r2, [r3, #10]
 2677              	.LVL339:
 2678              	.L163:
2444:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     gainSwitch = CapSense_SsCSDSwitchIdacGain(ptrFlashWidget);
 2679              		.loc 1 2444 0 discriminator 1
 2680 001e 2900     		movs	r1, r5
 2681 0020 2000     		movs	r0, r4
 2682 0022 FFF7FEFF 		bl	CapSense_SsCSDCalibrate
 2683              	.LVL340:
2445:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 } while(0u != gainSwitch);
 2684              		.loc 1 2445 0 discriminator 1
 2685 0026 3000     		movs	r0, r6
 2686 0028 FFF7FEFF 		bl	CapSense_SsCSDSwitchIdacGain
 2687              	.LVL341:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 102


2446:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif
 2688              		.loc 1 2446 0 discriminator 1
 2689 002c 0028     		cmp	r0, #0
 2690 002e F6D1     		bne	.L163
2451:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif
 2691              		.loc 1 2451 0
 2692 0030 2900     		movs	r1, r5
 2693 0032 3000     		movs	r0, r6
 2694              	.LVL342:
 2695 0034 FFF7FEFF 		bl	CapSense_SsCSDNormalizeIdac
 2696              	.LVL343:
2455:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_CSDScan();
 2697              		.loc 1 2455 0
 2698 0038 2000     		movs	r0, r4
 2699 003a FFF7FEFF 		bl	CapSense_CSDSetupWidget
 2700              	.LVL344:
2456:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 2701              		.loc 1 2456 0
 2702 003e FFF7FEFF 		bl	CapSense_CSDScan
 2703              	.LVL345:
2458:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             while (((CapSense_dsRam.status & CapSense_SW_STS_BUSY) != 0u) && (0uL != watchdogCounte
 2704              		.loc 1 2458 0
 2705 0042 0C4B     		ldr	r3, .L169+8
2459:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 2706              		.loc 1 2459 0
 2707 0044 00E0     		b	.L164
 2708              	.LVL346:
 2709              	.L166:
2461:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 2710              		.loc 1 2461 0
 2711 0046 013B     		subs	r3, r3, #1
 2712              	.LVL347:
 2713              	.L164:
2459:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 2714              		.loc 1 2459 0
 2715 0048 094A     		ldr	r2, .L169+4
 2716 004a D268     		ldr	r2, [r2, #12]
 2717 004c 1206     		lsls	r2, r2, #24
 2718 004e 01D5     		bpl	.L165
2459:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 2719              		.loc 1 2459 0 is_stmt 0 discriminator 1
 2720 0050 002B     		cmp	r3, #0
 2721 0052 F8D1     		bne	.L166
 2722              	.L165:
2465:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 2723              		.loc 1 2465 0 is_stmt 1
 2724 0054 002B     		cmp	r3, #0
 2725 0056 06D0     		beq	.L168
2471:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 2726              		.loc 1 2471 0
 2727 0058 2900     		movs	r1, r5
 2728 005a 2000     		movs	r0, r4
 2729 005c FFF7FEFF 		bl	CapSense_SsCSDCalibrateCheck
 2730              	.LVL348:
 2731 0060 02E0     		b	.L162
 2732              	.LVL349:
 2733              	.L167:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 103


2430:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
 2734              		.loc 1 2430 0
 2735 0062 1120     		movs	r0, #17
 2736              	.LVL350:
 2737 0064 00E0     		b	.L162
 2738              	.LVL351:
 2739              	.L168:
2467:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 2740              		.loc 1 2467 0
 2741 0066 1020     		movs	r0, #16
 2742              	.LVL352:
 2743              	.L162:
2481:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* ((CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)) || \
 2744              		.loc 1 2481 0
 2745              		@ sp needed
 2746              	.LVL353:
 2747              	.LVL354:
 2748              	.LVL355:
 2749 0068 70BD     		pop	{r4, r5, r6, pc}
 2750              	.L170:
 2751 006a C046     		.align	2
 2752              	.L169:
 2753 006c 00000000 		.word	CapSense_dsFlash
 2754 0070 00000000 		.word	CapSense_dsRam
 2755 0074 00366E01 		.word	24000000
 2756              		.cfi_endproc
 2757              	.LFE27:
 2758              		.size	CapSense_CSDCalibrateWidget, .-CapSense_CSDCalibrateWidget
 2759              		.global	CapSense_configCsd
 2760              		.data
 2761              		.align	2
 2762              		.set	.LANCHOR0,. + 0
 2763              		.type	CapSense_configCsd, %object
 2764              		.size	CapSense_configCsd, 4
 2765              	CapSense_configCsd:
 2766 0000 20000004 		.word	67108896
 2767              		.bss
 2768              		.set	.LANCHOR1,. + 0
 2769              		.type	CapSense_eleCsdDisconnectFlag, %object
 2770              		.size	CapSense_eleCsdDisconnectFlag, 1
 2771              	CapSense_eleCsdDisconnectFlag:
 2772 0000 00       		.space	1
 2773              		.text
 2774              	.Letext0:
 2775              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 2776              		.file 3 "Generated_Source\\PSoC4\\CapSense_Configuration.h"
 2777              		.file 4 "Generated_Source\\PSoC4\\CapSense_Structure.h"
 2778              		.file 5 "Generated_Source\\PSoC4\\CapSense_Sensing.h"
 2779              		.file 6 "Generated_Source\\PSoC4/CyLib.h"
 2780              		.file 7 "Generated_Source\\PSoC4\\CapSense_ISR.h"
 2781              		.section	.debug_info,"",%progbits
 2782              	.Ldebug_info0:
 2783 0000 77150000 		.4byte	0x1577
 2784 0004 0400     		.2byte	0x4
 2785 0006 00000000 		.4byte	.Ldebug_abbrev0
 2786 000a 04       		.byte	0x4
 2787 000b 01       		.uleb128 0x1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 104


 2788 000c C1020000 		.4byte	.LASF202
 2789 0010 0C       		.byte	0xc
 2790 0011 5C080000 		.4byte	.LASF203
 2791 0015 6E010000 		.4byte	.LASF204
 2792 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2793 001d 00000000 		.4byte	0
 2794 0021 00000000 		.4byte	.Ldebug_line0
 2795 0025 02       		.uleb128 0x2
 2796 0026 01       		.byte	0x1
 2797 0027 06       		.byte	0x6
 2798 0028 980C0000 		.4byte	.LASF0
 2799 002c 02       		.uleb128 0x2
 2800 002d 01       		.byte	0x1
 2801 002e 08       		.byte	0x8
 2802 002f 960B0000 		.4byte	.LASF1
 2803 0033 02       		.uleb128 0x2
 2804 0034 02       		.byte	0x2
 2805 0035 05       		.byte	0x5
 2806 0036 2F090000 		.4byte	.LASF2
 2807 003a 02       		.uleb128 0x2
 2808 003b 02       		.byte	0x2
 2809 003c 07       		.byte	0x7
 2810 003d C00C0000 		.4byte	.LASF3
 2811 0041 02       		.uleb128 0x2
 2812 0042 04       		.byte	0x4
 2813 0043 05       		.byte	0x5
 2814 0044 B7090000 		.4byte	.LASF4
 2815 0048 02       		.uleb128 0x2
 2816 0049 04       		.byte	0x4
 2817 004a 07       		.byte	0x7
 2818 004b C40A0000 		.4byte	.LASF5
 2819 004f 02       		.uleb128 0x2
 2820 0050 08       		.byte	0x8
 2821 0051 05       		.byte	0x5
 2822 0052 9E060000 		.4byte	.LASF6
 2823 0056 02       		.uleb128 0x2
 2824 0057 08       		.byte	0x8
 2825 0058 07       		.byte	0x7
 2826 0059 BA030000 		.4byte	.LASF7
 2827 005d 03       		.uleb128 0x3
 2828 005e 04       		.byte	0x4
 2829 005f 05       		.byte	0x5
 2830 0060 696E7400 		.ascii	"int\000"
 2831 0064 02       		.uleb128 0x2
 2832 0065 04       		.byte	0x4
 2833 0066 07       		.byte	0x7
 2834 0067 BF000000 		.4byte	.LASF8
 2835 006b 04       		.uleb128 0x4
 2836 006c 110D0000 		.4byte	.LASF9
 2837 0070 02       		.byte	0x2
 2838 0071 E401     		.2byte	0x1e4
 2839 0073 2C000000 		.4byte	0x2c
 2840 0077 04       		.uleb128 0x4
 2841 0078 09060000 		.4byte	.LASF10
 2842 007c 02       		.byte	0x2
 2843 007d E501     		.2byte	0x1e5
 2844 007f 3A000000 		.4byte	0x3a
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 105


 2845 0083 04       		.uleb128 0x4
 2846 0084 EF070000 		.4byte	.LASF11
 2847 0088 02       		.byte	0x2
 2848 0089 E601     		.2byte	0x1e6
 2849 008b 48000000 		.4byte	0x48
 2850 008f 02       		.uleb128 0x2
 2851 0090 04       		.byte	0x4
 2852 0091 04       		.byte	0x4
 2853 0092 9B020000 		.4byte	.LASF12
 2854 0096 02       		.uleb128 0x2
 2855 0097 08       		.byte	0x8
 2856 0098 04       		.byte	0x4
 2857 0099 170D0000 		.4byte	.LASF13
 2858 009d 02       		.uleb128 0x2
 2859 009e 01       		.byte	0x1
 2860 009f 08       		.byte	0x8
 2861 00a0 96050000 		.4byte	.LASF14
 2862 00a4 04       		.uleb128 0x4
 2863 00a5 4F0B0000 		.4byte	.LASF15
 2864 00a9 02       		.byte	0x2
 2865 00aa 8602     		.2byte	0x286
 2866 00ac 48000000 		.4byte	0x48
 2867 00b0 05       		.uleb128 0x5
 2868 00b1 6B000000 		.4byte	0x6b
 2869 00b5 04       		.uleb128 0x4
 2870 00b6 CE080000 		.4byte	.LASF16
 2871 00ba 02       		.byte	0x2
 2872 00bb 9002     		.2byte	0x290
 2873 00bd C1000000 		.4byte	0xc1
 2874 00c1 05       		.uleb128 0x5
 2875 00c2 83000000 		.4byte	0x83
 2876 00c6 04       		.uleb128 0x4
 2877 00c7 DD0B0000 		.4byte	.LASF17
 2878 00cb 03       		.byte	0x3
 2879 00cc 3201     		.2byte	0x132
 2880 00ce 77000000 		.4byte	0x77
 2881 00d2 04       		.uleb128 0x4
 2882 00d3 74060000 		.4byte	.LASF18
 2883 00d7 03       		.byte	0x3
 2884 00d8 3601     		.2byte	0x136
 2885 00da 6B000000 		.4byte	0x6b
 2886 00de 06       		.uleb128 0x6
 2887 00df 01       		.byte	0x1
 2888 00e0 2C000000 		.4byte	0x2c
 2889 00e4 04       		.byte	0x4
 2890 00e5 70       		.byte	0x70
 2891 00e6 09010000 		.4byte	0x109
 2892 00ea 07       		.uleb128 0x7
 2893 00eb A5000000 		.4byte	.LASF19
 2894 00ef 00       		.byte	0
 2895 00f0 07       		.uleb128 0x7
 2896 00f1 970A0000 		.4byte	.LASF20
 2897 00f5 01       		.byte	0x1
 2898 00f6 07       		.uleb128 0x7
 2899 00f7 EC090000 		.4byte	.LASF21
 2900 00fb 02       		.byte	0x2
 2901 00fc 07       		.uleb128 0x7
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 106


 2902 00fd 200C0000 		.4byte	.LASF22
 2903 0101 03       		.byte	0x3
 2904 0102 07       		.uleb128 0x7
 2905 0103 8C080000 		.4byte	.LASF23
 2906 0107 04       		.byte	0x4
 2907 0108 00       		.byte	0
 2908 0109 08       		.uleb128 0x8
 2909 010a 10       		.byte	0x10
 2910 010b 04       		.byte	0x4
 2911 010c AD       		.byte	0xad
 2912 010d 96010000 		.4byte	0x196
 2913 0111 09       		.uleb128 0x9
 2914 0112 62060000 		.4byte	.LASF24
 2915 0116 04       		.byte	0x4
 2916 0117 B2       		.byte	0xb2
 2917 0118 77000000 		.4byte	0x77
 2918 011c 00       		.byte	0
 2919 011d 09       		.uleb128 0x9
 2920 011e 000B0000 		.4byte	.LASF25
 2921 0122 04       		.byte	0x4
 2922 0123 B7       		.byte	0xb7
 2923 0124 C6000000 		.4byte	0xc6
 2924 0128 02       		.byte	0x2
 2925 0129 09       		.uleb128 0x9
 2926 012a 7C050000 		.4byte	.LASF26
 2927 012e 04       		.byte	0x4
 2928 012f BC       		.byte	0xbc
 2929 0130 6B000000 		.4byte	0x6b
 2930 0134 04       		.byte	0x4
 2931 0135 09       		.uleb128 0x9
 2932 0136 80070000 		.4byte	.LASF27
 2933 013a 04       		.byte	0x4
 2934 013b C1       		.byte	0xc1
 2935 013c 6B000000 		.4byte	0x6b
 2936 0140 05       		.byte	0x5
 2937 0141 09       		.uleb128 0x9
 2938 0142 EF040000 		.4byte	.LASF28
 2939 0146 04       		.byte	0x4
 2940 0147 C7       		.byte	0xc7
 2941 0148 6B000000 		.4byte	0x6b
 2942 014c 06       		.byte	0x6
 2943 014d 09       		.uleb128 0x9
 2944 014e F2060000 		.4byte	.LASF29
 2945 0152 04       		.byte	0x4
 2946 0153 CD       		.byte	0xcd
 2947 0154 6B000000 		.4byte	0x6b
 2948 0158 07       		.byte	0x7
 2949 0159 09       		.uleb128 0x9
 2950 015a 1C050000 		.4byte	.LASF30
 2951 015e 04       		.byte	0x4
 2952 015f D4       		.byte	0xd4
 2953 0160 D2000000 		.4byte	0xd2
 2954 0164 08       		.byte	0x8
 2955 0165 09       		.uleb128 0x9
 2956 0166 D60A0000 		.4byte	.LASF31
 2957 016a 04       		.byte	0x4
 2958 016b DB       		.byte	0xdb
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 107


 2959 016c 96010000 		.4byte	0x196
 2960 0170 09       		.byte	0x9
 2961 0171 09       		.uleb128 0x9
 2962 0172 64020000 		.4byte	.LASF32
 2963 0176 04       		.byte	0x4
 2964 0177 E0       		.byte	0xe0
 2965 0178 6B000000 		.4byte	0x6b
 2966 017c 0A       		.byte	0xa
 2967 017d 09       		.uleb128 0x9
 2968 017e 590C0000 		.4byte	.LASF33
 2969 0182 04       		.byte	0x4
 2970 0183 E8       		.byte	0xe8
 2971 0184 77000000 		.4byte	0x77
 2972 0188 0C       		.byte	0xc
 2973 0189 09       		.uleb128 0x9
 2974 018a 05090000 		.4byte	.LASF34
 2975 018e 04       		.byte	0x4
 2976 018f ED       		.byte	0xed
 2977 0190 6B000000 		.4byte	0x6b
 2978 0194 0E       		.byte	0xe
 2979 0195 00       		.byte	0
 2980 0196 0A       		.uleb128 0xa
 2981 0197 6B000000 		.4byte	0x6b
 2982 019b A6010000 		.4byte	0x1a6
 2983 019f 0B       		.uleb128 0xb
 2984 01a0 A6010000 		.4byte	0x1a6
 2985 01a4 00       		.byte	0
 2986 01a5 00       		.byte	0
 2987 01a6 02       		.uleb128 0x2
 2988 01a7 04       		.byte	0x4
 2989 01a8 07       		.byte	0x7
 2990 01a9 B30A0000 		.4byte	.LASF35
 2991 01ad 0C       		.uleb128 0xc
 2992 01ae BE070000 		.4byte	.LASF36
 2993 01b2 04       		.byte	0x4
 2994 01b3 EE       		.byte	0xee
 2995 01b4 09010000 		.4byte	0x109
 2996 01b8 08       		.uleb128 0x8
 2997 01b9 10       		.byte	0x10
 2998 01ba 04       		.byte	0x4
 2999 01bb F3       		.byte	0xf3
 3000 01bc 4E020000 		.4byte	0x24e
 3001 01c0 09       		.uleb128 0x9
 3002 01c1 62060000 		.4byte	.LASF24
 3003 01c5 04       		.byte	0x4
 3004 01c6 F8       		.byte	0xf8
 3005 01c7 77000000 		.4byte	0x77
 3006 01cb 00       		.byte	0
 3007 01cc 09       		.uleb128 0x9
 3008 01cd 000B0000 		.4byte	.LASF25
 3009 01d1 04       		.byte	0x4
 3010 01d2 FD       		.byte	0xfd
 3011 01d3 C6000000 		.4byte	0xc6
 3012 01d7 02       		.byte	0x2
 3013 01d8 0D       		.uleb128 0xd
 3014 01d9 7C050000 		.4byte	.LASF26
 3015 01dd 04       		.byte	0x4
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 108


 3016 01de 0201     		.2byte	0x102
 3017 01e0 6B000000 		.4byte	0x6b
 3018 01e4 04       		.byte	0x4
 3019 01e5 0D       		.uleb128 0xd
 3020 01e6 80070000 		.4byte	.LASF27
 3021 01ea 04       		.byte	0x4
 3022 01eb 0701     		.2byte	0x107
 3023 01ed 6B000000 		.4byte	0x6b
 3024 01f1 05       		.byte	0x5
 3025 01f2 0D       		.uleb128 0xd
 3026 01f3 EF040000 		.4byte	.LASF28
 3027 01f7 04       		.byte	0x4
 3028 01f8 0D01     		.2byte	0x10d
 3029 01fa 6B000000 		.4byte	0x6b
 3030 01fe 06       		.byte	0x6
 3031 01ff 0D       		.uleb128 0xd
 3032 0200 F2060000 		.4byte	.LASF29
 3033 0204 04       		.byte	0x4
 3034 0205 1301     		.2byte	0x113
 3035 0207 6B000000 		.4byte	0x6b
 3036 020b 07       		.byte	0x7
 3037 020c 0D       		.uleb128 0xd
 3038 020d 1C050000 		.4byte	.LASF30
 3039 0211 04       		.byte	0x4
 3040 0212 1A01     		.2byte	0x11a
 3041 0214 D2000000 		.4byte	0xd2
 3042 0218 08       		.byte	0x8
 3043 0219 0D       		.uleb128 0xd
 3044 021a D60A0000 		.4byte	.LASF31
 3045 021e 04       		.byte	0x4
 3046 021f 2101     		.2byte	0x121
 3047 0221 96010000 		.4byte	0x196
 3048 0225 09       		.byte	0x9
 3049 0226 0D       		.uleb128 0xd
 3050 0227 64020000 		.4byte	.LASF32
 3051 022b 04       		.byte	0x4
 3052 022c 2601     		.2byte	0x126
 3053 022e 6B000000 		.4byte	0x6b
 3054 0232 0A       		.byte	0xa
 3055 0233 0D       		.uleb128 0xd
 3056 0234 590C0000 		.4byte	.LASF33
 3057 0238 04       		.byte	0x4
 3058 0239 2E01     		.2byte	0x12e
 3059 023b 77000000 		.4byte	0x77
 3060 023f 0C       		.byte	0xc
 3061 0240 0D       		.uleb128 0xd
 3062 0241 05090000 		.4byte	.LASF34
 3063 0245 04       		.byte	0x4
 3064 0246 3301     		.2byte	0x133
 3065 0248 6B000000 		.4byte	0x6b
 3066 024c 0E       		.byte	0xe
 3067 024d 00       		.byte	0
 3068 024e 04       		.uleb128 0x4
 3069 024f 310B0000 		.4byte	.LASF37
 3070 0253 04       		.byte	0x4
 3071 0254 3401     		.2byte	0x134
 3072 0256 B8010000 		.4byte	0x1b8
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 109


 3073 025a 0E       		.uleb128 0xe
 3074 025b 12       		.byte	0x12
 3075 025c 04       		.byte	0x4
 3076 025d 3901     		.2byte	0x139
 3077 025f 00030000 		.4byte	0x300
 3078 0263 0D       		.uleb128 0xd
 3079 0264 62060000 		.4byte	.LASF24
 3080 0268 04       		.byte	0x4
 3081 0269 3E01     		.2byte	0x13e
 3082 026b 77000000 		.4byte	0x77
 3083 026f 00       		.byte	0
 3084 0270 0D       		.uleb128 0xd
 3085 0271 000B0000 		.4byte	.LASF25
 3086 0275 04       		.byte	0x4
 3087 0276 4301     		.2byte	0x143
 3088 0278 C6000000 		.4byte	0xc6
 3089 027c 02       		.byte	0x2
 3090 027d 0D       		.uleb128 0xd
 3091 027e 7C050000 		.4byte	.LASF26
 3092 0282 04       		.byte	0x4
 3093 0283 4801     		.2byte	0x148
 3094 0285 6B000000 		.4byte	0x6b
 3095 0289 04       		.byte	0x4
 3096 028a 0D       		.uleb128 0xd
 3097 028b 80070000 		.4byte	.LASF27
 3098 028f 04       		.byte	0x4
 3099 0290 4D01     		.2byte	0x14d
 3100 0292 6B000000 		.4byte	0x6b
 3101 0296 05       		.byte	0x5
 3102 0297 0D       		.uleb128 0xd
 3103 0298 EF040000 		.4byte	.LASF28
 3104 029c 04       		.byte	0x4
 3105 029d 5301     		.2byte	0x153
 3106 029f 6B000000 		.4byte	0x6b
 3107 02a3 06       		.byte	0x6
 3108 02a4 0D       		.uleb128 0xd
 3109 02a5 F2060000 		.4byte	.LASF29
 3110 02a9 04       		.byte	0x4
 3111 02aa 5901     		.2byte	0x159
 3112 02ac 6B000000 		.4byte	0x6b
 3113 02b0 07       		.byte	0x7
 3114 02b1 0D       		.uleb128 0xd
 3115 02b2 1C050000 		.4byte	.LASF30
 3116 02b6 04       		.byte	0x4
 3117 02b7 6001     		.2byte	0x160
 3118 02b9 D2000000 		.4byte	0xd2
 3119 02bd 08       		.byte	0x8
 3120 02be 0D       		.uleb128 0xd
 3121 02bf D60A0000 		.4byte	.LASF31
 3122 02c3 04       		.byte	0x4
 3123 02c4 6701     		.2byte	0x167
 3124 02c6 96010000 		.4byte	0x196
 3125 02ca 09       		.byte	0x9
 3126 02cb 0D       		.uleb128 0xd
 3127 02cc 64020000 		.4byte	.LASF32
 3128 02d0 04       		.byte	0x4
 3129 02d1 6C01     		.2byte	0x16c
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 110


 3130 02d3 6B000000 		.4byte	0x6b
 3131 02d7 0A       		.byte	0xa
 3132 02d8 0D       		.uleb128 0xd
 3133 02d9 590C0000 		.4byte	.LASF33
 3134 02dd 04       		.byte	0x4
 3135 02de 7401     		.2byte	0x174
 3136 02e0 77000000 		.4byte	0x77
 3137 02e4 0C       		.byte	0xc
 3138 02e5 0D       		.uleb128 0xd
 3139 02e6 05090000 		.4byte	.LASF34
 3140 02ea 04       		.byte	0x4
 3141 02eb 7901     		.2byte	0x179
 3142 02ed 6B000000 		.4byte	0x6b
 3143 02f1 0E       		.byte	0xe
 3144 02f2 0D       		.uleb128 0xd
 3145 02f3 74000000 		.4byte	.LASF38
 3146 02f7 04       		.byte	0x4
 3147 02f8 7E01     		.2byte	0x17e
 3148 02fa C6000000 		.4byte	0xc6
 3149 02fe 10       		.byte	0x10
 3150 02ff 00       		.byte	0
 3151 0300 04       		.uleb128 0x4
 3152 0301 580B0000 		.4byte	.LASF39
 3153 0305 04       		.byte	0x4
 3154 0306 7F01     		.2byte	0x17f
 3155 0308 5A020000 		.4byte	0x25a
 3156 030c 0E       		.uleb128 0xe
 3157 030d 62       		.byte	0x62
 3158 030e 04       		.byte	0x4
 3159 030f 8501     		.2byte	0x185
 3160 0311 64030000 		.4byte	0x364
 3161 0315 0D       		.uleb128 0xd
 3162 0316 28000000 		.4byte	.LASF40
 3163 031a 04       		.byte	0x4
 3164 031b 8A01     		.2byte	0x18a
 3165 031d 4E020000 		.4byte	0x24e
 3166 0321 00       		.byte	0
 3167 0322 0D       		.uleb128 0xd
 3168 0323 CF010000 		.4byte	.LASF41
 3169 0327 04       		.byte	0x4
 3170 0328 8F01     		.2byte	0x18f
 3171 032a 4E020000 		.4byte	0x24e
 3172 032e 10       		.byte	0x10
 3173 032f 0D       		.uleb128 0xd
 3174 0330 D30C0000 		.4byte	.LASF42
 3175 0334 04       		.byte	0x4
 3176 0335 9401     		.2byte	0x194
 3177 0337 4E020000 		.4byte	0x24e
 3178 033b 20       		.byte	0x20
 3179 033c 0D       		.uleb128 0xd
 3180 033d 89070000 		.4byte	.LASF43
 3181 0341 04       		.byte	0x4
 3182 0342 9901     		.2byte	0x199
 3183 0344 4E020000 		.4byte	0x24e
 3184 0348 30       		.byte	0x30
 3185 0349 0D       		.uleb128 0xd
 3186 034a AF040000 		.4byte	.LASF44
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 111


 3187 034e 04       		.byte	0x4
 3188 034f 9E01     		.2byte	0x19e
 3189 0351 4E020000 		.4byte	0x24e
 3190 0355 40       		.byte	0x40
 3191 0356 0D       		.uleb128 0xd
 3192 0357 FB0A0000 		.4byte	.LASF45
 3193 035b 04       		.byte	0x4
 3194 035c A301     		.2byte	0x1a3
 3195 035e 00030000 		.4byte	0x300
 3196 0362 50       		.byte	0x50
 3197 0363 00       		.byte	0
 3198 0364 04       		.uleb128 0x4
 3199 0365 2B020000 		.4byte	.LASF46
 3200 0369 04       		.byte	0x4
 3201 036a A401     		.2byte	0x1a4
 3202 036c 0C030000 		.4byte	0x30c
 3203 0370 0E       		.uleb128 0xe
 3204 0371 0A       		.byte	0xa
 3205 0372 04       		.byte	0x4
 3206 0373 AA01     		.2byte	0x1aa
 3207 0375 C8030000 		.4byte	0x3c8
 3208 0379 0F       		.uleb128 0xf
 3209 037a 72617700 		.ascii	"raw\000"
 3210 037e 04       		.byte	0x4
 3211 037f AF01     		.2byte	0x1af
 3212 0381 C8030000 		.4byte	0x3c8
 3213 0385 00       		.byte	0
 3214 0386 0D       		.uleb128 0xd
 3215 0387 BB0C0000 		.4byte	.LASF47
 3216 038b 04       		.byte	0x4
 3217 038c B401     		.2byte	0x1b4
 3218 038e C8030000 		.4byte	0x3c8
 3219 0392 02       		.byte	0x2
 3220 0393 0D       		.uleb128 0xd
 3221 0394 090B0000 		.4byte	.LASF48
 3222 0398 04       		.byte	0x4
 3223 0399 BA01     		.2byte	0x1ba
 3224 039b 96010000 		.4byte	0x196
 3225 039f 04       		.byte	0x4
 3226 03a0 0D       		.uleb128 0xd
 3227 03a1 D1090000 		.4byte	.LASF49
 3228 03a5 04       		.byte	0x4
 3229 03a6 BF01     		.2byte	0x1bf
 3230 03a8 C6000000 		.4byte	0xc6
 3231 03ac 06       		.byte	0x6
 3232 03ad 0D       		.uleb128 0xd
 3233 03ae 1E0D0000 		.4byte	.LASF50
 3234 03b2 04       		.byte	0x4
 3235 03b3 C401     		.2byte	0x1c4
 3236 03b5 D8030000 		.4byte	0x3d8
 3237 03b9 08       		.byte	0x8
 3238 03ba 0D       		.uleb128 0xd
 3239 03bb 8F060000 		.4byte	.LASF51
 3240 03bf 04       		.byte	0x4
 3241 03c0 C901     		.2byte	0x1c9
 3242 03c2 96010000 		.4byte	0x196
 3243 03c6 09       		.byte	0x9
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 112


 3244 03c7 00       		.byte	0
 3245 03c8 0A       		.uleb128 0xa
 3246 03c9 77000000 		.4byte	0x77
 3247 03cd D8030000 		.4byte	0x3d8
 3248 03d1 0B       		.uleb128 0xb
 3249 03d2 A6010000 		.4byte	0x1a6
 3250 03d6 00       		.byte	0
 3251 03d7 00       		.byte	0
 3252 03d8 0A       		.uleb128 0xa
 3253 03d9 D2000000 		.4byte	0xd2
 3254 03dd E8030000 		.4byte	0x3e8
 3255 03e1 0B       		.uleb128 0xb
 3256 03e2 A6010000 		.4byte	0x1a6
 3257 03e6 00       		.byte	0
 3258 03e7 00       		.byte	0
 3259 03e8 04       		.uleb128 0x4
 3260 03e9 8A040000 		.4byte	.LASF52
 3261 03ed 04       		.byte	0x4
 3262 03ee CA01     		.2byte	0x1ca
 3263 03f0 70030000 		.4byte	0x370
 3264 03f4 0E       		.uleb128 0xe
 3265 03f5 3C       		.byte	0x3c
 3266 03f6 04       		.byte	0x4
 3267 03f7 D001     		.2byte	0x1d0
 3268 03f9 4C040000 		.4byte	0x44c
 3269 03fd 0D       		.uleb128 0xd
 3270 03fe 28000000 		.4byte	.LASF40
 3271 0402 04       		.byte	0x4
 3272 0403 D501     		.2byte	0x1d5
 3273 0405 4C040000 		.4byte	0x44c
 3274 0409 00       		.byte	0
 3275 040a 0D       		.uleb128 0xd
 3276 040b CF010000 		.4byte	.LASF41
 3277 040f 04       		.byte	0x4
 3278 0410 DA01     		.2byte	0x1da
 3279 0412 4C040000 		.4byte	0x44c
 3280 0416 0A       		.byte	0xa
 3281 0417 0D       		.uleb128 0xd
 3282 0418 D30C0000 		.4byte	.LASF42
 3283 041c 04       		.byte	0x4
 3284 041d DF01     		.2byte	0x1df
 3285 041f 4C040000 		.4byte	0x44c
 3286 0423 14       		.byte	0x14
 3287 0424 0D       		.uleb128 0xd
 3288 0425 89070000 		.4byte	.LASF43
 3289 0429 04       		.byte	0x4
 3290 042a E401     		.2byte	0x1e4
 3291 042c 4C040000 		.4byte	0x44c
 3292 0430 1E       		.byte	0x1e
 3293 0431 0D       		.uleb128 0xd
 3294 0432 AF040000 		.4byte	.LASF44
 3295 0436 04       		.byte	0x4
 3296 0437 E901     		.2byte	0x1e9
 3297 0439 4C040000 		.4byte	0x44c
 3298 043d 28       		.byte	0x28
 3299 043e 0D       		.uleb128 0xd
 3300 043f FB0A0000 		.4byte	.LASF45
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 113


 3301 0443 04       		.byte	0x4
 3302 0444 EE01     		.2byte	0x1ee
 3303 0446 4C040000 		.4byte	0x44c
 3304 044a 32       		.byte	0x32
 3305 044b 00       		.byte	0
 3306 044c 0A       		.uleb128 0xa
 3307 044d E8030000 		.4byte	0x3e8
 3308 0451 5C040000 		.4byte	0x45c
 3309 0455 0B       		.uleb128 0xb
 3310 0456 A6010000 		.4byte	0x1a6
 3311 045a 00       		.byte	0
 3312 045b 00       		.byte	0
 3313 045c 04       		.uleb128 0x4
 3314 045d 9D0D0000 		.4byte	.LASF53
 3315 0461 04       		.byte	0x4
 3316 0462 EF01     		.2byte	0x1ef
 3317 0464 F4030000 		.4byte	0x3f4
 3318 0468 0E       		.uleb128 0xe
 3319 0469 C8       		.byte	0xc8
 3320 046a 04       		.byte	0x4
 3321 046b F501     		.2byte	0x1f5
 3322 046d 69050000 		.4byte	0x569
 3323 0471 0D       		.uleb128 0xd
 3324 0472 E7080000 		.4byte	.LASF54
 3325 0476 04       		.byte	0x4
 3326 0477 FC01     		.2byte	0x1fc
 3327 0479 77000000 		.4byte	0x77
 3328 047d 00       		.byte	0
 3329 047e 0D       		.uleb128 0xd
 3330 047f 660D0000 		.4byte	.LASF55
 3331 0483 04       		.byte	0x4
 3332 0484 0102     		.2byte	0x201
 3333 0486 77000000 		.4byte	0x77
 3334 048a 02       		.byte	0x2
 3335 048b 0D       		.uleb128 0xd
 3336 048c DE000000 		.4byte	.LASF56
 3337 0490 04       		.byte	0x4
 3338 0491 0602     		.2byte	0x206
 3339 0493 77000000 		.4byte	0x77
 3340 0497 04       		.byte	0x4
 3341 0498 0D       		.uleb128 0xd
 3342 0499 DE090000 		.4byte	.LASF57
 3343 049d 04       		.byte	0x4
 3344 049e 0C02     		.2byte	0x20c
 3345 04a0 77000000 		.4byte	0x77
 3346 04a4 06       		.byte	0x6
 3347 04a5 0D       		.uleb128 0xd
 3348 04a6 CC000000 		.4byte	.LASF58
 3349 04aa 04       		.byte	0x4
 3350 04ab 1102     		.2byte	0x211
 3351 04ad 77000000 		.4byte	0x77
 3352 04b1 08       		.byte	0x8
 3353 04b2 0D       		.uleb128 0xd
 3354 04b3 6D060000 		.4byte	.LASF59
 3355 04b7 04       		.byte	0x4
 3356 04b8 1602     		.2byte	0x216
 3357 04ba C1000000 		.4byte	0xc1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 114


 3358 04be 0C       		.byte	0xc
 3359 04bf 0D       		.uleb128 0xd
 3360 04c0 C6090000 		.4byte	.LASF60
 3361 04c4 04       		.byte	0x4
 3362 04c5 1C02     		.2byte	0x21c
 3363 04c7 69050000 		.4byte	0x569
 3364 04cb 10       		.byte	0x10
 3365 04cc 0D       		.uleb128 0xd
 3366 04cd 750A0000 		.4byte	.LASF61
 3367 04d1 04       		.byte	0x4
 3368 04d2 2302     		.2byte	0x223
 3369 04d4 69050000 		.4byte	0x569
 3370 04d8 14       		.byte	0x14
 3371 04d9 0D       		.uleb128 0xd
 3372 04da FB080000 		.4byte	.LASF62
 3373 04de 04       		.byte	0x4
 3374 04df 3302     		.2byte	0x233
 3375 04e1 79050000 		.4byte	0x579
 3376 04e5 18       		.byte	0x18
 3377 04e6 0D       		.uleb128 0xd
 3378 04e7 96070000 		.4byte	.LASF63
 3379 04eb 04       		.byte	0x4
 3380 04ec 3902     		.2byte	0x239
 3381 04ee 77000000 		.4byte	0x77
 3382 04f2 1E       		.byte	0x1e
 3383 04f3 0D       		.uleb128 0xd
 3384 04f4 80040000 		.4byte	.LASF64
 3385 04f8 04       		.byte	0x4
 3386 04f9 3E02     		.2byte	0x23e
 3387 04fb 6B000000 		.4byte	0x6b
 3388 04ff 20       		.byte	0x20
 3389 0500 0D       		.uleb128 0xd
 3390 0501 18070000 		.4byte	.LASF65
 3391 0505 04       		.byte	0x4
 3392 0506 4302     		.2byte	0x243
 3393 0508 64030000 		.4byte	0x364
 3394 050c 22       		.byte	0x22
 3395 050d 0D       		.uleb128 0xd
 3396 050e 9D030000 		.4byte	.LASF66
 3397 0512 04       		.byte	0x4
 3398 0513 4802     		.2byte	0x248
 3399 0515 5C040000 		.4byte	0x45c
 3400 0519 84       		.byte	0x84
 3401 051a 0D       		.uleb128 0xd
 3402 051b 95000000 		.4byte	.LASF67
 3403 051f 04       		.byte	0x4
 3404 0520 4D02     		.2byte	0x24d
 3405 0522 6B000000 		.4byte	0x6b
 3406 0526 C0       		.byte	0xc0
 3407 0527 0D       		.uleb128 0xd
 3408 0528 FF030000 		.4byte	.LASF68
 3409 052c 04       		.byte	0x4
 3410 052d 5202     		.2byte	0x252
 3411 052f 6B000000 		.4byte	0x6b
 3412 0533 C1       		.byte	0xc1
 3413 0534 0D       		.uleb128 0xd
 3414 0535 D4080000 		.4byte	.LASF69
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 115


 3415 0539 04       		.byte	0x4
 3416 053a 5702     		.2byte	0x257
 3417 053c 77000000 		.4byte	0x77
 3418 0540 C2       		.byte	0xc2
 3419 0541 0D       		.uleb128 0xd
 3420 0542 5D070000 		.4byte	.LASF70
 3421 0546 04       		.byte	0x4
 3422 0547 5C02     		.2byte	0x25c
 3423 0549 C8030000 		.4byte	0x3c8
 3424 054d C4       		.byte	0xc4
 3425 054e 0D       		.uleb128 0xd
 3426 054f E6000000 		.4byte	.LASF71
 3427 0553 04       		.byte	0x4
 3428 0554 6102     		.2byte	0x261
 3429 0556 6B000000 		.4byte	0x6b
 3430 055a C6       		.byte	0xc6
 3431 055b 0D       		.uleb128 0xd
 3432 055c C20B0000 		.4byte	.LASF72
 3433 0560 04       		.byte	0x4
 3434 0561 6602     		.2byte	0x266
 3435 0563 6B000000 		.4byte	0x6b
 3436 0567 C7       		.byte	0xc7
 3437 0568 00       		.byte	0
 3438 0569 0A       		.uleb128 0xa
 3439 056a 83000000 		.4byte	0x83
 3440 056e 79050000 		.4byte	0x579
 3441 0572 0B       		.uleb128 0xb
 3442 0573 A6010000 		.4byte	0x1a6
 3443 0577 00       		.byte	0
 3444 0578 00       		.byte	0
 3445 0579 0A       		.uleb128 0xa
 3446 057a 6B000000 		.4byte	0x6b
 3447 057e 89050000 		.4byte	0x589
 3448 0582 0B       		.uleb128 0xb
 3449 0583 A6010000 		.4byte	0x1a6
 3450 0587 05       		.byte	0x5
 3451 0588 00       		.byte	0
 3452 0589 04       		.uleb128 0x4
 3453 058a 4A090000 		.4byte	.LASF73
 3454 058e 04       		.byte	0x4
 3455 058f 6702     		.2byte	0x267
 3456 0591 68040000 		.4byte	0x468
 3457 0595 0E       		.uleb128 0xe
 3458 0596 1C       		.byte	0x1c
 3459 0597 04       		.byte	0x4
 3460 0598 6D02     		.2byte	0x26d
 3461 059a 14060000 		.4byte	0x614
 3462 059e 0D       		.uleb128 0xd
 3463 059f E6070000 		.4byte	.LASF74
 3464 05a3 04       		.byte	0x4
 3465 05a4 7202     		.2byte	0x272
 3466 05a6 14060000 		.4byte	0x614
 3467 05aa 00       		.byte	0
 3468 05ab 0D       		.uleb128 0xd
 3469 05ac 98060000 		.4byte	.LASF75
 3470 05b0 04       		.byte	0x4
 3471 05b1 7702     		.2byte	0x277
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 116


 3472 05b3 14060000 		.4byte	0x614
 3473 05b7 04       		.byte	0x4
 3474 05b8 0D       		.uleb128 0xd
 3475 05b9 C0040000 		.4byte	.LASF76
 3476 05bd 04       		.byte	0x4
 3477 05be 7C02     		.2byte	0x27c
 3478 05c0 14060000 		.4byte	0x614
 3479 05c4 08       		.byte	0x8
 3480 05c5 0D       		.uleb128 0xd
 3481 05c6 080A0000 		.4byte	.LASF77
 3482 05ca 04       		.byte	0x4
 3483 05cb 8102     		.2byte	0x281
 3484 05cd 14060000 		.4byte	0x614
 3485 05d1 0C       		.byte	0xc
 3486 05d2 0D       		.uleb128 0xd
 3487 05d3 430C0000 		.4byte	.LASF78
 3488 05d7 04       		.byte	0x4
 3489 05d8 8602     		.2byte	0x286
 3490 05da 83000000 		.4byte	0x83
 3491 05de 10       		.byte	0x10
 3492 05df 0D       		.uleb128 0xd
 3493 05e0 25080000 		.4byte	.LASF79
 3494 05e4 04       		.byte	0x4
 3495 05e5 8B02     		.2byte	0x28b
 3496 05e7 83000000 		.4byte	0x83
 3497 05eb 14       		.byte	0x14
 3498 05ec 0D       		.uleb128 0xd
 3499 05ed FE050000 		.4byte	.LASF80
 3500 05f1 04       		.byte	0x4
 3501 05f2 9002     		.2byte	0x290
 3502 05f4 6B000000 		.4byte	0x6b
 3503 05f8 18       		.byte	0x18
 3504 05f9 0D       		.uleb128 0xd
 3505 05fa BC0A0000 		.4byte	.LASF81
 3506 05fe 04       		.byte	0x4
 3507 05ff 9502     		.2byte	0x295
 3508 0601 6B000000 		.4byte	0x6b
 3509 0605 19       		.byte	0x19
 3510 0606 0D       		.uleb128 0xd
 3511 0607 BB020000 		.4byte	.LASF82
 3512 060b 04       		.byte	0x4
 3513 060c 9A02     		.2byte	0x29a
 3514 060e 6B000000 		.4byte	0x6b
 3515 0612 1A       		.byte	0x1a
 3516 0613 00       		.byte	0
 3517 0614 10       		.uleb128 0x10
 3518 0615 04       		.byte	0x4
 3519 0616 B5000000 		.4byte	0xb5
 3520 061a 04       		.uleb128 0x4
 3521 061b E6030000 		.4byte	.LASF83
 3522 061f 04       		.byte	0x4
 3523 0620 9B02     		.2byte	0x29b
 3524 0622 95050000 		.4byte	0x595
 3525 0626 0E       		.uleb128 0xe
 3526 0627 1C       		.byte	0x1c
 3527 0628 04       		.byte	0x4
 3528 0629 CE02     		.2byte	0x2ce
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 117


 3529 062b A5060000 		.4byte	0x6a5
 3530 062f 0D       		.uleb128 0xd
 3531 0630 F80C0000 		.4byte	.LASF84
 3532 0634 04       		.byte	0x4
 3533 0635 D702     		.2byte	0x2d7
 3534 0637 A5060000 		.4byte	0x6a5
 3535 063b 00       		.byte	0
 3536 063c 0D       		.uleb128 0xd
 3537 063d D10B0000 		.4byte	.LASF85
 3538 0641 04       		.byte	0x4
 3539 0642 DE02     		.2byte	0x2de
 3540 0644 AC060000 		.4byte	0x6ac
 3541 0648 04       		.byte	0x4
 3542 0649 0D       		.uleb128 0xd
 3543 064a F0080000 		.4byte	.LASF86
 3544 064e 04       		.byte	0x4
 3545 064f E402     		.2byte	0x2e4
 3546 0651 AE060000 		.4byte	0x6ae
 3547 0655 08       		.byte	0x8
 3548 0656 0D       		.uleb128 0xd
 3549 0657 F6070000 		.4byte	.LASF87
 3550 065b 04       		.byte	0x4
 3551 065c EA02     		.2byte	0x2ea
 3552 065e AC060000 		.4byte	0x6ac
 3553 0662 0C       		.byte	0xc
 3554 0663 0D       		.uleb128 0xd
 3555 0664 2C060000 		.4byte	.LASF88
 3556 0668 04       		.byte	0x4
 3557 0669 F102     		.2byte	0x2f1
 3558 066b B4060000 		.4byte	0x6b4
 3559 066f 10       		.byte	0x10
 3560 0670 0D       		.uleb128 0xd
 3561 0671 B50B0000 		.4byte	.LASF89
 3562 0675 04       		.byte	0x4
 3563 0676 F602     		.2byte	0x2f6
 3564 0678 83000000 		.4byte	0x83
 3565 067c 14       		.byte	0x14
 3566 067d 0D       		.uleb128 0xd
 3567 067e 47050000 		.4byte	.LASF90
 3568 0682 04       		.byte	0x4
 3569 0683 FD02     		.2byte	0x2fd
 3570 0685 77000000 		.4byte	0x77
 3571 0689 18       		.byte	0x18
 3572 068a 0D       		.uleb128 0xd
 3573 068b 17040000 		.4byte	.LASF91
 3574 068f 04       		.byte	0x4
 3575 0690 0403     		.2byte	0x304
 3576 0692 6B000000 		.4byte	0x6b
 3577 0696 1A       		.byte	0x1a
 3578 0697 0D       		.uleb128 0xd
 3579 0698 AC060000 		.4byte	.LASF92
 3580 069c 04       		.byte	0x4
 3581 069d 0E03     		.2byte	0x30e
 3582 069f 6B000000 		.4byte	0x6b
 3583 06a3 1B       		.byte	0x1b
 3584 06a4 00       		.byte	0
 3585 06a5 10       		.uleb128 0x10
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 118


 3586 06a6 04       		.byte	0x4
 3587 06a7 AB060000 		.4byte	0x6ab
 3588 06ab 11       		.uleb128 0x11
 3589 06ac 12       		.uleb128 0x12
 3590 06ad 04       		.byte	0x4
 3591 06ae 10       		.uleb128 0x10
 3592 06af 04       		.byte	0x4
 3593 06b0 E8030000 		.4byte	0x3e8
 3594 06b4 10       		.uleb128 0x10
 3595 06b5 04       		.byte	0x4
 3596 06b6 6B000000 		.4byte	0x6b
 3597 06ba 04       		.uleb128 0x4
 3598 06bb 03050000 		.4byte	.LASF93
 3599 06bf 04       		.byte	0x4
 3600 06c0 0F03     		.2byte	0x30f
 3601 06c2 26060000 		.4byte	0x626
 3602 06c6 0E       		.uleb128 0xe
 3603 06c7 A8       		.byte	0xa8
 3604 06c8 04       		.byte	0x4
 3605 06c9 1503     		.2byte	0x315
 3606 06cb DD060000 		.4byte	0x6dd
 3607 06cf 0D       		.uleb128 0xd
 3608 06d0 BA0D0000 		.4byte	.LASF94
 3609 06d4 04       		.byte	0x4
 3610 06d5 1A03     		.2byte	0x31a
 3611 06d7 DD060000 		.4byte	0x6dd
 3612 06db 00       		.byte	0
 3613 06dc 00       		.byte	0
 3614 06dd 0A       		.uleb128 0xa
 3615 06de BA060000 		.4byte	0x6ba
 3616 06e2 ED060000 		.4byte	0x6ed
 3617 06e6 0B       		.uleb128 0xb
 3618 06e7 A6010000 		.4byte	0x1a6
 3619 06eb 05       		.byte	0x5
 3620 06ec 00       		.byte	0
 3621 06ed 04       		.uleb128 0x4
 3622 06ee 21070000 		.4byte	.LASF95
 3623 06f2 04       		.byte	0x4
 3624 06f3 1B03     		.2byte	0x31b
 3625 06f5 C6060000 		.4byte	0x6c6
 3626 06f9 0E       		.uleb128 0xe
 3627 06fa 14       		.byte	0x14
 3628 06fb 04       		.byte	0x4
 3629 06fc 2003     		.2byte	0x320
 3630 06fe 5E070000 		.4byte	0x75e
 3631 0702 0D       		.uleb128 0xd
 3632 0703 E6070000 		.4byte	.LASF74
 3633 0707 04       		.byte	0x4
 3634 0708 2503     		.2byte	0x325
 3635 070a 14060000 		.4byte	0x614
 3636 070e 00       		.byte	0
 3637 070f 0D       		.uleb128 0xd
 3638 0710 98060000 		.4byte	.LASF75
 3639 0714 04       		.byte	0x4
 3640 0715 2A03     		.2byte	0x32a
 3641 0717 14060000 		.4byte	0x614
 3642 071b 04       		.byte	0x4
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 119


 3643 071c 0D       		.uleb128 0xd
 3644 071d C0040000 		.4byte	.LASF76
 3645 0721 04       		.byte	0x4
 3646 0722 2E03     		.2byte	0x32e
 3647 0724 14060000 		.4byte	0x614
 3648 0728 08       		.byte	0x8
 3649 0729 0D       		.uleb128 0xd
 3650 072a 430C0000 		.4byte	.LASF78
 3651 072e 04       		.byte	0x4
 3652 072f 3303     		.2byte	0x333
 3653 0731 83000000 		.4byte	0x83
 3654 0735 0C       		.byte	0xc
 3655 0736 0D       		.uleb128 0xd
 3656 0737 FE050000 		.4byte	.LASF80
 3657 073b 04       		.byte	0x4
 3658 073c 3803     		.2byte	0x338
 3659 073e 6B000000 		.4byte	0x6b
 3660 0742 10       		.byte	0x10
 3661 0743 0D       		.uleb128 0xd
 3662 0744 BC0A0000 		.4byte	.LASF81
 3663 0748 04       		.byte	0x4
 3664 0749 3D03     		.2byte	0x33d
 3665 074b 6B000000 		.4byte	0x6b
 3666 074f 11       		.byte	0x11
 3667 0750 0D       		.uleb128 0xd
 3668 0751 BB020000 		.4byte	.LASF82
 3669 0755 04       		.byte	0x4
 3670 0756 4203     		.2byte	0x342
 3671 0758 6B000000 		.4byte	0x6b
 3672 075c 12       		.byte	0x12
 3673 075d 00       		.byte	0
 3674 075e 04       		.uleb128 0x4
 3675 075f F50B0000 		.4byte	.LASF96
 3676 0763 04       		.byte	0x4
 3677 0764 4303     		.2byte	0x343
 3678 0766 F9060000 		.4byte	0x6f9
 3679 076a 02       		.uleb128 0x2
 3680 076b 08       		.byte	0x8
 3681 076c 04       		.byte	0x4
 3682 076d A8080000 		.4byte	.LASF97
 3683 0771 08       		.uleb128 0x8
 3684 0772 08       		.byte	0x8
 3685 0773 05       		.byte	0x5
 3686 0774 CF       		.byte	0xcf
 3687 0775 92070000 		.4byte	0x792
 3688 0779 09       		.uleb128 0x9
 3689 077a 480A0000 		.4byte	.LASF98
 3690 077e 05       		.byte	0x5
 3691 077f D4       		.byte	0xd4
 3692 0780 83000000 		.4byte	0x83
 3693 0784 00       		.byte	0
 3694 0785 09       		.uleb128 0x9
 3695 0786 06080000 		.4byte	.LASF99
 3696 078a 05       		.byte	0x5
 3697 078b D9       		.byte	0xd9
 3698 078c 83000000 		.4byte	0x83
 3699 0790 04       		.byte	0x4
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 120


 3700 0791 00       		.byte	0
 3701 0792 0C       		.uleb128 0xc
 3702 0793 110B0000 		.4byte	.LASF100
 3703 0797 05       		.byte	0x5
 3704 0798 DA       		.byte	0xda
 3705 0799 71070000 		.4byte	0x771
 3706 079d 13       		.uleb128 0x13
 3707 079e 00000000 		.4byte	.LASF101
 3708 07a2 01       		.byte	0x1
 3709 07a3 CB       		.byte	0xcb
 3710 07a4 00000000 		.4byte	.LFB1
 3711 07a8 18000000 		.4byte	.LFE1-.LFB1
 3712 07ac 01       		.uleb128 0x1
 3713 07ad 9C       		.byte	0x9c
 3714 07ae C2070000 		.4byte	0x7c2
 3715 07b2 14       		.uleb128 0x14
 3716 07b3 C0090000 		.4byte	.LASF103
 3717 07b7 01       		.byte	0x1
 3718 07b8 CB       		.byte	0xcb
 3719 07b9 83000000 		.4byte	0x83
 3720 07bd 00000000 		.4byte	.LLST0
 3721 07c1 00       		.byte	0
 3722 07c2 15       		.uleb128 0x15
 3723 07c3 78090000 		.4byte	.LASF102
 3724 07c7 01       		.byte	0x1
 3725 07c8 8D01     		.2byte	0x18d
 3726 07ca 00000000 		.4byte	.LFB5
 3727 07ce 10000000 		.4byte	.LFE5-.LFB5
 3728 07d2 01       		.uleb128 0x1
 3729 07d3 9C       		.byte	0x9c
 3730 07d4 F9070000 		.4byte	0x7f9
 3731 07d8 16       		.uleb128 0x16
 3732 07d9 05090000 		.4byte	.LASF34
 3733 07dd 01       		.byte	0x1
 3734 07de 8D01     		.2byte	0x18d
 3735 07e0 83000000 		.4byte	0x83
 3736 07e4 21000000 		.4byte	.LLST1
 3737 07e8 16       		.uleb128 0x16
 3738 07e9 4F0D0000 		.4byte	.LASF104
 3739 07ed 01       		.byte	0x1
 3740 07ee 8D01     		.2byte	0x18d
 3741 07f0 83000000 		.4byte	0x83
 3742 07f4 42000000 		.4byte	.LLST2
 3743 07f8 00       		.byte	0
 3744 07f9 17       		.uleb128 0x17
 3745 07fa 790B0000 		.4byte	.LASF105
 3746 07fe 01       		.byte	0x1
 3747 07ff AD01     		.2byte	0x1ad
 3748 0801 00000000 		.4byte	.LFB6
 3749 0805 54000000 		.4byte	.LFE6-.LFB6
 3750 0809 01       		.uleb128 0x1
 3751 080a 9C       		.byte	0x9c
 3752 080b 1E080000 		.4byte	0x81e
 3753 080f 18       		.uleb128 0x18
 3754 0810 4C080000 		.4byte	.LASF108
 3755 0814 01       		.byte	0x1
 3756 0815 B001     		.2byte	0x1b0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 121


 3757 0817 83000000 		.4byte	0x83
 3758 081b 01       		.uleb128 0x1
 3759 081c 50       		.byte	0x50
 3760 081d 00       		.byte	0
 3761 081e 19       		.uleb128 0x19
 3762 081f 27010000 		.4byte	.LASF205
 3763 0823 01       		.byte	0x1
 3764 0824 D601     		.2byte	0x1d6
 3765 0826 00000000 		.4byte	.LFB7
 3766 082a 1C000000 		.4byte	.LFE7-.LFB7
 3767 082e 01       		.uleb128 0x1
 3768 082f 9C       		.byte	0x9c
 3769 0830 1A       		.uleb128 0x1a
 3770 0831 A1070000 		.4byte	.LASF117
 3771 0835 01       		.byte	0x1
 3772 0836 3B07     		.2byte	0x73b
 3773 0838 A4000000 		.4byte	0xa4
 3774 083c 00000000 		.4byte	.LFB23
 3775 0840 A0000000 		.4byte	.LFE23-.LFB23
 3776 0844 01       		.uleb128 0x1
 3777 0845 9C       		.byte	0x9c
 3778 0846 F7080000 		.4byte	0x8f7
 3779 084a 16       		.uleb128 0x16
 3780 084b 6F0D0000 		.4byte	.LASF106
 3781 084f 01       		.byte	0x1
 3782 0850 3B07     		.2byte	0x73b
 3783 0852 83000000 		.4byte	0x83
 3784 0856 62000000 		.4byte	.LLST3
 3785 085a 16       		.uleb128 0x16
 3786 085b B9040000 		.4byte	.LASF107
 3787 085f 01       		.byte	0x1
 3788 0860 3B07     		.2byte	0x73b
 3789 0862 83000000 		.4byte	0x83
 3790 0866 A4000000 		.4byte	.LLST4
 3791 086a 1B       		.uleb128 0x1b
 3792 086b 08070000 		.4byte	.LASF109
 3793 086f 01       		.byte	0x1
 3794 0870 3D07     		.2byte	0x73d
 3795 0872 A4000000 		.4byte	0xa4
 3796 0876 C5000000 		.4byte	.LLST5
 3797 087a 1B       		.uleb128 0x1b
 3798 087b 66040000 		.4byte	.LASF110
 3799 087f 01       		.byte	0x1
 3800 0880 3E07     		.2byte	0x73e
 3801 0882 83000000 		.4byte	0x83
 3802 0886 F1000000 		.4byte	.LLST6
 3803 088a 1B       		.uleb128 0x1b
 3804 088b 06020000 		.4byte	.LASF111
 3805 088f 01       		.byte	0x1
 3806 0890 3F07     		.2byte	0x73f
 3807 0892 83000000 		.4byte	0x83
 3808 0896 1A010000 		.4byte	.LLST7
 3809 089a 1B       		.uleb128 0x1b
 3810 089b DA070000 		.4byte	.LASF112
 3811 089f 01       		.byte	0x1
 3812 08a0 4007     		.2byte	0x740
 3813 08a2 83000000 		.4byte	0x83
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 122


 3814 08a6 39010000 		.4byte	.LLST8
 3815 08aa 1B       		.uleb128 0x1b
 3816 08ab FD060000 		.4byte	.LASF113
 3817 08af 01       		.byte	0x1
 3818 08b0 4107     		.2byte	0x741
 3819 08b2 83000000 		.4byte	0x83
 3820 08b6 62010000 		.4byte	.LLST9
 3821 08ba 1B       		.uleb128 0x1b
 3822 08bb 2A080000 		.4byte	.LASF114
 3823 08bf 01       		.byte	0x1
 3824 08c0 4207     		.2byte	0x742
 3825 08c2 83000000 		.4byte	0x83
 3826 08c6 8B010000 		.4byte	.LLST10
 3827 08ca 1C       		.uleb128 0x1c
 3828 08cb 41010000 		.4byte	.LASF119
 3829 08cf 01       		.byte	0x1
 3830 08d0 4407     		.2byte	0x744
 3831 08d2 F7080000 		.4byte	0x8f7
 3832 08d6 1B       		.uleb128 0x1b
 3833 08d7 A2040000 		.4byte	.LASF115
 3834 08db 01       		.byte	0x1
 3835 08dc 4507     		.2byte	0x745
 3836 08de 02090000 		.4byte	0x902
 3837 08e2 D7010000 		.4byte	.LLST11
 3838 08e6 1B       		.uleb128 0x1b
 3839 08e7 1F060000 		.4byte	.LASF116
 3840 08eb 01       		.byte	0x1
 3841 08ec 4607     		.2byte	0x746
 3842 08ee AE060000 		.4byte	0x6ae
 3843 08f2 34020000 		.4byte	.LLST12
 3844 08f6 00       		.byte	0
 3845 08f7 10       		.uleb128 0x10
 3846 08f8 04       		.byte	0x4
 3847 08f9 FD080000 		.4byte	0x8fd
 3848 08fd 1D       		.uleb128 0x1d
 3849 08fe BA060000 		.4byte	0x6ba
 3850 0902 10       		.uleb128 0x10
 3851 0903 04       		.byte	0x4
 3852 0904 AD010000 		.4byte	0x1ad
 3853 0908 1A       		.uleb128 0x1a
 3854 0909 DE0A0000 		.4byte	.LASF118
 3855 090d 01       		.byte	0x1
 3856 090e 8007     		.2byte	0x780
 3857 0910 83000000 		.4byte	0x83
 3858 0914 00000000 		.4byte	.LFB24
 3859 0918 9C000000 		.4byte	.LFE24-.LFB24
 3860 091c 01       		.uleb128 0x1
 3861 091d 9C       		.byte	0x9c
 3862 091e C3090000 		.4byte	0x9c3
 3863 0922 16       		.uleb128 0x16
 3864 0923 41010000 		.4byte	.LASF119
 3865 0927 01       		.byte	0x1
 3866 0928 8007     		.2byte	0x780
 3867 092a F7080000 		.4byte	0x8f7
 3868 092e 47020000 		.4byte	.LLST13
 3869 0932 1B       		.uleb128 0x1b
 3870 0933 D8000000 		.4byte	.LASF120
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 123


 3871 0937 01       		.byte	0x1
 3872 0938 8207     		.2byte	0x782
 3873 093a 83000000 		.4byte	0x83
 3874 093e 8C020000 		.4byte	.LLST14
 3875 0942 1B       		.uleb128 0x1b
 3876 0943 F6050000 		.4byte	.LASF121
 3877 0947 01       		.byte	0x1
 3878 0948 8307     		.2byte	0x783
 3879 094a 83000000 		.4byte	0x83
 3880 094e AA020000 		.4byte	.LLST15
 3881 0952 1B       		.uleb128 0x1b
 3882 0953 D6090000 		.4byte	.LASF122
 3883 0957 01       		.byte	0x1
 3884 0958 8407     		.2byte	0x784
 3885 095a 83000000 		.4byte	0x83
 3886 095e C9020000 		.4byte	.LLST16
 3887 0962 1B       		.uleb128 0x1b
 3888 0963 6D060000 		.4byte	.LASF59
 3889 0967 01       		.byte	0x1
 3890 0968 8507     		.2byte	0x785
 3891 096a 83000000 		.4byte	0x83
 3892 096e 15030000 		.4byte	.LLST17
 3893 0972 1B       		.uleb128 0x1b
 3894 0973 DA070000 		.4byte	.LASF112
 3895 0977 01       		.byte	0x1
 3896 0978 8607     		.2byte	0x786
 3897 097a 83000000 		.4byte	0x83
 3898 097e 4C030000 		.4byte	.LLST18
 3899 0982 1B       		.uleb128 0x1b
 3900 0983 72050000 		.4byte	.LASF123
 3901 0987 01       		.byte	0x1
 3902 0988 8707     		.2byte	0x787
 3903 098a 83000000 		.4byte	0x83
 3904 098e A2030000 		.4byte	.LLST19
 3905 0992 1B       		.uleb128 0x1b
 3906 0993 A2040000 		.4byte	.LASF115
 3907 0997 01       		.byte	0x1
 3908 0998 8907     		.2byte	0x789
 3909 099a 02090000 		.4byte	0x902
 3910 099e F7030000 		.4byte	.LLST20
 3911 09a2 1B       		.uleb128 0x1b
 3912 09a3 06020000 		.4byte	.LASF111
 3913 09a7 01       		.byte	0x1
 3914 09a8 8B07     		.2byte	0x78b
 3915 09aa 83000000 		.4byte	0x83
 3916 09ae 0A040000 		.4byte	.LLST21
 3917 09b2 1B       		.uleb128 0x1b
 3918 09b3 1F060000 		.4byte	.LASF116
 3919 09b7 01       		.byte	0x1
 3920 09b8 8C07     		.2byte	0x78c
 3921 09ba AE060000 		.4byte	0x6ae
 3922 09be 28040000 		.4byte	.LLST22
 3923 09c2 00       		.byte	0
 3924 09c3 17       		.uleb128 0x17
 3925 09c4 0F020000 		.4byte	.LASF124
 3926 09c8 01       		.byte	0x1
 3927 09c9 E207     		.2byte	0x7e2
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 124


 3928 09cb 00000000 		.4byte	.LFB25
 3929 09cf CC000000 		.4byte	.LFE25-.LFB25
 3930 09d3 01       		.uleb128 0x1
 3931 09d4 9C       		.byte	0x9c
 3932 09d5 9A0A0000 		.4byte	0xa9a
 3933 09d9 16       		.uleb128 0x16
 3934 09da 41010000 		.4byte	.LASF119
 3935 09de 01       		.byte	0x1
 3936 09df E207     		.2byte	0x7e2
 3937 09e1 F7080000 		.4byte	0x8f7
 3938 09e5 3B040000 		.4byte	.LLST23
 3939 09e9 16       		.uleb128 0x16
 3940 09ea B9040000 		.4byte	.LASF107
 3941 09ee 01       		.byte	0x1
 3942 09ef E207     		.2byte	0x7e2
 3943 09f1 83000000 		.4byte	0x83
 3944 09f5 67040000 		.4byte	.LLST24
 3945 09f9 1B       		.uleb128 0x1b
 3946 09fa 06020000 		.4byte	.LASF111
 3947 09fe 01       		.byte	0x1
 3948 09ff E407     		.2byte	0x7e4
 3949 0a01 83000000 		.4byte	0x83
 3950 0a05 93040000 		.4byte	.LLST25
 3951 0a09 1B       		.uleb128 0x1b
 3952 0a0a DA070000 		.4byte	.LASF112
 3953 0a0e 01       		.byte	0x1
 3954 0a0f E507     		.2byte	0x7e5
 3955 0a11 83000000 		.4byte	0x83
 3956 0a15 C9040000 		.4byte	.LLST26
 3957 0a19 1B       		.uleb128 0x1b
 3958 0a1a F6050000 		.4byte	.LASF121
 3959 0a1e 01       		.byte	0x1
 3960 0a1f E607     		.2byte	0x7e6
 3961 0a21 83000000 		.4byte	0x83
 3962 0a25 0B050000 		.4byte	.LLST27
 3963 0a29 1B       		.uleb128 0x1b
 3964 0a2a D6090000 		.4byte	.LASF122
 3965 0a2e 01       		.byte	0x1
 3966 0a2f E707     		.2byte	0x7e7
 3967 0a31 83000000 		.4byte	0x83
 3968 0a35 29050000 		.4byte	.LLST28
 3969 0a39 1B       		.uleb128 0x1b
 3970 0a3a 27050000 		.4byte	.LASF125
 3971 0a3e 01       		.byte	0x1
 3972 0a3f E807     		.2byte	0x7e8
 3973 0a41 83000000 		.4byte	0x83
 3974 0a45 68050000 		.4byte	.LLST29
 3975 0a49 1B       		.uleb128 0x1b
 3976 0a4a 40080000 		.4byte	.LASF126
 3977 0a4e 01       		.byte	0x1
 3978 0a4f E907     		.2byte	0x7e9
 3979 0a51 83000000 		.4byte	0x83
 3980 0a55 86050000 		.4byte	.LLST30
 3981 0a59 1B       		.uleb128 0x1b
 3982 0a5a FA040000 		.4byte	.LASF127
 3983 0a5e 01       		.byte	0x1
 3984 0a5f EA07     		.2byte	0x7ea
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 125


 3985 0a61 83000000 		.4byte	0x83
 3986 0a65 A5050000 		.4byte	.LLST31
 3987 0a69 1B       		.uleb128 0x1b
 3988 0a6a BA000000 		.4byte	.LASF128
 3989 0a6e 01       		.byte	0x1
 3990 0a6f EB07     		.2byte	0x7eb
 3991 0a71 83000000 		.4byte	0x83
 3992 0a75 C3050000 		.4byte	.LLST32
 3993 0a79 1B       		.uleb128 0x1b
 3994 0a7a A2040000 		.4byte	.LASF115
 3995 0a7e 01       		.byte	0x1
 3996 0a7f ED07     		.2byte	0x7ed
 3997 0a81 02090000 		.4byte	0x902
 3998 0a85 0D060000 		.4byte	.LLST33
 3999 0a89 1B       		.uleb128 0x1b
 4000 0a8a 1F060000 		.4byte	.LASF116
 4001 0a8e 01       		.byte	0x1
 4002 0a8f EE07     		.2byte	0x7ee
 4003 0a91 AE060000 		.4byte	0x6ae
 4004 0a95 2B060000 		.4byte	.LLST34
 4005 0a99 00       		.byte	0
 4006 0a9a 1E       		.uleb128 0x1e
 4007 0a9b F1000000 		.4byte	.LASF137
 4008 0a9f 01       		.byte	0x1
 4009 0aa0 3901     		.2byte	0x139
 4010 0aa2 00000000 		.4byte	.LFB4
 4011 0aa6 90000000 		.4byte	.LFE4-.LFB4
 4012 0aaa 01       		.uleb128 0x1
 4013 0aab 9C       		.byte	0x9c
 4014 0aac 4C0B0000 		.4byte	0xb4c
 4015 0ab0 16       		.uleb128 0x16
 4016 0ab1 3D0C0000 		.4byte	.LASF129
 4017 0ab5 01       		.byte	0x1
 4018 0ab6 3901     		.2byte	0x139
 4019 0ab8 83000000 		.4byte	0x83
 4020 0abc 49060000 		.4byte	.LLST35
 4021 0ac0 1B       		.uleb128 0x1b
 4022 0ac1 18010000 		.4byte	.LASF130
 4023 0ac5 01       		.byte	0x1
 4024 0ac6 3B01     		.2byte	0x13b
 4025 0ac8 6B000000 		.4byte	0x6b
 4026 0acc 6A060000 		.4byte	.LLST36
 4027 0ad0 1B       		.uleb128 0x1b
 4028 0ad1 72020000 		.4byte	.LASF131
 4029 0ad5 01       		.byte	0x1
 4030 0ad6 3D01     		.2byte	0x13d
 4031 0ad8 83000000 		.4byte	0x83
 4032 0adc 7E060000 		.4byte	.LLST37
 4033 0ae0 1B       		.uleb128 0x1b
 4034 0ae1 E3040000 		.4byte	.LASF132
 4035 0ae5 01       		.byte	0x1
 4036 0ae6 3F01     		.2byte	0x13f
 4037 0ae8 83000000 		.4byte	0x83
 4038 0aec 9D060000 		.4byte	.LLST38
 4039 0af0 1B       		.uleb128 0x1b
 4040 0af1 57040000 		.4byte	.LASF133
 4041 0af5 01       		.byte	0x1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 126


 4042 0af6 4001     		.2byte	0x140
 4043 0af8 83000000 		.4byte	0x83
 4044 0afc BC060000 		.4byte	.LLST39
 4045 0b00 1B       		.uleb128 0x1b
 4046 0b01 380A0000 		.4byte	.LASF134
 4047 0b05 01       		.byte	0x1
 4048 0b06 4201     		.2byte	0x142
 4049 0b08 83000000 		.4byte	0x83
 4050 0b0c DB060000 		.4byte	.LLST40
 4051 0b10 1B       		.uleb128 0x1b
 4052 0b11 A40B0000 		.4byte	.LASF135
 4053 0b15 01       		.byte	0x1
 4054 0b16 4301     		.2byte	0x143
 4055 0b18 83000000 		.4byte	0x83
 4056 0b1c 05070000 		.4byte	.LLST41
 4057 0b20 1B       		.uleb128 0x1b
 4058 0b21 47020000 		.4byte	.LASF136
 4059 0b25 01       		.byte	0x1
 4060 0b26 4501     		.2byte	0x145
 4061 0b28 4C0B0000 		.4byte	0xb4c
 4062 0b2c 24070000 		.4byte	.LLST42
 4063 0b30 1F       		.uleb128 0x1f
 4064 0b31 32000000 		.4byte	.LVL124
 4065 0b35 F6140000 		.4byte	0x14f6
 4066 0b39 20       		.uleb128 0x20
 4067 0b3a 7A000000 		.4byte	.LVL137
 4068 0b3e 01150000 		.4byte	0x1501
 4069 0b42 21       		.uleb128 0x21
 4070 0b43 01       		.uleb128 0x1
 4071 0b44 50       		.byte	0x50
 4072 0b45 04       		.uleb128 0x4
 4073 0b46 91       		.byte	0x91
 4074 0b47 5C       		.sleb128 -36
 4075 0b48 94       		.byte	0x94
 4076 0b49 01       		.byte	0x1
 4077 0b4a 00       		.byte	0
 4078 0b4b 00       		.byte	0
 4079 0b4c 10       		.uleb128 0x10
 4080 0b4d 04       		.byte	0x4
 4081 0b4e 520B0000 		.4byte	0xb52
 4082 0b52 1D       		.uleb128 0x1d
 4083 0b53 5E070000 		.4byte	0x75e
 4084 0b57 1E       		.uleb128 0x1e
 4085 0b58 B4060000 		.4byte	.LASF138
 4086 0b5c 01       		.byte	0x1
 4087 0b5d 0301     		.2byte	0x103
 4088 0b5f 00000000 		.4byte	.LFB2
 4089 0b63 0A000000 		.4byte	.LFE2-.LFB2
 4090 0b67 01       		.uleb128 0x1
 4091 0b68 9C       		.byte	0x9c
 4092 0b69 7D0B0000 		.4byte	0xb7d
 4093 0b6d 20       		.uleb128 0x20
 4094 0b6e 08000000 		.4byte	.LVL144
 4095 0b72 9A0A0000 		.4byte	0xa9a
 4096 0b76 21       		.uleb128 0x21
 4097 0b77 01       		.uleb128 0x1
 4098 0b78 50       		.byte	0x50
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 127


 4099 0b79 01       		.uleb128 0x1
 4100 0b7a 32       		.byte	0x32
 4101 0b7b 00       		.byte	0
 4102 0b7c 00       		.byte	0
 4103 0b7d 1E       		.uleb128 0x1e
 4104 0b7e 3C060000 		.4byte	.LASF139
 4105 0b82 01       		.byte	0x1
 4106 0b83 1601     		.2byte	0x116
 4107 0b85 00000000 		.4byte	.LFB3
 4108 0b89 0A000000 		.4byte	.LFE3-.LFB3
 4109 0b8d 01       		.uleb128 0x1
 4110 0b8e 9C       		.byte	0x9c
 4111 0b8f A30B0000 		.4byte	0xba3
 4112 0b93 20       		.uleb128 0x20
 4113 0b94 08000000 		.4byte	.LVL145
 4114 0b98 9A0A0000 		.4byte	0xa9a
 4115 0b9c 21       		.uleb128 0x21
 4116 0b9d 01       		.uleb128 0x1
 4117 0b9e 50       		.byte	0x50
 4118 0b9f 01       		.uleb128 0x1
 4119 0ba0 30       		.byte	0x30
 4120 0ba1 00       		.byte	0
 4121 0ba2 00       		.byte	0
 4122 0ba3 1E       		.uleb128 0x1e
 4123 0ba4 D9060000 		.4byte	.LASF140
 4124 0ba8 01       		.byte	0x1
 4125 0ba9 0C02     		.2byte	0x20c
 4126 0bab 00000000 		.4byte	.LFB8
 4127 0baf 6C010000 		.4byte	.LFE8-.LFB8
 4128 0bb3 01       		.uleb128 0x1
 4129 0bb4 9C       		.byte	0x9c
 4130 0bb5 620C0000 		.4byte	0xc62
 4131 0bb9 1B       		.uleb128 0x1b
 4132 0bba 050D0000 		.4byte	.LASF141
 4133 0bbe 01       		.byte	0x1
 4134 0bbf 0F02     		.2byte	0x20f
 4135 0bc1 83000000 		.4byte	0x83
 4136 0bc5 37070000 		.4byte	.LLST43
 4137 0bc9 1F       		.uleb128 0x1f
 4138 0bca 1A000000 		.4byte	.LVL146
 4139 0bce 0C150000 		.4byte	0x150c
 4140 0bd2 1F       		.uleb128 0x1f
 4141 0bd3 28000000 		.4byte	.LVL147
 4142 0bd7 570B0000 		.4byte	0xb57
 4143 0bdb 22       		.uleb128 0x22
 4144 0bdc 2E000000 		.4byte	.LVL148
 4145 0be0 17150000 		.4byte	0x1517
 4146 0be4 EE0B0000 		.4byte	0xbee
 4147 0be8 21       		.uleb128 0x21
 4148 0be9 01       		.uleb128 0x1
 4149 0bea 50       		.byte	0x50
 4150 0beb 01       		.uleb128 0x1
 4151 0bec 31       		.byte	0x31
 4152 0bed 00       		.byte	0
 4153 0bee 22       		.uleb128 0x22
 4154 0bef 74000000 		.4byte	.LVL153
 4155 0bf3 22150000 		.4byte	0x1522
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 128


 4156 0bf7 110C0000 		.4byte	0xc11
 4157 0bfb 21       		.uleb128 0x21
 4158 0bfc 01       		.uleb128 0x1
 4159 0bfd 50       		.byte	0x50
 4160 0bfe 05       		.uleb128 0x5
 4161 0bff 0C       		.byte	0xc
 4162 0c00 00040240 		.4byte	0x40020400
 4163 0c04 21       		.uleb128 0x21
 4164 0c05 01       		.uleb128 0x1
 4165 0c06 51       		.byte	0x51
 4166 0c07 02       		.uleb128 0x2
 4167 0c08 08       		.byte	0x8
 4168 0c09 F0       		.byte	0xf0
 4169 0c0a 21       		.uleb128 0x21
 4170 0c0b 01       		.uleb128 0x1
 4171 0c0c 52       		.byte	0x52
 4172 0c0d 02       		.uleb128 0x2
 4173 0c0e 08       		.byte	0x8
 4174 0c0f 60       		.byte	0x60
 4175 0c10 00       		.byte	0
 4176 0c11 22       		.uleb128 0x22
 4177 0c12 7E000000 		.4byte	.LVL154
 4178 0c16 22150000 		.4byte	0x1522
 4179 0c1a 330C0000 		.4byte	0xc33
 4180 0c1e 21       		.uleb128 0x21
 4181 0c1f 01       		.uleb128 0x1
 4182 0c20 50       		.byte	0x50
 4183 0c21 05       		.uleb128 0x5
 4184 0c22 0C       		.byte	0xc
 4185 0c23 00040440 		.4byte	0x40040400
 4186 0c27 21       		.uleb128 0x21
 4187 0c28 01       		.uleb128 0x1
 4188 0c29 51       		.byte	0x51
 4189 0c2a 01       		.uleb128 0x1
 4190 0c2b 32       		.byte	0x32
 4191 0c2c 21       		.uleb128 0x21
 4192 0c2d 01       		.uleb128 0x1
 4193 0c2e 52       		.byte	0x52
 4194 0c2f 02       		.uleb128 0x2
 4195 0c30 74       		.byte	0x74
 4196 0c31 00       		.sleb128 0
 4197 0c32 00       		.byte	0
 4198 0c33 1F       		.uleb128 0x1f
 4199 0c34 C2000000 		.4byte	.LVL163
 4200 0c38 1E080000 		.4byte	0x81e
 4201 0c3c 1F       		.uleb128 0x1f
 4202 0c3d CC000000 		.4byte	.LVL164
 4203 0c41 2D150000 		.4byte	0x152d
 4204 0c45 22       		.uleb128 0x22
 4205 0c46 D2000000 		.4byte	.LVL165
 4206 0c4a 9D070000 		.4byte	0x79d
 4207 0c4e 580C0000 		.4byte	0xc58
 4208 0c52 21       		.uleb128 0x21
 4209 0c53 01       		.uleb128 0x1
 4210 0c54 50       		.byte	0x50
 4211 0c55 01       		.uleb128 0x1
 4212 0c56 31       		.byte	0x31
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 129


 4213 0c57 00       		.byte	0
 4214 0c58 1F       		.uleb128 0x1f
 4215 0c59 D6000000 		.4byte	.LVL166
 4216 0c5d F9070000 		.4byte	0x7f9
 4217 0c61 00       		.byte	0
 4218 0c62 1E       		.uleb128 0x1e
 4219 0c63 2E050000 		.4byte	.LASF142
 4220 0c67 01       		.byte	0x1
 4221 0c68 1E03     		.2byte	0x31e
 4222 0c6a 00000000 		.4byte	.LFB10
 4223 0c6e 60000000 		.4byte	.LFE10-.LFB10
 4224 0c72 01       		.uleb128 0x1
 4225 0c73 9C       		.byte	0x9c
 4226 0c74 ED0C0000 		.4byte	0xced
 4227 0c78 16       		.uleb128 0x16
 4228 0c79 5C020000 		.4byte	.LASF143
 4229 0c7d 01       		.byte	0x1
 4230 0c7e 1E03     		.2byte	0x31e
 4231 0c80 ED0C0000 		.4byte	0xced
 4232 0c84 84070000 		.4byte	.LLST44
 4233 0c88 1B       		.uleb128 0x1b
 4234 0c89 18010000 		.4byte	.LASF130
 4235 0c8d 01       		.byte	0x1
 4236 0c8e 2003     		.2byte	0x320
 4237 0c90 6B000000 		.4byte	0x6b
 4238 0c94 B0070000 		.4byte	.LLST45
 4239 0c98 1B       		.uleb128 0x1b
 4240 0c99 5D0D0000 		.4byte	.LASF144
 4241 0c9d 01       		.byte	0x1
 4242 0c9e 2103     		.2byte	0x321
 4243 0ca0 83000000 		.4byte	0x83
 4244 0ca4 CE070000 		.4byte	.LLST46
 4245 0ca8 1B       		.uleb128 0x1b
 4246 0ca9 0E0A0000 		.4byte	.LASF145
 4247 0cad 01       		.byte	0x1
 4248 0cae 2703     		.2byte	0x327
 4249 0cb0 83000000 		.4byte	0x83
 4250 0cb4 E1070000 		.4byte	.LLST47
 4251 0cb8 1B       		.uleb128 0x1b
 4252 0cb9 1A000000 		.4byte	.LASF146
 4253 0cbd 01       		.byte	0x1
 4254 0cbe 2903     		.2byte	0x329
 4255 0cc0 83000000 		.4byte	0x83
 4256 0cc4 F4070000 		.4byte	.LLST48
 4257 0cc8 1F       		.uleb128 0x1f
 4258 0cc9 10000000 		.4byte	.LVL169
 4259 0ccd F6140000 		.4byte	0x14f6
 4260 0cd1 1F       		.uleb128 0x1f
 4261 0cd2 2A000000 		.4byte	.LVL175
 4262 0cd6 01150000 		.4byte	0x1501
 4263 0cda 1F       		.uleb128 0x1f
 4264 0cdb 2E000000 		.4byte	.LVL176
 4265 0cdf F6140000 		.4byte	0x14f6
 4266 0ce3 1F       		.uleb128 0x1f
 4267 0ce4 46000000 		.4byte	.LVL181
 4268 0ce8 01150000 		.4byte	0x1501
 4269 0cec 00       		.byte	0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 130


 4270 0ced 10       		.uleb128 0x10
 4271 0cee 04       		.byte	0x4
 4272 0cef F30C0000 		.4byte	0xcf3
 4273 0cf3 1D       		.uleb128 0x1d
 4274 0cf4 AD010000 		.4byte	0x1ad
 4275 0cf8 23       		.uleb128 0x23
 4276 0cf9 D1050000 		.4byte	.LASF176
 4277 0cfd 01       		.byte	0x1
 4278 0cfe 9803     		.2byte	0x398
 4279 0d00 83000000 		.4byte	0x83
 4280 0d04 00000000 		.4byte	.LFB11
 4281 0d08 2A000000 		.4byte	.LFE11-.LFB11
 4282 0d0c 01       		.uleb128 0x1
 4283 0d0d 9C       		.byte	0x9c
 4284 0d0e 530D0000 		.4byte	0xd53
 4285 0d12 16       		.uleb128 0x16
 4286 0d13 4F0D0000 		.4byte	.LASF104
 4287 0d17 01       		.byte	0x1
 4288 0d18 9803     		.2byte	0x398
 4289 0d1a 83000000 		.4byte	0x83
 4290 0d1e 07080000 		.4byte	.LLST49
 4291 0d22 16       		.uleb128 0x16
 4292 0d23 62060000 		.4byte	.LASF24
 4293 0d27 01       		.byte	0x1
 4294 0d28 9803     		.2byte	0x398
 4295 0d2a 83000000 		.4byte	0x83
 4296 0d2e 33080000 		.4byte	.LLST50
 4297 0d32 16       		.uleb128 0x16
 4298 0d33 53030000 		.4byte	.LASF147
 4299 0d37 01       		.byte	0x1
 4300 0d38 9803     		.2byte	0x398
 4301 0d3a 83000000 		.4byte	0x83
 4302 0d3e 54080000 		.4byte	.LLST51
 4303 0d42 1B       		.uleb128 0x1b
 4304 0d43 10060000 		.4byte	.LASF148
 4305 0d47 01       		.byte	0x1
 4306 0d48 9A03     		.2byte	0x39a
 4307 0d4a 83000000 		.4byte	0x83
 4308 0d4e 8D080000 		.4byte	.LLST52
 4309 0d52 00       		.byte	0
 4310 0d53 1E       		.uleb128 0x1e
 4311 0d54 B4080000 		.4byte	.LASF149
 4312 0d58 01       		.byte	0x1
 4313 0d59 EA03     		.2byte	0x3ea
 4314 0d5b 00000000 		.4byte	.LFB12
 4315 0d5f 44000000 		.4byte	.LFE12-.LFB12
 4316 0d63 01       		.uleb128 0x1
 4317 0d64 9C       		.byte	0x9c
 4318 0d65 B30D0000 		.4byte	0xdb3
 4319 0d69 1B       		.uleb128 0x1b
 4320 0d6a 4F0D0000 		.4byte	.LASF104
 4321 0d6e 01       		.byte	0x1
 4322 0d6f EC03     		.2byte	0x3ec
 4323 0d71 83000000 		.4byte	0x83
 4324 0d75 AB080000 		.4byte	.LLST53
 4325 0d79 1B       		.uleb128 0x1b
 4326 0d7a 53030000 		.4byte	.LASF147
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 131


 4327 0d7e 01       		.byte	0x1
 4328 0d7f ED03     		.2byte	0x3ed
 4329 0d81 83000000 		.4byte	0x83
 4330 0d85 BE080000 		.4byte	.LLST54
 4331 0d89 1B       		.uleb128 0x1b
 4332 0d8a 050D0000 		.4byte	.LASF141
 4333 0d8e 01       		.byte	0x1
 4334 0d8f EE03     		.2byte	0x3ee
 4335 0d91 83000000 		.4byte	0x83
 4336 0d95 DE080000 		.4byte	.LLST55
 4337 0d99 1B       		.uleb128 0x1b
 4338 0d9a 5C020000 		.4byte	.LASF143
 4339 0d9e 01       		.byte	0x1
 4340 0d9f F003     		.2byte	0x3f0
 4341 0da1 ED0C0000 		.4byte	0xced
 4342 0da5 F1080000 		.4byte	.LLST56
 4343 0da9 1F       		.uleb128 0x1f
 4344 0daa 38000000 		.4byte	.LVL202
 4345 0dae C2070000 		.4byte	0x7c2
 4346 0db2 00       		.byte	0
 4347 0db3 1E       		.uleb128 0x1e
 4348 0db4 3A000000 		.4byte	.LASF150
 4349 0db8 01       		.byte	0x1
 4350 0db9 5104     		.2byte	0x451
 4351 0dbb 00000000 		.4byte	.LFB13
 4352 0dbf 1C000000 		.4byte	.LFE13-.LFB13
 4353 0dc3 01       		.uleb128 0x1
 4354 0dc4 9C       		.byte	0x9c
 4355 0dc5 030E0000 		.4byte	0xe03
 4356 0dc9 16       		.uleb128 0x16
 4357 0dca 5C020000 		.4byte	.LASF143
 4358 0dce 01       		.byte	0x1
 4359 0dcf 5104     		.2byte	0x451
 4360 0dd1 ED0C0000 		.4byte	0xced
 4361 0dd5 04090000 		.4byte	.LLST57
 4362 0dd9 1B       		.uleb128 0x1b
 4363 0dda 10060000 		.4byte	.LASF148
 4364 0dde 01       		.byte	0x1
 4365 0ddf 5404     		.2byte	0x454
 4366 0de1 83000000 		.4byte	0x83
 4367 0de5 30090000 		.4byte	.LLST58
 4368 0de9 1B       		.uleb128 0x1b
 4369 0dea 4F0D0000 		.4byte	.LASF104
 4370 0dee 01       		.byte	0x1
 4371 0def 5504     		.2byte	0x455
 4372 0df1 83000000 		.4byte	0x83
 4373 0df5 43090000 		.4byte	.LLST59
 4374 0df9 1F       		.uleb128 0x1f
 4375 0dfa 0E000000 		.4byte	.LVL205
 4376 0dfe F80C0000 		.4byte	0xcf8
 4377 0e02 00       		.byte	0
 4378 0e03 24       		.uleb128 0x24
 4379 0e04 A1020000 		.4byte	.LASF152
 4380 0e08 01       		.byte	0x1
 4381 0e09 8B0A     		.2byte	0xa8b
 4382 0e0b 03       		.byte	0x3
 4383 0e0c 1D0E0000 		.4byte	0xe1d
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 132


 4384 0e10 1C       		.uleb128 0x1c
 4385 0e11 5D030000 		.4byte	.LASF151
 4386 0e15 01       		.byte	0x1
 4387 0e16 910A     		.2byte	0xa91
 4388 0e18 83000000 		.4byte	0x83
 4389 0e1c 00       		.byte	0
 4390 0e1d 24       		.uleb128 0x24
 4391 0e1e 3B040000 		.4byte	.LASF153
 4392 0e22 01       		.byte	0x1
 4393 0e23 130A     		.2byte	0xa13
 4394 0e25 03       		.byte	0x3
 4395 0e26 370E0000 		.4byte	0xe37
 4396 0e2a 1C       		.uleb128 0x1c
 4397 0e2b 5D030000 		.4byte	.LASF151
 4398 0e2f 01       		.byte	0x1
 4399 0e30 160A     		.2byte	0xa16
 4400 0e32 83000000 		.4byte	0x83
 4401 0e36 00       		.byte	0
 4402 0e37 1E       		.uleb128 0x1e
 4403 0e38 DE0C0000 		.4byte	.LASF154
 4404 0e3c 01       		.byte	0x1
 4405 0e3d 2F05     		.2byte	0x52f
 4406 0e3f 00000000 		.4byte	.LFB16
 4407 0e43 F8000000 		.4byte	.LFE16-.LFB16
 4408 0e47 01       		.uleb128 0x1
 4409 0e48 9C       		.byte	0x9c
 4410 0e49 CF0E0000 		.4byte	0xecf
 4411 0e4d 25       		.uleb128 0x25
 4412 0e4e 1D0E0000 		.4byte	0xe1d
 4413 0e52 0E000000 		.4byte	.LBB6
 4414 0e56 4C000000 		.4byte	.LBE6-.LBB6
 4415 0e5a 01       		.byte	0x1
 4416 0e5b 4C05     		.2byte	0x54c
 4417 0e5d 750E0000 		.4byte	0xe75
 4418 0e61 26       		.uleb128 0x26
 4419 0e62 0E000000 		.4byte	.LBB7
 4420 0e66 4C000000 		.4byte	.LBE7-.LBB7
 4421 0e6a 27       		.uleb128 0x27
 4422 0e6b 2A0E0000 		.4byte	0xe2a
 4423 0e6f 56090000 		.4byte	.LLST60
 4424 0e73 00       		.byte	0
 4425 0e74 00       		.byte	0
 4426 0e75 25       		.uleb128 0x25
 4427 0e76 030E0000 		.4byte	0xe03
 4428 0e7a 5A000000 		.4byte	.LBB8
 4429 0e7e 68000000 		.4byte	.LBE8-.LBB8
 4430 0e82 01       		.byte	0x1
 4431 0e83 4F05     		.2byte	0x54f
 4432 0e85 BF0E0000 		.4byte	0xebf
 4433 0e89 26       		.uleb128 0x26
 4434 0e8a 5A000000 		.4byte	.LBB9
 4435 0e8e 68000000 		.4byte	.LBE9-.LBB9
 4436 0e92 27       		.uleb128 0x27
 4437 0e93 100E0000 		.4byte	0xe10
 4438 0e97 76090000 		.4byte	.LLST61
 4439 0e9b 22       		.uleb128 0x22
 4440 0e9c 68000000 		.4byte	.LVL212
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 133


 4441 0ea0 38150000 		.4byte	0x1538
 4442 0ea4 AE0E0000 		.4byte	0xeae
 4443 0ea8 21       		.uleb128 0x21
 4444 0ea9 01       		.uleb128 0x1
 4445 0eaa 50       		.byte	0x50
 4446 0eab 01       		.uleb128 0x1
 4447 0eac 3A       		.byte	0x3a
 4448 0ead 00       		.byte	0
 4449 0eae 20       		.uleb128 0x20
 4450 0eaf 6E000000 		.4byte	.LVL213
 4451 0eb3 43150000 		.4byte	0x1543
 4452 0eb7 21       		.uleb128 0x21
 4453 0eb8 01       		.uleb128 0x1
 4454 0eb9 50       		.byte	0x50
 4455 0eba 01       		.uleb128 0x1
 4456 0ebb 3A       		.byte	0x3a
 4457 0ebc 00       		.byte	0
 4458 0ebd 00       		.byte	0
 4459 0ebe 00       		.byte	0
 4460 0ebf 20       		.uleb128 0x20
 4461 0ec0 08000000 		.4byte	.LVL207
 4462 0ec4 4E150000 		.4byte	0x154e
 4463 0ec8 21       		.uleb128 0x21
 4464 0ec9 01       		.uleb128 0x1
 4465 0eca 50       		.byte	0x50
 4466 0ecb 01       		.uleb128 0x1
 4467 0ecc 3A       		.byte	0x3a
 4468 0ecd 00       		.byte	0
 4469 0ece 00       		.byte	0
 4470 0ecf 1E       		.uleb128 0x1e
 4471 0ed0 610A0000 		.4byte	.LASF155
 4472 0ed4 01       		.byte	0x1
 4473 0ed5 A005     		.2byte	0x5a0
 4474 0ed7 00000000 		.4byte	.LFB17
 4475 0edb 20000000 		.4byte	.LFE17-.LFB17
 4476 0edf 01       		.uleb128 0x1
 4477 0ee0 9C       		.byte	0x9c
 4478 0ee1 020F0000 		.4byte	0xf02
 4479 0ee5 22       		.uleb128 0x22
 4480 0ee6 12000000 		.4byte	.LVL218
 4481 0eea 59150000 		.4byte	0x1559
 4482 0eee F80E0000 		.4byte	0xef8
 4483 0ef2 21       		.uleb128 0x21
 4484 0ef3 01       		.uleb128 0x1
 4485 0ef4 50       		.byte	0x50
 4486 0ef5 01       		.uleb128 0x1
 4487 0ef6 3A       		.byte	0x3a
 4488 0ef7 00       		.byte	0
 4489 0ef8 1F       		.uleb128 0x1f
 4490 0ef9 16000000 		.4byte	.LVL219
 4491 0efd 370E0000 		.4byte	0xe37
 4492 0f01 00       		.byte	0
 4493 0f02 1E       		.uleb128 0x1e
 4494 0f03 800A0000 		.4byte	.LASF156
 4495 0f07 01       		.byte	0x1
 4496 0f08 C506     		.2byte	0x6c5
 4497 0f0a 00000000 		.4byte	.LFB21
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 134


 4498 0f0e 34000000 		.4byte	.LFE21-.LFB21
 4499 0f12 01       		.uleb128 0x1
 4500 0f13 9C       		.byte	0x9c
 4501 0f14 7B0F0000 		.4byte	0xf7b
 4502 0f18 16       		.uleb128 0x16
 4503 0f19 2F000000 		.4byte	.LASF157
 4504 0f1d 01       		.byte	0x1
 4505 0f1e C506     		.2byte	0x6c5
 4506 0f20 7B0F0000 		.4byte	0xf7b
 4507 0f24 96090000 		.4byte	.LLST62
 4508 0f28 1B       		.uleb128 0x1b
 4509 0f29 6F040000 		.4byte	.LASF158
 4510 0f2d 01       		.byte	0x1
 4511 0f2e C706     		.2byte	0x6c7
 4512 0f30 83000000 		.4byte	0x83
 4513 0f34 C2090000 		.4byte	.LLST63
 4514 0f38 1B       		.uleb128 0x1b
 4515 0f39 18010000 		.4byte	.LASF130
 4516 0f3d 01       		.byte	0x1
 4517 0f3e C806     		.2byte	0x6c8
 4518 0f40 6B000000 		.4byte	0x6b
 4519 0f44 EB090000 		.4byte	.LLST64
 4520 0f48 1B       		.uleb128 0x1b
 4521 0f49 F9010000 		.4byte	.LASF159
 4522 0f4d 01       		.byte	0x1
 4523 0f4e C906     		.2byte	0x6c9
 4524 0f50 83000000 		.4byte	0x83
 4525 0f54 FE090000 		.4byte	.LLST65
 4526 0f58 1B       		.uleb128 0x1b
 4527 0f59 85030000 		.4byte	.LASF160
 4528 0f5d 01       		.byte	0x1
 4529 0f5e CA06     		.2byte	0x6ca
 4530 0f60 83000000 		.4byte	0x83
 4531 0f64 110A0000 		.4byte	.LLST66
 4532 0f68 1F       		.uleb128 0x1f
 4533 0f69 0C000000 		.4byte	.LVL223
 4534 0f6d F6140000 		.4byte	0x14f6
 4535 0f71 1F       		.uleb128 0x1f
 4536 0f72 32000000 		.4byte	.LVL229
 4537 0f76 01150000 		.4byte	0x1501
 4538 0f7a 00       		.byte	0
 4539 0f7b 10       		.uleb128 0x10
 4540 0f7c 04       		.byte	0x4
 4541 0f7d 810F0000 		.4byte	0xf81
 4542 0f81 1D       		.uleb128 0x1d
 4543 0f82 1A060000 		.4byte	0x61a
 4544 0f86 1E       		.uleb128 0x1e
 4545 0f87 0F0C0000 		.4byte	.LASF161
 4546 0f8b 01       		.byte	0x1
 4547 0f8c E305     		.2byte	0x5e3
 4548 0f8e 00000000 		.4byte	.LFB18
 4549 0f92 A8000000 		.4byte	.LFE18-.LFB18
 4550 0f96 01       		.uleb128 0x1
 4551 0f97 9C       		.byte	0x9c
 4552 0f98 E50F0000 		.4byte	0xfe5
 4553 0f9c 1B       		.uleb128 0x1b
 4554 0f9d 5C020000 		.4byte	.LASF143
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 135


 4555 0fa1 01       		.byte	0x1
 4556 0fa2 E505     		.2byte	0x5e5
 4557 0fa4 ED0C0000 		.4byte	0xced
 4558 0fa8 240A0000 		.4byte	.LLST67
 4559 0fac 1F       		.uleb128 0x1f
 4560 0fad 26000000 		.4byte	.LVL233
 4561 0fb1 0C150000 		.4byte	0x150c
 4562 0fb5 22       		.uleb128 0x22
 4563 0fb6 5E000000 		.4byte	.LVL234
 4564 0fba 620C0000 		.4byte	0xc62
 4565 0fbe C90F0000 		.4byte	0xfc9
 4566 0fc2 21       		.uleb128 0x21
 4567 0fc3 01       		.uleb128 0x1
 4568 0fc4 50       		.byte	0x50
 4569 0fc5 02       		.uleb128 0x2
 4570 0fc6 77       		.byte	0x77
 4571 0fc7 00       		.sleb128 0
 4572 0fc8 00       		.byte	0
 4573 0fc9 1F       		.uleb128 0x1f
 4574 0fca 7E000000 		.4byte	.LVL235
 4575 0fce 020F0000 		.4byte	0xf02
 4576 0fd2 1F       		.uleb128 0x1f
 4577 0fd3 84000000 		.4byte	.LVL236
 4578 0fd7 64150000 		.4byte	0x1564
 4579 0fdb 1F       		.uleb128 0x1f
 4580 0fdc 88000000 		.4byte	.LVL237
 4581 0fe0 CF0E0000 		.4byte	0xecf
 4582 0fe4 00       		.byte	0
 4583 0fe5 1E       		.uleb128 0x1e
 4584 0fe6 7C020000 		.4byte	.LASF162
 4585 0fea 01       		.byte	0x1
 4586 0feb 3606     		.2byte	0x636
 4587 0fed 00000000 		.4byte	.LFB19
 4588 0ff1 28000000 		.4byte	.LFE19-.LFB19
 4589 0ff5 01       		.uleb128 0x1
 4590 0ff6 9C       		.byte	0x9c
 4591 0ff7 25100000 		.4byte	0x1025
 4592 0ffb 16       		.uleb128 0x16
 4593 0ffc 6F0D0000 		.4byte	.LASF106
 4594 1000 01       		.byte	0x1
 4595 1001 3606     		.2byte	0x636
 4596 1003 83000000 		.4byte	0x83
 4597 1007 370A0000 		.4byte	.LLST68
 4598 100b 16       		.uleb128 0x16
 4599 100c 53020000 		.4byte	.LASF163
 4600 1010 01       		.byte	0x1
 4601 1011 3606     		.2byte	0x636
 4602 1013 83000000 		.4byte	0x83
 4603 1017 580A0000 		.4byte	.LLST69
 4604 101b 1F       		.uleb128 0x1f
 4605 101c 1C000000 		.4byte	.LVL242
 4606 1020 020F0000 		.4byte	0xf02
 4607 1024 00       		.byte	0
 4608 1025 1E       		.uleb128 0x1e
 4609 1026 5E090000 		.4byte	.LASF164
 4610 102a 01       		.byte	0x1
 4611 102b F906     		.2byte	0x6f9
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 136


 4612 102d 00000000 		.4byte	.LFB22
 4613 1031 64000000 		.4byte	.LFE22-.LFB22
 4614 1035 01       		.uleb128 0x1
 4615 1036 9C       		.byte	0x9c
 4616 1037 AE100000 		.4byte	0x10ae
 4617 103b 16       		.uleb128 0x16
 4618 103c 2F000000 		.4byte	.LASF157
 4619 1040 01       		.byte	0x1
 4620 1041 F906     		.2byte	0x6f9
 4621 1043 7B0F0000 		.4byte	0xf7b
 4622 1047 790A0000 		.4byte	.LLST70
 4623 104b 1B       		.uleb128 0x1b
 4624 104c 18010000 		.4byte	.LASF130
 4625 1050 01       		.byte	0x1
 4626 1051 FB06     		.2byte	0x6fb
 4627 1053 6B000000 		.4byte	0x6b
 4628 1057 A50A0000 		.4byte	.LLST71
 4629 105b 1B       		.uleb128 0x1b
 4630 105c 85030000 		.4byte	.LASF160
 4631 1060 01       		.byte	0x1
 4632 1061 FC06     		.2byte	0x6fc
 4633 1063 83000000 		.4byte	0x83
 4634 1067 B80A0000 		.4byte	.LLST72
 4635 106b 1B       		.uleb128 0x1b
 4636 106c F9010000 		.4byte	.LASF159
 4637 1070 01       		.byte	0x1
 4638 1071 FD06     		.2byte	0x6fd
 4639 1073 83000000 		.4byte	0x83
 4640 1077 CB0A0000 		.4byte	.LLST73
 4641 107b 1B       		.uleb128 0x1b
 4642 107c 780D0000 		.4byte	.LASF165
 4643 1080 01       		.byte	0x1
 4644 1081 FE06     		.2byte	0x6fe
 4645 1083 83000000 		.4byte	0x83
 4646 1087 DE0A0000 		.4byte	.LLST74
 4647 108b 1B       		.uleb128 0x1b
 4648 108c 39090000 		.4byte	.LASF166
 4649 1090 01       		.byte	0x1
 4650 1091 FF06     		.2byte	0x6ff
 4651 1093 83000000 		.4byte	0x83
 4652 1097 F10A0000 		.4byte	.LLST75
 4653 109b 1F       		.uleb128 0x1f
 4654 109c 0C000000 		.4byte	.LVL246
 4655 10a0 F6140000 		.4byte	0x14f6
 4656 10a4 1F       		.uleb128 0x1f
 4657 10a5 5C000000 		.4byte	.LVL258
 4658 10a9 01150000 		.4byte	0x1501
 4659 10ad 00       		.byte	0
 4660 10ae 1E       		.uleb128 0x1e
 4661 10af 12090000 		.4byte	.LASF167
 4662 10b3 01       		.byte	0x1
 4663 10b4 E102     		.2byte	0x2e1
 4664 10b6 00000000 		.4byte	.LFB9
 4665 10ba 24000000 		.4byte	.LFE9-.LFB9
 4666 10be 01       		.uleb128 0x1
 4667 10bf 9C       		.byte	0x9c
 4668 10c0 CE100000 		.4byte	0x10ce
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 137


 4669 10c4 1F       		.uleb128 0x1f
 4670 10c5 12000000 		.4byte	.LVL261
 4671 10c9 25100000 		.4byte	0x1025
 4672 10cd 00       		.byte	0
 4673 10ce 1E       		.uleb128 0x1e
 4674 10cf 6D030000 		.4byte	.LASF168
 4675 10d3 01       		.byte	0x1
 4676 10d4 9B04     		.2byte	0x49b
 4677 10d6 00000000 		.4byte	.LFB14
 4678 10da 5C000000 		.4byte	.LFE14-.LFB14
 4679 10de 01       		.uleb128 0x1
 4680 10df 9C       		.byte	0x9c
 4681 10e0 3E110000 		.4byte	0x113e
 4682 10e4 16       		.uleb128 0x16
 4683 10e5 6F0D0000 		.4byte	.LASF106
 4684 10e9 01       		.byte	0x1
 4685 10ea 9B04     		.2byte	0x49b
 4686 10ec 83000000 		.4byte	0x83
 4687 10f0 0F0B0000 		.4byte	.LLST76
 4688 10f4 1B       		.uleb128 0x1b
 4689 10f5 5C020000 		.4byte	.LASF143
 4690 10f9 01       		.byte	0x1
 4691 10fa 9D04     		.2byte	0x49d
 4692 10fc ED0C0000 		.4byte	0xced
 4693 1100 300B0000 		.4byte	.LLST77
 4694 1104 22       		.uleb128 0x22
 4695 1105 1A000000 		.4byte	.LVL265
 4696 1109 6F150000 		.4byte	0x156f
 4697 110d 17110000 		.4byte	0x1117
 4698 1111 21       		.uleb128 0x21
 4699 1112 01       		.uleb128 0x1
 4700 1113 50       		.byte	0x50
 4701 1114 01       		.uleb128 0x1
 4702 1115 31       		.byte	0x31
 4703 1116 00       		.byte	0
 4704 1117 1F       		.uleb128 0x1f
 4705 1118 1E000000 		.4byte	.LVL266
 4706 111c AE100000 		.4byte	0x10ae
 4707 1120 22       		.uleb128 0x22
 4708 1121 46000000 		.4byte	.LVL267
 4709 1125 B30D0000 		.4byte	0xdb3
 4710 1129 34110000 		.4byte	0x1134
 4711 112d 21       		.uleb128 0x21
 4712 112e 01       		.uleb128 0x1
 4713 112f 50       		.byte	0x50
 4714 1130 02       		.uleb128 0x2
 4715 1131 75       		.byte	0x75
 4716 1132 00       		.sleb128 0
 4717 1133 00       		.byte	0
 4718 1134 1F       		.uleb128 0x1f
 4719 1135 4A000000 		.4byte	.LVL268
 4720 1139 530D0000 		.4byte	0xd53
 4721 113d 00       		.byte	0
 4722 113e 1E       		.uleb128 0x1e
 4723 113f 20040000 		.4byte	.LASF169
 4724 1143 01       		.byte	0x1
 4725 1144 F104     		.2byte	0x4f1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 138


 4726 1146 00000000 		.4byte	.LFB15
 4727 114a 70000000 		.4byte	.LFE15-.LFB15
 4728 114e 01       		.uleb128 0x1
 4729 114f 9C       		.byte	0x9c
 4730 1150 C0110000 		.4byte	0x11c0
 4731 1154 16       		.uleb128 0x16
 4732 1155 6F0D0000 		.4byte	.LASF106
 4733 1159 01       		.byte	0x1
 4734 115a F104     		.2byte	0x4f1
 4735 115c 83000000 		.4byte	0x83
 4736 1160 5D0B0000 		.4byte	.LLST78
 4737 1164 16       		.uleb128 0x16
 4738 1165 53020000 		.4byte	.LASF163
 4739 1169 01       		.byte	0x1
 4740 116a F104     		.2byte	0x4f1
 4741 116c 83000000 		.4byte	0x83
 4742 1170 7E0B0000 		.4byte	.LLST79
 4743 1174 1B       		.uleb128 0x1b
 4744 1175 5C020000 		.4byte	.LASF143
 4745 1179 01       		.byte	0x1
 4746 117a F304     		.2byte	0x4f3
 4747 117c ED0C0000 		.4byte	0xced
 4748 1180 9F0B0000 		.4byte	.LLST80
 4749 1184 22       		.uleb128 0x22
 4750 1185 2A000000 		.4byte	.LVL274
 4751 1189 CE100000 		.4byte	0x10ce
 4752 118d 99110000 		.4byte	0x1199
 4753 1191 21       		.uleb128 0x21
 4754 1192 01       		.uleb128 0x1
 4755 1193 50       		.byte	0x50
 4756 1194 03       		.uleb128 0x3
 4757 1195 F3       		.byte	0xf3
 4758 1196 01       		.uleb128 0x1
 4759 1197 50       		.byte	0x50
 4760 1198 00       		.byte	0
 4761 1199 22       		.uleb128 0x22
 4762 119a 30000000 		.4byte	.LVL275
 4763 119e 620C0000 		.4byte	0xc62
 4764 11a2 AD110000 		.4byte	0x11ad
 4765 11a6 21       		.uleb128 0x21
 4766 11a7 01       		.uleb128 0x1
 4767 11a8 50       		.byte	0x50
 4768 11a9 02       		.uleb128 0x2
 4769 11aa 75       		.byte	0x75
 4770 11ab 00       		.sleb128 0
 4771 11ac 00       		.byte	0
 4772 11ad 1F       		.uleb128 0x1f
 4773 11ae 48000000 		.4byte	.LVL276
 4774 11b2 020F0000 		.4byte	0xf02
 4775 11b6 1F       		.uleb128 0x1f
 4776 11b7 54000000 		.4byte	.LVL277
 4777 11bb 64150000 		.4byte	0x1564
 4778 11bf 00       		.byte	0
 4779 11c0 17       		.uleb128 0x17
 4780 11c1 2C0D0000 		.4byte	.LASF170
 4781 11c5 01       		.byte	0x1
 4782 11c6 7E08     		.2byte	0x87e
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 139


 4783 11c8 00000000 		.4byte	.LFB26
 4784 11cc 6C010000 		.4byte	.LFE26-.LFB26
 4785 11d0 01       		.uleb128 0x1
 4786 11d1 9C       		.byte	0x9c
 4787 11d2 FF120000 		.4byte	0x12ff
 4788 11d6 16       		.uleb128 0x16
 4789 11d7 6F0D0000 		.4byte	.LASF106
 4790 11db 01       		.byte	0x1
 4791 11dc 7E08     		.2byte	0x87e
 4792 11de 83000000 		.4byte	0x83
 4793 11e2 B20B0000 		.4byte	.LLST81
 4794 11e6 16       		.uleb128 0x16
 4795 11e7 B9040000 		.4byte	.LASF107
 4796 11eb 01       		.byte	0x1
 4797 11ec 7E08     		.2byte	0x87e
 4798 11ee 83000000 		.4byte	0x83
 4799 11f2 D10B0000 		.4byte	.LLST82
 4800 11f6 1B       		.uleb128 0x1b
 4801 11f7 06020000 		.4byte	.LASF111
 4802 11fb 01       		.byte	0x1
 4803 11fc 8008     		.2byte	0x880
 4804 11fe 83000000 		.4byte	0x83
 4805 1202 F20B0000 		.4byte	.LLST83
 4806 1206 1B       		.uleb128 0x1b
 4807 1207 DA070000 		.4byte	.LASF112
 4808 120b 01       		.byte	0x1
 4809 120c 8108     		.2byte	0x881
 4810 120e 83000000 		.4byte	0x83
 4811 1212 290C0000 		.4byte	.LLST84
 4812 1216 1B       		.uleb128 0x1b
 4813 1217 0F040000 		.4byte	.LASF171
 4814 121b 01       		.byte	0x1
 4815 121c 8208     		.2byte	0x882
 4816 121e 83000000 		.4byte	0x83
 4817 1222 100D0000 		.4byte	.LLST85
 4818 1226 1B       		.uleb128 0x1b
 4819 1227 E7090000 		.4byte	.LASF172
 4820 122b 01       		.byte	0x1
 4821 122c 8308     		.2byte	0x883
 4822 122e 83000000 		.4byte	0x83
 4823 1232 300D0000 		.4byte	.LLST86
 4824 1236 1B       		.uleb128 0x1b
 4825 1237 5D030000 		.4byte	.LASF151
 4826 123b 01       		.byte	0x1
 4827 123c 8408     		.2byte	0x884
 4828 123e 83000000 		.4byte	0x83
 4829 1242 4E0D0000 		.4byte	.LLST87
 4830 1246 1B       		.uleb128 0x1b
 4831 1247 440D0000 		.4byte	.LASF173
 4832 124b 01       		.byte	0x1
 4833 124c 8608     		.2byte	0x886
 4834 124e B4060000 		.4byte	0x6b4
 4835 1252 A40D0000 		.4byte	.LLST88
 4836 1256 1B       		.uleb128 0x1b
 4837 1257 35080000 		.4byte	.LASF174
 4838 125b 01       		.byte	0x1
 4839 125c 8708     		.2byte	0x887
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 140


 4840 125e B4060000 		.4byte	0x6b4
 4841 1262 C40D0000 		.4byte	.LLST89
 4842 1266 18       		.uleb128 0x18
 4843 1267 F6050000 		.4byte	.LASF121
 4844 126b 01       		.byte	0x1
 4845 126c 8908     		.2byte	0x889
 4846 126e 96010000 		.4byte	0x196
 4847 1272 02       		.uleb128 0x2
 4848 1273 91       		.byte	0x91
 4849 1274 64       		.sleb128 -28
 4850 1275 1B       		.uleb128 0x1b
 4851 1276 1F060000 		.4byte	.LASF116
 4852 127a 01       		.byte	0x1
 4853 127b 9008     		.2byte	0x890
 4854 127d AE060000 		.4byte	0x6ae
 4855 1281 210E0000 		.4byte	.LLST90
 4856 1285 1C       		.uleb128 0x1c
 4857 1286 41010000 		.4byte	.LASF119
 4858 128a 01       		.byte	0x1
 4859 128b 9108     		.2byte	0x891
 4860 128d F7080000 		.4byte	0x8f7
 4861 1291 1B       		.uleb128 0x1b
 4862 1292 A2040000 		.4byte	.LASF115
 4863 1296 01       		.byte	0x1
 4864 1297 9208     		.2byte	0x892
 4865 1299 02090000 		.4byte	0x902
 4866 129d 340E0000 		.4byte	.LLST91
 4867 12a1 22       		.uleb128 0x22
 4868 12a2 82000000 		.4byte	.LVL299
 4869 12a6 3E110000 		.4byte	0x113e
 4870 12aa BD120000 		.4byte	0x12bd
 4871 12ae 21       		.uleb128 0x21
 4872 12af 01       		.uleb128 0x1
 4873 12b0 50       		.byte	0x50
 4874 12b1 03       		.uleb128 0x3
 4875 12b2 91       		.byte	0x91
 4876 12b3 5C       		.sleb128 -36
 4877 12b4 06       		.byte	0x6
 4878 12b5 21       		.uleb128 0x21
 4879 12b6 01       		.uleb128 0x1
 4880 12b7 51       		.byte	0x51
 4881 12b8 03       		.uleb128 0x3
 4882 12b9 7D       		.byte	0x7d
 4883 12ba 00       		.sleb128 0
 4884 12bb 06       		.byte	0x6
 4885 12bc 00       		.byte	0
 4886 12bd 22       		.uleb128 0x22
 4887 12be 88000000 		.4byte	.LVL300
 4888 12c2 17150000 		.4byte	0x1517
 4889 12c6 D0120000 		.4byte	0x12d0
 4890 12ca 21       		.uleb128 0x21
 4891 12cb 01       		.uleb128 0x1
 4892 12cc 50       		.byte	0x50
 4893 12cd 01       		.uleb128 0x1
 4894 12ce 31       		.byte	0x31
 4895 12cf 00       		.byte	0
 4896 12d0 1F       		.uleb128 0x1f
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 141


 4897 12d1 8C000000 		.4byte	.LVL301
 4898 12d5 CF0E0000 		.4byte	0xecf
 4899 12d9 22       		.uleb128 0x22
 4900 12da 10010000 		.4byte	.LVL317
 4901 12de 3E110000 		.4byte	0x113e
 4902 12e2 F5120000 		.4byte	0x12f5
 4903 12e6 21       		.uleb128 0x21
 4904 12e7 01       		.uleb128 0x1
 4905 12e8 50       		.byte	0x50
 4906 12e9 03       		.uleb128 0x3
 4907 12ea 91       		.byte	0x91
 4908 12eb 5C       		.sleb128 -36
 4909 12ec 06       		.byte	0x6
 4910 12ed 21       		.uleb128 0x21
 4911 12ee 01       		.uleb128 0x1
 4912 12ef 51       		.byte	0x51
 4913 12f0 03       		.uleb128 0x3
 4914 12f1 7D       		.byte	0x7d
 4915 12f2 00       		.sleb128 0
 4916 12f3 06       		.byte	0x6
 4917 12f4 00       		.byte	0
 4918 12f5 1F       		.uleb128 0x1f
 4919 12f6 14010000 		.4byte	.LVL318
 4920 12fa CF0E0000 		.4byte	0xecf
 4921 12fe 00       		.byte	0
 4922 12ff 1E       		.uleb128 0x1e
 4923 1300 53050000 		.4byte	.LASF175
 4924 1304 01       		.byte	0x1
 4925 1305 7C06     		.2byte	0x67c
 4926 1307 00000000 		.4byte	.LFB20
 4927 130b 28000000 		.4byte	.LFE20-.LFB20
 4928 130f 01       		.uleb128 0x1
 4929 1310 9C       		.byte	0x9c
 4930 1311 3F130000 		.4byte	0x133f
 4931 1315 16       		.uleb128 0x16
 4932 1316 6F0D0000 		.4byte	.LASF106
 4933 131a 01       		.byte	0x1
 4934 131b 7C06     		.2byte	0x67c
 4935 131d 83000000 		.4byte	0x83
 4936 1321 520E0000 		.4byte	.LLST92
 4937 1325 16       		.uleb128 0x16
 4938 1326 53020000 		.4byte	.LASF163
 4939 132a 01       		.byte	0x1
 4940 132b 7C06     		.2byte	0x67c
 4941 132d 83000000 		.4byte	0x83
 4942 1331 730E0000 		.4byte	.LLST93
 4943 1335 1F       		.uleb128 0x1f
 4944 1336 1C000000 		.4byte	.LVL335
 4945 133a 25100000 		.4byte	0x1025
 4946 133e 00       		.byte	0
 4947 133f 28       		.uleb128 0x28
 4948 1340 1C0A0000 		.4byte	.LASF177
 4949 1344 01       		.byte	0x1
 4950 1345 7009     		.2byte	0x970
 4951 1347 A4000000 		.4byte	0xa4
 4952 134b 00000000 		.4byte	.LFB27
 4953 134f 78000000 		.4byte	.LFE27-.LFB27
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 142


 4954 1353 01       		.uleb128 0x1
 4955 1354 9C       		.byte	0x9c
 4956 1355 35140000 		.4byte	0x1435
 4957 1359 16       		.uleb128 0x16
 4958 135a 6F0D0000 		.4byte	.LASF106
 4959 135e 01       		.byte	0x1
 4960 135f 7009     		.2byte	0x970
 4961 1361 83000000 		.4byte	0x83
 4962 1365 940E0000 		.4byte	.LLST94
 4963 1369 16       		.uleb128 0x16
 4964 136a B9040000 		.4byte	.LASF107
 4965 136e 01       		.byte	0x1
 4966 136f 7009     		.2byte	0x970
 4967 1371 83000000 		.4byte	0x83
 4968 1375 D60E0000 		.4byte	.LLST95
 4969 1379 1B       		.uleb128 0x1b
 4970 137a 08070000 		.4byte	.LASF109
 4971 137e 01       		.byte	0x1
 4972 137f 7209     		.2byte	0x972
 4973 1381 A4000000 		.4byte	0xa4
 4974 1385 180F0000 		.4byte	.LLST96
 4975 1389 1B       		.uleb128 0x1b
 4976 138a 5D030000 		.4byte	.LASF151
 4977 138e 01       		.byte	0x1
 4978 138f 7309     		.2byte	0x973
 4979 1391 83000000 		.4byte	0x83
 4980 1395 4E0F0000 		.4byte	.LLST97
 4981 1399 1B       		.uleb128 0x1b
 4982 139a 600C0000 		.4byte	.LASF178
 4983 139e 01       		.byte	0x1
 4984 139f 7609     		.2byte	0x976
 4985 13a1 83000000 		.4byte	0x83
 4986 13a5 7C0F0000 		.4byte	.LLST98
 4987 13a9 1B       		.uleb128 0x1b
 4988 13aa 41010000 		.4byte	.LASF119
 4989 13ae 01       		.byte	0x1
 4990 13af 7909     		.2byte	0x979
 4991 13b1 F7080000 		.4byte	0x8f7
 4992 13b5 8F0F0000 		.4byte	.LLST99
 4993 13b9 22       		.uleb128 0x22
 4994 13ba 26000000 		.4byte	.LVL340
 4995 13be C0110000 		.4byte	0x11c0
 4996 13c2 D3130000 		.4byte	0x13d3
 4997 13c6 21       		.uleb128 0x21
 4998 13c7 01       		.uleb128 0x1
 4999 13c8 50       		.byte	0x50
 5000 13c9 02       		.uleb128 0x2
 5001 13ca 74       		.byte	0x74
 5002 13cb 00       		.sleb128 0
 5003 13cc 21       		.uleb128 0x21
 5004 13cd 01       		.uleb128 0x1
 5005 13ce 51       		.byte	0x51
 5006 13cf 02       		.uleb128 0x2
 5007 13d0 75       		.byte	0x75
 5008 13d1 00       		.sleb128 0
 5009 13d2 00       		.byte	0
 5010 13d3 22       		.uleb128 0x22
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 143


 5011 13d4 2C000000 		.4byte	.LVL341
 5012 13d8 08090000 		.4byte	0x908
 5013 13dc E7130000 		.4byte	0x13e7
 5014 13e0 21       		.uleb128 0x21
 5015 13e1 01       		.uleb128 0x1
 5016 13e2 50       		.byte	0x50
 5017 13e3 02       		.uleb128 0x2
 5018 13e4 76       		.byte	0x76
 5019 13e5 00       		.sleb128 0
 5020 13e6 00       		.byte	0
 5021 13e7 22       		.uleb128 0x22
 5022 13e8 38000000 		.4byte	.LVL343
 5023 13ec C3090000 		.4byte	0x9c3
 5024 13f0 01140000 		.4byte	0x1401
 5025 13f4 21       		.uleb128 0x21
 5026 13f5 01       		.uleb128 0x1
 5027 13f6 50       		.byte	0x50
 5028 13f7 02       		.uleb128 0x2
 5029 13f8 76       		.byte	0x76
 5030 13f9 00       		.sleb128 0
 5031 13fa 21       		.uleb128 0x21
 5032 13fb 01       		.uleb128 0x1
 5033 13fc 51       		.byte	0x51
 5034 13fd 02       		.uleb128 0x2
 5035 13fe 75       		.byte	0x75
 5036 13ff 00       		.sleb128 0
 5037 1400 00       		.byte	0
 5038 1401 22       		.uleb128 0x22
 5039 1402 3E000000 		.4byte	.LVL344
 5040 1406 CE100000 		.4byte	0x10ce
 5041 140a 15140000 		.4byte	0x1415
 5042 140e 21       		.uleb128 0x21
 5043 140f 01       		.uleb128 0x1
 5044 1410 50       		.byte	0x50
 5045 1411 02       		.uleb128 0x2
 5046 1412 74       		.byte	0x74
 5047 1413 00       		.sleb128 0
 5048 1414 00       		.byte	0
 5049 1415 1F       		.uleb128 0x1f
 5050 1416 42000000 		.4byte	.LVL345
 5051 141a 860F0000 		.4byte	0xf86
 5052 141e 20       		.uleb128 0x20
 5053 141f 60000000 		.4byte	.LVL348
 5054 1423 30080000 		.4byte	0x830
 5055 1427 21       		.uleb128 0x21
 5056 1428 01       		.uleb128 0x1
 5057 1429 50       		.byte	0x50
 5058 142a 02       		.uleb128 0x2
 5059 142b 74       		.byte	0x74
 5060 142c 00       		.sleb128 0
 5061 142d 21       		.uleb128 0x21
 5062 142e 01       		.uleb128 0x1
 5063 142f 51       		.byte	0x51
 5064 1430 02       		.uleb128 0x2
 5065 1431 75       		.byte	0x75
 5066 1432 00       		.sleb128 0
 5067 1433 00       		.byte	0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 144


 5068 1434 00       		.byte	0
 5069 1435 29       		.uleb128 0x29
 5070 1436 50010000 		.4byte	.LASF179
 5071 143a 01       		.byte	0x1
 5072 143b 7B       		.byte	0x7b
 5073 143c 6B000000 		.4byte	0x6b
 5074 1440 05       		.uleb128 0x5
 5075 1441 03       		.byte	0x3
 5076 1442 00000000 		.4byte	CapSense_eleCsdDisconnectFlag
 5077 1446 2A       		.uleb128 0x2a
 5078 1447 4E070000 		.4byte	.LASF180
 5079 144b 04       		.byte	0x4
 5080 144c 0C05     		.2byte	0x50c
 5081 144e 89050000 		.4byte	0x589
 5082 1452 2A       		.uleb128 0x2a
 5083 1453 500A0000 		.4byte	.LASF181
 5084 1457 04       		.byte	0x4
 5085 1458 0D05     		.2byte	0x50d
 5086 145a 5E140000 		.4byte	0x145e
 5087 145e 1D       		.uleb128 0x1d
 5088 145f ED060000 		.4byte	0x6ed
 5089 1463 0A       		.uleb128 0xa
 5090 1464 520B0000 		.4byte	0xb52
 5091 1468 73140000 		.4byte	0x1473
 5092 146c 0B       		.uleb128 0xb
 5093 146d A6010000 		.4byte	0x1a6
 5094 1471 00       		.byte	0
 5095 1472 00       		.byte	0
 5096 1473 2A       		.uleb128 0x2a
 5097 1474 5E000000 		.4byte	.LASF182
 5098 1478 04       		.byte	0x4
 5099 1479 1505     		.2byte	0x515
 5100 147b 7F140000 		.4byte	0x147f
 5101 147f 1D       		.uleb128 0x1d
 5102 1480 63140000 		.4byte	0x1463
 5103 1484 2B       		.uleb128 0x2b
 5104 1485 80000000 		.4byte	.LASF183
 5105 1489 05       		.byte	0x5
 5106 148a B1       		.byte	0xb1
 5107 148b B0000000 		.4byte	0xb0
 5108 148f 2B       		.uleb128 0x2b
 5109 1490 D1030000 		.4byte	.LASF184
 5110 1494 05       		.byte	0x5
 5111 1495 B2       		.byte	0xb2
 5112 1496 B0000000 		.4byte	0xb0
 5113 149a 2B       		.uleb128 0x2b
 5114 149b 820C0000 		.4byte	.LASF185
 5115 149f 05       		.byte	0x5
 5116 14a0 B5       		.byte	0xb5
 5117 14a1 AE060000 		.4byte	0x6ae
 5118 14a5 2B       		.uleb128 0x2b
 5119 14a6 A40C0000 		.4byte	.LASF186
 5120 14aa 05       		.byte	0x5
 5121 14ab BC       		.byte	0xbc
 5122 14ac B0140000 		.4byte	0x14b0
 5123 14b0 1D       		.uleb128 0x1d
 5124 14b1 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 145


 5125 14b5 2B       		.uleb128 0x2b
 5126 14b6 10080000 		.4byte	.LASF187
 5127 14ba 05       		.byte	0x5
 5128 14bb CA       		.byte	0xca
 5129 14bc 7B0F0000 		.4byte	0xf7b
 5130 14c0 0A       		.uleb128 0xa
 5131 14c1 D0140000 		.4byte	0x14d0
 5132 14c5 D0140000 		.4byte	0x14d0
 5133 14c9 0B       		.uleb128 0xb
 5134 14ca A6010000 		.4byte	0x1a6
 5135 14ce 05       		.byte	0x5
 5136 14cf 00       		.byte	0
 5137 14d0 1D       		.uleb128 0x1d
 5138 14d1 92070000 		.4byte	0x792
 5139 14d5 2B       		.uleb128 0x2b
 5140 14d6 860D0000 		.4byte	.LASF188
 5141 14da 05       		.byte	0x5
 5142 14db F5       		.byte	0xf5
 5143 14dc E0140000 		.4byte	0x14e0
 5144 14e0 1D       		.uleb128 0x1d
 5145 14e1 C0140000 		.4byte	0x14c0
 5146 14e5 2C       		.uleb128 0x2c
 5147 14e6 6D070000 		.4byte	.LASF189
 5148 14ea 01       		.byte	0x1
 5149 14eb 74       		.byte	0x74
 5150 14ec 83000000 		.4byte	0x83
 5151 14f0 05       		.uleb128 0x5
 5152 14f1 03       		.byte	0x3
 5153 14f2 00000000 		.4byte	CapSense_configCsd
 5154 14f6 2D       		.uleb128 0x2d
 5155 14f7 6B0C0000 		.4byte	.LASF190
 5156 14fb 6B0C0000 		.4byte	.LASF190
 5157 14ff 06       		.byte	0x6
 5158 1500 E5       		.byte	0xe5
 5159 1501 2D       		.uleb128 0x2d
 5160 1502 9B050000 		.4byte	.LASF191
 5161 1506 9B050000 		.4byte	.LASF191
 5162 150a 06       		.byte	0x6
 5163 150b E6       		.byte	0xe6
 5164 150c 2D       		.uleb128 0x2d
 5165 150d 9D090000 		.4byte	.LASF192
 5166 1511 9D090000 		.4byte	.LASF192
 5167 1515 05       		.byte	0x5
 5168 1516 84       		.byte	0x84
 5169 1517 2D       		.uleb128 0x2d
 5170 1518 B1050000 		.4byte	.LASF193
 5171 151c B1050000 		.4byte	.LASF193
 5172 1520 05       		.byte	0x5
 5173 1521 A8       		.byte	0xa8
 5174 1522 2D       		.uleb128 0x2d
 5175 1523 37070000 		.4byte	.LASF194
 5176 1527 37070000 		.4byte	.LASF194
 5177 152b 05       		.byte	0x5
 5178 152c A9       		.byte	0xa9
 5179 152d 2D       		.uleb128 0x2d
 5180 152e D8010000 		.4byte	.LASF195
 5181 1532 D8010000 		.4byte	.LASF195
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 146


 5182 1536 05       		.byte	0x5
 5183 1537 7F       		.byte	0x7f
 5184 1538 2D       		.uleb128 0x2d
 5185 1539 84050000 		.4byte	.LASF196
 5186 153d 84050000 		.4byte	.LASF196
 5187 1541 06       		.byte	0x6
 5188 1542 C8       		.byte	0xc8
 5189 1543 2D       		.uleb128 0x2d
 5190 1544 4D0C0000 		.4byte	.LASF197
 5191 1548 4D0C0000 		.4byte	.LASF197
 5192 154c 06       		.byte	0x6
 5193 154d C3       		.byte	0xc3
 5194 154e 2D       		.uleb128 0x2d
 5195 154f C2010000 		.4byte	.LASF198
 5196 1553 C2010000 		.4byte	.LASF198
 5197 1557 06       		.byte	0x6
 5198 1558 C5       		.byte	0xc5
 5199 1559 2D       		.uleb128 0x2d
 5200 155a 93030000 		.4byte	.LASF199
 5201 155e 93030000 		.4byte	.LASF199
 5202 1562 06       		.byte	0x6
 5203 1563 DA       		.byte	0xda
 5204 1564 2D       		.uleb128 0x2d
 5205 1565 A5030000 		.4byte	.LASF200
 5206 1569 A5030000 		.4byte	.LASF200
 5207 156d 07       		.byte	0x7
 5208 156e 18       		.byte	0x18
 5209 156f 2D       		.uleb128 0x2d
 5210 1570 C6040000 		.4byte	.LASF201
 5211 1574 C6040000 		.4byte	.LASF201
 5212 1578 05       		.byte	0x5
 5213 1579 85       		.byte	0x85
 5214 157a 00       		.byte	0
 5215              		.section	.debug_abbrev,"",%progbits
 5216              	.Ldebug_abbrev0:
 5217 0000 01       		.uleb128 0x1
 5218 0001 11       		.uleb128 0x11
 5219 0002 01       		.byte	0x1
 5220 0003 25       		.uleb128 0x25
 5221 0004 0E       		.uleb128 0xe
 5222 0005 13       		.uleb128 0x13
 5223 0006 0B       		.uleb128 0xb
 5224 0007 03       		.uleb128 0x3
 5225 0008 0E       		.uleb128 0xe
 5226 0009 1B       		.uleb128 0x1b
 5227 000a 0E       		.uleb128 0xe
 5228 000b 55       		.uleb128 0x55
 5229 000c 17       		.uleb128 0x17
 5230 000d 11       		.uleb128 0x11
 5231 000e 01       		.uleb128 0x1
 5232 000f 10       		.uleb128 0x10
 5233 0010 17       		.uleb128 0x17
 5234 0011 00       		.byte	0
 5235 0012 00       		.byte	0
 5236 0013 02       		.uleb128 0x2
 5237 0014 24       		.uleb128 0x24
 5238 0015 00       		.byte	0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 147


 5239 0016 0B       		.uleb128 0xb
 5240 0017 0B       		.uleb128 0xb
 5241 0018 3E       		.uleb128 0x3e
 5242 0019 0B       		.uleb128 0xb
 5243 001a 03       		.uleb128 0x3
 5244 001b 0E       		.uleb128 0xe
 5245 001c 00       		.byte	0
 5246 001d 00       		.byte	0
 5247 001e 03       		.uleb128 0x3
 5248 001f 24       		.uleb128 0x24
 5249 0020 00       		.byte	0
 5250 0021 0B       		.uleb128 0xb
 5251 0022 0B       		.uleb128 0xb
 5252 0023 3E       		.uleb128 0x3e
 5253 0024 0B       		.uleb128 0xb
 5254 0025 03       		.uleb128 0x3
 5255 0026 08       		.uleb128 0x8
 5256 0027 00       		.byte	0
 5257 0028 00       		.byte	0
 5258 0029 04       		.uleb128 0x4
 5259 002a 16       		.uleb128 0x16
 5260 002b 00       		.byte	0
 5261 002c 03       		.uleb128 0x3
 5262 002d 0E       		.uleb128 0xe
 5263 002e 3A       		.uleb128 0x3a
 5264 002f 0B       		.uleb128 0xb
 5265 0030 3B       		.uleb128 0x3b
 5266 0031 05       		.uleb128 0x5
 5267 0032 49       		.uleb128 0x49
 5268 0033 13       		.uleb128 0x13
 5269 0034 00       		.byte	0
 5270 0035 00       		.byte	0
 5271 0036 05       		.uleb128 0x5
 5272 0037 35       		.uleb128 0x35
 5273 0038 00       		.byte	0
 5274 0039 49       		.uleb128 0x49
 5275 003a 13       		.uleb128 0x13
 5276 003b 00       		.byte	0
 5277 003c 00       		.byte	0
 5278 003d 06       		.uleb128 0x6
 5279 003e 04       		.uleb128 0x4
 5280 003f 01       		.byte	0x1
 5281 0040 0B       		.uleb128 0xb
 5282 0041 0B       		.uleb128 0xb
 5283 0042 49       		.uleb128 0x49
 5284 0043 13       		.uleb128 0x13
 5285 0044 3A       		.uleb128 0x3a
 5286 0045 0B       		.uleb128 0xb
 5287 0046 3B       		.uleb128 0x3b
 5288 0047 0B       		.uleb128 0xb
 5289 0048 01       		.uleb128 0x1
 5290 0049 13       		.uleb128 0x13
 5291 004a 00       		.byte	0
 5292 004b 00       		.byte	0
 5293 004c 07       		.uleb128 0x7
 5294 004d 28       		.uleb128 0x28
 5295 004e 00       		.byte	0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 148


 5296 004f 03       		.uleb128 0x3
 5297 0050 0E       		.uleb128 0xe
 5298 0051 1C       		.uleb128 0x1c
 5299 0052 0B       		.uleb128 0xb
 5300 0053 00       		.byte	0
 5301 0054 00       		.byte	0
 5302 0055 08       		.uleb128 0x8
 5303 0056 13       		.uleb128 0x13
 5304 0057 01       		.byte	0x1
 5305 0058 0B       		.uleb128 0xb
 5306 0059 0B       		.uleb128 0xb
 5307 005a 3A       		.uleb128 0x3a
 5308 005b 0B       		.uleb128 0xb
 5309 005c 3B       		.uleb128 0x3b
 5310 005d 0B       		.uleb128 0xb
 5311 005e 01       		.uleb128 0x1
 5312 005f 13       		.uleb128 0x13
 5313 0060 00       		.byte	0
 5314 0061 00       		.byte	0
 5315 0062 09       		.uleb128 0x9
 5316 0063 0D       		.uleb128 0xd
 5317 0064 00       		.byte	0
 5318 0065 03       		.uleb128 0x3
 5319 0066 0E       		.uleb128 0xe
 5320 0067 3A       		.uleb128 0x3a
 5321 0068 0B       		.uleb128 0xb
 5322 0069 3B       		.uleb128 0x3b
 5323 006a 0B       		.uleb128 0xb
 5324 006b 49       		.uleb128 0x49
 5325 006c 13       		.uleb128 0x13
 5326 006d 38       		.uleb128 0x38
 5327 006e 0B       		.uleb128 0xb
 5328 006f 00       		.byte	0
 5329 0070 00       		.byte	0
 5330 0071 0A       		.uleb128 0xa
 5331 0072 01       		.uleb128 0x1
 5332 0073 01       		.byte	0x1
 5333 0074 49       		.uleb128 0x49
 5334 0075 13       		.uleb128 0x13
 5335 0076 01       		.uleb128 0x1
 5336 0077 13       		.uleb128 0x13
 5337 0078 00       		.byte	0
 5338 0079 00       		.byte	0
 5339 007a 0B       		.uleb128 0xb
 5340 007b 21       		.uleb128 0x21
 5341 007c 00       		.byte	0
 5342 007d 49       		.uleb128 0x49
 5343 007e 13       		.uleb128 0x13
 5344 007f 2F       		.uleb128 0x2f
 5345 0080 0B       		.uleb128 0xb
 5346 0081 00       		.byte	0
 5347 0082 00       		.byte	0
 5348 0083 0C       		.uleb128 0xc
 5349 0084 16       		.uleb128 0x16
 5350 0085 00       		.byte	0
 5351 0086 03       		.uleb128 0x3
 5352 0087 0E       		.uleb128 0xe
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 149


 5353 0088 3A       		.uleb128 0x3a
 5354 0089 0B       		.uleb128 0xb
 5355 008a 3B       		.uleb128 0x3b
 5356 008b 0B       		.uleb128 0xb
 5357 008c 49       		.uleb128 0x49
 5358 008d 13       		.uleb128 0x13
 5359 008e 00       		.byte	0
 5360 008f 00       		.byte	0
 5361 0090 0D       		.uleb128 0xd
 5362 0091 0D       		.uleb128 0xd
 5363 0092 00       		.byte	0
 5364 0093 03       		.uleb128 0x3
 5365 0094 0E       		.uleb128 0xe
 5366 0095 3A       		.uleb128 0x3a
 5367 0096 0B       		.uleb128 0xb
 5368 0097 3B       		.uleb128 0x3b
 5369 0098 05       		.uleb128 0x5
 5370 0099 49       		.uleb128 0x49
 5371 009a 13       		.uleb128 0x13
 5372 009b 38       		.uleb128 0x38
 5373 009c 0B       		.uleb128 0xb
 5374 009d 00       		.byte	0
 5375 009e 00       		.byte	0
 5376 009f 0E       		.uleb128 0xe
 5377 00a0 13       		.uleb128 0x13
 5378 00a1 01       		.byte	0x1
 5379 00a2 0B       		.uleb128 0xb
 5380 00a3 0B       		.uleb128 0xb
 5381 00a4 3A       		.uleb128 0x3a
 5382 00a5 0B       		.uleb128 0xb
 5383 00a6 3B       		.uleb128 0x3b
 5384 00a7 05       		.uleb128 0x5
 5385 00a8 01       		.uleb128 0x1
 5386 00a9 13       		.uleb128 0x13
 5387 00aa 00       		.byte	0
 5388 00ab 00       		.byte	0
 5389 00ac 0F       		.uleb128 0xf
 5390 00ad 0D       		.uleb128 0xd
 5391 00ae 00       		.byte	0
 5392 00af 03       		.uleb128 0x3
 5393 00b0 08       		.uleb128 0x8
 5394 00b1 3A       		.uleb128 0x3a
 5395 00b2 0B       		.uleb128 0xb
 5396 00b3 3B       		.uleb128 0x3b
 5397 00b4 05       		.uleb128 0x5
 5398 00b5 49       		.uleb128 0x49
 5399 00b6 13       		.uleb128 0x13
 5400 00b7 38       		.uleb128 0x38
 5401 00b8 0B       		.uleb128 0xb
 5402 00b9 00       		.byte	0
 5403 00ba 00       		.byte	0
 5404 00bb 10       		.uleb128 0x10
 5405 00bc 0F       		.uleb128 0xf
 5406 00bd 00       		.byte	0
 5407 00be 0B       		.uleb128 0xb
 5408 00bf 0B       		.uleb128 0xb
 5409 00c0 49       		.uleb128 0x49
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 150


 5410 00c1 13       		.uleb128 0x13
 5411 00c2 00       		.byte	0
 5412 00c3 00       		.byte	0
 5413 00c4 11       		.uleb128 0x11
 5414 00c5 26       		.uleb128 0x26
 5415 00c6 00       		.byte	0
 5416 00c7 00       		.byte	0
 5417 00c8 00       		.byte	0
 5418 00c9 12       		.uleb128 0x12
 5419 00ca 0F       		.uleb128 0xf
 5420 00cb 00       		.byte	0
 5421 00cc 0B       		.uleb128 0xb
 5422 00cd 0B       		.uleb128 0xb
 5423 00ce 00       		.byte	0
 5424 00cf 00       		.byte	0
 5425 00d0 13       		.uleb128 0x13
 5426 00d1 2E       		.uleb128 0x2e
 5427 00d2 01       		.byte	0x1
 5428 00d3 03       		.uleb128 0x3
 5429 00d4 0E       		.uleb128 0xe
 5430 00d5 3A       		.uleb128 0x3a
 5431 00d6 0B       		.uleb128 0xb
 5432 00d7 3B       		.uleb128 0x3b
 5433 00d8 0B       		.uleb128 0xb
 5434 00d9 27       		.uleb128 0x27
 5435 00da 19       		.uleb128 0x19
 5436 00db 11       		.uleb128 0x11
 5437 00dc 01       		.uleb128 0x1
 5438 00dd 12       		.uleb128 0x12
 5439 00de 06       		.uleb128 0x6
 5440 00df 40       		.uleb128 0x40
 5441 00e0 18       		.uleb128 0x18
 5442 00e1 9742     		.uleb128 0x2117
 5443 00e3 19       		.uleb128 0x19
 5444 00e4 01       		.uleb128 0x1
 5445 00e5 13       		.uleb128 0x13
 5446 00e6 00       		.byte	0
 5447 00e7 00       		.byte	0
 5448 00e8 14       		.uleb128 0x14
 5449 00e9 05       		.uleb128 0x5
 5450 00ea 00       		.byte	0
 5451 00eb 03       		.uleb128 0x3
 5452 00ec 0E       		.uleb128 0xe
 5453 00ed 3A       		.uleb128 0x3a
 5454 00ee 0B       		.uleb128 0xb
 5455 00ef 3B       		.uleb128 0x3b
 5456 00f0 0B       		.uleb128 0xb
 5457 00f1 49       		.uleb128 0x49
 5458 00f2 13       		.uleb128 0x13
 5459 00f3 02       		.uleb128 0x2
 5460 00f4 17       		.uleb128 0x17
 5461 00f5 00       		.byte	0
 5462 00f6 00       		.byte	0
 5463 00f7 15       		.uleb128 0x15
 5464 00f8 2E       		.uleb128 0x2e
 5465 00f9 01       		.byte	0x1
 5466 00fa 03       		.uleb128 0x3
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 151


 5467 00fb 0E       		.uleb128 0xe
 5468 00fc 3A       		.uleb128 0x3a
 5469 00fd 0B       		.uleb128 0xb
 5470 00fe 3B       		.uleb128 0x3b
 5471 00ff 05       		.uleb128 0x5
 5472 0100 27       		.uleb128 0x27
 5473 0101 19       		.uleb128 0x19
 5474 0102 11       		.uleb128 0x11
 5475 0103 01       		.uleb128 0x1
 5476 0104 12       		.uleb128 0x12
 5477 0105 06       		.uleb128 0x6
 5478 0106 40       		.uleb128 0x40
 5479 0107 18       		.uleb128 0x18
 5480 0108 9742     		.uleb128 0x2117
 5481 010a 19       		.uleb128 0x19
 5482 010b 01       		.uleb128 0x1
 5483 010c 13       		.uleb128 0x13
 5484 010d 00       		.byte	0
 5485 010e 00       		.byte	0
 5486 010f 16       		.uleb128 0x16
 5487 0110 05       		.uleb128 0x5
 5488 0111 00       		.byte	0
 5489 0112 03       		.uleb128 0x3
 5490 0113 0E       		.uleb128 0xe
 5491 0114 3A       		.uleb128 0x3a
 5492 0115 0B       		.uleb128 0xb
 5493 0116 3B       		.uleb128 0x3b
 5494 0117 05       		.uleb128 0x5
 5495 0118 49       		.uleb128 0x49
 5496 0119 13       		.uleb128 0x13
 5497 011a 02       		.uleb128 0x2
 5498 011b 17       		.uleb128 0x17
 5499 011c 00       		.byte	0
 5500 011d 00       		.byte	0
 5501 011e 17       		.uleb128 0x17
 5502 011f 2E       		.uleb128 0x2e
 5503 0120 01       		.byte	0x1
 5504 0121 03       		.uleb128 0x3
 5505 0122 0E       		.uleb128 0xe
 5506 0123 3A       		.uleb128 0x3a
 5507 0124 0B       		.uleb128 0xb
 5508 0125 3B       		.uleb128 0x3b
 5509 0126 05       		.uleb128 0x5
 5510 0127 27       		.uleb128 0x27
 5511 0128 19       		.uleb128 0x19
 5512 0129 11       		.uleb128 0x11
 5513 012a 01       		.uleb128 0x1
 5514 012b 12       		.uleb128 0x12
 5515 012c 06       		.uleb128 0x6
 5516 012d 40       		.uleb128 0x40
 5517 012e 18       		.uleb128 0x18
 5518 012f 9642     		.uleb128 0x2116
 5519 0131 19       		.uleb128 0x19
 5520 0132 01       		.uleb128 0x1
 5521 0133 13       		.uleb128 0x13
 5522 0134 00       		.byte	0
 5523 0135 00       		.byte	0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 152


 5524 0136 18       		.uleb128 0x18
 5525 0137 34       		.uleb128 0x34
 5526 0138 00       		.byte	0
 5527 0139 03       		.uleb128 0x3
 5528 013a 0E       		.uleb128 0xe
 5529 013b 3A       		.uleb128 0x3a
 5530 013c 0B       		.uleb128 0xb
 5531 013d 3B       		.uleb128 0x3b
 5532 013e 05       		.uleb128 0x5
 5533 013f 49       		.uleb128 0x49
 5534 0140 13       		.uleb128 0x13
 5535 0141 02       		.uleb128 0x2
 5536 0142 18       		.uleb128 0x18
 5537 0143 00       		.byte	0
 5538 0144 00       		.byte	0
 5539 0145 19       		.uleb128 0x19
 5540 0146 2E       		.uleb128 0x2e
 5541 0147 00       		.byte	0
 5542 0148 03       		.uleb128 0x3
 5543 0149 0E       		.uleb128 0xe
 5544 014a 3A       		.uleb128 0x3a
 5545 014b 0B       		.uleb128 0xb
 5546 014c 3B       		.uleb128 0x3b
 5547 014d 05       		.uleb128 0x5
 5548 014e 27       		.uleb128 0x27
 5549 014f 19       		.uleb128 0x19
 5550 0150 11       		.uleb128 0x11
 5551 0151 01       		.uleb128 0x1
 5552 0152 12       		.uleb128 0x12
 5553 0153 06       		.uleb128 0x6
 5554 0154 40       		.uleb128 0x40
 5555 0155 18       		.uleb128 0x18
 5556 0156 9742     		.uleb128 0x2117
 5557 0158 19       		.uleb128 0x19
 5558 0159 00       		.byte	0
 5559 015a 00       		.byte	0
 5560 015b 1A       		.uleb128 0x1a
 5561 015c 2E       		.uleb128 0x2e
 5562 015d 01       		.byte	0x1
 5563 015e 03       		.uleb128 0x3
 5564 015f 0E       		.uleb128 0xe
 5565 0160 3A       		.uleb128 0x3a
 5566 0161 0B       		.uleb128 0xb
 5567 0162 3B       		.uleb128 0x3b
 5568 0163 05       		.uleb128 0x5
 5569 0164 27       		.uleb128 0x27
 5570 0165 19       		.uleb128 0x19
 5571 0166 49       		.uleb128 0x49
 5572 0167 13       		.uleb128 0x13
 5573 0168 11       		.uleb128 0x11
 5574 0169 01       		.uleb128 0x1
 5575 016a 12       		.uleb128 0x12
 5576 016b 06       		.uleb128 0x6
 5577 016c 40       		.uleb128 0x40
 5578 016d 18       		.uleb128 0x18
 5579 016e 9642     		.uleb128 0x2116
 5580 0170 19       		.uleb128 0x19
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 153


 5581 0171 01       		.uleb128 0x1
 5582 0172 13       		.uleb128 0x13
 5583 0173 00       		.byte	0
 5584 0174 00       		.byte	0
 5585 0175 1B       		.uleb128 0x1b
 5586 0176 34       		.uleb128 0x34
 5587 0177 00       		.byte	0
 5588 0178 03       		.uleb128 0x3
 5589 0179 0E       		.uleb128 0xe
 5590 017a 3A       		.uleb128 0x3a
 5591 017b 0B       		.uleb128 0xb
 5592 017c 3B       		.uleb128 0x3b
 5593 017d 05       		.uleb128 0x5
 5594 017e 49       		.uleb128 0x49
 5595 017f 13       		.uleb128 0x13
 5596 0180 02       		.uleb128 0x2
 5597 0181 17       		.uleb128 0x17
 5598 0182 00       		.byte	0
 5599 0183 00       		.byte	0
 5600 0184 1C       		.uleb128 0x1c
 5601 0185 34       		.uleb128 0x34
 5602 0186 00       		.byte	0
 5603 0187 03       		.uleb128 0x3
 5604 0188 0E       		.uleb128 0xe
 5605 0189 3A       		.uleb128 0x3a
 5606 018a 0B       		.uleb128 0xb
 5607 018b 3B       		.uleb128 0x3b
 5608 018c 05       		.uleb128 0x5
 5609 018d 49       		.uleb128 0x49
 5610 018e 13       		.uleb128 0x13
 5611 018f 00       		.byte	0
 5612 0190 00       		.byte	0
 5613 0191 1D       		.uleb128 0x1d
 5614 0192 26       		.uleb128 0x26
 5615 0193 00       		.byte	0
 5616 0194 49       		.uleb128 0x49
 5617 0195 13       		.uleb128 0x13
 5618 0196 00       		.byte	0
 5619 0197 00       		.byte	0
 5620 0198 1E       		.uleb128 0x1e
 5621 0199 2E       		.uleb128 0x2e
 5622 019a 01       		.byte	0x1
 5623 019b 3F       		.uleb128 0x3f
 5624 019c 19       		.uleb128 0x19
 5625 019d 03       		.uleb128 0x3
 5626 019e 0E       		.uleb128 0xe
 5627 019f 3A       		.uleb128 0x3a
 5628 01a0 0B       		.uleb128 0xb
 5629 01a1 3B       		.uleb128 0x3b
 5630 01a2 05       		.uleb128 0x5
 5631 01a3 27       		.uleb128 0x27
 5632 01a4 19       		.uleb128 0x19
 5633 01a5 11       		.uleb128 0x11
 5634 01a6 01       		.uleb128 0x1
 5635 01a7 12       		.uleb128 0x12
 5636 01a8 06       		.uleb128 0x6
 5637 01a9 40       		.uleb128 0x40
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 154


 5638 01aa 18       		.uleb128 0x18
 5639 01ab 9742     		.uleb128 0x2117
 5640 01ad 19       		.uleb128 0x19
 5641 01ae 01       		.uleb128 0x1
 5642 01af 13       		.uleb128 0x13
 5643 01b0 00       		.byte	0
 5644 01b1 00       		.byte	0
 5645 01b2 1F       		.uleb128 0x1f
 5646 01b3 898201   		.uleb128 0x4109
 5647 01b6 00       		.byte	0
 5648 01b7 11       		.uleb128 0x11
 5649 01b8 01       		.uleb128 0x1
 5650 01b9 31       		.uleb128 0x31
 5651 01ba 13       		.uleb128 0x13
 5652 01bb 00       		.byte	0
 5653 01bc 00       		.byte	0
 5654 01bd 20       		.uleb128 0x20
 5655 01be 898201   		.uleb128 0x4109
 5656 01c1 01       		.byte	0x1
 5657 01c2 11       		.uleb128 0x11
 5658 01c3 01       		.uleb128 0x1
 5659 01c4 31       		.uleb128 0x31
 5660 01c5 13       		.uleb128 0x13
 5661 01c6 00       		.byte	0
 5662 01c7 00       		.byte	0
 5663 01c8 21       		.uleb128 0x21
 5664 01c9 8A8201   		.uleb128 0x410a
 5665 01cc 00       		.byte	0
 5666 01cd 02       		.uleb128 0x2
 5667 01ce 18       		.uleb128 0x18
 5668 01cf 9142     		.uleb128 0x2111
 5669 01d1 18       		.uleb128 0x18
 5670 01d2 00       		.byte	0
 5671 01d3 00       		.byte	0
 5672 01d4 22       		.uleb128 0x22
 5673 01d5 898201   		.uleb128 0x4109
 5674 01d8 01       		.byte	0x1
 5675 01d9 11       		.uleb128 0x11
 5676 01da 01       		.uleb128 0x1
 5677 01db 31       		.uleb128 0x31
 5678 01dc 13       		.uleb128 0x13
 5679 01dd 01       		.uleb128 0x1
 5680 01de 13       		.uleb128 0x13
 5681 01df 00       		.byte	0
 5682 01e0 00       		.byte	0
 5683 01e1 23       		.uleb128 0x23
 5684 01e2 2E       		.uleb128 0x2e
 5685 01e3 01       		.byte	0x1
 5686 01e4 3F       		.uleb128 0x3f
 5687 01e5 19       		.uleb128 0x19
 5688 01e6 03       		.uleb128 0x3
 5689 01e7 0E       		.uleb128 0xe
 5690 01e8 3A       		.uleb128 0x3a
 5691 01e9 0B       		.uleb128 0xb
 5692 01ea 3B       		.uleb128 0x3b
 5693 01eb 05       		.uleb128 0x5
 5694 01ec 27       		.uleb128 0x27
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 155


 5695 01ed 19       		.uleb128 0x19
 5696 01ee 49       		.uleb128 0x49
 5697 01ef 13       		.uleb128 0x13
 5698 01f0 11       		.uleb128 0x11
 5699 01f1 01       		.uleb128 0x1
 5700 01f2 12       		.uleb128 0x12
 5701 01f3 06       		.uleb128 0x6
 5702 01f4 40       		.uleb128 0x40
 5703 01f5 18       		.uleb128 0x18
 5704 01f6 9642     		.uleb128 0x2116
 5705 01f8 19       		.uleb128 0x19
 5706 01f9 01       		.uleb128 0x1
 5707 01fa 13       		.uleb128 0x13
 5708 01fb 00       		.byte	0
 5709 01fc 00       		.byte	0
 5710 01fd 24       		.uleb128 0x24
 5711 01fe 2E       		.uleb128 0x2e
 5712 01ff 01       		.byte	0x1
 5713 0200 03       		.uleb128 0x3
 5714 0201 0E       		.uleb128 0xe
 5715 0202 3A       		.uleb128 0x3a
 5716 0203 0B       		.uleb128 0xb
 5717 0204 3B       		.uleb128 0x3b
 5718 0205 05       		.uleb128 0x5
 5719 0206 27       		.uleb128 0x27
 5720 0207 19       		.uleb128 0x19
 5721 0208 20       		.uleb128 0x20
 5722 0209 0B       		.uleb128 0xb
 5723 020a 01       		.uleb128 0x1
 5724 020b 13       		.uleb128 0x13
 5725 020c 00       		.byte	0
 5726 020d 00       		.byte	0
 5727 020e 25       		.uleb128 0x25
 5728 020f 1D       		.uleb128 0x1d
 5729 0210 01       		.byte	0x1
 5730 0211 31       		.uleb128 0x31
 5731 0212 13       		.uleb128 0x13
 5732 0213 11       		.uleb128 0x11
 5733 0214 01       		.uleb128 0x1
 5734 0215 12       		.uleb128 0x12
 5735 0216 06       		.uleb128 0x6
 5736 0217 58       		.uleb128 0x58
 5737 0218 0B       		.uleb128 0xb
 5738 0219 59       		.uleb128 0x59
 5739 021a 05       		.uleb128 0x5
 5740 021b 01       		.uleb128 0x1
 5741 021c 13       		.uleb128 0x13
 5742 021d 00       		.byte	0
 5743 021e 00       		.byte	0
 5744 021f 26       		.uleb128 0x26
 5745 0220 0B       		.uleb128 0xb
 5746 0221 01       		.byte	0x1
 5747 0222 11       		.uleb128 0x11
 5748 0223 01       		.uleb128 0x1
 5749 0224 12       		.uleb128 0x12
 5750 0225 06       		.uleb128 0x6
 5751 0226 00       		.byte	0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 156


 5752 0227 00       		.byte	0
 5753 0228 27       		.uleb128 0x27
 5754 0229 34       		.uleb128 0x34
 5755 022a 00       		.byte	0
 5756 022b 31       		.uleb128 0x31
 5757 022c 13       		.uleb128 0x13
 5758 022d 02       		.uleb128 0x2
 5759 022e 17       		.uleb128 0x17
 5760 022f 00       		.byte	0
 5761 0230 00       		.byte	0
 5762 0231 28       		.uleb128 0x28
 5763 0232 2E       		.uleb128 0x2e
 5764 0233 01       		.byte	0x1
 5765 0234 3F       		.uleb128 0x3f
 5766 0235 19       		.uleb128 0x19
 5767 0236 03       		.uleb128 0x3
 5768 0237 0E       		.uleb128 0xe
 5769 0238 3A       		.uleb128 0x3a
 5770 0239 0B       		.uleb128 0xb
 5771 023a 3B       		.uleb128 0x3b
 5772 023b 05       		.uleb128 0x5
 5773 023c 27       		.uleb128 0x27
 5774 023d 19       		.uleb128 0x19
 5775 023e 49       		.uleb128 0x49
 5776 023f 13       		.uleb128 0x13
 5777 0240 11       		.uleb128 0x11
 5778 0241 01       		.uleb128 0x1
 5779 0242 12       		.uleb128 0x12
 5780 0243 06       		.uleb128 0x6
 5781 0244 40       		.uleb128 0x40
 5782 0245 18       		.uleb128 0x18
 5783 0246 9742     		.uleb128 0x2117
 5784 0248 19       		.uleb128 0x19
 5785 0249 01       		.uleb128 0x1
 5786 024a 13       		.uleb128 0x13
 5787 024b 00       		.byte	0
 5788 024c 00       		.byte	0
 5789 024d 29       		.uleb128 0x29
 5790 024e 34       		.uleb128 0x34
 5791 024f 00       		.byte	0
 5792 0250 03       		.uleb128 0x3
 5793 0251 0E       		.uleb128 0xe
 5794 0252 3A       		.uleb128 0x3a
 5795 0253 0B       		.uleb128 0xb
 5796 0254 3B       		.uleb128 0x3b
 5797 0255 0B       		.uleb128 0xb
 5798 0256 49       		.uleb128 0x49
 5799 0257 13       		.uleb128 0x13
 5800 0258 02       		.uleb128 0x2
 5801 0259 18       		.uleb128 0x18
 5802 025a 00       		.byte	0
 5803 025b 00       		.byte	0
 5804 025c 2A       		.uleb128 0x2a
 5805 025d 34       		.uleb128 0x34
 5806 025e 00       		.byte	0
 5807 025f 03       		.uleb128 0x3
 5808 0260 0E       		.uleb128 0xe
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 157


 5809 0261 3A       		.uleb128 0x3a
 5810 0262 0B       		.uleb128 0xb
 5811 0263 3B       		.uleb128 0x3b
 5812 0264 05       		.uleb128 0x5
 5813 0265 49       		.uleb128 0x49
 5814 0266 13       		.uleb128 0x13
 5815 0267 3F       		.uleb128 0x3f
 5816 0268 19       		.uleb128 0x19
 5817 0269 3C       		.uleb128 0x3c
 5818 026a 19       		.uleb128 0x19
 5819 026b 00       		.byte	0
 5820 026c 00       		.byte	0
 5821 026d 2B       		.uleb128 0x2b
 5822 026e 34       		.uleb128 0x34
 5823 026f 00       		.byte	0
 5824 0270 03       		.uleb128 0x3
 5825 0271 0E       		.uleb128 0xe
 5826 0272 3A       		.uleb128 0x3a
 5827 0273 0B       		.uleb128 0xb
 5828 0274 3B       		.uleb128 0x3b
 5829 0275 0B       		.uleb128 0xb
 5830 0276 49       		.uleb128 0x49
 5831 0277 13       		.uleb128 0x13
 5832 0278 3F       		.uleb128 0x3f
 5833 0279 19       		.uleb128 0x19
 5834 027a 3C       		.uleb128 0x3c
 5835 027b 19       		.uleb128 0x19
 5836 027c 00       		.byte	0
 5837 027d 00       		.byte	0
 5838 027e 2C       		.uleb128 0x2c
 5839 027f 34       		.uleb128 0x34
 5840 0280 00       		.byte	0
 5841 0281 03       		.uleb128 0x3
 5842 0282 0E       		.uleb128 0xe
 5843 0283 3A       		.uleb128 0x3a
 5844 0284 0B       		.uleb128 0xb
 5845 0285 3B       		.uleb128 0x3b
 5846 0286 0B       		.uleb128 0xb
 5847 0287 49       		.uleb128 0x49
 5848 0288 13       		.uleb128 0x13
 5849 0289 3F       		.uleb128 0x3f
 5850 028a 19       		.uleb128 0x19
 5851 028b 02       		.uleb128 0x2
 5852 028c 18       		.uleb128 0x18
 5853 028d 00       		.byte	0
 5854 028e 00       		.byte	0
 5855 028f 2D       		.uleb128 0x2d
 5856 0290 2E       		.uleb128 0x2e
 5857 0291 00       		.byte	0
 5858 0292 3F       		.uleb128 0x3f
 5859 0293 19       		.uleb128 0x19
 5860 0294 3C       		.uleb128 0x3c
 5861 0295 19       		.uleb128 0x19
 5862 0296 6E       		.uleb128 0x6e
 5863 0297 0E       		.uleb128 0xe
 5864 0298 03       		.uleb128 0x3
 5865 0299 0E       		.uleb128 0xe
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 158


 5866 029a 3A       		.uleb128 0x3a
 5867 029b 0B       		.uleb128 0xb
 5868 029c 3B       		.uleb128 0x3b
 5869 029d 0B       		.uleb128 0xb
 5870 029e 00       		.byte	0
 5871 029f 00       		.byte	0
 5872 02a0 00       		.byte	0
 5873              		.section	.debug_loc,"",%progbits
 5874              	.Ldebug_loc0:
 5875              	.LLST0:
 5876 0000 00000000 		.4byte	.LVL0
 5877 0004 0A000000 		.4byte	.LVL1
 5878 0008 0100     		.2byte	0x1
 5879 000a 50       		.byte	0x50
 5880 000b 0A000000 		.4byte	.LVL1
 5881 000f 18000000 		.4byte	.LFE1
 5882 0013 0400     		.2byte	0x4
 5883 0015 F3       		.byte	0xf3
 5884 0016 01       		.uleb128 0x1
 5885 0017 50       		.byte	0x50
 5886 0018 9F       		.byte	0x9f
 5887 0019 00000000 		.4byte	0
 5888 001d 00000000 		.4byte	0
 5889              	.LLST1:
 5890 0021 00000000 		.4byte	.LVL2
 5891 0025 04000000 		.4byte	.LVL4
 5892 0029 0100     		.2byte	0x1
 5893 002b 50       		.byte	0x50
 5894 002c 04000000 		.4byte	.LVL4
 5895 0030 10000000 		.4byte	.LFE5
 5896 0034 0400     		.2byte	0x4
 5897 0036 F3       		.byte	0xf3
 5898 0037 01       		.uleb128 0x1
 5899 0038 50       		.byte	0x50
 5900 0039 9F       		.byte	0x9f
 5901 003a 00000000 		.4byte	0
 5902 003e 00000000 		.4byte	0
 5903              	.LLST2:
 5904 0042 00000000 		.4byte	.LVL2
 5905 0046 02000000 		.4byte	.LVL3
 5906 004a 0100     		.2byte	0x1
 5907 004c 51       		.byte	0x51
 5908 004d 02000000 		.4byte	.LVL3
 5909 0051 10000000 		.4byte	.LFE5
 5910 0055 0300     		.2byte	0x3
 5911 0057 71       		.byte	0x71
 5912 0058 01       		.sleb128 1
 5913 0059 9F       		.byte	0x9f
 5914 005a 00000000 		.4byte	0
 5915 005e 00000000 		.4byte	0
 5916              	.LLST3:
 5917 0062 00000000 		.4byte	.LVL6
 5918 0066 26000000 		.4byte	.LVL11
 5919 006a 0100     		.2byte	0x1
 5920 006c 50       		.byte	0x50
 5921 006d 26000000 		.4byte	.LVL11
 5922 0071 2A000000 		.4byte	.LVL13
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 159


 5923 0075 0100     		.2byte	0x1
 5924 0077 55       		.byte	0x55
 5925 0078 2A000000 		.4byte	.LVL13
 5926 007c 2C000000 		.4byte	.LVL14
 5927 0080 0100     		.2byte	0x1
 5928 0082 50       		.byte	0x50
 5929 0083 2C000000 		.4byte	.LVL14
 5930 0087 96000000 		.4byte	.LVL38
 5931 008b 0100     		.2byte	0x1
 5932 008d 55       		.byte	0x55
 5933 008e 96000000 		.4byte	.LVL38
 5934 0092 A0000000 		.4byte	.LFE23
 5935 0096 0400     		.2byte	0x4
 5936 0098 F3       		.byte	0xf3
 5937 0099 01       		.uleb128 0x1
 5938 009a 50       		.byte	0x50
 5939 009b 9F       		.byte	0x9f
 5940 009c 00000000 		.4byte	0
 5941 00a0 00000000 		.4byte	0
 5942              	.LLST4:
 5943 00a4 00000000 		.4byte	.LVL6
 5944 00a8 40000000 		.4byte	.LVL18
 5945 00ac 0100     		.2byte	0x1
 5946 00ae 51       		.byte	0x51
 5947 00af 40000000 		.4byte	.LVL18
 5948 00b3 A0000000 		.4byte	.LFE23
 5949 00b7 0400     		.2byte	0x4
 5950 00b9 F3       		.byte	0xf3
 5951 00ba 01       		.uleb128 0x1
 5952 00bb 51       		.byte	0x51
 5953 00bc 9F       		.byte	0x9f
 5954 00bd 00000000 		.4byte	0
 5955 00c1 00000000 		.4byte	0
 5956              	.LLST5:
 5957 00c5 0A000000 		.4byte	.LVL7
 5958 00c9 5A000000 		.4byte	.LVL25
 5959 00cd 0200     		.2byte	0x2
 5960 00cf 30       		.byte	0x30
 5961 00d0 9F       		.byte	0x9f
 5962 00d1 5A000000 		.4byte	.LVL25
 5963 00d5 78000000 		.4byte	.LVL31
 5964 00d9 0200     		.2byte	0x2
 5965 00db 91       		.byte	0x91
 5966 00dc 64       		.sleb128 -28
 5967 00dd 7A000000 		.4byte	.LVL32
 5968 00e1 A0000000 		.4byte	.LFE23
 5969 00e5 0200     		.2byte	0x2
 5970 00e7 91       		.byte	0x91
 5971 00e8 64       		.sleb128 -28
 5972 00e9 00000000 		.4byte	0
 5973 00ed 00000000 		.4byte	0
 5974              	.LLST6:
 5975 00f1 20000000 		.4byte	.LVL10
 5976 00f5 54000000 		.4byte	.LVL24
 5977 00f9 0100     		.2byte	0x1
 5978 00fb 57       		.byte	0x57
 5979 00fc 5E000000 		.4byte	.LVL26
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 160


 5980 0100 6A000000 		.4byte	.LVL27
 5981 0104 0100     		.2byte	0x1
 5982 0106 50       		.byte	0x50
 5983 0107 74000000 		.4byte	.LVL30
 5984 010b 7E000000 		.4byte	.LVL33
 5985 010f 0100     		.2byte	0x1
 5986 0111 50       		.byte	0x50
 5987 0112 00000000 		.4byte	0
 5988 0116 00000000 		.4byte	0
 5989              	.LLST7:
 5990 011a 52000000 		.4byte	.LVL23
 5991 011e 5A000000 		.4byte	.LVL25
 5992 0122 0200     		.2byte	0x2
 5993 0124 30       		.byte	0x30
 5994 0125 9F       		.byte	0x9f
 5995 0126 5A000000 		.4byte	.LVL25
 5996 012a 96000000 		.4byte	.LVL40
 5997 012e 0100     		.2byte	0x1
 5998 0130 57       		.byte	0x57
 5999 0131 00000000 		.4byte	0
 6000 0135 00000000 		.4byte	0
 6001              	.LLST8:
 6002 0139 5A000000 		.4byte	.LVL25
 6003 013d 6A000000 		.4byte	.LVL27
 6004 0141 0100     		.2byte	0x1
 6005 0143 52       		.byte	0x52
 6006 0144 6C000000 		.4byte	.LVL28
 6007 0148 6E000000 		.4byte	.LVL29
 6008 014c 0100     		.2byte	0x1
 6009 014e 53       		.byte	0x53
 6010 014f 6E000000 		.4byte	.LVL29
 6011 0153 82000000 		.4byte	.LVL35
 6012 0157 0100     		.2byte	0x1
 6013 0159 52       		.byte	0x52
 6014 015a 00000000 		.4byte	0
 6015 015e 00000000 		.4byte	0
 6016              	.LLST9:
 6017 0162 32000000 		.4byte	.LVL15
 6018 0166 52000000 		.4byte	.LVL23
 6019 016a 0100     		.2byte	0x1
 6020 016c 58       		.byte	0x58
 6021 016d 52000000 		.4byte	.LVL23
 6022 0171 5A000000 		.4byte	.LVL25
 6023 0175 0100     		.2byte	0x1
 6024 0177 50       		.byte	0x50
 6025 0178 5A000000 		.4byte	.LVL25
 6026 017c A0000000 		.4byte	.LFE23
 6027 0180 0100     		.2byte	0x1
 6028 0182 51       		.byte	0x51
 6029 0183 00000000 		.4byte	0
 6030 0187 00000000 		.4byte	0
 6031              	.LLST10:
 6032 018b 20000000 		.4byte	.LVL10
 6033 018f 28000000 		.4byte	.LVL12
 6034 0193 0200     		.2byte	0x2
 6035 0195 30       		.byte	0x30
 6036 0196 9F       		.byte	0x9f
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 161


 6037 0197 28000000 		.4byte	.LVL12
 6038 019b 2A000000 		.4byte	.LVL13
 6039 019f 0100     		.2byte	0x1
 6040 01a1 50       		.byte	0x50
 6041 01a2 2A000000 		.4byte	.LVL13
 6042 01a6 2C000000 		.4byte	.LVL14
 6043 01aa 0200     		.2byte	0x2
 6044 01ac 30       		.byte	0x30
 6045 01ad 9F       		.byte	0x9f
 6046 01ae 2C000000 		.4byte	.LVL14
 6047 01b2 3E000000 		.4byte	.LVL17
 6048 01b6 0100     		.2byte	0x1
 6049 01b8 50       		.byte	0x50
 6050 01b9 46000000 		.4byte	.LVL20
 6051 01bd 48000000 		.4byte	.LVL21
 6052 01c1 0100     		.2byte	0x1
 6053 01c3 50       		.byte	0x50
 6054 01c4 48000000 		.4byte	.LVL21
 6055 01c8 96000000 		.4byte	.LVL39
 6056 01cc 0100     		.2byte	0x1
 6057 01ce 56       		.byte	0x56
 6058 01cf 00000000 		.4byte	0
 6059 01d3 00000000 		.4byte	0
 6060              	.LLST11:
 6061 01d7 16000000 		.4byte	.LVL8
 6062 01db 43000000 		.4byte	.LVL19-1
 6063 01df 0100     		.2byte	0x1
 6064 01e1 52       		.byte	0x52
 6065 01e2 6A000000 		.4byte	.LVL27
 6066 01e6 6C000000 		.4byte	.LVL28
 6067 01ea 0E00     		.2byte	0xe
 6068 01ec 75       		.byte	0x75
 6069 01ed 00       		.sleb128 0
 6070 01ee 33       		.byte	0x33
 6071 01ef 24       		.byte	0x24
 6072 01f0 75       		.byte	0x75
 6073 01f1 00       		.sleb128 0
 6074 01f2 1C       		.byte	0x1c
 6075 01f3 32       		.byte	0x32
 6076 01f4 24       		.byte	0x24
 6077 01f5 72       		.byte	0x72
 6078 01f6 00       		.sleb128 0
 6079 01f7 22       		.byte	0x22
 6080 01f8 23       		.byte	0x23
 6081 01f9 04       		.uleb128 0x4
 6082 01fa 8A000000 		.4byte	.LVL36
 6083 01fe 96000000 		.4byte	.LVL38
 6084 0202 0E00     		.2byte	0xe
 6085 0204 75       		.byte	0x75
 6086 0205 00       		.sleb128 0
 6087 0206 33       		.byte	0x33
 6088 0207 24       		.byte	0x24
 6089 0208 75       		.byte	0x75
 6090 0209 00       		.sleb128 0
 6091 020a 1C       		.byte	0x1c
 6092 020b 32       		.byte	0x32
 6093 020c 24       		.byte	0x24
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 162


 6094 020d 72       		.byte	0x72
 6095 020e 00       		.sleb128 0
 6096 020f 22       		.byte	0x22
 6097 0210 23       		.byte	0x23
 6098 0211 04       		.uleb128 0x4
 6099 0212 96000000 		.4byte	.LVL38
 6100 0216 A0000000 		.4byte	.LFE23
 6101 021a 1000     		.2byte	0x10
 6102 021c F3       		.byte	0xf3
 6103 021d 01       		.uleb128 0x1
 6104 021e 50       		.byte	0x50
 6105 021f 33       		.byte	0x33
 6106 0220 24       		.byte	0x24
 6107 0221 F3       		.byte	0xf3
 6108 0222 01       		.uleb128 0x1
 6109 0223 50       		.byte	0x50
 6110 0224 1C       		.byte	0x1c
 6111 0225 32       		.byte	0x32
 6112 0226 24       		.byte	0x24
 6113 0227 72       		.byte	0x72
 6114 0228 00       		.sleb128 0
 6115 0229 22       		.byte	0x22
 6116 022a 23       		.byte	0x23
 6117 022b 04       		.uleb128 0x4
 6118 022c 00000000 		.4byte	0
 6119 0230 00000000 		.4byte	0
 6120              	.LLST12:
 6121 0234 18000000 		.4byte	.LVL9
 6122 0238 96000000 		.4byte	.LVL37
 6123 023c 0100     		.2byte	0x1
 6124 023e 54       		.byte	0x54
 6125 023f 00000000 		.4byte	0
 6126 0243 00000000 		.4byte	0
 6127              	.LLST13:
 6128 0247 00000000 		.4byte	.LVL41
 6129 024b 16000000 		.4byte	.LVL46
 6130 024f 0100     		.2byte	0x1
 6131 0251 50       		.byte	0x50
 6132 0252 16000000 		.4byte	.LVL46
 6133 0256 78000000 		.4byte	.LVL65
 6134 025a 0100     		.2byte	0x1
 6135 025c 57       		.byte	0x57
 6136 025d 78000000 		.4byte	.LVL65
 6137 0261 86000000 		.4byte	.LVL69
 6138 0265 0400     		.2byte	0x4
 6139 0267 F3       		.byte	0xf3
 6140 0268 01       		.uleb128 0x1
 6141 0269 50       		.byte	0x50
 6142 026a 9F       		.byte	0x9f
 6143 026b 86000000 		.4byte	.LVL69
 6144 026f 8E000000 		.4byte	.LVL73
 6145 0273 0100     		.2byte	0x1
 6146 0275 57       		.byte	0x57
 6147 0276 8E000000 		.4byte	.LVL73
 6148 027a 9C000000 		.4byte	.LFE24
 6149 027e 0400     		.2byte	0x4
 6150 0280 F3       		.byte	0xf3
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 163


 6151 0281 01       		.uleb128 0x1
 6152 0282 50       		.byte	0x50
 6153 0283 9F       		.byte	0x9f
 6154 0284 00000000 		.4byte	0
 6155 0288 00000000 		.4byte	0
 6156              	.LLST14:
 6157 028c 76000000 		.4byte	.LVL64
 6158 0290 84000000 		.4byte	.LVL68
 6159 0294 0100     		.2byte	0x1
 6160 0296 50       		.byte	0x50
 6161 0297 8E000000 		.4byte	.LVL73
 6162 029b 90000000 		.4byte	.LVL74
 6163 029f 0100     		.2byte	0x1
 6164 02a1 50       		.byte	0x50
 6165 02a2 00000000 		.4byte	0
 6166 02a6 00000000 		.4byte	0
 6167              	.LLST15:
 6168 02aa 12000000 		.4byte	.LVL45
 6169 02ae 1C000000 		.4byte	.LVL47
 6170 02b2 0200     		.2byte	0x2
 6171 02b4 30       		.byte	0x30
 6172 02b5 9F       		.byte	0x9f
 6173 02b6 1C000000 		.4byte	.LVL47
 6174 02ba 90000000 		.4byte	.LVL78
 6175 02be 0100     		.2byte	0x1
 6176 02c0 59       		.byte	0x59
 6177 02c1 00000000 		.4byte	0
 6178 02c5 00000000 		.4byte	0
 6179              	.LLST16:
 6180 02c9 12000000 		.4byte	.LVL45
 6181 02cd 1C000000 		.4byte	.LVL47
 6182 02d1 0300     		.2byte	0x3
 6183 02d3 08       		.byte	0x8
 6184 02d4 7F       		.byte	0x7f
 6185 02d5 9F       		.byte	0x9f
 6186 02d6 1C000000 		.4byte	.LVL47
 6187 02da 2C000000 		.4byte	.LVL49
 6188 02de 0100     		.2byte	0x1
 6189 02e0 50       		.byte	0x50
 6190 02e1 2E000000 		.4byte	.LVL50
 6191 02e5 42000000 		.4byte	.LVL53
 6192 02e9 0100     		.2byte	0x1
 6193 02eb 50       		.byte	0x50
 6194 02ec 46000000 		.4byte	.LVL54
 6195 02f0 6A000000 		.4byte	.LVL62
 6196 02f4 0100     		.2byte	0x1
 6197 02f6 50       		.byte	0x50
 6198 02f7 86000000 		.4byte	.LVL69
 6199 02fb 88000000 		.4byte	.LVL70
 6200 02ff 0100     		.2byte	0x1
 6201 0301 50       		.byte	0x50
 6202 0302 8A000000 		.4byte	.LVL71
 6203 0306 8C000000 		.4byte	.LVL72
 6204 030a 0100     		.2byte	0x1
 6205 030c 50       		.byte	0x50
 6206 030d 00000000 		.4byte	0
 6207 0311 00000000 		.4byte	0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 164


 6208              	.LLST17:
 6209 0315 0A000000 		.4byte	.LVL42
 6210 0319 82000000 		.4byte	.LVL67
 6211 031d 0200     		.2byte	0x2
 6212 031f 30       		.byte	0x30
 6213 0320 9F       		.byte	0x9f
 6214 0321 82000000 		.4byte	.LVL67
 6215 0325 86000000 		.4byte	.LVL69
 6216 0329 0200     		.2byte	0x2
 6217 032b 31       		.byte	0x31
 6218 032c 9F       		.byte	0x9f
 6219 032d 86000000 		.4byte	.LVL69
 6220 0331 90000000 		.4byte	.LVL74
 6221 0335 0200     		.2byte	0x2
 6222 0337 30       		.byte	0x30
 6223 0338 9F       		.byte	0x9f
 6224 0339 90000000 		.4byte	.LVL74
 6225 033d 9C000000 		.4byte	.LFE24
 6226 0341 0100     		.2byte	0x1
 6227 0343 50       		.byte	0x50
 6228 0344 00000000 		.4byte	0
 6229 0348 00000000 		.4byte	0
 6230              	.LLST18:
 6231 034c 12000000 		.4byte	.LVL45
 6232 0350 1C000000 		.4byte	.LVL47
 6233 0354 0200     		.2byte	0x2
 6234 0356 31       		.byte	0x31
 6235 0357 9F       		.byte	0x9f
 6236 0358 1C000000 		.4byte	.LVL47
 6237 035c 2E000000 		.4byte	.LVL50
 6238 0360 0100     		.2byte	0x1
 6239 0362 52       		.byte	0x52
 6240 0363 2E000000 		.4byte	.LVL50
 6241 0367 30000000 		.4byte	.LVL51
 6242 036b 0100     		.2byte	0x1
 6243 036d 53       		.byte	0x53
 6244 036e 30000000 		.4byte	.LVL51
 6245 0372 48000000 		.4byte	.LVL55
 6246 0376 0100     		.2byte	0x1
 6247 0378 52       		.byte	0x52
 6248 0379 48000000 		.4byte	.LVL55
 6249 037d 4A000000 		.4byte	.LVL56
 6250 0381 0100     		.2byte	0x1
 6251 0383 53       		.byte	0x53
 6252 0384 4A000000 		.4byte	.LVL56
 6253 0388 66000000 		.4byte	.LVL61
 6254 038c 0100     		.2byte	0x1
 6255 038e 52       		.byte	0x52
 6256 038f 86000000 		.4byte	.LVL69
 6257 0393 8E000000 		.4byte	.LVL73
 6258 0397 0100     		.2byte	0x1
 6259 0399 52       		.byte	0x52
 6260 039a 00000000 		.4byte	0
 6261 039e 00000000 		.4byte	0
 6262              	.LLST19:
 6263 03a2 12000000 		.4byte	.LVL45
 6264 03a6 5E000000 		.4byte	.LVL59
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 165


 6265 03aa 0100     		.2byte	0x1
 6266 03ac 55       		.byte	0x55
 6267 03ad 5E000000 		.4byte	.LVL59
 6268 03b1 6C000000 		.4byte	.LVL63
 6269 03b5 0100     		.2byte	0x1
 6270 03b7 53       		.byte	0x53
 6271 03b8 6C000000 		.4byte	.LVL63
 6272 03bc 80000000 		.4byte	.LVL66
 6273 03c0 0100     		.2byte	0x1
 6274 03c2 55       		.byte	0x55
 6275 03c3 80000000 		.4byte	.LVL66
 6276 03c7 86000000 		.4byte	.LVL69
 6277 03cb 0100     		.2byte	0x1
 6278 03cd 58       		.byte	0x58
 6279 03ce 86000000 		.4byte	.LVL69
 6280 03d2 8E000000 		.4byte	.LVL73
 6281 03d6 0100     		.2byte	0x1
 6282 03d8 53       		.byte	0x53
 6283 03d9 8E000000 		.4byte	.LVL73
 6284 03dd 90000000 		.4byte	.LVL74
 6285 03e1 0100     		.2byte	0x1
 6286 03e3 55       		.byte	0x55
 6287 03e4 90000000 		.4byte	.LVL74
 6288 03e8 90000000 		.4byte	.LVL77
 6289 03ec 0100     		.2byte	0x1
 6290 03ee 58       		.byte	0x58
 6291 03ef 00000000 		.4byte	0
 6292 03f3 00000000 		.4byte	0
 6293              	.LLST20:
 6294 03f7 0C000000 		.4byte	.LVL43
 6295 03fb 90000000 		.4byte	.LVL76
 6296 03ff 0100     		.2byte	0x1
 6297 0401 56       		.byte	0x56
 6298 0402 00000000 		.4byte	0
 6299 0406 00000000 		.4byte	0
 6300              	.LLST21:
 6301 040a 38000000 		.4byte	.LVL52
 6302 040e 64000000 		.4byte	.LVL60
 6303 0412 0100     		.2byte	0x1
 6304 0414 51       		.byte	0x51
 6305 0415 86000000 		.4byte	.LVL69
 6306 0419 8E000000 		.4byte	.LVL73
 6307 041d 0100     		.2byte	0x1
 6308 041f 51       		.byte	0x51
 6309 0420 00000000 		.4byte	0
 6310 0424 00000000 		.4byte	0
 6311              	.LLST22:
 6312 0428 0E000000 		.4byte	.LVL44
 6313 042c 90000000 		.4byte	.LVL75
 6314 0430 0100     		.2byte	0x1
 6315 0432 54       		.byte	0x54
 6316 0433 00000000 		.4byte	0
 6317 0437 00000000 		.4byte	0
 6318              	.LLST23:
 6319 043b 00000000 		.4byte	.LVL79
 6320 043f 24000000 		.4byte	.LVL84
 6321 0443 0100     		.2byte	0x1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 166


 6322 0445 50       		.byte	0x50
 6323 0446 24000000 		.4byte	.LVL84
 6324 044a C2000000 		.4byte	.LVL116
 6325 044e 0100     		.2byte	0x1
 6326 0450 57       		.byte	0x57
 6327 0451 C2000000 		.4byte	.LVL116
 6328 0455 CC000000 		.4byte	.LFE25
 6329 0459 0400     		.2byte	0x4
 6330 045b F3       		.byte	0xf3
 6331 045c 01       		.uleb128 0x1
 6332 045d 50       		.byte	0x50
 6333 045e 9F       		.byte	0x9f
 6334 045f 00000000 		.4byte	0
 6335 0463 00000000 		.4byte	0
 6336              	.LLST24:
 6337 0467 00000000 		.4byte	.LVL79
 6338 046b 24000000 		.4byte	.LVL84
 6339 046f 0100     		.2byte	0x1
 6340 0471 51       		.byte	0x51
 6341 0472 24000000 		.4byte	.LVL84
 6342 0476 C2000000 		.4byte	.LVL117
 6343 047a 0100     		.2byte	0x1
 6344 047c 5A       		.byte	0x5a
 6345 047d C2000000 		.4byte	.LVL117
 6346 0481 CC000000 		.4byte	.LFE25
 6347 0485 0400     		.2byte	0x4
 6348 0487 F3       		.byte	0xf3
 6349 0488 01       		.uleb128 0x1
 6350 0489 51       		.byte	0x51
 6351 048a 9F       		.byte	0x9f
 6352 048b 00000000 		.4byte	0
 6353 048f 00000000 		.4byte	0
 6354              	.LLST25:
 6355 0493 32000000 		.4byte	.LVL87
 6356 0497 38000000 		.4byte	.LVL88
 6357 049b 0200     		.2byte	0x2
 6358 049d 30       		.byte	0x30
 6359 049e 9F       		.byte	0x9f
 6360 049f 38000000 		.4byte	.LVL88
 6361 04a3 59000000 		.4byte	.LVL97-1
 6362 04a7 0100     		.2byte	0x1
 6363 04a9 52       		.byte	0x52
 6364 04aa 74000000 		.4byte	.LVL102
 6365 04ae 78000000 		.4byte	.LVL103
 6366 04b2 0200     		.2byte	0x2
 6367 04b4 30       		.byte	0x30
 6368 04b5 9F       		.byte	0x9f
 6369 04b6 78000000 		.4byte	.LVL103
 6370 04ba BA000000 		.4byte	.LVL113
 6371 04be 0100     		.2byte	0x1
 6372 04c0 56       		.byte	0x56
 6373 04c1 00000000 		.4byte	0
 6374 04c5 00000000 		.4byte	0
 6375              	.LLST26:
 6376 04c9 20000000 		.4byte	.LVL82
 6377 04cd 24000000 		.4byte	.LVL84
 6378 04d1 0200     		.2byte	0x2
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 167


 6379 04d3 31       		.byte	0x31
 6380 04d4 9F       		.byte	0x9f
 6381 04d5 24000000 		.4byte	.LVL84
 6382 04d9 BA000000 		.4byte	.LVL113
 6383 04dd 0100     		.2byte	0x1
 6384 04df 55       		.byte	0x55
 6385 04e0 BA000000 		.4byte	.LVL113
 6386 04e4 BC000000 		.4byte	.LVL114
 6387 04e8 0100     		.2byte	0x1
 6388 04ea 53       		.byte	0x53
 6389 04eb BC000000 		.4byte	.LVL114
 6390 04ef C2000000 		.4byte	.LVL115
 6391 04f3 0100     		.2byte	0x1
 6392 04f5 55       		.byte	0x55
 6393 04f6 C2000000 		.4byte	.LVL115
 6394 04fa CC000000 		.4byte	.LFE25
 6395 04fe 0300     		.2byte	0x3
 6396 0500 73       		.byte	0x73
 6397 0501 7F       		.sleb128 -1
 6398 0502 9F       		.byte	0x9f
 6399 0503 00000000 		.4byte	0
 6400 0507 00000000 		.4byte	0
 6401              	.LLST27:
 6402 050b 2C000000 		.4byte	.LVL85
 6403 050f 2E000000 		.4byte	.LVL86
 6404 0513 0100     		.2byte	0x1
 6405 0515 53       		.byte	0x53
 6406 0516 2E000000 		.4byte	.LVL86
 6407 051a 6A000000 		.4byte	.LVL101
 6408 051e 0100     		.2byte	0x1
 6409 0520 59       		.byte	0x59
 6410 0521 00000000 		.4byte	0
 6411 0525 00000000 		.4byte	0
 6412              	.LLST28:
 6413 0529 2C000000 		.4byte	.LVL85
 6414 052d 2E000000 		.4byte	.LVL86
 6415 0531 0100     		.2byte	0x1
 6416 0533 53       		.byte	0x53
 6417 0534 2E000000 		.4byte	.LVL86
 6418 0538 38000000 		.4byte	.LVL88
 6419 053c 0100     		.2byte	0x1
 6420 053e 59       		.byte	0x59
 6421 053f 38000000 		.4byte	.LVL88
 6422 0543 40000000 		.4byte	.LVL89
 6423 0547 0100     		.2byte	0x1
 6424 0549 54       		.byte	0x54
 6425 054a 40000000 		.4byte	.LVL89
 6426 054e 46000000 		.4byte	.LVL92
 6427 0552 0100     		.2byte	0x1
 6428 0554 51       		.byte	0x51
 6429 0555 46000000 		.4byte	.LVL92
 6430 0559 74000000 		.4byte	.LVL102
 6431 055d 0100     		.2byte	0x1
 6432 055f 54       		.byte	0x54
 6433 0560 00000000 		.4byte	0
 6434 0564 00000000 		.4byte	0
 6435              	.LLST29:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 168


 6436 0568 32000000 		.4byte	.LVL87
 6437 056c 42000000 		.4byte	.LVL90
 6438 0570 0100     		.2byte	0x1
 6439 0572 50       		.byte	0x50
 6440 0573 44000000 		.4byte	.LVL91
 6441 0577 54000000 		.4byte	.LVL96
 6442 057b 0100     		.2byte	0x1
 6443 057d 50       		.byte	0x50
 6444 057e 00000000 		.4byte	0
 6445 0582 00000000 		.4byte	0
 6446              	.LLST30:
 6447 0586 20000000 		.4byte	.LVL82
 6448 058a 22000000 		.4byte	.LVL83
 6449 058e 0100     		.2byte	0x1
 6450 0590 53       		.byte	0x53
 6451 0591 22000000 		.4byte	.LVL83
 6452 0595 CC000000 		.4byte	.LFE25
 6453 0599 0200     		.2byte	0x2
 6454 059b 91       		.byte	0x91
 6455 059c 5C       		.sleb128 -36
 6456 059d 00000000 		.4byte	0
 6457 05a1 00000000 		.4byte	0
 6458              	.LLST31:
 6459 05a5 5C000000 		.4byte	.LVL98
 6460 05a9 5E000000 		.4byte	.LVL99
 6461 05ad 0100     		.2byte	0x1
 6462 05af 50       		.byte	0x50
 6463 05b0 8E000000 		.4byte	.LVL105
 6464 05b4 A2000000 		.4byte	.LVL109
 6465 05b8 0100     		.2byte	0x1
 6466 05ba 50       		.byte	0x50
 6467 05bb 00000000 		.4byte	0
 6468 05bf 00000000 		.4byte	0
 6469              	.LLST32:
 6470 05c3 64000000 		.4byte	.LVL100
 6471 05c7 6A000000 		.4byte	.LVL101
 6472 05cb 0100     		.2byte	0x1
 6473 05cd 50       		.byte	0x50
 6474 05ce 6A000000 		.4byte	.LVL101
 6475 05d2 98000000 		.4byte	.LVL106
 6476 05d6 0100     		.2byte	0x1
 6477 05d8 59       		.byte	0x59
 6478 05d9 98000000 		.4byte	.LVL106
 6479 05dd 9C000000 		.4byte	.LVL107
 6480 05e1 0100     		.2byte	0x1
 6481 05e3 52       		.byte	0x52
 6482 05e4 9C000000 		.4byte	.LVL107
 6483 05e8 A0000000 		.4byte	.LVL108
 6484 05ec 0100     		.2byte	0x1
 6485 05ee 59       		.byte	0x59
 6486 05ef A0000000 		.4byte	.LVL108
 6487 05f3 A9000000 		.4byte	.LVL110-1
 6488 05f7 0100     		.2byte	0x1
 6489 05f9 52       		.byte	0x52
 6490 05fa A9000000 		.4byte	.LVL110-1
 6491 05fe BA000000 		.4byte	.LVL113
 6492 0602 0100     		.2byte	0x1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 169


 6493 0604 59       		.byte	0x59
 6494 0605 00000000 		.4byte	0
 6495 0609 00000000 		.4byte	0
 6496              	.LLST33:
 6497 060d 14000000 		.4byte	.LVL80
 6498 0611 16000000 		.4byte	.LVL81
 6499 0615 0100     		.2byte	0x1
 6500 0617 53       		.byte	0x53
 6501 0618 16000000 		.4byte	.LVL81
 6502 061c C2000000 		.4byte	.LVL118
 6503 0620 0100     		.2byte	0x1
 6504 0622 5B       		.byte	0x5b
 6505 0623 00000000 		.4byte	0
 6506 0627 00000000 		.4byte	0
 6507              	.LLST34:
 6508 062b 2E000000 		.4byte	.LVL86
 6509 062f 52000000 		.4byte	.LVL95
 6510 0633 0100     		.2byte	0x1
 6511 0635 53       		.byte	0x53
 6512 0636 74000000 		.4byte	.LVL102
 6513 063a BA000000 		.4byte	.LVL113
 6514 063e 0100     		.2byte	0x1
 6515 0640 54       		.byte	0x54
 6516 0641 00000000 		.4byte	0
 6517 0645 00000000 		.4byte	0
 6518              	.LLST35:
 6519 0649 00000000 		.4byte	.LVL119
 6520 064d 2E000000 		.4byte	.LVL123
 6521 0651 0100     		.2byte	0x1
 6522 0653 50       		.byte	0x50
 6523 0654 2E000000 		.4byte	.LVL123
 6524 0658 90000000 		.4byte	.LFE4
 6525 065c 0400     		.2byte	0x4
 6526 065e F3       		.byte	0xf3
 6527 065f 01       		.uleb128 0x1
 6528 0660 50       		.byte	0x50
 6529 0661 9F       		.byte	0x9f
 6530 0662 00000000 		.4byte	0
 6531 0666 00000000 		.4byte	0
 6532              	.LLST36:
 6533 066a 34000000 		.4byte	.LVL125
 6534 066e 7E000000 		.4byte	.LVL139
 6535 0672 0200     		.2byte	0x2
 6536 0674 91       		.byte	0x91
 6537 0675 5C       		.sleb128 -36
 6538 0676 00000000 		.4byte	0
 6539 067a 00000000 		.4byte	0
 6540              	.LLST37:
 6541 067e 28000000 		.4byte	.LVL122
 6542 0682 2E000000 		.4byte	.LVL123
 6543 0686 0200     		.2byte	0x2
 6544 0688 30       		.byte	0x30
 6545 0689 9F       		.byte	0x9f
 6546 068a 2E000000 		.4byte	.LVL123
 6547 068e 84000000 		.4byte	.LVL141
 6548 0692 0100     		.2byte	0x1
 6549 0694 55       		.byte	0x55
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 170


 6550 0695 00000000 		.4byte	0
 6551 0699 00000000 		.4byte	0
 6552              	.LLST38:
 6553 069d 1A000000 		.4byte	.LVL120
 6554 06a1 22000000 		.4byte	.LVL121
 6555 06a5 0200     		.2byte	0x2
 6556 06a7 30       		.byte	0x30
 6557 06a8 9F       		.byte	0x9f
 6558 06a9 28000000 		.4byte	.LVL122
 6559 06ad 84000000 		.4byte	.LVL143
 6560 06b1 0100     		.2byte	0x1
 6561 06b3 59       		.byte	0x59
 6562 06b4 00000000 		.4byte	0
 6563 06b8 00000000 		.4byte	0
 6564              	.LLST39:
 6565 06bc 1A000000 		.4byte	.LVL120
 6566 06c0 22000000 		.4byte	.LVL121
 6567 06c4 0200     		.2byte	0x2
 6568 06c6 35       		.byte	0x35
 6569 06c7 9F       		.byte	0x9f
 6570 06c8 28000000 		.4byte	.LVL122
 6571 06cc 84000000 		.4byte	.LVL142
 6572 06d0 0100     		.2byte	0x1
 6573 06d2 57       		.byte	0x57
 6574 06d3 00000000 		.4byte	0
 6575 06d7 00000000 		.4byte	0
 6576              	.LLST40:
 6577 06db 42000000 		.4byte	.LVL128
 6578 06df 58000000 		.4byte	.LVL131
 6579 06e3 0100     		.2byte	0x1
 6580 06e5 52       		.byte	0x52
 6581 06e6 58000000 		.4byte	.LVL131
 6582 06ea 62000000 		.4byte	.LVL133
 6583 06ee 0200     		.2byte	0x2
 6584 06f0 70       		.byte	0x70
 6585 06f1 00       		.sleb128 0
 6586 06f2 66000000 		.4byte	.LVL134
 6587 06f6 79000000 		.4byte	.LVL137-1
 6588 06fa 0100     		.2byte	0x1
 6589 06fc 53       		.byte	0x53
 6590 06fd 00000000 		.4byte	0
 6591 0701 00000000 		.4byte	0
 6592              	.LLST41:
 6593 0705 38000000 		.4byte	.LVL126
 6594 0709 66000000 		.4byte	.LVL134
 6595 070d 0100     		.2byte	0x1
 6596 070f 53       		.byte	0x53
 6597 0710 66000000 		.4byte	.LVL134
 6598 0714 68000000 		.4byte	.LVL135
 6599 0718 0200     		.2byte	0x2
 6600 071a 72       		.byte	0x72
 6601 071b 00       		.sleb128 0
 6602 071c 00000000 		.4byte	0
 6603 0720 00000000 		.4byte	0
 6604              	.LLST42:
 6605 0724 2E000000 		.4byte	.LVL123
 6606 0728 84000000 		.4byte	.LVL140
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 171


 6607 072c 0100     		.2byte	0x1
 6608 072e 54       		.byte	0x54
 6609 072f 00000000 		.4byte	0
 6610 0733 00000000 		.4byte	0
 6611              	.LLST43:
 6612 0737 3A000000 		.4byte	.LVL149
 6613 073b 46000000 		.4byte	.LVL151
 6614 073f 0100     		.2byte	0x1
 6615 0741 53       		.byte	0x53
 6616 0742 46000000 		.4byte	.LVL151
 6617 0746 48000000 		.4byte	.LVL152
 6618 074a 0200     		.2byte	0x2
 6619 074c 75       		.byte	0x75
 6620 074d 00       		.sleb128 0
 6621 074e 82000000 		.4byte	.LVL155
 6622 0752 90000000 		.4byte	.LVL157
 6623 0756 0100     		.2byte	0x1
 6624 0758 52       		.byte	0x52
 6625 0759 90000000 		.4byte	.LVL157
 6626 075d 92000000 		.4byte	.LVL158
 6627 0761 0200     		.2byte	0x2
 6628 0763 73       		.byte	0x73
 6629 0764 00       		.sleb128 0
 6630 0765 9E000000 		.4byte	.LVL159
 6631 0769 A6000000 		.4byte	.LVL161
 6632 076d 0100     		.2byte	0x1
 6633 076f 53       		.byte	0x53
 6634 0770 A6000000 		.4byte	.LVL161
 6635 0774 AC000000 		.4byte	.LVL162
 6636 0778 0200     		.2byte	0x2
 6637 077a 75       		.byte	0x75
 6638 077b 00       		.sleb128 0
 6639 077c 00000000 		.4byte	0
 6640 0780 00000000 		.4byte	0
 6641              	.LLST44:
 6642 0784 00000000 		.4byte	.LVL167
 6643 0788 0F000000 		.4byte	.LVL169-1
 6644 078c 0100     		.2byte	0x1
 6645 078e 50       		.byte	0x50
 6646 078f 0F000000 		.4byte	.LVL169-1
 6647 0793 1E000000 		.4byte	.LVL172
 6648 0797 0100     		.2byte	0x1
 6649 0799 57       		.byte	0x57
 6650 079a 1E000000 		.4byte	.LVL172
 6651 079e 60000000 		.4byte	.LFE10
 6652 07a2 0400     		.2byte	0x4
 6653 07a4 F3       		.byte	0xf3
 6654 07a5 01       		.uleb128 0x1
 6655 07a6 50       		.byte	0x50
 6656 07a7 9F       		.byte	0x9f
 6657 07a8 00000000 		.4byte	0
 6658 07ac 00000000 		.4byte	0
 6659              	.LLST45:
 6660 07b0 10000000 		.4byte	.LVL169
 6661 07b4 29000000 		.4byte	.LVL175-1
 6662 07b8 0100     		.2byte	0x1
 6663 07ba 50       		.byte	0x50
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 172


 6664 07bb 2E000000 		.4byte	.LVL176
 6665 07bf 45000000 		.4byte	.LVL181-1
 6666 07c3 0100     		.2byte	0x1
 6667 07c5 50       		.byte	0x50
 6668 07c6 00000000 		.4byte	0
 6669 07ca 00000000 		.4byte	0
 6670              	.LLST46:
 6671 07ce 0C000000 		.4byte	.LVL168
 6672 07d2 46000000 		.4byte	.LVL182
 6673 07d6 0100     		.2byte	0x1
 6674 07d8 55       		.byte	0x55
 6675 07d9 00000000 		.4byte	0
 6676 07dd 00000000 		.4byte	0
 6677              	.LLST47:
 6678 07e1 14000000 		.4byte	.LVL170
 6679 07e5 29000000 		.4byte	.LVL175-1
 6680 07e9 0100     		.2byte	0x1
 6681 07eb 52       		.byte	0x52
 6682 07ec 00000000 		.4byte	0
 6683 07f0 00000000 		.4byte	0
 6684              	.LLST48:
 6685 07f4 32000000 		.4byte	.LVL177
 6686 07f8 45000000 		.4byte	.LVL181-1
 6687 07fc 0100     		.2byte	0x1
 6688 07fe 53       		.byte	0x53
 6689 07ff 00000000 		.4byte	0
 6690 0803 00000000 		.4byte	0
 6691              	.LLST49:
 6692 0807 00000000 		.4byte	.LVL183
 6693 080b 08000000 		.4byte	.LVL184
 6694 080f 0100     		.2byte	0x1
 6695 0811 50       		.byte	0x50
 6696 0812 08000000 		.4byte	.LVL184
 6697 0816 19000000 		.4byte	.LVL188-1
 6698 081a 0100     		.2byte	0x1
 6699 081c 53       		.byte	0x53
 6700 081d 19000000 		.4byte	.LVL188-1
 6701 0821 2A000000 		.4byte	.LFE11
 6702 0825 0400     		.2byte	0x4
 6703 0827 F3       		.byte	0xf3
 6704 0828 01       		.uleb128 0x1
 6705 0829 50       		.byte	0x50
 6706 082a 9F       		.byte	0x9f
 6707 082b 00000000 		.4byte	0
 6708 082f 00000000 		.4byte	0
 6709              	.LLST50:
 6710 0833 00000000 		.4byte	.LVL183
 6711 0837 16000000 		.4byte	.LVL187
 6712 083b 0100     		.2byte	0x1
 6713 083d 51       		.byte	0x51
 6714 083e 16000000 		.4byte	.LVL187
 6715 0842 2A000000 		.4byte	.LFE11
 6716 0846 0400     		.2byte	0x4
 6717 0848 F3       		.byte	0xf3
 6718 0849 01       		.uleb128 0x1
 6719 084a 51       		.byte	0x51
 6720 084b 9F       		.byte	0x9f
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 173


 6721 084c 00000000 		.4byte	0
 6722 0850 00000000 		.4byte	0
 6723              	.LLST51:
 6724 0854 00000000 		.4byte	.LVL183
 6725 0858 19000000 		.4byte	.LVL188-1
 6726 085c 0100     		.2byte	0x1
 6727 085e 52       		.byte	0x52
 6728 085f 19000000 		.4byte	.LVL188-1
 6729 0863 1C000000 		.4byte	.LVL189
 6730 0867 0100     		.2byte	0x1
 6731 0869 54       		.byte	0x54
 6732 086a 1C000000 		.4byte	.LVL189
 6733 086e 28000000 		.4byte	.LVL192
 6734 0872 0300     		.2byte	0x3
 6735 0874 74       		.byte	0x74
 6736 0875 05       		.sleb128 5
 6737 0876 9F       		.byte	0x9f
 6738 0877 28000000 		.4byte	.LVL192
 6739 087b 2A000000 		.4byte	.LFE11
 6740 087f 0400     		.2byte	0x4
 6741 0881 F3       		.byte	0xf3
 6742 0882 01       		.uleb128 0x1
 6743 0883 52       		.byte	0x52
 6744 0884 9F       		.byte	0x9f
 6745 0885 00000000 		.4byte	0
 6746 0889 00000000 		.4byte	0
 6747              	.LLST52:
 6748 088d 0A000000 		.4byte	.LVL185
 6749 0891 19000000 		.4byte	.LVL188-1
 6750 0895 0100     		.2byte	0x1
 6751 0897 50       		.byte	0x50
 6752 0898 1A000000 		.4byte	.LVL188
 6753 089c 28000000 		.4byte	.LVL191
 6754 08a0 0100     		.2byte	0x1
 6755 08a2 50       		.byte	0x50
 6756 08a3 00000000 		.4byte	0
 6757 08a7 00000000 		.4byte	0
 6758              	.LLST53:
 6759 08ab 16000000 		.4byte	.LVL194
 6760 08af 37000000 		.4byte	.LVL202-1
 6761 08b3 0100     		.2byte	0x1
 6762 08b5 51       		.byte	0x51
 6763 08b6 00000000 		.4byte	0
 6764 08ba 00000000 		.4byte	0
 6765              	.LLST54:
 6766 08be 18000000 		.4byte	.LVL195
 6767 08c2 28000000 		.4byte	.LVL198
 6768 08c6 0100     		.2byte	0x1
 6769 08c8 53       		.byte	0x53
 6770 08c9 28000000 		.4byte	.LVL198
 6771 08cd 2A000000 		.4byte	.LVL199
 6772 08d1 0300     		.2byte	0x3
 6773 08d3 73       		.byte	0x73
 6774 08d4 05       		.sleb128 5
 6775 08d5 9F       		.byte	0x9f
 6776 08d6 00000000 		.4byte	0
 6777 08da 00000000 		.4byte	0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 174


 6778              	.LLST55:
 6779 08de 1A000000 		.4byte	.LVL196
 6780 08e2 37000000 		.4byte	.LVL202-1
 6781 08e6 0100     		.2byte	0x1
 6782 08e8 50       		.byte	0x50
 6783 08e9 00000000 		.4byte	0
 6784 08ed 00000000 		.4byte	0
 6785              	.LLST56:
 6786 08f1 14000000 		.4byte	.LVL193
 6787 08f5 18000000 		.4byte	.LVL195
 6788 08f9 0100     		.2byte	0x1
 6789 08fb 53       		.byte	0x53
 6790 08fc 00000000 		.4byte	0
 6791 0900 00000000 		.4byte	0
 6792              	.LLST57:
 6793 0904 00000000 		.4byte	.LVL203
 6794 0908 06000000 		.4byte	.LVL204
 6795 090c 0100     		.2byte	0x1
 6796 090e 50       		.byte	0x50
 6797 090f 06000000 		.4byte	.LVL204
 6798 0913 0D000000 		.4byte	.LVL205-1
 6799 0917 0100     		.2byte	0x1
 6800 0919 53       		.byte	0x53
 6801 091a 0D000000 		.4byte	.LVL205-1
 6802 091e 1C000000 		.4byte	.LFE13
 6803 0922 0400     		.2byte	0x4
 6804 0924 F3       		.byte	0xf3
 6805 0925 01       		.uleb128 0x1
 6806 0926 50       		.byte	0x50
 6807 0927 9F       		.byte	0x9f
 6808 0928 00000000 		.4byte	0
 6809 092c 00000000 		.4byte	0
 6810              	.LLST58:
 6811 0930 0E000000 		.4byte	.LVL205
 6812 0934 10000000 		.4byte	.LVL206
 6813 0938 0100     		.2byte	0x1
 6814 093a 50       		.byte	0x50
 6815 093b 00000000 		.4byte	0
 6816 093f 00000000 		.4byte	0
 6817              	.LLST59:
 6818 0943 06000000 		.4byte	.LVL204
 6819 0947 0D000000 		.4byte	.LVL205-1
 6820 094b 0100     		.2byte	0x1
 6821 094d 50       		.byte	0x50
 6822 094e 00000000 		.4byte	0
 6823 0952 00000000 		.4byte	0
 6824              	.LLST60:
 6825 0956 3E000000 		.4byte	.LVL208
 6826 095a 42000000 		.4byte	.LVL209
 6827 095e 0300     		.2byte	0x3
 6828 0960 08       		.byte	0x8
 6829 0961 F0       		.byte	0xf0
 6830 0962 9F       		.byte	0x9f
 6831 0963 42000000 		.4byte	.LVL209
 6832 0967 58000000 		.4byte	.LVL211
 6833 096b 0100     		.2byte	0x1
 6834 096d 53       		.byte	0x53
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 175


 6835 096e 00000000 		.4byte	0
 6836 0972 00000000 		.4byte	0
 6837              	.LLST61:
 6838 0976 AA000000 		.4byte	.LVL214
 6839 097a AE000000 		.4byte	.LVL215
 6840 097e 0300     		.2byte	0x3
 6841 0980 08       		.byte	0x8
 6842 0981 F0       		.byte	0xf0
 6843 0982 9F       		.byte	0x9f
 6844 0983 AE000000 		.4byte	.LVL215
 6845 0987 C0000000 		.4byte	.LVL217
 6846 098b 0100     		.2byte	0x1
 6847 098d 53       		.byte	0x53
 6848 098e 00000000 		.4byte	0
 6849 0992 00000000 		.4byte	0
 6850              	.LLST62:
 6851 0996 00000000 		.4byte	.LVL220
 6852 099a 0B000000 		.4byte	.LVL223-1
 6853 099e 0100     		.2byte	0x1
 6854 09a0 50       		.byte	0x50
 6855 09a1 0B000000 		.4byte	.LVL223-1
 6856 09a5 32000000 		.4byte	.LVL230
 6857 09a9 0100     		.2byte	0x1
 6858 09ab 54       		.byte	0x54
 6859 09ac 32000000 		.4byte	.LVL230
 6860 09b0 34000000 		.4byte	.LFE21
 6861 09b4 0400     		.2byte	0x4
 6862 09b6 F3       		.byte	0xf3
 6863 09b7 01       		.uleb128 0x1
 6864 09b8 50       		.byte	0x50
 6865 09b9 9F       		.byte	0x9f
 6866 09ba 00000000 		.4byte	0
 6867 09be 00000000 		.4byte	0
 6868              	.LLST63:
 6869 09c2 10000000 		.4byte	.LVL224
 6870 09c6 16000000 		.4byte	.LVL225
 6871 09ca 0100     		.2byte	0x1
 6872 09cc 53       		.byte	0x53
 6873 09cd 18000000 		.4byte	.LVL226
 6874 09d1 1E000000 		.4byte	.LVL227
 6875 09d5 0100     		.2byte	0x1
 6876 09d7 52       		.byte	0x52
 6877 09d8 1E000000 		.4byte	.LVL227
 6878 09dc 31000000 		.4byte	.LVL229-1
 6879 09e0 0100     		.2byte	0x1
 6880 09e2 53       		.byte	0x53
 6881 09e3 00000000 		.4byte	0
 6882 09e7 00000000 		.4byte	0
 6883              	.LLST64:
 6884 09eb 0C000000 		.4byte	.LVL223
 6885 09ef 31000000 		.4byte	.LVL229-1
 6886 09f3 0100     		.2byte	0x1
 6887 09f5 50       		.byte	0x50
 6888 09f6 00000000 		.4byte	0
 6889 09fa 00000000 		.4byte	0
 6890              	.LLST65:
 6891 09fe 06000000 		.4byte	.LVL221
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 176


 6892 0a02 32000000 		.4byte	.LVL231
 6893 0a06 0100     		.2byte	0x1
 6894 0a08 55       		.byte	0x55
 6895 0a09 00000000 		.4byte	0
 6896 0a0d 00000000 		.4byte	0
 6897              	.LLST66:
 6898 0a11 08000000 		.4byte	.LVL222
 6899 0a15 20000000 		.4byte	.LVL228
 6900 0a19 0100     		.2byte	0x1
 6901 0a1b 56       		.byte	0x56
 6902 0a1c 00000000 		.4byte	0
 6903 0a20 00000000 		.4byte	0
 6904              	.LLST67:
 6905 0a24 14000000 		.4byte	.LVL232
 6906 0a28 88000000 		.4byte	.LVL238
 6907 0a2c 0100     		.2byte	0x1
 6908 0a2e 57       		.byte	0x57
 6909 0a2f 00000000 		.4byte	0
 6910 0a33 00000000 		.4byte	0
 6911              	.LLST68:
 6912 0a37 00000000 		.4byte	.LVL239
 6913 0a3b 06000000 		.4byte	.LVL240
 6914 0a3f 0100     		.2byte	0x1
 6915 0a41 50       		.byte	0x50
 6916 0a42 06000000 		.4byte	.LVL240
 6917 0a46 28000000 		.4byte	.LFE19
 6918 0a4a 0400     		.2byte	0x4
 6919 0a4c F3       		.byte	0xf3
 6920 0a4d 01       		.uleb128 0x1
 6921 0a4e 50       		.byte	0x50
 6922 0a4f 9F       		.byte	0x9f
 6923 0a50 00000000 		.4byte	0
 6924 0a54 00000000 		.4byte	0
 6925              	.LLST69:
 6926 0a58 00000000 		.4byte	.LVL239
 6927 0a5c 10000000 		.4byte	.LVL241
 6928 0a60 0100     		.2byte	0x1
 6929 0a62 51       		.byte	0x51
 6930 0a63 10000000 		.4byte	.LVL241
 6931 0a67 28000000 		.4byte	.LFE19
 6932 0a6b 0400     		.2byte	0x4
 6933 0a6d F3       		.byte	0xf3
 6934 0a6e 01       		.uleb128 0x1
 6935 0a6f 51       		.byte	0x51
 6936 0a70 9F       		.byte	0x9f
 6937 0a71 00000000 		.4byte	0
 6938 0a75 00000000 		.4byte	0
 6939              	.LLST70:
 6940 0a79 00000000 		.4byte	.LVL243
 6941 0a7d 0B000000 		.4byte	.LVL246-1
 6942 0a81 0100     		.2byte	0x1
 6943 0a83 50       		.byte	0x50
 6944 0a84 0B000000 		.4byte	.LVL246-1
 6945 0a88 50000000 		.4byte	.LVL257
 6946 0a8c 0100     		.2byte	0x1
 6947 0a8e 54       		.byte	0x54
 6948 0a8f 50000000 		.4byte	.LVL257
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 177


 6949 0a93 64000000 		.4byte	.LFE22
 6950 0a97 0400     		.2byte	0x4
 6951 0a99 F3       		.byte	0xf3
 6952 0a9a 01       		.uleb128 0x1
 6953 0a9b 50       		.byte	0x50
 6954 0a9c 9F       		.byte	0x9f
 6955 0a9d 00000000 		.4byte	0
 6956 0aa1 00000000 		.4byte	0
 6957              	.LLST71:
 6958 0aa5 0C000000 		.4byte	.LVL246
 6959 0aa9 5B000000 		.4byte	.LVL258-1
 6960 0aad 0100     		.2byte	0x1
 6961 0aaf 50       		.byte	0x50
 6962 0ab0 00000000 		.4byte	0
 6963 0ab4 00000000 		.4byte	0
 6964              	.LLST72:
 6965 0ab8 06000000 		.4byte	.LVL244
 6966 0abc 5C000000 		.4byte	.LVL260
 6967 0ac0 0100     		.2byte	0x1
 6968 0ac2 56       		.byte	0x56
 6969 0ac3 00000000 		.4byte	0
 6970 0ac7 00000000 		.4byte	0
 6971              	.LLST73:
 6972 0acb 08000000 		.4byte	.LVL245
 6973 0acf 5C000000 		.4byte	.LVL259
 6974 0ad3 0100     		.2byte	0x1
 6975 0ad5 55       		.byte	0x55
 6976 0ad6 00000000 		.4byte	0
 6977 0ada 00000000 		.4byte	0
 6978              	.LLST74:
 6979 0ade 10000000 		.4byte	.LVL247
 6980 0ae2 4C000000 		.4byte	.LVL256
 6981 0ae6 0100     		.2byte	0x1
 6982 0ae8 51       		.byte	0x51
 6983 0ae9 00000000 		.4byte	0
 6984 0aed 00000000 		.4byte	0
 6985              	.LLST75:
 6986 0af1 1A000000 		.4byte	.LVL249
 6987 0af5 2E000000 		.4byte	.LVL251
 6988 0af9 0100     		.2byte	0x1
 6989 0afb 53       		.byte	0x53
 6990 0afc 38000000 		.4byte	.LVL253
 6991 0b00 4A000000 		.4byte	.LVL255
 6992 0b04 0100     		.2byte	0x1
 6993 0b06 53       		.byte	0x53
 6994 0b07 00000000 		.4byte	0
 6995 0b0b 00000000 		.4byte	0
 6996              	.LLST76:
 6997 0b0f 00000000 		.4byte	.LVL262
 6998 0b13 10000000 		.4byte	.LVL264
 6999 0b17 0100     		.2byte	0x1
 7000 0b19 50       		.byte	0x50
 7001 0b1a 10000000 		.4byte	.LVL264
 7002 0b1e 5C000000 		.4byte	.LFE14
 7003 0b22 0400     		.2byte	0x4
 7004 0b24 F3       		.byte	0xf3
 7005 0b25 01       		.uleb128 0x1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 178


 7006 0b26 50       		.byte	0x50
 7007 0b27 9F       		.byte	0x9f
 7008 0b28 00000000 		.4byte	0
 7009 0b2c 00000000 		.4byte	0
 7010              	.LLST77:
 7011 0b30 0E000000 		.4byte	.LVL263
 7012 0b34 4A000000 		.4byte	.LVL269
 7013 0b38 0100     		.2byte	0x1
 7014 0b3a 55       		.byte	0x55
 7015 0b3b 4A000000 		.4byte	.LVL269
 7016 0b3f 4A000000 		.4byte	.LVL270
 7017 0b43 1000     		.2byte	0x10
 7018 0b45 F3       		.byte	0xf3
 7019 0b46 01       		.uleb128 0x1
 7020 0b47 50       		.byte	0x50
 7021 0b48 33       		.byte	0x33
 7022 0b49 24       		.byte	0x24
 7023 0b4a F3       		.byte	0xf3
 7024 0b4b 01       		.uleb128 0x1
 7025 0b4c 50       		.byte	0x50
 7026 0b4d 1C       		.byte	0x1c
 7027 0b4e 32       		.byte	0x32
 7028 0b4f 24       		.byte	0x24
 7029 0b50 76       		.byte	0x76
 7030 0b51 00       		.sleb128 0
 7031 0b52 22       		.byte	0x22
 7032 0b53 23       		.byte	0x23
 7033 0b54 04       		.uleb128 0x4
 7034 0b55 00000000 		.4byte	0
 7035 0b59 00000000 		.4byte	0
 7036              	.LLST78:
 7037 0b5d 00000000 		.4byte	.LVL271
 7038 0b61 29000000 		.4byte	.LVL274-1
 7039 0b65 0100     		.2byte	0x1
 7040 0b67 50       		.byte	0x50
 7041 0b68 29000000 		.4byte	.LVL274-1
 7042 0b6c 70000000 		.4byte	.LFE15
 7043 0b70 0400     		.2byte	0x4
 7044 0b72 F3       		.byte	0xf3
 7045 0b73 01       		.uleb128 0x1
 7046 0b74 50       		.byte	0x50
 7047 0b75 9F       		.byte	0x9f
 7048 0b76 00000000 		.4byte	0
 7049 0b7a 00000000 		.4byte	0
 7050              	.LLST79:
 7051 0b7e 00000000 		.4byte	.LVL271
 7052 0b82 10000000 		.4byte	.LVL273
 7053 0b86 0100     		.2byte	0x1
 7054 0b88 51       		.byte	0x51
 7055 0b89 10000000 		.4byte	.LVL273
 7056 0b8d 70000000 		.4byte	.LFE15
 7057 0b91 0400     		.2byte	0x4
 7058 0b93 F3       		.byte	0xf3
 7059 0b94 01       		.uleb128 0x1
 7060 0b95 51       		.byte	0x51
 7061 0b96 9F       		.byte	0x9f
 7062 0b97 00000000 		.4byte	0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 179


 7063 0b9b 00000000 		.4byte	0
 7064              	.LLST80:
 7065 0b9f 0E000000 		.4byte	.LVL272
 7066 0ba3 54000000 		.4byte	.LVL278
 7067 0ba7 0100     		.2byte	0x1
 7068 0ba9 55       		.byte	0x55
 7069 0baa 00000000 		.4byte	0
 7070 0bae 00000000 		.4byte	0
 7071              	.LLST81:
 7072 0bb2 00000000 		.4byte	.LVL279
 7073 0bb6 20000000 		.4byte	.LVL284
 7074 0bba 0100     		.2byte	0x1
 7075 0bbc 50       		.byte	0x50
 7076 0bbd 20000000 		.4byte	.LVL284
 7077 0bc1 6C010000 		.4byte	.LFE26
 7078 0bc5 0200     		.2byte	0x2
 7079 0bc7 91       		.byte	0x91
 7080 0bc8 5C       		.sleb128 -36
 7081 0bc9 00000000 		.4byte	0
 7082 0bcd 00000000 		.4byte	0
 7083              	.LLST82:
 7084 0bd1 00000000 		.4byte	.LVL279
 7085 0bd5 3A000000 		.4byte	.LVL289
 7086 0bd9 0100     		.2byte	0x1
 7087 0bdb 51       		.byte	0x51
 7088 0bdc 3A000000 		.4byte	.LVL289
 7089 0be0 6C010000 		.4byte	.LFE26
 7090 0be4 0400     		.2byte	0x4
 7091 0be6 F3       		.byte	0xf3
 7092 0be7 01       		.uleb128 0x1
 7093 0be8 51       		.byte	0x51
 7094 0be9 9F       		.byte	0x9f
 7095 0bea 00000000 		.4byte	0
 7096 0bee 00000000 		.4byte	0
 7097              	.LLST83:
 7098 0bf2 44000000 		.4byte	.LVL291
 7099 0bf6 4A000000 		.4byte	.LVL292
 7100 0bfa 0200     		.2byte	0x2
 7101 0bfc 30       		.byte	0x30
 7102 0bfd 9F       		.byte	0x9f
 7103 0bfe 4A000000 		.4byte	.LVL292
 7104 0c02 4E000000 		.4byte	.LVL293
 7105 0c06 0100     		.2byte	0x1
 7106 0c08 52       		.byte	0x52
 7107 0c09 4E000000 		.4byte	.LVL293
 7108 0c0d 58010000 		.4byte	.LVL328
 7109 0c11 0200     		.2byte	0x2
 7110 0c13 7D       		.byte	0x7d
 7111 0c14 00       		.sleb128 0
 7112 0c15 58010000 		.4byte	.LVL328
 7113 0c19 6C010000 		.4byte	.LFE26
 7114 0c1d 0200     		.2byte	0x2
 7115 0c1f 91       		.byte	0x91
 7116 0c20 58       		.sleb128 -40
 7117 0c21 00000000 		.4byte	0
 7118 0c25 00000000 		.4byte	0
 7119              	.LLST84:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 180


 7120 0c29 1C000000 		.4byte	.LVL282
 7121 0c2d 20000000 		.4byte	.LVL284
 7122 0c31 0200     		.2byte	0x2
 7123 0c33 31       		.byte	0x31
 7124 0c34 9F       		.byte	0x9f
 7125 0c35 20000000 		.4byte	.LVL284
 7126 0c39 28000000 		.4byte	.LVL286
 7127 0c3d 0100     		.2byte	0x1
 7128 0c3f 52       		.byte	0x52
 7129 0c40 28000000 		.4byte	.LVL286
 7130 0c44 2A000000 		.4byte	.LVL287
 7131 0c48 0100     		.2byte	0x1
 7132 0c4a 53       		.byte	0x53
 7133 0c4b 2A000000 		.4byte	.LVL287
 7134 0c4f 32000000 		.4byte	.LVL288
 7135 0c53 0100     		.2byte	0x1
 7136 0c55 52       		.byte	0x52
 7137 0c56 64000000 		.4byte	.LVL294
 7138 0c5a 68000000 		.4byte	.LVL295
 7139 0c5e 0200     		.2byte	0x2
 7140 0c60 31       		.byte	0x31
 7141 0c61 9F       		.byte	0x9f
 7142 0c62 68000000 		.4byte	.LVL295
 7143 0c66 72000000 		.4byte	.LVL296
 7144 0c6a 0100     		.2byte	0x1
 7145 0c6c 52       		.byte	0x52
 7146 0c6d 72000000 		.4byte	.LVL296
 7147 0c71 74000000 		.4byte	.LVL297
 7148 0c75 0100     		.2byte	0x1
 7149 0c77 53       		.byte	0x53
 7150 0c78 74000000 		.4byte	.LVL297
 7151 0c7c 81000000 		.4byte	.LVL299-1
 7152 0c80 0100     		.2byte	0x1
 7153 0c82 52       		.byte	0x52
 7154 0c83 A2000000 		.4byte	.LVL305
 7155 0c87 B6000000 		.4byte	.LVL306
 7156 0c8b 0100     		.2byte	0x1
 7157 0c8d 52       		.byte	0x52
 7158 0c8e B8000000 		.4byte	.LVL307
 7159 0c92 BA000000 		.4byte	.LVL308
 7160 0c96 0100     		.2byte	0x1
 7161 0c98 53       		.byte	0x53
 7162 0c99 BA000000 		.4byte	.LVL308
 7163 0c9d C0000000 		.4byte	.LVL309
 7164 0ca1 0100     		.2byte	0x1
 7165 0ca3 52       		.byte	0x52
 7166 0ca4 C0000000 		.4byte	.LVL309
 7167 0ca8 C4000000 		.4byte	.LVL310
 7168 0cac 0200     		.2byte	0x2
 7169 0cae 31       		.byte	0x31
 7170 0caf 9F       		.byte	0x9f
 7171 0cb0 C4000000 		.4byte	.LVL310
 7172 0cb4 E4000000 		.4byte	.LVL311
 7173 0cb8 0100     		.2byte	0x1
 7174 0cba 52       		.byte	0x52
 7175 0cbb E4000000 		.4byte	.LVL311
 7176 0cbf E6000000 		.4byte	.LVL312
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 181


 7177 0cc3 0100     		.2byte	0x1
 7178 0cc5 53       		.byte	0x53
 7179 0cc6 E6000000 		.4byte	.LVL312
 7180 0cca 02010000 		.4byte	.LVL315
 7181 0cce 0100     		.2byte	0x1
 7182 0cd0 52       		.byte	0x52
 7183 0cd1 02010000 		.4byte	.LVL315
 7184 0cd5 04010000 		.4byte	.LVL316
 7185 0cd9 0100     		.2byte	0x1
 7186 0cdb 53       		.byte	0x53
 7187 0cdc 04010000 		.4byte	.LVL316
 7188 0ce0 0F010000 		.4byte	.LVL317-1
 7189 0ce4 0100     		.2byte	0x1
 7190 0ce6 52       		.byte	0x52
 7191 0ce7 44010000 		.4byte	.LVL323
 7192 0ceb 50010000 		.4byte	.LVL326
 7193 0cef 0100     		.2byte	0x1
 7194 0cf1 52       		.byte	0x52
 7195 0cf2 50010000 		.4byte	.LVL326
 7196 0cf6 52010000 		.4byte	.LVL327
 7197 0cfa 0100     		.2byte	0x1
 7198 0cfc 53       		.byte	0x53
 7199 0cfd 52010000 		.4byte	.LVL327
 7200 0d01 6C010000 		.4byte	.LFE26
 7201 0d05 0100     		.2byte	0x1
 7202 0d07 52       		.byte	0x52
 7203 0d08 00000000 		.4byte	0
 7204 0d0c 00000000 		.4byte	0
 7205              	.LLST85:
 7206 0d10 64000000 		.4byte	.LVL294
 7207 0d14 7A000000 		.4byte	.LVL298
 7208 0d18 0300     		.2byte	0x3
 7209 0d1a 08       		.byte	0x8
 7210 0d1b 40       		.byte	0x40
 7211 0d1c 9F       		.byte	0x9f
 7212 0d1d 7A000000 		.4byte	.LVL298
 7213 0d21 2C010000 		.4byte	.LVL322
 7214 0d25 0100     		.2byte	0x1
 7215 0d27 54       		.byte	0x54
 7216 0d28 00000000 		.4byte	0
 7217 0d2c 00000000 		.4byte	0
 7218              	.LLST86:
 7219 0d30 44000000 		.4byte	.LVL291
 7220 0d34 4A000000 		.4byte	.LVL292
 7221 0d38 0100     		.2byte	0x1
 7222 0d3a 50       		.byte	0x50
 7223 0d3b 4A000000 		.4byte	.LVL292
 7224 0d3f 58010000 		.4byte	.LVL330
 7225 0d43 0100     		.2byte	0x1
 7226 0d45 56       		.byte	0x56
 7227 0d46 00000000 		.4byte	0
 7228 0d4a 00000000 		.4byte	0
 7229              	.LLST87:
 7230 0d4e 8C000000 		.4byte	.LVL301
 7231 0d52 90000000 		.4byte	.LVL302
 7232 0d56 0600     		.2byte	0x6
 7233 0d58 0C       		.byte	0xc
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 182


 7234 0d59 00A60E00 		.4byte	0xea600
 7235 0d5d 9F       		.byte	0x9f
 7236 0d5e 90000000 		.4byte	.LVL302
 7237 0d62 A0000000 		.4byte	.LVL304
 7238 0d66 0100     		.2byte	0x1
 7239 0d68 53       		.byte	0x53
 7240 0d69 A0000000 		.4byte	.LVL304
 7241 0d6d A2000000 		.4byte	.LVL305
 7242 0d71 0300     		.2byte	0x3
 7243 0d73 73       		.byte	0x73
 7244 0d74 7F       		.sleb128 -1
 7245 0d75 9F       		.byte	0x9f
 7246 0d76 B6000000 		.4byte	.LVL306
 7247 0d7a B8000000 		.4byte	.LVL307
 7248 0d7e 0100     		.2byte	0x1
 7249 0d80 53       		.byte	0x53
 7250 0d81 14010000 		.4byte	.LVL318
 7251 0d85 18010000 		.4byte	.LVL319
 7252 0d89 0600     		.2byte	0x6
 7253 0d8b 0C       		.byte	0xc
 7254 0d8c 00A60E00 		.4byte	0xea600
 7255 0d90 9F       		.byte	0x9f
 7256 0d91 18010000 		.4byte	.LVL319
 7257 0d95 28010000 		.4byte	.LVL321
 7258 0d99 0100     		.2byte	0x1
 7259 0d9b 53       		.byte	0x53
 7260 0d9c 00000000 		.4byte	0
 7261 0da0 00000000 		.4byte	0
 7262              	.LLST88:
 7263 0da4 1C000000 		.4byte	.LVL282
 7264 0da8 58010000 		.4byte	.LVL329
 7265 0dac 0100     		.2byte	0x1
 7266 0dae 55       		.byte	0x55
 7267 0daf 58010000 		.4byte	.LVL329
 7268 0db3 58010000 		.4byte	.LVL331
 7269 0db7 0300     		.2byte	0x3
 7270 0db9 7A       		.byte	0x7a
 7271 0dba 09       		.sleb128 9
 7272 0dbb 9F       		.byte	0x9f
 7273 0dbc 00000000 		.4byte	0
 7274 0dc0 00000000 		.4byte	0
 7275              	.LLST89:
 7276 0dc4 1C000000 		.4byte	.LVL282
 7277 0dc8 24000000 		.4byte	.LVL285
 7278 0dcc 0300     		.2byte	0x3
 7279 0dce 91       		.byte	0x91
 7280 0dcf 64       		.sleb128 -28
 7281 0dd0 9F       		.byte	0x9f
 7282 0dd1 24000000 		.4byte	.LVL285
 7283 0dd5 28000000 		.4byte	.LVL286
 7284 0dd9 0100     		.2byte	0x1
 7285 0ddb 53       		.byte	0x53
 7286 0ddc 28000000 		.4byte	.LVL286
 7287 0de0 F4000000 		.4byte	.LVL313
 7288 0de4 0300     		.2byte	0x3
 7289 0de6 91       		.byte	0x91
 7290 0de7 64       		.sleb128 -28
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 183


 7291 0de8 9F       		.byte	0x9f
 7292 0de9 F4000000 		.4byte	.LVL313
 7293 0ded F6000000 		.4byte	.LVL314
 7294 0df1 0100     		.2byte	0x1
 7295 0df3 53       		.byte	0x53
 7296 0df4 F6000000 		.4byte	.LVL314
 7297 0df8 46010000 		.4byte	.LVL324
 7298 0dfc 0300     		.2byte	0x3
 7299 0dfe 91       		.byte	0x91
 7300 0dff 64       		.sleb128 -28
 7301 0e00 9F       		.byte	0x9f
 7302 0e01 46010000 		.4byte	.LVL324
 7303 0e05 4A010000 		.4byte	.LVL325
 7304 0e09 0100     		.2byte	0x1
 7305 0e0b 53       		.byte	0x53
 7306 0e0c 4A010000 		.4byte	.LVL325
 7307 0e10 6C010000 		.4byte	.LFE26
 7308 0e14 0300     		.2byte	0x3
 7309 0e16 91       		.byte	0x91
 7310 0e17 64       		.sleb128 -28
 7311 0e18 9F       		.byte	0x9f
 7312 0e19 00000000 		.4byte	0
 7313 0e1d 00000000 		.4byte	0
 7314              	.LLST90:
 7315 0e21 64000000 		.4byte	.LVL294
 7316 0e25 2C010000 		.4byte	.LVL322
 7317 0e29 0100     		.2byte	0x1
 7318 0e2b 57       		.byte	0x57
 7319 0e2c 00000000 		.4byte	0
 7320 0e30 00000000 		.4byte	0
 7321              	.LLST91:
 7322 0e34 18000000 		.4byte	.LVL281
 7323 0e38 1E000000 		.4byte	.LVL283
 7324 0e3c 0100     		.2byte	0x1
 7325 0e3e 53       		.byte	0x53
 7326 0e3f 1E000000 		.4byte	.LVL283
 7327 0e43 58010000 		.4byte	.LVL331
 7328 0e47 0100     		.2byte	0x1
 7329 0e49 5A       		.byte	0x5a
 7330 0e4a 00000000 		.4byte	0
 7331 0e4e 00000000 		.4byte	0
 7332              	.LLST92:
 7333 0e52 00000000 		.4byte	.LVL332
 7334 0e56 06000000 		.4byte	.LVL333
 7335 0e5a 0100     		.2byte	0x1
 7336 0e5c 50       		.byte	0x50
 7337 0e5d 06000000 		.4byte	.LVL333
 7338 0e61 28000000 		.4byte	.LFE20
 7339 0e65 0400     		.2byte	0x4
 7340 0e67 F3       		.byte	0xf3
 7341 0e68 01       		.uleb128 0x1
 7342 0e69 50       		.byte	0x50
 7343 0e6a 9F       		.byte	0x9f
 7344 0e6b 00000000 		.4byte	0
 7345 0e6f 00000000 		.4byte	0
 7346              	.LLST93:
 7347 0e73 00000000 		.4byte	.LVL332
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 184


 7348 0e77 10000000 		.4byte	.LVL334
 7349 0e7b 0100     		.2byte	0x1
 7350 0e7d 51       		.byte	0x51
 7351 0e7e 10000000 		.4byte	.LVL334
 7352 0e82 28000000 		.4byte	.LFE20
 7353 0e86 0400     		.2byte	0x4
 7354 0e88 F3       		.byte	0xf3
 7355 0e89 01       		.uleb128 0x1
 7356 0e8a 51       		.byte	0x51
 7357 0e8b 9F       		.byte	0x9f
 7358 0e8c 00000000 		.4byte	0
 7359 0e90 00000000 		.4byte	0
 7360              	.LLST94:
 7361 0e94 00000000 		.4byte	.LVL336
 7362 0e98 1E000000 		.4byte	.LVL339
 7363 0e9c 0100     		.2byte	0x1
 7364 0e9e 50       		.byte	0x50
 7365 0e9f 1E000000 		.4byte	.LVL339
 7366 0ea3 62000000 		.4byte	.LVL349
 7367 0ea7 0100     		.2byte	0x1
 7368 0ea9 54       		.byte	0x54
 7369 0eaa 62000000 		.4byte	.LVL349
 7370 0eae 64000000 		.4byte	.LVL350
 7371 0eb2 0100     		.2byte	0x1
 7372 0eb4 50       		.byte	0x50
 7373 0eb5 64000000 		.4byte	.LVL350
 7374 0eb9 68000000 		.4byte	.LVL353
 7375 0ebd 0100     		.2byte	0x1
 7376 0ebf 54       		.byte	0x54
 7377 0ec0 68000000 		.4byte	.LVL353
 7378 0ec4 78000000 		.4byte	.LFE27
 7379 0ec8 0400     		.2byte	0x4
 7380 0eca F3       		.byte	0xf3
 7381 0ecb 01       		.uleb128 0x1
 7382 0ecc 50       		.byte	0x50
 7383 0ecd 9F       		.byte	0x9f
 7384 0ece 00000000 		.4byte	0
 7385 0ed2 00000000 		.4byte	0
 7386              	.LLST95:
 7387 0ed6 00000000 		.4byte	.LVL336
 7388 0eda 1E000000 		.4byte	.LVL339
 7389 0ede 0100     		.2byte	0x1
 7390 0ee0 51       		.byte	0x51
 7391 0ee1 1E000000 		.4byte	.LVL339
 7392 0ee5 62000000 		.4byte	.LVL349
 7393 0ee9 0100     		.2byte	0x1
 7394 0eeb 55       		.byte	0x55
 7395 0eec 62000000 		.4byte	.LVL349
 7396 0ef0 66000000 		.4byte	.LVL351
 7397 0ef4 0100     		.2byte	0x1
 7398 0ef6 51       		.byte	0x51
 7399 0ef7 66000000 		.4byte	.LVL351
 7400 0efb 68000000 		.4byte	.LVL354
 7401 0eff 0100     		.2byte	0x1
 7402 0f01 55       		.byte	0x55
 7403 0f02 68000000 		.4byte	.LVL354
 7404 0f06 78000000 		.4byte	.LFE27
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 185


 7405 0f0a 0400     		.2byte	0x4
 7406 0f0c F3       		.byte	0xf3
 7407 0f0d 01       		.uleb128 0x1
 7408 0f0e 51       		.byte	0x51
 7409 0f0f 9F       		.byte	0x9f
 7410 0f10 00000000 		.4byte	0
 7411 0f14 00000000 		.4byte	0
 7412              	.LLST96:
 7413 0f18 06000000 		.4byte	.LVL337
 7414 0f1c 60000000 		.4byte	.LVL348
 7415 0f20 0200     		.2byte	0x2
 7416 0f22 30       		.byte	0x30
 7417 0f23 9F       		.byte	0x9f
 7418 0f24 60000000 		.4byte	.LVL348
 7419 0f28 62000000 		.4byte	.LVL349
 7420 0f2c 0100     		.2byte	0x1
 7421 0f2e 50       		.byte	0x50
 7422 0f2f 62000000 		.4byte	.LVL349
 7423 0f33 68000000 		.4byte	.LVL352
 7424 0f37 0200     		.2byte	0x2
 7425 0f39 30       		.byte	0x30
 7426 0f3a 9F       		.byte	0x9f
 7427 0f3b 68000000 		.4byte	.LVL352
 7428 0f3f 78000000 		.4byte	.LFE27
 7429 0f43 0100     		.2byte	0x1
 7430 0f45 50       		.byte	0x50
 7431 0f46 00000000 		.4byte	0
 7432 0f4a 00000000 		.4byte	0
 7433              	.LLST97:
 7434 0f4e 42000000 		.4byte	.LVL345
 7435 0f52 46000000 		.4byte	.LVL346
 7436 0f56 0600     		.2byte	0x6
 7437 0f58 0C       		.byte	0xc
 7438 0f59 00366E01 		.4byte	0x16e3600
 7439 0f5d 9F       		.byte	0x9f
 7440 0f5e 46000000 		.4byte	.LVL346
 7441 0f62 5F000000 		.4byte	.LVL348-1
 7442 0f66 0100     		.2byte	0x1
 7443 0f68 53       		.byte	0x53
 7444 0f69 66000000 		.4byte	.LVL351
 7445 0f6d 68000000 		.4byte	.LVL352
 7446 0f71 0100     		.2byte	0x1
 7447 0f73 53       		.byte	0x53
 7448 0f74 00000000 		.4byte	0
 7449 0f78 00000000 		.4byte	0
 7450              	.LLST98:
 7451 0f7c 2C000000 		.4byte	.LVL341
 7452 0f80 34000000 		.4byte	.LVL342
 7453 0f84 0100     		.2byte	0x1
 7454 0f86 50       		.byte	0x50
 7455 0f87 00000000 		.4byte	0
 7456 0f8b 00000000 		.4byte	0
 7457              	.LLST99:
 7458 0f8f 10000000 		.4byte	.LVL338
 7459 0f93 68000000 		.4byte	.LVL355
 7460 0f97 0100     		.2byte	0x1
 7461 0f99 56       		.byte	0x56
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 186


 7462 0f9a 00000000 		.4byte	0
 7463 0f9e 00000000 		.4byte	0
 7464              		.section	.debug_aranges,"",%progbits
 7465 0000 EC000000 		.4byte	0xec
 7466 0004 0200     		.2byte	0x2
 7467 0006 00000000 		.4byte	.Ldebug_info0
 7468 000a 04       		.byte	0x4
 7469 000b 00       		.byte	0
 7470 000c 0000     		.2byte	0
 7471 000e 0000     		.2byte	0
 7472 0010 00000000 		.4byte	.LFB1
 7473 0014 18000000 		.4byte	.LFE1-.LFB1
 7474 0018 00000000 		.4byte	.LFB5
 7475 001c 10000000 		.4byte	.LFE5-.LFB5
 7476 0020 00000000 		.4byte	.LFB6
 7477 0024 54000000 		.4byte	.LFE6-.LFB6
 7478 0028 00000000 		.4byte	.LFB7
 7479 002c 1C000000 		.4byte	.LFE7-.LFB7
 7480 0030 00000000 		.4byte	.LFB23
 7481 0034 A0000000 		.4byte	.LFE23-.LFB23
 7482 0038 00000000 		.4byte	.LFB24
 7483 003c 9C000000 		.4byte	.LFE24-.LFB24
 7484 0040 00000000 		.4byte	.LFB25
 7485 0044 CC000000 		.4byte	.LFE25-.LFB25
 7486 0048 00000000 		.4byte	.LFB4
 7487 004c 90000000 		.4byte	.LFE4-.LFB4
 7488 0050 00000000 		.4byte	.LFB2
 7489 0054 0A000000 		.4byte	.LFE2-.LFB2
 7490 0058 00000000 		.4byte	.LFB3
 7491 005c 0A000000 		.4byte	.LFE3-.LFB3
 7492 0060 00000000 		.4byte	.LFB8
 7493 0064 6C010000 		.4byte	.LFE8-.LFB8
 7494 0068 00000000 		.4byte	.LFB10
 7495 006c 60000000 		.4byte	.LFE10-.LFB10
 7496 0070 00000000 		.4byte	.LFB11
 7497 0074 2A000000 		.4byte	.LFE11-.LFB11
 7498 0078 00000000 		.4byte	.LFB12
 7499 007c 44000000 		.4byte	.LFE12-.LFB12
 7500 0080 00000000 		.4byte	.LFB13
 7501 0084 1C000000 		.4byte	.LFE13-.LFB13
 7502 0088 00000000 		.4byte	.LFB16
 7503 008c F8000000 		.4byte	.LFE16-.LFB16
 7504 0090 00000000 		.4byte	.LFB17
 7505 0094 20000000 		.4byte	.LFE17-.LFB17
 7506 0098 00000000 		.4byte	.LFB21
 7507 009c 34000000 		.4byte	.LFE21-.LFB21
 7508 00a0 00000000 		.4byte	.LFB18
 7509 00a4 A8000000 		.4byte	.LFE18-.LFB18
 7510 00a8 00000000 		.4byte	.LFB19
 7511 00ac 28000000 		.4byte	.LFE19-.LFB19
 7512 00b0 00000000 		.4byte	.LFB22
 7513 00b4 64000000 		.4byte	.LFE22-.LFB22
 7514 00b8 00000000 		.4byte	.LFB9
 7515 00bc 24000000 		.4byte	.LFE9-.LFB9
 7516 00c0 00000000 		.4byte	.LFB14
 7517 00c4 5C000000 		.4byte	.LFE14-.LFB14
 7518 00c8 00000000 		.4byte	.LFB15
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 187


 7519 00cc 70000000 		.4byte	.LFE15-.LFB15
 7520 00d0 00000000 		.4byte	.LFB26
 7521 00d4 6C010000 		.4byte	.LFE26-.LFB26
 7522 00d8 00000000 		.4byte	.LFB20
 7523 00dc 28000000 		.4byte	.LFE20-.LFB20
 7524 00e0 00000000 		.4byte	.LFB27
 7525 00e4 78000000 		.4byte	.LFE27-.LFB27
 7526 00e8 00000000 		.4byte	0
 7527 00ec 00000000 		.4byte	0
 7528              		.section	.debug_ranges,"",%progbits
 7529              	.Ldebug_ranges0:
 7530 0000 00000000 		.4byte	.LFB1
 7531 0004 18000000 		.4byte	.LFE1
 7532 0008 00000000 		.4byte	.LFB5
 7533 000c 10000000 		.4byte	.LFE5
 7534 0010 00000000 		.4byte	.LFB6
 7535 0014 54000000 		.4byte	.LFE6
 7536 0018 00000000 		.4byte	.LFB7
 7537 001c 1C000000 		.4byte	.LFE7
 7538 0020 00000000 		.4byte	.LFB23
 7539 0024 A0000000 		.4byte	.LFE23
 7540 0028 00000000 		.4byte	.LFB24
 7541 002c 9C000000 		.4byte	.LFE24
 7542 0030 00000000 		.4byte	.LFB25
 7543 0034 CC000000 		.4byte	.LFE25
 7544 0038 00000000 		.4byte	.LFB4
 7545 003c 90000000 		.4byte	.LFE4
 7546 0040 00000000 		.4byte	.LFB2
 7547 0044 0A000000 		.4byte	.LFE2
 7548 0048 00000000 		.4byte	.LFB3
 7549 004c 0A000000 		.4byte	.LFE3
 7550 0050 00000000 		.4byte	.LFB8
 7551 0054 6C010000 		.4byte	.LFE8
 7552 0058 00000000 		.4byte	.LFB10
 7553 005c 60000000 		.4byte	.LFE10
 7554 0060 00000000 		.4byte	.LFB11
 7555 0064 2A000000 		.4byte	.LFE11
 7556 0068 00000000 		.4byte	.LFB12
 7557 006c 44000000 		.4byte	.LFE12
 7558 0070 00000000 		.4byte	.LFB13
 7559 0074 1C000000 		.4byte	.LFE13
 7560 0078 00000000 		.4byte	.LFB16
 7561 007c F8000000 		.4byte	.LFE16
 7562 0080 00000000 		.4byte	.LFB17
 7563 0084 20000000 		.4byte	.LFE17
 7564 0088 00000000 		.4byte	.LFB21
 7565 008c 34000000 		.4byte	.LFE21
 7566 0090 00000000 		.4byte	.LFB18
 7567 0094 A8000000 		.4byte	.LFE18
 7568 0098 00000000 		.4byte	.LFB19
 7569 009c 28000000 		.4byte	.LFE19
 7570 00a0 00000000 		.4byte	.LFB22
 7571 00a4 64000000 		.4byte	.LFE22
 7572 00a8 00000000 		.4byte	.LFB9
 7573 00ac 24000000 		.4byte	.LFE9
 7574 00b0 00000000 		.4byte	.LFB14
 7575 00b4 5C000000 		.4byte	.LFE14
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 188


 7576 00b8 00000000 		.4byte	.LFB15
 7577 00bc 70000000 		.4byte	.LFE15
 7578 00c0 00000000 		.4byte	.LFB26
 7579 00c4 6C010000 		.4byte	.LFE26
 7580 00c8 00000000 		.4byte	.LFB20
 7581 00cc 28000000 		.4byte	.LFE20
 7582 00d0 00000000 		.4byte	.LFB27
 7583 00d4 78000000 		.4byte	.LFE27
 7584 00d8 00000000 		.4byte	0
 7585 00dc 00000000 		.4byte	0
 7586              		.section	.debug_line,"",%progbits
 7587              	.Ldebug_line0:
 7588 0000 7D050000 		.section	.debug_str,"MS",%progbits,1
 7588      0200BA00 
 7588      00000201 
 7588      FB0E0D00 
 7588      01010101 
 7589              	.LASF101:
 7590 0000 43617053 		.ascii	"CapSense_SsSetShieldDelay\000"
 7590      656E7365 
 7590      5F537353 
 7590      65745368 
 7590      69656C64 
 7591              	.LASF146:
 7592 001a 69646163 		.ascii	"idacBRegValue\000"
 7592      42526567 
 7592      56616C75 
 7592      6500
 7593              	.LASF40:
 7594 0028 766F6C5F 		.ascii	"vol_up\000"
 7594      757000
 7595              	.LASF157:
 7596 002f 736E7341 		.ascii	"snsAddrPtr\000"
 7596      64647250 
 7596      747200
 7597              	.LASF150:
 7598 003a 43617053 		.ascii	"CapSense_SsCSDCalculateScanDuration\000"
 7598      656E7365 
 7598      5F537343 
 7598      53444361 
 7598      6C63756C 
 7599              	.LASF182:
 7600 005e 43617053 		.ascii	"CapSense_shieldIoList\000"
 7600      656E7365 
 7600      5F736869 
 7600      656C6449 
 7600      6F4C6973 
 7601              	.LASF38:
 7602 0074 70726F78 		.ascii	"proxTouchTh\000"
 7602      546F7563 
 7602      68546800 
 7603              	.LASF183:
 7604 0080 43617053 		.ascii	"CapSense_widgetIndex\000"
 7604      656E7365 
 7604      5F776964 
 7604      67657449 
 7604      6E646578 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 189


 7605              	.LASF67:
 7606 0095 736E7254 		.ascii	"snrTestWidgetId\000"
 7606      65737457 
 7606      69646765 
 7606      74496400 
 7607              	.LASF19:
 7608 00a5 43617053 		.ascii	"CapSense_UNDEFINED_E\000"
 7608      656E7365 
 7608      5F554E44 
 7608      4546494E 
 7608      45445F45 
 7609              	.LASF128:
 7610 00ba 694D6F64 		.ascii	"iMod\000"
 7610      00
 7611              	.LASF8:
 7612 00bf 756E7369 		.ascii	"unsigned int\000"
 7612      676E6564 
 7612      20696E74 
 7612      00
 7613              	.LASF58:
 7614 00cc 7363616E 		.ascii	"scanCounter\000"
 7614      436F756E 
 7614      74657200 
 7615              	.LASF120:
 7616 00d8 72617469 		.ascii	"ratio\000"
 7616      6F00
 7617              	.LASF56:
 7618 00de 6877436C 		.ascii	"hwClock\000"
 7618      6F636B00 
 7619              	.LASF71:
 7620 00e6 7363616E 		.ascii	"scanCsdISC\000"
 7620      43736449 
 7620      534300
 7621              	.LASF137:
 7622 00f1 43617053 		.ascii	"CapSense_SsCSDSetShieldElectrodesState\000"
 7622      656E7365 
 7622      5F537343 
 7622      53445365 
 7622      74536869 
 7623              	.LASF130:
 7624 0118 696E7465 		.ascii	"interruptState\000"
 7624      72727570 
 7624      74537461 
 7624      746500
 7625              	.LASF205:
 7626 0127 43617053 		.ascii	"CapSense_SsCSDConfigIDACs\000"
 7626      656E7365 
 7626      5F537343 
 7626      5344436F 
 7626      6E666967 
 7627              	.LASF119:
 7628 0141 70747246 		.ascii	"ptrFlashWidget\000"
 7628      6C617368 
 7628      57696467 
 7628      657400
 7629              	.LASF179:
 7630 0150 43617053 		.ascii	"CapSense_eleCsdDisconnectFlag\000"
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 190


 7630      656E7365 
 7630      5F656C65 
 7630      43736444 
 7630      6973636F 
 7631              	.LASF204:
 7632 016e 443A5C71 		.ascii	"D:\\qcs40x\\Cypress\\project\\4025LQIS412_workspace"
 7632      63733430 
 7632      785C4379 
 7632      70726573 
 7632      735C7072 
 7633 019d 5C343032 		.ascii	"\\4025LQIS412-EZIIC\\EZIIC_wadge.cydsn\000"
 7633      354C5149 
 7633      53343132 
 7633      2D455A49 
 7633      49435C45 
 7634              	.LASF198:
 7635 01c2 4379496E 		.ascii	"CyIntDisable\000"
 7635      74446973 
 7635      61626C65 
 7635      00
 7636              	.LASF41:
 7637 01cf 766F6C5F 		.ascii	"vol_down\000"
 7637      646F776E 
 7637      00
 7638              	.LASF195:
 7639 01d8 43617053 		.ascii	"CapSense_SsSetModClkClockDivider\000"
 7639      656E7365 
 7639      5F537353 
 7639      65744D6F 
 7639      64436C6B 
 7640              	.LASF159:
 7641 01f9 70696E4D 		.ascii	"pinModeShift\000"
 7641      6F646553 
 7641      68696674 
 7641      00
 7642              	.LASF111:
 7643 0206 736E7349 		.ascii	"snsIndex\000"
 7643      6E646578 
 7643      00
 7644              	.LASF124:
 7645 020f 43617053 		.ascii	"CapSense_SsCSDNormalizeIdac\000"
 7645      656E7365 
 7645      5F537343 
 7645      53444E6F 
 7645      726D616C 
 7646              	.LASF46:
 7647 022b 43617053 		.ascii	"CapSense_RAM_WD_LIST_STRUCT\000"
 7647      656E7365 
 7647      5F52414D 
 7647      5F57445F 
 7647      4C495354 
 7648              	.LASF136:
 7649 0247 73686965 		.ascii	"shieldIoPtr\000"
 7649      6C64496F 
 7649      50747200 
 7650              	.LASF163:
 7651 0253 73656E73 		.ascii	"sensorId\000"
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 191


 7651      6F724964 
 7651      00
 7652              	.LASF143:
 7653 025c 70747257 		.ascii	"ptrWdgt\000"
 7653      64677400 
 7654              	.LASF32:
 7655 0264 69646163 		.ascii	"idacGainIndex\000"
 7655      4761696E 
 7655      496E6465 
 7655      7800
 7656              	.LASF131:
 7657 0272 6C6F6F70 		.ascii	"loopIndex\000"
 7657      496E6465 
 7657      7800
 7658              	.LASF162:
 7659 027c 43617053 		.ascii	"CapSense_SsCSDConnectSensorExt\000"
 7659      656E7365 
 7659      5F537343 
 7659      5344436F 
 7659      6E6E6563 
 7660              	.LASF12:
 7661 029b 666C6F61 		.ascii	"float\000"
 7661      7400
 7662              	.LASF152:
 7663 02a1 43617053 		.ascii	"CapSense_SsCSDTriggerScan\000"
 7663      656E7365 
 7663      5F537343 
 7663      53445472 
 7663      69676765 
 7664              	.LASF82:
 7665 02bb 73686966 		.ascii	"shift\000"
 7665      7400
 7666              	.LASF202:
 7667 02c1 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 7667      43313120 
 7667      352E342E 
 7667      31203230 
 7667      31363036 
 7668 02f4 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 7668      20726576 
 7668      6973696F 
 7668      6E203233 
 7668      37373135 
 7669 0327 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 7669      67202D66 
 7669      66756E63 
 7669      74696F6E 
 7669      2D736563 
 7670              	.LASF147:
 7671 0353 736E7343 		.ascii	"snsClkSrc\000"
 7671      6C6B5372 
 7671      6300
 7672              	.LASF151:
 7673 035d 77617463 		.ascii	"watchdogCounter\000"
 7673      68646F67 
 7673      436F756E 
 7673      74657200 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 192


 7674              	.LASF168:
 7675 036d 43617053 		.ascii	"CapSense_CSDSetupWidget\000"
 7675      656E7365 
 7675      5F435344 
 7675      53657475 
 7675      70576964 
 7676              	.LASF160:
 7677 0385 70696E48 		.ascii	"pinHSIOMShift\000"
 7677      53494F4D 
 7677      53686966 
 7677      7400
 7678              	.LASF199:
 7679 0393 43794465 		.ascii	"CyDelayUs\000"
 7679      6C617955 
 7679      7300
 7680              	.LASF66:
 7681 039d 736E734C 		.ascii	"snsList\000"
 7681      69737400 
 7682              	.LASF200:
 7683 03a5 43617053 		.ascii	"CapSense_ISR_StartEx\000"
 7683      656E7365 
 7683      5F495352 
 7683      5F537461 
 7683      72744578 
 7684              	.LASF7:
 7685 03ba 6C6F6E67 		.ascii	"long long unsigned int\000"
 7685      206C6F6E 
 7685      6720756E 
 7685      7369676E 
 7685      65642069 
 7686              	.LASF184:
 7687 03d1 43617053 		.ascii	"CapSense_sensorIndex\000"
 7687      656E7365 
 7687      5F73656E 
 7687      736F7249 
 7687      6E646578 
 7688              	.LASF83:
 7689 03e6 43617053 		.ascii	"CapSense_FLASH_IO_STRUCT\000"
 7689      656E7365 
 7689      5F464C41 
 7689      53485F49 
 7689      4F5F5354 
 7690              	.LASF68:
 7691 03ff 736E7254 		.ascii	"snrTestSensorId\000"
 7691      65737453 
 7691      656E736F 
 7691      72496400 
 7692              	.LASF171:
 7693 040f 63616C4D 		.ascii	"calMask\000"
 7693      61736B00 
 7694              	.LASF91:
 7695 0417 77646774 		.ascii	"wdgtType\000"
 7695      54797065 
 7695      00
 7696              	.LASF169:
 7697 0420 43617053 		.ascii	"CapSense_CSDSetupWidgetExt\000"
 7697      656E7365 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 193


 7697      5F435344 
 7697      53657475 
 7697      70576964 
 7698              	.LASF153:
 7699 043b 43617053 		.ascii	"CapSense_SsCSDCmodPrecharge\000"
 7699      656E7365 
 7699      5F537343 
 7699      5344436D 
 7699      6F645072 
 7700              	.LASF133:
 7701 0457 6E657750 		.ascii	"newPinHsiomVal\000"
 7701      696E4873 
 7701      696F6D56 
 7701      616C00
 7702              	.LASF110:
 7703 0466 72617763 		.ascii	"rawcount\000"
 7703      6F756E74 
 7703      00
 7704              	.LASF158:
 7705 046f 6E657752 		.ascii	"newRegisterValue\000"
 7705      65676973 
 7705      74657256 
 7705      616C7565 
 7705      00
 7706              	.LASF64:
 7707 0480 6D6F6443 		.ascii	"modCsdClk\000"
 7707      7364436C 
 7707      6B00
 7708              	.LASF52:
 7709 048a 43617053 		.ascii	"CapSense_RAM_SNS_STRUCT\000"
 7709      656E7365 
 7709      5F52414D 
 7709      5F534E53 
 7709      5F535452 
 7710              	.LASF115:
 7711 04a2 70747252 		.ascii	"ptrRamWidget\000"
 7711      616D5769 
 7711      64676574 
 7711      00
 7712              	.LASF44:
 7713 04af 666F726D 		.ascii	"formation\000"
 7713      6174696F 
 7713      6E00
 7714              	.LASF107:
 7715 04b9 74617267 		.ascii	"target\000"
 7715      657400
 7716              	.LASF76:
 7717 04c0 64725074 		.ascii	"drPtr\000"
 7717      7200
 7718              	.LASF201:
 7719 04c6 43617053 		.ascii	"CapSense_SsSwitchSensingMode\000"
 7719      656E7365 
 7719      5F537353 
 7719      77697463 
 7719      6853656E 
 7720              	.LASF132:
 7721 04e3 6E657750 		.ascii	"newPinPcVal\000"
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 194


 7721      696E5063 
 7721      56616C00 
 7722              	.LASF28:
 7723 04ef 68797374 		.ascii	"hysteresis\000"
 7723      65726573 
 7723      697300
 7724              	.LASF127:
 7725 04fa 7261774C 		.ascii	"rawLevel\000"
 7725      6576656C 
 7725      00
 7726              	.LASF93:
 7727 0503 43617053 		.ascii	"CapSense_FLASH_WD_STRUCT\000"
 7727      656E7365 
 7727      5F464C41 
 7727      53485F57 
 7727      445F5354 
 7728              	.LASF30:
 7729 051c 6C6F7742 		.ascii	"lowBslnRst\000"
 7729      736C6E52 
 7729      737400
 7730              	.LASF125:
 7731 0527 6D696E52 		.ascii	"minRaw\000"
 7731      617700
 7732              	.LASF142:
 7733 052e 43617053 		.ascii	"CapSense_SsCSDSetUpIdacs\000"
 7733      656E7365 
 7733      5F537343 
 7733      53445365 
 7733      74557049 
 7734              	.LASF90:
 7735 0547 746F7461 		.ascii	"totalNumSns\000"
 7735      6C4E756D 
 7735      536E7300 
 7736              	.LASF175:
 7737 0553 43617053 		.ascii	"CapSense_SsCSDDisconnectSnsExt\000"
 7737      656E7365 
 7737      5F537343 
 7737      53444469 
 7737      73636F6E 
 7738              	.LASF123:
 7739 0572 6761696E 		.ascii	"gainIndex\000"
 7739      496E6465 
 7739      7800
 7740              	.LASF26:
 7741 057c 6E6F6973 		.ascii	"noiseTh\000"
 7741      65546800 
 7742              	.LASF196:
 7743 0584 4379496E 		.ascii	"CyIntClearPending\000"
 7743      74436C65 
 7743      61725065 
 7743      6E64696E 
 7743      6700
 7744              	.LASF14:
 7745 0596 63686172 		.ascii	"char\000"
 7745      00
 7746              	.LASF191:
 7747 059b 43794578 		.ascii	"CyExitCriticalSection\000"
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 195


 7747      69744372 
 7747      69746963 
 7747      616C5365 
 7747      6374696F 
 7748              	.LASF193:
 7749 05b1 43617053 		.ascii	"CapSense_DischargeExtCapacitors\000"
 7749      656E7365 
 7749      5F446973 
 7749      63686172 
 7749      67654578 
 7750              	.LASF176:
 7751 05d1 43617053 		.ascii	"CapSense_SsCSDGetNumberOfConversions\000"
 7751      656E7365 
 7751      5F537343 
 7751      53444765 
 7751      744E756D 
 7752              	.LASF121:
 7753 05f6 6D617849 		.ascii	"maxIdac\000"
 7753      64616300 
 7754              	.LASF80:
 7755 05fe 6873696F 		.ascii	"hsiomShift\000"
 7755      6D536869 
 7755      667400
 7756              	.LASF10:
 7757 0609 75696E74 		.ascii	"uint16\000"
 7757      313600
 7758              	.LASF148:
 7759 0610 636F6E76 		.ascii	"conversionsNum\000"
 7759      65727369 
 7759      6F6E734E 
 7759      756D00
 7760              	.LASF116:
 7761 061f 70747252 		.ascii	"ptrRamSensor\000"
 7761      616D5365 
 7761      6E736F72 
 7761      00
 7762              	.LASF88:
 7763 062c 70747232 		.ascii	"ptr2DebounceArr\000"
 7763      4465626F 
 7763      756E6365 
 7763      41727200 
 7764              	.LASF139:
 7765 063c 43617053 		.ascii	"CapSense_SsCSDDisableShieldElectrodes\000"
 7765      656E7365 
 7765      5F537343 
 7765      53444469 
 7765      7361626C 
 7766              	.LASF24:
 7767 0662 7265736F 		.ascii	"resolution\000"
 7767      6C757469 
 7767      6F6E00
 7768              	.LASF59:
 7769 066d 73746174 		.ascii	"status\000"
 7769      757300
 7770              	.LASF18:
 7771 0674 43617053 		.ascii	"CapSense_LOW_BSLN_RST_TYPE\000"
 7771      656E7365 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 196


 7771      5F4C4F57 
 7771      5F42534C 
 7771      4E5F5253 
 7772              	.LASF51:
 7773 068f 69646163 		.ascii	"idacComp\000"
 7773      436F6D70 
 7773      00
 7774              	.LASF75:
 7775 0698 70635074 		.ascii	"pcPtr\000"
 7775      7200
 7776              	.LASF6:
 7777 069e 6C6F6E67 		.ascii	"long long int\000"
 7777      206C6F6E 
 7777      6720696E 
 7777      7400
 7778              	.LASF92:
 7779 06ac 6E756D43 		.ascii	"numCols\000"
 7779      6F6C7300 
 7780              	.LASF138:
 7781 06b4 43617053 		.ascii	"CapSense_SsCSDEnableShieldElectrodes\000"
 7781      656E7365 
 7781      5F537343 
 7781      5344456E 
 7781      61626C65 
 7782              	.LASF140:
 7783 06d9 43617053 		.ascii	"CapSense_SsCSDInitialize\000"
 7783      656E7365 
 7783      5F537343 
 7783      5344496E 
 7783      69746961 
 7784              	.LASF29:
 7785 06f2 6F6E4465 		.ascii	"onDebounce\000"
 7785      626F756E 
 7785      636500
 7786              	.LASF113:
 7787 06fd 75707065 		.ascii	"upperLimit\000"
 7787      724C696D 
 7787      697400
 7788              	.LASF109:
 7789 0708 63616C69 		.ascii	"calibrateStatus\000"
 7789      62726174 
 7789      65537461 
 7789      74757300 
 7790              	.LASF65:
 7791 0718 77646774 		.ascii	"wdgtList\000"
 7791      4C697374 
 7791      00
 7792              	.LASF95:
 7793 0721 43617053 		.ascii	"CapSense_FLASH_STRUCT\000"
 7793      656E7365 
 7793      5F464C41 
 7793      53485F53 
 7793      54525543 
 7794              	.LASF194:
 7795 0737 43617053 		.ascii	"CapSense_WriteBitsSafe\000"
 7795      656E7365 
 7795      5F577269 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 197


 7795      74654269 
 7795      74735361 
 7796              	.LASF180:
 7797 074e 43617053 		.ascii	"CapSense_dsRam\000"
 7797      656E7365 
 7797      5F647352 
 7797      616D00
 7798              	.LASF70:
 7799 075d 736E7254 		.ascii	"snrTestRawCount\000"
 7799      65737452 
 7799      6177436F 
 7799      756E7400 
 7800              	.LASF189:
 7801 076d 43617053 		.ascii	"CapSense_configCsd\000"
 7801      656E7365 
 7801      5F636F6E 
 7801      66696743 
 7801      736400
 7802              	.LASF27:
 7803 0780 6E4E6F69 		.ascii	"nNoiseTh\000"
 7803      73655468 
 7803      00
 7804              	.LASF43:
 7805 0789 6C696265 		.ascii	"liberty_pull\000"
 7805      7274795F 
 7805      70756C6C 
 7805      00
 7806              	.LASF63:
 7807 0796 63736430 		.ascii	"csd0Config\000"
 7807      436F6E66 
 7807      696700
 7808              	.LASF117:
 7809 07a1 43617053 		.ascii	"CapSense_SsCSDCalibrateCheck\000"
 7809      656E7365 
 7809      5F537343 
 7809      53444361 
 7809      6C696272 
 7810              	.LASF36:
 7811 07be 43617053 		.ascii	"CapSense_RAM_WD_BASE_STRUCT\000"
 7811      656E7365 
 7811      5F52414D 
 7811      5F57445F 
 7811      42415345 
 7812              	.LASF112:
 7813 07da 66726571 		.ascii	"freqChannel\000"
 7813      4368616E 
 7813      6E656C00 
 7814              	.LASF74:
 7815 07e6 6873696F 		.ascii	"hsiomPtr\000"
 7815      6D507472 
 7815      00
 7816              	.LASF11:
 7817 07ef 75696E74 		.ascii	"uint32\000"
 7817      333200
 7818              	.LASF87:
 7819 07f6 70747232 		.ascii	"ptr2FltrHistory\000"
 7819      466C7472 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 198


 7819      48697374 
 7819      6F727900 
 7820              	.LASF99:
 7821 0806 6761696E 		.ascii	"gainValue\000"
 7821      56616C75 
 7821      6500
 7822              	.LASF187:
 7823 0810 43617053 		.ascii	"CapSense_curSnsIOPtr\000"
 7823      656E7365 
 7823      5F637572 
 7823      536E7349 
 7823      4F507472 
 7824              	.LASF79:
 7825 0825 6D61736B 		.ascii	"mask\000"
 7825      00
 7826              	.LASF114:
 7827 082a 6C6F7765 		.ascii	"lowerLimit\000"
 7827      724C696D 
 7827      697400
 7828              	.LASF174:
 7829 0835 7074724D 		.ascii	"ptrMaxIdac\000"
 7829      61784964 
 7829      616300
 7830              	.LASF126:
 7831 0840 6D617852 		.ascii	"maxRawLevel\000"
 7831      61774C65 
 7831      76656C00 
 7832              	.LASF108:
 7833 084c 73616D70 		.ascii	"sampleClkFreqHz\000"
 7833      6C65436C 
 7833      6B467265 
 7833      71487A00 
 7834              	.LASF203:
 7835 085c 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_SensingCSD_LL.c\000"
 7835      72617465 
 7835      645F536F 
 7835      75726365 
 7835      5C50536F 
 7836              	.LASF23:
 7837 088c 43617053 		.ascii	"CapSense_SENSE_METHOD_ISX_E\000"
 7837      656E7365 
 7837      5F53454E 
 7837      53455F4D 
 7837      4554484F 
 7838              	.LASF97:
 7839 08a8 6C6F6E67 		.ascii	"long double\000"
 7839      20646F75 
 7839      626C6500 
 7840              	.LASF149:
 7841 08b4 43617053 		.ascii	"CapSense_SsCSDConfigClock\000"
 7841      656E7365 
 7841      5F537343 
 7841      5344436F 
 7841      6E666967 
 7842              	.LASF16:
 7843 08ce 72656733 		.ascii	"reg32\000"
 7843      3200
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 199


 7844              	.LASF69:
 7845 08d4 736E7254 		.ascii	"snrTestScanCounter\000"
 7845      65737453 
 7845      63616E43 
 7845      6F756E74 
 7845      657200
 7846              	.LASF54:
 7847 08e7 636F6E66 		.ascii	"configId\000"
 7847      69674964 
 7847      00
 7848              	.LASF86:
 7849 08f0 70747232 		.ascii	"ptr2SnsRam\000"
 7849      536E7352 
 7849      616D00
 7850              	.LASF62:
 7851 08fb 736E7353 		.ascii	"snsStatus\000"
 7851      74617475 
 7851      7300
 7852              	.LASF34:
 7853 0905 736E7343 		.ascii	"snsClkSource\000"
 7853      6C6B536F 
 7853      75726365 
 7853      00
 7854              	.LASF167:
 7855 0912 43617053 		.ascii	"CapSense_SsCSDElectrodeCheck\000"
 7855      656E7365 
 7855      5F537343 
 7855      5344456C 
 7855      65637472 
 7856              	.LASF2:
 7857 092f 73686F72 		.ascii	"short int\000"
 7857      7420696E 
 7857      7400
 7858              	.LASF166:
 7859 0939 6E657748 		.ascii	"newHsiomRegValue\000"
 7859      73696F6D 
 7859      52656756 
 7859      616C7565 
 7859      00
 7860              	.LASF73:
 7861 094a 43617053 		.ascii	"CapSense_RAM_STRUCT\000"
 7861      656E7365 
 7861      5F52414D 
 7861      5F535452 
 7861      55435400 
 7862              	.LASF164:
 7863 095e 43617053 		.ascii	"CapSense_CSDDisconnectSns\000"
 7863      656E7365 
 7863      5F435344 
 7863      44697363 
 7863      6F6E6E65 
 7864              	.LASF102:
 7865 0978 43617053 		.ascii	"CapSense_SsCSDSetModeSnsClockDivider\000"
 7865      656E7365 
 7865      5F537343 
 7865      53445365 
 7865      744D6F64 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 200


 7866              	.LASF192:
 7867 099d 43617053 		.ascii	"CapSense_SsSetAllIOsState\000"
 7867      656E7365 
 7867      5F537353 
 7867      6574416C 
 7867      6C494F73 
 7868              	.LASF4:
 7869 09b7 6C6F6E67 		.ascii	"long int\000"
 7869      20696E74 
 7869      00
 7870              	.LASF103:
 7871 09c0 64656C61 		.ascii	"delay\000"
 7871      7900
 7872              	.LASF60:
 7873 09c6 77646774 		.ascii	"wdgtEnable\000"
 7873      456E6162 
 7873      6C6500
 7874              	.LASF49:
 7875 09d1 64696666 		.ascii	"diff\000"
 7875      00
 7876              	.LASF122:
 7877 09d6 6D696E49 		.ascii	"minIdac\000"
 7877      64616300 
 7878              	.LASF57:
 7879 09de 74756E65 		.ascii	"tunerCmd\000"
 7879      72436D64 
 7879      00
 7880              	.LASF172:
 7881 09e7 74656D70 		.ascii	"temp\000"
 7881      00
 7882              	.LASF21:
 7883 09ec 43617053 		.ascii	"CapSense_SENSE_METHOD_CSX_E\000"
 7883      656E7365 
 7883      5F53454E 
 7883      53455F4D 
 7883      4554484F 
 7884              	.LASF77:
 7885 0a08 70735074 		.ascii	"psPtr\000"
 7885      7200
 7886              	.LASF145:
 7887 0a0e 69646163 		.ascii	"idacARegValue\000"
 7887      41526567 
 7887      56616C75 
 7887      6500
 7888              	.LASF177:
 7889 0a1c 43617053 		.ascii	"CapSense_CSDCalibrateWidget\000"
 7889      656E7365 
 7889      5F435344 
 7889      43616C69 
 7889      62726174 
 7890              	.LASF134:
 7891 0a38 746D7050 		.ascii	"tmpPcDrRegValue\000"
 7891      63447252 
 7891      65675661 
 7891      6C756500 
 7892              	.LASF98:
 7893 0a48 6761696E 		.ascii	"gainReg\000"
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 201


 7893      52656700 
 7894              	.LASF181:
 7895 0a50 43617053 		.ascii	"CapSense_dsFlash\000"
 7895      656E7365 
 7895      5F647346 
 7895      6C617368 
 7895      00
 7896              	.LASF155:
 7897 0a61 43617053 		.ascii	"CapSense_CSDScanExt\000"
 7897      656E7365 
 7897      5F435344 
 7897      5363616E 
 7897      45787400 
 7898              	.LASF61:
 7899 0a75 77646774 		.ascii	"wdgtStatus\000"
 7899      53746174 
 7899      757300
 7900              	.LASF156:
 7901 0a80 43617053 		.ascii	"CapSense_CSDConnectSns\000"
 7901      656E7365 
 7901      5F435344 
 7901      436F6E6E 
 7901      65637453 
 7902              	.LASF20:
 7903 0a97 43617053 		.ascii	"CapSense_SENSE_METHOD_CSD_E\000"
 7903      656E7365 
 7903      5F53454E 
 7903      53455F4D 
 7903      4554484F 
 7904              	.LASF35:
 7905 0ab3 73697A65 		.ascii	"sizetype\000"
 7905      74797065 
 7905      00
 7906              	.LASF81:
 7907 0abc 64725368 		.ascii	"drShift\000"
 7907      69667400 
 7908              	.LASF5:
 7909 0ac4 6C6F6E67 		.ascii	"long unsigned int\000"
 7909      20756E73 
 7909      69676E65 
 7909      6420696E 
 7909      7400
 7910              	.LASF31:
 7911 0ad6 69646163 		.ascii	"idacMod\000"
 7911      4D6F6400 
 7912              	.LASF118:
 7913 0ade 43617053 		.ascii	"CapSense_SsCSDSwitchIdacGain\000"
 7913      656E7365 
 7913      5F537343 
 7913      53445377 
 7913      69746368 
 7914              	.LASF45:
 7915 0afb 70726F78 		.ascii	"prox\000"
 7915      00
 7916              	.LASF25:
 7917 0b00 66696E67 		.ascii	"fingerTh\000"
 7917      65725468 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 202


 7917      00
 7918              	.LASF48:
 7919 0b09 62736C6E 		.ascii	"bslnExt\000"
 7919      45787400 
 7920              	.LASF100:
 7921 0b11 43617053 		.ascii	"CapSense_IDAC_GAIN_TABLE_STRUCT\000"
 7921      656E7365 
 7921      5F494441 
 7921      435F4741 
 7921      494E5F54 
 7922              	.LASF37:
 7923 0b31 43617053 		.ascii	"CapSense_RAM_WD_BUTTON_STRUCT\000"
 7923      656E7365 
 7923      5F52414D 
 7923      5F57445F 
 7923      42555454 
 7924              	.LASF15:
 7925 0b4f 63797374 		.ascii	"cystatus\000"
 7925      61747573 
 7925      00
 7926              	.LASF39:
 7927 0b58 43617053 		.ascii	"CapSense_RAM_WD_PROXIMITY_STRUCT\000"
 7927      656E7365 
 7927      5F52414D 
 7927      5F57445F 
 7927      50524F58 
 7928              	.LASF105:
 7929 0b79 43617053 		.ascii	"CapSense_SsCSDSetFilterDelay\000"
 7929      656E7365 
 7929      5F537343 
 7929      53445365 
 7929      7446696C 
 7930              	.LASF1:
 7931 0b96 756E7369 		.ascii	"unsigned char\000"
 7931      676E6564 
 7931      20636861 
 7931      7200
 7932              	.LASF135:
 7933 0ba4 746D7048 		.ascii	"tmpHsiomRegValue\000"
 7933      73696F6D 
 7933      52656756 
 7933      616C7565 
 7933      00
 7934              	.LASF89:
 7935 0bb5 73746174 		.ascii	"staticConfig\000"
 7935      6963436F 
 7935      6E666967 
 7935      00
 7936              	.LASF72:
 7937 0bc2 7363616E 		.ascii	"scanCurrentISC\000"
 7937      43757272 
 7937      656E7449 
 7937      534300
 7938              	.LASF85:
 7939 0bd1 70747232 		.ascii	"ptr2WdgtRam\000"
 7939      57646774 
 7939      52616D00 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 203


 7940              	.LASF17:
 7941 0bdd 43617053 		.ascii	"CapSense_THRESHOLD_TYPE\000"
 7941      656E7365 
 7941      5F544852 
 7941      4553484F 
 7941      4C445F54 
 7942              	.LASF96:
 7943 0bf5 43617053 		.ascii	"CapSense_SHIELD_IO_STRUCT\000"
 7943      656E7365 
 7943      5F534849 
 7943      454C445F 
 7943      494F5F53 
 7944              	.LASF161:
 7945 0c0f 43617053 		.ascii	"CapSense_CSDScan\000"
 7945      656E7365 
 7945      5F435344 
 7945      5363616E 
 7945      00
 7946              	.LASF22:
 7947 0c20 43617053 		.ascii	"CapSense_SENSE_METHOD_BIST_E\000"
 7947      656E7365 
 7947      5F53454E 
 7947      53455F4D 
 7947      4554484F 
 7948              	.LASF129:
 7949 0c3d 73746174 		.ascii	"state\000"
 7949      6500
 7950              	.LASF78:
 7951 0c43 6873696F 		.ascii	"hsiomMask\000"
 7951      6D4D6173 
 7951      6B00
 7952              	.LASF197:
 7953 0c4d 4379496E 		.ascii	"CyIntEnable\000"
 7953      74456E61 
 7953      626C6500 
 7954              	.LASF33:
 7955 0c59 736E7343 		.ascii	"snsClk\000"
 7955      6C6B00
 7956              	.LASF178:
 7957 0c60 6761696E 		.ascii	"gainSwitch\000"
 7957      53776974 
 7957      636800
 7958              	.LASF190:
 7959 0c6b 4379456E 		.ascii	"CyEnterCriticalSection\000"
 7959      74657243 
 7959      72697469 
 7959      63616C53 
 7959      65637469 
 7960              	.LASF185:
 7961 0c82 43617053 		.ascii	"CapSense_curRamSnsPtr\000"
 7961      656E7365 
 7961      5F637572 
 7961      52616D53 
 7961      6E735074 
 7962              	.LASF0:
 7963 0c98 7369676E 		.ascii	"signed char\000"
 7963      65642063 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 204


 7963      68617200 
 7964              	.LASF186:
 7965 0ca4 43617053 		.ascii	"CapSense_scanFreqIndex\000"
 7965      656E7365 
 7965      5F736361 
 7965      6E467265 
 7965      71496E64 
 7966              	.LASF47:
 7967 0cbb 62736C6E 		.ascii	"bsln\000"
 7967      00
 7968              	.LASF3:
 7969 0cc0 73686F72 		.ascii	"short unsigned int\000"
 7969      7420756E 
 7969      7369676E 
 7969      65642069 
 7969      6E7400
 7970              	.LASF42:
 7971 0cd3 706C6179 		.ascii	"play_pause\000"
 7971      5F706175 
 7971      736500
 7972              	.LASF154:
 7973 0cde 43617053 		.ascii	"CapSense_SsCSDStartSample\000"
 7973      656E7365 
 7973      5F537343 
 7973      53445374 
 7973      61727453 
 7974              	.LASF84:
 7975 0cf8 70747232 		.ascii	"ptr2SnsFlash\000"
 7975      536E7346 
 7975      6C617368 
 7975      00
 7976              	.LASF141:
 7977 0d05 6E657752 		.ascii	"newRegValue\000"
 7977      65675661 
 7977      6C756500 
 7978              	.LASF9:
 7979 0d11 75696E74 		.ascii	"uint8\000"
 7979      3800
 7980              	.LASF13:
 7981 0d17 646F7562 		.ascii	"double\000"
 7981      6C6500
 7982              	.LASF50:
 7983 0d1e 6E656742 		.ascii	"negBslnRstCnt\000"
 7983      736C6E52 
 7983      7374436E 
 7983      7400
 7984              	.LASF170:
 7985 0d2c 43617053 		.ascii	"CapSense_SsCSDCalibrate\000"
 7985      656E7365 
 7985      5F537343 
 7985      53444361 
 7985      6C696272 
 7986              	.LASF173:
 7987 0d44 70747249 		.ascii	"ptrIdacMod\000"
 7987      6461634D 
 7987      6F6400
 7988              	.LASF104:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIs4XhV.s 			page 205


 7989 0d4f 736E7343 		.ascii	"snsClkDivider\000"
 7989      6C6B4469 
 7989      76696465 
 7989      7200
 7990              	.LASF144:
 7991 0d5d 69646163 		.ascii	"idacGain\000"
 7991      4761696E 
 7991      00
 7992              	.LASF55:
 7993 0d66 64657669 		.ascii	"deviceId\000"
 7993      63654964 
 7993      00
 7994              	.LASF106:
 7995 0d6f 77696467 		.ascii	"widgetId\000"
 7995      65744964 
 7995      00
 7996              	.LASF165:
 7997 0d78 6E657750 		.ascii	"newPcRegValue\000"
 7997      63526567 
 7997      56616C75 
 7997      6500
 7998              	.LASF188:
 7999 0d86 43617053 		.ascii	"CapSense_idacGainTable\000"
 7999      656E7365 
 7999      5F696461 
 7999      63476169 
 7999      6E546162 
 8000              	.LASF53:
 8001 0d9d 43617053 		.ascii	"CapSense_RAM_SNS_LIST_STRUCT\000"
 8001      656E7365 
 8001      5F52414D 
 8001      5F534E53 
 8001      5F4C4953 
 8002              	.LASF94:
 8003 0dba 77646774 		.ascii	"wdgtArray\000"
 8003      41727261 
 8003      7900
 8004              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran

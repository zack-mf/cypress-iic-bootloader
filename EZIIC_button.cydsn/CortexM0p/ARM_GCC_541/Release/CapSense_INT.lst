ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccY3ebF6.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_INT.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_SsCSDPostScan,"ax",%progbits
  20              		.align	1
  21              		.code	16
  22              		.thumb_func
  23              		.type	CapSense_SsCSDPostScan, %function
  24              	CapSense_SsCSDPostScan:
  25              	.LFB3:
  26              		.file 1 "Generated_Source\\PSoC4\\CapSense_INT.c"
   1:Generated_Source\PSoC4/CapSense_INT.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CapSense_INT.c **** * \file CapSense_INT.c
   3:Generated_Source\PSoC4/CapSense_INT.c **** * \version 7.0
   4:Generated_Source\PSoC4/CapSense_INT.c **** *
   5:Generated_Source\PSoC4/CapSense_INT.c **** * \brief
   6:Generated_Source\PSoC4/CapSense_INT.c **** *   This file contains the source code for implementation of the Component's
   7:Generated_Source\PSoC4/CapSense_INT.c **** *   Interrupt Service Routine (ISR).
   8:Generated_Source\PSoC4/CapSense_INT.c **** *
   9:Generated_Source\PSoC4/CapSense_INT.c **** * \see CapSense v7.0 Datasheet
  10:Generated_Source\PSoC4/CapSense_INT.c **** *
  11:Generated_Source\PSoC4/CapSense_INT.c **** *//*****************************************************************************
  12:Generated_Source\PSoC4/CapSense_INT.c **** * Copyright (2016-2019), Cypress Semiconductor Corporation.
  13:Generated_Source\PSoC4/CapSense_INT.c **** ********************************************************************************
  14:Generated_Source\PSoC4/CapSense_INT.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  15:Generated_Source\PSoC4/CapSense_INT.c **** * protected by and subject to worldwide patent protection (United States and
  16:Generated_Source\PSoC4/CapSense_INT.c **** * foreign), United States copyright laws and international treaty provisions.
  17:Generated_Source\PSoC4/CapSense_INT.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  18:Generated_Source\PSoC4/CapSense_INT.c **** * license to copy, use, modify, create derivative works of, and compile the
  19:Generated_Source\PSoC4/CapSense_INT.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  20:Generated_Source\PSoC4/CapSense_INT.c **** * custom software in support of licensee product to be used only in conjunction
  21:Generated_Source\PSoC4/CapSense_INT.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  22:Generated_Source\PSoC4/CapSense_INT.c **** * Any reproduction, modification, translation, compilation, or representation of
  23:Generated_Source\PSoC4/CapSense_INT.c **** * this software except as specified above is prohibited without the express
  24:Generated_Source\PSoC4/CapSense_INT.c **** * written permission of Cypress.
  25:Generated_Source\PSoC4/CapSense_INT.c **** *
  26:Generated_Source\PSoC4/CapSense_INT.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  27:Generated_Source\PSoC4/CapSense_INT.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  28:Generated_Source\PSoC4/CapSense_INT.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  29:Generated_Source\PSoC4/CapSense_INT.c **** * Cypress reserves the right to make changes without further notice to the
  30:Generated_Source\PSoC4/CapSense_INT.c **** * materials described herein. Cypress does not assume any liability arising out
  31:Generated_Source\PSoC4/CapSense_INT.c **** * of the application or use of any product or circuit described herein. Cypress
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccY3ebF6.s 			page 2


  32:Generated_Source\PSoC4/CapSense_INT.c **** * does not authorize its products for use as critical components in life-support
  33:Generated_Source\PSoC4/CapSense_INT.c **** * systems where a malfunction or failure may reasonably be expected to result in
  34:Generated_Source\PSoC4/CapSense_INT.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  35:Generated_Source\PSoC4/CapSense_INT.c **** * support systems application implies that the manufacturer assumes all risk of
  36:Generated_Source\PSoC4/CapSense_INT.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  37:Generated_Source\PSoC4/CapSense_INT.c **** * limited by and subject to the applicable Cypress software license agreement.
  38:Generated_Source\PSoC4/CapSense_INT.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/CapSense_INT.c **** #include "cytypes.h"
  40:Generated_Source\PSoC4/CapSense_INT.c **** #include "cyfitter.h"
  41:Generated_Source\PSoC4/CapSense_INT.c **** #include "CapSense_Configuration.h"
  42:Generated_Source\PSoC4/CapSense_INT.c **** #include "CapSense_Structure.h"
  43:Generated_Source\PSoC4/CapSense_INT.c **** #include "CapSense_Sensing.h"
  44:Generated_Source\PSoC4/CapSense_INT.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
  45:Generated_Source\PSoC4/CapSense_INT.c ****     #include "CapSense_SensingCSD_LL.h"
  46:Generated_Source\PSoC4/CapSense_INT.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
  47:Generated_Source\PSoC4/CapSense_INT.c **** #include "cyapicallbacks.h"
  48:Generated_Source\PSoC4/CapSense_INT.c **** 
  49:Generated_Source\PSoC4/CapSense_INT.c **** /*******************************************************************************
  50:Generated_Source\PSoC4/CapSense_INT.c **** * Static Function Prototypes
  51:Generated_Source\PSoC4/CapSense_INT.c **** *******************************************************************************/
  52:Generated_Source\PSoC4/CapSense_INT.c **** /**
  53:Generated_Source\PSoC4/CapSense_INT.c **** * \cond SECTION_C_INTERNAL
  54:Generated_Source\PSoC4/CapSense_INT.c **** * \addtogroup group_c_internal
  55:Generated_Source\PSoC4/CapSense_INT.c **** * \{
  56:Generated_Source\PSoC4/CapSense_INT.c **** */
  57:Generated_Source\PSoC4/CapSense_INT.c **** 
  58:Generated_Source\PSoC4/CapSense_INT.c **** #if (((CapSense_ENABLE == CapSense_CSD_EN) || (CapSense_ENABLE == CapSense_CSD_CSX_EN)) && \
  59:Generated_Source\PSoC4/CapSense_INT.c ****      (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN))
  60:Generated_Source\PSoC4/CapSense_INT.c ****     static void CapSense_SsNextFrequencyScan(void);
  61:Generated_Source\PSoC4/CapSense_INT.c **** #endif /* (((CapSense_ENABLE == CapSense_CSD_EN) || (CapSense_ENABLE == CapSense_CSD_CSX_EN)) && \
  62:Generated_Source\PSoC4/CapSense_INT.c ****             (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)) */
  63:Generated_Source\PSoC4/CapSense_INT.c **** 
  64:Generated_Source\PSoC4/CapSense_INT.c **** #if ((CapSense_ENABLE == CapSense_CSD_EN) || (CapSense_ENABLE == CapSense_CSD_CSX_EN))
  65:Generated_Source\PSoC4/CapSense_INT.c ****     static void CapSense_SsCSDPostScan(void);
  66:Generated_Source\PSoC4/CapSense_INT.c ****     static void CapSense_SsCSDInitNextScan(void);
  67:Generated_Source\PSoC4/CapSense_INT.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) || (CapSense_ENABLE == CapSense_CSD_CSX_EN)) */
  68:Generated_Source\PSoC4/CapSense_INT.c **** /** \}
  69:Generated_Source\PSoC4/CapSense_INT.c **** * \endcond */
  70:Generated_Source\PSoC4/CapSense_INT.c **** 
  71:Generated_Source\PSoC4/CapSense_INT.c **** 
  72:Generated_Source\PSoC4/CapSense_INT.c **** /**
  73:Generated_Source\PSoC4/CapSense_INT.c **** * \cond SECTION_C_INTERRUPT
  74:Generated_Source\PSoC4/CapSense_INT.c **** * \addtogroup group_c_interrupt
  75:Generated_Source\PSoC4/CapSense_INT.c **** * \{
  76:Generated_Source\PSoC4/CapSense_INT.c **** */
  77:Generated_Source\PSoC4/CapSense_INT.c **** 
  78:Generated_Source\PSoC4/CapSense_INT.c **** 
  79:Generated_Source\PSoC4/CapSense_INT.c **** #if ((CapSense_ENABLE == CapSense_CSD_EN) || (CapSense_ENABLE == CapSense_CSD_CSX_EN))
  80:Generated_Source\PSoC4/CapSense_INT.c **** 
  81:Generated_Source\PSoC4/CapSense_INT.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
  82:Generated_Source\PSoC4/CapSense_INT.c ****     /* Fourth-generation HW block part */
  83:Generated_Source\PSoC4/CapSense_INT.c **** 
  84:Generated_Source\PSoC4/CapSense_INT.c ****     /*******************************************************************************
  85:Generated_Source\PSoC4/CapSense_INT.c ****     * Function Name: CapSense_CSDPostSingleScan
  86:Generated_Source\PSoC4/CapSense_INT.c ****     ****************************************************************************//**
  87:Generated_Source\PSoC4/CapSense_INT.c ****     *
  88:Generated_Source\PSoC4/CapSense_INT.c ****     * \brief
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccY3ebF6.s 			page 3


  89:Generated_Source\PSoC4/CapSense_INT.c ****     *  This is an internal ISR function for the single-sensor scanning implementation.
  90:Generated_Source\PSoC4/CapSense_INT.c ****     *
  91:Generated_Source\PSoC4/CapSense_INT.c ****     * \details
  92:Generated_Source\PSoC4/CapSense_INT.c ****     *  This ISR handler is triggered when the user calls the
  93:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_CSDScanExt() function.
  94:Generated_Source\PSoC4/CapSense_INT.c ****     *
  95:Generated_Source\PSoC4/CapSense_INT.c ****     *  The following tasks are performed for Third-generation HW block:
  96:Generated_Source\PSoC4/CapSense_INT.c ****     *    1. Disable the CSD interrupt.
  97:Generated_Source\PSoC4/CapSense_INT.c ****     *    2. Read the Counter register and update the data structure with raw data.
  98:Generated_Source\PSoC4/CapSense_INT.c ****     *    3. Connect the Vref buffer to the AMUX bus.
  99:Generated_Source\PSoC4/CapSense_INT.c ****     *    4. Update the Scan Counter.
 100:Generated_Source\PSoC4/CapSense_INT.c ****     *    5. Reset the BUSY flag.
 101:Generated_Source\PSoC4/CapSense_INT.c ****     *    6. Enable the CSD interrupt.
 102:Generated_Source\PSoC4/CapSense_INT.c ****     *
 103:Generated_Source\PSoC4/CapSense_INT.c ****     *  The following tasks are performed for Fourth-generation HW block:
 104:Generated_Source\PSoC4/CapSense_INT.c ****     *    1. Check if the raw data is not noisy.
 105:Generated_Source\PSoC4/CapSense_INT.c ****     *    2. Read the Counter register and update the data structure with raw data.
 106:Generated_Source\PSoC4/CapSense_INT.c ****     *    3. Configure and start the scan for the next frequency if the
 107:Generated_Source\PSoC4/CapSense_INT.c ****     *      multi-frequency is enabled.
 108:Generated_Source\PSoC4/CapSense_INT.c ****     *    4. Update the Scan Counter.
 109:Generated_Source\PSoC4/CapSense_INT.c ****     *    5. Reset the BUSY flag.
 110:Generated_Source\PSoC4/CapSense_INT.c ****     *    6. Enable the CSD interrupt.
 111:Generated_Source\PSoC4/CapSense_INT.c ****     *
 112:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler changes the IMO and initializes scanning for the next frequency
 113:Generated_Source\PSoC4/CapSense_INT.c ****     *  channels when multi-frequency scanning is enabled.
 114:Generated_Source\PSoC4/CapSense_INT.c ****     *
 115:Generated_Source\PSoC4/CapSense_INT.c ****     *  This function has two Macro Callbacks that allow calling the user code
 116:Generated_Source\PSoC4/CapSense_INT.c ****     *  from macros specified in Component's generated code. Refer to the
 117:Generated_Source\PSoC4/CapSense_INT.c ****     *  \ref group_c_macrocallbacks section of the PSoC Creator User Guide
 118:Generated_Source\PSoC4/CapSense_INT.c ****     *  for details.
 119:Generated_Source\PSoC4/CapSense_INT.c ****     *
 120:Generated_Source\PSoC4/CapSense_INT.c ****     *******************************************************************************/
 121:Generated_Source\PSoC4/CapSense_INT.c ****     CY_ISR(CapSense_CSDPostSingleScan)
 122:Generated_Source\PSoC4/CapSense_INT.c ****     {
 123:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_ENTRY_CALLBACK
 124:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_EntryCallback();
 125:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_ENTRY_CALLBACK */
 126:Generated_Source\PSoC4/CapSense_INT.c **** 
 127:Generated_Source\PSoC4/CapSense_INT.c ****         /* Clear pending interrupt */
 128:Generated_Source\PSoC4/CapSense_INT.c ****         CY_SET_REG32(CapSense_INTR_PTR, CapSense_INTR_SET_MASK);
 129:Generated_Source\PSoC4/CapSense_INT.c **** 
 130:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN)
 131:Generated_Source\PSoC4/CapSense_INT.c ****             if ((CapSense_CSD_NOISE_METRIC_TH < ((CY_GET_REG32(CapSense_RESULT_VAL1_PTR) &
 132:Generated_Source\PSoC4/CapSense_INT.c ****                                                         CapSense_RESULT_VAL1_BAD_CONVS_MASK) >>
 133:Generated_Source\PSoC4/CapSense_INT.c ****                                                         CapSense_RESULT_VAL1_BAD_CONVS_SHIFT)) &&
 134:Generated_Source\PSoC4/CapSense_INT.c ****                                                         (0u < CapSense_badConversionsNum))
 135:Generated_Source\PSoC4/CapSense_INT.c ****             {
 136:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Decrement bad conversions number */
 137:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_badConversionsNum--;
 138:Generated_Source\PSoC4/CapSense_INT.c **** 
 139:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Start the re-scan */
 140:Generated_Source\PSoC4/CapSense_INT.c ****                 CY_SET_REG32(CapSense_SEQ_START_PTR, CapSense_SEQ_START_AZ0_SKIP_MASK |
 141:Generated_Source\PSoC4/CapSense_INT.c ****                                                              CapSense_SEQ_START_AZ1_SKIP_MASK |
 142:Generated_Source\PSoC4/CapSense_INT.c ****                                                              CapSense_SEQ_START_START_MASK);
 143:Generated_Source\PSoC4/CapSense_INT.c ****             }
 144:Generated_Source\PSoC4/CapSense_INT.c ****             else
 145:Generated_Source\PSoC4/CapSense_INT.c ****             {
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccY3ebF6.s 			page 4


 146:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN) */
 147:Generated_Source\PSoC4/CapSense_INT.c **** 
 148:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_SsCSDPostScan();
 149:Generated_Source\PSoC4/CapSense_INT.c **** 
 150:Generated_Source\PSoC4/CapSense_INT.c ****             #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 151:Generated_Source\PSoC4/CapSense_INT.c ****                 if (CapSense_FREQ_CHANNEL_2 > CapSense_scanFreqIndex)
 152:Generated_Source\PSoC4/CapSense_INT.c ****                 {
 153:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Scan the next channel */
 154:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsNextFrequencyScan();
 155:Generated_Source\PSoC4/CapSense_INT.c ****                 }
 156:Generated_Source\PSoC4/CapSense_INT.c ****                 else
 157:Generated_Source\PSoC4/CapSense_INT.c ****                 {
 158:Generated_Source\PSoC4/CapSense_INT.c ****                     /* All channels are scanned. Set IMO to zero channel */
 159:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
 160:Generated_Source\PSoC4/CapSense_INT.c **** 
 161:Generated_Source\PSoC4/CapSense_INT.c ****                     #if (CapSense_MFS_IMO == CapSense_MFS_METHOD)
 162:Generated_Source\PSoC4/CapSense_INT.c ****                         CapSense_SsChangeImoFreq(CapSense_FREQ_CHANNEL_0);
 163:Generated_Source\PSoC4/CapSense_INT.c ****                     #else
 164:Generated_Source\PSoC4/CapSense_INT.c ****                         CapSense_SsChangeClkFreq(CapSense_FREQ_CHANNEL_0);
 165:Generated_Source\PSoC4/CapSense_INT.c ****                     #endif /* (CapSense_MFS_IMO == CapSense_MFS_METHOD) */
 166:Generated_Source\PSoC4/CapSense_INT.c **** 
 167:Generated_Source\PSoC4/CapSense_INT.c ****                     #if (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN)
 168:Generated_Source\PSoC4/CapSense_INT.c ****                         /* Disable Fourth-generation HW block */
 169:Generated_Source\PSoC4/CapSense_INT.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd);
 170:Generated_Source\PSoC4/CapSense_INT.c ****                     #endif /* (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) */
 171:Generated_Source\PSoC4/CapSense_INT.c **** 
 172:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Update Scan Counter */
 173:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_dsRam.scanCounter++;
 174:Generated_Source\PSoC4/CapSense_INT.c **** 
 175:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Sensor is totally scanned. Reset BUSY flag */
 176:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_dsRam.status &= ~(CapSense_SW_STS_BUSY | CapSense_WDGT_SW_STS_BUSY);
 177:Generated_Source\PSoC4/CapSense_INT.c ****                 }
 178:Generated_Source\PSoC4/CapSense_INT.c ****             #else
 179:Generated_Source\PSoC4/CapSense_INT.c ****                 {
 180:Generated_Source\PSoC4/CapSense_INT.c ****                     #if (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN)
 181:Generated_Source\PSoC4/CapSense_INT.c ****                         /* Disable Fourth-generation HW block */
 182:Generated_Source\PSoC4/CapSense_INT.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd);
 183:Generated_Source\PSoC4/CapSense_INT.c ****                     #endif /* (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) */
 184:Generated_Source\PSoC4/CapSense_INT.c **** 
 185:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Update Scan Counter */
 186:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_dsRam.scanCounter++;
 187:Generated_Source\PSoC4/CapSense_INT.c **** 
 188:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Sensor is totally scanned. Reset BUSY flag */
 189:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_dsRam.status &= ~(CapSense_SW_STS_BUSY | CapSense_WDGT_SW_STS_BUSY);
 190:Generated_Source\PSoC4/CapSense_INT.c ****                 }
 191:Generated_Source\PSoC4/CapSense_INT.c ****             #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 192:Generated_Source\PSoC4/CapSense_INT.c ****     #if (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN)
 193:Generated_Source\PSoC4/CapSense_INT.c ****         }
 194:Generated_Source\PSoC4/CapSense_INT.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN) */
 195:Generated_Source\PSoC4/CapSense_INT.c **** 
 196:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_EXIT_CALLBACK
 197:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_ExitCallback();
 198:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_EXIT_CALLBACK */
 199:Generated_Source\PSoC4/CapSense_INT.c ****     }
 200:Generated_Source\PSoC4/CapSense_INT.c **** 
 201:Generated_Source\PSoC4/CapSense_INT.c **** 
 202:Generated_Source\PSoC4/CapSense_INT.c ****     /*******************************************************************************
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccY3ebF6.s 			page 5


 203:Generated_Source\PSoC4/CapSense_INT.c ****     * Function Name: CapSense_CSDPostMultiScan
 204:Generated_Source\PSoC4/CapSense_INT.c ****     ****************************************************************************//**
 205:Generated_Source\PSoC4/CapSense_INT.c ****     *
 206:Generated_Source\PSoC4/CapSense_INT.c ****     * \brief
 207:Generated_Source\PSoC4/CapSense_INT.c ****     *  This is an internal ISR function for the multiple-sensor scanning
 208:Generated_Source\PSoC4/CapSense_INT.c ****     *  implementation.
 209:Generated_Source\PSoC4/CapSense_INT.c ****     *
 210:Generated_Source\PSoC4/CapSense_INT.c ****     * \details
 211:Generated_Source\PSoC4/CapSense_INT.c ****     *  This ISR handler is triggered when the user calls the
 212:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_Scan() or CapSense_ScanAllWidgets() APIs.
 213:Generated_Source\PSoC4/CapSense_INT.c ****     *
 214:Generated_Source\PSoC4/CapSense_INT.c ****     *  The following tasks are performed:
 215:Generated_Source\PSoC4/CapSense_INT.c ****     *    1. Disable the CSD interrupt.
 216:Generated_Source\PSoC4/CapSense_INT.c ****     *    2. Read the Counter register and update the data structure with raw data.
 217:Generated_Source\PSoC4/CapSense_INT.c ****     *    3. Connect the Vref buffer to the AMUX bus.
 218:Generated_Source\PSoC4/CapSense_INT.c ****     *    4. Disable the CSD block (after the widget has been scanned).
 219:Generated_Source\PSoC4/CapSense_INT.c ****     *    5. Update the Scan Counter.
 220:Generated_Source\PSoC4/CapSense_INT.c ****     *    6. Reset the BUSY flag.
 221:Generated_Source\PSoC4/CapSense_INT.c ****     *    7. Enable the CSD interrupt.
 222:Generated_Source\PSoC4/CapSense_INT.c ****     *
 223:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler initializes scanning for the previous sensor when the
 224:Generated_Source\PSoC4/CapSense_INT.c ****     *  widget has more than one sensor.
 225:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler initializes scanning for the next widget when the
 226:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_ScanAllWidgets() APIs are called and the project has
 227:Generated_Source\PSoC4/CapSense_INT.c ****     *  more than one widget.
 228:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler changes the IMO and initializes scanning for the next
 229:Generated_Source\PSoC4/CapSense_INT.c ****     *  frequency channels when multi-frequency scanning is enabled.
 230:Generated_Source\PSoC4/CapSense_INT.c ****     *
 231:Generated_Source\PSoC4/CapSense_INT.c ****     *  This function has two Macro Callbacks that allow calling the user
 232:Generated_Source\PSoC4/CapSense_INT.c ****     *  code from macros specified in Component's generated code. Refer to the
 233:Generated_Source\PSoC4/CapSense_INT.c ****     *  \ref group_c_macrocallbacks section of the PSoC Creator User Guide
 234:Generated_Source\PSoC4/CapSense_INT.c ****     *  for details.
 235:Generated_Source\PSoC4/CapSense_INT.c ****     *
 236:Generated_Source\PSoC4/CapSense_INT.c ****     *******************************************************************************/
 237:Generated_Source\PSoC4/CapSense_INT.c ****     CY_ISR(CapSense_CSDPostMultiScan)
 238:Generated_Source\PSoC4/CapSense_INT.c ****     {
 239:Generated_Source\PSoC4/CapSense_INT.c ****         /* Declare and initialize ptr to sensor IO structure to appropriate address */
 240:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_FLASH_IO_STRUCT const *curSnsIOPtr = (CapSense_FLASH_IO_STRUCT const *)
 241:Generated_Source\PSoC4/CapSense_INT.c ****                                                           CapSense_dsFlash.wdgtArray[CapSense_widge
 242:Generated_Source\PSoC4/CapSense_INT.c ****                                                           + CapSense_sensorIndex;
 243:Generated_Source\PSoC4/CapSense_INT.c **** 
 244:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_ENTRY_CALLBACK
 245:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_EntryCallback();
 246:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_ENTRY_CALLBACK */
 247:Generated_Source\PSoC4/CapSense_INT.c **** 
 248:Generated_Source\PSoC4/CapSense_INT.c ****         /* Clear pending interrupt */
 249:Generated_Source\PSoC4/CapSense_INT.c ****         CY_SET_REG32(CapSense_INTR_PTR, CapSense_INTR_SET_MASK);
 250:Generated_Source\PSoC4/CapSense_INT.c **** 
 251:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN)
 252:Generated_Source\PSoC4/CapSense_INT.c ****             if ((CapSense_CSD_NOISE_METRIC_TH < ((CY_GET_REG32(CapSense_RESULT_VAL1_PTR) &
 253:Generated_Source\PSoC4/CapSense_INT.c ****                                                       CapSense_RESULT_VAL1_BAD_CONVS_MASK) >>
 254:Generated_Source\PSoC4/CapSense_INT.c ****                                                       CapSense_RESULT_VAL1_BAD_CONVS_SHIFT)) &&
 255:Generated_Source\PSoC4/CapSense_INT.c ****                                                       (0u < CapSense_badConversionsNum))
 256:Generated_Source\PSoC4/CapSense_INT.c ****             {
 257:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Decrement bad conversions number */
 258:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_badConversionsNum--;
 259:Generated_Source\PSoC4/CapSense_INT.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccY3ebF6.s 			page 6


 260:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Start the re-scan */
 261:Generated_Source\PSoC4/CapSense_INT.c ****                 CY_SET_REG32(CapSense_SEQ_START_PTR, CapSense_SEQ_START_AZ0_SKIP_MASK |
 262:Generated_Source\PSoC4/CapSense_INT.c ****                                                              CapSense_SEQ_START_AZ1_SKIP_MASK |
 263:Generated_Source\PSoC4/CapSense_INT.c ****                                                              CapSense_SEQ_START_START_MASK);
 264:Generated_Source\PSoC4/CapSense_INT.c ****             }
 265:Generated_Source\PSoC4/CapSense_INT.c ****             else
 266:Generated_Source\PSoC4/CapSense_INT.c ****             {
 267:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN) */
 268:Generated_Source\PSoC4/CapSense_INT.c **** 
 269:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_SsCSDPostScan();
 270:Generated_Source\PSoC4/CapSense_INT.c **** 
 271:Generated_Source\PSoC4/CapSense_INT.c ****             /* Disable sensor when all frequency channels are scanned */
 272:Generated_Source\PSoC4/CapSense_INT.c ****             #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 273:Generated_Source\PSoC4/CapSense_INT.c ****                 if (CapSense_FREQ_CHANNEL_2 == CapSense_scanFreqIndex)
 274:Generated_Source\PSoC4/CapSense_INT.c ****             #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 275:Generated_Source\PSoC4/CapSense_INT.c ****             {
 276:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Disable sensor */
 277:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_CSDDisconnectSns(curSnsIOPtr);
 278:Generated_Source\PSoC4/CapSense_INT.c ****             }
 279:Generated_Source\PSoC4/CapSense_INT.c **** 
 280:Generated_Source\PSoC4/CapSense_INT.c ****             #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 281:Generated_Source\PSoC4/CapSense_INT.c ****                 if (CapSense_FREQ_CHANNEL_2 > CapSense_scanFreqIndex)
 282:Generated_Source\PSoC4/CapSense_INT.c ****                 {
 283:Generated_Source\PSoC4/CapSense_INT.c ****                      /* Scan the next channel */
 284:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsNextFrequencyScan();
 285:Generated_Source\PSoC4/CapSense_INT.c ****                 }
 286:Generated_Source\PSoC4/CapSense_INT.c ****                 else
 287:Generated_Source\PSoC4/CapSense_INT.c ****                 {
 288:Generated_Source\PSoC4/CapSense_INT.c ****                      /* All channels are scanned. Set IMO to zero channel */
 289:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
 290:Generated_Source\PSoC4/CapSense_INT.c **** 
 291:Generated_Source\PSoC4/CapSense_INT.c ****                     #if (CapSense_MFS_IMO == CapSense_MFS_METHOD)
 292:Generated_Source\PSoC4/CapSense_INT.c ****                         CapSense_SsChangeImoFreq(CapSense_FREQ_CHANNEL_0);
 293:Generated_Source\PSoC4/CapSense_INT.c ****                     #else
 294:Generated_Source\PSoC4/CapSense_INT.c ****                         CapSense_SsChangeClkFreq(CapSense_FREQ_CHANNEL_0);
 295:Generated_Source\PSoC4/CapSense_INT.c ****                     #endif /* (CapSense_MFS_IMO == CapSense_MFS_METHOD) */
 296:Generated_Source\PSoC4/CapSense_INT.c **** 
 297:Generated_Source\PSoC4/CapSense_INT.c ****                      /* Scan the next sensor */
 298:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsCSDInitNextScan();
 299:Generated_Source\PSoC4/CapSense_INT.c ****                 }
 300:Generated_Source\PSoC4/CapSense_INT.c ****             #else
 301:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Scan the next sensor */
 302:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsCSDInitNextScan();
 303:Generated_Source\PSoC4/CapSense_INT.c ****             #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 304:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN)
 305:Generated_Source\PSoC4/CapSense_INT.c ****             }
 306:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN) */
 307:Generated_Source\PSoC4/CapSense_INT.c **** 
 308:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_EXIT_CALLBACK
 309:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_ExitCallback();
 310:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_EXIT_CALLBACK */
 311:Generated_Source\PSoC4/CapSense_INT.c ****     }
 312:Generated_Source\PSoC4/CapSense_INT.c **** 
 313:Generated_Source\PSoC4/CapSense_INT.c **** 
 314:Generated_Source\PSoC4/CapSense_INT.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
 315:Generated_Source\PSoC4/CapSense_INT.c ****     /*******************************************************************************
 316:Generated_Source\PSoC4/CapSense_INT.c ****     * Function Name: CapSense_CSDPostMultiScanGanged
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccY3ebF6.s 			page 7


 317:Generated_Source\PSoC4/CapSense_INT.c ****     ****************************************************************************//**
 318:Generated_Source\PSoC4/CapSense_INT.c ****     *
 319:Generated_Source\PSoC4/CapSense_INT.c ****     * \brief
 320:Generated_Source\PSoC4/CapSense_INT.c ****     *  This is an internal ISR function for the multiple-sensor scanning
 321:Generated_Source\PSoC4/CapSense_INT.c ****     *  implementation for ganged sensors.
 322:Generated_Source\PSoC4/CapSense_INT.c ****     *
 323:Generated_Source\PSoC4/CapSense_INT.c ****     * \details
 324:Generated_Source\PSoC4/CapSense_INT.c ****     *  This ISR handler is triggered when the user calls the
 325:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_Scan() API for a ganged sensor or the
 326:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_ScanAllWidgets() API in the project with ganged sensors.
 327:Generated_Source\PSoC4/CapSense_INT.c ****     *
 328:Generated_Source\PSoC4/CapSense_INT.c ****     *  The following tasks are performed:
 329:Generated_Source\PSoC4/CapSense_INT.c ****     *    1. Disable the CSD interrupt.
 330:Generated_Source\PSoC4/CapSense_INT.c ****     *    2. Read the Counter register and update the data structure with raw data.
 331:Generated_Source\PSoC4/CapSense_INT.c ****     *    3. Connect the Vref buffer to the AMUX bus.
 332:Generated_Source\PSoC4/CapSense_INT.c ****     *    4. Disable the CSD block (after the widget has been scanned).
 333:Generated_Source\PSoC4/CapSense_INT.c ****     *    5. Update the Scan Counter.
 334:Generated_Source\PSoC4/CapSense_INT.c ****     *    6. Reset the BUSY flag.
 335:Generated_Source\PSoC4/CapSense_INT.c ****     *    7. Enable the CSD interrupt.
 336:Generated_Source\PSoC4/CapSense_INT.c ****     *
 337:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler initializes scanning for the previous sensor when the
 338:Generated_Source\PSoC4/CapSense_INT.c ****     *  widget has more than one sensor.
 339:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler initializes scanning for the next widget when the
 340:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_ScanAllWidgets() APIs are called and the project has
 341:Generated_Source\PSoC4/CapSense_INT.c ****     *  more than one widget.
 342:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler changes the IMO and initializes scanning for the next
 343:Generated_Source\PSoC4/CapSense_INT.c ****     *  frequency channels when multi-frequency scanning is enabled.
 344:Generated_Source\PSoC4/CapSense_INT.c ****     *
 345:Generated_Source\PSoC4/CapSense_INT.c ****     *  This function has two Macro Callbacks that allow calling the user
 346:Generated_Source\PSoC4/CapSense_INT.c ****     *  code from macros specified in Component's generated code. Refer to the
 347:Generated_Source\PSoC4/CapSense_INT.c ****     *  \ref group_c_macrocallbacks section of the PSoC Creator User Guide
 348:Generated_Source\PSoC4/CapSense_INT.c ****     *  for details.
 349:Generated_Source\PSoC4/CapSense_INT.c ****     *
 350:Generated_Source\PSoC4/CapSense_INT.c ****     *******************************************************************************/
 351:Generated_Source\PSoC4/CapSense_INT.c ****     CY_ISR(CapSense_CSDPostMultiScanGanged)
 352:Generated_Source\PSoC4/CapSense_INT.c ****     {
 353:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_ENTRY_CALLBACK
 354:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_EntryCallback();
 355:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_ENTRY_CALLBACK */
 356:Generated_Source\PSoC4/CapSense_INT.c **** 
 357:Generated_Source\PSoC4/CapSense_INT.c ****         /* Clear pending interrupt */
 358:Generated_Source\PSoC4/CapSense_INT.c ****         CY_SET_REG32(CapSense_INTR_PTR, CapSense_INTR_SET_MASK);
 359:Generated_Source\PSoC4/CapSense_INT.c **** 
 360:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN)
 361:Generated_Source\PSoC4/CapSense_INT.c ****             if ((CapSense_CSD_NOISE_METRIC_TH < ((CY_GET_REG32(CapSense_RESULT_VAL1_PTR) &
 362:Generated_Source\PSoC4/CapSense_INT.c ****                                                       CapSense_RESULT_VAL1_BAD_CONVS_MASK) >>
 363:Generated_Source\PSoC4/CapSense_INT.c ****                                                       CapSense_RESULT_VAL1_BAD_CONVS_SHIFT)) &&
 364:Generated_Source\PSoC4/CapSense_INT.c ****                                                       (0u < CapSense_badConversionsNum))
 365:Generated_Source\PSoC4/CapSense_INT.c ****             {
 366:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Decrement bad conversions number */
 367:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_badConversionsNum--;
 368:Generated_Source\PSoC4/CapSense_INT.c **** 
 369:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Start the re-scan */
 370:Generated_Source\PSoC4/CapSense_INT.c ****                 CY_SET_REG32(CapSense_SEQ_START_PTR, CapSense_SEQ_START_AZ0_SKIP_MASK |
 371:Generated_Source\PSoC4/CapSense_INT.c ****                                                              CapSense_SEQ_START_AZ1_SKIP_MASK |
 372:Generated_Source\PSoC4/CapSense_INT.c ****                                                              CapSense_SEQ_START_START_MASK);
 373:Generated_Source\PSoC4/CapSense_INT.c ****             }
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccY3ebF6.s 			page 8


 374:Generated_Source\PSoC4/CapSense_INT.c ****             else
 375:Generated_Source\PSoC4/CapSense_INT.c ****             {
 376:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN) */
 377:Generated_Source\PSoC4/CapSense_INT.c **** 
 378:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_SsCSDPostScan();
 379:Generated_Source\PSoC4/CapSense_INT.c **** 
 380:Generated_Source\PSoC4/CapSense_INT.c ****             #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 381:Generated_Source\PSoC4/CapSense_INT.c ****                 if (CapSense_FREQ_CHANNEL_2 == CapSense_scanFreqIndex)
 382:Generated_Source\PSoC4/CapSense_INT.c ****             #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 383:Generated_Source\PSoC4/CapSense_INT.c ****             {
 384:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsCSDDisconnectSnsExt((uint32)CapSense_widgetIndex, (uint32)CapSense_senso
 385:Generated_Source\PSoC4/CapSense_INT.c ****             }
 386:Generated_Source\PSoC4/CapSense_INT.c **** 
 387:Generated_Source\PSoC4/CapSense_INT.c ****             #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 388:Generated_Source\PSoC4/CapSense_INT.c ****                 if (CapSense_FREQ_CHANNEL_2 > CapSense_scanFreqIndex)
 389:Generated_Source\PSoC4/CapSense_INT.c ****                 {
 390:Generated_Source\PSoC4/CapSense_INT.c ****                      /* Scan the next channel */
 391:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsNextFrequencyScan();
 392:Generated_Source\PSoC4/CapSense_INT.c ****                 }
 393:Generated_Source\PSoC4/CapSense_INT.c ****                 else
 394:Generated_Source\PSoC4/CapSense_INT.c ****                 {
 395:Generated_Source\PSoC4/CapSense_INT.c ****                     /* All channels are scanned. Set IMO to zero channel */
 396:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
 397:Generated_Source\PSoC4/CapSense_INT.c **** 
 398:Generated_Source\PSoC4/CapSense_INT.c ****                     #if (CapSense_MFS_IMO == CapSense_MFS_METHOD)
 399:Generated_Source\PSoC4/CapSense_INT.c ****                         CapSense_SsChangeImoFreq(CapSense_FREQ_CHANNEL_0);
 400:Generated_Source\PSoC4/CapSense_INT.c ****                     #else
 401:Generated_Source\PSoC4/CapSense_INT.c ****                         CapSense_SsChangeClkFreq(CapSense_FREQ_CHANNEL_0);
 402:Generated_Source\PSoC4/CapSense_INT.c ****                     #endif /* (CapSense_MFS_IMO == CapSense_MFS_METHOD) */
 403:Generated_Source\PSoC4/CapSense_INT.c **** 
 404:Generated_Source\PSoC4/CapSense_INT.c ****                      /* Scan the next sensor */
 405:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsCSDInitNextScan();
 406:Generated_Source\PSoC4/CapSense_INT.c ****                 }
 407:Generated_Source\PSoC4/CapSense_INT.c ****             #else
 408:Generated_Source\PSoC4/CapSense_INT.c ****                  /* Scan the next sensor */
 409:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsCSDInitNextScan();
 410:Generated_Source\PSoC4/CapSense_INT.c ****             #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 411:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN)
 412:Generated_Source\PSoC4/CapSense_INT.c ****             }
 413:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN) */
 414:Generated_Source\PSoC4/CapSense_INT.c **** 
 415:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_EXIT_CALLBACK
 416:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_ExitCallback();
 417:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_EXIT_CALLBACK */
 418:Generated_Source\PSoC4/CapSense_INT.c ****     }
 419:Generated_Source\PSoC4/CapSense_INT.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
 420:Generated_Source\PSoC4/CapSense_INT.c **** 
 421:Generated_Source\PSoC4/CapSense_INT.c **** #else
 422:Generated_Source\PSoC4/CapSense_INT.c **** 
 423:Generated_Source\PSoC4/CapSense_INT.c ****     /* Third-generation HW block part */
 424:Generated_Source\PSoC4/CapSense_INT.c **** 
 425:Generated_Source\PSoC4/CapSense_INT.c ****     /*******************************************************************************
 426:Generated_Source\PSoC4/CapSense_INT.c ****     * Function Name: CapSense_CSDPostSingleScan
 427:Generated_Source\PSoC4/CapSense_INT.c ****     ****************************************************************************//**
 428:Generated_Source\PSoC4/CapSense_INT.c ****     *
 429:Generated_Source\PSoC4/CapSense_INT.c ****     * \brief
 430:Generated_Source\PSoC4/CapSense_INT.c ****     *  This is an internal ISR function for the single-sensor scanning implementation.
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccY3ebF6.s 			page 9


 431:Generated_Source\PSoC4/CapSense_INT.c ****     *
 432:Generated_Source\PSoC4/CapSense_INT.c ****     * \details
 433:Generated_Source\PSoC4/CapSense_INT.c ****     *  This ISR handler is triggered when the user calls the
 434:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_CSDScanExt() function.
 435:Generated_Source\PSoC4/CapSense_INT.c ****     *
 436:Generated_Source\PSoC4/CapSense_INT.c ****     *  The following tasks are performed for Third-generation HW block:
 437:Generated_Source\PSoC4/CapSense_INT.c ****     *    1. Disable the CSD interrupt.
 438:Generated_Source\PSoC4/CapSense_INT.c ****     *    2. Read the Counter register and update the data structure with raw data.
 439:Generated_Source\PSoC4/CapSense_INT.c ****     *    3. Connect the Vref buffer to the AMUX bus.
 440:Generated_Source\PSoC4/CapSense_INT.c ****     *    4. Update the Scan Counter.
 441:Generated_Source\PSoC4/CapSense_INT.c ****     *    5. Reset the BUSY flag.
 442:Generated_Source\PSoC4/CapSense_INT.c ****     *    6. Enable the CSD interrupt.
 443:Generated_Source\PSoC4/CapSense_INT.c ****     *
 444:Generated_Source\PSoC4/CapSense_INT.c ****     *  The following tasks are performed for Fourth-generation HW block:
 445:Generated_Source\PSoC4/CapSense_INT.c ****     *    1. Check if the raw data is not noisy.
 446:Generated_Source\PSoC4/CapSense_INT.c ****     *    2. Read the Counter register and update the data structure with raw data.
 447:Generated_Source\PSoC4/CapSense_INT.c ****     *    3. Configure and start the scan for the next frequency if the
 448:Generated_Source\PSoC4/CapSense_INT.c ****     *      multi-frequency is enabled.
 449:Generated_Source\PSoC4/CapSense_INT.c ****     *    4. Update the Scan Counter.
 450:Generated_Source\PSoC4/CapSense_INT.c ****     *    5. Reset the BUSY flag.
 451:Generated_Source\PSoC4/CapSense_INT.c ****     *    6. Enable the CSD interrupt.
 452:Generated_Source\PSoC4/CapSense_INT.c ****     *
 453:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler changes the IMO and initializes scanning for the next frequency
 454:Generated_Source\PSoC4/CapSense_INT.c ****     *  channels when multi-frequency scanning is enabled.
 455:Generated_Source\PSoC4/CapSense_INT.c ****     *
 456:Generated_Source\PSoC4/CapSense_INT.c ****     *  This function has two Macro Callbacks that allow calling the user code
 457:Generated_Source\PSoC4/CapSense_INT.c ****     *  from macros specified in Component's generated code. Refer to the
 458:Generated_Source\PSoC4/CapSense_INT.c ****     *  \ref group_c_macrocallbacks section of the PSoC Creator User Guide
 459:Generated_Source\PSoC4/CapSense_INT.c ****     *  for details.
 460:Generated_Source\PSoC4/CapSense_INT.c ****     *
 461:Generated_Source\PSoC4/CapSense_INT.c ****     *******************************************************************************/
 462:Generated_Source\PSoC4/CapSense_INT.c ****     CY_ISR(CapSense_CSDPostSingleScan)
 463:Generated_Source\PSoC4/CapSense_INT.c ****     {
 464:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_ENTRY_CALLBACK
 465:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_EntryCallback();
 466:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_ENTRY_CALLBACK */
 467:Generated_Source\PSoC4/CapSense_INT.c **** 
 468:Generated_Source\PSoC4/CapSense_INT.c ****         /* Clear pending interrupt */
 469:Generated_Source\PSoC4/CapSense_INT.c ****         CY_SET_REG32(CapSense_INTR_PTR, CapSense_INTR_SET_MASK);
 470:Generated_Source\PSoC4/CapSense_INT.c **** 
 471:Generated_Source\PSoC4/CapSense_INT.c ****         /* Read Rawdata */
 472:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_SsCSDPostScan();
 473:Generated_Source\PSoC4/CapSense_INT.c **** 
 474:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 475:Generated_Source\PSoC4/CapSense_INT.c ****             if (CapSense_FREQ_CHANNEL_2 > CapSense_scanFreqIndex)
 476:Generated_Source\PSoC4/CapSense_INT.c ****             {
 477:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Connect Vref Buffer to AMUX bus. Third-generation HW block is enabled */
 478:Generated_Source\PSoC4/CapSense_INT.c ****                 CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECHARGE_CON
 479:Generated_Source\PSoC4/CapSense_INT.c **** 
 480:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsNextFrequencyScan();
 481:Generated_Source\PSoC4/CapSense_INT.c ****             }
 482:Generated_Source\PSoC4/CapSense_INT.c ****             else
 483:Generated_Source\PSoC4/CapSense_INT.c ****             {
 484:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
 485:Generated_Source\PSoC4/CapSense_INT.c **** 
 486:Generated_Source\PSoC4/CapSense_INT.c ****                 #if (CapSense_MFS_IMO == CapSense_MFS_METHOD)
 487:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsChangeImoFreq(CapSense_FREQ_CHANNEL_0);
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccY3ebF6.s 			page 10


 488:Generated_Source\PSoC4/CapSense_INT.c ****                 #else
 489:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsChangeClkFreq(CapSense_FREQ_CHANNEL_0);
 490:Generated_Source\PSoC4/CapSense_INT.c ****                 #endif /* (CapSense_MFS_IMO == CapSense_MFS_METHOD) */
 491:Generated_Source\PSoC4/CapSense_INT.c **** 
 492:Generated_Source\PSoC4/CapSense_INT.c ****                 #if (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN)
 493:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Disable Third-generation HW block. Connect Vref Buffer to AMUX bus */
 494:Generated_Source\PSoC4/CapSense_INT.c ****                     #if ((CapSense_CSH_PRECHARGE_IO_BUF == CapSense_CSD_CSH_PRECHARGE_SRC) &&\
 495:Generated_Source\PSoC4/CapSense_INT.c ****                          (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
 496:Generated_Source\PSoC4/CapSense_INT.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CMOD_PRECHA
 497:Generated_Source\PSoC4/CapSense_INT.c ****                     #else
 498:Generated_Source\PSoC4/CapSense_INT.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECH
 499:Generated_Source\PSoC4/CapSense_INT.c ****                     #endif
 500:Generated_Source\PSoC4/CapSense_INT.c ****                 #else
 501:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Connect Vref Buffer to AMUX bus. Third-generation HW block is enabled */
 502:Generated_Source\PSoC4/CapSense_INT.c ****                     CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECHARGE
 503:Generated_Source\PSoC4/CapSense_INT.c ****                 #endif
 504:Generated_Source\PSoC4/CapSense_INT.c **** 
 505:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Update Scan Counter */
 506:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_dsRam.scanCounter++;
 507:Generated_Source\PSoC4/CapSense_INT.c **** 
 508:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Sensor is totally scanned. Reset BUSY flag */
 509:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_dsRam.status &= ~(CapSense_SW_STS_BUSY | CapSense_WDGT_SW_STS_BUSY);
 510:Generated_Source\PSoC4/CapSense_INT.c ****             }
 511:Generated_Source\PSoC4/CapSense_INT.c ****         #else
 512:Generated_Source\PSoC4/CapSense_INT.c ****             {
 513:Generated_Source\PSoC4/CapSense_INT.c ****                 #if (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN)
 514:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Disable Third-generation HW block. Connect Vref Buffer to AMUX bus */
 515:Generated_Source\PSoC4/CapSense_INT.c ****                     #if ((CapSense_CSH_PRECHARGE_IO_BUF == CapSense_CSD_CSH_PRECHARGE_SRC) &&\
 516:Generated_Source\PSoC4/CapSense_INT.c ****                          (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
 517:Generated_Source\PSoC4/CapSense_INT.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CMOD_PRECHA
 518:Generated_Source\PSoC4/CapSense_INT.c ****                     #else
 519:Generated_Source\PSoC4/CapSense_INT.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECH
 520:Generated_Source\PSoC4/CapSense_INT.c ****                     #endif
 521:Generated_Source\PSoC4/CapSense_INT.c ****                 #else
 522:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Connect Vref Buffer to AMUX bus. Third-generation HW block is enabled */
 523:Generated_Source\PSoC4/CapSense_INT.c ****                     CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECHARGE
 524:Generated_Source\PSoC4/CapSense_INT.c ****                 #endif
 525:Generated_Source\PSoC4/CapSense_INT.c **** 
 526:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Update Scan Counter */
 527:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_dsRam.scanCounter++;
 528:Generated_Source\PSoC4/CapSense_INT.c **** 
 529:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Sensor is totally scanned. Reset BUSY flag */
 530:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_dsRam.status &= ~(CapSense_SW_STS_BUSY | CapSense_WDGT_SW_STS_BUSY);
 531:Generated_Source\PSoC4/CapSense_INT.c ****             }
 532:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 533:Generated_Source\PSoC4/CapSense_INT.c **** 
 534:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_EXIT_CALLBACK
 535:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_ExitCallback();
 536:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_EXIT_CALLBACK */
 537:Generated_Source\PSoC4/CapSense_INT.c ****     }
 538:Generated_Source\PSoC4/CapSense_INT.c **** 
 539:Generated_Source\PSoC4/CapSense_INT.c **** 
 540:Generated_Source\PSoC4/CapSense_INT.c ****     /*******************************************************************************
 541:Generated_Source\PSoC4/CapSense_INT.c ****     * Function Name: CapSense_CSDPostMultiScan
 542:Generated_Source\PSoC4/CapSense_INT.c ****     ****************************************************************************//**
 543:Generated_Source\PSoC4/CapSense_INT.c ****     *
 544:Generated_Source\PSoC4/CapSense_INT.c ****     * \brief
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccY3ebF6.s 			page 11


 545:Generated_Source\PSoC4/CapSense_INT.c ****     *  This is an internal ISR function for the multiple-sensor scanning
 546:Generated_Source\PSoC4/CapSense_INT.c ****     *  implementation.
 547:Generated_Source\PSoC4/CapSense_INT.c ****     *
 548:Generated_Source\PSoC4/CapSense_INT.c ****     * \details
 549:Generated_Source\PSoC4/CapSense_INT.c ****     *  This ISR handler is triggered when the user calls the
 550:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_Scan() or CapSense_ScanAllWidgets() APIs.
 551:Generated_Source\PSoC4/CapSense_INT.c ****     *
 552:Generated_Source\PSoC4/CapSense_INT.c ****     *  The following tasks are performed:
 553:Generated_Source\PSoC4/CapSense_INT.c ****     *    1. Disable the CSD interrupt.
 554:Generated_Source\PSoC4/CapSense_INT.c ****     *    2. Read the Counter register and update the data structure with raw data.
 555:Generated_Source\PSoC4/CapSense_INT.c ****     *    3. Connect the Vref buffer to the AMUX bus.
 556:Generated_Source\PSoC4/CapSense_INT.c ****     *    4. Disable the CSD block (after the widget has been scanned).
 557:Generated_Source\PSoC4/CapSense_INT.c ****     *    5. Update the Scan Counter.
 558:Generated_Source\PSoC4/CapSense_INT.c ****     *    6. Reset the BUSY flag.
 559:Generated_Source\PSoC4/CapSense_INT.c ****     *    7. Enable the CSD interrupt.
 560:Generated_Source\PSoC4/CapSense_INT.c ****     *
 561:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler initializes scanning for the previous sensor when the
 562:Generated_Source\PSoC4/CapSense_INT.c ****     *  widget has more than one sensor.
 563:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler initializes scanning for the next widget when the
 564:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_ScanAllWidgets() APIs are called and the project has
 565:Generated_Source\PSoC4/CapSense_INT.c ****     *  more than one widget.
 566:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler changes the IMO and initializes scanning for the next
 567:Generated_Source\PSoC4/CapSense_INT.c ****     *  frequency channels when multi-frequency scanning is enabled.
 568:Generated_Source\PSoC4/CapSense_INT.c ****     *
 569:Generated_Source\PSoC4/CapSense_INT.c ****     *  This function has two Macro Callbacks that allow calling the user
 570:Generated_Source\PSoC4/CapSense_INT.c ****     *  code from macros specified in Component's generated code. Refer to the
 571:Generated_Source\PSoC4/CapSense_INT.c ****     *  \ref group_c_macrocallbacks section of the PSoC Creator User Guide
 572:Generated_Source\PSoC4/CapSense_INT.c ****     *  for details.
 573:Generated_Source\PSoC4/CapSense_INT.c ****     *
 574:Generated_Source\PSoC4/CapSense_INT.c ****     *******************************************************************************/
 575:Generated_Source\PSoC4/CapSense_INT.c ****     CY_ISR(CapSense_CSDPostMultiScan)
 576:Generated_Source\PSoC4/CapSense_INT.c ****     {
 577:Generated_Source\PSoC4/CapSense_INT.c ****         /* Declare and initialize ptr to sensor IO structure to appropriate address        */
 578:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_FLASH_IO_STRUCT const *curSnsIOPtr = (CapSense_FLASH_IO_STRUCT const *)
 579:Generated_Source\PSoC4/CapSense_INT.c ****                                                           CapSense_dsFlash.wdgtArray[CapSense_widge
 580:Generated_Source\PSoC4/CapSense_INT.c ****                                                           + CapSense_sensorIndex;
 581:Generated_Source\PSoC4/CapSense_INT.c **** 
 582:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_ENTRY_CALLBACK
 583:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_EntryCallback();
 584:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_ENTRY_CALLBACK */
 585:Generated_Source\PSoC4/CapSense_INT.c **** 
 586:Generated_Source\PSoC4/CapSense_INT.c ****         /* Clear pending interrupt */
 587:Generated_Source\PSoC4/CapSense_INT.c ****         CY_SET_REG32(CapSense_INTR_PTR, CapSense_INTR_SET_MASK);
 588:Generated_Source\PSoC4/CapSense_INT.c **** 
 589:Generated_Source\PSoC4/CapSense_INT.c ****          /* Read Rawdata */
 590:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_SsCSDPostScan();
 591:Generated_Source\PSoC4/CapSense_INT.c **** 
 592:Generated_Source\PSoC4/CapSense_INT.c ****         /* Connect Vref Buffer to AMUX bus */
 593:Generated_Source\PSoC4/CapSense_INT.c ****         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECHARGE_CONFIG_CSD_
 594:Generated_Source\PSoC4/CapSense_INT.c **** 
 595:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 596:Generated_Source\PSoC4/CapSense_INT.c ****             /* Disable sensor when all frequency channels are scanned */
 597:Generated_Source\PSoC4/CapSense_INT.c ****             if (CapSense_FREQ_CHANNEL_2 == CapSense_scanFreqIndex)
 598:Generated_Source\PSoC4/CapSense_INT.c ****             {
 599:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Disable sensor */
 600:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_CSDDisconnectSns(curSnsIOPtr);
 601:Generated_Source\PSoC4/CapSense_INT.c ****             }
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccY3ebF6.s 			page 12


 602:Generated_Source\PSoC4/CapSense_INT.c ****         #else
 603:Generated_Source\PSoC4/CapSense_INT.c ****             /* Disable sensor */
 604:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_CSDDisconnectSns(curSnsIOPtr);
 605:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 606:Generated_Source\PSoC4/CapSense_INT.c **** 
 607:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 608:Generated_Source\PSoC4/CapSense_INT.c ****             if (CapSense_FREQ_CHANNEL_2 > CapSense_scanFreqIndex)
 609:Generated_Source\PSoC4/CapSense_INT.c ****             {
 610:Generated_Source\PSoC4/CapSense_INT.c ****                  /* Scan the next channel */
 611:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsNextFrequencyScan();
 612:Generated_Source\PSoC4/CapSense_INT.c ****             }
 613:Generated_Source\PSoC4/CapSense_INT.c ****             else
 614:Generated_Source\PSoC4/CapSense_INT.c ****             {
 615:Generated_Source\PSoC4/CapSense_INT.c ****                  /* All channels are scanned. Set IMO to zero channel */
 616:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
 617:Generated_Source\PSoC4/CapSense_INT.c **** 
 618:Generated_Source\PSoC4/CapSense_INT.c ****                 #if (CapSense_MFS_IMO == CapSense_MFS_METHOD)
 619:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsChangeImoFreq(CapSense_FREQ_CHANNEL_0);
 620:Generated_Source\PSoC4/CapSense_INT.c ****                 #else
 621:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsChangeClkFreq(CapSense_FREQ_CHANNEL_0);
 622:Generated_Source\PSoC4/CapSense_INT.c ****                 #endif /* (CapSense_MFS_IMO == CapSense_MFS_METHOD) */
 623:Generated_Source\PSoC4/CapSense_INT.c **** 
 624:Generated_Source\PSoC4/CapSense_INT.c ****                  /* Scan the next sensor */
 625:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsCSDInitNextScan();
 626:Generated_Source\PSoC4/CapSense_INT.c ****             }
 627:Generated_Source\PSoC4/CapSense_INT.c ****         #else
 628:Generated_Source\PSoC4/CapSense_INT.c ****             /* Scan the next sensor */
 629:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_SsCSDInitNextScan();
 630:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 631:Generated_Source\PSoC4/CapSense_INT.c **** 
 632:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_EXIT_CALLBACK
 633:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_ExitCallback();
 634:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_EXIT_CALLBACK */
 635:Generated_Source\PSoC4/CapSense_INT.c ****     }
 636:Generated_Source\PSoC4/CapSense_INT.c **** 
 637:Generated_Source\PSoC4/CapSense_INT.c **** 
 638:Generated_Source\PSoC4/CapSense_INT.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
 639:Generated_Source\PSoC4/CapSense_INT.c ****     /*******************************************************************************
 640:Generated_Source\PSoC4/CapSense_INT.c ****     * Function Name: CapSense_CSDPostMultiScanGanged
 641:Generated_Source\PSoC4/CapSense_INT.c ****     ****************************************************************************//**
 642:Generated_Source\PSoC4/CapSense_INT.c ****     *
 643:Generated_Source\PSoC4/CapSense_INT.c ****     * \brief
 644:Generated_Source\PSoC4/CapSense_INT.c ****     *  This is an internal ISR function for the multiple-sensor scanning
 645:Generated_Source\PSoC4/CapSense_INT.c ****     *  implementation for ganged sensors.
 646:Generated_Source\PSoC4/CapSense_INT.c ****     *
 647:Generated_Source\PSoC4/CapSense_INT.c ****     * \details
 648:Generated_Source\PSoC4/CapSense_INT.c ****     *  This ISR handler is triggered when the user calls the
 649:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_Scan() API for a ganged sensor or the
 650:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_ScanAllWidgets() API in the project with ganged sensors.
 651:Generated_Source\PSoC4/CapSense_INT.c ****     *
 652:Generated_Source\PSoC4/CapSense_INT.c ****     *  The following tasks are performed:
 653:Generated_Source\PSoC4/CapSense_INT.c ****     *    1. Disable the CSD interrupt.
 654:Generated_Source\PSoC4/CapSense_INT.c ****     *    2. Read the Counter register and update the data structure with raw data.
 655:Generated_Source\PSoC4/CapSense_INT.c ****     *    3. Connect the Vref buffer to the AMUX bus.
 656:Generated_Source\PSoC4/CapSense_INT.c ****     *    4. Disable the CSD block (after the widget has been scanned).
 657:Generated_Source\PSoC4/CapSense_INT.c ****     *    5. Update the Scan Counter.
 658:Generated_Source\PSoC4/CapSense_INT.c ****     *    6. Reset the BUSY flag.
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccY3ebF6.s 			page 13


 659:Generated_Source\PSoC4/CapSense_INT.c ****     *    7. Enable the CSD interrupt.
 660:Generated_Source\PSoC4/CapSense_INT.c ****     *
 661:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler initializes scanning for the previous sensor when the
 662:Generated_Source\PSoC4/CapSense_INT.c ****     *  widget has more than one sensor.
 663:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler initializes scanning for the next widget when the
 664:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_ScanAllWidgets() APIs are called and the project has
 665:Generated_Source\PSoC4/CapSense_INT.c ****     *  more than one widget.
 666:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler changes the IMO and initializes scanning for the next
 667:Generated_Source\PSoC4/CapSense_INT.c ****     *  frequency channels when multi-frequency scanning is enabled.
 668:Generated_Source\PSoC4/CapSense_INT.c ****     *
 669:Generated_Source\PSoC4/CapSense_INT.c ****     *  This function has two Macro Callbacks that allow calling the user
 670:Generated_Source\PSoC4/CapSense_INT.c ****     *  code from macros specified in Component's generated code. Refer to the
 671:Generated_Source\PSoC4/CapSense_INT.c ****     *  \ref group_c_macrocallbacks section of the PSoC Creator User Guide
 672:Generated_Source\PSoC4/CapSense_INT.c ****     *  for details.
 673:Generated_Source\PSoC4/CapSense_INT.c ****     *
 674:Generated_Source\PSoC4/CapSense_INT.c ****     *******************************************************************************/
 675:Generated_Source\PSoC4/CapSense_INT.c ****     CY_ISR(CapSense_CSDPostMultiScanGanged)
 676:Generated_Source\PSoC4/CapSense_INT.c ****     {
 677:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_ENTRY_CALLBACK
 678:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_EntryCallback();
 679:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_ENTRY_CALLBACK */
 680:Generated_Source\PSoC4/CapSense_INT.c **** 
 681:Generated_Source\PSoC4/CapSense_INT.c ****         /* Clear pending interrupt */
 682:Generated_Source\PSoC4/CapSense_INT.c ****         CY_SET_REG32(CapSense_INTR_PTR, CapSense_INTR_SET_MASK);
 683:Generated_Source\PSoC4/CapSense_INT.c **** 
 684:Generated_Source\PSoC4/CapSense_INT.c ****          /* Read Rawdata */
 685:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_SsCSDPostScan();
 686:Generated_Source\PSoC4/CapSense_INT.c **** 
 687:Generated_Source\PSoC4/CapSense_INT.c ****         /* Connect Vref Buffer to AMUX bus */
 688:Generated_Source\PSoC4/CapSense_INT.c ****         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECHARGE_CONFIG_CSD_
 689:Generated_Source\PSoC4/CapSense_INT.c **** 
 690:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 691:Generated_Source\PSoC4/CapSense_INT.c ****             if (CapSense_FREQ_CHANNEL_2 == CapSense_scanFreqIndex)
 692:Generated_Source\PSoC4/CapSense_INT.c ****             {
 693:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsCSDDisconnectSnsExt((uint32)CapSense_widgetIndex, (uint32)CapSense_senso
 694:Generated_Source\PSoC4/CapSense_INT.c ****             }
 695:Generated_Source\PSoC4/CapSense_INT.c ****         #else
 696:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_SsCSDDisconnectSnsExt((uint32)CapSense_widgetIndex, (uint32)CapSense_sensorInd
 697:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 698:Generated_Source\PSoC4/CapSense_INT.c **** 
 699:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 700:Generated_Source\PSoC4/CapSense_INT.c ****             if (CapSense_FREQ_CHANNEL_2 > CapSense_scanFreqIndex)
 701:Generated_Source\PSoC4/CapSense_INT.c ****             {
 702:Generated_Source\PSoC4/CapSense_INT.c ****                  /* Scan the next channel */
 703:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsNextFrequencyScan();
 704:Generated_Source\PSoC4/CapSense_INT.c ****             }
 705:Generated_Source\PSoC4/CapSense_INT.c ****             else
 706:Generated_Source\PSoC4/CapSense_INT.c ****             {
 707:Generated_Source\PSoC4/CapSense_INT.c ****                 /* All channels are scanned. Set IMO to zero channel */
 708:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
 709:Generated_Source\PSoC4/CapSense_INT.c **** 
 710:Generated_Source\PSoC4/CapSense_INT.c ****                 #if (CapSense_MFS_IMO == CapSense_MFS_METHOD)
 711:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsChangeImoFreq(CapSense_FREQ_CHANNEL_0);
 712:Generated_Source\PSoC4/CapSense_INT.c ****                 #else
 713:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsChangeClkFreq(CapSense_FREQ_CHANNEL_0);
 714:Generated_Source\PSoC4/CapSense_INT.c ****                 #endif /* (CapSense_MFS_IMO == CapSense_MFS_METHOD) */
 715:Generated_Source\PSoC4/CapSense_INT.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccY3ebF6.s 			page 14


 716:Generated_Source\PSoC4/CapSense_INT.c ****                  /* Scan the next sensor */
 717:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsCSDInitNextScan();
 718:Generated_Source\PSoC4/CapSense_INT.c ****             }
 719:Generated_Source\PSoC4/CapSense_INT.c ****         #else
 720:Generated_Source\PSoC4/CapSense_INT.c ****              /* Scan the next sensor */
 721:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_SsCSDInitNextScan();
 722:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 723:Generated_Source\PSoC4/CapSense_INT.c **** 
 724:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_EXIT_CALLBACK
 725:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_ExitCallback();
 726:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_EXIT_CALLBACK */
 727:Generated_Source\PSoC4/CapSense_INT.c ****     }
 728:Generated_Source\PSoC4/CapSense_INT.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
 729:Generated_Source\PSoC4/CapSense_INT.c **** 
 730:Generated_Source\PSoC4/CapSense_INT.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 731:Generated_Source\PSoC4/CapSense_INT.c **** 
 732:Generated_Source\PSoC4/CapSense_INT.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) || (CapSense_ENABLE == CapSense_CSD_CSX_EN)) */
 733:Generated_Source\PSoC4/CapSense_INT.c **** 
 734:Generated_Source\PSoC4/CapSense_INT.c **** /** \}
 735:Generated_Source\PSoC4/CapSense_INT.c ****  * \endcond */
 736:Generated_Source\PSoC4/CapSense_INT.c **** 
 737:Generated_Source\PSoC4/CapSense_INT.c **** 
 738:Generated_Source\PSoC4/CapSense_INT.c **** #if ((CapSense_ENABLE == CapSense_CSD_EN) || (CapSense_ENABLE == CapSense_CSD_CSX_EN))
 739:Generated_Source\PSoC4/CapSense_INT.c **** 
 740:Generated_Source\PSoC4/CapSense_INT.c **** /*******************************************************************************
 741:Generated_Source\PSoC4/CapSense_INT.c **** * Function Name: CapSense_SsCSDPostScan
 742:Generated_Source\PSoC4/CapSense_INT.c **** ****************************************************************************//**
 743:Generated_Source\PSoC4/CapSense_INT.c **** *
 744:Generated_Source\PSoC4/CapSense_INT.c **** * \brief
 745:Generated_Source\PSoC4/CapSense_INT.c **** *   This function reads rawdata and releases required HW resources after scan.
 746:Generated_Source\PSoC4/CapSense_INT.c **** *
 747:Generated_Source\PSoC4/CapSense_INT.c **** * \details
 748:Generated_Source\PSoC4/CapSense_INT.c **** *   This function performs following tasks after scan:
 749:Generated_Source\PSoC4/CapSense_INT.c **** *   - Reads SlotResult from Raw Counter;
 750:Generated_Source\PSoC4/CapSense_INT.c **** *   - Inits bad Conversions number;
 751:Generated_Source\PSoC4/CapSense_INT.c **** *   - Disconnects Vrefhi from AMUBUF positive input;
 752:Generated_Source\PSoC4/CapSense_INT.c **** *   - Disconnects AMUBUF output from CSDBUSB with sych PHI2+HSCMP;
 753:Generated_Source\PSoC4/CapSense_INT.c **** *   - Opens HCBV and HCBG switches.
 754:Generated_Source\PSoC4/CapSense_INT.c **** *
 755:Generated_Source\PSoC4/CapSense_INT.c **** *******************************************************************************/
 756:Generated_Source\PSoC4/CapSense_INT.c **** static void CapSense_SsCSDPostScan(void)
 757:Generated_Source\PSoC4/CapSense_INT.c **** {
  27              		.loc 1 757 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 10B5     		push	{r4, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 4, -8
  34              		.cfi_offset 14, -4
 758:Generated_Source\PSoC4/CapSense_INT.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
 759:Generated_Source\PSoC4/CapSense_INT.c **** 
 760:Generated_Source\PSoC4/CapSense_INT.c ****         uint32 tmpRawData;
 761:Generated_Source\PSoC4/CapSense_INT.c ****         uint32 tmpMaxCount;
 762:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
 763:Generated_Source\PSoC4/CapSense_INT.c ****                                             CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2Wd
  35              		.loc 1 763 0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccY3ebF6.s 			page 15


  36 0002 0F4B     		ldr	r3, .L5
  37 0004 0F48     		ldr	r0, .L5+4
  38 0006 1978     		ldrb	r1, [r3]
  39              	.LVL0:
 764:Generated_Source\PSoC4/CapSense_INT.c **** 
 765:Generated_Source\PSoC4/CapSense_INT.c ****         /* Read SlotResult from Raw Counter */
 766:Generated_Source\PSoC4/CapSense_INT.c ****         tmpRawData = CapSense_RESULT_VAL1_VALUE_MASK & CY_GET_REG32(CapSense_COUNTER_PTR);
  40              		.loc 1 766 0
  41 0008 0F4B     		ldr	r3, .L5+8
 767:Generated_Source\PSoC4/CapSense_INT.c **** 
 768:Generated_Source\PSoC4/CapSense_INT.c ****         tmpMaxCount = ((1uL << ptrWdgt->resolution) - 1uL);
 769:Generated_Source\PSoC4/CapSense_INT.c ****         if(tmpRawData < tmpMaxCount)
 770:Generated_Source\PSoC4/CapSense_INT.c ****         {
 771:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_curRamSnsPtr->raw[CapSense_scanFreqIndex] = LO16(tmpRawData);
  42              		.loc 1 771 0
  43 000a 0068     		ldr	r0, [r0]
 766:Generated_Source\PSoC4/CapSense_INT.c **** 
  44              		.loc 1 766 0
  45 000c 1A68     		ldr	r2, [r3]
  46              	.LVL1:
 762:Generated_Source\PSoC4/CapSense_INT.c ****                                             CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2Wd
  47              		.loc 1 762 0
  48 000e 1C23     		movs	r3, #28
  49 0010 4B43     		muls	r3, r1
  50 0012 0E49     		ldr	r1, .L5+12
  51              	.LVL2:
 769:Generated_Source\PSoC4/CapSense_INT.c ****         {
  52              		.loc 1 769 0
  53 0014 94B2     		uxth	r4, r2
 762:Generated_Source\PSoC4/CapSense_INT.c ****                                             CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2Wd
  54              		.loc 1 762 0
  55 0016 CB18     		adds	r3, r1, r3
 768:Generated_Source\PSoC4/CapSense_INT.c ****         if(tmpRawData < tmpMaxCount)
  56              		.loc 1 768 0
  57 0018 5B68     		ldr	r3, [r3, #4]
  58 001a 1988     		ldrh	r1, [r3]
  59 001c 0123     		movs	r3, #1
  60 001e 8B40     		lsls	r3, r3, r1
  61 0020 013B     		subs	r3, r3, #1
  62              	.LVL3:
  63 0022 0B49     		ldr	r1, .L5+16
 769:Generated_Source\PSoC4/CapSense_INT.c ****         {
  64              		.loc 1 769 0
  65 0024 9C42     		cmp	r4, r3
  66 0026 03D2     		bcs	.L2
  67              		.loc 1 771 0
  68 0028 0B78     		ldrb	r3, [r1]
  69              	.LVL4:
  70 002a 5B00     		lsls	r3, r3, #1
  71 002c 1A52     		strh	r2, [r3, r0]
  72 002e 02E0     		b	.L3
  73              	.LVL5:
  74              	.L2:
 772:Generated_Source\PSoC4/CapSense_INT.c ****         }
 773:Generated_Source\PSoC4/CapSense_INT.c ****         else
 774:Generated_Source\PSoC4/CapSense_INT.c ****         {
 775:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_curRamSnsPtr->raw[CapSense_scanFreqIndex] = LO16(tmpMaxCount);
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccY3ebF6.s 			page 16


  75              		.loc 1 775 0
  76 0030 0A78     		ldrb	r2, [r1]
  77              	.LVL6:
  78 0032 5200     		lsls	r2, r2, #1
  79 0034 1352     		strh	r3, [r2, r0]
  80              	.LVL7:
  81              	.L3:
 776:Generated_Source\PSoC4/CapSense_INT.c ****         }
 777:Generated_Source\PSoC4/CapSense_INT.c **** 
 778:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN)
 779:Generated_Source\PSoC4/CapSense_INT.c ****             /* Init bad Conversions number */
 780:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_badConversionsNum = CapSense_BAD_CONVERSIONS_NUM;
 781:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN) */
 782:Generated_Source\PSoC4/CapSense_INT.c **** 
 783:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 784:Generated_Source\PSoC4/CapSense_INT.c ****             /* Open HCBV and HCBG switches */
 785:Generated_Source\PSoC4/CapSense_INT.c ****             CY_SET_REG32(CapSense_SW_SHIELD_SEL_PTR, CapSense_SW_SHIELD_SEL_SW_HCBV_STATIC_OPEN |
  82              		.loc 1 785 0
  83 0036 0022     		movs	r2, #0
  84 0038 064B     		ldr	r3, .L5+20
 786:Generated_Source\PSoC4/CapSense_INT.c ****                                                              CapSense_SW_SHIELD_SEL_SW_HCBG_STATIC_
 787:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 788:Generated_Source\PSoC4/CapSense_INT.c **** 
 789:Generated_Source\PSoC4/CapSense_INT.c ****     #else
 790:Generated_Source\PSoC4/CapSense_INT.c **** 
 791:Generated_Source\PSoC4/CapSense_INT.c ****         /* Read SlotResult from Raw Counter */
 792:Generated_Source\PSoC4/CapSense_INT.c ****        CapSense_curRamSnsPtr->raw[CapSense_scanFreqIndex] = (uint16)CY_GET_REG32(CapSense_COUNTER_P
 793:Generated_Source\PSoC4/CapSense_INT.c **** 
 794:Generated_Source\PSoC4/CapSense_INT.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 795:Generated_Source\PSoC4/CapSense_INT.c **** }
  85              		.loc 1 795 0
  86              		@ sp needed
 785:Generated_Source\PSoC4/CapSense_INT.c ****                                                              CapSense_SW_SHIELD_SEL_SW_HCBG_STATIC_
  87              		.loc 1 785 0
  88 003a 1A60     		str	r2, [r3]
  89              		.loc 1 795 0
  90 003c 10BD     		pop	{r4, pc}
  91              	.L6:
  92 003e C046     		.align	2
  93              	.L5:
  94 0040 00000000 		.word	CapSense_widgetIndex
  95 0044 00000000 		.word	CapSense_curRamSnsPtr
  96 0048 D0000B40 		.word	1074462928
  97 004c 00000000 		.word	CapSense_dsFlash
  98 0050 00000000 		.word	CapSense_scanFreqIndex
  99 0054 88020B40 		.word	1074463368
 100              		.cfi_endproc
 101              	.LFE3:
 102              		.size	CapSense_SsCSDPostScan, .-CapSense_SsCSDPostScan
 103              		.section	.text.CapSense_CSDPostSingleScan,"ax",%progbits
 104              		.align	1
 105              		.global	CapSense_CSDPostSingleScan
 106              		.code	16
 107              		.thumb_func
 108              		.type	CapSense_CSDPostSingleScan, %function
 109              	CapSense_CSDPostSingleScan:
 110              	.LFB1:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccY3ebF6.s 			page 17


 122:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_ENTRY_CALLBACK
 111              		.loc 1 122 0
 112              		.cfi_startproc
 113              		@ args = 0, pretend = 0, frame = 0
 114              		@ frame_needed = 0, uses_anonymous_args = 0
 128:Generated_Source\PSoC4/CapSense_INT.c **** 
 115              		.loc 1 128 0
 116 0000 8322     		movs	r2, #131
 117 0002 074B     		ldr	r3, .L8
 118 0004 5200     		lsls	r2, r2, #1
 122:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_ENTRY_CALLBACK
 119              		.loc 1 122 0
 120 0006 10B5     		push	{r4, lr}
 121              		.cfi_def_cfa_offset 8
 122              		.cfi_offset 4, -8
 123              		.cfi_offset 14, -4
 128:Generated_Source\PSoC4/CapSense_INT.c **** 
 124              		.loc 1 128 0
 125 0008 1A60     		str	r2, [r3]
 148:Generated_Source\PSoC4/CapSense_INT.c **** 
 126              		.loc 1 148 0
 127 000a FFF7FEFF 		bl	CapSense_SsCSDPostScan
 128              	.LVL8:
 186:Generated_Source\PSoC4/CapSense_INT.c **** 
 129              		.loc 1 186 0
 130 000e 054B     		ldr	r3, .L8+4
 199:Generated_Source\PSoC4/CapSense_INT.c **** 
 131              		.loc 1 199 0
 132              		@ sp needed
 186:Generated_Source\PSoC4/CapSense_INT.c **** 
 133              		.loc 1 186 0
 134 0010 1A89     		ldrh	r2, [r3, #8]
 189:Generated_Source\PSoC4/CapSense_INT.c ****                 }
 135              		.loc 1 189 0
 136 0012 D968     		ldr	r1, [r3, #12]
 186:Generated_Source\PSoC4/CapSense_INT.c **** 
 137              		.loc 1 186 0
 138 0014 0132     		adds	r2, r2, #1
 139 0016 1A81     		strh	r2, [r3, #8]
 189:Generated_Source\PSoC4/CapSense_INT.c ****                 }
 140              		.loc 1 189 0
 141 0018 034A     		ldr	r2, .L8+8
 142 001a 0A40     		ands	r2, r1
 143 001c DA60     		str	r2, [r3, #12]
 199:Generated_Source\PSoC4/CapSense_INT.c **** 
 144              		.loc 1 199 0
 145 001e 10BD     		pop	{r4, pc}
 146              	.L9:
 147              		.align	2
 148              	.L8:
 149 0020 F0000B40 		.word	1074462960
 150 0024 00000000 		.word	CapSense_dsRam
 151 0028 7FFFFEFF 		.word	-65665
 152              		.cfi_endproc
 153              	.LFE1:
 154              		.size	CapSense_CSDPostSingleScan, .-CapSense_CSDPostSingleScan
 155              		.section	.text.CapSense_CSDPostMultiScan,"ax",%progbits
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccY3ebF6.s 			page 18


 156              		.align	1
 157              		.global	CapSense_CSDPostMultiScan
 158              		.code	16
 159              		.thumb_func
 160              		.type	CapSense_CSDPostMultiScan, %function
 161              	CapSense_CSDPostMultiScan:
 162              	.LFB2:
 238:Generated_Source\PSoC4/CapSense_INT.c ****         /* Declare and initialize ptr to sensor IO structure to appropriate address */
 163              		.loc 1 238 0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 168              		.cfi_def_cfa_offset 24
 169              		.cfi_offset 3, -24
 170              		.cfi_offset 4, -20
 171              		.cfi_offset 5, -16
 172              		.cfi_offset 6, -12
 173              		.cfi_offset 7, -8
 174              		.cfi_offset 14, -4
 241:Generated_Source\PSoC4/CapSense_INT.c ****                                                           + CapSense_sensorIndex;
 175              		.loc 1 241 0
 176 0002 1C24     		movs	r4, #28
 240:Generated_Source\PSoC4/CapSense_INT.c ****                                                           CapSense_dsFlash.wdgtArray[CapSense_widge
 177              		.loc 1 240 0
 178 0004 274E     		ldr	r6, .L14
 179 0006 284A     		ldr	r2, .L14+4
 180 0008 3378     		ldrb	r3, [r6]
 242:Generated_Source\PSoC4/CapSense_INT.c **** 
 181              		.loc 1 242 0
 182 000a 284D     		ldr	r5, .L14+8
 241:Generated_Source\PSoC4/CapSense_INT.c ****                                                           + CapSense_sensorIndex;
 183              		.loc 1 241 0
 184 000c 6343     		muls	r3, r4
 240:Generated_Source\PSoC4/CapSense_INT.c ****                                                           CapSense_dsFlash.wdgtArray[CapSense_widge
 185              		.loc 1 240 0
 186 000e 9B58     		ldr	r3, [r3, r2]
 249:Generated_Source\PSoC4/CapSense_INT.c **** 
 187              		.loc 1 249 0
 188 0010 8322     		movs	r2, #131
 242:Generated_Source\PSoC4/CapSense_INT.c **** 
 189              		.loc 1 242 0
 190 0012 2F78     		ldrb	r7, [r5]
 249:Generated_Source\PSoC4/CapSense_INT.c **** 
 191              		.loc 1 249 0
 192 0014 5200     		lsls	r2, r2, #1
 240:Generated_Source\PSoC4/CapSense_INT.c ****                                                           CapSense_dsFlash.wdgtArray[CapSense_widge
 193              		.loc 1 240 0
 194 0016 6743     		muls	r7, r4
 195 0018 DF19     		adds	r7, r3, r7
 196              	.LVL9:
 249:Generated_Source\PSoC4/CapSense_INT.c **** 
 197              		.loc 1 249 0
 198 001a 254B     		ldr	r3, .L14+12
 199 001c 1A60     		str	r2, [r3]
 269:Generated_Source\PSoC4/CapSense_INT.c **** 
 200              		.loc 1 269 0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccY3ebF6.s 			page 19


 201 001e FFF7FEFF 		bl	CapSense_SsCSDPostScan
 202              	.LVL10:
 277:Generated_Source\PSoC4/CapSense_INT.c ****             }
 203              		.loc 1 277 0
 204 0022 3800     		movs	r0, r7
 205 0024 FFF7FEFF 		bl	CapSense_CSDDisconnectSns
 206              	.LVL11:
 207              	.LBB4:
 208              	.LBB5:
 796:Generated_Source\PSoC4/CapSense_INT.c **** 
 797:Generated_Source\PSoC4/CapSense_INT.c **** 
 798:Generated_Source\PSoC4/CapSense_INT.c **** /*******************************************************************************
 799:Generated_Source\PSoC4/CapSense_INT.c **** * Function Name: CapSense_SsCSDInitNextScan
 800:Generated_Source\PSoC4/CapSense_INT.c **** ****************************************************************************//**
 801:Generated_Source\PSoC4/CapSense_INT.c **** *
 802:Generated_Source\PSoC4/CapSense_INT.c **** * \brief
 803:Generated_Source\PSoC4/CapSense_INT.c **** *   This function initializes the next sensor scan.
 804:Generated_Source\PSoC4/CapSense_INT.c **** *
 805:Generated_Source\PSoC4/CapSense_INT.c **** * \details
 806:Generated_Source\PSoC4/CapSense_INT.c **** *   The function increments the sensor index, updates sense clock for matrix
 807:Generated_Source\PSoC4/CapSense_INT.c **** *   or touchpad widgets only, sets up Compensation IDAC, enables the sensor and
 808:Generated_Source\PSoC4/CapSense_INT.c **** *   scans it. When all the sensors are scanned it continues to set up the next widget
 809:Generated_Source\PSoC4/CapSense_INT.c **** *   until all the widgets are scanned. The CSD block is disabled when all the widgets are
 810:Generated_Source\PSoC4/CapSense_INT.c **** *   scanned.
 811:Generated_Source\PSoC4/CapSense_INT.c **** *
 812:Generated_Source\PSoC4/CapSense_INT.c **** *******************************************************************************/
 813:Generated_Source\PSoC4/CapSense_INT.c **** static void CapSense_SsCSDInitNextScan(void)
 814:Generated_Source\PSoC4/CapSense_INT.c **** {
 815:Generated_Source\PSoC4/CapSense_INT.c ****     /* Declare and initialize ptr to widget and sensor structures to appropriate address */
 816:Generated_Source\PSoC4/CapSense_INT.c ****     #if (((CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) || \
 817:Generated_Source\PSoC4/CapSense_INT.c ****           (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)) || \
 818:Generated_Source\PSoC4/CapSense_INT.c ****           (((CapSense_DISABLE == CapSense_CSD_COMMON_SNS_CLK_EN) && \
 819:Generated_Source\PSoC4/CapSense_INT.c ****           (CapSense_ENABLE == CapSense_CSDV2) && \
 820:Generated_Source\PSoC4/CapSense_INT.c ****           (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN))))
 821:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_RAM_WD_BASE_STRUCT *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
 822:Generated_Source\PSoC4/CapSense_INT.c ****                                                         CapSense_dsFlash.wdgtArray[CapSense_widgetI
 209              		.loc 1 822 0
 210 0028 3378     		ldrb	r3, [r6]
 823:Generated_Source\PSoC4/CapSense_INT.c ****     #endif
 824:Generated_Source\PSoC4/CapSense_INT.c **** 
 825:Generated_Source\PSoC4/CapSense_INT.c ****     /* Check if all the sensors are scanned in widget */
 826:Generated_Source\PSoC4/CapSense_INT.c ****     if (((uint8)CapSense_dsFlash.wdgtArray[(CapSense_widgetIndex)].totalNumSns - 1u) > CapSense_sen
 211              		.loc 1 826 0
 212 002a 3278     		ldrb	r2, [r6]
 213 002c 1E48     		ldr	r0, .L14+4
 214 002e 6243     		muls	r2, r4
 215 0030 8218     		adds	r2, r0, r2
 216 0032 127E     		ldrb	r2, [r2, #24]
 217 0034 2978     		ldrb	r1, [r5]
 218 0036 013A     		subs	r2, r2, #1
 822:Generated_Source\PSoC4/CapSense_INT.c ****     #endif
 219              		.loc 1 822 0
 220 0038 DBB2     		uxtb	r3, r3
 221              	.LVL12:
 222              		.loc 1 826 0
 223 003a 8A42     		cmp	r2, r1
 224 003c 1CD9     		bls	.L11
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccY3ebF6.s 			page 20


 821:Generated_Source\PSoC4/CapSense_INT.c ****                                                         CapSense_dsFlash.wdgtArray[CapSense_widgetI
 225              		.loc 1 821 0
 226 003e 6343     		muls	r3, r4
 227              	.LVL13:
 228 0040 C318     		adds	r3, r0, r3
 229 0042 5868     		ldr	r0, [r3, #4]
 827:Generated_Source\PSoC4/CapSense_INT.c ****     {
 828:Generated_Source\PSoC4/CapSense_INT.c ****         /* Increment sensor index to configure next sensor in widget */
 829:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_sensorIndex++;
 230              		.loc 1 829 0
 231 0044 2B78     		ldrb	r3, [r5]
 232 0046 0133     		adds	r3, r3, #1
 233 0048 DBB2     		uxtb	r3, r3
 234 004a 2B70     		strb	r3, [r5]
 830:Generated_Source\PSoC4/CapSense_INT.c **** 
 831:Generated_Source\PSoC4/CapSense_INT.c ****         /* Update global pointer to CapSense_RAM_SNS_STRUCT to current sensor  */
 832:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_curRamSnsPtr = (CapSense_RAM_SNS_STRUCT *)
 235              		.loc 1 832 0
 236 004c 3378     		ldrb	r3, [r6]
 833:Generated_Source\PSoC4/CapSense_INT.c ****                                                   CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].
 834:Generated_Source\PSoC4/CapSense_INT.c ****                                                   + CapSense_sensorIndex;
 237              		.loc 1 834 0
 238 004e 2A78     		ldrb	r2, [r5]
 833:Generated_Source\PSoC4/CapSense_INT.c ****                                                   CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].
 239              		.loc 1 833 0
 240 0050 5C43     		muls	r4, r3
 241 0052 154B     		ldr	r3, .L14+4
 242 0054 1C19     		adds	r4, r3, r4
 832:Generated_Source\PSoC4/CapSense_INT.c ****                                                   CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].
 243              		.loc 1 832 0
 244 0056 0A23     		movs	r3, #10
 245 0058 5343     		muls	r3, r2
 246 005a A268     		ldr	r2, [r4, #8]
 247 005c D318     		adds	r3, r2, r3
 248 005e 154A     		ldr	r2, .L14+16
 249 0060 1360     		str	r3, [r2]
 835:Generated_Source\PSoC4/CapSense_INT.c **** 
 836:Generated_Source\PSoC4/CapSense_INT.c ****         /* Configure clock divider to row or column */
 837:Generated_Source\PSoC4/CapSense_INT.c ****         #if ((CapSense_DISABLE == CapSense_CSD_COMMON_SNS_CLK_EN) && \
 838:Generated_Source\PSoC4/CapSense_INT.c ****              (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN))
 839:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_SsCSDConfigClock();
 840:Generated_Source\PSoC4/CapSense_INT.c **** 
 841:Generated_Source\PSoC4/CapSense_INT.c ****             #if (CapSense_ENABLE == CapSense_CSDV2)
 842:Generated_Source\PSoC4/CapSense_INT.c ****                  /* Set up scanning resolution */
 843:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsCSDCalculateScanDuration(ptrWdgt);
 844:Generated_Source\PSoC4/CapSense_INT.c ****             #endif
 845:Generated_Source\PSoC4/CapSense_INT.c ****         #endif
 846:Generated_Source\PSoC4/CapSense_INT.c **** 
 847:Generated_Source\PSoC4/CapSense_INT.c ****         /* Setup Compensation IDAC for next sensor in widget */
 848:Generated_Source\PSoC4/CapSense_INT.c ****         #if ((CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) || \
 849:Generated_Source\PSoC4/CapSense_INT.c ****              (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN))
 850:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_SsCSDSetUpIdacs(ptrWdgt);
 250              		.loc 1 850 0
 251 0062 FFF7FEFF 		bl	CapSense_SsCSDSetUpIdacs
 252              	.LVL14:
 851:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) || \
 852:Generated_Source\PSoC4/CapSense_INT.c ****                    (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)) */
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccY3ebF6.s 			page 21


 853:Generated_Source\PSoC4/CapSense_INT.c **** 
 854:Generated_Source\PSoC4/CapSense_INT.c ****         /* Enable sensor */
 855:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_SsCSDConnectSensorExt((uint32)CapSense_widgetIndex, (uint32)CapSense_sensorIndex);
 253              		.loc 1 855 0
 254 0066 3078     		ldrb	r0, [r6]
 255 0068 2978     		ldrb	r1, [r5]
 256 006a C0B2     		uxtb	r0, r0
 257 006c C9B2     		uxtb	r1, r1
 258 006e FFF7FEFF 		bl	CapSense_SsCSDConnectSensorExt
 259              	.LVL15:
 856:Generated_Source\PSoC4/CapSense_INT.c **** 
 857:Generated_Source\PSoC4/CapSense_INT.c ****         /* Proceed scanning */
 858:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_SsCSDStartSample();
 260              		.loc 1 858 0
 261 0072 FFF7FEFF 		bl	CapSense_SsCSDStartSample
 262              	.LVL16:
 263 0076 14E0     		b	.L10
 264              	.LVL17:
 265              	.L11:
 859:Generated_Source\PSoC4/CapSense_INT.c ****     }
 860:Generated_Source\PSoC4/CapSense_INT.c ****     /* Call scan next widget API if requested, if not, complete the scan  */
 861:Generated_Source\PSoC4/CapSense_INT.c ****     else
 862:Generated_Source\PSoC4/CapSense_INT.c ****     {
 863:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_sensorIndex = 0u;
 266              		.loc 1 863 0
 267 0078 0023     		movs	r3, #0
 268              	.LVL18:
 269 007a 2B70     		strb	r3, [r5]
 864:Generated_Source\PSoC4/CapSense_INT.c **** 
 865:Generated_Source\PSoC4/CapSense_INT.c ****         /* Current widget is totally scanned. Reset WIDGET BUSY flag */
 866:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_dsRam.status &= ~CapSense_WDGT_SW_STS_BUSY;
 270              		.loc 1 866 0
 271 007c 0E4B     		ldr	r3, .L14+20
 272 007e 0F4A     		ldr	r2, .L14+24
 273 0080 D968     		ldr	r1, [r3, #12]
 274 0082 0A40     		ands	r2, r1
 275 0084 DA60     		str	r2, [r3, #12]
 867:Generated_Source\PSoC4/CapSense_INT.c **** 
 868:Generated_Source\PSoC4/CapSense_INT.c ****         /* Check if all the widgets have been scanned */
 869:Generated_Source\PSoC4/CapSense_INT.c ****         if (CapSense_ENABLE == CapSense_requestScanAllWidget)
 276              		.loc 1 869 0
 277 0086 0E4A     		ldr	r2, .L14+28
 278 0088 1278     		ldrb	r2, [r2]
 279 008a 012A     		cmp	r2, #1
 280 008c 02D1     		bne	.L13
 870:Generated_Source\PSoC4/CapSense_INT.c ****         {
 871:Generated_Source\PSoC4/CapSense_INT.c ****             /* Configure and begin scanning next widget */
 872:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_SsPostAllWidgetsScan();
 281              		.loc 1 872 0
 282 008e FFF7FEFF 		bl	CapSense_SsPostAllWidgetsScan
 283              	.LVL19:
 284 0092 06E0     		b	.L10
 285              	.L13:
 873:Generated_Source\PSoC4/CapSense_INT.c ****         }
 874:Generated_Source\PSoC4/CapSense_INT.c ****         else
 875:Generated_Source\PSoC4/CapSense_INT.c ****         {
 876:Generated_Source\PSoC4/CapSense_INT.c ****             #if (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN)
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccY3ebF6.s 			page 22


 877:Generated_Source\PSoC4/CapSense_INT.c ****                 #if (CapSense_ENABLE == CapSense_CSDV2)
 878:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Disable the CSD block */
 879:Generated_Source\PSoC4/CapSense_INT.c ****                     CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd);
 880:Generated_Source\PSoC4/CapSense_INT.c ****                 #else
 881:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Disable the CSD block. Connect Vref Buffer to AMUX bus */
 882:Generated_Source\PSoC4/CapSense_INT.c ****                     #if ((CapSense_CSH_PRECHARGE_IO_BUF == CapSense_CSD_CSH_PRECHARGE_SRC) &&\
 883:Generated_Source\PSoC4/CapSense_INT.c ****                          (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
 884:Generated_Source\PSoC4/CapSense_INT.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CMOD_PRECHA
 885:Generated_Source\PSoC4/CapSense_INT.c ****                     #else
 886:Generated_Source\PSoC4/CapSense_INT.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECH
 887:Generated_Source\PSoC4/CapSense_INT.c ****                     #endif
 888:Generated_Source\PSoC4/CapSense_INT.c ****                 #endif
 889:Generated_Source\PSoC4/CapSense_INT.c ****             #endif
 890:Generated_Source\PSoC4/CapSense_INT.c **** 
 891:Generated_Source\PSoC4/CapSense_INT.c ****             /* All widgets are totally scanned. Reset BUSY flag */
 892:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_dsRam.status &= ~CapSense_SW_STS_BUSY;
 286              		.loc 1 892 0
 287 0094 8021     		movs	r1, #128
 288 0096 DA68     		ldr	r2, [r3, #12]
 289 0098 8A43     		bics	r2, r1
 290 009a DA60     		str	r2, [r3, #12]
 893:Generated_Source\PSoC4/CapSense_INT.c **** 
 894:Generated_Source\PSoC4/CapSense_INT.c ****             /* Update scan Counter */
 895:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_dsRam.scanCounter++;
 291              		.loc 1 895 0
 292 009c 1A89     		ldrh	r2, [r3, #8]
 293 009e 0132     		adds	r2, r2, #1
 294 00a0 1A81     		strh	r2, [r3, #8]
 295              	.L10:
 296              	.LBE5:
 297              	.LBE4:
 311:Generated_Source\PSoC4/CapSense_INT.c **** 
 298              		.loc 1 311 0
 299              		@ sp needed
 300              	.LVL20:
 301 00a2 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 302              	.L15:
 303              		.align	2
 304              	.L14:
 305 00a4 00000000 		.word	CapSense_widgetIndex
 306 00a8 00000000 		.word	CapSense_dsFlash
 307 00ac 00000000 		.word	CapSense_sensorIndex
 308 00b0 F0000B40 		.word	1074462960
 309 00b4 00000000 		.word	CapSense_curRamSnsPtr
 310 00b8 00000000 		.word	CapSense_dsRam
 311 00bc FFFFFEFF 		.word	-65537
 312 00c0 00000000 		.word	CapSense_requestScanAllWidget
 313              		.cfi_endproc
 314              	.LFE2:
 315              		.size	CapSense_CSDPostMultiScan, .-CapSense_CSDPostMultiScan
 316              		.text
 317              	.Letext0:
 318              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 319              		.file 3 "Generated_Source\\PSoC4\\CapSense_Configuration.h"
 320              		.file 4 "Generated_Source\\PSoC4\\CapSense_Structure.h"
 321              		.file 5 "Generated_Source\\PSoC4\\CapSense_Sensing.h"
 322              		.file 6 "Generated_Source\\PSoC4\\CapSense_SensingCSD_LL.h"
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccY3ebF6.s 			page 23


 323              		.section	.debug_info,"",%progbits
 324              	.Ldebug_info0:
 325 0000 5E080000 		.4byte	0x85e
 326 0004 0400     		.2byte	0x4
 327 0006 00000000 		.4byte	.Ldebug_abbrev0
 328 000a 04       		.byte	0x4
 329 000b 01       		.uleb128 0x1
 330 000c 51050000 		.4byte	.LASF108
 331 0010 0C       		.byte	0xc
 332 0011 03030000 		.4byte	.LASF109
 333 0015 70010000 		.4byte	.LASF110
 334 0019 00000000 		.4byte	.Ldebug_ranges0+0
 335 001d 00000000 		.4byte	0
 336 0021 00000000 		.4byte	.Ldebug_line0
 337 0025 02       		.uleb128 0x2
 338 0026 01       		.byte	0x1
 339 0027 06       		.byte	0x6
 340 0028 41060000 		.4byte	.LASF0
 341 002c 02       		.uleb128 0x2
 342 002d 01       		.byte	0x1
 343 002e 08       		.byte	0x8
 344 002f 29030000 		.4byte	.LASF1
 345 0033 02       		.uleb128 0x2
 346 0034 02       		.byte	0x2
 347 0035 05       		.byte	0x5
 348 0036 99000000 		.4byte	.LASF2
 349 003a 02       		.uleb128 0x2
 350 003b 02       		.byte	0x2
 351 003c 07       		.byte	0x7
 352 003d 63040000 		.4byte	.LASF3
 353 0041 02       		.uleb128 0x2
 354 0042 04       		.byte	0x4
 355 0043 05       		.byte	0x5
 356 0044 68020000 		.4byte	.LASF4
 357 0048 02       		.uleb128 0x2
 358 0049 04       		.byte	0x4
 359 004a 07       		.byte	0x7
 360 004b 16050000 		.4byte	.LASF5
 361 004f 02       		.uleb128 0x2
 362 0050 08       		.byte	0x8
 363 0051 05       		.byte	0x5
 364 0052 F0060000 		.4byte	.LASF6
 365 0056 02       		.uleb128 0x2
 366 0057 08       		.byte	0x8
 367 0058 07       		.byte	0x7
 368 0059 A0030000 		.4byte	.LASF7
 369 005d 03       		.uleb128 0x3
 370 005e 04       		.byte	0x4
 371 005f 05       		.byte	0x5
 372 0060 696E7400 		.ascii	"int\000"
 373 0064 02       		.uleb128 0x2
 374 0065 04       		.byte	0x4
 375 0066 07       		.byte	0x7
 376 0067 E5030000 		.4byte	.LASF8
 377 006b 04       		.uleb128 0x4
 378 006c 6A010000 		.4byte	.LASF9
 379 0070 02       		.byte	0x2
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccY3ebF6.s 			page 24


 380 0071 E401     		.2byte	0x1e4
 381 0073 2C000000 		.4byte	0x2c
 382 0077 04       		.uleb128 0x4
 383 0078 53010000 		.4byte	.LASF10
 384 007c 02       		.byte	0x2
 385 007d E501     		.2byte	0x1e5
 386 007f 3A000000 		.4byte	0x3a
 387 0083 04       		.uleb128 0x4
 388 0084 04050000 		.4byte	.LASF11
 389 0088 02       		.byte	0x2
 390 0089 E601     		.2byte	0x1e6
 391 008b 48000000 		.4byte	0x48
 392 008f 02       		.uleb128 0x2
 393 0090 04       		.byte	0x4
 394 0091 04       		.byte	0x4
 395 0092 CF010000 		.4byte	.LASF12
 396 0096 02       		.uleb128 0x2
 397 0097 08       		.byte	0x8
 398 0098 04       		.byte	0x4
 399 0099 28050000 		.4byte	.LASF13
 400 009d 02       		.uleb128 0x2
 401 009e 01       		.byte	0x1
 402 009f 08       		.byte	0x8
 403 00a0 49020000 		.4byte	.LASF14
 404 00a4 05       		.uleb128 0x5
 405 00a5 6B000000 		.4byte	0x6b
 406 00a9 04       		.uleb128 0x4
 407 00aa FD030000 		.4byte	.LASF15
 408 00ae 02       		.byte	0x2
 409 00af 9002     		.2byte	0x290
 410 00b1 B5000000 		.4byte	0xb5
 411 00b5 05       		.uleb128 0x5
 412 00b6 83000000 		.4byte	0x83
 413 00ba 04       		.uleb128 0x4
 414 00bb 4C030000 		.4byte	.LASF16
 415 00bf 03       		.byte	0x3
 416 00c0 2E01     		.2byte	0x12e
 417 00c2 77000000 		.4byte	0x77
 418 00c6 04       		.uleb128 0x4
 419 00c7 1B040000 		.4byte	.LASF17
 420 00cb 03       		.byte	0x3
 421 00cc 3201     		.2byte	0x132
 422 00ce 6B000000 		.4byte	0x6b
 423 00d2 06       		.uleb128 0x6
 424 00d3 10       		.byte	0x10
 425 00d4 04       		.byte	0x4
 426 00d5 AD       		.byte	0xad
 427 00d6 5F010000 		.4byte	0x15f
 428 00da 07       		.uleb128 0x7
 429 00db 58040000 		.4byte	.LASF18
 430 00df 04       		.byte	0x4
 431 00e0 B2       		.byte	0xb2
 432 00e1 77000000 		.4byte	0x77
 433 00e5 00       		.byte	0
 434 00e6 07       		.uleb128 0x7
 435 00e7 C7020000 		.4byte	.LASF19
 436 00eb 04       		.byte	0x4
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccY3ebF6.s 			page 25


 437 00ec B7       		.byte	0xb7
 438 00ed BA000000 		.4byte	0xba
 439 00f1 02       		.byte	0x2
 440 00f2 07       		.uleb128 0x7
 441 00f3 46010000 		.4byte	.LASF20
 442 00f7 04       		.byte	0x4
 443 00f8 BC       		.byte	0xbc
 444 00f9 6B000000 		.4byte	0x6b
 445 00fd 04       		.byte	0x4
 446 00fe 07       		.uleb128 0x7
 447 00ff CC040000 		.4byte	.LASF21
 448 0103 04       		.byte	0x4
 449 0104 C1       		.byte	0xc1
 450 0105 6B000000 		.4byte	0x6b
 451 0109 05       		.byte	0x5
 452 010a 07       		.uleb128 0x7
 453 010b D8020000 		.4byte	.LASF22
 454 010f 04       		.byte	0x4
 455 0110 C7       		.byte	0xc7
 456 0111 6B000000 		.4byte	0x6b
 457 0115 06       		.byte	0x6
 458 0116 07       		.uleb128 0x7
 459 0117 AC000000 		.4byte	.LASF23
 460 011b 04       		.byte	0x4
 461 011c CD       		.byte	0xcd
 462 011d 6B000000 		.4byte	0x6b
 463 0121 07       		.byte	0x7
 464 0122 07       		.uleb128 0x7
 465 0123 6D000000 		.4byte	.LASF24
 466 0127 04       		.byte	0x4
 467 0128 D4       		.byte	0xd4
 468 0129 C6000000 		.4byte	0xc6
 469 012d 08       		.byte	0x8
 470 012e 07       		.uleb128 0x7
 471 012f 89000000 		.4byte	.LASF25
 472 0133 04       		.byte	0x4
 473 0134 DB       		.byte	0xdb
 474 0135 5F010000 		.4byte	0x15f
 475 0139 09       		.byte	0x9
 476 013a 07       		.uleb128 0x7
 477 013b 53000000 		.4byte	.LASF26
 478 013f 04       		.byte	0x4
 479 0140 E0       		.byte	0xe0
 480 0141 6B000000 		.4byte	0x6b
 481 0145 0A       		.byte	0xa
 482 0146 07       		.uleb128 0x7
 483 0147 A8010000 		.4byte	.LASF27
 484 014b 04       		.byte	0x4
 485 014c E8       		.byte	0xe8
 486 014d 77000000 		.4byte	0x77
 487 0151 0C       		.byte	0xc
 488 0152 07       		.uleb128 0x7
 489 0153 1E010000 		.4byte	.LASF28
 490 0157 04       		.byte	0x4
 491 0158 ED       		.byte	0xed
 492 0159 6B000000 		.4byte	0x6b
 493 015d 0E       		.byte	0xe
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccY3ebF6.s 			page 26


 494 015e 00       		.byte	0
 495 015f 08       		.uleb128 0x8
 496 0160 6B000000 		.4byte	0x6b
 497 0164 6F010000 		.4byte	0x16f
 498 0168 09       		.uleb128 0x9
 499 0169 6F010000 		.4byte	0x16f
 500 016d 00       		.byte	0
 501 016e 00       		.byte	0
 502 016f 02       		.uleb128 0x2
 503 0170 04       		.byte	0x4
 504 0171 07       		.byte	0x7
 505 0172 BE000000 		.4byte	.LASF29
 506 0176 0A       		.uleb128 0xa
 507 0177 78060000 		.4byte	.LASF30
 508 017b 04       		.byte	0x4
 509 017c EE       		.byte	0xee
 510 017d D2000000 		.4byte	0xd2
 511 0181 06       		.uleb128 0x6
 512 0182 10       		.byte	0x10
 513 0183 04       		.byte	0x4
 514 0184 F3       		.byte	0xf3
 515 0185 17020000 		.4byte	0x217
 516 0189 07       		.uleb128 0x7
 517 018a 58040000 		.4byte	.LASF18
 518 018e 04       		.byte	0x4
 519 018f F8       		.byte	0xf8
 520 0190 77000000 		.4byte	0x77
 521 0194 00       		.byte	0
 522 0195 07       		.uleb128 0x7
 523 0196 C7020000 		.4byte	.LASF19
 524 019a 04       		.byte	0x4
 525 019b FD       		.byte	0xfd
 526 019c BA000000 		.4byte	0xba
 527 01a0 02       		.byte	0x2
 528 01a1 0B       		.uleb128 0xb
 529 01a2 46010000 		.4byte	.LASF20
 530 01a6 04       		.byte	0x4
 531 01a7 0201     		.2byte	0x102
 532 01a9 6B000000 		.4byte	0x6b
 533 01ad 04       		.byte	0x4
 534 01ae 0B       		.uleb128 0xb
 535 01af CC040000 		.4byte	.LASF21
 536 01b3 04       		.byte	0x4
 537 01b4 0701     		.2byte	0x107
 538 01b6 6B000000 		.4byte	0x6b
 539 01ba 05       		.byte	0x5
 540 01bb 0B       		.uleb128 0xb
 541 01bc D8020000 		.4byte	.LASF22
 542 01c0 04       		.byte	0x4
 543 01c1 0D01     		.2byte	0x10d
 544 01c3 6B000000 		.4byte	0x6b
 545 01c7 06       		.byte	0x6
 546 01c8 0B       		.uleb128 0xb
 547 01c9 AC000000 		.4byte	.LASF23
 548 01cd 04       		.byte	0x4
 549 01ce 1301     		.2byte	0x113
 550 01d0 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccY3ebF6.s 			page 27


 551 01d4 07       		.byte	0x7
 552 01d5 0B       		.uleb128 0xb
 553 01d6 6D000000 		.4byte	.LASF24
 554 01da 04       		.byte	0x4
 555 01db 1A01     		.2byte	0x11a
 556 01dd C6000000 		.4byte	0xc6
 557 01e1 08       		.byte	0x8
 558 01e2 0B       		.uleb128 0xb
 559 01e3 89000000 		.4byte	.LASF25
 560 01e7 04       		.byte	0x4
 561 01e8 2101     		.2byte	0x121
 562 01ea 5F010000 		.4byte	0x15f
 563 01ee 09       		.byte	0x9
 564 01ef 0B       		.uleb128 0xb
 565 01f0 53000000 		.4byte	.LASF26
 566 01f4 04       		.byte	0x4
 567 01f5 2601     		.2byte	0x126
 568 01f7 6B000000 		.4byte	0x6b
 569 01fb 0A       		.byte	0xa
 570 01fc 0B       		.uleb128 0xb
 571 01fd A8010000 		.4byte	.LASF27
 572 0201 04       		.byte	0x4
 573 0202 2E01     		.2byte	0x12e
 574 0204 77000000 		.4byte	0x77
 575 0208 0C       		.byte	0xc
 576 0209 0B       		.uleb128 0xb
 577 020a 1E010000 		.4byte	.LASF28
 578 020e 04       		.byte	0x4
 579 020f 3301     		.2byte	0x133
 580 0211 6B000000 		.4byte	0x6b
 581 0215 0E       		.byte	0xe
 582 0216 00       		.byte	0
 583 0217 04       		.uleb128 0x4
 584 0218 0D020000 		.4byte	.LASF31
 585 021c 04       		.byte	0x4
 586 021d 3401     		.2byte	0x134
 587 021f 81010000 		.4byte	0x181
 588 0223 0C       		.uleb128 0xc
 589 0224 12       		.byte	0x12
 590 0225 04       		.byte	0x4
 591 0226 3901     		.2byte	0x139
 592 0228 C9020000 		.4byte	0x2c9
 593 022c 0B       		.uleb128 0xb
 594 022d 58040000 		.4byte	.LASF18
 595 0231 04       		.byte	0x4
 596 0232 3E01     		.2byte	0x13e
 597 0234 77000000 		.4byte	0x77
 598 0238 00       		.byte	0
 599 0239 0B       		.uleb128 0xb
 600 023a C7020000 		.4byte	.LASF19
 601 023e 04       		.byte	0x4
 602 023f 4301     		.2byte	0x143
 603 0241 BA000000 		.4byte	0xba
 604 0245 02       		.byte	0x2
 605 0246 0B       		.uleb128 0xb
 606 0247 46010000 		.4byte	.LASF20
 607 024b 04       		.byte	0x4
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccY3ebF6.s 			page 28


 608 024c 4801     		.2byte	0x148
 609 024e 6B000000 		.4byte	0x6b
 610 0252 04       		.byte	0x4
 611 0253 0B       		.uleb128 0xb
 612 0254 CC040000 		.4byte	.LASF21
 613 0258 04       		.byte	0x4
 614 0259 4D01     		.2byte	0x14d
 615 025b 6B000000 		.4byte	0x6b
 616 025f 05       		.byte	0x5
 617 0260 0B       		.uleb128 0xb
 618 0261 D8020000 		.4byte	.LASF22
 619 0265 04       		.byte	0x4
 620 0266 5301     		.2byte	0x153
 621 0268 6B000000 		.4byte	0x6b
 622 026c 06       		.byte	0x6
 623 026d 0B       		.uleb128 0xb
 624 026e AC000000 		.4byte	.LASF23
 625 0272 04       		.byte	0x4
 626 0273 5901     		.2byte	0x159
 627 0275 6B000000 		.4byte	0x6b
 628 0279 07       		.byte	0x7
 629 027a 0B       		.uleb128 0xb
 630 027b 6D000000 		.4byte	.LASF24
 631 027f 04       		.byte	0x4
 632 0280 6001     		.2byte	0x160
 633 0282 C6000000 		.4byte	0xc6
 634 0286 08       		.byte	0x8
 635 0287 0B       		.uleb128 0xb
 636 0288 89000000 		.4byte	.LASF25
 637 028c 04       		.byte	0x4
 638 028d 6701     		.2byte	0x167
 639 028f 5F010000 		.4byte	0x15f
 640 0293 09       		.byte	0x9
 641 0294 0B       		.uleb128 0xb
 642 0295 53000000 		.4byte	.LASF26
 643 0299 04       		.byte	0x4
 644 029a 6C01     		.2byte	0x16c
 645 029c 6B000000 		.4byte	0x6b
 646 02a0 0A       		.byte	0xa
 647 02a1 0B       		.uleb128 0xb
 648 02a2 A8010000 		.4byte	.LASF27
 649 02a6 04       		.byte	0x4
 650 02a7 7401     		.2byte	0x174
 651 02a9 77000000 		.4byte	0x77
 652 02ad 0C       		.byte	0xc
 653 02ae 0B       		.uleb128 0xb
 654 02af 1E010000 		.4byte	.LASF28
 655 02b3 04       		.byte	0x4
 656 02b4 7901     		.2byte	0x179
 657 02b6 6B000000 		.4byte	0x6b
 658 02ba 0E       		.byte	0xe
 659 02bb 0B       		.uleb128 0xb
 660 02bc 03010000 		.4byte	.LASF32
 661 02c0 04       		.byte	0x4
 662 02c1 7E01     		.2byte	0x17e
 663 02c3 BA000000 		.4byte	0xba
 664 02c7 10       		.byte	0x10
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccY3ebF6.s 			page 29


 665 02c8 00       		.byte	0
 666 02c9 04       		.uleb128 0x4
 667 02ca C4030000 		.4byte	.LASF33
 668 02ce 04       		.byte	0x4
 669 02cf 7F01     		.2byte	0x17f
 670 02d1 23020000 		.4byte	0x223
 671 02d5 0C       		.uleb128 0xc
 672 02d6 52       		.byte	0x52
 673 02d7 04       		.byte	0x4
 674 02d8 8501     		.2byte	0x185
 675 02da 20030000 		.4byte	0x320
 676 02de 0B       		.uleb128 0xb
 677 02df B7000000 		.4byte	.LASF34
 678 02e3 04       		.byte	0x4
 679 02e4 8A01     		.2byte	0x18a
 680 02e6 17020000 		.4byte	0x217
 681 02ea 00       		.byte	0
 682 02eb 0B       		.uleb128 0xb
 683 02ec C6010000 		.4byte	.LASF35
 684 02f0 04       		.byte	0x4
 685 02f1 8F01     		.2byte	0x18f
 686 02f3 17020000 		.4byte	0x217
 687 02f7 10       		.byte	0x10
 688 02f8 0B       		.uleb128 0xb
 689 02f9 AD020000 		.4byte	.LASF36
 690 02fd 04       		.byte	0x4
 691 02fe 9401     		.2byte	0x194
 692 0300 17020000 		.4byte	0x217
 693 0304 20       		.byte	0x20
 694 0305 0B       		.uleb128 0xb
 695 0306 3E000000 		.4byte	.LASF37
 696 030a 04       		.byte	0x4
 697 030b 9901     		.2byte	0x199
 698 030d 17020000 		.4byte	0x217
 699 0311 30       		.byte	0x30
 700 0312 0B       		.uleb128 0xb
 701 0313 0F010000 		.4byte	.LASF38
 702 0317 04       		.byte	0x4
 703 0318 9E01     		.2byte	0x19e
 704 031a C9020000 		.4byte	0x2c9
 705 031e 40       		.byte	0x40
 706 031f 00       		.byte	0
 707 0320 04       		.uleb128 0x4
 708 0321 E1010000 		.4byte	.LASF39
 709 0325 04       		.byte	0x4
 710 0326 9F01     		.2byte	0x19f
 711 0328 D5020000 		.4byte	0x2d5
 712 032c 0C       		.uleb128 0xc
 713 032d 0A       		.byte	0xa
 714 032e 04       		.byte	0x4
 715 032f A501     		.2byte	0x1a5
 716 0331 84030000 		.4byte	0x384
 717 0335 0D       		.uleb128 0xd
 718 0336 72617700 		.ascii	"raw\000"
 719 033a 04       		.byte	0x4
 720 033b AA01     		.2byte	0x1aa
 721 033d 84030000 		.4byte	0x384
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccY3ebF6.s 			page 30


 722 0341 00       		.byte	0
 723 0342 0B       		.uleb128 0xb
 724 0343 4E010000 		.4byte	.LASF40
 725 0347 04       		.byte	0x4
 726 0348 AF01     		.2byte	0x1af
 727 034a 84030000 		.4byte	0x384
 728 034e 02       		.byte	0x2
 729 034f 0B       		.uleb128 0xb
 730 0350 49050000 		.4byte	.LASF41
 731 0354 04       		.byte	0x4
 732 0355 B501     		.2byte	0x1b5
 733 0357 5F010000 		.4byte	0x15f
 734 035b 04       		.byte	0x4
 735 035c 0B       		.uleb128 0xb
 736 035d 78000000 		.4byte	.LASF42
 737 0361 04       		.byte	0x4
 738 0362 BA01     		.2byte	0x1ba
 739 0364 BA000000 		.4byte	0xba
 740 0368 06       		.byte	0x6
 741 0369 0B       		.uleb128 0xb
 742 036a 0F060000 		.4byte	.LASF43
 743 036e 04       		.byte	0x4
 744 036f BF01     		.2byte	0x1bf
 745 0371 94030000 		.4byte	0x394
 746 0375 08       		.byte	0x8
 747 0376 0B       		.uleb128 0xb
 748 0377 EF000000 		.4byte	.LASF44
 749 037b 04       		.byte	0x4
 750 037c C401     		.2byte	0x1c4
 751 037e 5F010000 		.4byte	0x15f
 752 0382 09       		.byte	0x9
 753 0383 00       		.byte	0
 754 0384 08       		.uleb128 0x8
 755 0385 77000000 		.4byte	0x77
 756 0389 94030000 		.4byte	0x394
 757 038d 09       		.uleb128 0x9
 758 038e 6F010000 		.4byte	0x16f
 759 0392 00       		.byte	0
 760 0393 00       		.byte	0
 761 0394 08       		.uleb128 0x8
 762 0395 C6000000 		.4byte	0xc6
 763 0399 A4030000 		.4byte	0x3a4
 764 039d 09       		.uleb128 0x9
 765 039e 6F010000 		.4byte	0x16f
 766 03a2 00       		.byte	0
 767 03a3 00       		.byte	0
 768 03a4 04       		.uleb128 0x4
 769 03a5 03040000 		.4byte	.LASF45
 770 03a9 04       		.byte	0x4
 771 03aa C501     		.2byte	0x1c5
 772 03ac 2C030000 		.4byte	0x32c
 773 03b0 0C       		.uleb128 0xc
 774 03b1 32       		.byte	0x32
 775 03b2 04       		.byte	0x4
 776 03b3 CB01     		.2byte	0x1cb
 777 03b5 FB030000 		.4byte	0x3fb
 778 03b9 0B       		.uleb128 0xb
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccY3ebF6.s 			page 31


 779 03ba B7000000 		.4byte	.LASF34
 780 03be 04       		.byte	0x4
 781 03bf D001     		.2byte	0x1d0
 782 03c1 FB030000 		.4byte	0x3fb
 783 03c5 00       		.byte	0
 784 03c6 0B       		.uleb128 0xb
 785 03c7 C6010000 		.4byte	.LASF35
 786 03cb 04       		.byte	0x4
 787 03cc D501     		.2byte	0x1d5
 788 03ce FB030000 		.4byte	0x3fb
 789 03d2 0A       		.byte	0xa
 790 03d3 0B       		.uleb128 0xb
 791 03d4 AD020000 		.4byte	.LASF36
 792 03d8 04       		.byte	0x4
 793 03d9 DA01     		.2byte	0x1da
 794 03db FB030000 		.4byte	0x3fb
 795 03df 14       		.byte	0x14
 796 03e0 0B       		.uleb128 0xb
 797 03e1 3E000000 		.4byte	.LASF37
 798 03e5 04       		.byte	0x4
 799 03e6 DF01     		.2byte	0x1df
 800 03e8 FB030000 		.4byte	0x3fb
 801 03ec 1E       		.byte	0x1e
 802 03ed 0B       		.uleb128 0xb
 803 03ee 0F010000 		.4byte	.LASF38
 804 03f2 04       		.byte	0x4
 805 03f3 E401     		.2byte	0x1e4
 806 03f5 FB030000 		.4byte	0x3fb
 807 03f9 28       		.byte	0x28
 808 03fa 00       		.byte	0
 809 03fb 08       		.uleb128 0x8
 810 03fc A4030000 		.4byte	0x3a4
 811 0400 0B040000 		.4byte	0x40b
 812 0404 09       		.uleb128 0x9
 813 0405 6F010000 		.4byte	0x16f
 814 0409 00       		.byte	0
 815 040a 00       		.byte	0
 816 040b 04       		.uleb128 0x4
 817 040c 83030000 		.4byte	.LASF46
 818 0410 04       		.byte	0x4
 819 0411 E501     		.2byte	0x1e5
 820 0413 B0030000 		.4byte	0x3b0
 821 0417 0C       		.uleb128 0xc
 822 0418 B0       		.byte	0xb0
 823 0419 04       		.byte	0x4
 824 041a EB01     		.2byte	0x1eb
 825 041c 18050000 		.4byte	0x518
 826 0420 0B       		.uleb128 0xb
 827 0421 E0000000 		.4byte	.LASF47
 828 0425 04       		.byte	0x4
 829 0426 F201     		.2byte	0x1f2
 830 0428 77000000 		.4byte	0x77
 831 042c 00       		.byte	0
 832 042d 0B       		.uleb128 0xb
 833 042e A4060000 		.4byte	.LASF48
 834 0432 04       		.byte	0x4
 835 0433 F701     		.2byte	0x1f7
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccY3ebF6.s 			page 32


 836 0435 77000000 		.4byte	0x77
 837 0439 02       		.byte	0x2
 838 043a 0B       		.uleb128 0xb
 839 043b 3D040000 		.4byte	.LASF49
 840 043f 04       		.byte	0x4
 841 0440 FC01     		.2byte	0x1fc
 842 0442 77000000 		.4byte	0x77
 843 0446 04       		.byte	0x4
 844 0447 0B       		.uleb128 0xb
 845 0448 E3020000 		.4byte	.LASF50
 846 044c 04       		.byte	0x4
 847 044d 0202     		.2byte	0x202
 848 044f 77000000 		.4byte	0x77
 849 0453 06       		.byte	0x6
 850 0454 0B       		.uleb128 0xb
 851 0455 C0040000 		.4byte	.LASF51
 852 0459 04       		.byte	0x4
 853 045a 0702     		.2byte	0x207
 854 045c 77000000 		.4byte	0x77
 855 0460 08       		.byte	0x8
 856 0461 0B       		.uleb128 0xb
 857 0462 36040000 		.4byte	.LASF52
 858 0466 04       		.byte	0x4
 859 0467 0C02     		.2byte	0x20c
 860 0469 B5000000 		.4byte	0xb5
 861 046d 0C       		.byte	0xc
 862 046e 0B       		.uleb128 0xb
 863 046f F2030000 		.4byte	.LASF53
 864 0473 04       		.byte	0x4
 865 0474 1202     		.2byte	0x212
 866 0476 18050000 		.4byte	0x518
 867 047a 10       		.byte	0x10
 868 047b 0B       		.uleb128 0xb
 869 047c F8020000 		.4byte	.LASF54
 870 0480 04       		.byte	0x4
 871 0481 1902     		.2byte	0x219
 872 0483 18050000 		.4byte	0x518
 873 0487 14       		.byte	0x14
 874 0488 0B       		.uleb128 0xb
 875 0489 D1060000 		.4byte	.LASF55
 876 048d 04       		.byte	0x4
 877 048e 2902     		.2byte	0x229
 878 0490 28050000 		.4byte	0x528
 879 0494 18       		.byte	0x18
 880 0495 0B       		.uleb128 0xb
 881 0496 F8000000 		.4byte	.LASF56
 882 049a 04       		.byte	0x4
 883 049b 2F02     		.2byte	0x22f
 884 049d 77000000 		.4byte	0x77
 885 04a1 1E       		.byte	0x1e
 886 04a2 0B       		.uleb128 0xb
 887 04a3 B6040000 		.4byte	.LASF57
 888 04a7 04       		.byte	0x4
 889 04a8 3402     		.2byte	0x234
 890 04aa 6B000000 		.4byte	0x6b
 891 04ae 20       		.byte	0x20
 892 04af 0B       		.uleb128 0xb
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccY3ebF6.s 			page 33


 893 04b0 16000000 		.4byte	.LASF58
 894 04b4 04       		.byte	0x4
 895 04b5 3902     		.2byte	0x239
 896 04b7 20030000 		.4byte	0x320
 897 04bb 22       		.byte	0x22
 898 04bc 0B       		.uleb128 0xb
 899 04bd 90040000 		.4byte	.LASF59
 900 04c1 04       		.byte	0x4
 901 04c2 3E02     		.2byte	0x23e
 902 04c4 0B040000 		.4byte	0x40b
 903 04c8 74       		.byte	0x74
 904 04c9 0B       		.uleb128 0xb
 905 04ca 94060000 		.4byte	.LASF60
 906 04ce 04       		.byte	0x4
 907 04cf 4302     		.2byte	0x243
 908 04d1 6B000000 		.4byte	0x6b
 909 04d5 A6       		.byte	0xa6
 910 04d6 0B       		.uleb128 0xb
 911 04d7 FD010000 		.4byte	.LASF61
 912 04db 04       		.byte	0x4
 913 04dc 4802     		.2byte	0x248
 914 04de 6B000000 		.4byte	0x6b
 915 04e2 A7       		.byte	0xa7
 916 04e3 0B       		.uleb128 0xb
 917 04e4 45040000 		.4byte	.LASF62
 918 04e8 04       		.byte	0x4
 919 04e9 4D02     		.2byte	0x24d
 920 04eb 77000000 		.4byte	0x77
 921 04ef A8       		.byte	0xa8
 922 04f0 0B       		.uleb128 0xb
 923 04f1 1F000000 		.4byte	.LASF63
 924 04f5 04       		.byte	0x4
 925 04f6 5202     		.2byte	0x252
 926 04f8 84030000 		.4byte	0x384
 927 04fc AA       		.byte	0xaa
 928 04fd 0B       		.uleb128 0xb
 929 04fe 0B050000 		.4byte	.LASF64
 930 0502 04       		.byte	0x4
 931 0503 5702     		.2byte	0x257
 932 0505 6B000000 		.4byte	0x6b
 933 0509 AC       		.byte	0xac
 934 050a 0B       		.uleb128 0xb
 935 050b 2F000000 		.4byte	.LASF65
 936 050f 04       		.byte	0x4
 937 0510 5C02     		.2byte	0x25c
 938 0512 6B000000 		.4byte	0x6b
 939 0516 AD       		.byte	0xad
 940 0517 00       		.byte	0
 941 0518 08       		.uleb128 0x8
 942 0519 83000000 		.4byte	0x83
 943 051d 28050000 		.4byte	0x528
 944 0521 09       		.uleb128 0x9
 945 0522 6F010000 		.4byte	0x16f
 946 0526 00       		.byte	0
 947 0527 00       		.byte	0
 948 0528 08       		.uleb128 0x8
 949 0529 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccY3ebF6.s 			page 34


 950 052d 38050000 		.4byte	0x538
 951 0531 09       		.uleb128 0x9
 952 0532 6F010000 		.4byte	0x16f
 953 0536 04       		.byte	0x4
 954 0537 00       		.byte	0
 955 0538 04       		.uleb128 0x4
 956 0539 D5040000 		.4byte	.LASF66
 957 053d 04       		.byte	0x4
 958 053e 5D02     		.2byte	0x25d
 959 0540 17040000 		.4byte	0x417
 960 0544 0C       		.uleb128 0xc
 961 0545 1C       		.byte	0x1c
 962 0546 04       		.byte	0x4
 963 0547 6302     		.2byte	0x263
 964 0549 C3050000 		.4byte	0x5c3
 965 054d 0B       		.uleb128 0xb
 966 054e A3000000 		.4byte	.LASF67
 967 0552 04       		.byte	0x4
 968 0553 6802     		.2byte	0x268
 969 0555 C3050000 		.4byte	0x5c3
 970 0559 00       		.byte	0
 971 055a 0B       		.uleb128 0xb
 972 055b E9000000 		.4byte	.LASF68
 973 055f 04       		.byte	0x4
 974 0560 6D02     		.2byte	0x26d
 975 0562 C3050000 		.4byte	0x5c3
 976 0566 04       		.byte	0x4
 977 0567 0B       		.uleb128 0xb
 978 0568 04060000 		.4byte	.LASF69
 979 056c 04       		.byte	0x4
 980 056d 7202     		.2byte	0x272
 981 056f C3050000 		.4byte	0x5c3
 982 0573 08       		.byte	0x8
 983 0574 0B       		.uleb128 0xb
 984 0575 A2010000 		.4byte	.LASF70
 985 0579 04       		.byte	0x4
 986 057a 7702     		.2byte	0x277
 987 057c C3050000 		.4byte	0x5c3
 988 0580 0C       		.byte	0xc
 989 0581 0B       		.uleb128 0xb
 990 0582 14010000 		.4byte	.LASF71
 991 0586 04       		.byte	0x4
 992 0587 7C02     		.2byte	0x27c
 993 0589 83000000 		.4byte	0x83
 994 058d 10       		.byte	0x10
 995 058e 0B       		.uleb128 0xb
 996 058f 0A060000 		.4byte	.LASF72
 997 0593 04       		.byte	0x4
 998 0594 8102     		.2byte	0x281
 999 0596 83000000 		.4byte	0x83
 1000 059a 14       		.byte	0x14
 1001 059b 0B       		.uleb128 0xb
 1002 059c E3050000 		.4byte	.LASF73
 1003 05a0 04       		.byte	0x4
 1004 05a1 8602     		.2byte	0x286
 1005 05a3 6B000000 		.4byte	0x6b
 1006 05a7 18       		.byte	0x18
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccY3ebF6.s 			page 35


 1007 05a8 0B       		.uleb128 0xb
 1008 05a9 91000000 		.4byte	.LASF74
 1009 05ad 04       		.byte	0x4
 1010 05ae 8B02     		.2byte	0x28b
 1011 05b0 6B000000 		.4byte	0x6b
 1012 05b4 19       		.byte	0x19
 1013 05b5 0B       		.uleb128 0xb
 1014 05b6 71020000 		.4byte	.LASF75
 1015 05ba 04       		.byte	0x4
 1016 05bb 9002     		.2byte	0x290
 1017 05bd 6B000000 		.4byte	0x6b
 1018 05c1 1A       		.byte	0x1a
 1019 05c2 00       		.byte	0
 1020 05c3 0E       		.uleb128 0xe
 1021 05c4 04       		.byte	0x4
 1022 05c5 A9000000 		.4byte	0xa9
 1023 05c9 04       		.uleb128 0x4
 1024 05ca 94020000 		.4byte	.LASF76
 1025 05ce 04       		.byte	0x4
 1026 05cf 9102     		.2byte	0x291
 1027 05d1 44050000 		.4byte	0x544
 1028 05d5 0C       		.uleb128 0xc
 1029 05d6 1C       		.byte	0x1c
 1030 05d7 04       		.byte	0x4
 1031 05d8 C402     		.2byte	0x2c4
 1032 05da 54060000 		.4byte	0x654
 1033 05de 0B       		.uleb128 0xb
 1034 05df C4060000 		.4byte	.LASF77
 1035 05e3 04       		.byte	0x4
 1036 05e4 CD02     		.2byte	0x2cd
 1037 05e6 54060000 		.4byte	0x654
 1038 05ea 00       		.byte	0
 1039 05eb 0B       		.uleb128 0xb
 1040 05ec 88020000 		.4byte	.LASF78
 1041 05f0 04       		.byte	0x4
 1042 05f1 D402     		.2byte	0x2d4
 1043 05f3 5B060000 		.4byte	0x65b
 1044 05f7 04       		.byte	0x4
 1045 05f8 0B       		.uleb128 0xb
 1046 05f9 36060000 		.4byte	.LASF79
 1047 05fd 04       		.byte	0x4
 1048 05fe DA02     		.2byte	0x2da
 1049 0600 5D060000 		.4byte	0x65d
 1050 0604 08       		.byte	0x8
 1051 0605 0B       		.uleb128 0xb
 1052 0606 4D060000 		.4byte	.LASF80
 1053 060a 04       		.byte	0x4
 1054 060b E002     		.2byte	0x2e0
 1055 060d 5B060000 		.4byte	0x65b
 1056 0611 0C       		.byte	0xc
 1057 0612 0B       		.uleb128 0xb
 1058 0613 5A010000 		.4byte	.LASF81
 1059 0617 04       		.byte	0x4
 1060 0618 E702     		.2byte	0x2e7
 1061 061a 63060000 		.4byte	0x663
 1062 061e 10       		.byte	0x10
 1063 061f 0B       		.uleb128 0xb
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccY3ebF6.s 			page 36


 1064 0620 B7030000 		.4byte	.LASF82
 1065 0624 04       		.byte	0x4
 1066 0625 EC02     		.2byte	0x2ec
 1067 0627 83000000 		.4byte	0x83
 1068 062b 14       		.byte	0x14
 1069 062c 0B       		.uleb128 0xb
 1070 062d 7D000000 		.4byte	.LASF83
 1071 0631 04       		.byte	0x4
 1072 0632 F302     		.2byte	0x2f3
 1073 0634 77000000 		.4byte	0x77
 1074 0638 18       		.byte	0x18
 1075 0639 0B       		.uleb128 0xb
 1076 063a 77020000 		.4byte	.LASF84
 1077 063e 04       		.byte	0x4
 1078 063f FA02     		.2byte	0x2fa
 1079 0641 6B000000 		.4byte	0x6b
 1080 0645 1A       		.byte	0x1a
 1081 0646 0B       		.uleb128 0xb
 1082 0647 D0020000 		.4byte	.LASF85
 1083 064b 04       		.byte	0x4
 1084 064c 0403     		.2byte	0x304
 1085 064e 6B000000 		.4byte	0x6b
 1086 0652 1B       		.byte	0x1b
 1087 0653 00       		.byte	0
 1088 0654 0E       		.uleb128 0xe
 1089 0655 04       		.byte	0x4
 1090 0656 5A060000 		.4byte	0x65a
 1091 065a 0F       		.uleb128 0xf
 1092 065b 10       		.uleb128 0x10
 1093 065c 04       		.byte	0x4
 1094 065d 0E       		.uleb128 0xe
 1095 065e 04       		.byte	0x4
 1096 065f A4030000 		.4byte	0x3a4
 1097 0663 0E       		.uleb128 0xe
 1098 0664 04       		.byte	0x4
 1099 0665 6B000000 		.4byte	0x6b
 1100 0669 04       		.uleb128 0x4
 1101 066a C7000000 		.4byte	.LASF86
 1102 066e 04       		.byte	0x4
 1103 066f 0503     		.2byte	0x305
 1104 0671 D5050000 		.4byte	0x5d5
 1105 0675 0C       		.uleb128 0xc
 1106 0676 8C       		.byte	0x8c
 1107 0677 04       		.byte	0x4
 1108 0678 0B03     		.2byte	0x30b
 1109 067a 8C060000 		.4byte	0x68c
 1110 067e 0B       		.uleb128 0xb
 1111 067f 5D060000 		.4byte	.LASF87
 1112 0683 04       		.byte	0x4
 1113 0684 1003     		.2byte	0x310
 1114 0686 8C060000 		.4byte	0x68c
 1115 068a 00       		.byte	0
 1116 068b 00       		.byte	0
 1117 068c 08       		.uleb128 0x8
 1118 068d 69060000 		.4byte	0x669
 1119 0691 9C060000 		.4byte	0x69c
 1120 0695 09       		.uleb128 0x9
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccY3ebF6.s 			page 37


 1121 0696 6F010000 		.4byte	0x16f
 1122 069a 04       		.byte	0x4
 1123 069b 00       		.byte	0
 1124 069c 04       		.uleb128 0x4
 1125 069d 00000000 		.4byte	.LASF88
 1126 06a1 04       		.byte	0x4
 1127 06a2 1103     		.2byte	0x311
 1128 06a4 75060000 		.4byte	0x675
 1129 06a8 02       		.uleb128 0x2
 1130 06a9 08       		.byte	0x8
 1131 06aa 04       		.byte	0x4
 1132 06ab EC020000 		.4byte	.LASF89
 1133 06af 11       		.uleb128 0x11
 1134 06b0 AF010000 		.4byte	.LASF111
 1135 06b4 01       		.byte	0x1
 1136 06b5 F402     		.2byte	0x2f4
 1137 06b7 00000000 		.4byte	.LFB3
 1138 06bb 58000000 		.4byte	.LFE3-.LFB3
 1139 06bf 01       		.uleb128 0x1
 1140 06c0 9C       		.byte	0x9c
 1141 06c1 F2060000 		.4byte	0x6f2
 1142 06c5 12       		.uleb128 0x12
 1143 06c6 48000000 		.4byte	.LASF90
 1144 06ca 01       		.byte	0x1
 1145 06cb F802     		.2byte	0x2f8
 1146 06cd 83000000 		.4byte	0x83
 1147 06d1 00000000 		.4byte	.LLST0
 1148 06d5 12       		.uleb128 0x12
 1149 06d6 61000000 		.4byte	.LASF91
 1150 06da 01       		.byte	0x1
 1151 06db F902     		.2byte	0x2f9
 1152 06dd 83000000 		.4byte	0x83
 1153 06e1 19000000 		.4byte	.LLST1
 1154 06e5 13       		.uleb128 0x13
 1155 06e6 80020000 		.4byte	.LASF92
 1156 06ea 01       		.byte	0x1
 1157 06eb FA02     		.2byte	0x2fa
 1158 06ed F2060000 		.4byte	0x6f2
 1159 06f1 00       		.byte	0
 1160 06f2 0E       		.uleb128 0xe
 1161 06f3 04       		.byte	0x4
 1162 06f4 F8060000 		.4byte	0x6f8
 1163 06f8 14       		.uleb128 0x14
 1164 06f9 76010000 		.4byte	0x176
 1165 06fd 15       		.uleb128 0x15
 1166 06fe 2B010000 		.4byte	.LASF93
 1167 0702 01       		.byte	0x1
 1168 0703 79       		.byte	0x79
 1169 0704 00000000 		.4byte	.LFB1
 1170 0708 2C000000 		.4byte	.LFE1-.LFB1
 1171 070c 01       		.uleb128 0x1
 1172 070d 9C       		.byte	0x9c
 1173 070e 1C070000 		.4byte	0x71c
 1174 0712 16       		.uleb128 0x16
 1175 0713 0E000000 		.4byte	.LVL8
 1176 0717 AF060000 		.4byte	0x6af
 1177 071b 00       		.byte	0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccY3ebF6.s 			page 38


 1178 071c 17       		.uleb128 0x17
 1179 071d E9040000 		.4byte	.LASF112
 1180 0721 01       		.byte	0x1
 1181 0722 2D03     		.2byte	0x32d
 1182 0724 01       		.byte	0x1
 1183 0725 36070000 		.4byte	0x736
 1184 0729 13       		.uleb128 0x13
 1185 072a 80020000 		.4byte	.LASF92
 1186 072e 01       		.byte	0x1
 1187 072f 3503     		.2byte	0x335
 1188 0731 36070000 		.4byte	0x736
 1189 0735 00       		.byte	0
 1190 0736 0E       		.uleb128 0xe
 1191 0737 04       		.byte	0x4
 1192 0738 76010000 		.4byte	0x176
 1193 073c 15       		.uleb128 0x15
 1194 073d 2F050000 		.4byte	.LASF94
 1195 0741 01       		.byte	0x1
 1196 0742 ED       		.byte	0xed
 1197 0743 00000000 		.4byte	.LFB2
 1198 0747 C4000000 		.4byte	.LFE2-.LFB2
 1199 074b 01       		.uleb128 0x1
 1200 074c 9C       		.byte	0x9c
 1201 074d C2070000 		.4byte	0x7c2
 1202 0751 18       		.uleb128 0x18
 1203 0752 D5010000 		.4byte	.LASF95
 1204 0756 01       		.byte	0x1
 1205 0757 F0       		.byte	0xf0
 1206 0758 C2070000 		.4byte	0x7c2
 1207 075c 37000000 		.4byte	.LLST2
 1208 0760 19       		.uleb128 0x19
 1209 0761 1C070000 		.4byte	0x71c
 1210 0765 28000000 		.4byte	.LBB4
 1211 0769 7A000000 		.4byte	.LBE4-.LBB4
 1212 076d 01       		.byte	0x1
 1213 076e 2E01     		.2byte	0x12e
 1214 0770 A8070000 		.4byte	0x7a8
 1215 0774 1A       		.uleb128 0x1a
 1216 0775 28000000 		.4byte	.LBB5
 1217 0779 7A000000 		.4byte	.LBE5-.LBB5
 1218 077d 1B       		.uleb128 0x1b
 1219 077e 29070000 		.4byte	0x729
 1220 0782 16       		.uleb128 0x16
 1221 0783 66000000 		.4byte	.LVL14
 1222 0787 26080000 		.4byte	0x826
 1223 078b 16       		.uleb128 0x16
 1224 078c 72000000 		.4byte	.LVL15
 1225 0790 32080000 		.4byte	0x832
 1226 0794 16       		.uleb128 0x16
 1227 0795 76000000 		.4byte	.LVL16
 1228 0799 3E080000 		.4byte	0x83e
 1229 079d 16       		.uleb128 0x16
 1230 079e 92000000 		.4byte	.LVL19
 1231 07a2 4A080000 		.4byte	0x84a
 1232 07a6 00       		.byte	0
 1233 07a7 00       		.byte	0
 1234 07a8 16       		.uleb128 0x16
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccY3ebF6.s 			page 39


 1235 07a9 22000000 		.4byte	.LVL10
 1236 07ad AF060000 		.4byte	0x6af
 1237 07b1 1C       		.uleb128 0x1c
 1238 07b2 28000000 		.4byte	.LVL11
 1239 07b6 55080000 		.4byte	0x855
 1240 07ba 1D       		.uleb128 0x1d
 1241 07bb 01       		.uleb128 0x1
 1242 07bc 50       		.byte	0x50
 1243 07bd 02       		.uleb128 0x2
 1244 07be 77       		.byte	0x77
 1245 07bf 00       		.sleb128 0
 1246 07c0 00       		.byte	0
 1247 07c1 00       		.byte	0
 1248 07c2 0E       		.uleb128 0xe
 1249 07c3 04       		.byte	0x4
 1250 07c4 C8070000 		.4byte	0x7c8
 1251 07c8 14       		.uleb128 0x14
 1252 07c9 C9050000 		.4byte	0x5c9
 1253 07cd 1E       		.uleb128 0x1e
 1254 07ce B8020000 		.4byte	.LASF96
 1255 07d2 04       		.byte	0x4
 1256 07d3 0205     		.2byte	0x502
 1257 07d5 38050000 		.4byte	0x538
 1258 07d9 1E       		.uleb128 0x1e
 1259 07da 67060000 		.4byte	.LASF97
 1260 07de 04       		.byte	0x4
 1261 07df 0305     		.2byte	0x503
 1262 07e1 E5070000 		.4byte	0x7e5
 1263 07e5 14       		.uleb128 0x14
 1264 07e6 9C060000 		.4byte	0x69c
 1265 07ea 1F       		.uleb128 0x1f
 1266 07eb 37030000 		.4byte	.LASF98
 1267 07ef 05       		.byte	0x5
 1268 07f0 B1       		.byte	0xb1
 1269 07f1 A4000000 		.4byte	0xa4
 1270 07f5 1F       		.uleb128 0x1f
 1271 07f6 DB060000 		.4byte	.LASF99
 1272 07fa 05       		.byte	0x5
 1273 07fb B2       		.byte	0xb2
 1274 07fc A4000000 		.4byte	0xa4
 1275 0800 1F       		.uleb128 0x1f
 1276 0801 98040000 		.4byte	.LASF100
 1277 0805 05       		.byte	0x5
 1278 0806 B3       		.byte	0xb3
 1279 0807 6B000000 		.4byte	0x6b
 1280 080b 1F       		.uleb128 0x1f
 1281 080c EE050000 		.4byte	.LASF101
 1282 0810 05       		.byte	0x5
 1283 0811 B5       		.byte	0xb5
 1284 0812 5D060000 		.4byte	0x65d
 1285 0816 1F       		.uleb128 0x1f
 1286 0817 AD060000 		.4byte	.LASF102
 1287 081b 05       		.byte	0x5
 1288 081c BC       		.byte	0xbc
 1289 081d 21080000 		.4byte	0x821
 1290 0821 14       		.uleb128 0x14
 1291 0822 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccY3ebF6.s 			page 40


 1292 0826 20       		.uleb128 0x20
 1293 0827 1D060000 		.4byte	.LASF103
 1294 082b 1D060000 		.4byte	.LASF103
 1295 082f 06       		.byte	0x6
 1296 0830 A301     		.2byte	0x1a3
 1297 0832 20       		.uleb128 0x20
 1298 0833 64030000 		.4byte	.LASF104
 1299 0837 64030000 		.4byte	.LASF104
 1300 083b 06       		.byte	0x6
 1301 083c B101     		.2byte	0x1b1
 1302 083e 20       		.uleb128 0x20
 1303 083f 76040000 		.4byte	.LASF105
 1304 0843 76040000 		.4byte	.LASF105
 1305 0847 06       		.byte	0x6
 1306 0848 A201     		.2byte	0x1a2
 1307 084a 21       		.uleb128 0x21
 1308 084b 2B020000 		.4byte	.LASF106
 1309 084f 2B020000 		.4byte	.LASF106
 1310 0853 05       		.byte	0x5
 1311 0854 83       		.byte	0x83
 1312 0855 20       		.uleb128 0x20
 1313 0856 4E020000 		.4byte	.LASF107
 1314 085a 4E020000 		.4byte	.LASF107
 1315 085e 06       		.byte	0x6
 1316 085f 9201     		.2byte	0x192
 1317 0861 00       		.byte	0
 1318              		.section	.debug_abbrev,"",%progbits
 1319              	.Ldebug_abbrev0:
 1320 0000 01       		.uleb128 0x1
 1321 0001 11       		.uleb128 0x11
 1322 0002 01       		.byte	0x1
 1323 0003 25       		.uleb128 0x25
 1324 0004 0E       		.uleb128 0xe
 1325 0005 13       		.uleb128 0x13
 1326 0006 0B       		.uleb128 0xb
 1327 0007 03       		.uleb128 0x3
 1328 0008 0E       		.uleb128 0xe
 1329 0009 1B       		.uleb128 0x1b
 1330 000a 0E       		.uleb128 0xe
 1331 000b 55       		.uleb128 0x55
 1332 000c 17       		.uleb128 0x17
 1333 000d 11       		.uleb128 0x11
 1334 000e 01       		.uleb128 0x1
 1335 000f 10       		.uleb128 0x10
 1336 0010 17       		.uleb128 0x17
 1337 0011 00       		.byte	0
 1338 0012 00       		.byte	0
 1339 0013 02       		.uleb128 0x2
 1340 0014 24       		.uleb128 0x24
 1341 0015 00       		.byte	0
 1342 0016 0B       		.uleb128 0xb
 1343 0017 0B       		.uleb128 0xb
 1344 0018 3E       		.uleb128 0x3e
 1345 0019 0B       		.uleb128 0xb
 1346 001a 03       		.uleb128 0x3
 1347 001b 0E       		.uleb128 0xe
 1348 001c 00       		.byte	0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccY3ebF6.s 			page 41


 1349 001d 00       		.byte	0
 1350 001e 03       		.uleb128 0x3
 1351 001f 24       		.uleb128 0x24
 1352 0020 00       		.byte	0
 1353 0021 0B       		.uleb128 0xb
 1354 0022 0B       		.uleb128 0xb
 1355 0023 3E       		.uleb128 0x3e
 1356 0024 0B       		.uleb128 0xb
 1357 0025 03       		.uleb128 0x3
 1358 0026 08       		.uleb128 0x8
 1359 0027 00       		.byte	0
 1360 0028 00       		.byte	0
 1361 0029 04       		.uleb128 0x4
 1362 002a 16       		.uleb128 0x16
 1363 002b 00       		.byte	0
 1364 002c 03       		.uleb128 0x3
 1365 002d 0E       		.uleb128 0xe
 1366 002e 3A       		.uleb128 0x3a
 1367 002f 0B       		.uleb128 0xb
 1368 0030 3B       		.uleb128 0x3b
 1369 0031 05       		.uleb128 0x5
 1370 0032 49       		.uleb128 0x49
 1371 0033 13       		.uleb128 0x13
 1372 0034 00       		.byte	0
 1373 0035 00       		.byte	0
 1374 0036 05       		.uleb128 0x5
 1375 0037 35       		.uleb128 0x35
 1376 0038 00       		.byte	0
 1377 0039 49       		.uleb128 0x49
 1378 003a 13       		.uleb128 0x13
 1379 003b 00       		.byte	0
 1380 003c 00       		.byte	0
 1381 003d 06       		.uleb128 0x6
 1382 003e 13       		.uleb128 0x13
 1383 003f 01       		.byte	0x1
 1384 0040 0B       		.uleb128 0xb
 1385 0041 0B       		.uleb128 0xb
 1386 0042 3A       		.uleb128 0x3a
 1387 0043 0B       		.uleb128 0xb
 1388 0044 3B       		.uleb128 0x3b
 1389 0045 0B       		.uleb128 0xb
 1390 0046 01       		.uleb128 0x1
 1391 0047 13       		.uleb128 0x13
 1392 0048 00       		.byte	0
 1393 0049 00       		.byte	0
 1394 004a 07       		.uleb128 0x7
 1395 004b 0D       		.uleb128 0xd
 1396 004c 00       		.byte	0
 1397 004d 03       		.uleb128 0x3
 1398 004e 0E       		.uleb128 0xe
 1399 004f 3A       		.uleb128 0x3a
 1400 0050 0B       		.uleb128 0xb
 1401 0051 3B       		.uleb128 0x3b
 1402 0052 0B       		.uleb128 0xb
 1403 0053 49       		.uleb128 0x49
 1404 0054 13       		.uleb128 0x13
 1405 0055 38       		.uleb128 0x38
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccY3ebF6.s 			page 42


 1406 0056 0B       		.uleb128 0xb
 1407 0057 00       		.byte	0
 1408 0058 00       		.byte	0
 1409 0059 08       		.uleb128 0x8
 1410 005a 01       		.uleb128 0x1
 1411 005b 01       		.byte	0x1
 1412 005c 49       		.uleb128 0x49
 1413 005d 13       		.uleb128 0x13
 1414 005e 01       		.uleb128 0x1
 1415 005f 13       		.uleb128 0x13
 1416 0060 00       		.byte	0
 1417 0061 00       		.byte	0
 1418 0062 09       		.uleb128 0x9
 1419 0063 21       		.uleb128 0x21
 1420 0064 00       		.byte	0
 1421 0065 49       		.uleb128 0x49
 1422 0066 13       		.uleb128 0x13
 1423 0067 2F       		.uleb128 0x2f
 1424 0068 0B       		.uleb128 0xb
 1425 0069 00       		.byte	0
 1426 006a 00       		.byte	0
 1427 006b 0A       		.uleb128 0xa
 1428 006c 16       		.uleb128 0x16
 1429 006d 00       		.byte	0
 1430 006e 03       		.uleb128 0x3
 1431 006f 0E       		.uleb128 0xe
 1432 0070 3A       		.uleb128 0x3a
 1433 0071 0B       		.uleb128 0xb
 1434 0072 3B       		.uleb128 0x3b
 1435 0073 0B       		.uleb128 0xb
 1436 0074 49       		.uleb128 0x49
 1437 0075 13       		.uleb128 0x13
 1438 0076 00       		.byte	0
 1439 0077 00       		.byte	0
 1440 0078 0B       		.uleb128 0xb
 1441 0079 0D       		.uleb128 0xd
 1442 007a 00       		.byte	0
 1443 007b 03       		.uleb128 0x3
 1444 007c 0E       		.uleb128 0xe
 1445 007d 3A       		.uleb128 0x3a
 1446 007e 0B       		.uleb128 0xb
 1447 007f 3B       		.uleb128 0x3b
 1448 0080 05       		.uleb128 0x5
 1449 0081 49       		.uleb128 0x49
 1450 0082 13       		.uleb128 0x13
 1451 0083 38       		.uleb128 0x38
 1452 0084 0B       		.uleb128 0xb
 1453 0085 00       		.byte	0
 1454 0086 00       		.byte	0
 1455 0087 0C       		.uleb128 0xc
 1456 0088 13       		.uleb128 0x13
 1457 0089 01       		.byte	0x1
 1458 008a 0B       		.uleb128 0xb
 1459 008b 0B       		.uleb128 0xb
 1460 008c 3A       		.uleb128 0x3a
 1461 008d 0B       		.uleb128 0xb
 1462 008e 3B       		.uleb128 0x3b
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccY3ebF6.s 			page 43


 1463 008f 05       		.uleb128 0x5
 1464 0090 01       		.uleb128 0x1
 1465 0091 13       		.uleb128 0x13
 1466 0092 00       		.byte	0
 1467 0093 00       		.byte	0
 1468 0094 0D       		.uleb128 0xd
 1469 0095 0D       		.uleb128 0xd
 1470 0096 00       		.byte	0
 1471 0097 03       		.uleb128 0x3
 1472 0098 08       		.uleb128 0x8
 1473 0099 3A       		.uleb128 0x3a
 1474 009a 0B       		.uleb128 0xb
 1475 009b 3B       		.uleb128 0x3b
 1476 009c 05       		.uleb128 0x5
 1477 009d 49       		.uleb128 0x49
 1478 009e 13       		.uleb128 0x13
 1479 009f 38       		.uleb128 0x38
 1480 00a0 0B       		.uleb128 0xb
 1481 00a1 00       		.byte	0
 1482 00a2 00       		.byte	0
 1483 00a3 0E       		.uleb128 0xe
 1484 00a4 0F       		.uleb128 0xf
 1485 00a5 00       		.byte	0
 1486 00a6 0B       		.uleb128 0xb
 1487 00a7 0B       		.uleb128 0xb
 1488 00a8 49       		.uleb128 0x49
 1489 00a9 13       		.uleb128 0x13
 1490 00aa 00       		.byte	0
 1491 00ab 00       		.byte	0
 1492 00ac 0F       		.uleb128 0xf
 1493 00ad 26       		.uleb128 0x26
 1494 00ae 00       		.byte	0
 1495 00af 00       		.byte	0
 1496 00b0 00       		.byte	0
 1497 00b1 10       		.uleb128 0x10
 1498 00b2 0F       		.uleb128 0xf
 1499 00b3 00       		.byte	0
 1500 00b4 0B       		.uleb128 0xb
 1501 00b5 0B       		.uleb128 0xb
 1502 00b6 00       		.byte	0
 1503 00b7 00       		.byte	0
 1504 00b8 11       		.uleb128 0x11
 1505 00b9 2E       		.uleb128 0x2e
 1506 00ba 01       		.byte	0x1
 1507 00bb 03       		.uleb128 0x3
 1508 00bc 0E       		.uleb128 0xe
 1509 00bd 3A       		.uleb128 0x3a
 1510 00be 0B       		.uleb128 0xb
 1511 00bf 3B       		.uleb128 0x3b
 1512 00c0 05       		.uleb128 0x5
 1513 00c1 27       		.uleb128 0x27
 1514 00c2 19       		.uleb128 0x19
 1515 00c3 11       		.uleb128 0x11
 1516 00c4 01       		.uleb128 0x1
 1517 00c5 12       		.uleb128 0x12
 1518 00c6 06       		.uleb128 0x6
 1519 00c7 40       		.uleb128 0x40
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccY3ebF6.s 			page 44


 1520 00c8 18       		.uleb128 0x18
 1521 00c9 9742     		.uleb128 0x2117
 1522 00cb 19       		.uleb128 0x19
 1523 00cc 01       		.uleb128 0x1
 1524 00cd 13       		.uleb128 0x13
 1525 00ce 00       		.byte	0
 1526 00cf 00       		.byte	0
 1527 00d0 12       		.uleb128 0x12
 1528 00d1 34       		.uleb128 0x34
 1529 00d2 00       		.byte	0
 1530 00d3 03       		.uleb128 0x3
 1531 00d4 0E       		.uleb128 0xe
 1532 00d5 3A       		.uleb128 0x3a
 1533 00d6 0B       		.uleb128 0xb
 1534 00d7 3B       		.uleb128 0x3b
 1535 00d8 05       		.uleb128 0x5
 1536 00d9 49       		.uleb128 0x49
 1537 00da 13       		.uleb128 0x13
 1538 00db 02       		.uleb128 0x2
 1539 00dc 17       		.uleb128 0x17
 1540 00dd 00       		.byte	0
 1541 00de 00       		.byte	0
 1542 00df 13       		.uleb128 0x13
 1543 00e0 34       		.uleb128 0x34
 1544 00e1 00       		.byte	0
 1545 00e2 03       		.uleb128 0x3
 1546 00e3 0E       		.uleb128 0xe
 1547 00e4 3A       		.uleb128 0x3a
 1548 00e5 0B       		.uleb128 0xb
 1549 00e6 3B       		.uleb128 0x3b
 1550 00e7 05       		.uleb128 0x5
 1551 00e8 49       		.uleb128 0x49
 1552 00e9 13       		.uleb128 0x13
 1553 00ea 00       		.byte	0
 1554 00eb 00       		.byte	0
 1555 00ec 14       		.uleb128 0x14
 1556 00ed 26       		.uleb128 0x26
 1557 00ee 00       		.byte	0
 1558 00ef 49       		.uleb128 0x49
 1559 00f0 13       		.uleb128 0x13
 1560 00f1 00       		.byte	0
 1561 00f2 00       		.byte	0
 1562 00f3 15       		.uleb128 0x15
 1563 00f4 2E       		.uleb128 0x2e
 1564 00f5 01       		.byte	0x1
 1565 00f6 3F       		.uleb128 0x3f
 1566 00f7 19       		.uleb128 0x19
 1567 00f8 03       		.uleb128 0x3
 1568 00f9 0E       		.uleb128 0xe
 1569 00fa 3A       		.uleb128 0x3a
 1570 00fb 0B       		.uleb128 0xb
 1571 00fc 3B       		.uleb128 0x3b
 1572 00fd 0B       		.uleb128 0xb
 1573 00fe 27       		.uleb128 0x27
 1574 00ff 19       		.uleb128 0x19
 1575 0100 11       		.uleb128 0x11
 1576 0101 01       		.uleb128 0x1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccY3ebF6.s 			page 45


 1577 0102 12       		.uleb128 0x12
 1578 0103 06       		.uleb128 0x6
 1579 0104 40       		.uleb128 0x40
 1580 0105 18       		.uleb128 0x18
 1581 0106 9742     		.uleb128 0x2117
 1582 0108 19       		.uleb128 0x19
 1583 0109 01       		.uleb128 0x1
 1584 010a 13       		.uleb128 0x13
 1585 010b 00       		.byte	0
 1586 010c 00       		.byte	0
 1587 010d 16       		.uleb128 0x16
 1588 010e 898201   		.uleb128 0x4109
 1589 0111 00       		.byte	0
 1590 0112 11       		.uleb128 0x11
 1591 0113 01       		.uleb128 0x1
 1592 0114 31       		.uleb128 0x31
 1593 0115 13       		.uleb128 0x13
 1594 0116 00       		.byte	0
 1595 0117 00       		.byte	0
 1596 0118 17       		.uleb128 0x17
 1597 0119 2E       		.uleb128 0x2e
 1598 011a 01       		.byte	0x1
 1599 011b 03       		.uleb128 0x3
 1600 011c 0E       		.uleb128 0xe
 1601 011d 3A       		.uleb128 0x3a
 1602 011e 0B       		.uleb128 0xb
 1603 011f 3B       		.uleb128 0x3b
 1604 0120 05       		.uleb128 0x5
 1605 0121 27       		.uleb128 0x27
 1606 0122 19       		.uleb128 0x19
 1607 0123 20       		.uleb128 0x20
 1608 0124 0B       		.uleb128 0xb
 1609 0125 01       		.uleb128 0x1
 1610 0126 13       		.uleb128 0x13
 1611 0127 00       		.byte	0
 1612 0128 00       		.byte	0
 1613 0129 18       		.uleb128 0x18
 1614 012a 34       		.uleb128 0x34
 1615 012b 00       		.byte	0
 1616 012c 03       		.uleb128 0x3
 1617 012d 0E       		.uleb128 0xe
 1618 012e 3A       		.uleb128 0x3a
 1619 012f 0B       		.uleb128 0xb
 1620 0130 3B       		.uleb128 0x3b
 1621 0131 0B       		.uleb128 0xb
 1622 0132 49       		.uleb128 0x49
 1623 0133 13       		.uleb128 0x13
 1624 0134 02       		.uleb128 0x2
 1625 0135 17       		.uleb128 0x17
 1626 0136 00       		.byte	0
 1627 0137 00       		.byte	0
 1628 0138 19       		.uleb128 0x19
 1629 0139 1D       		.uleb128 0x1d
 1630 013a 01       		.byte	0x1
 1631 013b 31       		.uleb128 0x31
 1632 013c 13       		.uleb128 0x13
 1633 013d 11       		.uleb128 0x11
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccY3ebF6.s 			page 46


 1634 013e 01       		.uleb128 0x1
 1635 013f 12       		.uleb128 0x12
 1636 0140 06       		.uleb128 0x6
 1637 0141 58       		.uleb128 0x58
 1638 0142 0B       		.uleb128 0xb
 1639 0143 59       		.uleb128 0x59
 1640 0144 05       		.uleb128 0x5
 1641 0145 01       		.uleb128 0x1
 1642 0146 13       		.uleb128 0x13
 1643 0147 00       		.byte	0
 1644 0148 00       		.byte	0
 1645 0149 1A       		.uleb128 0x1a
 1646 014a 0B       		.uleb128 0xb
 1647 014b 01       		.byte	0x1
 1648 014c 11       		.uleb128 0x11
 1649 014d 01       		.uleb128 0x1
 1650 014e 12       		.uleb128 0x12
 1651 014f 06       		.uleb128 0x6
 1652 0150 00       		.byte	0
 1653 0151 00       		.byte	0
 1654 0152 1B       		.uleb128 0x1b
 1655 0153 34       		.uleb128 0x34
 1656 0154 00       		.byte	0
 1657 0155 31       		.uleb128 0x31
 1658 0156 13       		.uleb128 0x13
 1659 0157 00       		.byte	0
 1660 0158 00       		.byte	0
 1661 0159 1C       		.uleb128 0x1c
 1662 015a 898201   		.uleb128 0x4109
 1663 015d 01       		.byte	0x1
 1664 015e 11       		.uleb128 0x11
 1665 015f 01       		.uleb128 0x1
 1666 0160 31       		.uleb128 0x31
 1667 0161 13       		.uleb128 0x13
 1668 0162 00       		.byte	0
 1669 0163 00       		.byte	0
 1670 0164 1D       		.uleb128 0x1d
 1671 0165 8A8201   		.uleb128 0x410a
 1672 0168 00       		.byte	0
 1673 0169 02       		.uleb128 0x2
 1674 016a 18       		.uleb128 0x18
 1675 016b 9142     		.uleb128 0x2111
 1676 016d 18       		.uleb128 0x18
 1677 016e 00       		.byte	0
 1678 016f 00       		.byte	0
 1679 0170 1E       		.uleb128 0x1e
 1680 0171 34       		.uleb128 0x34
 1681 0172 00       		.byte	0
 1682 0173 03       		.uleb128 0x3
 1683 0174 0E       		.uleb128 0xe
 1684 0175 3A       		.uleb128 0x3a
 1685 0176 0B       		.uleb128 0xb
 1686 0177 3B       		.uleb128 0x3b
 1687 0178 05       		.uleb128 0x5
 1688 0179 49       		.uleb128 0x49
 1689 017a 13       		.uleb128 0x13
 1690 017b 3F       		.uleb128 0x3f
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccY3ebF6.s 			page 47


 1691 017c 19       		.uleb128 0x19
 1692 017d 3C       		.uleb128 0x3c
 1693 017e 19       		.uleb128 0x19
 1694 017f 00       		.byte	0
 1695 0180 00       		.byte	0
 1696 0181 1F       		.uleb128 0x1f
 1697 0182 34       		.uleb128 0x34
 1698 0183 00       		.byte	0
 1699 0184 03       		.uleb128 0x3
 1700 0185 0E       		.uleb128 0xe
 1701 0186 3A       		.uleb128 0x3a
 1702 0187 0B       		.uleb128 0xb
 1703 0188 3B       		.uleb128 0x3b
 1704 0189 0B       		.uleb128 0xb
 1705 018a 49       		.uleb128 0x49
 1706 018b 13       		.uleb128 0x13
 1707 018c 3F       		.uleb128 0x3f
 1708 018d 19       		.uleb128 0x19
 1709 018e 3C       		.uleb128 0x3c
 1710 018f 19       		.uleb128 0x19
 1711 0190 00       		.byte	0
 1712 0191 00       		.byte	0
 1713 0192 20       		.uleb128 0x20
 1714 0193 2E       		.uleb128 0x2e
 1715 0194 00       		.byte	0
 1716 0195 3F       		.uleb128 0x3f
 1717 0196 19       		.uleb128 0x19
 1718 0197 3C       		.uleb128 0x3c
 1719 0198 19       		.uleb128 0x19
 1720 0199 6E       		.uleb128 0x6e
 1721 019a 0E       		.uleb128 0xe
 1722 019b 03       		.uleb128 0x3
 1723 019c 0E       		.uleb128 0xe
 1724 019d 3A       		.uleb128 0x3a
 1725 019e 0B       		.uleb128 0xb
 1726 019f 3B       		.uleb128 0x3b
 1727 01a0 05       		.uleb128 0x5
 1728 01a1 00       		.byte	0
 1729 01a2 00       		.byte	0
 1730 01a3 21       		.uleb128 0x21
 1731 01a4 2E       		.uleb128 0x2e
 1732 01a5 00       		.byte	0
 1733 01a6 3F       		.uleb128 0x3f
 1734 01a7 19       		.uleb128 0x19
 1735 01a8 3C       		.uleb128 0x3c
 1736 01a9 19       		.uleb128 0x19
 1737 01aa 6E       		.uleb128 0x6e
 1738 01ab 0E       		.uleb128 0xe
 1739 01ac 03       		.uleb128 0x3
 1740 01ad 0E       		.uleb128 0xe
 1741 01ae 3A       		.uleb128 0x3a
 1742 01af 0B       		.uleb128 0xb
 1743 01b0 3B       		.uleb128 0x3b
 1744 01b1 0B       		.uleb128 0xb
 1745 01b2 00       		.byte	0
 1746 01b3 00       		.byte	0
 1747 01b4 00       		.byte	0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccY3ebF6.s 			page 48


 1748              		.section	.debug_loc,"",%progbits
 1749              	.Ldebug_loc0:
 1750              	.LLST0:
 1751 0000 0E000000 		.4byte	.LVL1
 1752 0004 32000000 		.4byte	.LVL6
 1753 0008 0700     		.2byte	0x7
 1754 000a 72       		.byte	0x72
 1755 000b 00       		.sleb128 0
 1756 000c 0A       		.byte	0xa
 1757 000d FFFF     		.2byte	0xffff
 1758 000f 1A       		.byte	0x1a
 1759 0010 9F       		.byte	0x9f
 1760 0011 00000000 		.4byte	0
 1761 0015 00000000 		.4byte	0
 1762              	.LLST1:
 1763 0019 22000000 		.4byte	.LVL3
 1764 001d 2A000000 		.4byte	.LVL4
 1765 0021 0100     		.2byte	0x1
 1766 0023 53       		.byte	0x53
 1767 0024 30000000 		.4byte	.LVL5
 1768 0028 36000000 		.4byte	.LVL7
 1769 002c 0100     		.2byte	0x1
 1770 002e 53       		.byte	0x53
 1771 002f 00000000 		.4byte	0
 1772 0033 00000000 		.4byte	0
 1773              	.LLST2:
 1774 0037 1A000000 		.4byte	.LVL9
 1775 003b A2000000 		.4byte	.LVL20
 1776 003f 0100     		.2byte	0x1
 1777 0041 57       		.byte	0x57
 1778 0042 00000000 		.4byte	0
 1779 0046 00000000 		.4byte	0
 1780              		.section	.debug_aranges,"",%progbits
 1781 0000 2C000000 		.4byte	0x2c
 1782 0004 0200     		.2byte	0x2
 1783 0006 00000000 		.4byte	.Ldebug_info0
 1784 000a 04       		.byte	0x4
 1785 000b 00       		.byte	0
 1786 000c 0000     		.2byte	0
 1787 000e 0000     		.2byte	0
 1788 0010 00000000 		.4byte	.LFB3
 1789 0014 58000000 		.4byte	.LFE3-.LFB3
 1790 0018 00000000 		.4byte	.LFB1
 1791 001c 2C000000 		.4byte	.LFE1-.LFB1
 1792 0020 00000000 		.4byte	.LFB2
 1793 0024 C4000000 		.4byte	.LFE2-.LFB2
 1794 0028 00000000 		.4byte	0
 1795 002c 00000000 		.4byte	0
 1796              		.section	.debug_ranges,"",%progbits
 1797              	.Ldebug_ranges0:
 1798 0000 00000000 		.4byte	.LFB3
 1799 0004 58000000 		.4byte	.LFE3
 1800 0008 00000000 		.4byte	.LFB1
 1801 000c 2C000000 		.4byte	.LFE1
 1802 0010 00000000 		.4byte	.LFB2
 1803 0014 C4000000 		.4byte	.LFE2
 1804 0018 00000000 		.4byte	0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccY3ebF6.s 			page 49


 1805 001c 00000000 		.4byte	0
 1806              		.section	.debug_line,"",%progbits
 1807              	.Ldebug_line0:
 1808 0000 48010000 		.section	.debug_str,"MS",%progbits,1
 1808      0200AF00 
 1808      00000201 
 1808      FB0E0D00 
 1808      01010101 
 1809              	.LASF88:
 1810 0000 43617053 		.ascii	"CapSense_FLASH_STRUCT\000"
 1810      656E7365 
 1810      5F464C41 
 1810      53485F53 
 1810      54525543 
 1811              	.LASF58:
 1812 0016 77646774 		.ascii	"wdgtList\000"
 1812      4C697374 
 1812      00
 1813              	.LASF63:
 1814 001f 736E7254 		.ascii	"snrTestRawCount\000"
 1814      65737452 
 1814      6177436F 
 1814      756E7400 
 1815              	.LASF65:
 1816 002f 7363616E 		.ascii	"scanCurrentISC\000"
 1816      43757272 
 1816      656E7449 
 1816      534300
 1817              	.LASF37:
 1818 003e 666F726D 		.ascii	"formation\000"
 1818      6174696F 
 1818      6E00
 1819              	.LASF90:
 1820 0048 746D7052 		.ascii	"tmpRawData\000"
 1820      61774461 
 1820      746100
 1821              	.LASF26:
 1822 0053 69646163 		.ascii	"idacGainIndex\000"
 1822      4761696E 
 1822      496E6465 
 1822      7800
 1823              	.LASF91:
 1824 0061 746D704D 		.ascii	"tmpMaxCount\000"
 1824      6178436F 
 1824      756E7400 
 1825              	.LASF24:
 1826 006d 6C6F7742 		.ascii	"lowBslnRst\000"
 1826      736C6E52 
 1826      737400
 1827              	.LASF42:
 1828 0078 64696666 		.ascii	"diff\000"
 1828      00
 1829              	.LASF83:
 1830 007d 746F7461 		.ascii	"totalNumSns\000"
 1830      6C4E756D 
 1830      536E7300 
 1831              	.LASF25:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccY3ebF6.s 			page 50


 1832 0089 69646163 		.ascii	"idacMod\000"
 1832      4D6F6400 
 1833              	.LASF74:
 1834 0091 64725368 		.ascii	"drShift\000"
 1834      69667400 
 1835              	.LASF2:
 1836 0099 73686F72 		.ascii	"short int\000"
 1836      7420696E 
 1836      7400
 1837              	.LASF67:
 1838 00a3 6873696F 		.ascii	"hsiomPtr\000"
 1838      6D507472 
 1838      00
 1839              	.LASF23:
 1840 00ac 6F6E4465 		.ascii	"onDebounce\000"
 1840      626F756E 
 1840      636500
 1841              	.LASF34:
 1842 00b7 766F6C5F 		.ascii	"vol_up\000"
 1842      757000
 1843              	.LASF29:
 1844 00be 73697A65 		.ascii	"sizetype\000"
 1844      74797065 
 1844      00
 1845              	.LASF86:
 1846 00c7 43617053 		.ascii	"CapSense_FLASH_WD_STRUCT\000"
 1846      656E7365 
 1846      5F464C41 
 1846      53485F57 
 1846      445F5354 
 1847              	.LASF47:
 1848 00e0 636F6E66 		.ascii	"configId\000"
 1848      69674964 
 1848      00
 1849              	.LASF68:
 1850 00e9 70635074 		.ascii	"pcPtr\000"
 1850      7200
 1851              	.LASF44:
 1852 00ef 69646163 		.ascii	"idacComp\000"
 1852      436F6D70 
 1852      00
 1853              	.LASF56:
 1854 00f8 63736430 		.ascii	"csd0Config\000"
 1854      436F6E66 
 1854      696700
 1855              	.LASF32:
 1856 0103 70726F78 		.ascii	"proxTouchTh\000"
 1856      546F7563 
 1856      68546800 
 1857              	.LASF38:
 1858 010f 70726F78 		.ascii	"prox\000"
 1858      00
 1859              	.LASF71:
 1860 0114 6873696F 		.ascii	"hsiomMask\000"
 1860      6D4D6173 
 1860      6B00
 1861              	.LASF28:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccY3ebF6.s 			page 51


 1862 011e 736E7343 		.ascii	"snsClkSource\000"
 1862      6C6B536F 
 1862      75726365 
 1862      00
 1863              	.LASF93:
 1864 012b 43617053 		.ascii	"CapSense_CSDPostSingleScan\000"
 1864      656E7365 
 1864      5F435344 
 1864      506F7374 
 1864      53696E67 
 1865              	.LASF20:
 1866 0146 6E6F6973 		.ascii	"noiseTh\000"
 1866      65546800 
 1867              	.LASF40:
 1868 014e 62736C6E 		.ascii	"bsln\000"
 1868      00
 1869              	.LASF10:
 1870 0153 75696E74 		.ascii	"uint16\000"
 1870      313600
 1871              	.LASF81:
 1872 015a 70747232 		.ascii	"ptr2DebounceArr\000"
 1872      4465626F 
 1872      756E6365 
 1872      41727200 
 1873              	.LASF9:
 1874 016a 75696E74 		.ascii	"uint8\000"
 1874      3800
 1875              	.LASF110:
 1876 0170 443A5C5F 		.ascii	"D:\\_Project\\_MD\\cypress_button\\EZIIC_button.cyd"
 1876      50726F6A 
 1876      6563745C 
 1876      5F4D445C 
 1876      63797072 
 1877 019f 736E00   		.ascii	"sn\000"
 1878              	.LASF70:
 1879 01a2 70735074 		.ascii	"psPtr\000"
 1879      7200
 1880              	.LASF27:
 1881 01a8 736E7343 		.ascii	"snsClk\000"
 1881      6C6B00
 1882              	.LASF111:
 1883 01af 43617053 		.ascii	"CapSense_SsCSDPostScan\000"
 1883      656E7365 
 1883      5F537343 
 1883      5344506F 
 1883      73745363 
 1884              	.LASF35:
 1885 01c6 766F6C5F 		.ascii	"vol_down\000"
 1885      646F776E 
 1885      00
 1886              	.LASF12:
 1887 01cf 666C6F61 		.ascii	"float\000"
 1887      7400
 1888              	.LASF95:
 1889 01d5 63757253 		.ascii	"curSnsIOPtr\000"
 1889      6E73494F 
 1889      50747200 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccY3ebF6.s 			page 52


 1890              	.LASF39:
 1891 01e1 43617053 		.ascii	"CapSense_RAM_WD_LIST_STRUCT\000"
 1891      656E7365 
 1891      5F52414D 
 1891      5F57445F 
 1891      4C495354 
 1892              	.LASF61:
 1893 01fd 736E7254 		.ascii	"snrTestSensorId\000"
 1893      65737453 
 1893      656E736F 
 1893      72496400 
 1894              	.LASF31:
 1895 020d 43617053 		.ascii	"CapSense_RAM_WD_BUTTON_STRUCT\000"
 1895      656E7365 
 1895      5F52414D 
 1895      5F57445F 
 1895      42555454 
 1896              	.LASF106:
 1897 022b 43617053 		.ascii	"CapSense_SsPostAllWidgetsScan\000"
 1897      656E7365 
 1897      5F537350 
 1897      6F737441 
 1897      6C6C5769 
 1898              	.LASF14:
 1899 0249 63686172 		.ascii	"char\000"
 1899      00
 1900              	.LASF107:
 1901 024e 43617053 		.ascii	"CapSense_CSDDisconnectSns\000"
 1901      656E7365 
 1901      5F435344 
 1901      44697363 
 1901      6F6E6E65 
 1902              	.LASF4:
 1903 0268 6C6F6E67 		.ascii	"long int\000"
 1903      20696E74 
 1903      00
 1904              	.LASF75:
 1905 0271 73686966 		.ascii	"shift\000"
 1905      7400
 1906              	.LASF84:
 1907 0277 77646774 		.ascii	"wdgtType\000"
 1907      54797065 
 1907      00
 1908              	.LASF92:
 1909 0280 70747257 		.ascii	"ptrWdgt\000"
 1909      64677400 
 1910              	.LASF78:
 1911 0288 70747232 		.ascii	"ptr2WdgtRam\000"
 1911      57646774 
 1911      52616D00 
 1912              	.LASF76:
 1913 0294 43617053 		.ascii	"CapSense_FLASH_IO_STRUCT\000"
 1913      656E7365 
 1913      5F464C41 
 1913      53485F49 
 1913      4F5F5354 
 1914              	.LASF36:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccY3ebF6.s 			page 53


 1915 02ad 706C6179 		.ascii	"play_pause\000"
 1915      5F706175 
 1915      736500
 1916              	.LASF96:
 1917 02b8 43617053 		.ascii	"CapSense_dsRam\000"
 1917      656E7365 
 1917      5F647352 
 1917      616D00
 1918              	.LASF19:
 1919 02c7 66696E67 		.ascii	"fingerTh\000"
 1919      65725468 
 1919      00
 1920              	.LASF85:
 1921 02d0 6E756D43 		.ascii	"numCols\000"
 1921      6F6C7300 
 1922              	.LASF22:
 1923 02d8 68797374 		.ascii	"hysteresis\000"
 1923      65726573 
 1923      697300
 1924              	.LASF50:
 1925 02e3 74756E65 		.ascii	"tunerCmd\000"
 1925      72436D64 
 1925      00
 1926              	.LASF89:
 1927 02ec 6C6F6E67 		.ascii	"long double\000"
 1927      20646F75 
 1927      626C6500 
 1928              	.LASF54:
 1929 02f8 77646774 		.ascii	"wdgtStatus\000"
 1929      53746174 
 1929      757300
 1930              	.LASF109:
 1931 0303 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_INT.c\000"
 1931      72617465 
 1931      645F536F 
 1931      75726365 
 1931      5C50536F 
 1932              	.LASF1:
 1933 0329 756E7369 		.ascii	"unsigned char\000"
 1933      676E6564 
 1933      20636861 
 1933      7200
 1934              	.LASF98:
 1935 0337 43617053 		.ascii	"CapSense_widgetIndex\000"
 1935      656E7365 
 1935      5F776964 
 1935      67657449 
 1935      6E646578 
 1936              	.LASF16:
 1937 034c 43617053 		.ascii	"CapSense_THRESHOLD_TYPE\000"
 1937      656E7365 
 1937      5F544852 
 1937      4553484F 
 1937      4C445F54 
 1938              	.LASF104:
 1939 0364 43617053 		.ascii	"CapSense_SsCSDConnectSensorExt\000"
 1939      656E7365 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccY3ebF6.s 			page 54


 1939      5F537343 
 1939      5344436F 
 1939      6E6E6563 
 1940              	.LASF46:
 1941 0383 43617053 		.ascii	"CapSense_RAM_SNS_LIST_STRUCT\000"
 1941      656E7365 
 1941      5F52414D 
 1941      5F534E53 
 1941      5F4C4953 
 1942              	.LASF7:
 1943 03a0 6C6F6E67 		.ascii	"long long unsigned int\000"
 1943      206C6F6E 
 1943      6720756E 
 1943      7369676E 
 1943      65642069 
 1944              	.LASF82:
 1945 03b7 73746174 		.ascii	"staticConfig\000"
 1945      6963436F 
 1945      6E666967 
 1945      00
 1946              	.LASF33:
 1947 03c4 43617053 		.ascii	"CapSense_RAM_WD_PROXIMITY_STRUCT\000"
 1947      656E7365 
 1947      5F52414D 
 1947      5F57445F 
 1947      50524F58 
 1948              	.LASF8:
 1949 03e5 756E7369 		.ascii	"unsigned int\000"
 1949      676E6564 
 1949      20696E74 
 1949      00
 1950              	.LASF53:
 1951 03f2 77646774 		.ascii	"wdgtEnable\000"
 1951      456E6162 
 1951      6C6500
 1952              	.LASF15:
 1953 03fd 72656733 		.ascii	"reg32\000"
 1953      3200
 1954              	.LASF45:
 1955 0403 43617053 		.ascii	"CapSense_RAM_SNS_STRUCT\000"
 1955      656E7365 
 1955      5F52414D 
 1955      5F534E53 
 1955      5F535452 
 1956              	.LASF17:
 1957 041b 43617053 		.ascii	"CapSense_LOW_BSLN_RST_TYPE\000"
 1957      656E7365 
 1957      5F4C4F57 
 1957      5F42534C 
 1957      4E5F5253 
 1958              	.LASF52:
 1959 0436 73746174 		.ascii	"status\000"
 1959      757300
 1960              	.LASF49:
 1961 043d 6877436C 		.ascii	"hwClock\000"
 1961      6F636B00 
 1962              	.LASF62:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccY3ebF6.s 			page 55


 1963 0445 736E7254 		.ascii	"snrTestScanCounter\000"
 1963      65737453 
 1963      63616E43 
 1963      6F756E74 
 1963      657200
 1964              	.LASF18:
 1965 0458 7265736F 		.ascii	"resolution\000"
 1965      6C757469 
 1965      6F6E00
 1966              	.LASF3:
 1967 0463 73686F72 		.ascii	"short unsigned int\000"
 1967      7420756E 
 1967      7369676E 
 1967      65642069 
 1967      6E7400
 1968              	.LASF105:
 1969 0476 43617053 		.ascii	"CapSense_SsCSDStartSample\000"
 1969      656E7365 
 1969      5F537343 
 1969      53445374 
 1969      61727453 
 1970              	.LASF59:
 1971 0490 736E734C 		.ascii	"snsList\000"
 1971      69737400 
 1972              	.LASF100:
 1973 0498 43617053 		.ascii	"CapSense_requestScanAllWidget\000"
 1973      656E7365 
 1973      5F726571 
 1973      75657374 
 1973      5363616E 
 1974              	.LASF57:
 1975 04b6 6D6F6443 		.ascii	"modCsdClk\000"
 1975      7364436C 
 1975      6B00
 1976              	.LASF51:
 1977 04c0 7363616E 		.ascii	"scanCounter\000"
 1977      436F756E 
 1977      74657200 
 1978              	.LASF21:
 1979 04cc 6E4E6F69 		.ascii	"nNoiseTh\000"
 1979      73655468 
 1979      00
 1980              	.LASF66:
 1981 04d5 43617053 		.ascii	"CapSense_RAM_STRUCT\000"
 1981      656E7365 
 1981      5F52414D 
 1981      5F535452 
 1981      55435400 
 1982              	.LASF112:
 1983 04e9 43617053 		.ascii	"CapSense_SsCSDInitNextScan\000"
 1983      656E7365 
 1983      5F537343 
 1983      5344496E 
 1983      69744E65 
 1984              	.LASF11:
 1985 0504 75696E74 		.ascii	"uint32\000"
 1985      333200
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccY3ebF6.s 			page 56


 1986              	.LASF64:
 1987 050b 7363616E 		.ascii	"scanCsdISC\000"
 1987      43736449 
 1987      534300
 1988              	.LASF5:
 1989 0516 6C6F6E67 		.ascii	"long unsigned int\000"
 1989      20756E73 
 1989      69676E65 
 1989      6420696E 
 1989      7400
 1990              	.LASF13:
 1991 0528 646F7562 		.ascii	"double\000"
 1991      6C6500
 1992              	.LASF94:
 1993 052f 43617053 		.ascii	"CapSense_CSDPostMultiScan\000"
 1993      656E7365 
 1993      5F435344 
 1993      506F7374 
 1993      4D756C74 
 1994              	.LASF41:
 1995 0549 62736C6E 		.ascii	"bslnExt\000"
 1995      45787400 
 1996              	.LASF108:
 1997 0551 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1997      43313120 
 1997      352E342E 
 1997      31203230 
 1997      31363036 
 1998 0584 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 1998      20726576 
 1998      6973696F 
 1998      6E203233 
 1998      37373135 
 1999 05b7 67202D4F 		.ascii	"g -Os -ffunction-sections -ffat-lto-objects\000"
 1999      73202D66 
 1999      66756E63 
 1999      74696F6E 
 1999      2D736563 
 2000              	.LASF73:
 2001 05e3 6873696F 		.ascii	"hsiomShift\000"
 2001      6D536869 
 2001      667400
 2002              	.LASF101:
 2003 05ee 43617053 		.ascii	"CapSense_curRamSnsPtr\000"
 2003      656E7365 
 2003      5F637572 
 2003      52616D53 
 2003      6E735074 
 2004              	.LASF69:
 2005 0604 64725074 		.ascii	"drPtr\000"
 2005      7200
 2006              	.LASF72:
 2007 060a 6D61736B 		.ascii	"mask\000"
 2007      00
 2008              	.LASF43:
 2009 060f 6E656742 		.ascii	"negBslnRstCnt\000"
 2009      736C6E52 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccY3ebF6.s 			page 57


 2009      7374436E 
 2009      7400
 2010              	.LASF103:
 2011 061d 43617053 		.ascii	"CapSense_SsCSDSetUpIdacs\000"
 2011      656E7365 
 2011      5F537343 
 2011      53445365 
 2011      74557049 
 2012              	.LASF79:
 2013 0636 70747232 		.ascii	"ptr2SnsRam\000"
 2013      536E7352 
 2013      616D00
 2014              	.LASF0:
 2015 0641 7369676E 		.ascii	"signed char\000"
 2015      65642063 
 2015      68617200 
 2016              	.LASF80:
 2017 064d 70747232 		.ascii	"ptr2FltrHistory\000"
 2017      466C7472 
 2017      48697374 
 2017      6F727900 
 2018              	.LASF87:
 2019 065d 77646774 		.ascii	"wdgtArray\000"
 2019      41727261 
 2019      7900
 2020              	.LASF97:
 2021 0667 43617053 		.ascii	"CapSense_dsFlash\000"
 2021      656E7365 
 2021      5F647346 
 2021      6C617368 
 2021      00
 2022              	.LASF30:
 2023 0678 43617053 		.ascii	"CapSense_RAM_WD_BASE_STRUCT\000"
 2023      656E7365 
 2023      5F52414D 
 2023      5F57445F 
 2023      42415345 
 2024              	.LASF60:
 2025 0694 736E7254 		.ascii	"snrTestWidgetId\000"
 2025      65737457 
 2025      69646765 
 2025      74496400 
 2026              	.LASF48:
 2027 06a4 64657669 		.ascii	"deviceId\000"
 2027      63654964 
 2027      00
 2028              	.LASF102:
 2029 06ad 43617053 		.ascii	"CapSense_scanFreqIndex\000"
 2029      656E7365 
 2029      5F736361 
 2029      6E467265 
 2029      71496E64 
 2030              	.LASF77:
 2031 06c4 70747232 		.ascii	"ptr2SnsFlash\000"
 2031      536E7346 
 2031      6C617368 
 2031      00
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccY3ebF6.s 			page 58


 2032              	.LASF55:
 2033 06d1 736E7353 		.ascii	"snsStatus\000"
 2033      74617475 
 2033      7300
 2034              	.LASF99:
 2035 06db 43617053 		.ascii	"CapSense_sensorIndex\000"
 2035      656E7365 
 2035      5F73656E 
 2035      736F7249 
 2035      6E646578 
 2036              	.LASF6:
 2037 06f0 6C6F6E67 		.ascii	"long long int\000"
 2037      206C6F6E 
 2037      6720696E 
 2037      7400
 2038              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran

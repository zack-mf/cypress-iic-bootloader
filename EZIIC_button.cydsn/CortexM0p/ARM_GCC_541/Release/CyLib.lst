ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLib.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CySysClkImoStart,"ax",%progbits
  20              		.align	1
  21              		.global	CySysClkImoStart
  22              		.code	16
  23              		.thumb_func
  24              		.type	CySysClkImoStart, %function
  25              	CySysClkImoStart:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 5.80
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2018, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 2


  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  75:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  76:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  77:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim5 = 0u;
  78:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  79:Generated_Source\PSoC4/CyLib.c **** 
  80:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
  81:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  82:Generated_Source\PSoC4/CyLib.c **** 
  83:Generated_Source\PSoC4/CyLib.c **** 
  84:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  85:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  86:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  87:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 3


  88:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  89:Generated_Source\PSoC4/CyLib.c **** *
  90:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC Analog 
  91:Generated_Source\PSoC4/CyLib.c **** * Coprocessor devices, this function will also enable WCO lock if selected in 
  92:Generated_Source\PSoC4/CyLib.c **** * the Design Wide Resources tab.
  93:Generated_Source\PSoC4/CyLib.c **** *
  94:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L devices, this function will also enable USB lock if selected
  95:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
  96:Generated_Source\PSoC4/CyLib.c **** *
  97:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  98:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
  99:Generated_Source\PSoC4/CyLib.c **** {
  28              		.loc 1 99 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 100:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  33              		.loc 1 100 0
  34 0000 8021     		movs	r1, #128
  35 0002 034A     		ldr	r2, .L2
  36 0004 0906     		lsls	r1, r1, #24
  37 0006 1368     		ldr	r3, [r2]
 101:Generated_Source\PSoC4/CyLib.c **** 
 102:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 103:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 104:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 105:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 106:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 107:Generated_Source\PSoC4/CyLib.c **** 
 108:Generated_Source\PSoC4/CyLib.c **** 
 109:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 110:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 111:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 112:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 113:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 114:Generated_Source\PSoC4/CyLib.c **** 
 115:Generated_Source\PSoC4/CyLib.c **** }
  38              		.loc 1 115 0
  39              		@ sp needed
 100:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  40              		.loc 1 100 0
  41 0008 0B43     		orrs	r3, r1
  42 000a 1360     		str	r3, [r2]
  43              		.loc 1 115 0
  44 000c 7047     		bx	lr
  45              	.L3:
  46 000e C046     		.align	2
  47              	.L2:
  48 0010 30000340 		.word	1073938480
  49              		.cfi_endproc
  50              	.LFE1:
  51              		.size	CySysClkImoStart, .-CySysClkImoStart
  52              		.section	.text.CySysClkImoDisableWcoLock,"ax",%progbits
  53              		.align	1
  54              		.global	CySysClkImoDisableWcoLock
  55              		.code	16
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 4


  56              		.thumb_func
  57              		.type	CySysClkImoDisableWcoLock, %function
  58              	CySysClkImoDisableWcoLock:
  59              	.LFB4:
 116:Generated_Source\PSoC4/CyLib.c **** 
 117:Generated_Source\PSoC4/CyLib.c **** 
 118:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 119:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 120:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 121:Generated_Source\PSoC4/CyLib.c **** *
 122:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 123:Generated_Source\PSoC4/CyLib.c **** *
 124:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4200L / PSoC 4000S / PSoC 4100S / 
 125:Generated_Source\PSoC4/CyLib.c **** * PSoC Analog Coprocessor devices, this function will also disable WCO lock.
 126:Generated_Source\PSoC4/CyLib.c **** *
 127:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 128:Generated_Source\PSoC4/CyLib.c **** *
 129:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 130:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 131:Generated_Source\PSoC4/CyLib.c **** {
 132:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 133:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 134:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 135:Generated_Source\PSoC4/CyLib.c **** 
 136:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 137:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 138:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 139:Generated_Source\PSoC4/CyLib.c **** 
 140:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
 141:Generated_Source\PSoC4/CyLib.c **** }
 142:Generated_Source\PSoC4/CyLib.c **** 
 143:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 144:Generated_Source\PSoC4/CyLib.c **** 
 145:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 146:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 147:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 148:Generated_Source\PSoC4/CyLib.c ****     *
 149:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 150:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 151:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 152:Generated_Source\PSoC4/CyLib.c ****     *
 153:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 154:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 155:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 156:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 157:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 158:Generated_Source\PSoC4/CyLib.c ****     *
 159:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 160:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 161:Generated_Source\PSoC4/CyLib.c ****     *
 162:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 163:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC Analog Coprocessor / PSoC 4200L.
 164:Generated_Source\PSoC4/CyLib.c ****     *
 165:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 166:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 167:Generated_Source\PSoC4/CyLib.c ****     {
 168:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 5


 169:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 170:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 171:Generated_Source\PSoC4/CyLib.c **** 
 172:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 173:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 174:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 175:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 176:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 177:Generated_Source\PSoC4/CyLib.c **** 
 178:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 179:Generated_Source\PSoC4/CyLib.c ****         {
 180:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 181:Generated_Source\PSoC4/CyLib.c **** 
 182:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 183:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 184:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 185:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 186:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 187:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 188:Generated_Source\PSoC4/CyLib.c **** 
 189:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 190:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 191:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 192:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 193:Generated_Source\PSoC4/CyLib.c ****                 {
 194:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 195:Generated_Source\PSoC4/CyLib.c ****                     {
 196:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 197:Generated_Source\PSoC4/CyLib.c ****                         break;
 198:Generated_Source\PSoC4/CyLib.c ****                     }
 199:Generated_Source\PSoC4/CyLib.c ****                 }
 200:Generated_Source\PSoC4/CyLib.c ****             #else
 201:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 202:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 203:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 204:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 205:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 206:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 207:Generated_Source\PSoC4/CyLib.c ****                 #else
 208:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 209:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 210:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 211:Generated_Source\PSoC4/CyLib.c **** 
 212:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 213:Generated_Source\PSoC4/CyLib.c ****             
 214:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = 0;
 215:Generated_Source\PSoC4/CyLib.c ****             
 216:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 217:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 218:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 219:Generated_Source\PSoC4/CyLib.c ****                 {
 220:Generated_Source\PSoC4/CyLib.c **** 			         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 221:Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 222:Generated_Source\PSoC4/CyLib.c ****                 }
 223:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 224:Generated_Source\PSoC4/CyLib.c **** 
 225:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 6


 226:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 227:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 228:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 229:Generated_Source\PSoC4/CyLib.c **** 
 230:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 231:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 232:Generated_Source\PSoC4/CyLib.c **** 
 233:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 234:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 235:Generated_Source\PSoC4/CyLib.c **** 
 236:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 237:Generated_Source\PSoC4/CyLib.c ****             
 238:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 239:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 240:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 241:Generated_Source\PSoC4/CyLib.c **** 
 242:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 243:Generated_Source\PSoC4/CyLib.c ****             
 244:Generated_Source\PSoC4/CyLib.c ****             while (lfLimit < (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX - CY_SYS_CLK_WCO_CONFIG_DPLL_
 245:Generated_Source\PSoC4/CyLib.c ****             {
 246:Generated_Source\PSoC4/CyLib.c ****                 CyDelay(CY_SYS_CLK_WCO_DPLL_TIMEOUT_MS);
 247:Generated_Source\PSoC4/CyLib.c ****                 lfLimit += CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_STEP;
 248:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT
 249:Generated_Source\PSoC4/CyLib.c ****             }
 250:Generated_Source\PSoC4/CyLib.c **** 
 251:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_DPLL_TIMEOUT_MS);
 252:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << 
 253:Generated_Source\PSoC4/CyLib.c ****                                                  CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT));
 254:Generated_Source\PSoC4/CyLib.c **** 
 255:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 256:Generated_Source\PSoC4/CyLib.c **** 
 257:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 258:Generated_Source\PSoC4/CyLib.c ****         }
 259:Generated_Source\PSoC4/CyLib.c ****     }
 260:Generated_Source\PSoC4/CyLib.c **** 
 261:Generated_Source\PSoC4/CyLib.c **** 
 262:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 263:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 264:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 265:Generated_Source\PSoC4/CyLib.c ****     *
 266:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 267:Generated_Source\PSoC4/CyLib.c ****     *
 268:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 269:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 270:Generated_Source\PSoC4/CyLib.c ****     *
 271:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 272:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC Analog Coprocessor / PSoC 4200L.
 273:Generated_Source\PSoC4/CyLib.c ****     *
 274:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 275:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 276:Generated_Source\PSoC4/CyLib.c ****     {
  60              		.loc 1 276 0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 0
  63              		@ frame_needed = 0, uses_anonymous_args = 0
 277:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 278:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 7


 279:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 280:Generated_Source\PSoC4/CyLib.c **** 
 281:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 282:Generated_Source\PSoC4/CyLib.c ****         
 283:Generated_Source\PSoC4/CyLib.c ****         /* Get current IMO frequency based on the register value */
 284:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 285:Generated_Source\PSoC4/CyLib.c ****             freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 286:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 287:Generated_Source\PSoC4/CyLib.c ****             {
 288:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 289:Generated_Source\PSoC4/CyLib.c ****                 {
 290:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 291:Generated_Source\PSoC4/CyLib.c ****                     break;
 292:Generated_Source\PSoC4/CyLib.c ****                 }
 293:Generated_Source\PSoC4/CyLib.c ****             }
 294:Generated_Source\PSoC4/CyLib.c ****         #else
 295:Generated_Source\PSoC4/CyLib.c ****             /* Calculate frequency by shifting register field value and adding constant. */
 296:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSLT)
 297:Generated_Source\PSoC4/CyLib.c ****                 freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_FRE
 298:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_MHZ
 299:Generated_Source\PSoC4/CyLib.c ****                                   ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT) & 
 300:Generated_Source\PSoC4/CyLib.c ****                                    (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 301:Generated_Source\PSoC4/CyLib.c ****             #else
 302:Generated_Source\PSoC4/CyLib.c ****                 freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_FREQ
 303:Generated_Source\PSoC4/CyLib.c ****                                    CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 304:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSLT) */
 305:Generated_Source\PSoC4/CyLib.c **** 
 306:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 307:Generated_Source\PSoC4/CyLib.c **** 
 308:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
  64              		.loc 1 308 0
  65 0000 0B48     		ldr	r0, .L5
 299:Generated_Source\PSoC4/CyLib.c ****                                    (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
  66              		.loc 1 299 0
  67 0002 0C4A     		ldr	r2, .L5+4
 297:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_MHZ
  68              		.loc 1 297 0
  69 0004 0C4B     		ldr	r3, .L5+8
 276:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
  70              		.loc 1 276 0
  71 0006 10B5     		push	{r4, lr}
  72              		.cfi_def_cfa_offset 8
  73              		.cfi_offset 4, -8
  74              		.cfi_offset 14, -4
 297:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_MHZ
  75              		.loc 1 297 0
  76 0008 1B68     		ldr	r3, [r3]
 299:Generated_Source\PSoC4/CyLib.c ****                                    (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
  77              		.loc 1 299 0
  78 000a 1168     		ldr	r1, [r2]
  79              	.LVL0:
  80              		.loc 1 308 0
  81 000c 0468     		ldr	r4, [r0]
  82 000e 0B4A     		ldr	r2, .L5+12
 309:Generated_Source\PSoC4/CyLib.c ****         
 310:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSLT)
 311:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 8


  83              		.loc 1 311 0
  84 0010 9B00     		lsls	r3, r3, #2
  85              	.LVL1:
 308:Generated_Source\PSoC4/CyLib.c ****         
  86              		.loc 1 308 0
  87 0012 2240     		ands	r2, r4
  88 0014 0260     		str	r2, [r0]
  89              		.loc 1 311 0
  90 0016 1C22     		movs	r2, #28
  91 0018 1340     		ands	r3, r2
  92 001a 0A07     		lsls	r2, r1, #28
  93 001c 920F     		lsrs	r2, r2, #30
  94 001e 1833     		adds	r3, r3, #24
  95 0020 D340     		lsrs	r3, r3, r2
  96 0022 074A     		ldr	r2, .L5+16
 312:Generated_Source\PSoC4/CyLib.c ****         #else
 313:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 314:Generated_Source\PSoC4/CyLib.c ****         #endif
 315:Generated_Source\PSoC4/CyLib.c ****     }
  97              		.loc 1 315 0
  98              		@ sp needed
 311:Generated_Source\PSoC4/CyLib.c ****         #else
  99              		.loc 1 311 0
 100 0024 9B18     		adds	r3, r3, r2
 101 0026 1B78     		ldrb	r3, [r3]
 102 0028 064A     		ldr	r2, .L5+20
 103 002a DBB2     		uxtb	r3, r3
 104 002c 1360     		str	r3, [r2]
 105              		.loc 1 315 0
 106 002e 10BD     		pop	{r4, pc}
 107              	.L6:
 108              		.align	2
 109              	.L5:
 110 0030 00000740 		.word	1074200576
 111 0034 28000340 		.word	1073938472
 112 0038 080F0340 		.word	1073942280
 113 003c FFFFFFBF 		.word	-1073741825
 114 0040 CDF1FF0F 		.word	268431821
 115 0044 0C0F0340 		.word	1073942284
 116              		.cfi_endproc
 117              	.LFE4:
 118              		.size	CySysClkImoDisableWcoLock, .-CySysClkImoDisableWcoLock
 119              		.section	.text.CySysClkImoStop,"ax",%progbits
 120              		.align	1
 121              		.global	CySysClkImoStop
 122              		.code	16
 123              		.thumb_func
 124              		.type	CySysClkImoStop, %function
 125              	CySysClkImoStop:
 126              	.LFB2:
 131:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 127              		.loc 1 131 0
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 0, uses_anonymous_args = 0
 131 0000 10B5     		push	{r4, lr}
 132              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 9


 133              		.cfi_offset 4, -8
 134              		.cfi_offset 14, -4
 133:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 135              		.loc 1 133 0
 136 0002 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
 137              	.LVL2:
 140:Generated_Source\PSoC4/CyLib.c **** }
 138              		.loc 1 140 0
 139 0006 034A     		ldr	r2, .L8
 141:Generated_Source\PSoC4/CyLib.c **** 
 140              		.loc 1 141 0
 141              		@ sp needed
 140:Generated_Source\PSoC4/CyLib.c **** }
 142              		.loc 1 140 0
 143 0008 1368     		ldr	r3, [r2]
 144 000a 5B00     		lsls	r3, r3, #1
 145 000c 5B08     		lsrs	r3, r3, #1
 146 000e 1360     		str	r3, [r2]
 141:Generated_Source\PSoC4/CyLib.c **** 
 147              		.loc 1 141 0
 148 0010 10BD     		pop	{r4, pc}
 149              	.L9:
 150 0012 C046     		.align	2
 151              	.L8:
 152 0014 30000340 		.word	1073938480
 153              		.cfi_endproc
 154              	.LFE2:
 155              		.size	CySysClkImoStop, .-CySysClkImoStop
 156              		.section	.text.CySysClkImoGetWcoLock,"ax",%progbits
 157              		.align	1
 158              		.global	CySysClkImoGetWcoLock
 159              		.code	16
 160              		.thumb_func
 161              		.type	CySysClkImoGetWcoLock, %function
 162              	CySysClkImoGetWcoLock:
 163              	.LFB5:
 316:Generated_Source\PSoC4/CyLib.c **** 
 317:Generated_Source\PSoC4/CyLib.c **** 
 318:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 319:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 320:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 321:Generated_Source\PSoC4/CyLib.c ****     *
 322:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 323:Generated_Source\PSoC4/CyLib.c ****     *
 324:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 325:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC Analog Coprocessor / PSoC 4200L.
 326:Generated_Source\PSoC4/CyLib.c ****     *
 327:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 328:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 329:Generated_Source\PSoC4/CyLib.c ****     *
 330:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 331:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 332:Generated_Source\PSoC4/CyLib.c ****     {
 164              		.loc 1 332 0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 0
 167              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 10


 168              		@ link register save eliminated.
 333:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 169              		.loc 1 333 0
 170 0000 024B     		ldr	r3, .L11
 334:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 335:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 336:Generated_Source\PSoC4/CyLib.c ****     }
 171              		.loc 1 336 0
 172              		@ sp needed
 333:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 173              		.loc 1 333 0
 174 0002 1868     		ldr	r0, [r3]
 175 0004 4000     		lsls	r0, r0, #1
 176 0006 C00F     		lsrs	r0, r0, #31
 177              		.loc 1 336 0
 178 0008 7047     		bx	lr
 179              	.L12:
 180 000a C046     		.align	2
 181              	.L11:
 182 000c 00000740 		.word	1074200576
 183              		.cfi_endproc
 184              	.LFE5:
 185              		.size	CySysClkImoGetWcoLock, .-CySysClkImoGetWcoLock
 186              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
 187              		.align	1
 188              		.global	CySysClkWriteHfclkDirect
 189              		.code	16
 190              		.thumb_func
 191              		.type	CySysClkWriteHfclkDirect, %function
 192              	CySysClkWriteHfclkDirect:
 193              	.LFB6:
 337:Generated_Source\PSoC4/CyLib.c **** 
 338:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 339:Generated_Source\PSoC4/CyLib.c **** 
 340:Generated_Source\PSoC4/CyLib.c **** 
 341:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 342:Generated_Source\PSoC4/CyLib.c **** 
 343:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 344:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 345:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 346:Generated_Source\PSoC4/CyLib.c ****     *
 347:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 348:Generated_Source\PSoC4/CyLib.c ****     *
 349:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 350:Generated_Source\PSoC4/CyLib.c ****     *
 351:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 352:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 353:Generated_Source\PSoC4/CyLib.c ****     *
 354:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 355:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 356:Generated_Source\PSoC4/CyLib.c ****     *
 357:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 358:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 359:Generated_Source\PSoC4/CyLib.c ****     {
 360:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 361:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 362:Generated_Source\PSoC4/CyLib.c ****             
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 11


 363:Generated_Source\PSoC4/CyLib.c ****             /* Check for new trim algorithm */
 364:Generated_Source\PSoC4/CyLib.c ****             uint32 CySysClkUsbCuSortTrim = ((CY_SFLASH_S1_TESTPGM_OLD_REV < (CY_SFLASH_S1_TESTPGM_R
 365:Generated_Source\PSoC4/CyLib.c ****                                                                             CY_SFLASH_S1_TESTPGM_RE
 366:Generated_Source\PSoC4/CyLib.c **** 
 367:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 368:Generated_Source\PSoC4/CyLib.c ****             uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 369:Generated_Source\PSoC4/CyLib.c **** 
 370:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 371:Generated_Source\PSoC4/CyLib.c ****             {
 372:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 373:Generated_Source\PSoC4/CyLib.c ****                 {
 374:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 375:Generated_Source\PSoC4/CyLib.c ****                     break;
 376:Generated_Source\PSoC4/CyLib.c ****                 }
 377:Generated_Source\PSoC4/CyLib.c ****             }
 378:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 379:Generated_Source\PSoC4/CyLib.c ****         
 380:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 381:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 382:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 383:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 384:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 385:Generated_Source\PSoC4/CyLib.c **** 
 386:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 387:Generated_Source\PSoC4/CyLib.c ****            
 388:Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 389:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG;
 390:Generated_Source\PSoC4/CyLib.c ****             
 391:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkUsbCuSortTrim)
 392:Generated_Source\PSoC4/CyLib.c ****             {
 393:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoTrim5 = CY_PWR_BG_TRIM5_REG;
 394:Generated_Source\PSoC4/CyLib.c ****                 
 395:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM4_REG = (CySysClkImoTrim4 & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_
 396:Generated_Source\PSoC4/CyLib.c ****                                             CY_SFLASH_USBMODE_IMO_GAIN_TRIM_REG;
 397:Generated_Source\PSoC4/CyLib.c ****                 CY_PWR_BG_TRIM5_REG = CY_SFLASH_USBMODE_IMO_TEMPCO_REG;
 398:Generated_Source\PSoC4/CyLib.c ****                 
 399:Generated_Source\PSoC4/CyLib.c ****             }
 400:Generated_Source\PSoC4/CyLib.c ****             else
 401:Generated_Source\PSoC4/CyLib.c ****             {
 402:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM4_REG = (CySysClkImoTrim4 & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_
 403:Generated_Source\PSoC4/CyLib.c ****                                             CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 404:Generated_Source\PSoC4/CyLib.c **** 
 405:Generated_Source\PSoC4/CyLib.c ****             }
 406:Generated_Source\PSoC4/CyLib.c **** 
 407:Generated_Source\PSoC4/CyLib.c ****             if (48u == freq)
 408:Generated_Source\PSoC4/CyLib.c ****             {
 409:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (0u != CySysClkUsbCuSortTrim) ? 
 410:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_CU_IMO_TRIM_USBMODE_48_REG :
 411:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 412:Generated_Source\PSoC4/CyLib.c ****             }
 413:Generated_Source\PSoC4/CyLib.c ****             else if (24u == freq)
 414:Generated_Source\PSoC4/CyLib.c ****             {
 415:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (0u != CySysClkUsbCuSortTrim) ? 
 416:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_CU_IMO_TRIM_USBMODE_24_REG :
 417:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 418:Generated_Source\PSoC4/CyLib.c ****             }
 419:Generated_Source\PSoC4/CyLib.c ****             else
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 12


 420:Generated_Source\PSoC4/CyLib.c ****             {
 421:Generated_Source\PSoC4/CyLib.c ****                 /* Do nothing */
 422:Generated_Source\PSoC4/CyLib.c ****             }
 423:Generated_Source\PSoC4/CyLib.c ****             
 424:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 425:Generated_Source\PSoC4/CyLib.c **** 
 426:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 427:Generated_Source\PSoC4/CyLib.c ****     }
 428:Generated_Source\PSoC4/CyLib.c **** 
 429:Generated_Source\PSoC4/CyLib.c **** 
 430:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 431:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 432:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 433:Generated_Source\PSoC4/CyLib.c ****     *
 434:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 435:Generated_Source\PSoC4/CyLib.c ****     *
 436:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 437:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 438:Generated_Source\PSoC4/CyLib.c ****     *
 439:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 440:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 441:Generated_Source\PSoC4/CyLib.c ****     *
 442:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 443:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 444:Generated_Source\PSoC4/CyLib.c ****     {
 445:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 446:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 447:Generated_Source\PSoC4/CyLib.c ****             
 448:Generated_Source\PSoC4/CyLib.c ****             /* Check for new trim algorithm */
 449:Generated_Source\PSoC4/CyLib.c ****             uint32 CySysClkUsbCuSortTrim = ((CY_SFLASH_S1_TESTPGM_OLD_REV < (CY_SFLASH_S1_TESTPGM_R
 450:Generated_Source\PSoC4/CyLib.c ****                                                                             CY_SFLASH_S1_TESTPGM_RE
 451:Generated_Source\PSoC4/CyLib.c **** 
 452:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 453:Generated_Source\PSoC4/CyLib.c ****             uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;;
 454:Generated_Source\PSoC4/CyLib.c **** 
 455:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 456:Generated_Source\PSoC4/CyLib.c ****             {
 457:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 458:Generated_Source\PSoC4/CyLib.c ****                 {
 459:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 460:Generated_Source\PSoC4/CyLib.c ****                     break;
 461:Generated_Source\PSoC4/CyLib.c ****                 }
 462:Generated_Source\PSoC4/CyLib.c ****             }           
 463:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 464:Generated_Source\PSoC4/CyLib.c ****         
 465:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 466:Generated_Source\PSoC4/CyLib.c **** 
 467:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 468:Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 469:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = ((CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_
 470:Generated_Source\PSoC4/CyLib.c ****                                         (CySysClkImoTrim4 & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK));
 471:Generated_Source\PSoC4/CyLib.c **** 
 472:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkUsbCuSortTrim)
 473:Generated_Source\PSoC4/CyLib.c ****             {
 474:Generated_Source\PSoC4/CyLib.c ****                 CY_PWR_BG_TRIM5_REG = CySysClkImoTrim5;
 475:Generated_Source\PSoC4/CyLib.c ****             }
 476:Generated_Source\PSoC4/CyLib.c ****             
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 13


 477:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 478:Generated_Source\PSoC4/CyLib.c ****             
 479:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 480:Generated_Source\PSoC4/CyLib.c ****     }
 481:Generated_Source\PSoC4/CyLib.c **** 
 482:Generated_Source\PSoC4/CyLib.c **** 
 483:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 484:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 485:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 486:Generated_Source\PSoC4/CyLib.c ****     *
 487:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 488:Generated_Source\PSoC4/CyLib.c ****     *
 489:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 490:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 491:Generated_Source\PSoC4/CyLib.c ****     *
 492:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 493:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 494:Generated_Source\PSoC4/CyLib.c ****     *
 495:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 496:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 497:Generated_Source\PSoC4/CyLib.c ****     {
 498:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 499:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 500:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 501:Generated_Source\PSoC4/CyLib.c ****     }
 502:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 503:Generated_Source\PSoC4/CyLib.c **** 
 504:Generated_Source\PSoC4/CyLib.c **** 
 505:Generated_Source\PSoC4/CyLib.c **** 
 506:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 507:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 508:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 509:Generated_Source\PSoC4/CyLib.c **** *
 510:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 511:Generated_Source\PSoC4/CyLib.c **** *
 512:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 513:Generated_Source\PSoC4/CyLib.c **** *
 514:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 515:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 516:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 517:Generated_Source\PSoC4/CyLib.c **** *
 518:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 519:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 520:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 521:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 522:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 523:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 524:Generated_Source\PSoC4/CyLib.c **** *
 525:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 526:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 527:Generated_Source\PSoC4/CyLib.c **** *
 528:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 529:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 530:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 531:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 532:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L /
 533:Generated_Source\PSoC4/CyLib.c **** *                          4100S with ECO.
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 14


 534:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L /
 535:Generated_Source\PSoC4/CyLib.c **** *                          4100S with PLL.
 536:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 537:Generated_Source\PSoC4/CyLib.c **** *
 538:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 539:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 540:Generated_Source\PSoC4/CyLib.c **** {
 194              		.loc 1 540 0
 195              		.cfi_startproc
 196              		@ args = 0, pretend = 0, frame = 0
 197              		@ frame_needed = 0, uses_anonymous_args = 0
 198              	.LVL3:
 199 0000 10B5     		push	{r4, lr}
 200              		.cfi_def_cfa_offset 8
 201              		.cfi_offset 4, -8
 202              		.cfi_offset 14, -4
 203              		.loc 1 540 0
 204 0002 0400     		movs	r4, r0
 541:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 542:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 543:Generated_Source\PSoC4/CyLib.c ****     
 544:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 545:Generated_Source\PSoC4/CyLib.c ****         uint8 i = 0u;
 546:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 547:Generated_Source\PSoC4/CyLib.c **** 
 548:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 205              		.loc 1 548 0
 206 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 207              	.LVL4:
 549:Generated_Source\PSoC4/CyLib.c **** 
 550:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSLT && CY_IP_PLL)
 551:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_ECO == clkSelect))
 552:Generated_Source\PSoC4/CyLib.c ****     {
 553:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_CLK_SELECT_REG & ~CY_SYS_CLK_SELECT_DIRECT_SEL_MASK;
 554:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= CY_SYS_CLK_HFCLK_IMO;
 555:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = tmpReg;        
 556:Generated_Source\PSoC4/CyLib.c ****         
 557:Generated_Source\PSoC4/CyLib.c ****         /* SRSSLT block does not have registers to select PLL. It is part of EXCO */ 
 558:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_ECO_CLK_SELECT_REG & ~CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK;
 559:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= ((clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_PLL_MASK) >> CY_SYS_CLK_SELECT_HFCLK_PL
 560:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_ECO_CLK_SELECT_REG = tmpReg;
 561:Generated_Source\PSoC4/CyLib.c ****         
 562:Generated_Source\PSoC4/CyLib.c ****         /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG */
 563:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
 564:Generated_Source\PSoC4/CyLib.c ****         
 565:Generated_Source\PSoC4/CyLib.c ****         for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
 566:Generated_Source\PSoC4/CyLib.c ****         {
 567:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 568:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 569:Generated_Source\PSoC4/CyLib.c ****         }
 570:Generated_Source\PSoC4/CyLib.c ****         
 571:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;    
 572:Generated_Source\PSoC4/CyLib.c ****     }
 573:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 574:Generated_Source\PSoC4/CyLib.c **** 
 575:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 208              		.loc 1 575 0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 15


 209 0008 0323     		movs	r3, #3
 210 000a 0449     		ldr	r1, .L14
 576:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 577:Generated_Source\PSoC4/CyLib.c **** 
 578:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 579:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 580:Generated_Source\PSoC4/CyLib.c ****     {
 581:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 582:Generated_Source\PSoC4/CyLib.c ****     }
 583:Generated_Source\PSoC4/CyLib.c ****     else
 584:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 585:Generated_Source\PSoC4/CyLib.c ****     {
 586:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 587:Generated_Source\PSoC4/CyLib.c ****     }   
 588:Generated_Source\PSoC4/CyLib.c ****     
 589:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 590:Generated_Source\PSoC4/CyLib.c ****     
 591:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 592:Generated_Source\PSoC4/CyLib.c **** }
 211              		.loc 1 592 0
 212              		@ sp needed
 575:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 213              		.loc 1 575 0
 214 000c 0A68     		ldr	r2, [r1]
 215 000e 9A43     		bics	r2, r3
 216              	.LVL5:
 586:Generated_Source\PSoC4/CyLib.c ****     }   
 217              		.loc 1 586 0
 218 0010 2340     		ands	r3, r4
 219 0012 1343     		orrs	r3, r2
 220              	.LVL6:
 589:Generated_Source\PSoC4/CyLib.c ****     
 221              		.loc 1 589 0
 222 0014 0B60     		str	r3, [r1]
 591:Generated_Source\PSoC4/CyLib.c **** }
 223              		.loc 1 591 0
 224 0016 FFF7FEFF 		bl	CyExitCriticalSection
 225              	.LVL7:
 226              	.LVL8:
 227              		.loc 1 592 0
 228 001a 10BD     		pop	{r4, pc}
 229              	.L15:
 230              		.align	2
 231              	.L14:
 232 001c 28000340 		.word	1073938472
 233              		.cfi_endproc
 234              	.LFE6:
 235              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 236              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 237              		.align	1
 238              		.global	CySysEnablePumpClock
 239              		.code	16
 240              		.thumb_func
 241              		.type	CySysEnablePumpClock, %function
 242              	CySysEnablePumpClock:
 243              	.LFB7:
 593:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 16


 594:Generated_Source\PSoC4/CyLib.c **** 
 595:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 596:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 597:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 598:Generated_Source\PSoC4/CyLib.c **** *
 599:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 600:Generated_Source\PSoC4/CyLib.c **** *
 601:Generated_Source\PSoC4/CyLib.c **** * \param enable  
 602:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 603:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of 
 604:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 605:Generated_Source\PSoC4/CyLib.c **** *
 606:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 607:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation 
 608:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 609:Generated_Source\PSoC4/CyLib.c **** *
 610:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 611:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 612:Generated_Source\PSoC4/CyLib.c **** {
 244              		.loc 1 612 0
 245              		.cfi_startproc
 246              		@ args = 0, pretend = 0, frame = 0
 247              		@ frame_needed = 0, uses_anonymous_args = 0
 248              	.LVL9:
 249 0000 10B5     		push	{r4, lr}
 250              		.cfi_def_cfa_offset 8
 251              		.cfi_offset 4, -8
 252              		.cfi_offset 14, -4
 253 0002 094B     		ldr	r3, .L21
 254 0004 094C     		ldr	r4, .L21+4
 613:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 614:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 615:Generated_Source\PSoC4/CyLib.c ****         {
 616:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 617:Generated_Source\PSoC4/CyLib.c ****         }
 618:Generated_Source\PSoC4/CyLib.c ****         else
 619:Generated_Source\PSoC4/CyLib.c ****         {
 620:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 621:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 622:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 623:Generated_Source\PSoC4/CyLib.c ****         }
 624:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 625:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 255              		.loc 1 625 0
 256 0006 C207     		lsls	r2, r0, #31
 257 0008 04D5     		bpl	.L17
 626:Generated_Source\PSoC4/CyLib.c ****         {
 627:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 258              		.loc 1 627 0
 259 000a 2268     		ldr	r2, [r4]
 260 000c 1968     		ldr	r1, [r3]
 261 000e 1201     		lsls	r2, r2, #4
 262 0010 0A43     		orrs	r2, r1
 263 0012 06E0     		b	.L19
 264              	.L17:
 628:Generated_Source\PSoC4/CyLib.c ****         }
 629:Generated_Source\PSoC4/CyLib.c ****         else
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 17


 630:Generated_Source\PSoC4/CyLib.c ****         {
 631:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & 
 632:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 633:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 265              		.loc 1 633 0
 266 0014 3021     		movs	r1, #48
 631:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 267              		.loc 1 631 0
 268 0016 1A68     		ldr	r2, [r3]
 269 0018 9206     		lsls	r2, r2, #26
 270 001a 920F     		lsrs	r2, r2, #30
 271 001c 2260     		str	r2, [r4]
 272              		.loc 1 633 0
 273 001e 1A68     		ldr	r2, [r3]
 274 0020 8A43     		bics	r2, r1
 275              	.L19:
 276 0022 1A60     		str	r2, [r3]
 634:Generated_Source\PSoC4/CyLib.c ****         }
 635:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 636:Generated_Source\PSoC4/CyLib.c **** }
 277              		.loc 1 636 0
 278              		@ sp needed
 279 0024 10BD     		pop	{r4, pc}
 280              	.L22:
 281 0026 C046     		.align	2
 282              	.L21:
 283 0028 28000340 		.word	1073938472
 284 002c 00000000 		.word	.LANCHOR0
 285              		.cfi_endproc
 286              	.LFE7:
 287              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 288              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 289              		.align	1
 290              		.global	CySysClkGetSysclkSource
 291              		.code	16
 292              		.thumb_func
 293              		.type	CySysClkGetSysclkSource, %function
 294              	CySysClkGetSysclkSource:
 295              	.LFB8:
 637:Generated_Source\PSoC4/CyLib.c **** 
 638:Generated_Source\PSoC4/CyLib.c **** 
 639:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 640:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 641:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 642:Generated_Source\PSoC4/CyLib.c **** *
 643:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 644:Generated_Source\PSoC4/CyLib.c **** *
 645:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 646:Generated_Source\PSoC4/CyLib.c **** *
 647:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 648:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 649:Generated_Source\PSoC4/CyLib.c **** {
 296              		.loc 1 649 0
 297              		.cfi_startproc
 298              		@ args = 0, pretend = 0, frame = 0
 299              		@ frame_needed = 0, uses_anonymous_args = 0
 300 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 18


 301              		.cfi_def_cfa_offset 8
 302              		.cfi_offset 4, -8
 303              		.cfi_offset 14, -4
 650:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 651:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 652:Generated_Source\PSoC4/CyLib.c **** 
 653:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 304              		.loc 1 653 0
 305 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 306              	.LVL10:
 654:Generated_Source\PSoC4/CyLib.c **** 
 655:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 656:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 657:Generated_Source\PSoC4/CyLib.c ****     {
 658:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 659:Generated_Source\PSoC4/CyLib.c ****     }
 660:Generated_Source\PSoC4/CyLib.c ****     else
 661:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 662:Generated_Source\PSoC4/CyLib.c ****     {
 663:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 307              		.loc 1 663 0
 308 0006 034B     		ldr	r3, .L24
 664:Generated_Source\PSoC4/CyLib.c **** 
 665:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 666:Generated_Source\PSoC4/CyLib.c ****         sysclkSource |= (((uint32)(CY_SYS_ECO_CLK_SELECT_REG & CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK))
 667:Generated_Source\PSoC4/CyLib.c ****                          CY_SYS_CLK_SELECT_HFCLK_PLL_SHIFT);
 668:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 669:Generated_Source\PSoC4/CyLib.c ****         
 670:Generated_Source\PSoC4/CyLib.c ****     }
 671:Generated_Source\PSoC4/CyLib.c **** 
 672:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 673:Generated_Source\PSoC4/CyLib.c **** 
 674:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 675:Generated_Source\PSoC4/CyLib.c **** }
 309              		.loc 1 675 0
 310              		@ sp needed
 663:Generated_Source\PSoC4/CyLib.c **** 
 311              		.loc 1 663 0
 312 0008 1C68     		ldr	r4, [r3]
 313              	.LVL11:
 672:Generated_Source\PSoC4/CyLib.c **** 
 314              		.loc 1 672 0
 315 000a FFF7FEFF 		bl	CyExitCriticalSection
 316              	.LVL12:
 674:Generated_Source\PSoC4/CyLib.c **** }
 317              		.loc 1 674 0
 318 000e 0320     		movs	r0, #3
 319 0010 2040     		ands	r0, r4
 320              	.LVL13:
 321              		.loc 1 675 0
 322 0012 10BD     		pop	{r4, pc}
 323              	.L25:
 324              		.align	2
 325              	.L24:
 326 0014 28000340 		.word	1073938472
 327              		.cfi_endproc
 328              	.LFE8:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 19


 329              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 330              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 331              		.align	1
 332              		.global	CySysClkWriteSysclkDiv
 333              		.code	16
 334              		.thumb_func
 335              		.type	CySysClkWriteSysclkDiv, %function
 336              	CySysClkWriteSysclkDiv:
 337              	.LFB9:
 676:Generated_Source\PSoC4/CyLib.c **** 
 677:Generated_Source\PSoC4/CyLib.c **** 
 678:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 679:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 680:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 681:Generated_Source\PSoC4/CyLib.c **** *
 682:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 683:Generated_Source\PSoC4/CyLib.c **** *
 684:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 685:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 686:Generated_Source\PSoC4/CyLib.c **** *
 687:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 688:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 689:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 690:Generated_Source\PSoC4/CyLib.c **** *
 691:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 692:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 693:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 694:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 695:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 696:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 697:Generated_Source\PSoC4/CyLib.c **** *
 698:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 699:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 700:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 701:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 702:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 703:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 704:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 705:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 706:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 707:Generated_Source\PSoC4/CyLib.c **** *
 708:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 709:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 710:Generated_Source\PSoC4/CyLib.c **** {
 338              		.loc 1 710 0
 339              		.cfi_startproc
 340              		@ args = 0, pretend = 0, frame = 0
 341              		@ frame_needed = 0, uses_anonymous_args = 0
 342              	.LVL14:
 343 0000 70B5     		push	{r4, r5, r6, lr}
 344              		.cfi_def_cfa_offset 16
 345              		.cfi_offset 4, -16
 346              		.cfi_offset 5, -12
 347              		.cfi_offset 6, -8
 348              		.cfi_offset 14, -4
 349              		.loc 1 710 0
 350 0002 0400     		movs	r4, r0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 20


 711:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 712:Generated_Source\PSoC4/CyLib.c **** 
 713:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 351              		.loc 1 713 0
 352 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 353              	.LVL15:
 714:Generated_Source\PSoC4/CyLib.c **** 
 715:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 716:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 354              		.loc 1 716 0
 355 0008 FF21     		movs	r1, #255
 717:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 356              		.loc 1 717 0
 357 000a 054D     		ldr	r5, .L27
 716:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 358              		.loc 1 716 0
 359 000c A301     		lsls	r3, r4, #6
 360              		.loc 1 717 0
 361 000e 2A68     		ldr	r2, [r5]
 716:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 362              		.loc 1 716 0
 363 0010 0B40     		ands	r3, r1
 364 0012 3F39     		subs	r1, r1, #63
 365 0014 8A43     		bics	r2, r1
 366 0016 1343     		orrs	r3, r2
 715:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 367              		.loc 1 715 0
 368 0018 2B60     		str	r3, [r5]
 718:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 719:Generated_Source\PSoC4/CyLib.c **** 
 720:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 369              		.loc 1 720 0
 370 001a FFF7FEFF 		bl	CyExitCriticalSection
 371              	.LVL16:
 721:Generated_Source\PSoC4/CyLib.c **** }
 372              		.loc 1 721 0
 373              		@ sp needed
 374              	.LVL17:
 375 001e 70BD     		pop	{r4, r5, r6, pc}
 376              	.L28:
 377              		.align	2
 378              	.L27:
 379 0020 28000340 		.word	1073938472
 380              		.cfi_endproc
 381              	.LFE9:
 382              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 383              		.section	.text.CySysClkWriteHfclkDiv,"ax",%progbits
 384              		.align	1
 385              		.global	CySysClkWriteHfclkDiv
 386              		.code	16
 387              		.thumb_func
 388              		.type	CySysClkWriteHfclkDiv, %function
 389              	CySysClkWriteHfclkDiv:
 390              	.LFB11:
 722:Generated_Source\PSoC4/CyLib.c **** 
 723:Generated_Source\PSoC4/CyLib.c **** 
 724:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 21


 725:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 726:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 727:Generated_Source\PSoC4/CyLib.c **** *
 728:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 729:Generated_Source\PSoC4/CyLib.c **** *
 730:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 731:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 732:Generated_Source\PSoC4/CyLib.c **** *
 733:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 734:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 735:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 736:Generated_Source\PSoC4/CyLib.c **** *
 737:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 738:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 739:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 740:Generated_Source\PSoC4/CyLib.c **** *
 741:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 742:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 743:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 744:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 745:Generated_Source\PSoC4/CyLib.c **** *
 746:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 747:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 748:Generated_Source\PSoC4/CyLib.c **** *
 749:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 750:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 751:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 752:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 753:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 754:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 755:Generated_Source\PSoC4/CyLib.c **** *
 756:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 757:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 758:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 759:Generated_Source\PSoC4/CyLib.c **** *
 760:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 761:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 762:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor: Valid range [24-48] with 
 763:Generated_Source\PSoC4/CyLib.c **** * step size equals 4.
 764:Generated_Source\PSoC4/CyLib.c **** *
 765:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 766:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 767:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 768:Generated_Source\PSoC4/CyLib.c ****     {
 769:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 770:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 771:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 772:Generated_Source\PSoC4/CyLib.c ****         #else
 773:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 774:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 775:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 776:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 777:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 778:Generated_Source\PSoC4/CyLib.c **** 
 779:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 780:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 781:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 22


 782:Generated_Source\PSoC4/CyLib.c **** 
 783:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 784:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 785:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 786:Generated_Source\PSoC4/CyLib.c **** 
 787:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 788:Generated_Source\PSoC4/CyLib.c **** 
 789:Generated_Source\PSoC4/CyLib.c **** 
 790:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 791:Generated_Source\PSoC4/CyLib.c **** 
 792:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 793:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 794:Generated_Source\PSoC4/CyLib.c ****             {
 795:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 796:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 797:Generated_Source\PSoC4/CyLib.c ****             }
 798:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 799:Generated_Source\PSoC4/CyLib.c **** 
 800:Generated_Source\PSoC4/CyLib.c **** 
 801:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 802:Generated_Source\PSoC4/CyLib.c **** 
 803:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 804:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 805:Generated_Source\PSoC4/CyLib.c ****                 {
 806:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 807:Generated_Source\PSoC4/CyLib.c **** 
 808:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 809:Generated_Source\PSoC4/CyLib.c ****                 {
 810:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 811:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 812:Generated_Source\PSoC4/CyLib.c ****                 }
 813:Generated_Source\PSoC4/CyLib.c **** 
 814:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 815:Generated_Source\PSoC4/CyLib.c ****                 }
 816:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 817:Generated_Source\PSoC4/CyLib.c **** 
 818:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 819:Generated_Source\PSoC4/CyLib.c **** 
 820:Generated_Source\PSoC4/CyLib.c **** 
 821:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 822:Generated_Source\PSoC4/CyLib.c **** 
 823:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 824:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 825:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 826:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 827:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 828:Generated_Source\PSoC4/CyLib.c **** 
 829:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 830:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 831:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 832:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 833:Generated_Source\PSoC4/CyLib.c **** 
 834:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 835:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 836:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 837:Generated_Source\PSoC4/CyLib.c **** 
 838:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 23


 839:Generated_Source\PSoC4/CyLib.c **** 
 840:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 841:Generated_Source\PSoC4/CyLib.c ****         {
 842:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 843:Generated_Source\PSoC4/CyLib.c ****             {
 844:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 845:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 846:Generated_Source\PSoC4/CyLib.c ****             }
 847:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 848:Generated_Source\PSoC4/CyLib.c ****             {
 849:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 850:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 851:Generated_Source\PSoC4/CyLib.c ****             }
 852:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 853:Generated_Source\PSoC4/CyLib.c ****             {
 854:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 855:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 856:Generated_Source\PSoC4/CyLib.c ****             }
 857:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 858:Generated_Source\PSoC4/CyLib.c ****             {
 859:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 860:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 861:Generated_Source\PSoC4/CyLib.c ****             }
 862:Generated_Source\PSoC4/CyLib.c ****             else
 863:Generated_Source\PSoC4/CyLib.c ****             {
 864:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 865:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 866:Generated_Source\PSoC4/CyLib.c ****             }
 867:Generated_Source\PSoC4/CyLib.c **** 
 868:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 869:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 870:Generated_Source\PSoC4/CyLib.c **** 
 871:Generated_Source\PSoC4/CyLib.c **** 
 872:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 873:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 874:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 875:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 876:Generated_Source\PSoC4/CyLib.c ****             *
 877:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 878:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 879:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 880:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 881:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 882:Generated_Source\PSoC4/CyLib.c ****             {
 883:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 884:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 885:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 886:Generated_Source\PSoC4/CyLib.c **** 
 887:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 888:Generated_Source\PSoC4/CyLib.c **** 
 889:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 890:Generated_Source\PSoC4/CyLib.c ****             }
 891:Generated_Source\PSoC4/CyLib.c ****             else
 892:Generated_Source\PSoC4/CyLib.c ****             {
 893:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 894:Generated_Source\PSoC4/CyLib.c ****             }
 895:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 24


 896:Generated_Source\PSoC4/CyLib.c **** 
 897:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 898:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 899:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 900:Generated_Source\PSoC4/CyLib.c ****             *
 901:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 902:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 903:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 904:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 905:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 906:Generated_Source\PSoC4/CyLib.c ****             {
 907:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 908:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 909:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 910:Generated_Source\PSoC4/CyLib.c ****             }
 911:Generated_Source\PSoC4/CyLib.c **** 
 912:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 913:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_T
 914:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 915:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 916:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 917:Generated_Source\PSoC4/CyLib.c **** 
 918:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 919:Generated_Source\PSoC4/CyLib.c ****             {
 920:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 921:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 922:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 923:Generated_Source\PSoC4/CyLib.c ****             }
 924:Generated_Source\PSoC4/CyLib.c ****         }
 925:Generated_Source\PSoC4/CyLib.c ****         else
 926:Generated_Source\PSoC4/CyLib.c ****         {
 927:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 928:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 929:Generated_Source\PSoC4/CyLib.c ****         }
 930:Generated_Source\PSoC4/CyLib.c **** 
 931:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 932:Generated_Source\PSoC4/CyLib.c **** 
 933:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 934:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 935:Generated_Source\PSoC4/CyLib.c ****             {
 936:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 937:Generated_Source\PSoC4/CyLib.c ****             }
 938:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 939:Generated_Source\PSoC4/CyLib.c **** 
 940:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 941:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 942:Generated_Source\PSoC4/CyLib.c ****             {
 943:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 944:Generated_Source\PSoC4/CyLib.c ****             }
 945:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 946:Generated_Source\PSoC4/CyLib.c **** 
 947:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 948:Generated_Source\PSoC4/CyLib.c ****     }
 949:Generated_Source\PSoC4/CyLib.c **** 
 950:Generated_Source\PSoC4/CyLib.c **** #else
 951:Generated_Source\PSoC4/CyLib.c **** 
 952:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 25


 953:Generated_Source\PSoC4/CyLib.c ****     {
 954:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 955:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 956:Generated_Source\PSoC4/CyLib.c **** 
 957:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 958:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 959:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 960:Generated_Source\PSoC4/CyLib.c ****         
 961:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 962:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 963:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 964:Generated_Source\PSoC4/CyLib.c **** 
 965:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 966:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 967:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
 968:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
 969:Generated_Source\PSoC4/CyLib.c ****         #else
 970:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 971:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 972:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 973:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 974:Generated_Source\PSoC4/CyLib.c ****         {
 975:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 976:Generated_Source\PSoC4/CyLib.c **** 
 977:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 978:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 979:Generated_Source\PSoC4/CyLib.c ****                 {
 980:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 981:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 982:Generated_Source\PSoC4/CyLib.c ****                 }
 983:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 984:Generated_Source\PSoC4/CyLib.c **** 
 985:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 986:Generated_Source\PSoC4/CyLib.c **** 
 987:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 988:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 989:Generated_Source\PSoC4/CyLib.c ****                     {
 990:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 991:Generated_Source\PSoC4/CyLib.c **** 
 992:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 993:Generated_Source\PSoC4/CyLib.c ****                     {
 994:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 995:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 996:Generated_Source\PSoC4/CyLib.c ****                     }
 997:Generated_Source\PSoC4/CyLib.c **** 
 998:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 999:Generated_Source\PSoC4/CyLib.c ****                     }
1000:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
1001:Generated_Source\PSoC4/CyLib.c **** 
1002:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
1003:Generated_Source\PSoC4/CyLib.c **** 
1004:Generated_Source\PSoC4/CyLib.c **** 
1005:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
1006:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
1007:Generated_Source\PSoC4/CyLib.c **** 
1008:Generated_Source\PSoC4/CyLib.c **** 
1009:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 26


1010:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1011:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
1012:Generated_Source\PSoC4/CyLib.c ****                 {
1013:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
1014:Generated_Source\PSoC4/CyLib.c ****                 }
1015:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
1016:Generated_Source\PSoC4/CyLib.c ****                 {
1017:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
1018:Generated_Source\PSoC4/CyLib.c ****                 }
1019:Generated_Source\PSoC4/CyLib.c ****                 else
1020:Generated_Source\PSoC4/CyLib.c ****                 {
1021:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
1022:Generated_Source\PSoC4/CyLib.c ****                 }
1023:Generated_Source\PSoC4/CyLib.c ****             #else
1024:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
1025:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1026:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
1027:Generated_Source\PSoC4/CyLib.c **** 
1028:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
1029:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
1030:Generated_Source\PSoC4/CyLib.c **** 
1031:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
1032:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
1033:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
1034:Generated_Source\PSoC4/CyLib.c **** 
1035:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1036:Generated_Source\PSoC4/CyLib.c **** 
1037:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
1038:Generated_Source\PSoC4/CyLib.c ****             {
1039:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1040:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1041:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
1042:Generated_Source\PSoC4/CyLib.c **** 
1043:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1044:Generated_Source\PSoC4/CyLib.c **** 
1045:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
1046:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1047:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1048:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
1049:Generated_Source\PSoC4/CyLib.c ****             }
1050:Generated_Source\PSoC4/CyLib.c **** 
1051:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
1052:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
1053:Generated_Source\PSoC4/CyLib.c ****                 {
1054:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
1055:Generated_Source\PSoC4/CyLib.c ****                 }
1056:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
1057:Generated_Source\PSoC4/CyLib.c ****         
1058:Generated_Source\PSoC4/CyLib.c ****         
1059:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1060:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
1061:Generated_Source\PSoC4/CyLib.c ****                 {
1062:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
1063:Generated_Source\PSoC4/CyLib.c ****                 }
1064:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1065:Generated_Source\PSoC4/CyLib.c **** 
1066:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 27


1067:Generated_Source\PSoC4/CyLib.c ****         }
1068:Generated_Source\PSoC4/CyLib.c ****         else
1069:Generated_Source\PSoC4/CyLib.c ****         {
1070:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
1071:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
1072:Generated_Source\PSoC4/CyLib.c ****         }
1073:Generated_Source\PSoC4/CyLib.c ****     }
1074:Generated_Source\PSoC4/CyLib.c **** 
1075:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
1076:Generated_Source\PSoC4/CyLib.c **** 
1077:Generated_Source\PSoC4/CyLib.c **** 
1078:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
1079:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1080:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
1081:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1082:Generated_Source\PSoC4/CyLib.c ****     *
1083:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
1084:Generated_Source\PSoC4/CyLib.c ****     *
1085:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
1086:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
1087:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
1088:Generated_Source\PSoC4/CyLib.c ****     *
1089:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
1090:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
1091:Generated_Source\PSoC4/CyLib.c ****     *
1092:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
1093:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
1094:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
1095:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
1096:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
1097:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
1098:Generated_Source\PSoC4/CyLib.c ****     *
1099:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
1100:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
1101:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
1102:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
1103:Generated_Source\PSoC4/CyLib.c ****     *
1104:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1105:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
1106:Generated_Source\PSoC4/CyLib.c ****     {
 391              		.loc 1 1106 0
 392              		.cfi_startproc
 393              		@ args = 0, pretend = 0, frame = 0
 394              		@ frame_needed = 0, uses_anonymous_args = 0
 395              	.LVL18:
 396 0000 10B5     		push	{r4, lr}
 397              		.cfi_def_cfa_offset 8
 398              		.cfi_offset 4, -8
 399              		.cfi_offset 14, -4
 400              		.loc 1 1106 0
 401 0002 0400     		movs	r4, r0
1107:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1108:Generated_Source\PSoC4/CyLib.c **** 
1109:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 402              		.loc 1 1109 0
 403 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 404              	.LVL19:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 28


1110:Generated_Source\PSoC4/CyLib.c **** 
1111:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
1112:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 405              		.loc 1 1112 0
 406 0008 A300     		lsls	r3, r4, #2
 407 000a 0C24     		movs	r4, #12
 408              	.LVL20:
1111:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 409              		.loc 1 1111 0
 410 000c 0449     		ldr	r1, .L30
 411              		.loc 1 1112 0
 412 000e 2340     		ands	r3, r4
1111:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 413              		.loc 1 1111 0
 414 0010 0A68     		ldr	r2, [r1]
1113:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
1114:Generated_Source\PSoC4/CyLib.c **** 
1115:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1116:Generated_Source\PSoC4/CyLib.c ****     }
 415              		.loc 1 1116 0
 416              		@ sp needed
1112:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 417              		.loc 1 1112 0
 418 0012 A243     		bics	r2, r4
 419 0014 1343     		orrs	r3, r2
1111:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 420              		.loc 1 1111 0
 421 0016 0B60     		str	r3, [r1]
1115:Generated_Source\PSoC4/CyLib.c ****     }
 422              		.loc 1 1115 0
 423 0018 FFF7FEFF 		bl	CyExitCriticalSection
 424              	.LVL21:
 425              		.loc 1 1116 0
 426 001c 10BD     		pop	{r4, pc}
 427              	.L31:
 428 001e C046     		.align	2
 429              	.L30:
 430 0020 28000340 		.word	1073938472
 431              		.cfi_endproc
 432              	.LFE11:
 433              		.size	CySysClkWriteHfclkDiv, .-CySysClkWriteHfclkDiv
 434              		.section	.text.CySysGetResetReason,"ax",%progbits
 435              		.align	1
 436              		.global	CySysGetResetReason
 437              		.code	16
 438              		.thumb_func
 439              		.type	CySysGetResetReason, %function
 440              	CySysGetResetReason:
 441              	.LFB12:
1117:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
1118:Generated_Source\PSoC4/CyLib.c **** 
1119:Generated_Source\PSoC4/CyLib.c **** 
1120:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
1121:Generated_Source\PSoC4/CyLib.c **** 
1122:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1123:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1124:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 29


1125:Generated_Source\PSoC4/CyLib.c ****     *
1126:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1127:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1128:Generated_Source\PSoC4/CyLib.c ****     *
1129:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1130:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1131:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1132:Generated_Source\PSoC4/CyLib.c ****     * called.
1133:Generated_Source\PSoC4/CyLib.c ****     *
1134:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1135:Generated_Source\PSoC4/CyLib.c ****     *
1136:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1137:Generated_Source\PSoC4/CyLib.c ****     *
1138:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1139:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1140:Generated_Source\PSoC4/CyLib.c ****     *
1141:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1142:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1143:Generated_Source\PSoC4/CyLib.c ****     *
1144:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1145:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1146:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1147:Generated_Source\PSoC4/CyLib.c ****     *
1148:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1149:Generated_Source\PSoC4/CyLib.c ****     *
1150:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1151:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1152:Generated_Source\PSoC4/CyLib.c ****     {
1153:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1154:Generated_Source\PSoC4/CyLib.c **** 
1155:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1156:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1157:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1158:Generated_Source\PSoC4/CyLib.c **** 
1159:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1160:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
1161:Generated_Source\PSoC4/CyLib.c **** 
1162:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1163:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1164:Generated_Source\PSoC4/CyLib.c ****         
1165:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1166:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1167:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1168:Generated_Source\PSoC4/CyLib.c ****             
1169:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1170:Generated_Source\PSoC4/CyLib.c ****             {
1171:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1172:Generated_Source\PSoC4/CyLib.c ****             }
1173:Generated_Source\PSoC4/CyLib.c ****             else
1174:Generated_Source\PSoC4/CyLib.c ****             {
1175:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1176:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
1177:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1178:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1179:Generated_Source\PSoC4/CyLib.c ****             
1180:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1181:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 30


1182:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1183:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1184:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1185:Generated_Source\PSoC4/CyLib.c ****                 
1186:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1187:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1188:Generated_Source\PSoC4/CyLib.c ****                 {
1189:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1190:Generated_Source\PSoC4/CyLib.c ****                 }
1191:Generated_Source\PSoC4/CyLib.c ****                 
1192:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1193:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1194:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1195:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1196:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1197:Generated_Source\PSoC4/CyLib.c **** 
1198:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1199:Generated_Source\PSoC4/CyLib.c ****                 {
1200:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1201:Generated_Source\PSoC4/CyLib.c ****                 }
1202:Generated_Source\PSoC4/CyLib.c **** 
1203:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1204:Generated_Source\PSoC4/CyLib.c ****                 {
1205:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1206:Generated_Source\PSoC4/CyLib.c ****                 }
1207:Generated_Source\PSoC4/CyLib.c ****                 
1208:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1209:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1210:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1211:Generated_Source\PSoC4/CyLib.c ****                 
1212:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1213:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1214:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1215:Generated_Source\PSoC4/CyLib.c ****                 #else
1216:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1217:Generated_Source\PSoC4/CyLib.c ****                 #endif
1218:Generated_Source\PSoC4/CyLib.c ****                 
1219:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1220:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1221:Generated_Source\PSoC4/CyLib.c ****                 {
1222:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1223:Generated_Source\PSoC4/CyLib.c ****                 }
1224:Generated_Source\PSoC4/CyLib.c ****                 
1225:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1226:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD | 
1227:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1228:Generated_Source\PSoC4/CyLib.c ****                                             
1229:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1230:Generated_Source\PSoC4/CyLib.c ****                 {
1231:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1232:Generated_Source\PSoC4/CyLib.c ****                 }
1233:Generated_Source\PSoC4/CyLib.c **** 
1234:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1235:Generated_Source\PSoC4/CyLib.c ****                 
1236:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1237:Generated_Source\PSoC4/CyLib.c ****                 
1238:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 31


1239:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1240:Generated_Source\PSoC4/CyLib.c ****                 
1241:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1242:Generated_Source\PSoC4/CyLib.c ****                 {
1243:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1244:Generated_Source\PSoC4/CyLib.c ****                 }
1245:Generated_Source\PSoC4/CyLib.c ****                 
1246:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1247:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1248:Generated_Source\PSoC4/CyLib.c ****                 
1249:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1250:Generated_Source\PSoC4/CyLib.c ****                 {
1251:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1252:Generated_Source\PSoC4/CyLib.c ****                 }
1253:Generated_Source\PSoC4/CyLib.c ****                 
1254:Generated_Source\PSoC4/CyLib.c ****             }
1255:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 || CY_IP_ECO_SRSSLT */
1256:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1257:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1258:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
1259:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1260:Generated_Source\PSoC4/CyLib.c **** 
1261:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
1262:Generated_Source\PSoC4/CyLib.c ****         {
1263:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1264:Generated_Source\PSoC4/CyLib.c **** 
1265:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1266:Generated_Source\PSoC4/CyLib.c ****             {
1267:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1268:Generated_Source\PSoC4/CyLib.c **** 
1269:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1270:Generated_Source\PSoC4/CyLib.c ****                 {
1271:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1272:Generated_Source\PSoC4/CyLib.c ****                     break;
1273:Generated_Source\PSoC4/CyLib.c ****                 }
1274:Generated_Source\PSoC4/CyLib.c ****             }
1275:Generated_Source\PSoC4/CyLib.c **** 
1276:Generated_Source\PSoC4/CyLib.c ****         }
1277:Generated_Source\PSoC4/CyLib.c **** 
1278:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1279:Generated_Source\PSoC4/CyLib.c ****     }
1280:Generated_Source\PSoC4/CyLib.c **** 
1281:Generated_Source\PSoC4/CyLib.c **** 
1282:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1283:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1284:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1285:Generated_Source\PSoC4/CyLib.c ****     *
1286:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1287:Generated_Source\PSoC4/CyLib.c ****     *
1288:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1289:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1290:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1291:Generated_Source\PSoC4/CyLib.c ****     *
1292:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1293:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1294:Generated_Source\PSoC4/CyLib.c ****     {
1295:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 32


1296:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1297:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1298:Generated_Source\PSoC4/CyLib.c **** 
1299:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1300:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1301:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1302:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1303:Generated_Source\PSoC4/CyLib.c ****         #else
1304:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1305:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1306:Generated_Source\PSoC4/CyLib.c ****     }
1307:Generated_Source\PSoC4/CyLib.c **** 
1308:Generated_Source\PSoC4/CyLib.c **** 
1309:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1310:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1311:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1312:Generated_Source\PSoC4/CyLib.c ****     *
1313:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1314:Generated_Source\PSoC4/CyLib.c ****     *
1315:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1316:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1317:Generated_Source\PSoC4/CyLib.c ****     *
1318:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L / 4100S with ECO devices, the error status bit is the 
1319:Generated_Source\PSoC4/CyLib.c ****     * WATCHDOG_ERROR bit in ECO_STATUS register.
1320:Generated_Source\PSoC4/CyLib.c ****     *
1321:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1322:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1323:Generated_Source\PSoC4/CyLib.c ****     *
1324:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L / 4100S with ECO: Non-zero indicates that ECO is running.
1325:Generated_Source\PSoC4/CyLib.c ****     *
1326:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1327:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1328:Generated_Source\PSoC4/CyLib.c ****     {
1329:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1330:Generated_Source\PSoC4/CyLib.c **** 
1331:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1332:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
1333:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1334:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1335:Generated_Source\PSoC4/CyLib.c **** 
1336:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) || 
1337:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1338:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1339:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1340:Generated_Source\PSoC4/CyLib.c ****         #else
1341:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1342:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1343:Generated_Source\PSoC4/CyLib.c **** 
1344:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1345:Generated_Source\PSoC4/CyLib.c ****     }
1346:Generated_Source\PSoC4/CyLib.c **** 
1347:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1348:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1349:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1350:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1351:Generated_Source\PSoC4/CyLib.c ****         *
1352:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 33


1353:Generated_Source\PSoC4/CyLib.c ****         *
1354:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1355:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1356:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1357:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1358:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1359:Generated_Source\PSoC4/CyLib.c ****         *
1360:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1361:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1362:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1363:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1364:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1365:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1366:Generated_Source\PSoC4/CyLib.c ****         *
1367:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1368:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1369:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1370:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1371:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1372:Generated_Source\PSoC4/CyLib.c ****         *
1373:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1374:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1375:Generated_Source\PSoC4/CyLib.c ****         {
1376:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1377:Generated_Source\PSoC4/CyLib.c **** 
1378:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1379:Generated_Source\PSoC4/CyLib.c ****             {
1380:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1381:Generated_Source\PSoC4/CyLib.c **** 
1382:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1383:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1384:Generated_Source\PSoC4/CyLib.c **** 
1385:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1386:Generated_Source\PSoC4/CyLib.c ****             }
1387:Generated_Source\PSoC4/CyLib.c ****             else
1388:Generated_Source\PSoC4/CyLib.c ****             {
1389:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1390:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1391:Generated_Source\PSoC4/CyLib.c ****             }
1392:Generated_Source\PSoC4/CyLib.c ****         }
1393:Generated_Source\PSoC4/CyLib.c **** 
1394:Generated_Source\PSoC4/CyLib.c ****     #else
1395:Generated_Source\PSoC4/CyLib.c **** 
1396:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1397:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1398:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1399:Generated_Source\PSoC4/CyLib.c ****         *
1400:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1401:Generated_Source\PSoC4/CyLib.c ****         * 4200L / 4100S with ECO devices only.
1402:Generated_Source\PSoC4/CyLib.c ****         *
1403:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1404:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1405:Generated_Source\PSoC4/CyLib.c ****         *
1406:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1407:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1408:Generated_Source\PSoC4/CyLib.c ****         *
1409:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 34


1410:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1411:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1412:Generated_Source\PSoC4/CyLib.c ****         *
1413:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1414:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1415:Generated_Source\PSoC4/CyLib.c ****         *
1416:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1417:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1418:Generated_Source\PSoC4/CyLib.c ****         *
1419:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1420:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1421:Generated_Source\PSoC4/CyLib.c ****         *
1422:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1423:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1424:Generated_Source\PSoC4/CyLib.c ****         *
1425:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1426:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1427:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1428:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1429:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1430:Generated_Source\PSoC4/CyLib.c ****         *
1431:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1432:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1433:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1434:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1435:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1436:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1437:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1438:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1439:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1440:Generated_Source\PSoC4/CyLib.c ****         *
1441:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1442:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1443:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1444:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1445:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1446:Generated_Source\PSoC4/CyLib.c ****         *
1447:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1448:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1449:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1450:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1451:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1452:Generated_Source\PSoC4/CyLib.c ****         *
1453:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1454:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1455:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1456:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1457:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1458:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1459:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1460:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1461:Generated_Source\PSoC4/CyLib.c ****         *
1462:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1463:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1464:Generated_Source\PSoC4/CyLib.c ****         {
1465:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1466:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 35


1467:Generated_Source\PSoC4/CyLib.c **** 
1468:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1469:Generated_Source\PSoC4/CyLib.c **** 
1470:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1471:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1472:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1473:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1474:Generated_Source\PSoC4/CyLib.c **** 
1475:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1476:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1477:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1478:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1479:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1480:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1481:Generated_Source\PSoC4/CyLib.c **** 
1482:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1483:Generated_Source\PSoC4/CyLib.c **** 
1484:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1485:Generated_Source\PSoC4/CyLib.c ****         }
1486:Generated_Source\PSoC4/CyLib.c **** 
1487:Generated_Source\PSoC4/CyLib.c **** 
1488:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1489:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1490:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1491:Generated_Source\PSoC4/CyLib.c ****         *
1492:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1493:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1494:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1495:Generated_Source\PSoC4/CyLib.c ****         *
1496:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L / 4100S with ECO devices only.
1497:Generated_Source\PSoC4/CyLib.c ****         *
1498:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1499:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1500:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1501:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1502:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1503:Generated_Source\PSoC4/CyLib.c ****         *
1504:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1505:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1506:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1507:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1508:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1509:Generated_Source\PSoC4/CyLib.c ****         *
1510:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1511:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1512:Generated_Source\PSoC4/CyLib.c ****         *
1513:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1514:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1515:Generated_Source\PSoC4/CyLib.c ****         {
1516:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1517:Generated_Source\PSoC4/CyLib.c **** 
1518:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1519:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1520:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1521:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1522:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1523:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 36


1524:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1525:Generated_Source\PSoC4/CyLib.c **** 
1526:Generated_Source\PSoC4/CyLib.c **** 
1527:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1528:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1529:Generated_Source\PSoC4/CyLib.c ****             {
1530:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1531:Generated_Source\PSoC4/CyLib.c ****             }
1532:Generated_Source\PSoC4/CyLib.c ****             else
1533:Generated_Source\PSoC4/CyLib.c ****             {
1534:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1535:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1536:Generated_Source\PSoC4/CyLib.c **** 
1537:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1538:Generated_Source\PSoC4/CyLib.c ****                 {
1539:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1540:Generated_Source\PSoC4/CyLib.c ****                 }
1541:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1542:Generated_Source\PSoC4/CyLib.c ****                 {
1543:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1544:Generated_Source\PSoC4/CyLib.c ****                 }
1545:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1546:Generated_Source\PSoC4/CyLib.c ****                 {
1547:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1548:Generated_Source\PSoC4/CyLib.c ****                 }
1549:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1550:Generated_Source\PSoC4/CyLib.c ****                 {
1551:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1552:Generated_Source\PSoC4/CyLib.c ****                 }
1553:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1554:Generated_Source\PSoC4/CyLib.c ****                 {
1555:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1556:Generated_Source\PSoC4/CyLib.c ****                 }
1557:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1558:Generated_Source\PSoC4/CyLib.c ****                 {
1559:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1560:Generated_Source\PSoC4/CyLib.c ****                 }
1561:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1562:Generated_Source\PSoC4/CyLib.c ****                 {
1563:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1564:Generated_Source\PSoC4/CyLib.c ****                 }
1565:Generated_Source\PSoC4/CyLib.c ****                 else
1566:Generated_Source\PSoC4/CyLib.c ****                 {
1567:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1568:Generated_Source\PSoC4/CyLib.c ****                 }
1569:Generated_Source\PSoC4/CyLib.c **** 
1570:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1571:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1572:Generated_Source\PSoC4/CyLib.c **** 
1573:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1574:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1575:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1576:Generated_Source\PSoC4/CyLib.c ****                 {
1577:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1578:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1579:Generated_Source\PSoC4/CyLib.c ****                 }
1580:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 37


1581:Generated_Source\PSoC4/CyLib.c ****                 {
1582:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1583:Generated_Source\PSoC4/CyLib.c ****                 }
1584:Generated_Source\PSoC4/CyLib.c ****                 else
1585:Generated_Source\PSoC4/CyLib.c ****                 {
1586:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1587:Generated_Source\PSoC4/CyLib.c ****                 }
1588:Generated_Source\PSoC4/CyLib.c **** 
1589:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1590:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1591:Generated_Source\PSoC4/CyLib.c ****                 {
1592:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1593:Generated_Source\PSoC4/CyLib.c ****                 }
1594:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1595:Generated_Source\PSoC4/CyLib.c ****                 {
1596:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1597:Generated_Source\PSoC4/CyLib.c ****                 }
1598:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1599:Generated_Source\PSoC4/CyLib.c ****                 {
1600:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1601:Generated_Source\PSoC4/CyLib.c ****                 }
1602:Generated_Source\PSoC4/CyLib.c ****                 else
1603:Generated_Source\PSoC4/CyLib.c ****                 {
1604:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1605:Generated_Source\PSoC4/CyLib.c ****                 }
1606:Generated_Source\PSoC4/CyLib.c **** 
1607:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1608:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1609:Generated_Source\PSoC4/CyLib.c **** 
1610:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1611:Generated_Source\PSoC4/CyLib.c **** 
1612:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1613:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1614:Generated_Source\PSoC4/CyLib.c ****                 {
1615:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1616:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1617:Generated_Source\PSoC4/CyLib.c ****                 }
1618:Generated_Source\PSoC4/CyLib.c ****                 else
1619:Generated_Source\PSoC4/CyLib.c ****                 {
1620:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1621:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1622:Generated_Source\PSoC4/CyLib.c ****                     */
1623:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1624:Generated_Source\PSoC4/CyLib.c ****                 }
1625:Generated_Source\PSoC4/CyLib.c ****             }
1626:Generated_Source\PSoC4/CyLib.c **** 
1627:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1628:Generated_Source\PSoC4/CyLib.c ****         }
1629:Generated_Source\PSoC4/CyLib.c **** 
1630:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1631:Generated_Source\PSoC4/CyLib.c **** 
1632:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1633:Generated_Source\PSoC4/CyLib.c **** 
1634:Generated_Source\PSoC4/CyLib.c **** 
1635:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
1636:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1637:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 38


1638:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1639:Generated_Source\PSoC4/CyLib.c ****     *
1640:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1641:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1642:Generated_Source\PSoC4/CyLib.c ****     *
1643:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1644:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1645:Generated_Source\PSoC4/CyLib.c ****     *
1646:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1647:Generated_Source\PSoC4/CyLib.c ****     *
1648:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1649:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1650:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1 (available only for PSoC 4200L)
1651:Generated_Source\PSoC4/CyLib.c ****     *
1652:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1653:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1654:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1655:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1656:Generated_Source\PSoC4/CyLib.c ****     *
1657:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1658:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1659:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1660:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1661:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1662:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1663:Generated_Source\PSoC4/CyLib.c ****     *
1664:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1665:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1666:Generated_Source\PSoC4/CyLib.c ****     {
1667:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1668:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1669:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1670:Generated_Source\PSoC4/CyLib.c **** 
1671:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1672:Generated_Source\PSoC4/CyLib.c ****         {
1673:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1674:Generated_Source\PSoC4/CyLib.c **** 
1675:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1676:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1677:Generated_Source\PSoC4/CyLib.c **** 
1678:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1679:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1680:Generated_Source\PSoC4/CyLib.c **** 
1681:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1682:Generated_Source\PSoC4/CyLib.c **** 
1683:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1684:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1685:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1686:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1687:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1688:Generated_Source\PSoC4/CyLib.c **** 
1689:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1690:Generated_Source\PSoC4/CyLib.c ****             {
1691:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1692:Generated_Source\PSoC4/CyLib.c **** 
1693:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1694:Generated_Source\PSoC4/CyLib.c ****                 {
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 39


1695:Generated_Source\PSoC4/CyLib.c **** 
1696:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1697:Generated_Source\PSoC4/CyLib.c ****                     {
1698:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1699:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1700:Generated_Source\PSoC4/CyLib.c ****                         break;
1701:Generated_Source\PSoC4/CyLib.c ****                     }
1702:Generated_Source\PSoC4/CyLib.c **** 
1703:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1704:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1705:Generated_Source\PSoC4/CyLib.c ****                 }
1706:Generated_Source\PSoC4/CyLib.c ****             }
1707:Generated_Source\PSoC4/CyLib.c ****         }
1708:Generated_Source\PSoC4/CyLib.c ****         else
1709:Generated_Source\PSoC4/CyLib.c ****         {
1710:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1711:Generated_Source\PSoC4/CyLib.c ****         }
1712:Generated_Source\PSoC4/CyLib.c **** 
1713:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1714:Generated_Source\PSoC4/CyLib.c ****     }
1715:Generated_Source\PSoC4/CyLib.c **** 
1716:Generated_Source\PSoC4/CyLib.c **** 
1717:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1718:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1719:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1720:Generated_Source\PSoC4/CyLib.c ****     *
1721:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1722:Generated_Source\PSoC4/CyLib.c ****     *
1723:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1724:Generated_Source\PSoC4/CyLib.c ****     *
1725:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1726:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1727:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1728:Generated_Source\PSoC4/CyLib.c ****     *
1729:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1730:Generated_Source\PSoC4/CyLib.c ****     *
1731:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1732:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1733:Generated_Source\PSoC4/CyLib.c ****     {
1734:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1735:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1736:Generated_Source\PSoC4/CyLib.c **** 
1737:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1738:Generated_Source\PSoC4/CyLib.c **** 
1739:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1740:Generated_Source\PSoC4/CyLib.c **** 
1741:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1742:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1743:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1744:Generated_Source\PSoC4/CyLib.c ****         {
1745:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1746:Generated_Source\PSoC4/CyLib.c ****         }
1747:Generated_Source\PSoC4/CyLib.c **** 
1748:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1749:Generated_Source\PSoC4/CyLib.c **** 
1750:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1751:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 40


1752:Generated_Source\PSoC4/CyLib.c **** 
1753:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1754:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1755:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1756:Generated_Source\PSoC4/CyLib.c ****     *
1757:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1758:Generated_Source\PSoC4/CyLib.c ****     *
1759:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1760:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1761:Generated_Source\PSoC4/CyLib.c ****     *
1762:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1763:Generated_Source\PSoC4/CyLib.c ****     *
1764:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1765:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1766:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1767:Generated_Source\PSoC4/CyLib.c ****     *
1768:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1769:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1770:Generated_Source\PSoC4/CyLib.c ****     {
1771:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1772:Generated_Source\PSoC4/CyLib.c **** 
1773:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1774:Generated_Source\PSoC4/CyLib.c ****         {
1775:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1776:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1777:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1778:Generated_Source\PSoC4/CyLib.c ****         }
1779:Generated_Source\PSoC4/CyLib.c ****     }
1780:Generated_Source\PSoC4/CyLib.c **** 
1781:Generated_Source\PSoC4/CyLib.c **** 
1782:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1783:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1784:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1785:Generated_Source\PSoC4/CyLib.c ****     *
1786:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1787:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1788:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1789:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1790:Generated_Source\PSoC4/CyLib.c ****     *
1791:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1792:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1793:Generated_Source\PSoC4/CyLib.c ****     *
1794:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1795:Generated_Source\PSoC4/CyLib.c ****     *
1796:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1797:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1798:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1799:Generated_Source\PSoC4/CyLib.c ****     *
1800:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1801:Generated_Source\PSoC4/CyLib.c ****     * divider.
1802:Generated_Source\PSoC4/CyLib.c ****     *
1803:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1804:Generated_Source\PSoC4/CyLib.c ****     *
1805:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1806:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1807:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1808:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 41


1809:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1810:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1811:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1812:Generated_Source\PSoC4/CyLib.c ****     *
1813:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1814:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1815:Generated_Source\PSoC4/CyLib.c ****     {
1816:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1817:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1818:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1819:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1820:Generated_Source\PSoC4/CyLib.c **** 
1821:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1822:Generated_Source\PSoC4/CyLib.c **** 
1823:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1824:Generated_Source\PSoC4/CyLib.c **** 
1825:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1826:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1827:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1828:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1829:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1830:Generated_Source\PSoC4/CyLib.c ****         {
1831:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1832:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1833:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1834:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1835:Generated_Source\PSoC4/CyLib.c **** 
1836:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1837:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1838:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1839:Generated_Source\PSoC4/CyLib.c **** 
1840:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1841:Generated_Source\PSoC4/CyLib.c **** 
1842:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1843:Generated_Source\PSoC4/CyLib.c ****         }
1844:Generated_Source\PSoC4/CyLib.c **** 
1845:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1846:Generated_Source\PSoC4/CyLib.c **** 
1847:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1848:Generated_Source\PSoC4/CyLib.c ****     }
1849:Generated_Source\PSoC4/CyLib.c **** 
1850:Generated_Source\PSoC4/CyLib.c **** 
1851:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1852:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1853:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1856:Generated_Source\PSoC4/CyLib.c ****     *
1857:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1858:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1859:Generated_Source\PSoC4/CyLib.c ****     *
1860:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1861:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1862:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1863:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1864:Generated_Source\PSoC4/CyLib.c ****     *
1865:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 42


1866:Generated_Source\PSoC4/CyLib.c ****     *
1867:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1868:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1869:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1870:Generated_Source\PSoC4/CyLib.c ****     *
1871:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1872:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1873:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1874:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1875:Generated_Source\PSoC4/CyLib.c ****     *
1876:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1877:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1878:Generated_Source\PSoC4/CyLib.c ****     *
1879:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1880:Generated_Source\PSoC4/CyLib.c ****     *
1881:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1882:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1883:Generated_Source\PSoC4/CyLib.c ****     {
1884:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1885:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1886:Generated_Source\PSoC4/CyLib.c **** 
1887:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1888:Generated_Source\PSoC4/CyLib.c **** 
1889:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1890:Generated_Source\PSoC4/CyLib.c ****         {
1891:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1892:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1893:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1894:Generated_Source\PSoC4/CyLib.c ****         }
1895:Generated_Source\PSoC4/CyLib.c **** 
1896:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1897:Generated_Source\PSoC4/CyLib.c ****     }
1898:Generated_Source\PSoC4/CyLib.c **** 
1899:Generated_Source\PSoC4/CyLib.c **** 
1900:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1901:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1902:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1903:Generated_Source\PSoC4/CyLib.c ****     *
1904:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1905:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
1906:Generated_Source\PSoC4/CyLib.c ****     *
1907:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1908:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1909:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1910:Generated_Source\PSoC4/CyLib.c ****     *
1911:Generated_Source\PSoC4/CyLib.c ****     *  \param bypass: Bypass mode.
1912:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1913:Generated_Source\PSoC4/CyLib.c ****     *
1914:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1915:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1916:Generated_Source\PSoC4/CyLib.c ****     {
1917:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1918:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1919:Generated_Source\PSoC4/CyLib.c **** 
1920:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1921:Generated_Source\PSoC4/CyLib.c **** 
1922:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 43


1923:Generated_Source\PSoC4/CyLib.c **** 
1924:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1925:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1926:Generated_Source\PSoC4/CyLib.c **** 
1927:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1928:Generated_Source\PSoC4/CyLib.c **** 
1929:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1930:Generated_Source\PSoC4/CyLib.c ****     }
1931:Generated_Source\PSoC4/CyLib.c **** 
1932:Generated_Source\PSoC4/CyLib.c **** 
1933:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1934:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1935:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1936:Generated_Source\PSoC4/CyLib.c ****     *
1937:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1938:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1939:Generated_Source\PSoC4/CyLib.c ****     *
1940:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
1941:Generated_Source\PSoC4/CyLib.c ****     *
1942:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1943:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1944:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1945:Generated_Source\PSoC4/CyLib.c ****     *
1946:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1947:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1948:Generated_Source\PSoC4/CyLib.c ****     *
1949:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1950:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1951:Generated_Source\PSoC4/CyLib.c ****     {
1952:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1953:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1954:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_INVALID_STATE;
1955:Generated_Source\PSoC4/CyLib.c **** 
1956:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1957:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1958:Generated_Source\PSoC4/CyLib.c **** 
1959:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1960:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll))
1961:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSV2)
1962:Generated_Source\PSoC4/CyLib.c ****             || ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll))
1963:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSV2) */
1964:Generated_Source\PSoC4/CyLib.c ****             )
1965:Generated_Source\PSoC4/CyLib.c ****         {
1966:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1967:Generated_Source\PSoC4/CyLib.c ****         }
1968:Generated_Source\PSoC4/CyLib.c **** 
1969:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1970:Generated_Source\PSoC4/CyLib.c ****     }
1971:Generated_Source\PSoC4/CyLib.c **** 
1972:Generated_Source\PSoC4/CyLib.c **** 
1973:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1974:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1975:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1976:Generated_Source\PSoC4/CyLib.c ****     *
1977:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1978:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1979:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 44


1980:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1981:Generated_Source\PSoC4/CyLib.c ****     *
1982:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
1983:Generated_Source\PSoC4/CyLib.c ****     *
1984:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1985:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1986:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1987:Generated_Source\PSoC4/CyLib.c ****     *
1988:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1989:Generated_Source\PSoC4/CyLib.c ****     *
1990:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1991:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1992:Generated_Source\PSoC4/CyLib.c ****     {
1993:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1994:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1995:Generated_Source\PSoC4/CyLib.c **** 
1996:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1997:Generated_Source\PSoC4/CyLib.c **** 
1998:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1999:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
2000:Generated_Source\PSoC4/CyLib.c **** 
2001:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2002:Generated_Source\PSoC4/CyLib.c **** 
2003:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2004:Generated_Source\PSoC4/CyLib.c ****     }
2005:Generated_Source\PSoC4/CyLib.c **** 
2006:Generated_Source\PSoC4/CyLib.c **** 
2007:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2008:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
2009:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2010:Generated_Source\PSoC4/CyLib.c ****     *
2011:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
2012:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
2013:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
2014:Generated_Source\PSoC4/CyLib.c ****     *
2015:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
2016:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
2017:Generated_Source\PSoC4/CyLib.c ****     *
2018:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
2019:Generated_Source\PSoC4/CyLib.c ****     *
2020:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
2021:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2022:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
2023:Generated_Source\PSoC4/CyLib.c ****     *
2024:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
2025:Generated_Source\PSoC4/CyLib.c ****     *
2026:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
2027:Generated_Source\PSoC4/CyLib.c ****     *
2028:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
2029:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
2030:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2031:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2032:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2033:Generated_Source\PSoC4/CyLib.c ****     *
2034:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
2035:Generated_Source\PSoC4/CyLib.c ****     *
2036:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 45


2037:Generated_Source\PSoC4/CyLib.c ****     * frequency.
2038:Generated_Source\PSoC4/CyLib.c ****     *
2039:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
2040:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
2041:Generated_Source\PSoC4/CyLib.c ****     *
2042:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2043:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
2044:Generated_Source\PSoC4/CyLib.c ****     {
2045:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
2046:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
2047:Generated_Source\PSoC4/CyLib.c **** 
2048:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
2049:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
2050:Generated_Source\PSoC4/CyLib.c **** 
2051:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
2052:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
2053:Generated_Source\PSoC4/CyLib.c **** 
2054:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
2055:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
2056:Generated_Source\PSoC4/CyLib.c **** 
2057:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2058:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2059:Generated_Source\PSoC4/CyLib.c **** 
2060:Generated_Source\PSoC4/CyLib.c **** 
2061:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2062:Generated_Source\PSoC4/CyLib.c **** 
2063:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
2064:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
2065:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
2066:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
2067:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
2068:Generated_Source\PSoC4/CyLib.c ****         {
2069:Generated_Source\PSoC4/CyLib.c **** 
2070:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
2071:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
2072:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
2073:Generated_Source\PSoC4/CyLib.c **** 
2074:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
2075:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
2076:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
2077:Generated_Source\PSoC4/CyLib.c **** 
2078:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
2079:Generated_Source\PSoC4/CyLib.c ****             {
2080:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
2081:Generated_Source\PSoC4/CyLib.c ****                 {
2082:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
2083:Generated_Source\PSoC4/CyLib.c **** 
2084:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
2085:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
2086:Generated_Source\PSoC4/CyLib.c **** 
2087:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
2088:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
2089:Generated_Source\PSoC4/CyLib.c **** 
2090:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
2091:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
2092:Generated_Source\PSoC4/CyLib.c **** 
2093:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 46


2094:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
2095:Generated_Source\PSoC4/CyLib.c ****                     {
2096:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
2097:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
2098:Generated_Source\PSoC4/CyLib.c ****                         break;
2099:Generated_Source\PSoC4/CyLib.c ****                     }
2100:Generated_Source\PSoC4/CyLib.c ****                 }
2101:Generated_Source\PSoC4/CyLib.c **** 
2102:Generated_Source\PSoC4/CyLib.c **** 
2103:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
2104:Generated_Source\PSoC4/CyLib.c ****                 {
2105:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
2106:Generated_Source\PSoC4/CyLib.c ****                     {
2107:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
2108:Generated_Source\PSoC4/CyLib.c ****                     }
2109:Generated_Source\PSoC4/CyLib.c ****                 }
2110:Generated_Source\PSoC4/CyLib.c ****             }
2111:Generated_Source\PSoC4/CyLib.c **** 
2112:Generated_Source\PSoC4/CyLib.c ****         }
2113:Generated_Source\PSoC4/CyLib.c **** 
2114:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2115:Generated_Source\PSoC4/CyLib.c ****     }
2116:Generated_Source\PSoC4/CyLib.c **** 
2117:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2118:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
2119:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2120:Generated_Source\PSoC4/CyLib.c ****     *
2121:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
2122:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
2123:Generated_Source\PSoC4/CyLib.c ****     *
2124:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
2125:Generated_Source\PSoC4/CyLib.c ****     *
2126:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2127:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2128:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
2129:Generated_Source\PSoC4/CyLib.c ****     *
2130:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2131:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2132:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock (available only for PSoC 4200L)
2133:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2134:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0] (available only for PSoC 4200L)
2135:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1] (available only for PSoC 4200L)
2136:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2] (available only for PSoC 4200L)
2137:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3] (available only for PSoC 4200L)
2138:Generated_Source\PSoC4/CyLib.c ****     *
2139:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2140:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2141:Generated_Source\PSoC4/CyLib.c ****     {
2142:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2143:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2144:Generated_Source\PSoC4/CyLib.c ****         
2145:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSLT)
2146:Generated_Source\PSoC4/CyLib.c ****             uint8 i = 0u;
2147:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSLT) */
2148:Generated_Source\PSoC4/CyLib.c **** 
2149:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2150:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 47


2151:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
2152:Generated_Source\PSoC4/CyLib.c ****         {
2153:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
2154:Generated_Source\PSoC4/CyLib.c ****                 regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
2155:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MAS
2156:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_SELECT_REG = regTmp;
2157:Generated_Source\PSoC4/CyLib.c ****             #else
2158:Generated_Source\PSoC4/CyLib.c ****                 regTmp = CY_SYS_ECO_CLK_SELECT_REG & (uint32) ~CY_SYS_ECO_CLK_SELECT_PLL0_MASK;
2159:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= ((source << CY_SYS_ECO_CLK_SELECT_PLL0_SHIFT) & CY_SYS_ECO_CLK_SELECT_PLL
2160:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_ECO_CLK_SELECT_REG = regTmp;
2161:Generated_Source\PSoC4/CyLib.c ****                 
2162:Generated_Source\PSoC4/CyLib.c ****                 /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG */
2163:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2164:Generated_Source\PSoC4/CyLib.c ****                 
2165:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
2166:Generated_Source\PSoC4/CyLib.c ****                 {
2167:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2168:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2169:Generated_Source\PSoC4/CyLib.c ****                 }
2170:Generated_Source\PSoC4/CyLib.c ****                 
2171:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2172:Generated_Source\PSoC4/CyLib.c **** 
2173:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
2174:Generated_Source\PSoC4/CyLib.c ****         }
2175:Generated_Source\PSoC4/CyLib.c **** 
2176:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2177:Generated_Source\PSoC4/CyLib.c ****     }
2178:Generated_Source\PSoC4/CyLib.c **** 
2179:Generated_Source\PSoC4/CyLib.c ****     
2180:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2181:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2182:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2183:Generated_Source\PSoC4/CyLib.c ****     *
2184:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2185:Generated_Source\PSoC4/CyLib.c ****     *
2186:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2187:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2188:Generated_Source\PSoC4/CyLib.c ****     *
2189:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
2190:Generated_Source\PSoC4/CyLib.c ****     *
2191:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2192:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2193:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
2194:Generated_Source\PSoC4/CyLib.c ****     *
2195:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2196:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2197:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2198:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2199:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2200:Generated_Source\PSoC4/CyLib.c ****     *
2201:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2202:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2203:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2204:Generated_Source\PSoC4/CyLib.c ****     *
2205:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2206:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2207:Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 48


2208:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2209:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2210:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2211:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2212:Generated_Source\PSoC4/CyLib.c **** 
2213:Generated_Source\PSoC4/CyLib.c **** 
2214:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2215:Generated_Source\PSoC4/CyLib.c **** 
2216:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2217:Generated_Source\PSoC4/CyLib.c **** 
2218:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
2219:Generated_Source\PSoC4/CyLib.c ****         {
2220:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
2221:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2222:Generated_Source\PSoC4/CyLib.c **** 
2223:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
2224:Generated_Source\PSoC4/CyLib.c **** 
2225:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
2226:Generated_Source\PSoC4/CyLib.c ****         }
2227:Generated_Source\PSoC4/CyLib.c **** 
2228:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2229:Generated_Source\PSoC4/CyLib.c **** 
2230:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2231:Generated_Source\PSoC4/CyLib.c ****     }
2232:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
2233:Generated_Source\PSoC4/CyLib.c **** 
2234:Generated_Source\PSoC4/CyLib.c **** 
2235:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2236:Generated_Source\PSoC4/CyLib.c **** 
2237:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2238:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2239:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2240:Generated_Source\PSoC4/CyLib.c ****     *
2241:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2242:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2243:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2244:Generated_Source\PSoC4/CyLib.c ****     *
2245:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2246:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2247:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2248:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2249:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2250:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2251:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2252:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2253:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2254:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2255:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2256:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2257:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2258:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2259:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2260:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2261:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2262:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2263:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2264:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 49


2265:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2266:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2267:Generated_Source\PSoC4/CyLib.c ****     {
2268:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2269:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
2270:Generated_Source\PSoC4/CyLib.c **** 
2271:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2272:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
2273:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
2274:Generated_Source\PSoC4/CyLib.c **** 
2275:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2276:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2277:Generated_Source\PSoC4/CyLib.c **** 
2278:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2279:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
2280:Generated_Source\PSoC4/CyLib.c **** 
2281:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2282:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
2283:Generated_Source\PSoC4/CyLib.c **** 
2284:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2285:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
2286:Generated_Source\PSoC4/CyLib.c ****     }
2287:Generated_Source\PSoC4/CyLib.c **** 
2288:Generated_Source\PSoC4/CyLib.c **** 
2289:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2290:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2291:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2292:Generated_Source\PSoC4/CyLib.c ****     *
2293:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2294:Generated_Source\PSoC4/CyLib.c ****     *
2295:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2296:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2297:Generated_Source\PSoC4/CyLib.c ****     {
2298:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
2299:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2300:Generated_Source\PSoC4/CyLib.c ****     }
2301:Generated_Source\PSoC4/CyLib.c **** 
2302:Generated_Source\PSoC4/CyLib.c **** 
2303:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2304:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2305:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2306:Generated_Source\PSoC4/CyLib.c ****     *
2307:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2308:Generated_Source\PSoC4/CyLib.c ****     *
2309:Generated_Source\PSoC4/CyLib.c ****     * \return
2310:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2311:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2312:Generated_Source\PSoC4/CyLib.c ****     *
2313:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2314:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2315:Generated_Source\PSoC4/CyLib.c ****     {
2316:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
2317:Generated_Source\PSoC4/CyLib.c ****     }
2318:Generated_Source\PSoC4/CyLib.c **** 
2319:Generated_Source\PSoC4/CyLib.c **** 
2320:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2321:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 50


2322:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2323:Generated_Source\PSoC4/CyLib.c ****     *
2324:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2325:Generated_Source\PSoC4/CyLib.c ****     *
2326:Generated_Source\PSoC4/CyLib.c ****     * \return
2327:Generated_Source\PSoC4/CyLib.c ****     *  None
2328:Generated_Source\PSoC4/CyLib.c ****     *
2329:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2330:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2331:Generated_Source\PSoC4/CyLib.c ****     {
2332:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
2333:Generated_Source\PSoC4/CyLib.c ****     }
2334:Generated_Source\PSoC4/CyLib.c **** 
2335:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2336:Generated_Source\PSoC4/CyLib.c **** 
2337:Generated_Source\PSoC4/CyLib.c **** 
2338:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2339:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2340:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2341:Generated_Source\PSoC4/CyLib.c **** *
2342:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2343:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2344:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2345:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2346:Generated_Source\PSoC4/CyLib.c **** *
2347:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2348:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2349:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2350:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2351:Generated_Source\PSoC4/CyLib.c **** *
2352:Generated_Source\PSoC4/CyLib.c **** * \return
2353:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2354:Generated_Source\PSoC4/CyLib.c **** *
2355:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2356:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2357:Generated_Source\PSoC4/CyLib.c **** {
 442              		.loc 1 2357 0
 443              		.cfi_startproc
 444              		@ args = 0, pretend = 0, frame = 0
 445              		@ frame_needed = 0, uses_anonymous_args = 0
 446              		@ link register save eliminated.
 447              	.LVL22:
2358:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2359:Generated_Source\PSoC4/CyLib.c **** 
2360:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 448              		.loc 1 2360 0
 449 0000 1923     		movs	r3, #25
 450 0002 0200     		movs	r2, r0
2361:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 451              		.loc 1 2361 0
 452 0004 0249     		ldr	r1, .L33
2360:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 453              		.loc 1 2360 0
 454 0006 1A40     		ands	r2, r3
 455              	.LVL23:
 456              		.loc 1 2361 0
 457 0008 0868     		ldr	r0, [r1]
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 51


 458              	.LVL24:
2362:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2363:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
2364:Generated_Source\PSoC4/CyLib.c **** 
2365:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
2366:Generated_Source\PSoC4/CyLib.c **** }
 459              		.loc 1 2366 0
 460              		@ sp needed
2365:Generated_Source\PSoC4/CyLib.c **** }
 461              		.loc 1 2365 0
 462 000a 1840     		ands	r0, r3
 463              	.LVL25:
2363:Generated_Source\PSoC4/CyLib.c **** 
 464              		.loc 1 2363 0
 465 000c 0A60     		str	r2, [r1]
 466              		.loc 1 2366 0
 467 000e 7047     		bx	lr
 468              	.L34:
 469              		.align	2
 470              	.L33:
 471 0010 54000340 		.word	1073938516
 472              		.cfi_endproc
 473              	.LFE12:
 474              		.size	CySysGetResetReason, .-CySysGetResetReason
 475              		.section	.text.CyDisableInts,"ax",%progbits
 476              		.align	1
 477              		.global	CyDisableInts
 478              		.code	16
 479              		.thumb_func
 480              		.type	CyDisableInts, %function
 481              	CyDisableInts:
 482              	.LFB13:
2367:Generated_Source\PSoC4/CyLib.c **** 
2368:Generated_Source\PSoC4/CyLib.c **** 
2369:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2370:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2371:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2372:Generated_Source\PSoC4/CyLib.c **** *
2373:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2374:Generated_Source\PSoC4/CyLib.c **** *
2375:Generated_Source\PSoC4/CyLib.c **** * \return
2376:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2377:Generated_Source\PSoC4/CyLib.c **** *
2378:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2379:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2380:Generated_Source\PSoC4/CyLib.c **** {
 483              		.loc 1 2380 0
 484              		.cfi_startproc
 485              		@ args = 0, pretend = 0, frame = 0
 486              		@ frame_needed = 0, uses_anonymous_args = 0
 487              		@ link register save eliminated.
2381:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2382:Generated_Source\PSoC4/CyLib.c **** 
2383:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2384:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
2385:Generated_Source\PSoC4/CyLib.c **** 
2386:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 52


2387:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 488              		.loc 1 2387 0
 489 0000 0122     		movs	r2, #1
2384:Generated_Source\PSoC4/CyLib.c **** 
 490              		.loc 1 2384 0
 491 0002 024B     		ldr	r3, .L36
 492              		.loc 1 2387 0
 493 0004 5242     		rsbs	r2, r2, #0
2384:Generated_Source\PSoC4/CyLib.c **** 
 494              		.loc 1 2384 0
 495 0006 1868     		ldr	r0, [r3]
 496              	.LVL26:
2388:Generated_Source\PSoC4/CyLib.c **** 
2389:Generated_Source\PSoC4/CyLib.c ****     return (intState);
2390:Generated_Source\PSoC4/CyLib.c **** }
 497              		.loc 1 2390 0
 498              		@ sp needed
2387:Generated_Source\PSoC4/CyLib.c **** 
 499              		.loc 1 2387 0
 500 0008 1A60     		str	r2, [r3]
 501              		.loc 1 2390 0
 502 000a 7047     		bx	lr
 503              	.L37:
 504              		.align	2
 505              	.L36:
 506 000c 80E100E0 		.word	-536813184
 507              		.cfi_endproc
 508              	.LFE13:
 509              		.size	CyDisableInts, .-CyDisableInts
 510              		.section	.text.CyEnableInts,"ax",%progbits
 511              		.align	1
 512              		.global	CyEnableInts
 513              		.code	16
 514              		.thumb_func
 515              		.type	CyEnableInts, %function
 516              	CyEnableInts:
 517              	.LFB14:
2391:Generated_Source\PSoC4/CyLib.c **** 
2392:Generated_Source\PSoC4/CyLib.c **** 
2393:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2394:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2395:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2396:Generated_Source\PSoC4/CyLib.c **** *
2397:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2398:Generated_Source\PSoC4/CyLib.c **** *
2399:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2400:Generated_Source\PSoC4/CyLib.c **** *
2401:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2402:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2403:Generated_Source\PSoC4/CyLib.c **** {
 518              		.loc 1 2403 0
 519              		.cfi_startproc
 520              		@ args = 0, pretend = 0, frame = 0
 521              		@ frame_needed = 0, uses_anonymous_args = 0
 522              		@ link register save eliminated.
 523              	.LVL27:
2404:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 53


 524              		.loc 1 2404 0
 525 0000 014B     		ldr	r3, .L39
2405:Generated_Source\PSoC4/CyLib.c **** }
 526              		.loc 1 2405 0
 527              		@ sp needed
2404:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 528              		.loc 1 2404 0
 529 0002 1860     		str	r0, [r3]
 530              		.loc 1 2405 0
 531 0004 7047     		bx	lr
 532              	.L40:
 533 0006 C046     		.align	2
 534              	.L39:
 535 0008 00E100E0 		.word	-536813312
 536              		.cfi_endproc
 537              	.LFE14:
 538              		.size	CyEnableInts, .-CyEnableInts
 539              		.section	.text.CyIntSetSysVector,"ax",%progbits
 540              		.align	1
 541              		.global	CyIntSetSysVector
 542              		.code	16
 543              		.thumb_func
 544              		.type	CyIntSetSysVector, %function
 545              	CyIntSetSysVector:
 546              	.LFB15:
2406:Generated_Source\PSoC4/CyLib.c **** 
2407:Generated_Source\PSoC4/CyLib.c **** 
2408:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2409:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2410:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2411:Generated_Source\PSoC4/CyLib.c **** *
2412:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2413:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2414:Generated_Source\PSoC4/CyLib.c **** *
2415:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2416:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2417:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2418:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2419:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2420:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2421:Generated_Source\PSoC4/CyLib.c **** *
2422:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2423:Generated_Source\PSoC4/CyLib.c **** *
2424:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2425:Generated_Source\PSoC4/CyLib.c **** *
2426:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2427:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2428:Generated_Source\PSoC4/CyLib.c **** {
 547              		.loc 1 2428 0
 548              		.cfi_startproc
 549              		@ args = 0, pretend = 0, frame = 0
 550              		@ frame_needed = 0, uses_anonymous_args = 0
 551              		@ link register save eliminated.
 552              	.LVL28:
2429:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2430:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2431:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 54


2432:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2433:Generated_Source\PSoC4/CyLib.c **** 
2434:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2435:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
 553              		.loc 1 2435 0
 554 0000 8023     		movs	r3, #128
 555 0002 8000     		lsls	r0, r0, #2
 556              	.LVL29:
 557 0004 9B05     		lsls	r3, r3, #22
 558 0006 C318     		adds	r3, r0, r3
 559 0008 1868     		ldr	r0, [r3]
 560              	.LVL30:
2436:Generated_Source\PSoC4/CyLib.c **** 
2437:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2438:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
2439:Generated_Source\PSoC4/CyLib.c **** 
2440:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2441:Generated_Source\PSoC4/CyLib.c **** }
 561              		.loc 1 2441 0
 562              		@ sp needed
2438:Generated_Source\PSoC4/CyLib.c **** 
 563              		.loc 1 2438 0
 564 000a 1960     		str	r1, [r3]
 565              		.loc 1 2441 0
 566 000c 7047     		bx	lr
 567              		.cfi_endproc
 568              	.LFE15:
 569              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 570              		.section	.text.CyIntGetSysVector,"ax",%progbits
 571              		.align	1
 572              		.global	CyIntGetSysVector
 573              		.code	16
 574              		.thumb_func
 575              		.type	CyIntGetSysVector, %function
 576              	CyIntGetSysVector:
 577              	.LFB16:
2442:Generated_Source\PSoC4/CyLib.c **** 
2443:Generated_Source\PSoC4/CyLib.c **** 
2444:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2445:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2446:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2447:Generated_Source\PSoC4/CyLib.c **** *
2448:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2449:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2450:Generated_Source\PSoC4/CyLib.c **** *
2451:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2452:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2453:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2454:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2455:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2456:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2457:Generated_Source\PSoC4/CyLib.c **** *
2458:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2459:Generated_Source\PSoC4/CyLib.c **** *
2460:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2461:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2462:Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 55


 578              		.loc 1 2462 0
 579              		.cfi_startproc
 580              		@ args = 0, pretend = 0, frame = 0
 581              		@ frame_needed = 0, uses_anonymous_args = 0
 582              		@ link register save eliminated.
 583              	.LVL31:
2463:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2464:Generated_Source\PSoC4/CyLib.c **** 
2465:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2466:Generated_Source\PSoC4/CyLib.c **** 
2467:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
 584              		.loc 1 2467 0
 585 0000 8023     		movs	r3, #128
 586 0002 8000     		lsls	r0, r0, #2
 587              	.LVL32:
 588 0004 9B05     		lsls	r3, r3, #22
 589 0006 C018     		adds	r0, r0, r3
 590 0008 0068     		ldr	r0, [r0]
2468:Generated_Source\PSoC4/CyLib.c **** }
 591              		.loc 1 2468 0
 592              		@ sp needed
 593 000a 7047     		bx	lr
 594              		.cfi_endproc
 595              	.LFE16:
 596              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 597              		.section	.text.CyIntSetVector,"ax",%progbits
 598              		.align	1
 599              		.global	CyIntSetVector
 600              		.code	16
 601              		.thumb_func
 602              		.type	CyIntSetVector, %function
 603              	CyIntSetVector:
 604              	.LFB17:
2469:Generated_Source\PSoC4/CyLib.c **** 
2470:Generated_Source\PSoC4/CyLib.c **** 
2471:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2472:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2473:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2474:Generated_Source\PSoC4/CyLib.c **** *
2475:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2476:Generated_Source\PSoC4/CyLib.c **** *
2477:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2478:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2479:Generated_Source\PSoC4/CyLib.c **** *
2480:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2481:Generated_Source\PSoC4/CyLib.c **** *
2482:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2483:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2484:Generated_Source\PSoC4/CyLib.c **** {
 605              		.loc 1 2484 0
 606              		.cfi_startproc
 607              		@ args = 0, pretend = 0, frame = 0
 608              		@ frame_needed = 0, uses_anonymous_args = 0
 609              		@ link register save eliminated.
 610              	.LVL33:
2485:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2486:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 56


2487:Generated_Source\PSoC4/CyLib.c **** 
2488:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2489:Generated_Source\PSoC4/CyLib.c **** 
2490:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2491:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
 611              		.loc 1 2491 0
 612 0000 024B     		ldr	r3, .L44
 613 0002 8000     		lsls	r0, r0, #2
 614              	.LVL34:
 615 0004 C318     		adds	r3, r0, r3
 616 0006 1868     		ldr	r0, [r3]
 617              	.LVL35:
2492:Generated_Source\PSoC4/CyLib.c **** 
2493:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2494:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
2495:Generated_Source\PSoC4/CyLib.c **** 
2496:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2497:Generated_Source\PSoC4/CyLib.c **** }
 618              		.loc 1 2497 0
 619              		@ sp needed
2494:Generated_Source\PSoC4/CyLib.c **** 
 620              		.loc 1 2494 0
 621 0008 1960     		str	r1, [r3]
 622              		.loc 1 2497 0
 623 000a 7047     		bx	lr
 624              	.L45:
 625              		.align	2
 626              	.L44:
 627 000c 40000020 		.word	536870976
 628              		.cfi_endproc
 629              	.LFE17:
 630              		.size	CyIntSetVector, .-CyIntSetVector
 631              		.section	.text.CyIntGetVector,"ax",%progbits
 632              		.align	1
 633              		.global	CyIntGetVector
 634              		.code	16
 635              		.thumb_func
 636              		.type	CyIntGetVector, %function
 637              	CyIntGetVector:
 638              	.LFB18:
2498:Generated_Source\PSoC4/CyLib.c **** 
2499:Generated_Source\PSoC4/CyLib.c **** 
2500:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2501:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2502:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2503:Generated_Source\PSoC4/CyLib.c **** *
2504:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2505:Generated_Source\PSoC4/CyLib.c **** *
2506:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2507:Generated_Source\PSoC4/CyLib.c **** *
2508:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2509:Generated_Source\PSoC4/CyLib.c **** *
2510:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2511:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2512:Generated_Source\PSoC4/CyLib.c **** {
 639              		.loc 1 2512 0
 640              		.cfi_startproc
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 57


 641              		@ args = 0, pretend = 0, frame = 0
 642              		@ frame_needed = 0, uses_anonymous_args = 0
 643              		@ link register save eliminated.
 644              	.LVL36:
2513:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2514:Generated_Source\PSoC4/CyLib.c **** 
2515:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2516:Generated_Source\PSoC4/CyLib.c **** 
2517:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
 645              		.loc 1 2517 0
 646 0000 024B     		ldr	r3, .L47
 647 0002 8000     		lsls	r0, r0, #2
 648              	.LVL37:
 649 0004 C018     		adds	r0, r0, r3
 650 0006 0068     		ldr	r0, [r0]
2518:Generated_Source\PSoC4/CyLib.c **** }
 651              		.loc 1 2518 0
 652              		@ sp needed
 653 0008 7047     		bx	lr
 654              	.L48:
 655 000a C046     		.align	2
 656              	.L47:
 657 000c 40000020 		.word	536870976
 658              		.cfi_endproc
 659              	.LFE18:
 660              		.size	CyIntGetVector, .-CyIntGetVector
 661              		.section	.text.CyIntSetPriority,"ax",%progbits
 662              		.align	1
 663              		.global	CyIntSetPriority
 664              		.code	16
 665              		.thumb_func
 666              		.type	CyIntSetPriority, %function
 667              	CyIntSetPriority:
 668              	.LFB19:
2519:Generated_Source\PSoC4/CyLib.c **** 
2520:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2521:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2522:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2523:Generated_Source\PSoC4/CyLib.c **** *
2524:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2525:Generated_Source\PSoC4/CyLib.c **** *
2526:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2527:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2528:Generated_Source\PSoC4/CyLib.c **** *
2529:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2530:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2531:Generated_Source\PSoC4/CyLib.c **** {
 669              		.loc 1 2531 0
 670              		.cfi_startproc
 671              		@ args = 0, pretend = 0, frame = 0
 672              		@ frame_needed = 0, uses_anonymous_args = 0
 673              	.LVL38:
 674 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 675              		.cfi_def_cfa_offset 24
 676              		.cfi_offset 3, -24
 677              		.cfi_offset 4, -20
 678              		.cfi_offset 5, -16
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 58


 679              		.cfi_offset 6, -12
 680              		.cfi_offset 7, -8
 681              		.cfi_offset 14, -4
2532:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2533:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2534:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2535:Generated_Source\PSoC4/CyLib.c **** 
2536:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
2537:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2538:Generated_Source\PSoC4/CyLib.c **** 
2539:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
 682              		.loc 1 2539 0
 683 0002 0326     		movs	r6, #3
 684 0004 0500     		movs	r5, r0
 685 0006 3540     		ands	r5, r6
 686 0008 B540     		lsls	r5, r5, r6
2531:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 687              		.loc 1 2531 0
 688 000a 0F00     		movs	r7, r1
 689 000c 0400     		movs	r4, r0
 690              		.loc 1 2539 0
 691 000e 0635     		adds	r5, r5, #6
 692              	.LVL39:
2540:Generated_Source\PSoC4/CyLib.c **** 
2541:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
2542:Generated_Source\PSoC4/CyLib.c **** 
2543:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
2544:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 693              		.loc 1 2544 0
 694 0010 AE40     		lsls	r6, r6, r5
2545:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 695              		.loc 1 2545 0
 696 0012 AF40     		lsls	r7, r7, r5
2541:Generated_Source\PSoC4/CyLib.c **** 
 697              		.loc 1 2541 0
 698 0014 FFF7FEFF 		bl	CyEnterCriticalSection
 699              	.LVL40:
2543:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 700              		.loc 1 2543 0
 701 0018 A408     		lsrs	r4, r4, #2
 702 001a 054B     		ldr	r3, .L50
 703 001c A400     		lsls	r4, r4, #2
 704 001e E418     		adds	r4, r4, r3
 705 0020 2368     		ldr	r3, [r4]
 706              	.LVL41:
2546:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
2547:Generated_Source\PSoC4/CyLib.c **** 
2548:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
2549:Generated_Source\PSoC4/CyLib.c **** }
 707              		.loc 1 2549 0
 708              		@ sp needed
2544:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 709              		.loc 1 2544 0
 710 0022 B343     		bics	r3, r6
 711              	.LVL42:
2545:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 712              		.loc 1 2545 0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 59


 713 0024 1F43     		orrs	r7, r3
 714              	.LVL43:
2546:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 715              		.loc 1 2546 0
 716 0026 2760     		str	r7, [r4]
2548:Generated_Source\PSoC4/CyLib.c **** }
 717              		.loc 1 2548 0
 718 0028 FFF7FEFF 		bl	CyExitCriticalSection
 719              	.LVL44:
 720              	.LVL45:
 721              	.LVL46:
 722              		.loc 1 2549 0
 723 002c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 724              	.L51:
 725 002e C046     		.align	2
 726              	.L50:
 727 0030 00E400E0 		.word	-536812544
 728              		.cfi_endproc
 729              	.LFE19:
 730              		.size	CyIntSetPriority, .-CyIntSetPriority
 731              		.section	.text.CyIntGetPriority,"ax",%progbits
 732              		.align	1
 733              		.global	CyIntGetPriority
 734              		.code	16
 735              		.thumb_func
 736              		.type	CyIntGetPriority, %function
 737              	CyIntGetPriority:
 738              	.LFB20:
2550:Generated_Source\PSoC4/CyLib.c **** 
2551:Generated_Source\PSoC4/CyLib.c **** 
2552:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2553:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2554:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2555:Generated_Source\PSoC4/CyLib.c **** *
2556:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2557:Generated_Source\PSoC4/CyLib.c **** *
2558:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2559:Generated_Source\PSoC4/CyLib.c **** *
2560:Generated_Source\PSoC4/CyLib.c **** * \return
2561:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2562:Generated_Source\PSoC4/CyLib.c **** *
2563:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2564:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2565:Generated_Source\PSoC4/CyLib.c **** {
 739              		.loc 1 2565 0
 740              		.cfi_startproc
 741              		@ args = 0, pretend = 0, frame = 0
 742              		@ frame_needed = 0, uses_anonymous_args = 0
 743              		@ link register save eliminated.
 744              	.LVL47:
2566:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2567:Generated_Source\PSoC4/CyLib.c **** 
2568:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2569:Generated_Source\PSoC4/CyLib.c **** 
2570:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
 745              		.loc 1 2570 0
 746 0000 8308     		lsrs	r3, r0, #2
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 60


 747 0002 064A     		ldr	r2, .L53
 748 0004 9B00     		lsls	r3, r3, #2
 749 0006 9B18     		adds	r3, r3, r2
 750 0008 1968     		ldr	r1, [r3]
 751              	.LVL48:
2571:Generated_Source\PSoC4/CyLib.c **** 
2572:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
 752              		.loc 1 2572 0
 753 000a 0322     		movs	r2, #3
 754 000c 0300     		movs	r3, r0
 755 000e 1340     		ands	r3, r2
 756 0010 9340     		lsls	r3, r3, r2
 757 0012 0633     		adds	r3, r3, #6
 758 0014 D940     		lsrs	r1, r1, r3
 759              	.LVL49:
 760 0016 0800     		movs	r0, r1
 761              	.LVL50:
2573:Generated_Source\PSoC4/CyLib.c **** }
 762              		.loc 1 2573 0
 763              		@ sp needed
2572:Generated_Source\PSoC4/CyLib.c **** }
 764              		.loc 1 2572 0
 765 0018 1040     		ands	r0, r2
 766              		.loc 1 2573 0
 767 001a 7047     		bx	lr
 768              	.L54:
 769              		.align	2
 770              	.L53:
 771 001c 00E400E0 		.word	-536812544
 772              		.cfi_endproc
 773              	.LFE20:
 774              		.size	CyIntGetPriority, .-CyIntGetPriority
 775              		.section	.text.CyIntEnable,"ax",%progbits
 776              		.align	1
 777              		.global	CyIntEnable
 778              		.code	16
 779              		.thumb_func
 780              		.type	CyIntEnable, %function
 781              	CyIntEnable:
 782              	.LFB21:
2574:Generated_Source\PSoC4/CyLib.c **** 
2575:Generated_Source\PSoC4/CyLib.c **** 
2576:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2577:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2578:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2579:Generated_Source\PSoC4/CyLib.c **** *
2580:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2581:Generated_Source\PSoC4/CyLib.c **** *
2582:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2583:Generated_Source\PSoC4/CyLib.c **** *
2584:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2585:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2586:Generated_Source\PSoC4/CyLib.c **** {
 783              		.loc 1 2586 0
 784              		.cfi_startproc
 785              		@ args = 0, pretend = 0, frame = 0
 786              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 61


 787              		@ link register save eliminated.
 788              	.LVL51:
2587:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 789              		.loc 1 2587 0
 790 0000 1F23     		movs	r3, #31
 791 0002 1840     		ands	r0, r3
 792              	.LVL52:
 793 0004 1E3B     		subs	r3, r3, #30
 794 0006 8340     		lsls	r3, r3, r0
 795 0008 014A     		ldr	r2, .L56
2588:Generated_Source\PSoC4/CyLib.c **** }
 796              		.loc 1 2588 0
 797              		@ sp needed
2587:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 798              		.loc 1 2587 0
 799 000a 1360     		str	r3, [r2]
 800              		.loc 1 2588 0
 801 000c 7047     		bx	lr
 802              	.L57:
 803 000e C046     		.align	2
 804              	.L56:
 805 0010 00E100E0 		.word	-536813312
 806              		.cfi_endproc
 807              	.LFE21:
 808              		.size	CyIntEnable, .-CyIntEnable
 809              		.section	.text.CyIntGetState,"ax",%progbits
 810              		.align	1
 811              		.global	CyIntGetState
 812              		.code	16
 813              		.thumb_func
 814              		.type	CyIntGetState, %function
 815              	CyIntGetState:
 816              	.LFB22:
2589:Generated_Source\PSoC4/CyLib.c **** 
2590:Generated_Source\PSoC4/CyLib.c **** 
2591:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2592:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2593:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2594:Generated_Source\PSoC4/CyLib.c **** *
2595:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2596:Generated_Source\PSoC4/CyLib.c **** *
2597:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2598:Generated_Source\PSoC4/CyLib.c **** *
2599:Generated_Source\PSoC4/CyLib.c **** * \return
2600:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2601:Generated_Source\PSoC4/CyLib.c **** *
2602:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2603:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2604:Generated_Source\PSoC4/CyLib.c **** {
 817              		.loc 1 2604 0
 818              		.cfi_startproc
 819              		@ args = 0, pretend = 0, frame = 0
 820              		@ frame_needed = 0, uses_anonymous_args = 0
 821              		@ link register save eliminated.
 822              	.LVL53:
2605:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2606:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 62


 823              		.loc 1 2606 0
 824 0000 1F22     		movs	r2, #31
 825 0002 044B     		ldr	r3, .L59
 826 0004 1040     		ands	r0, r2
 827              	.LVL54:
 828 0006 1B68     		ldr	r3, [r3]
2607:Generated_Source\PSoC4/CyLib.c **** }
 829              		.loc 1 2607 0
 830              		@ sp needed
2606:Generated_Source\PSoC4/CyLib.c **** }
 831              		.loc 1 2606 0
 832 0008 C340     		lsrs	r3, r3, r0
 833 000a 1800     		movs	r0, r3
 834 000c 0123     		movs	r3, #1
 835 000e 1840     		ands	r0, r3
 836              		.loc 1 2607 0
 837 0010 7047     		bx	lr
 838              	.L60:
 839 0012 C046     		.align	2
 840              	.L59:
 841 0014 00E100E0 		.word	-536813312
 842              		.cfi_endproc
 843              	.LFE22:
 844              		.size	CyIntGetState, .-CyIntGetState
 845              		.section	.text.CyIntDisable,"ax",%progbits
 846              		.align	1
 847              		.global	CyIntDisable
 848              		.code	16
 849              		.thumb_func
 850              		.type	CyIntDisable, %function
 851              	CyIntDisable:
 852              	.LFB23:
2608:Generated_Source\PSoC4/CyLib.c **** 
2609:Generated_Source\PSoC4/CyLib.c **** 
2610:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2611:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2612:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2613:Generated_Source\PSoC4/CyLib.c **** *
2614:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2615:Generated_Source\PSoC4/CyLib.c **** *
2616:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2617:Generated_Source\PSoC4/CyLib.c **** *
2618:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2619:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2620:Generated_Source\PSoC4/CyLib.c **** {
 853              		.loc 1 2620 0
 854              		.cfi_startproc
 855              		@ args = 0, pretend = 0, frame = 0
 856              		@ frame_needed = 0, uses_anonymous_args = 0
 857              		@ link register save eliminated.
 858              	.LVL55:
2621:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 859              		.loc 1 2621 0
 860 0000 1F23     		movs	r3, #31
 861 0002 1840     		ands	r0, r3
 862              	.LVL56:
 863 0004 1E3B     		subs	r3, r3, #30
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 63


 864 0006 8340     		lsls	r3, r3, r0
 865 0008 014A     		ldr	r2, .L62
2622:Generated_Source\PSoC4/CyLib.c **** }
 866              		.loc 1 2622 0
 867              		@ sp needed
2621:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 868              		.loc 1 2621 0
 869 000a 1360     		str	r3, [r2]
 870              		.loc 1 2622 0
 871 000c 7047     		bx	lr
 872              	.L63:
 873 000e C046     		.align	2
 874              	.L62:
 875 0010 80E100E0 		.word	-536813184
 876              		.cfi_endproc
 877              	.LFE23:
 878              		.size	CyIntDisable, .-CyIntDisable
 879              		.section	.text.CyIntSetPending,"ax",%progbits
 880              		.align	1
 881              		.global	CyIntSetPending
 882              		.code	16
 883              		.thumb_func
 884              		.type	CyIntSetPending, %function
 885              	CyIntSetPending:
 886              	.LFB24:
2623:Generated_Source\PSoC4/CyLib.c **** 
2624:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2625:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2626:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2627:Generated_Source\PSoC4/CyLib.c **** *
2628:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2629:Generated_Source\PSoC4/CyLib.c **** *
2630:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2631:Generated_Source\PSoC4/CyLib.c **** *
2632:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2633:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2634:Generated_Source\PSoC4/CyLib.c **** {
 887              		.loc 1 2634 0
 888              		.cfi_startproc
 889              		@ args = 0, pretend = 0, frame = 0
 890              		@ frame_needed = 0, uses_anonymous_args = 0
 891              		@ link register save eliminated.
 892              	.LVL57:
2635:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 893              		.loc 1 2635 0
 894 0000 1F23     		movs	r3, #31
 895 0002 1840     		ands	r0, r3
 896              	.LVL58:
 897 0004 1E3B     		subs	r3, r3, #30
 898 0006 8340     		lsls	r3, r3, r0
 899 0008 014A     		ldr	r2, .L65
2636:Generated_Source\PSoC4/CyLib.c **** }
 900              		.loc 1 2636 0
 901              		@ sp needed
2635:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 902              		.loc 1 2635 0
 903 000a 1360     		str	r3, [r2]
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 64


 904              		.loc 1 2636 0
 905 000c 7047     		bx	lr
 906              	.L66:
 907 000e C046     		.align	2
 908              	.L65:
 909 0010 00E200E0 		.word	-536813056
 910              		.cfi_endproc
 911              	.LFE24:
 912              		.size	CyIntSetPending, .-CyIntSetPending
 913              		.section	.text.CyIntClearPending,"ax",%progbits
 914              		.align	1
 915              		.global	CyIntClearPending
 916              		.code	16
 917              		.thumb_func
 918              		.type	CyIntClearPending, %function
 919              	CyIntClearPending:
 920              	.LFB25:
2637:Generated_Source\PSoC4/CyLib.c **** 
2638:Generated_Source\PSoC4/CyLib.c **** 
2639:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2640:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2641:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2642:Generated_Source\PSoC4/CyLib.c **** *
2643:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2644:Generated_Source\PSoC4/CyLib.c **** *
2645:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2646:Generated_Source\PSoC4/CyLib.c **** *
2647:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2648:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2649:Generated_Source\PSoC4/CyLib.c **** {
 921              		.loc 1 2649 0
 922              		.cfi_startproc
 923              		@ args = 0, pretend = 0, frame = 0
 924              		@ frame_needed = 0, uses_anonymous_args = 0
 925              		@ link register save eliminated.
 926              	.LVL59:
2650:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 927              		.loc 1 2650 0
 928 0000 1F23     		movs	r3, #31
 929 0002 1840     		ands	r0, r3
 930              	.LVL60:
 931 0004 1E3B     		subs	r3, r3, #30
 932 0006 8340     		lsls	r3, r3, r0
 933 0008 014A     		ldr	r2, .L68
2651:Generated_Source\PSoC4/CyLib.c **** }
 934              		.loc 1 2651 0
 935              		@ sp needed
2650:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 936              		.loc 1 2650 0
 937 000a 1360     		str	r3, [r2]
 938              		.loc 1 2651 0
 939 000c 7047     		bx	lr
 940              	.L69:
 941 000e C046     		.align	2
 942              	.L68:
 943 0010 80E200E0 		.word	-536812928
 944              		.cfi_endproc
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 65


 945              	.LFE25:
 946              		.size	CyIntClearPending, .-CyIntClearPending
 947              		.section	.text.CyHalt,"ax",%progbits
 948              		.align	1
 949              		.global	CyHalt
 950              		.code	16
 951              		.thumb_func
 952              		.type	CyHalt, %function
 953              	CyHalt:
 954              	.LFB26:
2652:Generated_Source\PSoC4/CyLib.c **** 
2653:Generated_Source\PSoC4/CyLib.c **** 
2654:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2655:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2656:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2657:Generated_Source\PSoC4/CyLib.c **** *
2658:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2659:Generated_Source\PSoC4/CyLib.c **** *
2660:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
2661:Generated_Source\PSoC4/CyLib.c **** *
2662:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2663:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2664:Generated_Source\PSoC4/CyLib.c **** {
 955              		.loc 1 2664 0
 956              		.cfi_startproc
 957              		@ args = 0, pretend = 0, frame = 0
 958              		@ frame_needed = 0, uses_anonymous_args = 0
 959              		@ link register save eliminated.
 960              	.LVL61:
2665:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2666:Generated_Source\PSoC4/CyLib.c ****     {
2667:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2668:Generated_Source\PSoC4/CyLib.c ****     }
2669:Generated_Source\PSoC4/CyLib.c **** 
2670:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2671:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2672:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2673:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 961              		.loc 1 2673 0
 962              		.syntax divided
 963              	@ 2673 "Generated_Source\PSoC4\CyLib.c" 1
 964 0000 01BE     		    bkpt    1
 965              	@ 0 "" 2
2674:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2675:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2676:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2677:Generated_Source\PSoC4/CyLib.c **** }
 966              		.loc 1 2677 0
 967              		.thumb
 968              		.syntax unified
 969              		@ sp needed
 970 0002 7047     		bx	lr
 971              		.cfi_endproc
 972              	.LFE26:
 973              		.size	CyHalt, .-CyHalt
 974              		.section	.text.CySoftwareReset,"ax",%progbits
 975              		.align	1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 66


 976              		.global	CySoftwareReset
 977              		.code	16
 978              		.thumb_func
 979              		.type	CySoftwareReset, %function
 980              	CySoftwareReset:
 981              	.LFB27:
2678:Generated_Source\PSoC4/CyLib.c **** 
2679:Generated_Source\PSoC4/CyLib.c **** 
2680:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2681:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2682:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2683:Generated_Source\PSoC4/CyLib.c **** *
2684:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2685:Generated_Source\PSoC4/CyLib.c **** *
2686:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2687:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2688:Generated_Source\PSoC4/CyLib.c **** {
 982              		.loc 1 2688 0
 983              		.cfi_startproc
 984              		@ args = 0, pretend = 0, frame = 0
 985              		@ frame_needed = 0, uses_anonymous_args = 0
 986              		@ link register save eliminated.
2689:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2690:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2691:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2692:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2693:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 987              		.loc 1 2693 0
 988 0000 034A     		ldr	r2, .L72
2694:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 989              		.loc 1 2694 0
 990 0002 0449     		ldr	r1, .L72+4
2693:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 991              		.loc 1 2693 0
 992 0004 1368     		ldr	r3, [r2]
2695:Generated_Source\PSoC4/CyLib.c **** }
 993              		.loc 1 2695 0
 994              		@ sp needed
2694:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 995              		.loc 1 2694 0
 996 0006 9BB2     		uxth	r3, r3
 997 0008 0B43     		orrs	r3, r1
2693:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 998              		.loc 1 2693 0
 999 000a 1360     		str	r3, [r2]
 1000              		.loc 1 2695 0
 1001 000c 7047     		bx	lr
 1002              	.L73:
 1003 000e C046     		.align	2
 1004              	.L72:
 1005 0010 0CED00E0 		.word	-536810228
 1006 0014 0400FA05 		.word	100270084
 1007              		.cfi_endproc
 1008              	.LFE27:
 1009              		.size	CySoftwareReset, .-CySoftwareReset
 1010              		.section	.text.CyDelay,"ax",%progbits
 1011              		.align	1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 67


 1012              		.global	CyDelay
 1013              		.code	16
 1014              		.thumb_func
 1015              		.type	CyDelay, %function
 1016              	CyDelay:
 1017              	.LFB28:
2696:Generated_Source\PSoC4/CyLib.c **** 
2697:Generated_Source\PSoC4/CyLib.c **** 
2698:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2699:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2700:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2701:Generated_Source\PSoC4/CyLib.c **** *
2702:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2703:Generated_Source\PSoC4/CyLib.c **** *
2704:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
2705:Generated_Source\PSoC4/CyLib.c **** *
2706:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2707:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2708:Generated_Source\PSoC4/CyLib.c **** {
 1018              		.loc 1 2708 0
 1019              		.cfi_startproc
 1020              		@ args = 0, pretend = 0, frame = 0
 1021              		@ frame_needed = 0, uses_anonymous_args = 0
 1022              	.LVL62:
 1023 0000 70B5     		push	{r4, r5, r6, lr}
 1024              		.cfi_def_cfa_offset 16
 1025              		.cfi_offset 4, -16
 1026              		.cfi_offset 5, -12
 1027              		.cfi_offset 6, -8
 1028              		.cfi_offset 14, -4
2709:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1029              		.loc 1 2709 0
 1030 0002 8025     		movs	r5, #128
2708:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1031              		.loc 1 2708 0
 1032 0004 0400     		movs	r4, r0
 1033              		.loc 1 2709 0
 1034 0006 2D02     		lsls	r5, r5, #8
 1035              	.LVL63:
 1036              	.L75:
 1037 0008 064B     		ldr	r3, .L78
 1038 000a AC42     		cmp	r4, r5
 1039 000c 05D9     		bls	.L77
2710:Generated_Source\PSoC4/CyLib.c ****     {
2711:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2712:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2713:Generated_Source\PSoC4/CyLib.c ****          */
2714:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 1040              		.loc 1 2714 0
 1041 000e 5868     		ldr	r0, [r3, #4]
 1042 0010 FFF7FEFF 		bl	CyDelayCycles
 1043              	.LVL64:
2715:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1044              		.loc 1 2715 0
 1045 0014 044B     		ldr	r3, .L78+4
 1046 0016 E418     		adds	r4, r4, r3
 1047              	.LVL65:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 68


 1048 0018 F6E7     		b	.L75
 1049              	.L77:
2716:Generated_Source\PSoC4/CyLib.c ****     }
2717:Generated_Source\PSoC4/CyLib.c **** 
2718:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 1050              		.loc 1 2718 0
 1051 001a 9868     		ldr	r0, [r3, #8]
2719:Generated_Source\PSoC4/CyLib.c **** }
 1052              		.loc 1 2719 0
 1053              		@ sp needed
2718:Generated_Source\PSoC4/CyLib.c **** }
 1054              		.loc 1 2718 0
 1055 001c 6043     		muls	r0, r4
 1056 001e FFF7FEFF 		bl	CyDelayCycles
 1057              	.LVL66:
 1058              	.LVL67:
 1059              		.loc 1 2719 0
 1060 0022 70BD     		pop	{r4, r5, r6, pc}
 1061              	.L79:
 1062              		.align	2
 1063              	.L78:
 1064 0024 00000000 		.word	.LANCHOR0
 1065 0028 0080FFFF 		.word	-32768
 1066              		.cfi_endproc
 1067              	.LFE28:
 1068              		.size	CyDelay, .-CyDelay
 1069              		.section	.text.CySysClkImoEnableWcoLock,"ax",%progbits
 1070              		.align	1
 1071              		.global	CySysClkImoEnableWcoLock
 1072              		.code	16
 1073              		.thumb_func
 1074              		.type	CySysClkImoEnableWcoLock, %function
 1075              	CySysClkImoEnableWcoLock:
 1076              	.LFB3:
 167:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 1077              		.loc 1 167 0
 1078              		.cfi_startproc
 1079              		@ args = 0, pretend = 0, frame = 16
 1080              		@ frame_needed = 0, uses_anonymous_args = 0
 1081              	.LVL68:
 1082 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1083              		.cfi_def_cfa_offset 20
 1084              		.cfi_offset 4, -20
 1085              		.cfi_offset 5, -16
 1086              		.cfi_offset 6, -12
 1087              		.cfi_offset 7, -8
 1088              		.cfi_offset 14, -4
 1089 0002 85B0     		sub	sp, sp, #20
 1090              		.cfi_def_cfa_offset 40
 178:Generated_Source\PSoC4/CyLib.c ****         {
 1091              		.loc 1 178 0
 1092 0004 FFF7FEFF 		bl	CySysClkWcoEnabled
 1093              	.LVL69:
 1094 0008 0028     		cmp	r0, #0
 1095 000a 46D0     		beq	.L80
 1096              	.LBB12:
 1097              	.LBB13:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 69


 180:Generated_Source\PSoC4/CyLib.c **** 
 1098              		.loc 1 180 0
 1099 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1100              	.LVL70:
 214:Generated_Source\PSoC4/CyLib.c ****             
 1101              		.loc 1 214 0
 1102 0010 0024     		movs	r4, #0
 205:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 1103              		.loc 1 205 0
 1104 0012 234A     		ldr	r2, .L87
 203:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 1105              		.loc 1 203 0
 1106 0014 234B     		ldr	r3, .L87+4
 180:Generated_Source\PSoC4/CyLib.c **** 
 1107              		.loc 1 180 0
 1108 0016 0190     		str	r0, [sp, #4]
 1109              	.LVL71:
 203:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 1110              		.loc 1 203 0
 1111 0018 1B68     		ldr	r3, [r3]
 205:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 1112              		.loc 1 205 0
 1113 001a 1068     		ldr	r0, [r2]
 1114              	.LVL72:
 214:Generated_Source\PSoC4/CyLib.c ****             
 1115              		.loc 1 214 0
 1116 001c 224A     		ldr	r2, .L87+8
 225:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 1117              		.loc 1 225 0
 1118 001e 234D     		ldr	r5, .L87+12
 214:Generated_Source\PSoC4/CyLib.c ****             
 1119              		.loc 1 214 0
 1120 0020 1460     		str	r4, [r2]
 225:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 1121              		.loc 1 225 0
 1122 0022 2968     		ldr	r1, [r5]
 1123              	.LVL73:
 1124 0024 224A     		ldr	r2, .L87+16
 234:Generated_Source\PSoC4/CyLib.c **** 
 1125              		.loc 1 234 0
 1126 0026 9B00     		lsls	r3, r3, #2
 1127              	.LVL74:
 1128 0028 1140     		ands	r1, r2
 1129              	.LVL75:
 1130 002a A022     		movs	r2, #160
 1131 002c 5203     		lsls	r2, r2, #13
 1132 002e 1143     		orrs	r1, r2
 1133              	.LVL76:
 1134 0030 1C22     		movs	r2, #28
 1135 0032 1340     		ands	r3, r2
 1136              	.LVL77:
 1137 0034 0207     		lsls	r2, r0, #28
 1138 0036 920F     		lsrs	r2, r2, #30
 1139 0038 1833     		adds	r3, r3, #24
 1140 003a D340     		lsrs	r3, r3, r2
 1141 003c 1D4A     		ldr	r2, .L87+20
 238:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 70


 1142              		.loc 1 238 0
 1143 003e 1E4E     		ldr	r6, .L87+24
 234:Generated_Source\PSoC4/CyLib.c **** 
 1144              		.loc 1 234 0
 1145 0040 5343     		muls	r3, r2
 1146 0042 8022     		movs	r2, #128
 1147 0044 D201     		lsls	r2, r2, #7
 1148 0046 9B18     		adds	r3, r3, r2
 1149 0048 DB0B     		lsrs	r3, r3, #15
 1150 004a 013B     		subs	r3, r3, #1
 1151 004c 0B43     		orrs	r3, r1
 1152              	.LVL78:
 236:Generated_Source\PSoC4/CyLib.c ****             
 1153              		.loc 1 236 0
 1154 004e 2B60     		str	r3, [r5]
 238:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 1155              		.loc 1 238 0
 1156 0050 3368     		ldr	r3, [r6]
 1157              	.LVL79:
 239:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 1158              		.loc 1 239 0
 1159 0052 3020     		movs	r0, #48
 238:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 1160              		.loc 1 238 0
 1161 0054 0393     		str	r3, [sp, #12]
 1162              	.LVL80:
 239:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 1163              		.loc 1 239 0
 1164 0056 FFF7FEFF 		bl	CySysFlashSetWaitCycles
 1165              	.LVL81:
 240:Generated_Source\PSoC4/CyLib.c **** 
 1166              		.loc 1 240 0
 1167 005a 8021     		movs	r1, #128
 1168 005c 174A     		ldr	r2, .L87+28
 1169 005e C905     		lsls	r1, r1, #23
 1170 0060 1368     		ldr	r3, [r2]
 1171 0062 0B43     		orrs	r3, r1
 1172 0064 1360     		str	r3, [r2]
 242:Generated_Source\PSoC4/CyLib.c ****             
 1173              		.loc 1 242 0
 1174 0066 2A68     		ldr	r2, [r5]
 1175 0068 154B     		ldr	r3, .L87+32
 1176 006a 1A40     		ands	r2, r3
 1177 006c 1700     		movs	r7, r2
 1178              	.LVL82:
 1179              	.L82:
 246:Generated_Source\PSoC4/CyLib.c ****                 lfLimit += CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_STEP;
 1180              		.loc 1 246 0
 1181 006e 0120     		movs	r0, #1
 247:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT
 1182              		.loc 1 247 0
 1183 0070 1034     		adds	r4, r4, #16
 1184              	.LVL83:
 246:Generated_Source\PSoC4/CyLib.c ****                 lfLimit += CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_STEP;
 1185              		.loc 1 246 0
 1186 0072 FFF7FEFF 		bl	CyDelay
 1187              	.LVL84:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 71


 248:Generated_Source\PSoC4/CyLib.c ****             }
 1188              		.loc 1 248 0
 1189 0076 A305     		lsls	r3, r4, #22
 1190 0078 3B43     		orrs	r3, r7
 1191 007a 2B60     		str	r3, [r5]
 244:Generated_Source\PSoC4/CyLib.c ****             {
 1192              		.loc 1 244 0
 1193 007c F02C     		cmp	r4, #240
 1194 007e F6D1     		bne	.L82
 251:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << 
 1195              		.loc 1 251 0
 1196 0080 0120     		movs	r0, #1
 1197 0082 FFF7FEFF 		bl	CyDelay
 1198              	.LVL85:
 252:Generated_Source\PSoC4/CyLib.c ****                                                  CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT));
 1199              		.loc 1 252 0
 1200 0086 FF23     		movs	r3, #255
 1201 0088 084A     		ldr	r2, .L87+12
 1202 008a 9B05     		lsls	r3, r3, #22
 1203 008c 3B43     		orrs	r3, r7
 1204 008e 1360     		str	r3, [r2]
 255:Generated_Source\PSoC4/CyLib.c **** 
 1205              		.loc 1 255 0
 1206 0090 039B     		ldr	r3, [sp, #12]
 257:Generated_Source\PSoC4/CyLib.c ****         }
 1207              		.loc 1 257 0
 1208 0092 0198     		ldr	r0, [sp, #4]
 255:Generated_Source\PSoC4/CyLib.c **** 
 1209              		.loc 1 255 0
 1210 0094 3360     		str	r3, [r6]
 257:Generated_Source\PSoC4/CyLib.c ****         }
 1211              		.loc 1 257 0
 1212 0096 FFF7FEFF 		bl	CyExitCriticalSection
 1213              	.LVL86:
 1214              	.L80:
 1215              	.LBE13:
 1216              	.LBE12:
 259:Generated_Source\PSoC4/CyLib.c **** 
 1217              		.loc 1 259 0
 1218 009a 05B0     		add	sp, sp, #20
 1219              		@ sp needed
 1220 009c F0BD     		pop	{r4, r5, r6, r7, pc}
 1221              	.L88:
 1222 009e C046     		.align	2
 1223              	.L87:
 1224 00a0 28000340 		.word	1073938472
 1225 00a4 080F0340 		.word	1073942280
 1226 00a8 0C0F0340 		.word	1073942284
 1227 00ac 08000740 		.word	1074200584
 1228 00b0 00F800C0 		.word	-1073678336
 1229 00b4 40420F00 		.word	1000000
 1230 00b8 30001040 		.word	1074790448
 1231 00bc 00000740 		.word	1074200576
 1232 00c0 FFFF3FC0 		.word	-1069547521
 1233              		.cfi_endproc
 1234              	.LFE3:
 1235              		.size	CySysClkImoEnableWcoLock, .-CySysClkImoEnableWcoLock
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 72


 1236              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 1237              		.align	1
 1238              		.global	CySysClkWriteImoFreq
 1239              		.code	16
 1240              		.thumb_func
 1241              		.type	CySysClkWriteImoFreq, %function
 1242              	CySysClkWriteImoFreq:
 1243              	.LFB10:
 953:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 1244              		.loc 1 953 0
 1245              		.cfi_startproc
 1246              		@ args = 0, pretend = 0, frame = 8
 1247              		@ frame_needed = 0, uses_anonymous_args = 0
 1248              	.LVL87:
 1249 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 1250              		.cfi_def_cfa_offset 32
 1251              		.cfi_offset 0, -32
 1252              		.cfi_offset 1, -28
 1253              		.cfi_offset 2, -24
 1254              		.cfi_offset 4, -20
 1255              		.cfi_offset 5, -16
 1256              		.cfi_offset 6, -12
 1257              		.cfi_offset 7, -8
 1258              		.cfi_offset 14, -4
 970:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 1259              		.loc 1 970 0
 1260 0002 0500     		movs	r5, r0
 1261 0004 183D     		subs	r5, r5, #24
 953:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 1262              		.loc 1 953 0
 1263 0006 0400     		movs	r4, r0
 970:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 1264              		.loc 1 970 0
 1265 0008 182D     		cmp	r5, #24
 1266 000a 45D8     		bhi	.L89
 1267 000c 0126     		movs	r6, #1
 1268 000e 234B     		ldr	r3, .L99
 1269 0010 3700     		movs	r7, r6
 1270 0012 EB40     		lsrs	r3, r3, r5
 1271 0014 9F43     		bics	r7, r3
 1272 0016 3FD1     		bne	.L89
 975:Generated_Source\PSoC4/CyLib.c **** 
 1273              		.loc 1 975 0
 1274 0018 FFF7FEFF 		bl	CyEnterCriticalSection
 1275              	.LVL88:
 1276 001c 0190     		str	r0, [sp, #4]
 1277              	.LVL89:
 978:Generated_Source\PSoC4/CyLib.c ****                 {
 1278              		.loc 1 978 0
 1279 001e FFF7FEFF 		bl	CySysClkImoGetWcoLock
 1280              	.LVL90:
 958:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 1281              		.loc 1 958 0
 1282 0022 0097     		str	r7, [sp]
 978:Generated_Source\PSoC4/CyLib.c ****                 {
 1283              		.loc 1 978 0
 1284 0024 0028     		cmp	r0, #0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 73


 1285 0026 02D0     		beq	.L91
 1286              	.LVL91:
 981:Generated_Source\PSoC4/CyLib.c ****                 }
 1287              		.loc 1 981 0
 1288 0028 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
 1289              	.LVL92:
 980:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 1290              		.loc 1 980 0
 1291 002c 0096     		str	r6, [sp]
 1292              	.LVL93:
 1293              	.L91:
1006:Generated_Source\PSoC4/CyLib.c **** 
 1294              		.loc 1 1006 0
 1295 002e 0727     		movs	r7, #7
 1296 0030 1B4E     		ldr	r6, .L99+4
1026:Generated_Source\PSoC4/CyLib.c **** 
 1297              		.loc 1 1026 0
 1298 0032 1C4A     		ldr	r2, .L99+8
1006:Generated_Source\PSoC4/CyLib.c **** 
 1299              		.loc 1 1006 0
 1300 0034 3368     		ldr	r3, [r6]
1032:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 1301              		.loc 1 1032 0
 1302 0036 1C49     		ldr	r1, .L99+12
1006:Generated_Source\PSoC4/CyLib.c **** 
 1303              		.loc 1 1006 0
 1304 0038 BB43     		bics	r3, r7
 1305 003a 3360     		str	r3, [r6]
1024:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 1306              		.loc 1 1024 0
 1307 003c 1B4B     		ldr	r3, .L99+16
 1308 003e E318     		adds	r3, r4, r3
 1309 0040 1B78     		ldrb	r3, [r3]
 1310 0042 DBB2     		uxtb	r3, r3
 1311              	.LVL94:
1026:Generated_Source\PSoC4/CyLib.c **** 
 1312              		.loc 1 1026 0
 1313 0044 1360     		str	r3, [r2]
1029:Generated_Source\PSoC4/CyLib.c **** 
 1314              		.loc 1 1029 0
 1315 0046 1A4A     		ldr	r2, .L99+20
 1316 0048 1368     		ldr	r3, [r2]
 1317              	.LVL95:
 1318 004a BB43     		bics	r3, r7
 1319 004c 1360     		str	r3, [r2]
 1320              	.LVL96:
1033:Generated_Source\PSoC4/CyLib.c **** 
 1321              		.loc 1 1033 0
 1322 004e 194B     		ldr	r3, .L99+24
1032:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 1323              		.loc 1 1032 0
 1324 0050 0A68     		ldr	r2, [r1]
1033:Generated_Source\PSoC4/CyLib.c **** 
 1325              		.loc 1 1033 0
 1326 0052 E318     		adds	r3, r4, r3
 1327 0054 1878     		ldrb	r0, [r3]
1032:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 74


 1328              		.loc 1 1032 0
 1329 0056 7F23     		movs	r3, #127
 1330 0058 9A43     		bics	r2, r3
 1331 005a 0340     		ands	r3, r0
 1332 005c 1343     		orrs	r3, r2
 1333 005e 0B60     		str	r3, [r1]
1035:Generated_Source\PSoC4/CyLib.c **** 
 1334              		.loc 1 1035 0
 1335 0060 3220     		movs	r0, #50
 1336 0062 FFF7FEFF 		bl	CyDelayCycles
 1337              	.LVL97:
1037:Generated_Source\PSoC4/CyLib.c ****             {
 1338              		.loc 1 1037 0
 1339 0066 182C     		cmp	r4, #24
 1340 0068 0ED0     		beq	.L92
1040:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 1341              		.loc 1 1040 0
 1342 006a 3368     		ldr	r3, [r6]
 1343 006c 1C3C     		subs	r4, r4, #28
 1344              	.LVL98:
 1345 006e A408     		lsrs	r4, r4, #2
 1346              	.LVL99:
 1347 0070 BB43     		bics	r3, r7
 1348 0072 3C40     		ands	r4, r7
 1349 0074 1C43     		orrs	r4, r3
 1350 0076 3460     		str	r4, [r6]
1043:Generated_Source\PSoC4/CyLib.c **** 
 1351              		.loc 1 1043 0
 1352 0078 3220     		movs	r0, #50
 1353 007a FFF7FEFF 		bl	CyDelayCycles
 1354              	.LVL100:
1047:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 1355              		.loc 1 1047 0
 1356 007e 3368     		ldr	r3, [r6]
1048:Generated_Source\PSoC4/CyLib.c ****             }
 1357              		.loc 1 1048 0
 1358 0080 AD08     		lsrs	r5, r5, #2
 1359              	.LVL101:
1047:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 1360              		.loc 1 1047 0
 1361 0082 BB43     		bics	r3, r7
 1362 0084 1D43     		orrs	r5, r3
 1363 0086 3560     		str	r5, [r6]
 1364              	.L92:
1052:Generated_Source\PSoC4/CyLib.c ****                 {
 1365              		.loc 1 1052 0
 1366 0088 009B     		ldr	r3, [sp]
 1367 008a 012B     		cmp	r3, #1
 1368 008c 01D1     		bne	.L93
1054:Generated_Source\PSoC4/CyLib.c ****                 }
 1369              		.loc 1 1054 0
 1370 008e FFF7FEFF 		bl	CySysClkImoEnableWcoLock
 1371              	.LVL102:
 1372              	.L93:
1066:Generated_Source\PSoC4/CyLib.c ****         }
 1373              		.loc 1 1066 0
 1374 0092 0198     		ldr	r0, [sp, #4]
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 75


 1375 0094 FFF7FEFF 		bl	CyExitCriticalSection
 1376              	.LVL103:
 1377              	.L89:
1073:Generated_Source\PSoC4/CyLib.c **** 
 1378              		.loc 1 1073 0
 1379              		@ sp needed
 1380 0098 F7BD     		pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 1381              	.L100:
 1382 009a C046     		.align	2
 1383              	.L99:
 1384 009c 11111101 		.word	17895697
 1385 00a0 080F0340 		.word	1073942280
 1386 00a4 0C0F0340 		.word	1073942284
 1387 00a8 180F0340 		.word	1073942296
 1388 00ac CDF1FF0F 		.word	268431821
 1389 00b0 100F0340 		.word	1073942288
 1390 00b4 B4F1FF0F 		.word	268431796
 1391              		.cfi_endproc
 1392              	.LFE10:
 1393              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 1394              		.section	.text.CyDelayUs,"ax",%progbits
 1395              		.align	1
 1396              		.global	CyDelayUs
 1397              		.code	16
 1398              		.thumb_func
 1399              		.type	CyDelayUs, %function
 1400              	CyDelayUs:
 1401              	.LFB29:
2720:Generated_Source\PSoC4/CyLib.c **** 
2721:Generated_Source\PSoC4/CyLib.c **** 
2722:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2723:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2724:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2725:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2726:Generated_Source\PSoC4/CyLib.c **** *
2727:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
2728:Generated_Source\PSoC4/CyLib.c **** *
2729:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2730:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2731:Generated_Source\PSoC4/CyLib.c **** {
 1402              		.loc 1 2731 0
 1403              		.cfi_startproc
 1404              		@ args = 0, pretend = 0, frame = 0
 1405              		@ frame_needed = 0, uses_anonymous_args = 0
 1406              	.LVL104:
 1407 0000 10B5     		push	{r4, lr}
 1408              		.cfi_def_cfa_offset 8
 1409              		.cfi_offset 4, -8
 1410              		.cfi_offset 14, -4
2732:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1411              		.loc 1 2732 0
 1412 0002 034B     		ldr	r3, .L102
2733:Generated_Source\PSoC4/CyLib.c **** }
 1413              		.loc 1 2733 0
 1414              		@ sp needed
2732:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1415              		.loc 1 2732 0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 76


 1416 0004 1B7B     		ldrb	r3, [r3, #12]
 1417 0006 5843     		muls	r0, r3
 1418              	.LVL105:
 1419 0008 FFF7FEFF 		bl	CyDelayCycles
 1420              	.LVL106:
 1421              		.loc 1 2733 0
 1422 000c 10BD     		pop	{r4, pc}
 1423              	.L103:
 1424 000e C046     		.align	2
 1425              	.L102:
 1426 0010 00000000 		.word	.LANCHOR0
 1427              		.cfi_endproc
 1428              	.LFE29:
 1429              		.size	CyDelayUs, .-CyDelayUs
 1430              		.global	__aeabi_uidiv
 1431              		.section	.text.CyDelayFreq,"ax",%progbits
 1432              		.align	1
 1433              		.global	CyDelayFreq
 1434              		.code	16
 1435              		.thumb_func
 1436              		.type	CyDelayFreq, %function
 1437              	CyDelayFreq:
 1438              	.LFB30:
2734:Generated_Source\PSoC4/CyLib.c **** 
2735:Generated_Source\PSoC4/CyLib.c **** 
2736:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2737:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2738:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2739:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2740:Generated_Source\PSoC4/CyLib.c **** *
2741:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
2742:Generated_Source\PSoC4/CyLib.c **** *
2743:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2744:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2745:Generated_Source\PSoC4/CyLib.c **** {
 1439              		.loc 1 2745 0
 1440              		.cfi_startproc
 1441              		@ args = 0, pretend = 0, frame = 0
 1442              		@ frame_needed = 0, uses_anonymous_args = 0
 1443              	.LVL107:
 1444 0000 70B5     		push	{r4, r5, r6, lr}
 1445              		.cfi_def_cfa_offset 16
 1446              		.cfi_offset 4, -16
 1447              		.cfi_offset 5, -12
 1448              		.cfi_offset 6, -8
 1449              		.cfi_offset 14, -4
 1450 0002 0C4C     		ldr	r4, .L107
2746:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1451              		.loc 1 2746 0
 1452 0004 0028     		cmp	r0, #0
 1453 0006 01D0     		beq	.L105
2747:Generated_Source\PSoC4/CyLib.c ****     {
2748:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1454              		.loc 1 2748 0
 1455 0008 2061     		str	r0, [r4, #16]
 1456 000a 01E0     		b	.L106
 1457              	.L105:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 77


2749:Generated_Source\PSoC4/CyLib.c ****     }
2750:Generated_Source\PSoC4/CyLib.c ****     else
2751:Generated_Source\PSoC4/CyLib.c ****     {
2752:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1458              		.loc 1 2752 0
 1459 000c 0A4B     		ldr	r3, .L107+4
 1460 000e 2361     		str	r3, [r4, #16]
 1461              	.L106:
2753:Generated_Source\PSoC4/CyLib.c ****     }
2754:Generated_Source\PSoC4/CyLib.c **** 
2755:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1462              		.loc 1 2755 0
 1463 0010 2569     		ldr	r5, [r4, #16]
 1464 0012 0A4B     		ldr	r3, .L107+8
 1465 0014 0A49     		ldr	r1, .L107+12
 1466 0016 E818     		adds	r0, r5, r3
 1467              	.LVL108:
 1468 0018 FFF7FEFF 		bl	__aeabi_uidiv
 1469              	.LVL109:
2756:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1470              		.loc 1 2756 0
 1471 001c FA21     		movs	r1, #250
 1472 001e 094B     		ldr	r3, .L107+16
2755:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1473              		.loc 1 2755 0
 1474 0020 2073     		strb	r0, [r4, #12]
 1475              		.loc 1 2756 0
 1476 0022 8900     		lsls	r1, r1, #2
 1477 0024 E818     		adds	r0, r5, r3
 1478 0026 FFF7FEFF 		bl	__aeabi_uidiv
 1479              	.LVL110:
 1480 002a A060     		str	r0, [r4, #8]
2757:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1481              		.loc 1 2757 0
 1482 002c C003     		lsls	r0, r0, #15
 1483 002e 6060     		str	r0, [r4, #4]
2758:Generated_Source\PSoC4/CyLib.c **** }
 1484              		.loc 1 2758 0
 1485              		@ sp needed
 1486 0030 70BD     		pop	{r4, r5, r6, pc}
 1487              	.L108:
 1488 0032 C046     		.align	2
 1489              	.L107:
 1490 0034 00000000 		.word	.LANCHOR0
 1491 0038 00366E01 		.word	24000000
 1492 003c 3F420F00 		.word	999999
 1493 0040 40420F00 		.word	1000000
 1494 0044 E7030000 		.word	999
 1495              		.cfi_endproc
 1496              	.LFE30:
 1497              		.size	CyDelayFreq, .-CyDelayFreq
 1498              		.section	.text.CySysTickInit,"ax",%progbits
 1499              		.align	1
 1500              		.global	CySysTickInit
 1501              		.code	16
 1502              		.thumb_func
 1503              		.type	CySysTickInit, %function
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 78


 1504              	CySysTickInit:
 1505              	.LFB32:
2759:Generated_Source\PSoC4/CyLib.c **** 
2760:Generated_Source\PSoC4/CyLib.c **** 
2761:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2762:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2763:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2764:Generated_Source\PSoC4/CyLib.c **** *
2765:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
2766:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2767:Generated_Source\PSoC4/CyLib.c **** *
2768:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
2769:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
2770:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
2771:Generated_Source\PSoC4/CyLib.c **** *
2772:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2773:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2774:Generated_Source\PSoC4/CyLib.c **** *
2775:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2776:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2777:Generated_Source\PSoC4/CyLib.c **** {
2778:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
2779:Generated_Source\PSoC4/CyLib.c ****     {
2780:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
2781:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
2782:Generated_Source\PSoC4/CyLib.c ****     }
2783:Generated_Source\PSoC4/CyLib.c **** 
2784:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
2785:Generated_Source\PSoC4/CyLib.c **** }
2786:Generated_Source\PSoC4/CyLib.c **** 
2787:Generated_Source\PSoC4/CyLib.c **** 
2788:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2789:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2790:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2791:Generated_Source\PSoC4/CyLib.c **** *
2792:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
2793:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
2794:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
2795:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
2796:Generated_Source\PSoC4/CyLib.c **** *
2797:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
2798:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
2799:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2800:Generated_Source\PSoC4/CyLib.c **** *
2801:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2802:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2803:Generated_Source\PSoC4/CyLib.c **** *
2804:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2805:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2806:Generated_Source\PSoC4/CyLib.c **** {
 1506              		.loc 1 2806 0
 1507              		.cfi_startproc
 1508              		@ args = 0, pretend = 0, frame = 0
 1509              		@ frame_needed = 0, uses_anonymous_args = 0
 1510              	.LVL111:
 1511 0000 10B5     		push	{r4, lr}
 1512              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 79


 1513              		.cfi_offset 4, -8
 1514              		.cfi_offset 14, -4
2807:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2808:Generated_Source\PSoC4/CyLib.c **** 
2809:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2810:Generated_Source\PSoC4/CyLib.c ****     {
2811:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
 1515              		.loc 1 2811 0
 1516 0002 0024     		movs	r4, #0
 1517              	.LBB24:
 1518              	.LBB25:
 1519              	.LBB26:
2812:Generated_Source\PSoC4/CyLib.c ****     }
2813:Generated_Source\PSoC4/CyLib.c **** 
2814:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
2815:Generated_Source\PSoC4/CyLib.c **** 
2816:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2817:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
2818:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2819:Generated_Source\PSoC4/CyLib.c **** 
2820:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
2821:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
2822:Generated_Source\PSoC4/CyLib.c **** }
2823:Generated_Source\PSoC4/CyLib.c **** 
2824:Generated_Source\PSoC4/CyLib.c **** 
2825:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2826:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2827:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2828:Generated_Source\PSoC4/CyLib.c **** *
2829:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2830:Generated_Source\PSoC4/CyLib.c **** *
2831:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2832:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2833:Generated_Source\PSoC4/CyLib.c **** *
2834:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2835:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2836:Generated_Source\PSoC4/CyLib.c **** {
2837:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
2838:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
2839:Generated_Source\PSoC4/CyLib.c **** }
2840:Generated_Source\PSoC4/CyLib.c **** 
2841:Generated_Source\PSoC4/CyLib.c **** 
2842:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2843:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2844:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2845:Generated_Source\PSoC4/CyLib.c **** *
2846:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2847:Generated_Source\PSoC4/CyLib.c **** *
2848:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2849:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2850:Generated_Source\PSoC4/CyLib.c **** *
2851:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2852:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2853:Generated_Source\PSoC4/CyLib.c **** {
2854:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
2855:Generated_Source\PSoC4/CyLib.c **** }
2856:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 80


2857:Generated_Source\PSoC4/CyLib.c **** 
2858:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2859:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2860:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2861:Generated_Source\PSoC4/CyLib.c **** *
2862:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2863:Generated_Source\PSoC4/CyLib.c **** *
2864:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2865:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2866:Generated_Source\PSoC4/CyLib.c **** *
2867:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2868:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2869:Generated_Source\PSoC4/CyLib.c **** {
2870:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
2871:Generated_Source\PSoC4/CyLib.c **** }
2872:Generated_Source\PSoC4/CyLib.c **** 
2873:Generated_Source\PSoC4/CyLib.c **** 
2874:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2875:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2876:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2877:Generated_Source\PSoC4/CyLib.c **** *
2878:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2879:Generated_Source\PSoC4/CyLib.c **** *
2880:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2881:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2882:Generated_Source\PSoC4/CyLib.c **** *
2883:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2884:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2885:Generated_Source\PSoC4/CyLib.c **** {
2886:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
2887:Generated_Source\PSoC4/CyLib.c **** }
2888:Generated_Source\PSoC4/CyLib.c **** 
2889:Generated_Source\PSoC4/CyLib.c **** 
2890:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2891:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2892:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2893:Generated_Source\PSoC4/CyLib.c **** *
2894:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2895:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2896:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2897:Generated_Source\PSoC4/CyLib.c **** *
2898:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2899:Generated_Source\PSoC4/CyLib.c **** *
2900:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2901:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2902:Generated_Source\PSoC4/CyLib.c **** {
2903:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
2904:Generated_Source\PSoC4/CyLib.c **** }
2905:Generated_Source\PSoC4/CyLib.c **** 
2906:Generated_Source\PSoC4/CyLib.c **** 
2907:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2908:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2909:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2910:Generated_Source\PSoC4/CyLib.c **** *
2911:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
2912:Generated_Source\PSoC4/CyLib.c **** *
2913:Generated_Source\PSoC4/CyLib.c **** * \return
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 81


2914:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2915:Generated_Source\PSoC4/CyLib.c **** *
2916:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2917:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2918:Generated_Source\PSoC4/CyLib.c **** {
2919:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
2920:Generated_Source\PSoC4/CyLib.c **** }
2921:Generated_Source\PSoC4/CyLib.c **** 
2922:Generated_Source\PSoC4/CyLib.c **** 
2923:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2924:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2925:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2926:Generated_Source\PSoC4/CyLib.c **** *
2927:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2928:Generated_Source\PSoC4/CyLib.c **** *
2929:Generated_Source\PSoC4/CyLib.c **** * \return
2930:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2931:Generated_Source\PSoC4/CyLib.c **** *
2932:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2933:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2934:Generated_Source\PSoC4/CyLib.c **** {
2935:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
2936:Generated_Source\PSoC4/CyLib.c **** }
2937:Generated_Source\PSoC4/CyLib.c **** 
2938:Generated_Source\PSoC4/CyLib.c **** 
2939:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2940:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2941:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2942:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2943:Generated_Source\PSoC4/CyLib.c ****     *
2944:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2945:Generated_Source\PSoC4/CyLib.c ****     *
2946:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2947:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2948:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2949:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2950:Generated_Source\PSoC4/CyLib.c ****     *
2951:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
2952:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
2953:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
2954:Generated_Source\PSoC4/CyLib.c ****     *
2955:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2956:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2957:Generated_Source\PSoC4/CyLib.c ****     *
2958:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
2959:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2960:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
2961:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2962:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2963:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2964:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2965:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2966:Generated_Source\PSoC4/CyLib.c ****     {
2967:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
2968:Generated_Source\PSoC4/CyLib.c ****         {
2969:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 1520              		.loc 1 2969 0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 82


 1521 0004 0421     		movs	r1, #4
 1522              	.LBE26:
 1523              	.LBE25:
 1524              	.LBE24:
2811:Generated_Source\PSoC4/CyLib.c ****     }
 1525              		.loc 1 2811 0
 1526 0006 0C4B     		ldr	r3, .L110
 1527              	.LBB31:
 1528              	.LBB32:
2438:Generated_Source\PSoC4/CyLib.c **** 
 1529              		.loc 1 2438 0
 1530 0008 0C4A     		ldr	r2, .L110+4
 1531              	.LBE32:
 1532              	.LBE31:
2811:Generated_Source\PSoC4/CyLib.c ****     }
 1533              		.loc 1 2811 0
 1534 000a 1C60     		str	r4, [r3]
 1535              	.LVL112:
 1536 000c 1C61     		str	r4, [r3, #16]
 1537 000e 5C60     		str	r4, [r3, #4]
 1538              	.LVL113:
 1539 0010 9C60     		str	r4, [r3, #8]
 1540              	.LVL114:
 1541 0012 DC60     		str	r4, [r3, #12]
 1542              	.LVL115:
 1543              	.LBB35:
 1544              	.LBB33:
2438:Generated_Source\PSoC4/CyLib.c **** 
 1545              		.loc 1 2438 0
 1546 0014 0A4B     		ldr	r3, .L110+8
 1547              	.LVL116:
 1548              	.LBE33:
 1549              	.LBE35:
2822:Generated_Source\PSoC4/CyLib.c **** 
 1550              		.loc 1 2822 0
 1551              		@ sp needed
 1552              	.LBB36:
 1553              	.LBB34:
2438:Generated_Source\PSoC4/CyLib.c **** 
 1554              		.loc 1 2438 0
 1555 0016 1A60     		str	r2, [r3]
 1556              	.LVL117:
 1557              	.LBE34:
 1558              	.LBE36:
 1559              	.LBB37:
 1560              	.LBB29:
 1561              	.LBB27:
 1562              		.loc 1 2969 0
 1563 0018 0A4A     		ldr	r2, .L110+12
 1564 001a 1368     		ldr	r3, [r2]
 1565 001c 0B43     		orrs	r3, r1
 1566              	.LBE27:
 1567              	.LBE29:
 1568              	.LBE37:
2820:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1569              		.loc 1 2820 0
 1570 001e FA21     		movs	r1, #250
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 83


 1571              	.LBB38:
 1572              	.LBB30:
 1573              	.LBB28:
 1574              		.loc 1 2969 0
 1575 0020 1360     		str	r3, [r2]
 1576              	.LVL118:
 1577              	.LBE28:
 1578              	.LBE30:
 1579              	.LBE38:
2820:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1580              		.loc 1 2820 0
 1581 0022 094B     		ldr	r3, .L110+16
 1582 0024 8900     		lsls	r1, r1, #2
 1583 0026 1869     		ldr	r0, [r3, #16]
 1584 0028 FFF7FEFF 		bl	__aeabi_uidiv
 1585              	.LVL119:
 1586              	.LBB39:
 1587              	.LBB40:
2903:Generated_Source\PSoC4/CyLib.c **** }
 1588              		.loc 1 2903 0
 1589 002c 074B     		ldr	r3, .L110+20
 1590 002e 1860     		str	r0, [r3]
 1591              	.LVL120:
 1592              	.LBE40:
 1593              	.LBE39:
 1594              	.LBB41:
 1595              	.LBB42:
2970:Generated_Source\PSoC4/CyLib.c ****         }
2971:Generated_Source\PSoC4/CyLib.c ****         else
2972:Generated_Source\PSoC4/CyLib.c ****         {
2973:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
2974:Generated_Source\PSoC4/CyLib.c ****         }
2975:Generated_Source\PSoC4/CyLib.c ****     }
2976:Generated_Source\PSoC4/CyLib.c **** 
2977:Generated_Source\PSoC4/CyLib.c ****     
2978:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2979:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
2980:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2981:Generated_Source\PSoC4/CyLib.c ****     *
2982:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
2983:Generated_Source\PSoC4/CyLib.c ****     *
2984:Generated_Source\PSoC4/CyLib.c ****     *  \return 
2985:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2986:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2987:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2988:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2989:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2990:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
2991:Generated_Source\PSoC4/CyLib.c ****     {
2992:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
2993:Generated_Source\PSoC4/CyLib.c ****     }
2994:Generated_Source\PSoC4/CyLib.c ****     
2995:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2996:Generated_Source\PSoC4/CyLib.c **** 
2997:Generated_Source\PSoC4/CyLib.c **** 
2998:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2999:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 84


3000:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3001:Generated_Source\PSoC4/CyLib.c **** *
3002:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
3003:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
3004:Generated_Source\PSoC4/CyLib.c **** *
3005:Generated_Source\PSoC4/CyLib.c **** * \return
3006:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
3007:Generated_Source\PSoC4/CyLib.c **** *
3008:Generated_Source\PSoC4/CyLib.c **** *
3009:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3010:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
3011:Generated_Source\PSoC4/CyLib.c **** *
3012:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3013:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
3014:Generated_Source\PSoC4/CyLib.c **** {
3015:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
3016:Generated_Source\PSoC4/CyLib.c **** }
3017:Generated_Source\PSoC4/CyLib.c **** 
3018:Generated_Source\PSoC4/CyLib.c **** 
3019:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3020:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
3021:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3022:Generated_Source\PSoC4/CyLib.c **** *
3023:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
3024:Generated_Source\PSoC4/CyLib.c **** *
3025:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3026:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
3027:Generated_Source\PSoC4/CyLib.c **** {
3028:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 1596              		.loc 1 3028 0
 1597 0030 074B     		ldr	r3, .L110+24
 1598 0032 1C60     		str	r4, [r3]
 1599              	.LBE42:
 1600              	.LBE41:
2822:Generated_Source\PSoC4/CyLib.c **** 
 1601              		.loc 1 2822 0
 1602 0034 10BD     		pop	{r4, pc}
 1603              	.L111:
 1604 0036 C046     		.align	2
 1605              	.L110:
 1606 0038 00000000 		.word	.LANCHOR1
 1607 003c 00000000 		.word	CySysTickServiceCallbacks
 1608 0040 3C000020 		.word	536870972
 1609 0044 10E000E0 		.word	-536813552
 1610 0048 00000000 		.word	.LANCHOR0
 1611 004c 14E000E0 		.word	-536813548
 1612 0050 18E000E0 		.word	-536813544
 1613              		.cfi_endproc
 1614              	.LFE32:
 1615              		.size	CySysTickInit, .-CySysTickInit
 1616              		.section	.text.CySysTickStop,"ax",%progbits
 1617              		.align	1
 1618              		.global	CySysTickStop
 1619              		.code	16
 1620              		.thumb_func
 1621              		.type	CySysTickStop, %function
 1622              	CySysTickStop:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 85


 1623              	.LFB34:
2853:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 1624              		.loc 1 2853 0
 1625              		.cfi_startproc
 1626              		@ args = 0, pretend = 0, frame = 0
 1627              		@ frame_needed = 0, uses_anonymous_args = 0
 1628              		@ link register save eliminated.
2854:Generated_Source\PSoC4/CyLib.c **** }
 1629              		.loc 1 2854 0
 1630 0000 0121     		movs	r1, #1
 1631 0002 024A     		ldr	r2, .L113
2855:Generated_Source\PSoC4/CyLib.c **** 
 1632              		.loc 1 2855 0
 1633              		@ sp needed
2854:Generated_Source\PSoC4/CyLib.c **** }
 1634              		.loc 1 2854 0
 1635 0004 1368     		ldr	r3, [r2]
 1636 0006 8B43     		bics	r3, r1
 1637 0008 1360     		str	r3, [r2]
2855:Generated_Source\PSoC4/CyLib.c **** 
 1638              		.loc 1 2855 0
 1639 000a 7047     		bx	lr
 1640              	.L114:
 1641              		.align	2
 1642              	.L113:
 1643 000c 10E000E0 		.word	-536813552
 1644              		.cfi_endproc
 1645              	.LFE34:
 1646              		.size	CySysTickStop, .-CySysTickStop
 1647              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 1648              		.align	1
 1649              		.global	CySysTickEnableInterrupt
 1650              		.code	16
 1651              		.thumb_func
 1652              		.type	CySysTickEnableInterrupt, %function
 1653              	CySysTickEnableInterrupt:
 1654              	.LFB35:
2869:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 1655              		.loc 1 2869 0
 1656              		.cfi_startproc
 1657              		@ args = 0, pretend = 0, frame = 0
 1658              		@ frame_needed = 0, uses_anonymous_args = 0
 1659              		@ link register save eliminated.
2870:Generated_Source\PSoC4/CyLib.c **** }
 1660              		.loc 1 2870 0
 1661 0000 0221     		movs	r1, #2
 1662 0002 024A     		ldr	r2, .L116
2871:Generated_Source\PSoC4/CyLib.c **** 
 1663              		.loc 1 2871 0
 1664              		@ sp needed
2870:Generated_Source\PSoC4/CyLib.c **** }
 1665              		.loc 1 2870 0
 1666 0004 1368     		ldr	r3, [r2]
 1667 0006 0B43     		orrs	r3, r1
 1668 0008 1360     		str	r3, [r2]
2871:Generated_Source\PSoC4/CyLib.c **** 
 1669              		.loc 1 2871 0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 86


 1670 000a 7047     		bx	lr
 1671              	.L117:
 1672              		.align	2
 1673              	.L116:
 1674 000c 10E000E0 		.word	-536813552
 1675              		.cfi_endproc
 1676              	.LFE35:
 1677              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 1678              		.section	.text.CySysTickEnable,"ax",%progbits
 1679              		.align	1
 1680              		.global	CySysTickEnable
 1681              		.code	16
 1682              		.thumb_func
 1683              		.type	CySysTickEnable, %function
 1684              	CySysTickEnable:
 1685              	.LFB33:
2836:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1686              		.loc 1 2836 0
 1687              		.cfi_startproc
 1688              		@ args = 0, pretend = 0, frame = 0
 1689              		@ frame_needed = 0, uses_anonymous_args = 0
 1690 0000 10B5     		push	{r4, lr}
 1691              		.cfi_def_cfa_offset 8
 1692              		.cfi_offset 4, -8
 1693              		.cfi_offset 14, -4
2837:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1694              		.loc 1 2837 0
 1695 0002 FFF7FEFF 		bl	CySysTickEnableInterrupt
 1696              	.LVL121:
2838:Generated_Source\PSoC4/CyLib.c **** }
 1697              		.loc 1 2838 0
 1698 0006 0121     		movs	r1, #1
 1699 0008 024A     		ldr	r2, .L119
2839:Generated_Source\PSoC4/CyLib.c **** 
 1700              		.loc 1 2839 0
 1701              		@ sp needed
2838:Generated_Source\PSoC4/CyLib.c **** }
 1702              		.loc 1 2838 0
 1703 000a 1368     		ldr	r3, [r2]
 1704 000c 0B43     		orrs	r3, r1
 1705 000e 1360     		str	r3, [r2]
2839:Generated_Source\PSoC4/CyLib.c **** 
 1706              		.loc 1 2839 0
 1707 0010 10BD     		pop	{r4, pc}
 1708              	.L120:
 1709 0012 C046     		.align	2
 1710              	.L119:
 1711 0014 10E000E0 		.word	-536813552
 1712              		.cfi_endproc
 1713              	.LFE33:
 1714              		.size	CySysTickEnable, .-CySysTickEnable
 1715              		.section	.text.CySysTickStart,"ax",%progbits
 1716              		.align	1
 1717              		.global	CySysTickStart
 1718              		.code	16
 1719              		.thumb_func
 1720              		.type	CySysTickStart, %function
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 87


 1721              	CySysTickStart:
 1722              	.LFB31:
2777:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 1723              		.loc 1 2777 0
 1724              		.cfi_startproc
 1725              		@ args = 0, pretend = 0, frame = 0
 1726              		@ frame_needed = 0, uses_anonymous_args = 0
 1727 0000 10B5     		push	{r4, lr}
 1728              		.cfi_def_cfa_offset 8
 1729              		.cfi_offset 4, -8
 1730              		.cfi_offset 14, -4
2778:Generated_Source\PSoC4/CyLib.c ****     {
 1731              		.loc 1 2778 0
 1732 0002 054C     		ldr	r4, .L123
 1733 0004 6369     		ldr	r3, [r4, #20]
 1734 0006 002B     		cmp	r3, #0
 1735 0008 03D1     		bne	.L122
2780:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 1736              		.loc 1 2780 0
 1737 000a FFF7FEFF 		bl	CySysTickInit
 1738              	.LVL122:
2781:Generated_Source\PSoC4/CyLib.c ****     }
 1739              		.loc 1 2781 0
 1740 000e 0123     		movs	r3, #1
 1741 0010 6361     		str	r3, [r4, #20]
 1742              	.L122:
2784:Generated_Source\PSoC4/CyLib.c **** }
 1743              		.loc 1 2784 0
 1744 0012 FFF7FEFF 		bl	CySysTickEnable
 1745              	.LVL123:
2785:Generated_Source\PSoC4/CyLib.c **** 
 1746              		.loc 1 2785 0
 1747              		@ sp needed
 1748 0016 10BD     		pop	{r4, pc}
 1749              	.L124:
 1750              		.align	2
 1751              	.L123:
 1752 0018 00000000 		.word	.LANCHOR1
 1753              		.cfi_endproc
 1754              	.LFE31:
 1755              		.size	CySysTickStart, .-CySysTickStart
 1756              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 1757              		.align	1
 1758              		.global	CySysTickDisableInterrupt
 1759              		.code	16
 1760              		.thumb_func
 1761              		.type	CySysTickDisableInterrupt, %function
 1762              	CySysTickDisableInterrupt:
 1763              	.LFB36:
2885:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 1764              		.loc 1 2885 0
 1765              		.cfi_startproc
 1766              		@ args = 0, pretend = 0, frame = 0
 1767              		@ frame_needed = 0, uses_anonymous_args = 0
 1768              		@ link register save eliminated.
2886:Generated_Source\PSoC4/CyLib.c **** }
 1769              		.loc 1 2886 0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 88


 1770 0000 0221     		movs	r1, #2
 1771 0002 024A     		ldr	r2, .L126
2887:Generated_Source\PSoC4/CyLib.c **** 
 1772              		.loc 1 2887 0
 1773              		@ sp needed
2886:Generated_Source\PSoC4/CyLib.c **** }
 1774              		.loc 1 2886 0
 1775 0004 1368     		ldr	r3, [r2]
 1776 0006 8B43     		bics	r3, r1
 1777 0008 1360     		str	r3, [r2]
2887:Generated_Source\PSoC4/CyLib.c **** 
 1778              		.loc 1 2887 0
 1779 000a 7047     		bx	lr
 1780              	.L127:
 1781              		.align	2
 1782              	.L126:
 1783 000c 10E000E0 		.word	-536813552
 1784              		.cfi_endproc
 1785              	.LFE36:
 1786              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 1787              		.section	.text.CySysTickSetReload,"ax",%progbits
 1788              		.align	1
 1789              		.global	CySysTickSetReload
 1790              		.code	16
 1791              		.thumb_func
 1792              		.type	CySysTickSetReload, %function
 1793              	CySysTickSetReload:
 1794              	.LFB37:
2902:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1795              		.loc 1 2902 0
 1796              		.cfi_startproc
 1797              		@ args = 0, pretend = 0, frame = 0
 1798              		@ frame_needed = 0, uses_anonymous_args = 0
 1799              		@ link register save eliminated.
 1800              	.LVL124:
2903:Generated_Source\PSoC4/CyLib.c **** }
 1801              		.loc 1 2903 0
 1802 0000 024B     		ldr	r3, .L129
 1803 0002 0002     		lsls	r0, r0, #8
 1804              	.LVL125:
 1805 0004 000A     		lsrs	r0, r0, #8
 1806 0006 1860     		str	r0, [r3]
2904:Generated_Source\PSoC4/CyLib.c **** 
 1807              		.loc 1 2904 0
 1808              		@ sp needed
 1809 0008 7047     		bx	lr
 1810              	.L130:
 1811 000a C046     		.align	2
 1812              	.L129:
 1813 000c 14E000E0 		.word	-536813548
 1814              		.cfi_endproc
 1815              	.LFE37:
 1816              		.size	CySysTickSetReload, .-CySysTickSetReload
 1817              		.section	.text.CySysTickGetReload,"ax",%progbits
 1818              		.align	1
 1819              		.global	CySysTickGetReload
 1820              		.code	16
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 89


 1821              		.thumb_func
 1822              		.type	CySysTickGetReload, %function
 1823              	CySysTickGetReload:
 1824              	.LFB38:
2918:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 1825              		.loc 1 2918 0
 1826              		.cfi_startproc
 1827              		@ args = 0, pretend = 0, frame = 0
 1828              		@ frame_needed = 0, uses_anonymous_args = 0
 1829              		@ link register save eliminated.
2919:Generated_Source\PSoC4/CyLib.c **** }
 1830              		.loc 1 2919 0
 1831 0000 024B     		ldr	r3, .L132
2920:Generated_Source\PSoC4/CyLib.c **** 
 1832              		.loc 1 2920 0
 1833              		@ sp needed
2919:Generated_Source\PSoC4/CyLib.c **** }
 1834              		.loc 1 2919 0
 1835 0002 1868     		ldr	r0, [r3]
 1836 0004 0002     		lsls	r0, r0, #8
 1837 0006 000A     		lsrs	r0, r0, #8
2920:Generated_Source\PSoC4/CyLib.c **** 
 1838              		.loc 1 2920 0
 1839 0008 7047     		bx	lr
 1840              	.L133:
 1841 000a C046     		.align	2
 1842              	.L132:
 1843 000c 14E000E0 		.word	-536813548
 1844              		.cfi_endproc
 1845              	.LFE38:
 1846              		.size	CySysTickGetReload, .-CySysTickGetReload
 1847              		.section	.text.CySysTickGetValue,"ax",%progbits
 1848              		.align	1
 1849              		.global	CySysTickGetValue
 1850              		.code	16
 1851              		.thumb_func
 1852              		.type	CySysTickGetValue, %function
 1853              	CySysTickGetValue:
 1854              	.LFB39:
2934:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 1855              		.loc 1 2934 0
 1856              		.cfi_startproc
 1857              		@ args = 0, pretend = 0, frame = 0
 1858              		@ frame_needed = 0, uses_anonymous_args = 0
 1859              		@ link register save eliminated.
2935:Generated_Source\PSoC4/CyLib.c **** }
 1860              		.loc 1 2935 0
 1861 0000 024B     		ldr	r3, .L135
2936:Generated_Source\PSoC4/CyLib.c **** 
 1862              		.loc 1 2936 0
 1863              		@ sp needed
2935:Generated_Source\PSoC4/CyLib.c **** }
 1864              		.loc 1 2935 0
 1865 0002 1868     		ldr	r0, [r3]
 1866 0004 0002     		lsls	r0, r0, #8
 1867 0006 000A     		lsrs	r0, r0, #8
2936:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 90


 1868              		.loc 1 2936 0
 1869 0008 7047     		bx	lr
 1870              	.L136:
 1871 000a C046     		.align	2
 1872              	.L135:
 1873 000c 18E000E0 		.word	-536813544
 1874              		.cfi_endproc
 1875              	.LFE39:
 1876              		.size	CySysTickGetValue, .-CySysTickGetValue
 1877              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 1878              		.align	1
 1879              		.global	CySysTickSetClockSource
 1880              		.code	16
 1881              		.thumb_func
 1882              		.type	CySysTickSetClockSource, %function
 1883              	CySysTickSetClockSource:
 1884              	.LFB40:
2966:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 1885              		.loc 1 2966 0
 1886              		.cfi_startproc
 1887              		@ args = 0, pretend = 0, frame = 0
 1888              		@ frame_needed = 0, uses_anonymous_args = 0
 1889              		@ link register save eliminated.
 1890              	.LVL126:
 1891 0000 044B     		ldr	r3, .L141
 1892 0002 0421     		movs	r1, #4
 1893              	.LBB45:
 1894              	.LBB46:
2969:Generated_Source\PSoC4/CyLib.c ****         }
 1895              		.loc 1 2969 0
 1896 0004 1A68     		ldr	r2, [r3]
 1897              	.LBE46:
 1898              	.LBE45:
2967:Generated_Source\PSoC4/CyLib.c ****         {
 1899              		.loc 1 2967 0
 1900 0006 0128     		cmp	r0, #1
 1901 0008 01D1     		bne	.L138
 1902              	.LVL127:
 1903              	.LBB48:
 1904              	.LBB47:
2969:Generated_Source\PSoC4/CyLib.c ****         }
 1905              		.loc 1 2969 0
 1906 000a 0A43     		orrs	r2, r1
 1907 000c 00E0     		b	.L140
 1908              	.LVL128:
 1909              	.L138:
 1910              	.LBE47:
 1911              	.LBE48:
2973:Generated_Source\PSoC4/CyLib.c ****         }
 1912              		.loc 1 2973 0
 1913 000e 8A43     		bics	r2, r1
 1914              	.L140:
 1915 0010 1A60     		str	r2, [r3]
2975:Generated_Source\PSoC4/CyLib.c **** 
 1916              		.loc 1 2975 0
 1917              		@ sp needed
 1918 0012 7047     		bx	lr
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 91


 1919              	.L142:
 1920              		.align	2
 1921              	.L141:
 1922 0014 10E000E0 		.word	-536813552
 1923              		.cfi_endproc
 1924              	.LFE40:
 1925              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 1926              		.section	.text.CySysTickGetClockSource,"ax",%progbits
 1927              		.align	1
 1928              		.global	CySysTickGetClockSource
 1929              		.code	16
 1930              		.thumb_func
 1931              		.type	CySysTickGetClockSource, %function
 1932              	CySysTickGetClockSource:
 1933              	.LFB41:
2991:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
 1934              		.loc 1 2991 0
 1935              		.cfi_startproc
 1936              		@ args = 0, pretend = 0, frame = 0
 1937              		@ frame_needed = 0, uses_anonymous_args = 0
 1938              		@ link register save eliminated.
2992:Generated_Source\PSoC4/CyLib.c ****     }
 1939              		.loc 1 2992 0
 1940 0000 024B     		ldr	r3, .L144
2993:Generated_Source\PSoC4/CyLib.c ****     
 1941              		.loc 1 2993 0
 1942              		@ sp needed
2992:Generated_Source\PSoC4/CyLib.c ****     }
 1943              		.loc 1 2992 0
 1944 0002 1868     		ldr	r0, [r3]
 1945 0004 4007     		lsls	r0, r0, #29
 1946 0006 C00F     		lsrs	r0, r0, #31
2993:Generated_Source\PSoC4/CyLib.c ****     
 1947              		.loc 1 2993 0
 1948 0008 7047     		bx	lr
 1949              	.L145:
 1950 000a C046     		.align	2
 1951              	.L144:
 1952 000c 10E000E0 		.word	-536813552
 1953              		.cfi_endproc
 1954              	.LFE41:
 1955              		.size	CySysTickGetClockSource, .-CySysTickGetClockSource
 1956              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 1957              		.align	1
 1958              		.global	CySysTickGetCountFlag
 1959              		.code	16
 1960              		.thumb_func
 1961              		.type	CySysTickGetCountFlag, %function
 1962              	CySysTickGetCountFlag:
 1963              	.LFB42:
3014:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 1964              		.loc 1 3014 0
 1965              		.cfi_startproc
 1966              		@ args = 0, pretend = 0, frame = 0
 1967              		@ frame_needed = 0, uses_anonymous_args = 0
 1968              		@ link register save eliminated.
3015:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 92


 1969              		.loc 1 3015 0
 1970 0000 024B     		ldr	r3, .L147
3016:Generated_Source\PSoC4/CyLib.c **** 
 1971              		.loc 1 3016 0
 1972              		@ sp needed
3015:Generated_Source\PSoC4/CyLib.c **** }
 1973              		.loc 1 3015 0
 1974 0002 1868     		ldr	r0, [r3]
 1975 0004 C003     		lsls	r0, r0, #15
 1976 0006 C00F     		lsrs	r0, r0, #31
3016:Generated_Source\PSoC4/CyLib.c **** 
 1977              		.loc 1 3016 0
 1978 0008 7047     		bx	lr
 1979              	.L148:
 1980 000a C046     		.align	2
 1981              	.L147:
 1982 000c 10E000E0 		.word	-536813552
 1983              		.cfi_endproc
 1984              	.LFE42:
 1985              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 1986              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 1987              		.align	1
 1988              		.code	16
 1989              		.thumb_func
 1990              		.type	CySysTickServiceCallbacks, %function
 1991              	CySysTickServiceCallbacks:
 1992              	.LFB46:
3029:Generated_Source\PSoC4/CyLib.c **** }
3030:Generated_Source\PSoC4/CyLib.c **** 
3031:Generated_Source\PSoC4/CyLib.c **** 
3032:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3033:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
3034:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3035:Generated_Source\PSoC4/CyLib.c **** *
3036:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
3037:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
3038:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
3039:Generated_Source\PSoC4/CyLib.c **** *
3040:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
3041:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
3042:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
3043:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
3044:Generated_Source\PSoC4/CyLib.c **** *  functions.
3045:Generated_Source\PSoC4/CyLib.c **** *
3046:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
3047:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3048:Generated_Source\PSoC4/CyLib.c **** *
3049:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
3050:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
3051:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
3052:Generated_Source\PSoC4/CyLib.c **** *
3053:Generated_Source\PSoC4/CyLib.c **** * \return
3054:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
3055:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
3056:Generated_Source\PSoC4/CyLib.c **** *
3057:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3058:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 93


3059:Generated_Source\PSoC4/CyLib.c **** *
3060:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3061:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
3062:Generated_Source\PSoC4/CyLib.c **** {
3063:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
3064:Generated_Source\PSoC4/CyLib.c **** 
3065:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
3066:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
3067:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
3068:Generated_Source\PSoC4/CyLib.c **** }
3069:Generated_Source\PSoC4/CyLib.c **** 
3070:Generated_Source\PSoC4/CyLib.c **** 
3071:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3072:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
3073:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3074:Generated_Source\PSoC4/CyLib.c **** *
3075:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
3076:Generated_Source\PSoC4/CyLib.c **** *
3077:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
3078:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3079:Generated_Source\PSoC4/CyLib.c **** *
3080:Generated_Source\PSoC4/CyLib.c **** * \return
3081:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
3082:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
3083:Generated_Source\PSoC4/CyLib.c **** *
3084:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3085:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
3086:Generated_Source\PSoC4/CyLib.c **** {
3087:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
3088:Generated_Source\PSoC4/CyLib.c **** }
3089:Generated_Source\PSoC4/CyLib.c **** 
3090:Generated_Source\PSoC4/CyLib.c **** 
3091:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3092:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
3093:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3094:Generated_Source\PSoC4/CyLib.c **** *
3095:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
3096:Generated_Source\PSoC4/CyLib.c **** *
3097:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3098:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
3099:Generated_Source\PSoC4/CyLib.c **** {
 1993              		.loc 1 3099 0
 1994              		.cfi_startproc
 1995              		@ args = 0, pretend = 0, frame = 0
 1996              		@ frame_needed = 0, uses_anonymous_args = 0
 1997 0000 10B5     		push	{r4, lr}
 1998              		.cfi_def_cfa_offset 8
 1999              		.cfi_offset 4, -8
 2000              		.cfi_offset 14, -4
3100:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
3101:Generated_Source\PSoC4/CyLib.c **** 
3102:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
3103:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 2001              		.loc 1 3103 0
 2002 0002 FFF7FEFF 		bl	CySysTickGetCountFlag
 2003              	.LVL129:
 2004 0006 0128     		cmp	r0, #1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 94


 2005 0008 08D1     		bne	.L149
 2006 000a 0024     		movs	r4, #0
 2007              	.L152:
 2008              	.LBB51:
3104:Generated_Source\PSoC4/CyLib.c ****     {
3105:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
3106:Generated_Source\PSoC4/CyLib.c ****         {
3107:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 2009              		.loc 1 3107 0
 2010 000c 044B     		ldr	r3, .L158
 2011 000e E358     		ldr	r3, [r4, r3]
 2012 0010 002B     		cmp	r3, #0
 2013 0012 00D0     		beq	.L151
3108:Generated_Source\PSoC4/CyLib.c ****             {
3109:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 2014              		.loc 1 3109 0
 2015 0014 9847     		blx	r3
 2016              	.LVL130:
 2017              	.L151:
 2018 0016 0434     		adds	r4, r4, #4
3105:Generated_Source\PSoC4/CyLib.c ****         {
 2019              		.loc 1 3105 0
 2020 0018 142C     		cmp	r4, #20
 2021 001a F7D1     		bne	.L152
 2022              	.L149:
 2023              	.LBE51:
3110:Generated_Source\PSoC4/CyLib.c ****             }
3111:Generated_Source\PSoC4/CyLib.c ****         }
3112:Generated_Source\PSoC4/CyLib.c ****     }
3113:Generated_Source\PSoC4/CyLib.c **** }
 2024              		.loc 1 3113 0
 2025              		@ sp needed
 2026 001c 10BD     		pop	{r4, pc}
 2027              	.L159:
 2028 001e C046     		.align	2
 2029              	.L158:
 2030 0020 00000000 		.word	.LANCHOR1
 2031              		.cfi_endproc
 2032              	.LFE46:
 2033              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 2034              		.section	.text.CySysTickClear,"ax",%progbits
 2035              		.align	1
 2036              		.global	CySysTickClear
 2037              		.code	16
 2038              		.thumb_func
 2039              		.type	CySysTickClear, %function
 2040              	CySysTickClear:
 2041              	.LFB43:
3027:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 2042              		.loc 1 3027 0
 2043              		.cfi_startproc
 2044              		@ args = 0, pretend = 0, frame = 0
 2045              		@ frame_needed = 0, uses_anonymous_args = 0
 2046              		@ link register save eliminated.
3028:Generated_Source\PSoC4/CyLib.c **** }
 2047              		.loc 1 3028 0
 2048 0000 0022     		movs	r2, #0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 95


 2049 0002 014B     		ldr	r3, .L161
3029:Generated_Source\PSoC4/CyLib.c **** 
 2050              		.loc 1 3029 0
 2051              		@ sp needed
3028:Generated_Source\PSoC4/CyLib.c **** }
 2052              		.loc 1 3028 0
 2053 0004 1A60     		str	r2, [r3]
3029:Generated_Source\PSoC4/CyLib.c **** 
 2054              		.loc 1 3029 0
 2055 0006 7047     		bx	lr
 2056              	.L162:
 2057              		.align	2
 2058              	.L161:
 2059 0008 18E000E0 		.word	-536813544
 2060              		.cfi_endproc
 2061              	.LFE43:
 2062              		.size	CySysTickClear, .-CySysTickClear
 2063              		.section	.text.CySysTickSetCallback,"ax",%progbits
 2064              		.align	1
 2065              		.global	CySysTickSetCallback
 2066              		.code	16
 2067              		.thumb_func
 2068              		.type	CySysTickSetCallback, %function
 2069              	CySysTickSetCallback:
 2070              	.LFB44:
3062:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
 2071              		.loc 1 3062 0
 2072              		.cfi_startproc
 2073              		@ args = 0, pretend = 0, frame = 0
 2074              		@ frame_needed = 0, uses_anonymous_args = 0
 2075              		@ link register save eliminated.
 2076              	.LVL131:
3065:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 2077              		.loc 1 3065 0
 2078 0000 024A     		ldr	r2, .L164
 2079 0002 8300     		lsls	r3, r0, #2
 2080 0004 9858     		ldr	r0, [r3, r2]
 2081              	.LVL132:
3068:Generated_Source\PSoC4/CyLib.c **** 
 2082              		.loc 1 3068 0
 2083              		@ sp needed
3066:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 2084              		.loc 1 3066 0
 2085 0006 9950     		str	r1, [r3, r2]
3068:Generated_Source\PSoC4/CyLib.c **** 
 2086              		.loc 1 3068 0
 2087 0008 7047     		bx	lr
 2088              	.L165:
 2089 000a C046     		.align	2
 2090              	.L164:
 2091 000c 00000000 		.word	.LANCHOR1
 2092              		.cfi_endproc
 2093              	.LFE44:
 2094              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 2095              		.section	.text.CySysTickGetCallback,"ax",%progbits
 2096              		.align	1
 2097              		.global	CySysTickGetCallback
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 96


 2098              		.code	16
 2099              		.thumb_func
 2100              		.type	CySysTickGetCallback, %function
 2101              	CySysTickGetCallback:
 2102              	.LFB45:
3086:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 2103              		.loc 1 3086 0
 2104              		.cfi_startproc
 2105              		@ args = 0, pretend = 0, frame = 0
 2106              		@ frame_needed = 0, uses_anonymous_args = 0
 2107              		@ link register save eliminated.
 2108              	.LVL133:
3087:Generated_Source\PSoC4/CyLib.c **** }
 2109              		.loc 1 3087 0
 2110 0000 014B     		ldr	r3, .L167
 2111 0002 8000     		lsls	r0, r0, #2
 2112              	.LVL134:
 2113 0004 C058     		ldr	r0, [r0, r3]
3088:Generated_Source\PSoC4/CyLib.c **** 
 2114              		.loc 1 3088 0
 2115              		@ sp needed
 2116 0006 7047     		bx	lr
 2117              	.L168:
 2118              		.align	2
 2119              	.L167:
 2120 0008 00000000 		.word	.LANCHOR1
 2121              		.cfi_endproc
 2122              	.LFE45:
 2123              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 2124              		.section	.text.CyGetUniqueId,"ax",%progbits
 2125              		.align	1
 2126              		.global	CyGetUniqueId
 2127              		.code	16
 2128              		.thumb_func
 2129              		.type	CyGetUniqueId, %function
 2130              	CyGetUniqueId:
 2131              	.LFB47:
3114:Generated_Source\PSoC4/CyLib.c **** 
3115:Generated_Source\PSoC4/CyLib.c **** 
3116:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3117:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
3118:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3119:Generated_Source\PSoC4/CyLib.c **** *
3120:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
3121:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
3122:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
3123:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
3124:Generated_Source\PSoC4/CyLib.c **** *
3125:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
3126:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
3127:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
3128:Generated_Source\PSoC4/CyLib.c **** *
3129:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3130:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
3131:Generated_Source\PSoC4/CyLib.c **** {
 2132              		.loc 1 3131 0
 2133              		.cfi_startproc
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 97


 2134              		@ args = 0, pretend = 0, frame = 0
 2135              		@ frame_needed = 0, uses_anonymous_args = 0
 2136              		@ link register save eliminated.
 2137              	.LVL135:
3132:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
3133:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 2138              		.loc 1 3133 0
 2139 0000 144B     		ldr	r3, .L170
3134:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
3135:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
3136:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
3137:Generated_Source\PSoC4/CyLib.c **** 
3138:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
3139:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
3140:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
3141:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
3142:Generated_Source\PSoC4/CyLib.c **** #else
3143:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
3144:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
3145:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
3146:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
3147:Generated_Source\PSoC4/CyLib.c **** 
3148:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3149:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3150:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3151:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3152:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3153:Generated_Source\PSoC4/CyLib.c **** }
 2140              		.loc 1 3153 0
 2141              		@ sp needed
3133:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2142              		.loc 1 3133 0
 2143 0002 1A78     		ldrb	r2, [r3]
3134:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2144              		.loc 1 3134 0
 2145 0004 144B     		ldr	r3, .L170+4
3133:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2146              		.loc 1 3133 0
 2147 0006 D1B2     		uxtb	r1, r2
 2148 0008 0160     		str	r1, [r0]
3134:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2149              		.loc 1 3134 0
 2150 000a 1B78     		ldrb	r3, [r3]
 2151 000c 1B02     		lsls	r3, r3, #8
 2152 000e 0B43     		orrs	r3, r1
 2153 0010 1A00     		movs	r2, r3
 2154 0012 0360     		str	r3, [r0]
3135:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2155              		.loc 1 3135 0
 2156 0014 114B     		ldr	r3, .L170+8
 2157 0016 1B78     		ldrb	r3, [r3]
 2158 0018 1B04     		lsls	r3, r3, #16
 2159 001a 1343     		orrs	r3, r2
3136:Generated_Source\PSoC4/CyLib.c **** 
 2160              		.loc 1 3136 0
 2161 001c 104A     		ldr	r2, .L170+12
3135:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 98


 2162              		.loc 1 3135 0
 2163 001e 0360     		str	r3, [r0]
3136:Generated_Source\PSoC4/CyLib.c **** 
 2164              		.loc 1 3136 0
 2165 0020 1278     		ldrb	r2, [r2]
 2166 0022 1206     		lsls	r2, r2, #24
 2167 0024 1343     		orrs	r3, r2
 2168 0026 0360     		str	r3, [r0]
3138:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2169              		.loc 1 3138 0
 2170 0028 0E4B     		ldr	r3, .L170+16
 2171 002a 1A78     		ldrb	r2, [r3]
3139:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2172              		.loc 1 3139 0
 2173 002c 0E4B     		ldr	r3, .L170+20
3138:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2174              		.loc 1 3138 0
 2175 002e D1B2     		uxtb	r1, r2
 2176 0030 4160     		str	r1, [r0, #4]
3139:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2177              		.loc 1 3139 0
 2178 0032 1B78     		ldrb	r3, [r3]
 2179 0034 1B02     		lsls	r3, r3, #8
 2180 0036 0B43     		orrs	r3, r1
 2181 0038 1A00     		movs	r2, r3
 2182 003a 4360     		str	r3, [r0, #4]
3140:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2183              		.loc 1 3140 0
 2184 003c 0B4B     		ldr	r3, .L170+24
 2185 003e 1B78     		ldrb	r3, [r3]
 2186 0040 1B04     		lsls	r3, r3, #16
 2187 0042 1343     		orrs	r3, r2
3141:Generated_Source\PSoC4/CyLib.c **** #else
 2188              		.loc 1 3141 0
 2189 0044 0A4A     		ldr	r2, .L170+28
3140:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2190              		.loc 1 3140 0
 2191 0046 4360     		str	r3, [r0, #4]
3141:Generated_Source\PSoC4/CyLib.c **** #else
 2192              		.loc 1 3141 0
 2193 0048 1278     		ldrb	r2, [r2]
 2194 004a 1206     		lsls	r2, r2, #24
 2195 004c 1343     		orrs	r3, r2
 2196 004e 4360     		str	r3, [r0, #4]
 2197              		.loc 1 3153 0
 2198 0050 7047     		bx	lr
 2199              	.L171:
 2200 0052 C046     		.align	2
 2201              	.L170:
 2202 0054 78F1FF0F 		.word	268431736
 2203 0058 79F1FF0F 		.word	268431737
 2204 005c 7AF1FF0F 		.word	268431738
 2205 0060 7BF1FF0F 		.word	268431739
 2206 0064 7CF1FF0F 		.word	268431740
 2207 0068 7DF1FF0F 		.word	268431741
 2208 006c 7EF1FF0F 		.word	268431742
 2209 0070 7FF1FF0F 		.word	268431743
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 99


 2210              		.cfi_endproc
 2211              	.LFE47:
 2212              		.size	CyGetUniqueId, .-CyGetUniqueId
 2213              		.global	CySysClkPumpConfig
 2214              		.global	CySysTickInitVar
 2215              		.global	cydelay32kMs
 2216              		.global	cydelayFreqMhz
 2217              		.global	cydelayFreqKhz
 2218              		.global	cydelayFreqHz
 2219              		.data
 2220              		.align	2
 2221              		.set	.LANCHOR0,. + 0
 2222              		.type	CySysClkPumpConfig, %object
 2223              		.size	CySysClkPumpConfig, 4
 2224              	CySysClkPumpConfig:
 2225 0000 01000000 		.word	1
 2226              		.type	cydelay32kMs, %object
 2227              		.size	cydelay32kMs, 4
 2228              	cydelay32kMs:
 2229 0004 0000E02E 		.word	786432000
 2230              		.type	cydelayFreqKhz, %object
 2231              		.size	cydelayFreqKhz, 4
 2232              	cydelayFreqKhz:
 2233 0008 C05D0000 		.word	24000
 2234              		.type	cydelayFreqMhz, %object
 2235              		.size	cydelayFreqMhz, 1
 2236              	cydelayFreqMhz:
 2237 000c 18       		.byte	24
 2238 000d 000000   		.space	3
 2239              		.type	cydelayFreqHz, %object
 2240              		.size	cydelayFreqHz, 4
 2241              	cydelayFreqHz:
 2242 0010 00366E01 		.word	24000000
 2243              		.bss
 2244              		.align	2
 2245              		.set	.LANCHOR1,. + 0
 2246              		.type	CySysTickCallbacks, %object
 2247              		.size	CySysTickCallbacks, 20
 2248              	CySysTickCallbacks:
 2249 0000 00000000 		.space	20
 2249      00000000 
 2249      00000000 
 2249      00000000 
 2249      00000000 
 2250              		.type	CySysTickInitVar, %object
 2251              		.size	CySysTickInitVar, 4
 2252              	CySysTickInitVar:
 2253 0014 00000000 		.space	4
 2254              		.text
 2255              	.Letext0:
 2256              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2257              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 2258              		.file 4 "Generated_Source\\PSoC4\\CyFlash.h"
 2259              		.file 5 "Generated_Source\\PSoC4\\CyLFClk.h"
 2260              		.section	.debug_info,"",%progbits
 2261              	.Ldebug_info0:
 2262 0000 5D0C0000 		.4byte	0xc5d
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 100


 2263 0004 0400     		.2byte	0x4
 2264 0006 00000000 		.4byte	.Ldebug_abbrev0
 2265 000a 04       		.byte	0x4
 2266 000b 01       		.uleb128 0x1
 2267 000c 6F010000 		.4byte	.LASF106
 2268 0010 0C       		.byte	0xc
 2269 0011 B9060000 		.4byte	.LASF107
 2270 0015 E0040000 		.4byte	.LASF108
 2271 0019 58000000 		.4byte	.Ldebug_ranges0+0x58
 2272 001d 00000000 		.4byte	0
 2273 0021 00000000 		.4byte	.Ldebug_line0
 2274 0025 02       		.uleb128 0x2
 2275 0026 01       		.byte	0x1
 2276 0027 06       		.byte	0x6
 2277 0028 F4000000 		.4byte	.LASF0
 2278 002c 02       		.uleb128 0x2
 2279 002d 01       		.byte	0x1
 2280 002e 08       		.byte	0x8
 2281 002f 2C050000 		.4byte	.LASF1
 2282 0033 02       		.uleb128 0x2
 2283 0034 02       		.byte	0x2
 2284 0035 05       		.byte	0x5
 2285 0036 41050000 		.4byte	.LASF2
 2286 003a 02       		.uleb128 0x2
 2287 003b 02       		.byte	0x2
 2288 003c 07       		.byte	0x7
 2289 003d 6C030000 		.4byte	.LASF3
 2290 0041 02       		.uleb128 0x2
 2291 0042 04       		.byte	0x4
 2292 0043 05       		.byte	0x5
 2293 0044 59010000 		.4byte	.LASF4
 2294 0048 02       		.uleb128 0x2
 2295 0049 04       		.byte	0x4
 2296 004a 07       		.byte	0x7
 2297 004b 0F030000 		.4byte	.LASF5
 2298 004f 02       		.uleb128 0x2
 2299 0050 08       		.byte	0x8
 2300 0051 05       		.byte	0x5
 2301 0052 E6000000 		.4byte	.LASF6
 2302 0056 02       		.uleb128 0x2
 2303 0057 08       		.byte	0x8
 2304 0058 07       		.byte	0x7
 2305 0059 67000000 		.4byte	.LASF7
 2306 005d 03       		.uleb128 0x3
 2307 005e 04       		.byte	0x4
 2308 005f 05       		.byte	0x5
 2309 0060 696E7400 		.ascii	"int\000"
 2310 0064 02       		.uleb128 0x2
 2311 0065 04       		.byte	0x4
 2312 0066 07       		.byte	0x7
 2313 0067 F3020000 		.4byte	.LASF8
 2314 006b 04       		.uleb128 0x4
 2315 006c 2B020000 		.4byte	.LASF9
 2316 0070 02       		.byte	0x2
 2317 0071 E401     		.2byte	0x1e4
 2318 0073 2C000000 		.4byte	0x2c
 2319 0077 04       		.uleb128 0x4
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 101


 2320 0078 0F000000 		.4byte	.LASF10
 2321 007c 02       		.byte	0x2
 2322 007d E501     		.2byte	0x1e5
 2323 007f 3A000000 		.4byte	0x3a
 2324 0083 04       		.uleb128 0x4
 2325 0084 54020000 		.4byte	.LASF11
 2326 0088 02       		.byte	0x2
 2327 0089 E601     		.2byte	0x1e6
 2328 008b 48000000 		.4byte	0x48
 2329 008f 02       		.uleb128 0x2
 2330 0090 04       		.byte	0x4
 2331 0091 04       		.byte	0x4
 2332 0092 96040000 		.4byte	.LASF12
 2333 0096 02       		.uleb128 0x2
 2334 0097 08       		.byte	0x8
 2335 0098 04       		.byte	0x4
 2336 0099 47020000 		.4byte	.LASF13
 2337 009d 02       		.uleb128 0x2
 2338 009e 01       		.byte	0x1
 2339 009f 08       		.byte	0x8
 2340 00a0 97050000 		.4byte	.LASF14
 2341 00a4 04       		.uleb128 0x4
 2342 00a5 20050000 		.4byte	.LASF15
 2343 00a9 02       		.byte	0x2
 2344 00aa 8E02     		.2byte	0x28e
 2345 00ac B0000000 		.4byte	0xb0
 2346 00b0 05       		.uleb128 0x5
 2347 00b1 6B000000 		.4byte	0x6b
 2348 00b5 04       		.uleb128 0x4
 2349 00b6 FE030000 		.4byte	.LASF16
 2350 00ba 02       		.byte	0x2
 2351 00bb 9002     		.2byte	0x290
 2352 00bd C1000000 		.4byte	0xc1
 2353 00c1 05       		.uleb128 0x5
 2354 00c2 83000000 		.4byte	0x83
 2355 00c6 04       		.uleb128 0x4
 2356 00c7 9C050000 		.4byte	.LASF17
 2357 00cb 02       		.byte	0x2
 2358 00cc A002     		.2byte	0x2a0
 2359 00ce D2000000 		.4byte	0xd2
 2360 00d2 06       		.uleb128 0x6
 2361 00d3 04       		.byte	0x4
 2362 00d4 D8000000 		.4byte	0xd8
 2363 00d8 07       		.uleb128 0x7
 2364 00d9 02       		.uleb128 0x2
 2365 00da 08       		.byte	0x8
 2366 00db 04       		.byte	0x4
 2367 00dc 3B040000 		.4byte	.LASF18
 2368 00e0 02       		.uleb128 0x2
 2369 00e1 04       		.byte	0x4
 2370 00e2 07       		.byte	0x7
 2371 00e3 20040000 		.4byte	.LASF19
 2372 00e7 08       		.uleb128 0x8
 2373 00e8 B2040000 		.4byte	.LASF20
 2374 00ec 03       		.byte	0x3
 2375 00ed F5       		.byte	0xf5
 2376 00ee D2000000 		.4byte	0xd2
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 102


 2377 00f2 09       		.uleb128 0x9
 2378 00f3 78020000 		.4byte	.LASF26
 2379 00f7 01       		.byte	0x1
 2380 00f8 A6       		.byte	0xa6
 2381 00f9 01       		.byte	0x1
 2382 00fa 36010000 		.4byte	0x136
 2383 00fe 0A       		.uleb128 0xa
 2384 00ff 00010000 		.4byte	.LASF21
 2385 0103 01       		.byte	0x1
 2386 0104 AC       		.byte	0xac
 2387 0105 83000000 		.4byte	0x83
 2388 0109 0A       		.uleb128 0xa
 2389 010a 11010000 		.4byte	.LASF22
 2390 010e 01       		.byte	0x1
 2391 010f AD       		.byte	0xad
 2392 0110 6B000000 		.4byte	0x6b
 2393 0114 0A       		.uleb128 0xa
 2394 0115 7F030000 		.4byte	.LASF23
 2395 0119 01       		.byte	0x1
 2396 011a AE       		.byte	0xae
 2397 011b 83000000 		.4byte	0x83
 2398 011f 0A       		.uleb128 0xa
 2399 0120 20010000 		.4byte	.LASF24
 2400 0124 01       		.byte	0x1
 2401 0125 AF       		.byte	0xaf
 2402 0126 83000000 		.4byte	0x83
 2403 012a 0A       		.uleb128 0xa
 2404 012b 25060000 		.4byte	.LASF25
 2405 012f 01       		.byte	0x1
 2406 0130 B0       		.byte	0xb0
 2407 0131 C1000000 		.4byte	0xc1
 2408 0135 00       		.byte	0
 2409 0136 0B       		.uleb128 0xb
 2410 0137 86030000 		.4byte	.LASF27
 2411 013b 01       		.byte	0x1
 2412 013c 950B     		.2byte	0xb95
 2413 013e 01       		.byte	0x1
 2414 013f 50010000 		.4byte	0x150
 2415 0143 0C       		.uleb128 0xc
 2416 0144 C3020000 		.4byte	.LASF29
 2417 0148 01       		.byte	0x1
 2418 0149 950B     		.2byte	0xb95
 2419 014b 83000000 		.4byte	0x83
 2420 014f 00       		.byte	0
 2421 0150 0D       		.uleb128 0xd
 2422 0151 7D050000 		.4byte	.LASF109
 2423 0155 01       		.byte	0x1
 2424 0156 1A0C     		.2byte	0xc1a
 2425 0158 01       		.byte	0x1
 2426 0159 68010000 		.4byte	0x168
 2427 015d 0E       		.uleb128 0xe
 2428 015e 6900     		.ascii	"i\000"
 2429 0160 01       		.byte	0x1
 2430 0161 1C0C     		.2byte	0xc1c
 2431 0163 83000000 		.4byte	0x83
 2432 0167 00       		.byte	0
 2433 0168 0F       		.uleb128 0xf
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 103


 2434 0169 00030000 		.4byte	.LASF110
 2435 016d 01       		.byte	0x1
 2436 016e D20B     		.2byte	0xbd2
 2437 0170 01       		.byte	0x1
 2438 0171 0B       		.uleb128 0xb
 2439 0172 EC060000 		.4byte	.LASF28
 2440 0176 01       		.byte	0x1
 2441 0177 550B     		.2byte	0xb55
 2442 0179 01       		.byte	0x1
 2443 017a 8B010000 		.4byte	0x18b
 2444 017e 0C       		.uleb128 0xc
 2445 017f BD020000 		.4byte	.LASF30
 2446 0183 01       		.byte	0x1
 2447 0184 550B     		.2byte	0xb55
 2448 0186 83000000 		.4byte	0x83
 2449 018a 00       		.byte	0
 2450 018b 10       		.uleb128 0x10
 2451 018c D2030000 		.4byte	.LASF111
 2452 0190 01       		.byte	0x1
 2453 0191 7B09     		.2byte	0x97b
 2454 0193 C6000000 		.4byte	0xc6
 2455 0197 01       		.byte	0x1
 2456 0198 CD010000 		.4byte	0x1cd
 2457 019c 0C       		.uleb128 0xc
 2458 019d AD030000 		.4byte	.LASF31
 2459 01a1 01       		.byte	0x1
 2460 01a2 7B09     		.2byte	0x97b
 2461 01a4 6B000000 		.4byte	0x6b
 2462 01a8 0C       		.uleb128 0xc
 2463 01a9 47040000 		.4byte	.LASF32
 2464 01ad 01       		.byte	0x1
 2465 01ae 7B09     		.2byte	0x97b
 2466 01b0 C6000000 		.4byte	0xc6
 2467 01b4 11       		.uleb128 0x11
 2468 01b5 4B000000 		.4byte	.LASF33
 2469 01b9 01       		.byte	0x1
 2470 01ba 7D09     		.2byte	0x97d
 2471 01bc C6000000 		.4byte	0xc6
 2472 01c0 11       		.uleb128 0x11
 2473 01c1 00000000 		.4byte	.LASF34
 2474 01c5 01       		.byte	0x1
 2475 01c6 7E09     		.2byte	0x97e
 2476 01c8 CD010000 		.4byte	0x1cd
 2477 01cc 00       		.byte	0
 2478 01cd 06       		.uleb128 0x6
 2479 01ce 04       		.byte	0x4
 2480 01cf C6000000 		.4byte	0xc6
 2481 01d3 12       		.uleb128 0x12
 2482 01d4 90060000 		.4byte	.LASF67
 2483 01d8 01       		.byte	0x1
 2484 01d9 62       		.byte	0x62
 2485 01da 00000000 		.4byte	.LFB1
 2486 01de 14000000 		.4byte	.LFE1-.LFB1
 2487 01e2 01       		.uleb128 0x1
 2488 01e3 9C       		.byte	0x9c
 2489 01e4 13       		.uleb128 0x13
 2490 01e5 E4030000 		.4byte	.LASF35
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 104


 2491 01e9 01       		.byte	0x1
 2492 01ea 1301     		.2byte	0x113
 2493 01ec 00000000 		.4byte	.LFB4
 2494 01f0 48000000 		.4byte	.LFE4-.LFB4
 2495 01f4 01       		.uleb128 0x1
 2496 01f5 9C       		.byte	0x9c
 2497 01f6 0B020000 		.4byte	0x20b
 2498 01fa 14       		.uleb128 0x14
 2499 01fb 00010000 		.4byte	.LASF21
 2500 01ff 01       		.byte	0x1
 2501 0200 1901     		.2byte	0x119
 2502 0202 83000000 		.4byte	0x83
 2503 0206 00000000 		.4byte	.LLST0
 2504 020a 00       		.byte	0
 2505 020b 15       		.uleb128 0x15
 2506 020c 21030000 		.4byte	.LASF36
 2507 0210 01       		.byte	0x1
 2508 0211 82       		.byte	0x82
 2509 0212 00000000 		.4byte	.LFB2
 2510 0216 18000000 		.4byte	.LFE2-.LFB2
 2511 021a 01       		.uleb128 0x1
 2512 021b 9C       		.byte	0x9c
 2513 021c 2A020000 		.4byte	0x22a
 2514 0220 16       		.uleb128 0x16
 2515 0221 06000000 		.4byte	.LVL2
 2516 0225 E4010000 		.4byte	0x1e4
 2517 0229 00       		.byte	0
 2518 022a 17       		.uleb128 0x17
 2519 022b 3B010000 		.4byte	.LASF83
 2520 022f 01       		.byte	0x1
 2521 0230 4B01     		.2byte	0x14b
 2522 0232 83000000 		.4byte	0x83
 2523 0236 00000000 		.4byte	.LFB5
 2524 023a 10000000 		.4byte	.LFE5-.LFB5
 2525 023e 01       		.uleb128 0x1
 2526 023f 9C       		.byte	0x9c
 2527 0240 13       		.uleb128 0x13
 2528 0241 1F000000 		.4byte	.LASF37
 2529 0245 01       		.byte	0x1
 2530 0246 1B02     		.2byte	0x21b
 2531 0248 00000000 		.4byte	.LFB6
 2532 024c 20000000 		.4byte	.LFE6-.LFB6
 2533 0250 01       		.uleb128 0x1
 2534 0251 9C       		.byte	0x9c
 2535 0252 99020000 		.4byte	0x299
 2536 0256 18       		.uleb128 0x18
 2537 0257 69050000 		.4byte	.LASF40
 2538 025b 01       		.byte	0x1
 2539 025c 1B02     		.2byte	0x21b
 2540 025e 83000000 		.4byte	0x83
 2541 0262 22000000 		.4byte	.LLST1
 2542 0266 14       		.uleb128 0x14
 2543 0267 11010000 		.4byte	.LASF22
 2544 026b 01       		.byte	0x1
 2545 026c 1D02     		.2byte	0x21d
 2546 026e 6B000000 		.4byte	0x6b
 2547 0272 4E000000 		.4byte	.LLST2
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 105


 2548 0276 14       		.uleb128 0x14
 2549 0277 E5060000 		.4byte	.LASF38
 2550 027b 01       		.byte	0x1
 2551 027c 1E02     		.2byte	0x21e
 2552 027e 83000000 		.4byte	0x83
 2553 0282 61000000 		.4byte	.LLST3
 2554 0286 16       		.uleb128 0x16
 2555 0287 08000000 		.4byte	.LVL4
 2556 028b 290C0000 		.4byte	0xc29
 2557 028f 16       		.uleb128 0x16
 2558 0290 1A000000 		.4byte	.LVL7
 2559 0294 340C0000 		.4byte	0xc34
 2560 0298 00       		.byte	0
 2561 0299 13       		.uleb128 0x13
 2562 029a 16020000 		.4byte	.LASF39
 2563 029e 01       		.byte	0x1
 2564 029f 6302     		.2byte	0x263
 2565 02a1 00000000 		.4byte	.LFB7
 2566 02a5 30000000 		.4byte	.LFE7-.LFB7
 2567 02a9 01       		.uleb128 0x1
 2568 02aa 9C       		.byte	0x9c
 2569 02ab BE020000 		.4byte	0x2be
 2570 02af 19       		.uleb128 0x19
 2571 02b0 40020000 		.4byte	.LASF41
 2572 02b4 01       		.byte	0x1
 2573 02b5 6302     		.2byte	0x263
 2574 02b7 83000000 		.4byte	0x83
 2575 02bb 01       		.uleb128 0x1
 2576 02bc 50       		.byte	0x50
 2577 02bd 00       		.byte	0
 2578 02be 1A       		.uleb128 0x1a
 2579 02bf 60020000 		.4byte	.LASF46
 2580 02c3 01       		.byte	0x1
 2581 02c4 8802     		.2byte	0x288
 2582 02c6 83000000 		.4byte	0x83
 2583 02ca 00000000 		.4byte	.LFB8
 2584 02ce 18000000 		.4byte	.LFE8-.LFB8
 2585 02d2 01       		.uleb128 0x1
 2586 02d3 9C       		.byte	0x9c
 2587 02d4 0B030000 		.4byte	0x30b
 2588 02d8 14       		.uleb128 0x14
 2589 02d9 11010000 		.4byte	.LASF22
 2590 02dd 01       		.byte	0x1
 2591 02de 8A02     		.2byte	0x28a
 2592 02e0 6B000000 		.4byte	0x6b
 2593 02e4 7F000000 		.4byte	.LLST4
 2594 02e8 14       		.uleb128 0x14
 2595 02e9 4F040000 		.4byte	.LASF42
 2596 02ed 01       		.byte	0x1
 2597 02ee 8B02     		.2byte	0x28b
 2598 02f0 83000000 		.4byte	0x83
 2599 02f4 92000000 		.4byte	.LLST5
 2600 02f8 16       		.uleb128 0x16
 2601 02f9 06000000 		.4byte	.LVL10
 2602 02fd 290C0000 		.4byte	0xc29
 2603 0301 16       		.uleb128 0x16
 2604 0302 0E000000 		.4byte	.LVL12
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 106


 2605 0306 340C0000 		.4byte	0xc34
 2606 030a 00       		.byte	0
 2607 030b 13       		.uleb128 0x13
 2608 030c CF050000 		.4byte	.LASF43
 2609 0310 01       		.byte	0x1
 2610 0311 C502     		.2byte	0x2c5
 2611 0313 00000000 		.4byte	.LFB9
 2612 0317 24000000 		.4byte	.LFE9-.LFB9
 2613 031b 01       		.uleb128 0x1
 2614 031c 9C       		.byte	0x9c
 2615 031d 54030000 		.4byte	0x354
 2616 0321 18       		.uleb128 0x18
 2617 0322 88060000 		.4byte	.LASF44
 2618 0326 01       		.byte	0x1
 2619 0327 C502     		.2byte	0x2c5
 2620 0329 83000000 		.4byte	0x83
 2621 032d B4000000 		.4byte	.LLST6
 2622 0331 14       		.uleb128 0x14
 2623 0332 11010000 		.4byte	.LASF22
 2624 0336 01       		.byte	0x1
 2625 0337 C702     		.2byte	0x2c7
 2626 0339 6B000000 		.4byte	0x6b
 2627 033d E0000000 		.4byte	.LLST7
 2628 0341 16       		.uleb128 0x16
 2629 0342 08000000 		.4byte	.LVL15
 2630 0346 290C0000 		.4byte	0xc29
 2631 034a 16       		.uleb128 0x16
 2632 034b 1E000000 		.4byte	.LVL16
 2633 034f 340C0000 		.4byte	0xc34
 2634 0353 00       		.byte	0
 2635 0354 13       		.uleb128 0x13
 2636 0355 B9050000 		.4byte	.LASF45
 2637 0359 01       		.byte	0x1
 2638 035a 5104     		.2byte	0x451
 2639 035c 00000000 		.4byte	.LFB11
 2640 0360 24000000 		.4byte	.LFE11-.LFB11
 2641 0364 01       		.uleb128 0x1
 2642 0365 9C       		.byte	0x9c
 2643 0366 9D030000 		.4byte	0x39d
 2644 036a 18       		.uleb128 0x18
 2645 036b 88060000 		.4byte	.LASF44
 2646 036f 01       		.byte	0x1
 2647 0370 5104     		.2byte	0x451
 2648 0372 83000000 		.4byte	0x83
 2649 0376 F3000000 		.4byte	.LLST8
 2650 037a 14       		.uleb128 0x14
 2651 037b 11010000 		.4byte	.LASF22
 2652 037f 01       		.byte	0x1
 2653 0380 5304     		.2byte	0x453
 2654 0382 6B000000 		.4byte	0x6b
 2655 0386 1F010000 		.4byte	.LLST9
 2656 038a 16       		.uleb128 0x16
 2657 038b 08000000 		.4byte	.LVL19
 2658 038f 290C0000 		.4byte	0xc29
 2659 0393 16       		.uleb128 0x16
 2660 0394 1C000000 		.4byte	.LVL21
 2661 0398 340C0000 		.4byte	0xc34
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 107


 2662 039c 00       		.byte	0
 2663 039d 1A       		.uleb128 0x1a
 2664 039e 58030000 		.4byte	.LASF47
 2665 03a2 01       		.byte	0x1
 2666 03a3 3409     		.2byte	0x934
 2667 03a5 83000000 		.4byte	0x83
 2668 03a9 00000000 		.4byte	.LFB12
 2669 03ad 14000000 		.4byte	.LFE12-.LFB12
 2670 03b1 01       		.uleb128 0x1
 2671 03b2 9C       		.byte	0x9c
 2672 03b3 D8030000 		.4byte	0x3d8
 2673 03b7 18       		.uleb128 0x18
 2674 03b8 3A050000 		.4byte	.LASF48
 2675 03bc 01       		.byte	0x1
 2676 03bd 3409     		.2byte	0x934
 2677 03bf 83000000 		.4byte	0x83
 2678 03c3 32010000 		.4byte	.LLST10
 2679 03c7 14       		.uleb128 0x14
 2680 03c8 13040000 		.4byte	.LASF49
 2681 03cc 01       		.byte	0x1
 2682 03cd 3609     		.2byte	0x936
 2683 03cf 83000000 		.4byte	0x83
 2684 03d3 50010000 		.4byte	.LLST11
 2685 03d7 00       		.byte	0
 2686 03d8 1A       		.uleb128 0x1a
 2687 03d9 59000000 		.4byte	.LASF50
 2688 03dd 01       		.byte	0x1
 2689 03de 4B09     		.2byte	0x94b
 2690 03e0 83000000 		.4byte	0x83
 2691 03e4 00000000 		.4byte	.LFB13
 2692 03e8 10000000 		.4byte	.LFE13-.LFB13
 2693 03ec 01       		.uleb128 0x1
 2694 03ed 9C       		.byte	0x9c
 2695 03ee 01040000 		.4byte	0x401
 2696 03f2 1B       		.uleb128 0x1b
 2697 03f3 16000000 		.4byte	.LASF51
 2698 03f7 01       		.byte	0x1
 2699 03f8 4D09     		.2byte	0x94d
 2700 03fa 83000000 		.4byte	0x83
 2701 03fe 01       		.uleb128 0x1
 2702 03ff 50       		.byte	0x50
 2703 0400 00       		.byte	0
 2704 0401 13       		.uleb128 0x13
 2705 0402 8F000000 		.4byte	.LASF52
 2706 0406 01       		.byte	0x1
 2707 0407 6209     		.2byte	0x962
 2708 0409 00000000 		.4byte	.LFB14
 2709 040d 0C000000 		.4byte	.LFE14-.LFB14
 2710 0411 01       		.uleb128 0x1
 2711 0412 9C       		.byte	0x9c
 2712 0413 26040000 		.4byte	0x426
 2713 0417 19       		.uleb128 0x19
 2714 0418 5B020000 		.4byte	.LASF53
 2715 041c 01       		.byte	0x1
 2716 041d 6209     		.2byte	0x962
 2717 041f 83000000 		.4byte	0x83
 2718 0423 01       		.uleb128 0x1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 108


 2719 0424 50       		.byte	0x50
 2720 0425 00       		.byte	0
 2721 0426 1C       		.uleb128 0x1c
 2722 0427 8B010000 		.4byte	0x18b
 2723 042b 00000000 		.4byte	.LFB15
 2724 042f 0E000000 		.4byte	.LFE15-.LFB15
 2725 0433 01       		.uleb128 0x1
 2726 0434 9C       		.byte	0x9c
 2727 0435 5A040000 		.4byte	0x45a
 2728 0439 1D       		.uleb128 0x1d
 2729 043a 9C010000 		.4byte	0x19c
 2730 043e 72010000 		.4byte	.LLST12
 2731 0442 1E       		.uleb128 0x1e
 2732 0443 A8010000 		.4byte	0x1a8
 2733 0447 01       		.uleb128 0x1
 2734 0448 51       		.byte	0x51
 2735 0449 1F       		.uleb128 0x1f
 2736 044a B4010000 		.4byte	0x1b4
 2737 044e 01       		.uleb128 0x1
 2738 044f 50       		.byte	0x50
 2739 0450 20       		.uleb128 0x20
 2740 0451 C0010000 		.4byte	0x1c0
 2741 0455 00000020 		.4byte	0x20000000
 2742 0459 00       		.byte	0
 2743 045a 1A       		.uleb128 0x1a
 2744 045b 57050000 		.4byte	.LASF54
 2745 045f 01       		.byte	0x1
 2746 0460 9D09     		.2byte	0x99d
 2747 0462 C6000000 		.4byte	0xc6
 2748 0466 00000000 		.4byte	.LFB16
 2749 046a 0C000000 		.4byte	.LFE16-.LFB16
 2750 046e 01       		.uleb128 0x1
 2751 046f 9C       		.byte	0x9c
 2752 0470 95040000 		.4byte	0x495
 2753 0474 18       		.uleb128 0x18
 2754 0475 AD030000 		.4byte	.LASF31
 2755 0479 01       		.byte	0x1
 2756 047a 9D09     		.2byte	0x99d
 2757 047c 6B000000 		.4byte	0x6b
 2758 0480 93010000 		.4byte	.LLST13
 2759 0484 21       		.uleb128 0x21
 2760 0485 00000000 		.4byte	.LASF34
 2761 0489 01       		.byte	0x1
 2762 048a 9F09     		.2byte	0x99f
 2763 048c CD010000 		.4byte	0x1cd
 2764 0490 00000020 		.4byte	0x20000000
 2765 0494 00       		.byte	0
 2766 0495 1A       		.uleb128 0x1a
 2767 0496 9E030000 		.4byte	.LASF55
 2768 049a 01       		.byte	0x1
 2769 049b B309     		.2byte	0x9b3
 2770 049d C6000000 		.4byte	0xc6
 2771 04a1 00000000 		.4byte	.LFB17
 2772 04a5 10000000 		.4byte	.LFE17-.LFB17
 2773 04a9 01       		.uleb128 0x1
 2774 04aa 9C       		.byte	0x9c
 2775 04ab EC040000 		.4byte	0x4ec
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 109


 2776 04af 18       		.uleb128 0x18
 2777 04b0 AD030000 		.4byte	.LASF31
 2778 04b4 01       		.byte	0x1
 2779 04b5 B309     		.2byte	0x9b3
 2780 04b7 6B000000 		.4byte	0x6b
 2781 04bb B4010000 		.4byte	.LLST14
 2782 04bf 19       		.uleb128 0x19
 2783 04c0 47040000 		.4byte	.LASF32
 2784 04c4 01       		.byte	0x1
 2785 04c5 B309     		.2byte	0x9b3
 2786 04c7 C6000000 		.4byte	0xc6
 2787 04cb 01       		.uleb128 0x1
 2788 04cc 51       		.byte	0x51
 2789 04cd 1B       		.uleb128 0x1b
 2790 04ce 4B000000 		.4byte	.LASF33
 2791 04d2 01       		.byte	0x1
 2792 04d3 B509     		.2byte	0x9b5
 2793 04d5 C6000000 		.4byte	0xc6
 2794 04d9 01       		.uleb128 0x1
 2795 04da 50       		.byte	0x50
 2796 04db 21       		.uleb128 0x21
 2797 04dc 00000000 		.4byte	.LASF34
 2798 04e0 01       		.byte	0x1
 2799 04e1 B609     		.2byte	0x9b6
 2800 04e3 CD010000 		.4byte	0x1cd
 2801 04e7 00000020 		.4byte	0x20000000
 2802 04eb 00       		.byte	0
 2803 04ec 1A       		.uleb128 0x1a
 2804 04ed C4040000 		.4byte	.LASF56
 2805 04f1 01       		.byte	0x1
 2806 04f2 CF09     		.2byte	0x9cf
 2807 04f4 C6000000 		.4byte	0xc6
 2808 04f8 00000000 		.4byte	.LFB18
 2809 04fc 10000000 		.4byte	.LFE18-.LFB18
 2810 0500 01       		.uleb128 0x1
 2811 0501 9C       		.byte	0x9c
 2812 0502 27050000 		.4byte	0x527
 2813 0506 18       		.uleb128 0x18
 2814 0507 AD030000 		.4byte	.LASF31
 2815 050b 01       		.byte	0x1
 2816 050c CF09     		.2byte	0x9cf
 2817 050e 6B000000 		.4byte	0x6b
 2818 0512 D5010000 		.4byte	.LLST15
 2819 0516 21       		.uleb128 0x21
 2820 0517 00000000 		.4byte	.LASF34
 2821 051b 01       		.byte	0x1
 2822 051c D109     		.2byte	0x9d1
 2823 051e CD010000 		.4byte	0x1cd
 2824 0522 00000020 		.4byte	0x20000000
 2825 0526 00       		.byte	0
 2826 0527 13       		.uleb128 0x13
 2827 0528 85040000 		.4byte	.LASF57
 2828 052c 01       		.byte	0x1
 2829 052d E209     		.2byte	0x9e2
 2830 052f 00000000 		.4byte	.LFB19
 2831 0533 34000000 		.4byte	.LFE19-.LFB19
 2832 0537 01       		.uleb128 0x1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 110


 2833 0538 9C       		.byte	0x9c
 2834 0539 A0050000 		.4byte	0x5a0
 2835 053d 18       		.uleb128 0x18
 2836 053e AD030000 		.4byte	.LASF31
 2837 0542 01       		.byte	0x1
 2838 0543 E209     		.2byte	0x9e2
 2839 0545 6B000000 		.4byte	0x6b
 2840 0549 F6010000 		.4byte	.LLST16
 2841 054d 18       		.uleb128 0x18
 2842 054e B4030000 		.4byte	.LASF58
 2843 0552 01       		.byte	0x1
 2844 0553 E209     		.2byte	0x9e2
 2845 0555 6B000000 		.4byte	0x6b
 2846 0559 17020000 		.4byte	.LLST17
 2847 055d 14       		.uleb128 0x14
 2848 055e 11010000 		.4byte	.LASF22
 2849 0562 01       		.byte	0x1
 2850 0563 E409     		.2byte	0x9e4
 2851 0565 6B000000 		.4byte	0x6b
 2852 0569 38020000 		.4byte	.LLST18
 2853 056d 14       		.uleb128 0x14
 2854 056e 4E020000 		.4byte	.LASF59
 2855 0572 01       		.byte	0x1
 2856 0573 E509     		.2byte	0x9e5
 2857 0575 83000000 		.4byte	0x83
 2858 0579 4B020000 		.4byte	.LLST19
 2859 057d 14       		.uleb128 0x14
 2860 057e BD020000 		.4byte	.LASF30
 2861 0582 01       		.byte	0x1
 2862 0583 E609     		.2byte	0x9e6
 2863 0585 83000000 		.4byte	0x83
 2864 0589 5E020000 		.4byte	.LLST20
 2865 058d 16       		.uleb128 0x16
 2866 058e 18000000 		.4byte	.LVL40
 2867 0592 290C0000 		.4byte	0xc29
 2868 0596 16       		.uleb128 0x16
 2869 0597 2C000000 		.4byte	.LVL44
 2870 059b 340C0000 		.4byte	0xc34
 2871 059f 00       		.byte	0
 2872 05a0 1A       		.uleb128 0x1a
 2873 05a1 91020000 		.4byte	.LASF60
 2874 05a5 01       		.byte	0x1
 2875 05a6 040A     		.2byte	0xa04
 2876 05a8 6B000000 		.4byte	0x6b
 2877 05ac 00000000 		.4byte	.LFB20
 2878 05b0 20000000 		.4byte	.LFE20-.LFB20
 2879 05b4 01       		.uleb128 0x1
 2880 05b5 9C       		.byte	0x9c
 2881 05b6 DB050000 		.4byte	0x5db
 2882 05ba 18       		.uleb128 0x18
 2883 05bb AD030000 		.4byte	.LASF31
 2884 05bf 01       		.byte	0x1
 2885 05c0 040A     		.2byte	0xa04
 2886 05c2 6B000000 		.4byte	0x6b
 2887 05c6 7C020000 		.4byte	.LLST21
 2888 05ca 14       		.uleb128 0x14
 2889 05cb B4030000 		.4byte	.LASF58
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 111


 2890 05cf 01       		.byte	0x1
 2891 05d0 060A     		.2byte	0xa06
 2892 05d2 6B000000 		.4byte	0x6b
 2893 05d6 9D020000 		.4byte	.LLST22
 2894 05da 00       		.byte	0
 2895 05db 13       		.uleb128 0x13
 2896 05dc 4B050000 		.4byte	.LASF61
 2897 05e0 01       		.byte	0x1
 2898 05e1 190A     		.2byte	0xa19
 2899 05e3 00000000 		.4byte	.LFB21
 2900 05e7 14000000 		.4byte	.LFE21-.LFB21
 2901 05eb 01       		.uleb128 0x1
 2902 05ec 9C       		.byte	0x9c
 2903 05ed 02060000 		.4byte	0x602
 2904 05f1 18       		.uleb128 0x18
 2905 05f2 AD030000 		.4byte	.LASF31
 2906 05f6 01       		.byte	0x1
 2907 05f7 190A     		.2byte	0xa19
 2908 05f9 6B000000 		.4byte	0x6b
 2909 05fd BE020000 		.4byte	.LLST23
 2910 0601 00       		.byte	0
 2911 0602 1A       		.uleb128 0x1a
 2912 0603 D8000000 		.4byte	.LASF62
 2913 0607 01       		.byte	0x1
 2914 0608 2B0A     		.2byte	0xa2b
 2915 060a 6B000000 		.4byte	0x6b
 2916 060e 00000000 		.4byte	.LFB22
 2917 0612 18000000 		.4byte	.LFE22-.LFB22
 2918 0616 01       		.uleb128 0x1
 2919 0617 9C       		.byte	0x9c
 2920 0618 2D060000 		.4byte	0x62d
 2921 061c 18       		.uleb128 0x18
 2922 061d AD030000 		.4byte	.LASF31
 2923 0621 01       		.byte	0x1
 2924 0622 2B0A     		.2byte	0xa2b
 2925 0624 6B000000 		.4byte	0x6b
 2926 0628 DF020000 		.4byte	.LLST24
 2927 062c 00       		.byte	0
 2928 062d 13       		.uleb128 0x13
 2929 062e 62010000 		.4byte	.LASF63
 2930 0632 01       		.byte	0x1
 2931 0633 3B0A     		.2byte	0xa3b
 2932 0635 00000000 		.4byte	.LFB23
 2933 0639 14000000 		.4byte	.LFE23-.LFB23
 2934 063d 01       		.uleb128 0x1
 2935 063e 9C       		.byte	0x9c
 2936 063f 54060000 		.4byte	0x654
 2937 0643 18       		.uleb128 0x18
 2938 0644 AD030000 		.4byte	.LASF31
 2939 0648 01       		.byte	0x1
 2940 0649 3B0A     		.2byte	0xa3b
 2941 064b 6B000000 		.4byte	0x6b
 2942 064f 00030000 		.4byte	.LLST25
 2943 0653 00       		.byte	0
 2944 0654 13       		.uleb128 0x13
 2945 0655 48030000 		.4byte	.LASF64
 2946 0659 01       		.byte	0x1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 112


 2947 065a 490A     		.2byte	0xa49
 2948 065c 00000000 		.4byte	.LFB24
 2949 0660 14000000 		.4byte	.LFE24-.LFB24
 2950 0664 01       		.uleb128 0x1
 2951 0665 9C       		.byte	0x9c
 2952 0666 7B060000 		.4byte	0x67b
 2953 066a 18       		.uleb128 0x18
 2954 066b AD030000 		.4byte	.LASF31
 2955 066f 01       		.byte	0x1
 2956 0670 490A     		.2byte	0xa49
 2957 0672 6B000000 		.4byte	0x6b
 2958 0676 21030000 		.4byte	.LLST26
 2959 067a 00       		.byte	0
 2960 067b 13       		.uleb128 0x13
 2961 067c 29040000 		.4byte	.LASF65
 2962 0680 01       		.byte	0x1
 2963 0681 580A     		.2byte	0xa58
 2964 0683 00000000 		.4byte	.LFB25
 2965 0687 14000000 		.4byte	.LFE25-.LFB25
 2966 068b 01       		.uleb128 0x1
 2967 068c 9C       		.byte	0x9c
 2968 068d A2060000 		.4byte	0x6a2
 2969 0691 18       		.uleb128 0x18
 2970 0692 AD030000 		.4byte	.LASF31
 2971 0696 01       		.byte	0x1
 2972 0697 580A     		.2byte	0xa58
 2973 0699 6B000000 		.4byte	0x6b
 2974 069d 42030000 		.4byte	.LLST27
 2975 06a1 00       		.byte	0
 2976 06a2 13       		.uleb128 0x13
 2977 06a3 25050000 		.4byte	.LASF66
 2978 06a7 01       		.byte	0x1
 2979 06a8 670A     		.2byte	0xa67
 2980 06aa 00000000 		.4byte	.LFB26
 2981 06ae 04000000 		.4byte	.LFE26-.LFB26
 2982 06b2 01       		.uleb128 0x1
 2983 06b3 9C       		.byte	0x9c
 2984 06b4 C7060000 		.4byte	0x6c7
 2985 06b8 19       		.uleb128 0x19
 2986 06b9 3A050000 		.4byte	.LASF48
 2987 06bd 01       		.byte	0x1
 2988 06be 670A     		.2byte	0xa67
 2989 06c0 6B000000 		.4byte	0x6b
 2990 06c4 01       		.uleb128 0x1
 2991 06c5 50       		.byte	0x50
 2992 06c6 00       		.byte	0
 2993 06c7 22       		.uleb128 0x22
 2994 06c8 AF000000 		.4byte	.LASF68
 2995 06cc 01       		.byte	0x1
 2996 06cd 7F0A     		.2byte	0xa7f
 2997 06cf 00000000 		.4byte	.LFB27
 2998 06d3 18000000 		.4byte	.LFE27-.LFB27
 2999 06d7 01       		.uleb128 0x1
 3000 06d8 9C       		.byte	0x9c
 3001 06d9 13       		.uleb128 0x13
 3002 06da 31060000 		.4byte	.LASF69
 3003 06de 01       		.byte	0x1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 113


 3004 06df 930A     		.2byte	0xa93
 3005 06e1 00000000 		.4byte	.LFB28
 3006 06e5 2C000000 		.4byte	.LFE28-.LFB28
 3007 06e9 01       		.uleb128 0x1
 3008 06ea 9C       		.byte	0x9c
 3009 06eb 12070000 		.4byte	0x712
 3010 06ef 18       		.uleb128 0x18
 3011 06f0 D3040000 		.4byte	.LASF70
 3012 06f4 01       		.byte	0x1
 3013 06f5 930A     		.2byte	0xa93
 3014 06f7 83000000 		.4byte	0x83
 3015 06fb 63030000 		.4byte	.LLST28
 3016 06ff 16       		.uleb128 0x16
 3017 0700 14000000 		.4byte	.LVL64
 3018 0704 3F0C0000 		.4byte	0xc3f
 3019 0708 16       		.uleb128 0x16
 3020 0709 22000000 		.4byte	.LVL66
 3021 070d 3F0C0000 		.4byte	0xc3f
 3022 0711 00       		.byte	0
 3023 0712 1C       		.uleb128 0x1c
 3024 0713 F2000000 		.4byte	0xf2
 3025 0717 00000000 		.4byte	.LFB3
 3026 071b C4000000 		.4byte	.LFE3-.LFB3
 3027 071f 01       		.uleb128 0x1
 3028 0720 9C       		.byte	0x9c
 3029 0721 D8070000 		.4byte	0x7d8
 3030 0725 23       		.uleb128 0x23
 3031 0726 FE000000 		.4byte	0xfe
 3032 072a 23       		.uleb128 0x23
 3033 072b 09010000 		.4byte	0x109
 3034 072f 23       		.uleb128 0x23
 3035 0730 14010000 		.4byte	0x114
 3036 0734 24       		.uleb128 0x24
 3037 0735 1F010000 		.4byte	0x11f
 3038 0739 00       		.byte	0
 3039 073a 23       		.uleb128 0x23
 3040 073b 2A010000 		.4byte	0x12a
 3041 073f 25       		.uleb128 0x25
 3042 0740 0C000000 		.4byte	.LBB13
 3043 0744 8E000000 		.4byte	.LBE13-.LBB13
 3044 0748 CE070000 		.4byte	0x7ce
 3045 074c 26       		.uleb128 0x26
 3046 074d FE000000 		.4byte	0xfe
 3047 0751 81030000 		.4byte	.LLST29
 3048 0755 26       		.uleb128 0x26
 3049 0756 09010000 		.4byte	0x109
 3050 075a BB030000 		.4byte	.LLST30
 3051 075e 26       		.uleb128 0x26
 3052 075f 14010000 		.4byte	0x114
 3053 0763 CF030000 		.4byte	.LLST31
 3054 0767 26       		.uleb128 0x26
 3055 0768 1F010000 		.4byte	0x11f
 3056 076c 18040000 		.4byte	.LLST32
 3057 0770 1F       		.uleb128 0x1f
 3058 0771 2A010000 		.4byte	0x12a
 3059 0775 02       		.uleb128 0x2
 3060 0776 91       		.byte	0x91
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 114


 3061 0777 64       		.sleb128 -28
 3062 0778 16       		.uleb128 0x16
 3063 0779 10000000 		.4byte	.LVL70
 3064 077d 290C0000 		.4byte	0xc29
 3065 0781 27       		.uleb128 0x27
 3066 0782 5A000000 		.4byte	.LVL81
 3067 0786 4A0C0000 		.4byte	0xc4a
 3068 078a 95070000 		.4byte	0x795
 3069 078e 28       		.uleb128 0x28
 3070 078f 01       		.uleb128 0x1
 3071 0790 50       		.byte	0x50
 3072 0791 02       		.uleb128 0x2
 3073 0792 08       		.byte	0x8
 3074 0793 30       		.byte	0x30
 3075 0794 00       		.byte	0
 3076 0795 27       		.uleb128 0x27
 3077 0796 76000000 		.4byte	.LVL84
 3078 079a D9060000 		.4byte	0x6d9
 3079 079e A8070000 		.4byte	0x7a8
 3080 07a2 28       		.uleb128 0x28
 3081 07a3 01       		.uleb128 0x1
 3082 07a4 50       		.byte	0x50
 3083 07a5 01       		.uleb128 0x1
 3084 07a6 31       		.byte	0x31
 3085 07a7 00       		.byte	0
 3086 07a8 27       		.uleb128 0x27
 3087 07a9 86000000 		.4byte	.LVL85
 3088 07ad D9060000 		.4byte	0x6d9
 3089 07b1 BB070000 		.4byte	0x7bb
 3090 07b5 28       		.uleb128 0x28
 3091 07b6 01       		.uleb128 0x1
 3092 07b7 50       		.byte	0x50
 3093 07b8 01       		.uleb128 0x1
 3094 07b9 31       		.byte	0x31
 3095 07ba 00       		.byte	0
 3096 07bb 29       		.uleb128 0x29
 3097 07bc 9A000000 		.4byte	.LVL86
 3098 07c0 340C0000 		.4byte	0xc34
 3099 07c4 28       		.uleb128 0x28
 3100 07c5 01       		.uleb128 0x1
 3101 07c6 50       		.byte	0x50
 3102 07c7 04       		.uleb128 0x4
 3103 07c8 91       		.byte	0x91
 3104 07c9 5C       		.sleb128 -36
 3105 07ca 94       		.byte	0x94
 3106 07cb 01       		.byte	0x1
 3107 07cc 00       		.byte	0
 3108 07cd 00       		.byte	0
 3109 07ce 16       		.uleb128 0x16
 3110 07cf 08000000 		.4byte	.LVL69
 3111 07d3 550C0000 		.4byte	0xc55
 3112 07d7 00       		.byte	0
 3113 07d8 13       		.uleb128 0x13
 3114 07d9 BD030000 		.4byte	.LASF71
 3115 07dd 01       		.byte	0x1
 3116 07de B803     		.2byte	0x3b8
 3117 07e0 00000000 		.4byte	.LFB10
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 115


 3118 07e4 B8000000 		.4byte	.LFE10-.LFB10
 3119 07e8 01       		.uleb128 0x1
 3120 07e9 9C       		.byte	0x9c
 3121 07ea 8D080000 		.4byte	0x88d
 3122 07ee 18       		.uleb128 0x18
 3123 07ef 00010000 		.4byte	.LASF21
 3124 07f3 01       		.byte	0x1
 3125 07f4 B803     		.2byte	0x3b8
 3126 07f6 83000000 		.4byte	0x83
 3127 07fa 43040000 		.4byte	.LLST33
 3128 07fe 14       		.uleb128 0x14
 3129 07ff 11010000 		.4byte	.LASF22
 3130 0803 01       		.byte	0x1
 3131 0804 BA03     		.2byte	0x3ba
 3132 0806 6B000000 		.4byte	0x6b
 3133 080a 89040000 		.4byte	.LLST34
 3134 080e 14       		.uleb128 0x14
 3135 080f 0E060000 		.4byte	.LASF72
 3136 0813 01       		.byte	0x1
 3137 0814 BB03     		.2byte	0x3bb
 3138 0816 6B000000 		.4byte	0x6b
 3139 081a 9D040000 		.4byte	.LLST35
 3140 081e 14       		.uleb128 0x14
 3141 081f 51010000 		.4byte	.LASF73
 3142 0823 01       		.byte	0x1
 3143 0824 BE03     		.2byte	0x3be
 3144 0826 83000000 		.4byte	0x83
 3145 082a C1040000 		.4byte	.LLST36
 3146 082e 16       		.uleb128 0x16
 3147 082f 1C000000 		.4byte	.LVL88
 3148 0833 290C0000 		.4byte	0xc29
 3149 0837 16       		.uleb128 0x16
 3150 0838 22000000 		.4byte	.LVL90
 3151 083c 2A020000 		.4byte	0x22a
 3152 0840 16       		.uleb128 0x16
 3153 0841 2C000000 		.4byte	.LVL92
 3154 0845 E4010000 		.4byte	0x1e4
 3155 0849 27       		.uleb128 0x27
 3156 084a 66000000 		.4byte	.LVL97
 3157 084e 3F0C0000 		.4byte	0xc3f
 3158 0852 5D080000 		.4byte	0x85d
 3159 0856 28       		.uleb128 0x28
 3160 0857 01       		.uleb128 0x1
 3161 0858 50       		.byte	0x50
 3162 0859 02       		.uleb128 0x2
 3163 085a 08       		.byte	0x8
 3164 085b 32       		.byte	0x32
 3165 085c 00       		.byte	0
 3166 085d 27       		.uleb128 0x27
 3167 085e 7E000000 		.4byte	.LVL100
 3168 0862 3F0C0000 		.4byte	0xc3f
 3169 0866 71080000 		.4byte	0x871
 3170 086a 28       		.uleb128 0x28
 3171 086b 01       		.uleb128 0x1
 3172 086c 50       		.byte	0x50
 3173 086d 02       		.uleb128 0x2
 3174 086e 08       		.byte	0x8
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 116


 3175 086f 32       		.byte	0x32
 3176 0870 00       		.byte	0
 3177 0871 16       		.uleb128 0x16
 3178 0872 92000000 		.4byte	.LVL102
 3179 0876 F2000000 		.4byte	0xf2
 3180 087a 29       		.uleb128 0x29
 3181 087b 98000000 		.4byte	.LVL103
 3182 087f 340C0000 		.4byte	0xc34
 3183 0883 28       		.uleb128 0x28
 3184 0884 01       		.uleb128 0x1
 3185 0885 50       		.byte	0x50
 3186 0886 04       		.uleb128 0x4
 3187 0887 91       		.byte	0x91
 3188 0888 64       		.sleb128 -28
 3189 0889 94       		.byte	0x94
 3190 088a 01       		.byte	0x1
 3191 088b 00       		.byte	0
 3192 088c 00       		.byte	0
 3193 088d 13       		.uleb128 0x13
 3194 088e 73050000 		.4byte	.LASF74
 3195 0892 01       		.byte	0x1
 3196 0893 AA0A     		.2byte	0xaaa
 3197 0895 00000000 		.4byte	.LFB29
 3198 0899 14000000 		.4byte	.LFE29-.LFB29
 3199 089d 01       		.uleb128 0x1
 3200 089e 9C       		.byte	0x9c
 3201 089f BD080000 		.4byte	0x8bd
 3202 08a3 18       		.uleb128 0x18
 3203 08a4 D8060000 		.4byte	.LASF75
 3204 08a8 01       		.byte	0x1
 3205 08a9 AA0A     		.2byte	0xaaa
 3206 08ab 77000000 		.4byte	0x77
 3207 08af ED040000 		.4byte	.LLST37
 3208 08b3 16       		.uleb128 0x16
 3209 08b4 0C000000 		.4byte	.LVL106
 3210 08b8 3F0C0000 		.4byte	0xc3f
 3211 08bc 00       		.byte	0
 3212 08bd 2A       		.uleb128 0x2a
 3213 08be 05010000 		.4byte	.LASF76
 3214 08c2 01       		.byte	0x1
 3215 08c3 B80A     		.2byte	0xab8
 3216 08c5 00000000 		.4byte	.LFB30
 3217 08c9 48000000 		.4byte	.LFE30-.LFB30
 3218 08cd 01       		.uleb128 0x1
 3219 08ce 9C       		.byte	0x9c
 3220 08cf E4080000 		.4byte	0x8e4
 3221 08d3 18       		.uleb128 0x18
 3222 08d4 00010000 		.4byte	.LASF21
 3223 08d8 01       		.byte	0x1
 3224 08d9 B80A     		.2byte	0xab8
 3225 08db 83000000 		.4byte	0x83
 3226 08df 0E050000 		.4byte	.LLST38
 3227 08e3 00       		.byte	0
 3228 08e4 2A       		.uleb128 0x2a
 3229 08e5 AF020000 		.4byte	.LASF77
 3230 08e9 01       		.byte	0x1
 3231 08ea F50A     		.2byte	0xaf5
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 117


 3232 08ec 00000000 		.4byte	.LFB32
 3233 08f0 54000000 		.4byte	.LFE32-.LFB32
 3234 08f4 01       		.uleb128 0x1
 3235 08f5 9C       		.byte	0x9c
 3236 08f6 A3090000 		.4byte	0x9a3
 3237 08fa 2B       		.uleb128 0x2b
 3238 08fb 6900     		.ascii	"i\000"
 3239 08fd 01       		.byte	0x1
 3240 08fe F70A     		.2byte	0xaf7
 3241 0900 83000000 		.4byte	0x83
 3242 0904 2F050000 		.4byte	.LLST39
 3243 0908 2C       		.uleb128 0x2c
 3244 0909 36010000 		.4byte	0x136
 3245 090d 04000000 		.4byte	.LBB24
 3246 0911 00000000 		.4byte	.Ldebug_ranges0+0
 3247 0915 01       		.byte	0x1
 3248 0916 010B     		.2byte	0xb01
 3249 0918 35090000 		.4byte	0x935
 3250 091c 1D       		.uleb128 0x1d
 3251 091d 43010000 		.4byte	0x143
 3252 0921 73050000 		.4byte	.LLST40
 3253 0925 2D       		.uleb128 0x2d
 3254 0926 00000000 		.4byte	.Ldebug_ranges0+0
 3255 092a 1D       		.uleb128 0x1d
 3256 092b 43010000 		.4byte	0x143
 3257 092f 73050000 		.4byte	.LLST40
 3258 0933 00       		.byte	0
 3259 0934 00       		.byte	0
 3260 0935 2C       		.uleb128 0x2c
 3261 0936 8B010000 		.4byte	0x18b
 3262 093a 08000000 		.4byte	.LBB31
 3263 093e 20000000 		.4byte	.Ldebug_ranges0+0x20
 3264 0942 01       		.byte	0x1
 3265 0943 FE0A     		.2byte	0xafe
 3266 0945 74090000 		.4byte	0x974
 3267 0949 1D       		.uleb128 0x1d
 3268 094a A8010000 		.4byte	0x1a8
 3269 094e 87050000 		.4byte	.LLST42
 3270 0952 1D       		.uleb128 0x1d
 3271 0953 9C010000 		.4byte	0x19c
 3272 0957 9F050000 		.4byte	.LLST43
 3273 095b 2D       		.uleb128 0x2d
 3274 095c 20000000 		.4byte	.Ldebug_ranges0+0x20
 3275 0960 26       		.uleb128 0x26
 3276 0961 B4010000 		.4byte	0x1b4
 3277 0965 B3050000 		.4byte	.LLST44
 3278 0969 20       		.uleb128 0x20
 3279 096a C0010000 		.4byte	0x1c0
 3280 096e 00000020 		.4byte	0x20000000
 3281 0972 00       		.byte	0
 3282 0973 00       		.byte	0
 3283 0974 2E       		.uleb128 0x2e
 3284 0975 71010000 		.4byte	0x171
 3285 0979 2C000000 		.4byte	.LBB39
 3286 097d 04000000 		.4byte	.LBE39-.LBB39
 3287 0981 01       		.byte	0x1
 3288 0982 040B     		.2byte	0xb04
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 118


 3289 0984 92090000 		.4byte	0x992
 3290 0988 1D       		.uleb128 0x1d
 3291 0989 7E010000 		.4byte	0x17e
 3292 098d D6050000 		.4byte	.LLST45
 3293 0991 00       		.byte	0
 3294 0992 2F       		.uleb128 0x2f
 3295 0993 68010000 		.4byte	0x168
 3296 0997 30000000 		.4byte	.LBB41
 3297 099b 04000000 		.4byte	.LBE41-.LBB41
 3298 099f 01       		.byte	0x1
 3299 09a0 050B     		.2byte	0xb05
 3300 09a2 00       		.byte	0
 3301 09a3 22       		.uleb128 0x22
 3302 09a4 7A060000 		.4byte	.LASF78
 3303 09a8 01       		.byte	0x1
 3304 09a9 240B     		.2byte	0xb24
 3305 09ab 00000000 		.4byte	.LFB34
 3306 09af 10000000 		.4byte	.LFE34-.LFB34
 3307 09b3 01       		.uleb128 0x1
 3308 09b4 9C       		.byte	0x9c
 3309 09b5 22       		.uleb128 0x22
 3310 09b6 BF000000 		.4byte	.LASF79
 3311 09ba 01       		.byte	0x1
 3312 09bb 340B     		.2byte	0xb34
 3313 09bd 00000000 		.4byte	.LFB35
 3314 09c1 10000000 		.4byte	.LFE35-.LFB35
 3315 09c5 01       		.uleb128 0x1
 3316 09c6 9C       		.byte	0x9c
 3317 09c7 13       		.uleb128 0x13
 3318 09c8 A9050000 		.4byte	.LASF80
 3319 09cc 01       		.byte	0x1
 3320 09cd 130B     		.2byte	0xb13
 3321 09cf 00000000 		.4byte	.LFB33
 3322 09d3 18000000 		.4byte	.LFE33-.LFB33
 3323 09d7 01       		.uleb128 0x1
 3324 09d8 9C       		.byte	0x9c
 3325 09d9 E7090000 		.4byte	0x9e7
 3326 09dd 16       		.uleb128 0x16
 3327 09de 06000000 		.4byte	.LVL121
 3328 09e2 B5090000 		.4byte	0x9b5
 3329 09e6 00       		.byte	0
 3330 09e7 13       		.uleb128 0x13
 3331 09e8 04040000 		.4byte	.LASF81
 3332 09ec 01       		.byte	0x1
 3333 09ed D80A     		.2byte	0xad8
 3334 09ef 00000000 		.4byte	.LFB31
 3335 09f3 1C000000 		.4byte	.LFE31-.LFB31
 3336 09f7 01       		.uleb128 0x1
 3337 09f8 9C       		.byte	0x9c
 3338 09f9 100A0000 		.4byte	0xa10
 3339 09fd 16       		.uleb128 0x16
 3340 09fe 0E000000 		.4byte	.LVL122
 3341 0a02 E4080000 		.4byte	0x8e4
 3342 0a06 16       		.uleb128 0x16
 3343 0a07 16000000 		.4byte	.LVL123
 3344 0a0b C7090000 		.4byte	0x9c7
 3345 0a0f 00       		.byte	0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 119


 3346 0a10 22       		.uleb128 0x22
 3347 0a11 51060000 		.4byte	.LASF82
 3348 0a15 01       		.byte	0x1
 3349 0a16 440B     		.2byte	0xb44
 3350 0a18 00000000 		.4byte	.LFB36
 3351 0a1c 10000000 		.4byte	.LFE36-.LFB36
 3352 0a20 01       		.uleb128 0x1
 3353 0a21 9C       		.byte	0x9c
 3354 0a22 1C       		.uleb128 0x1c
 3355 0a23 71010000 		.4byte	0x171
 3356 0a27 00000000 		.4byte	.LFB37
 3357 0a2b 10000000 		.4byte	.LFE37-.LFB37
 3358 0a2f 01       		.uleb128 0x1
 3359 0a30 9C       		.byte	0x9c
 3360 0a31 3F0A0000 		.4byte	0xa3f
 3361 0a35 1D       		.uleb128 0x1d
 3362 0a36 7E010000 		.4byte	0x17e
 3363 0a3a E9050000 		.4byte	.LLST46
 3364 0a3e 00       		.byte	0
 3365 0a3f 17       		.uleb128 0x17
 3366 0a40 28010000 		.4byte	.LASF84
 3367 0a44 01       		.byte	0x1
 3368 0a45 650B     		.2byte	0xb65
 3369 0a47 83000000 		.4byte	0x83
 3370 0a4b 00000000 		.4byte	.LFB38
 3371 0a4f 10000000 		.4byte	.LFE38-.LFB38
 3372 0a53 01       		.uleb128 0x1
 3373 0a54 9C       		.byte	0x9c
 3374 0a55 17       		.uleb128 0x17
 3375 0a56 65040000 		.4byte	.LASF85
 3376 0a5a 01       		.byte	0x1
 3377 0a5b 750B     		.2byte	0xb75
 3378 0a5d 83000000 		.4byte	0x83
 3379 0a61 00000000 		.4byte	.LFB39
 3380 0a65 10000000 		.4byte	.LFE39-.LFB39
 3381 0a69 01       		.uleb128 0x1
 3382 0a6a 9C       		.byte	0x9c
 3383 0a6b 1C       		.uleb128 0x1c
 3384 0a6c 36010000 		.4byte	0x136
 3385 0a70 00000000 		.4byte	.LFB40
 3386 0a74 18000000 		.4byte	.LFE40-.LFB40
 3387 0a78 01       		.uleb128 0x1
 3388 0a79 9C       		.byte	0x9c
 3389 0a7a 950A0000 		.4byte	0xa95
 3390 0a7e 1E       		.uleb128 0x1e
 3391 0a7f 43010000 		.4byte	0x143
 3392 0a83 01       		.uleb128 0x1
 3393 0a84 50       		.byte	0x50
 3394 0a85 2D       		.uleb128 0x2d
 3395 0a86 40000000 		.4byte	.Ldebug_ranges0+0x40
 3396 0a8a 1D       		.uleb128 0x1d
 3397 0a8b 43010000 		.4byte	0x143
 3398 0a8f 0A060000 		.4byte	.LLST47
 3399 0a93 00       		.byte	0
 3400 0a94 00       		.byte	0
 3401 0a95 17       		.uleb128 0x17
 3402 0a96 39060000 		.4byte	.LASF86
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 120


 3403 0a9a 01       		.byte	0x1
 3404 0a9b AE0B     		.2byte	0xbae
 3405 0a9d 83000000 		.4byte	0x83
 3406 0aa1 00000000 		.4byte	.LFB41
 3407 0aa5 10000000 		.4byte	.LFE41-.LFB41
 3408 0aa9 01       		.uleb128 0x1
 3409 0aaa 9C       		.byte	0x9c
 3410 0aab 17       		.uleb128 0x17
 3411 0aac DD020000 		.4byte	.LASF87
 3412 0ab0 01       		.byte	0x1
 3413 0ab1 C50B     		.2byte	0xbc5
 3414 0ab3 83000000 		.4byte	0x83
 3415 0ab7 00000000 		.4byte	.LFB42
 3416 0abb 10000000 		.4byte	.LFE42-.LFB42
 3417 0abf 01       		.uleb128 0x1
 3418 0ac0 9C       		.byte	0x9c
 3419 0ac1 30       		.uleb128 0x30
 3420 0ac2 50010000 		.4byte	0x150
 3421 0ac6 00000000 		.4byte	.LFB46
 3422 0aca 24000000 		.4byte	.LFE46-.LFB46
 3423 0ace 01       		.uleb128 0x1
 3424 0acf 9C       		.byte	0x9c
 3425 0ad0 F60A0000 		.4byte	0xaf6
 3426 0ad4 23       		.uleb128 0x23
 3427 0ad5 5D010000 		.4byte	0x15d
 3428 0ad9 25       		.uleb128 0x25
 3429 0ada 0C000000 		.4byte	.LBB51
 3430 0ade 10000000 		.4byte	.LBE51-.LBB51
 3431 0ae2 EC0A0000 		.4byte	0xaec
 3432 0ae6 23       		.uleb128 0x23
 3433 0ae7 5D010000 		.4byte	0x15d
 3434 0aeb 00       		.byte	0
 3435 0aec 16       		.uleb128 0x16
 3436 0aed 06000000 		.4byte	.LVL129
 3437 0af1 AB0A0000 		.4byte	0xaab
 3438 0af5 00       		.byte	0
 3439 0af6 31       		.uleb128 0x31
 3440 0af7 68010000 		.4byte	0x168
 3441 0afb 00000000 		.4byte	.LFB43
 3442 0aff 0C000000 		.4byte	.LFE43-.LFB43
 3443 0b03 01       		.uleb128 0x1
 3444 0b04 9C       		.byte	0x9c
 3445 0b05 1A       		.uleb128 0x1a
 3446 0b06 E6050000 		.4byte	.LASF88
 3447 0b0a 01       		.byte	0x1
 3448 0b0b F50B     		.2byte	0xbf5
 3449 0b0d E7000000 		.4byte	0xe7
 3450 0b11 00000000 		.4byte	.LFB44
 3451 0b15 10000000 		.4byte	.LFE44-.LFB44
 3452 0b19 01       		.uleb128 0x1
 3453 0b1a 9C       		.byte	0x9c
 3454 0b1b 4C0B0000 		.4byte	0xb4c
 3455 0b1f 18       		.uleb128 0x18
 3456 0b20 AD030000 		.4byte	.LASF31
 3457 0b24 01       		.byte	0x1
 3458 0b25 F50B     		.2byte	0xbf5
 3459 0b27 83000000 		.4byte	0x83
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 121


 3460 0b2b 1E060000 		.4byte	.LLST48
 3461 0b2f 19       		.uleb128 0x19
 3462 0b30 5C040000 		.4byte	.LASF89
 3463 0b34 01       		.byte	0x1
 3464 0b35 F50B     		.2byte	0xbf5
 3465 0b37 E7000000 		.4byte	0xe7
 3466 0b3b 01       		.uleb128 0x1
 3467 0b3c 51       		.byte	0x51
 3468 0b3d 1B       		.uleb128 0x1b
 3469 0b3e 52000000 		.4byte	.LASF90
 3470 0b42 01       		.byte	0x1
 3471 0b43 F70B     		.2byte	0xbf7
 3472 0b45 E7000000 		.4byte	0xe7
 3473 0b49 01       		.uleb128 0x1
 3474 0b4a 50       		.byte	0x50
 3475 0b4b 00       		.byte	0
 3476 0b4c 1A       		.uleb128 0x1a
 3477 0b4d 01020000 		.4byte	.LASF91
 3478 0b51 01       		.byte	0x1
 3479 0b52 0D0C     		.2byte	0xc0d
 3480 0b54 E7000000 		.4byte	0xe7
 3481 0b58 00000000 		.4byte	.LFB45
 3482 0b5c 0C000000 		.4byte	.LFE45-.LFB45
 3483 0b60 01       		.uleb128 0x1
 3484 0b61 9C       		.byte	0x9c
 3485 0b62 770B0000 		.4byte	0xb77
 3486 0b66 18       		.uleb128 0x18
 3487 0b67 AD030000 		.4byte	.LASF31
 3488 0b6b 01       		.byte	0x1
 3489 0b6c 0D0C     		.2byte	0xc0d
 3490 0b6e 83000000 		.4byte	0x83
 3491 0b72 3F060000 		.4byte	.LLST49
 3492 0b76 00       		.byte	0
 3493 0b77 13       		.uleb128 0x13
 3494 0b78 CF020000 		.4byte	.LASF92
 3495 0b7c 01       		.byte	0x1
 3496 0b7d 3A0C     		.2byte	0xc3a
 3497 0b7f 00000000 		.4byte	.LFB47
 3498 0b83 74000000 		.4byte	.LFE47-.LFB47
 3499 0b87 01       		.uleb128 0x1
 3500 0b88 9C       		.byte	0x9c
 3501 0b89 9C0B0000 		.4byte	0xb9c
 3502 0b8d 19       		.uleb128 0x19
 3503 0b8e 1C060000 		.4byte	.LASF93
 3504 0b92 01       		.byte	0x1
 3505 0b93 3A0C     		.2byte	0xc3a
 3506 0b95 9C0B0000 		.4byte	0xb9c
 3507 0b99 01       		.uleb128 0x1
 3508 0b9a 50       		.byte	0x50
 3509 0b9b 00       		.byte	0
 3510 0b9c 06       		.uleb128 0x6
 3511 0b9d 04       		.byte	0x4
 3512 0b9e 83000000 		.4byte	0x83
 3513 0ba2 32       		.uleb128 0x32
 3514 0ba3 E7000000 		.4byte	0xe7
 3515 0ba7 B20B0000 		.4byte	0xbb2
 3516 0bab 33       		.uleb128 0x33
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 122


 3517 0bac E0000000 		.4byte	0xe0
 3518 0bb0 04       		.byte	0x4
 3519 0bb1 00       		.byte	0
 3520 0bb2 34       		.uleb128 0x34
 3521 0bb3 FB050000 		.4byte	.LASF94
 3522 0bb7 01       		.byte	0x1
 3523 0bb8 22       		.byte	0x22
 3524 0bb9 A20B0000 		.4byte	0xba2
 3525 0bbd 05       		.uleb128 0x5
 3526 0bbe 03       		.byte	0x3
 3527 0bbf 00000000 		.4byte	CySysTickCallbacks
 3528 0bc3 35       		.uleb128 0x35
 3529 0bc4 77040000 		.4byte	.LASF95
 3530 0bc8 01       		.byte	0x1
 3531 0bc9 1B       		.byte	0x1b
 3532 0bca 83000000 		.4byte	0x83
 3533 0bce 05       		.uleb128 0x5
 3534 0bcf 03       		.byte	0x3
 3535 0bd0 00000000 		.4byte	cydelayFreqHz
 3536 0bd4 35       		.uleb128 0x35
 3537 0bd5 31020000 		.4byte	.LASF96
 3538 0bd9 01       		.byte	0x1
 3539 0bda 1C       		.byte	0x1c
 3540 0bdb 83000000 		.4byte	0x83
 3541 0bdf 05       		.uleb128 0x5
 3542 0be0 03       		.byte	0x3
 3543 0be1 00000000 		.4byte	cydelayFreqKhz
 3544 0be5 35       		.uleb128 0x35
 3545 0be6 6B060000 		.4byte	.LASF97
 3546 0bea 01       		.byte	0x1
 3547 0beb 1D       		.byte	0x1d
 3548 0bec 6B000000 		.4byte	0x6b
 3549 0bf0 05       		.uleb128 0x5
 3550 0bf1 03       		.byte	0x3
 3551 0bf2 00000000 		.4byte	cydelayFreqMhz
 3552 0bf6 35       		.uleb128 0x35
 3553 0bf7 A2020000 		.4byte	.LASF98
 3554 0bfb 01       		.byte	0x1
 3555 0bfc 1E       		.byte	0x1e
 3556 0bfd 83000000 		.4byte	0x83
 3557 0c01 05       		.uleb128 0x5
 3558 0c02 03       		.byte	0x3
 3559 0c03 00000000 		.4byte	cydelay32kMs
 3560 0c07 35       		.uleb128 0x35
 3561 0c08 7E000000 		.4byte	.LASF99
 3562 0c0c 01       		.byte	0x1
 3563 0c0d 36       		.byte	0x36
 3564 0c0e 83000000 		.4byte	0x83
 3565 0c12 05       		.uleb128 0x5
 3566 0c13 03       		.byte	0x3
 3567 0c14 00000000 		.4byte	CySysTickInitVar
 3568 0c18 35       		.uleb128 0x35
 3569 0c19 38000000 		.4byte	.LASF100
 3570 0c1d 01       		.byte	0x1
 3571 0c1e 51       		.byte	0x51
 3572 0c1f 83000000 		.4byte	0x83
 3573 0c23 05       		.uleb128 0x5
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 123


 3574 0c24 03       		.byte	0x3
 3575 0c25 00000000 		.4byte	CySysClkPumpConfig
 3576 0c29 36       		.uleb128 0x36
 3577 0c2a 31030000 		.4byte	.LASF101
 3578 0c2e 31030000 		.4byte	.LASF101
 3579 0c32 03       		.byte	0x3
 3580 0c33 E5       		.byte	0xe5
 3581 0c34 36       		.uleb128 0x36
 3582 0c35 9C040000 		.4byte	.LASF102
 3583 0c39 9C040000 		.4byte	.LASF102
 3584 0c3d 03       		.byte	0x3
 3585 0c3e E6       		.byte	0xe6
 3586 0c3f 36       		.uleb128 0x36
 3587 0c40 12050000 		.4byte	.LASF103
 3588 0c44 12050000 		.4byte	.LASF103
 3589 0c48 03       		.byte	0x3
 3590 0c49 DC       		.byte	0xdc
 3591 0c4a 36       		.uleb128 0x36
 3592 0c4b A1060000 		.4byte	.LASF104
 3593 0c4f A1060000 		.4byte	.LASF104
 3594 0c53 04       		.byte	0x4
 3595 0c54 52       		.byte	0x52
 3596 0c55 36       		.uleb128 0x36
 3597 0c56 9C000000 		.4byte	.LASF105
 3598 0c5a 9C000000 		.4byte	.LASF105
 3599 0c5e 05       		.byte	0x5
 3600 0c5f 54       		.byte	0x54
 3601 0c60 00       		.byte	0
 3602              		.section	.debug_abbrev,"",%progbits
 3603              	.Ldebug_abbrev0:
 3604 0000 01       		.uleb128 0x1
 3605 0001 11       		.uleb128 0x11
 3606 0002 01       		.byte	0x1
 3607 0003 25       		.uleb128 0x25
 3608 0004 0E       		.uleb128 0xe
 3609 0005 13       		.uleb128 0x13
 3610 0006 0B       		.uleb128 0xb
 3611 0007 03       		.uleb128 0x3
 3612 0008 0E       		.uleb128 0xe
 3613 0009 1B       		.uleb128 0x1b
 3614 000a 0E       		.uleb128 0xe
 3615 000b 55       		.uleb128 0x55
 3616 000c 17       		.uleb128 0x17
 3617 000d 11       		.uleb128 0x11
 3618 000e 01       		.uleb128 0x1
 3619 000f 10       		.uleb128 0x10
 3620 0010 17       		.uleb128 0x17
 3621 0011 00       		.byte	0
 3622 0012 00       		.byte	0
 3623 0013 02       		.uleb128 0x2
 3624 0014 24       		.uleb128 0x24
 3625 0015 00       		.byte	0
 3626 0016 0B       		.uleb128 0xb
 3627 0017 0B       		.uleb128 0xb
 3628 0018 3E       		.uleb128 0x3e
 3629 0019 0B       		.uleb128 0xb
 3630 001a 03       		.uleb128 0x3
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 124


 3631 001b 0E       		.uleb128 0xe
 3632 001c 00       		.byte	0
 3633 001d 00       		.byte	0
 3634 001e 03       		.uleb128 0x3
 3635 001f 24       		.uleb128 0x24
 3636 0020 00       		.byte	0
 3637 0021 0B       		.uleb128 0xb
 3638 0022 0B       		.uleb128 0xb
 3639 0023 3E       		.uleb128 0x3e
 3640 0024 0B       		.uleb128 0xb
 3641 0025 03       		.uleb128 0x3
 3642 0026 08       		.uleb128 0x8
 3643 0027 00       		.byte	0
 3644 0028 00       		.byte	0
 3645 0029 04       		.uleb128 0x4
 3646 002a 16       		.uleb128 0x16
 3647 002b 00       		.byte	0
 3648 002c 03       		.uleb128 0x3
 3649 002d 0E       		.uleb128 0xe
 3650 002e 3A       		.uleb128 0x3a
 3651 002f 0B       		.uleb128 0xb
 3652 0030 3B       		.uleb128 0x3b
 3653 0031 05       		.uleb128 0x5
 3654 0032 49       		.uleb128 0x49
 3655 0033 13       		.uleb128 0x13
 3656 0034 00       		.byte	0
 3657 0035 00       		.byte	0
 3658 0036 05       		.uleb128 0x5
 3659 0037 35       		.uleb128 0x35
 3660 0038 00       		.byte	0
 3661 0039 49       		.uleb128 0x49
 3662 003a 13       		.uleb128 0x13
 3663 003b 00       		.byte	0
 3664 003c 00       		.byte	0
 3665 003d 06       		.uleb128 0x6
 3666 003e 0F       		.uleb128 0xf
 3667 003f 00       		.byte	0
 3668 0040 0B       		.uleb128 0xb
 3669 0041 0B       		.uleb128 0xb
 3670 0042 49       		.uleb128 0x49
 3671 0043 13       		.uleb128 0x13
 3672 0044 00       		.byte	0
 3673 0045 00       		.byte	0
 3674 0046 07       		.uleb128 0x7
 3675 0047 15       		.uleb128 0x15
 3676 0048 00       		.byte	0
 3677 0049 27       		.uleb128 0x27
 3678 004a 19       		.uleb128 0x19
 3679 004b 00       		.byte	0
 3680 004c 00       		.byte	0
 3681 004d 08       		.uleb128 0x8
 3682 004e 16       		.uleb128 0x16
 3683 004f 00       		.byte	0
 3684 0050 03       		.uleb128 0x3
 3685 0051 0E       		.uleb128 0xe
 3686 0052 3A       		.uleb128 0x3a
 3687 0053 0B       		.uleb128 0xb
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 125


 3688 0054 3B       		.uleb128 0x3b
 3689 0055 0B       		.uleb128 0xb
 3690 0056 49       		.uleb128 0x49
 3691 0057 13       		.uleb128 0x13
 3692 0058 00       		.byte	0
 3693 0059 00       		.byte	0
 3694 005a 09       		.uleb128 0x9
 3695 005b 2E       		.uleb128 0x2e
 3696 005c 01       		.byte	0x1
 3697 005d 3F       		.uleb128 0x3f
 3698 005e 19       		.uleb128 0x19
 3699 005f 03       		.uleb128 0x3
 3700 0060 0E       		.uleb128 0xe
 3701 0061 3A       		.uleb128 0x3a
 3702 0062 0B       		.uleb128 0xb
 3703 0063 3B       		.uleb128 0x3b
 3704 0064 0B       		.uleb128 0xb
 3705 0065 27       		.uleb128 0x27
 3706 0066 19       		.uleb128 0x19
 3707 0067 20       		.uleb128 0x20
 3708 0068 0B       		.uleb128 0xb
 3709 0069 01       		.uleb128 0x1
 3710 006a 13       		.uleb128 0x13
 3711 006b 00       		.byte	0
 3712 006c 00       		.byte	0
 3713 006d 0A       		.uleb128 0xa
 3714 006e 34       		.uleb128 0x34
 3715 006f 00       		.byte	0
 3716 0070 03       		.uleb128 0x3
 3717 0071 0E       		.uleb128 0xe
 3718 0072 3A       		.uleb128 0x3a
 3719 0073 0B       		.uleb128 0xb
 3720 0074 3B       		.uleb128 0x3b
 3721 0075 0B       		.uleb128 0xb
 3722 0076 49       		.uleb128 0x49
 3723 0077 13       		.uleb128 0x13
 3724 0078 00       		.byte	0
 3725 0079 00       		.byte	0
 3726 007a 0B       		.uleb128 0xb
 3727 007b 2E       		.uleb128 0x2e
 3728 007c 01       		.byte	0x1
 3729 007d 3F       		.uleb128 0x3f
 3730 007e 19       		.uleb128 0x19
 3731 007f 03       		.uleb128 0x3
 3732 0080 0E       		.uleb128 0xe
 3733 0081 3A       		.uleb128 0x3a
 3734 0082 0B       		.uleb128 0xb
 3735 0083 3B       		.uleb128 0x3b
 3736 0084 05       		.uleb128 0x5
 3737 0085 27       		.uleb128 0x27
 3738 0086 19       		.uleb128 0x19
 3739 0087 20       		.uleb128 0x20
 3740 0088 0B       		.uleb128 0xb
 3741 0089 01       		.uleb128 0x1
 3742 008a 13       		.uleb128 0x13
 3743 008b 00       		.byte	0
 3744 008c 00       		.byte	0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 126


 3745 008d 0C       		.uleb128 0xc
 3746 008e 05       		.uleb128 0x5
 3747 008f 00       		.byte	0
 3748 0090 03       		.uleb128 0x3
 3749 0091 0E       		.uleb128 0xe
 3750 0092 3A       		.uleb128 0x3a
 3751 0093 0B       		.uleb128 0xb
 3752 0094 3B       		.uleb128 0x3b
 3753 0095 05       		.uleb128 0x5
 3754 0096 49       		.uleb128 0x49
 3755 0097 13       		.uleb128 0x13
 3756 0098 00       		.byte	0
 3757 0099 00       		.byte	0
 3758 009a 0D       		.uleb128 0xd
 3759 009b 2E       		.uleb128 0x2e
 3760 009c 01       		.byte	0x1
 3761 009d 03       		.uleb128 0x3
 3762 009e 0E       		.uleb128 0xe
 3763 009f 3A       		.uleb128 0x3a
 3764 00a0 0B       		.uleb128 0xb
 3765 00a1 3B       		.uleb128 0x3b
 3766 00a2 05       		.uleb128 0x5
 3767 00a3 27       		.uleb128 0x27
 3768 00a4 19       		.uleb128 0x19
 3769 00a5 20       		.uleb128 0x20
 3770 00a6 0B       		.uleb128 0xb
 3771 00a7 01       		.uleb128 0x1
 3772 00a8 13       		.uleb128 0x13
 3773 00a9 00       		.byte	0
 3774 00aa 00       		.byte	0
 3775 00ab 0E       		.uleb128 0xe
 3776 00ac 34       		.uleb128 0x34
 3777 00ad 00       		.byte	0
 3778 00ae 03       		.uleb128 0x3
 3779 00af 08       		.uleb128 0x8
 3780 00b0 3A       		.uleb128 0x3a
 3781 00b1 0B       		.uleb128 0xb
 3782 00b2 3B       		.uleb128 0x3b
 3783 00b3 05       		.uleb128 0x5
 3784 00b4 49       		.uleb128 0x49
 3785 00b5 13       		.uleb128 0x13
 3786 00b6 00       		.byte	0
 3787 00b7 00       		.byte	0
 3788 00b8 0F       		.uleb128 0xf
 3789 00b9 2E       		.uleb128 0x2e
 3790 00ba 00       		.byte	0
 3791 00bb 3F       		.uleb128 0x3f
 3792 00bc 19       		.uleb128 0x19
 3793 00bd 03       		.uleb128 0x3
 3794 00be 0E       		.uleb128 0xe
 3795 00bf 3A       		.uleb128 0x3a
 3796 00c0 0B       		.uleb128 0xb
 3797 00c1 3B       		.uleb128 0x3b
 3798 00c2 05       		.uleb128 0x5
 3799 00c3 27       		.uleb128 0x27
 3800 00c4 19       		.uleb128 0x19
 3801 00c5 20       		.uleb128 0x20
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 127


 3802 00c6 0B       		.uleb128 0xb
 3803 00c7 00       		.byte	0
 3804 00c8 00       		.byte	0
 3805 00c9 10       		.uleb128 0x10
 3806 00ca 2E       		.uleb128 0x2e
 3807 00cb 01       		.byte	0x1
 3808 00cc 3F       		.uleb128 0x3f
 3809 00cd 19       		.uleb128 0x19
 3810 00ce 03       		.uleb128 0x3
 3811 00cf 0E       		.uleb128 0xe
 3812 00d0 3A       		.uleb128 0x3a
 3813 00d1 0B       		.uleb128 0xb
 3814 00d2 3B       		.uleb128 0x3b
 3815 00d3 05       		.uleb128 0x5
 3816 00d4 27       		.uleb128 0x27
 3817 00d5 19       		.uleb128 0x19
 3818 00d6 49       		.uleb128 0x49
 3819 00d7 13       		.uleb128 0x13
 3820 00d8 20       		.uleb128 0x20
 3821 00d9 0B       		.uleb128 0xb
 3822 00da 01       		.uleb128 0x1
 3823 00db 13       		.uleb128 0x13
 3824 00dc 00       		.byte	0
 3825 00dd 00       		.byte	0
 3826 00de 11       		.uleb128 0x11
 3827 00df 34       		.uleb128 0x34
 3828 00e0 00       		.byte	0
 3829 00e1 03       		.uleb128 0x3
 3830 00e2 0E       		.uleb128 0xe
 3831 00e3 3A       		.uleb128 0x3a
 3832 00e4 0B       		.uleb128 0xb
 3833 00e5 3B       		.uleb128 0x3b
 3834 00e6 05       		.uleb128 0x5
 3835 00e7 49       		.uleb128 0x49
 3836 00e8 13       		.uleb128 0x13
 3837 00e9 00       		.byte	0
 3838 00ea 00       		.byte	0
 3839 00eb 12       		.uleb128 0x12
 3840 00ec 2E       		.uleb128 0x2e
 3841 00ed 00       		.byte	0
 3842 00ee 3F       		.uleb128 0x3f
 3843 00ef 19       		.uleb128 0x19
 3844 00f0 03       		.uleb128 0x3
 3845 00f1 0E       		.uleb128 0xe
 3846 00f2 3A       		.uleb128 0x3a
 3847 00f3 0B       		.uleb128 0xb
 3848 00f4 3B       		.uleb128 0x3b
 3849 00f5 0B       		.uleb128 0xb
 3850 00f6 27       		.uleb128 0x27
 3851 00f7 19       		.uleb128 0x19
 3852 00f8 11       		.uleb128 0x11
 3853 00f9 01       		.uleb128 0x1
 3854 00fa 12       		.uleb128 0x12
 3855 00fb 06       		.uleb128 0x6
 3856 00fc 40       		.uleb128 0x40
 3857 00fd 18       		.uleb128 0x18
 3858 00fe 9742     		.uleb128 0x2117
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 128


 3859 0100 19       		.uleb128 0x19
 3860 0101 00       		.byte	0
 3861 0102 00       		.byte	0
 3862 0103 13       		.uleb128 0x13
 3863 0104 2E       		.uleb128 0x2e
 3864 0105 01       		.byte	0x1
 3865 0106 3F       		.uleb128 0x3f
 3866 0107 19       		.uleb128 0x19
 3867 0108 03       		.uleb128 0x3
 3868 0109 0E       		.uleb128 0xe
 3869 010a 3A       		.uleb128 0x3a
 3870 010b 0B       		.uleb128 0xb
 3871 010c 3B       		.uleb128 0x3b
 3872 010d 05       		.uleb128 0x5
 3873 010e 27       		.uleb128 0x27
 3874 010f 19       		.uleb128 0x19
 3875 0110 11       		.uleb128 0x11
 3876 0111 01       		.uleb128 0x1
 3877 0112 12       		.uleb128 0x12
 3878 0113 06       		.uleb128 0x6
 3879 0114 40       		.uleb128 0x40
 3880 0115 18       		.uleb128 0x18
 3881 0116 9742     		.uleb128 0x2117
 3882 0118 19       		.uleb128 0x19
 3883 0119 01       		.uleb128 0x1
 3884 011a 13       		.uleb128 0x13
 3885 011b 00       		.byte	0
 3886 011c 00       		.byte	0
 3887 011d 14       		.uleb128 0x14
 3888 011e 34       		.uleb128 0x34
 3889 011f 00       		.byte	0
 3890 0120 03       		.uleb128 0x3
 3891 0121 0E       		.uleb128 0xe
 3892 0122 3A       		.uleb128 0x3a
 3893 0123 0B       		.uleb128 0xb
 3894 0124 3B       		.uleb128 0x3b
 3895 0125 05       		.uleb128 0x5
 3896 0126 49       		.uleb128 0x49
 3897 0127 13       		.uleb128 0x13
 3898 0128 02       		.uleb128 0x2
 3899 0129 17       		.uleb128 0x17
 3900 012a 00       		.byte	0
 3901 012b 00       		.byte	0
 3902 012c 15       		.uleb128 0x15
 3903 012d 2E       		.uleb128 0x2e
 3904 012e 01       		.byte	0x1
 3905 012f 3F       		.uleb128 0x3f
 3906 0130 19       		.uleb128 0x19
 3907 0131 03       		.uleb128 0x3
 3908 0132 0E       		.uleb128 0xe
 3909 0133 3A       		.uleb128 0x3a
 3910 0134 0B       		.uleb128 0xb
 3911 0135 3B       		.uleb128 0x3b
 3912 0136 0B       		.uleb128 0xb
 3913 0137 27       		.uleb128 0x27
 3914 0138 19       		.uleb128 0x19
 3915 0139 11       		.uleb128 0x11
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 129


 3916 013a 01       		.uleb128 0x1
 3917 013b 12       		.uleb128 0x12
 3918 013c 06       		.uleb128 0x6
 3919 013d 40       		.uleb128 0x40
 3920 013e 18       		.uleb128 0x18
 3921 013f 9742     		.uleb128 0x2117
 3922 0141 19       		.uleb128 0x19
 3923 0142 01       		.uleb128 0x1
 3924 0143 13       		.uleb128 0x13
 3925 0144 00       		.byte	0
 3926 0145 00       		.byte	0
 3927 0146 16       		.uleb128 0x16
 3928 0147 898201   		.uleb128 0x4109
 3929 014a 00       		.byte	0
 3930 014b 11       		.uleb128 0x11
 3931 014c 01       		.uleb128 0x1
 3932 014d 31       		.uleb128 0x31
 3933 014e 13       		.uleb128 0x13
 3934 014f 00       		.byte	0
 3935 0150 00       		.byte	0
 3936 0151 17       		.uleb128 0x17
 3937 0152 2E       		.uleb128 0x2e
 3938 0153 00       		.byte	0
 3939 0154 3F       		.uleb128 0x3f
 3940 0155 19       		.uleb128 0x19
 3941 0156 03       		.uleb128 0x3
 3942 0157 0E       		.uleb128 0xe
 3943 0158 3A       		.uleb128 0x3a
 3944 0159 0B       		.uleb128 0xb
 3945 015a 3B       		.uleb128 0x3b
 3946 015b 05       		.uleb128 0x5
 3947 015c 27       		.uleb128 0x27
 3948 015d 19       		.uleb128 0x19
 3949 015e 49       		.uleb128 0x49
 3950 015f 13       		.uleb128 0x13
 3951 0160 11       		.uleb128 0x11
 3952 0161 01       		.uleb128 0x1
 3953 0162 12       		.uleb128 0x12
 3954 0163 06       		.uleb128 0x6
 3955 0164 40       		.uleb128 0x40
 3956 0165 18       		.uleb128 0x18
 3957 0166 9742     		.uleb128 0x2117
 3958 0168 19       		.uleb128 0x19
 3959 0169 00       		.byte	0
 3960 016a 00       		.byte	0
 3961 016b 18       		.uleb128 0x18
 3962 016c 05       		.uleb128 0x5
 3963 016d 00       		.byte	0
 3964 016e 03       		.uleb128 0x3
 3965 016f 0E       		.uleb128 0xe
 3966 0170 3A       		.uleb128 0x3a
 3967 0171 0B       		.uleb128 0xb
 3968 0172 3B       		.uleb128 0x3b
 3969 0173 05       		.uleb128 0x5
 3970 0174 49       		.uleb128 0x49
 3971 0175 13       		.uleb128 0x13
 3972 0176 02       		.uleb128 0x2
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 130


 3973 0177 17       		.uleb128 0x17
 3974 0178 00       		.byte	0
 3975 0179 00       		.byte	0
 3976 017a 19       		.uleb128 0x19
 3977 017b 05       		.uleb128 0x5
 3978 017c 00       		.byte	0
 3979 017d 03       		.uleb128 0x3
 3980 017e 0E       		.uleb128 0xe
 3981 017f 3A       		.uleb128 0x3a
 3982 0180 0B       		.uleb128 0xb
 3983 0181 3B       		.uleb128 0x3b
 3984 0182 05       		.uleb128 0x5
 3985 0183 49       		.uleb128 0x49
 3986 0184 13       		.uleb128 0x13
 3987 0185 02       		.uleb128 0x2
 3988 0186 18       		.uleb128 0x18
 3989 0187 00       		.byte	0
 3990 0188 00       		.byte	0
 3991 0189 1A       		.uleb128 0x1a
 3992 018a 2E       		.uleb128 0x2e
 3993 018b 01       		.byte	0x1
 3994 018c 3F       		.uleb128 0x3f
 3995 018d 19       		.uleb128 0x19
 3996 018e 03       		.uleb128 0x3
 3997 018f 0E       		.uleb128 0xe
 3998 0190 3A       		.uleb128 0x3a
 3999 0191 0B       		.uleb128 0xb
 4000 0192 3B       		.uleb128 0x3b
 4001 0193 05       		.uleb128 0x5
 4002 0194 27       		.uleb128 0x27
 4003 0195 19       		.uleb128 0x19
 4004 0196 49       		.uleb128 0x49
 4005 0197 13       		.uleb128 0x13
 4006 0198 11       		.uleb128 0x11
 4007 0199 01       		.uleb128 0x1
 4008 019a 12       		.uleb128 0x12
 4009 019b 06       		.uleb128 0x6
 4010 019c 40       		.uleb128 0x40
 4011 019d 18       		.uleb128 0x18
 4012 019e 9742     		.uleb128 0x2117
 4013 01a0 19       		.uleb128 0x19
 4014 01a1 01       		.uleb128 0x1
 4015 01a2 13       		.uleb128 0x13
 4016 01a3 00       		.byte	0
 4017 01a4 00       		.byte	0
 4018 01a5 1B       		.uleb128 0x1b
 4019 01a6 34       		.uleb128 0x34
 4020 01a7 00       		.byte	0
 4021 01a8 03       		.uleb128 0x3
 4022 01a9 0E       		.uleb128 0xe
 4023 01aa 3A       		.uleb128 0x3a
 4024 01ab 0B       		.uleb128 0xb
 4025 01ac 3B       		.uleb128 0x3b
 4026 01ad 05       		.uleb128 0x5
 4027 01ae 49       		.uleb128 0x49
 4028 01af 13       		.uleb128 0x13
 4029 01b0 02       		.uleb128 0x2
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 131


 4030 01b1 18       		.uleb128 0x18
 4031 01b2 00       		.byte	0
 4032 01b3 00       		.byte	0
 4033 01b4 1C       		.uleb128 0x1c
 4034 01b5 2E       		.uleb128 0x2e
 4035 01b6 01       		.byte	0x1
 4036 01b7 31       		.uleb128 0x31
 4037 01b8 13       		.uleb128 0x13
 4038 01b9 11       		.uleb128 0x11
 4039 01ba 01       		.uleb128 0x1
 4040 01bb 12       		.uleb128 0x12
 4041 01bc 06       		.uleb128 0x6
 4042 01bd 40       		.uleb128 0x40
 4043 01be 18       		.uleb128 0x18
 4044 01bf 9742     		.uleb128 0x2117
 4045 01c1 19       		.uleb128 0x19
 4046 01c2 01       		.uleb128 0x1
 4047 01c3 13       		.uleb128 0x13
 4048 01c4 00       		.byte	0
 4049 01c5 00       		.byte	0
 4050 01c6 1D       		.uleb128 0x1d
 4051 01c7 05       		.uleb128 0x5
 4052 01c8 00       		.byte	0
 4053 01c9 31       		.uleb128 0x31
 4054 01ca 13       		.uleb128 0x13
 4055 01cb 02       		.uleb128 0x2
 4056 01cc 17       		.uleb128 0x17
 4057 01cd 00       		.byte	0
 4058 01ce 00       		.byte	0
 4059 01cf 1E       		.uleb128 0x1e
 4060 01d0 05       		.uleb128 0x5
 4061 01d1 00       		.byte	0
 4062 01d2 31       		.uleb128 0x31
 4063 01d3 13       		.uleb128 0x13
 4064 01d4 02       		.uleb128 0x2
 4065 01d5 18       		.uleb128 0x18
 4066 01d6 00       		.byte	0
 4067 01d7 00       		.byte	0
 4068 01d8 1F       		.uleb128 0x1f
 4069 01d9 34       		.uleb128 0x34
 4070 01da 00       		.byte	0
 4071 01db 31       		.uleb128 0x31
 4072 01dc 13       		.uleb128 0x13
 4073 01dd 02       		.uleb128 0x2
 4074 01de 18       		.uleb128 0x18
 4075 01df 00       		.byte	0
 4076 01e0 00       		.byte	0
 4077 01e1 20       		.uleb128 0x20
 4078 01e2 34       		.uleb128 0x34
 4079 01e3 00       		.byte	0
 4080 01e4 31       		.uleb128 0x31
 4081 01e5 13       		.uleb128 0x13
 4082 01e6 1C       		.uleb128 0x1c
 4083 01e7 06       		.uleb128 0x6
 4084 01e8 00       		.byte	0
 4085 01e9 00       		.byte	0
 4086 01ea 21       		.uleb128 0x21
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 132


 4087 01eb 34       		.uleb128 0x34
 4088 01ec 00       		.byte	0
 4089 01ed 03       		.uleb128 0x3
 4090 01ee 0E       		.uleb128 0xe
 4091 01ef 3A       		.uleb128 0x3a
 4092 01f0 0B       		.uleb128 0xb
 4093 01f1 3B       		.uleb128 0x3b
 4094 01f2 05       		.uleb128 0x5
 4095 01f3 49       		.uleb128 0x49
 4096 01f4 13       		.uleb128 0x13
 4097 01f5 1C       		.uleb128 0x1c
 4098 01f6 06       		.uleb128 0x6
 4099 01f7 00       		.byte	0
 4100 01f8 00       		.byte	0
 4101 01f9 22       		.uleb128 0x22
 4102 01fa 2E       		.uleb128 0x2e
 4103 01fb 00       		.byte	0
 4104 01fc 3F       		.uleb128 0x3f
 4105 01fd 19       		.uleb128 0x19
 4106 01fe 03       		.uleb128 0x3
 4107 01ff 0E       		.uleb128 0xe
 4108 0200 3A       		.uleb128 0x3a
 4109 0201 0B       		.uleb128 0xb
 4110 0202 3B       		.uleb128 0x3b
 4111 0203 05       		.uleb128 0x5
 4112 0204 27       		.uleb128 0x27
 4113 0205 19       		.uleb128 0x19
 4114 0206 11       		.uleb128 0x11
 4115 0207 01       		.uleb128 0x1
 4116 0208 12       		.uleb128 0x12
 4117 0209 06       		.uleb128 0x6
 4118 020a 40       		.uleb128 0x40
 4119 020b 18       		.uleb128 0x18
 4120 020c 9742     		.uleb128 0x2117
 4121 020e 19       		.uleb128 0x19
 4122 020f 00       		.byte	0
 4123 0210 00       		.byte	0
 4124 0211 23       		.uleb128 0x23
 4125 0212 34       		.uleb128 0x34
 4126 0213 00       		.byte	0
 4127 0214 31       		.uleb128 0x31
 4128 0215 13       		.uleb128 0x13
 4129 0216 00       		.byte	0
 4130 0217 00       		.byte	0
 4131 0218 24       		.uleb128 0x24
 4132 0219 34       		.uleb128 0x34
 4133 021a 00       		.byte	0
 4134 021b 31       		.uleb128 0x31
 4135 021c 13       		.uleb128 0x13
 4136 021d 1C       		.uleb128 0x1c
 4137 021e 0B       		.uleb128 0xb
 4138 021f 00       		.byte	0
 4139 0220 00       		.byte	0
 4140 0221 25       		.uleb128 0x25
 4141 0222 0B       		.uleb128 0xb
 4142 0223 01       		.byte	0x1
 4143 0224 11       		.uleb128 0x11
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 133


 4144 0225 01       		.uleb128 0x1
 4145 0226 12       		.uleb128 0x12
 4146 0227 06       		.uleb128 0x6
 4147 0228 01       		.uleb128 0x1
 4148 0229 13       		.uleb128 0x13
 4149 022a 00       		.byte	0
 4150 022b 00       		.byte	0
 4151 022c 26       		.uleb128 0x26
 4152 022d 34       		.uleb128 0x34
 4153 022e 00       		.byte	0
 4154 022f 31       		.uleb128 0x31
 4155 0230 13       		.uleb128 0x13
 4156 0231 02       		.uleb128 0x2
 4157 0232 17       		.uleb128 0x17
 4158 0233 00       		.byte	0
 4159 0234 00       		.byte	0
 4160 0235 27       		.uleb128 0x27
 4161 0236 898201   		.uleb128 0x4109
 4162 0239 01       		.byte	0x1
 4163 023a 11       		.uleb128 0x11
 4164 023b 01       		.uleb128 0x1
 4165 023c 31       		.uleb128 0x31
 4166 023d 13       		.uleb128 0x13
 4167 023e 01       		.uleb128 0x1
 4168 023f 13       		.uleb128 0x13
 4169 0240 00       		.byte	0
 4170 0241 00       		.byte	0
 4171 0242 28       		.uleb128 0x28
 4172 0243 8A8201   		.uleb128 0x410a
 4173 0246 00       		.byte	0
 4174 0247 02       		.uleb128 0x2
 4175 0248 18       		.uleb128 0x18
 4176 0249 9142     		.uleb128 0x2111
 4177 024b 18       		.uleb128 0x18
 4178 024c 00       		.byte	0
 4179 024d 00       		.byte	0
 4180 024e 29       		.uleb128 0x29
 4181 024f 898201   		.uleb128 0x4109
 4182 0252 01       		.byte	0x1
 4183 0253 11       		.uleb128 0x11
 4184 0254 01       		.uleb128 0x1
 4185 0255 31       		.uleb128 0x31
 4186 0256 13       		.uleb128 0x13
 4187 0257 00       		.byte	0
 4188 0258 00       		.byte	0
 4189 0259 2A       		.uleb128 0x2a
 4190 025a 2E       		.uleb128 0x2e
 4191 025b 01       		.byte	0x1
 4192 025c 3F       		.uleb128 0x3f
 4193 025d 19       		.uleb128 0x19
 4194 025e 03       		.uleb128 0x3
 4195 025f 0E       		.uleb128 0xe
 4196 0260 3A       		.uleb128 0x3a
 4197 0261 0B       		.uleb128 0xb
 4198 0262 3B       		.uleb128 0x3b
 4199 0263 05       		.uleb128 0x5
 4200 0264 27       		.uleb128 0x27
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 134


 4201 0265 19       		.uleb128 0x19
 4202 0266 11       		.uleb128 0x11
 4203 0267 01       		.uleb128 0x1
 4204 0268 12       		.uleb128 0x12
 4205 0269 06       		.uleb128 0x6
 4206 026a 40       		.uleb128 0x40
 4207 026b 18       		.uleb128 0x18
 4208 026c 9642     		.uleb128 0x2116
 4209 026e 19       		.uleb128 0x19
 4210 026f 01       		.uleb128 0x1
 4211 0270 13       		.uleb128 0x13
 4212 0271 00       		.byte	0
 4213 0272 00       		.byte	0
 4214 0273 2B       		.uleb128 0x2b
 4215 0274 34       		.uleb128 0x34
 4216 0275 00       		.byte	0
 4217 0276 03       		.uleb128 0x3
 4218 0277 08       		.uleb128 0x8
 4219 0278 3A       		.uleb128 0x3a
 4220 0279 0B       		.uleb128 0xb
 4221 027a 3B       		.uleb128 0x3b
 4222 027b 05       		.uleb128 0x5
 4223 027c 49       		.uleb128 0x49
 4224 027d 13       		.uleb128 0x13
 4225 027e 02       		.uleb128 0x2
 4226 027f 17       		.uleb128 0x17
 4227 0280 00       		.byte	0
 4228 0281 00       		.byte	0
 4229 0282 2C       		.uleb128 0x2c
 4230 0283 1D       		.uleb128 0x1d
 4231 0284 01       		.byte	0x1
 4232 0285 31       		.uleb128 0x31
 4233 0286 13       		.uleb128 0x13
 4234 0287 52       		.uleb128 0x52
 4235 0288 01       		.uleb128 0x1
 4236 0289 55       		.uleb128 0x55
 4237 028a 17       		.uleb128 0x17
 4238 028b 58       		.uleb128 0x58
 4239 028c 0B       		.uleb128 0xb
 4240 028d 59       		.uleb128 0x59
 4241 028e 05       		.uleb128 0x5
 4242 028f 01       		.uleb128 0x1
 4243 0290 13       		.uleb128 0x13
 4244 0291 00       		.byte	0
 4245 0292 00       		.byte	0
 4246 0293 2D       		.uleb128 0x2d
 4247 0294 0B       		.uleb128 0xb
 4248 0295 01       		.byte	0x1
 4249 0296 55       		.uleb128 0x55
 4250 0297 17       		.uleb128 0x17
 4251 0298 00       		.byte	0
 4252 0299 00       		.byte	0
 4253 029a 2E       		.uleb128 0x2e
 4254 029b 1D       		.uleb128 0x1d
 4255 029c 01       		.byte	0x1
 4256 029d 31       		.uleb128 0x31
 4257 029e 13       		.uleb128 0x13
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 135


 4258 029f 11       		.uleb128 0x11
 4259 02a0 01       		.uleb128 0x1
 4260 02a1 12       		.uleb128 0x12
 4261 02a2 06       		.uleb128 0x6
 4262 02a3 58       		.uleb128 0x58
 4263 02a4 0B       		.uleb128 0xb
 4264 02a5 59       		.uleb128 0x59
 4265 02a6 05       		.uleb128 0x5
 4266 02a7 01       		.uleb128 0x1
 4267 02a8 13       		.uleb128 0x13
 4268 02a9 00       		.byte	0
 4269 02aa 00       		.byte	0
 4270 02ab 2F       		.uleb128 0x2f
 4271 02ac 1D       		.uleb128 0x1d
 4272 02ad 00       		.byte	0
 4273 02ae 31       		.uleb128 0x31
 4274 02af 13       		.uleb128 0x13
 4275 02b0 11       		.uleb128 0x11
 4276 02b1 01       		.uleb128 0x1
 4277 02b2 12       		.uleb128 0x12
 4278 02b3 06       		.uleb128 0x6
 4279 02b4 58       		.uleb128 0x58
 4280 02b5 0B       		.uleb128 0xb
 4281 02b6 59       		.uleb128 0x59
 4282 02b7 05       		.uleb128 0x5
 4283 02b8 00       		.byte	0
 4284 02b9 00       		.byte	0
 4285 02ba 30       		.uleb128 0x30
 4286 02bb 2E       		.uleb128 0x2e
 4287 02bc 01       		.byte	0x1
 4288 02bd 31       		.uleb128 0x31
 4289 02be 13       		.uleb128 0x13
 4290 02bf 11       		.uleb128 0x11
 4291 02c0 01       		.uleb128 0x1
 4292 02c1 12       		.uleb128 0x12
 4293 02c2 06       		.uleb128 0x6
 4294 02c3 40       		.uleb128 0x40
 4295 02c4 18       		.uleb128 0x18
 4296 02c5 9642     		.uleb128 0x2116
 4297 02c7 19       		.uleb128 0x19
 4298 02c8 01       		.uleb128 0x1
 4299 02c9 13       		.uleb128 0x13
 4300 02ca 00       		.byte	0
 4301 02cb 00       		.byte	0
 4302 02cc 31       		.uleb128 0x31
 4303 02cd 2E       		.uleb128 0x2e
 4304 02ce 00       		.byte	0
 4305 02cf 31       		.uleb128 0x31
 4306 02d0 13       		.uleb128 0x13
 4307 02d1 11       		.uleb128 0x11
 4308 02d2 01       		.uleb128 0x1
 4309 02d3 12       		.uleb128 0x12
 4310 02d4 06       		.uleb128 0x6
 4311 02d5 40       		.uleb128 0x40
 4312 02d6 18       		.uleb128 0x18
 4313 02d7 9742     		.uleb128 0x2117
 4314 02d9 19       		.uleb128 0x19
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 136


 4315 02da 00       		.byte	0
 4316 02db 00       		.byte	0
 4317 02dc 32       		.uleb128 0x32
 4318 02dd 01       		.uleb128 0x1
 4319 02de 01       		.byte	0x1
 4320 02df 49       		.uleb128 0x49
 4321 02e0 13       		.uleb128 0x13
 4322 02e1 01       		.uleb128 0x1
 4323 02e2 13       		.uleb128 0x13
 4324 02e3 00       		.byte	0
 4325 02e4 00       		.byte	0
 4326 02e5 33       		.uleb128 0x33
 4327 02e6 21       		.uleb128 0x21
 4328 02e7 00       		.byte	0
 4329 02e8 49       		.uleb128 0x49
 4330 02e9 13       		.uleb128 0x13
 4331 02ea 2F       		.uleb128 0x2f
 4332 02eb 0B       		.uleb128 0xb
 4333 02ec 00       		.byte	0
 4334 02ed 00       		.byte	0
 4335 02ee 34       		.uleb128 0x34
 4336 02ef 34       		.uleb128 0x34
 4337 02f0 00       		.byte	0
 4338 02f1 03       		.uleb128 0x3
 4339 02f2 0E       		.uleb128 0xe
 4340 02f3 3A       		.uleb128 0x3a
 4341 02f4 0B       		.uleb128 0xb
 4342 02f5 3B       		.uleb128 0x3b
 4343 02f6 0B       		.uleb128 0xb
 4344 02f7 49       		.uleb128 0x49
 4345 02f8 13       		.uleb128 0x13
 4346 02f9 02       		.uleb128 0x2
 4347 02fa 18       		.uleb128 0x18
 4348 02fb 00       		.byte	0
 4349 02fc 00       		.byte	0
 4350 02fd 35       		.uleb128 0x35
 4351 02fe 34       		.uleb128 0x34
 4352 02ff 00       		.byte	0
 4353 0300 03       		.uleb128 0x3
 4354 0301 0E       		.uleb128 0xe
 4355 0302 3A       		.uleb128 0x3a
 4356 0303 0B       		.uleb128 0xb
 4357 0304 3B       		.uleb128 0x3b
 4358 0305 0B       		.uleb128 0xb
 4359 0306 49       		.uleb128 0x49
 4360 0307 13       		.uleb128 0x13
 4361 0308 3F       		.uleb128 0x3f
 4362 0309 19       		.uleb128 0x19
 4363 030a 02       		.uleb128 0x2
 4364 030b 18       		.uleb128 0x18
 4365 030c 00       		.byte	0
 4366 030d 00       		.byte	0
 4367 030e 36       		.uleb128 0x36
 4368 030f 2E       		.uleb128 0x2e
 4369 0310 00       		.byte	0
 4370 0311 3F       		.uleb128 0x3f
 4371 0312 19       		.uleb128 0x19
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 137


 4372 0313 3C       		.uleb128 0x3c
 4373 0314 19       		.uleb128 0x19
 4374 0315 6E       		.uleb128 0x6e
 4375 0316 0E       		.uleb128 0xe
 4376 0317 03       		.uleb128 0x3
 4377 0318 0E       		.uleb128 0xe
 4378 0319 3A       		.uleb128 0x3a
 4379 031a 0B       		.uleb128 0xb
 4380 031b 3B       		.uleb128 0x3b
 4381 031c 0B       		.uleb128 0xb
 4382 031d 00       		.byte	0
 4383 031e 00       		.byte	0
 4384 031f 00       		.byte	0
 4385              		.section	.debug_loc,"",%progbits
 4386              	.Ldebug_loc0:
 4387              	.LLST0:
 4388 0000 0C000000 		.4byte	.LVL0
 4389 0004 12000000 		.4byte	.LVL1
 4390 0008 1000     		.2byte	0x10
 4391 000a 73       		.byte	0x73
 4392 000b 00       		.sleb128 0
 4393 000c 32       		.byte	0x32
 4394 000d 24       		.byte	0x24
 4395 000e 4C       		.byte	0x4c
 4396 000f 1A       		.byte	0x1a
 4397 0010 23       		.byte	0x23
 4398 0011 18       		.uleb128 0x18
 4399 0012 71       		.byte	0x71
 4400 0013 00       		.sleb128 0
 4401 0014 32       		.byte	0x32
 4402 0015 25       		.byte	0x25
 4403 0016 33       		.byte	0x33
 4404 0017 1A       		.byte	0x1a
 4405 0018 25       		.byte	0x25
 4406 0019 9F       		.byte	0x9f
 4407 001a 00000000 		.4byte	0
 4408 001e 00000000 		.4byte	0
 4409              	.LLST1:
 4410 0022 00000000 		.4byte	.LVL3
 4411 0026 07000000 		.4byte	.LVL4-1
 4412 002a 0100     		.2byte	0x1
 4413 002c 50       		.byte	0x50
 4414 002d 07000000 		.4byte	.LVL4-1
 4415 0031 1A000000 		.4byte	.LVL8
 4416 0035 0100     		.2byte	0x1
 4417 0037 54       		.byte	0x54
 4418 0038 1A000000 		.4byte	.LVL8
 4419 003c 20000000 		.4byte	.LFE6
 4420 0040 0400     		.2byte	0x4
 4421 0042 F3       		.byte	0xf3
 4422 0043 01       		.uleb128 0x1
 4423 0044 50       		.byte	0x50
 4424 0045 9F       		.byte	0x9f
 4425 0046 00000000 		.4byte	0
 4426 004a 00000000 		.4byte	0
 4427              	.LLST2:
 4428 004e 08000000 		.4byte	.LVL4
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 138


 4429 0052 19000000 		.4byte	.LVL7-1
 4430 0056 0100     		.2byte	0x1
 4431 0058 50       		.byte	0x50
 4432 0059 00000000 		.4byte	0
 4433 005d 00000000 		.4byte	0
 4434              	.LLST3:
 4435 0061 10000000 		.4byte	.LVL5
 4436 0065 14000000 		.4byte	.LVL6
 4437 0069 0100     		.2byte	0x1
 4438 006b 52       		.byte	0x52
 4439 006c 14000000 		.4byte	.LVL6
 4440 0070 19000000 		.4byte	.LVL7-1
 4441 0074 0100     		.2byte	0x1
 4442 0076 53       		.byte	0x53
 4443 0077 00000000 		.4byte	0
 4444 007b 00000000 		.4byte	0
 4445              	.LLST4:
 4446 007f 06000000 		.4byte	.LVL10
 4447 0083 0D000000 		.4byte	.LVL12-1
 4448 0087 0100     		.2byte	0x1
 4449 0089 50       		.byte	0x50
 4450 008a 00000000 		.4byte	0
 4451 008e 00000000 		.4byte	0
 4452              	.LLST5:
 4453 0092 0A000000 		.4byte	.LVL11
 4454 0096 12000000 		.4byte	.LVL13
 4455 009a 0500     		.2byte	0x5
 4456 009c 74       		.byte	0x74
 4457 009d 00       		.sleb128 0
 4458 009e 33       		.byte	0x33
 4459 009f 1A       		.byte	0x1a
 4460 00a0 9F       		.byte	0x9f
 4461 00a1 12000000 		.4byte	.LVL13
 4462 00a5 18000000 		.4byte	.LFE8
 4463 00a9 0100     		.2byte	0x1
 4464 00ab 50       		.byte	0x50
 4465 00ac 00000000 		.4byte	0
 4466 00b0 00000000 		.4byte	0
 4467              	.LLST6:
 4468 00b4 00000000 		.4byte	.LVL14
 4469 00b8 07000000 		.4byte	.LVL15-1
 4470 00bc 0100     		.2byte	0x1
 4471 00be 50       		.byte	0x50
 4472 00bf 07000000 		.4byte	.LVL15-1
 4473 00c3 1E000000 		.4byte	.LVL17
 4474 00c7 0100     		.2byte	0x1
 4475 00c9 54       		.byte	0x54
 4476 00ca 1E000000 		.4byte	.LVL17
 4477 00ce 24000000 		.4byte	.LFE9
 4478 00d2 0400     		.2byte	0x4
 4479 00d4 F3       		.byte	0xf3
 4480 00d5 01       		.uleb128 0x1
 4481 00d6 50       		.byte	0x50
 4482 00d7 9F       		.byte	0x9f
 4483 00d8 00000000 		.4byte	0
 4484 00dc 00000000 		.4byte	0
 4485              	.LLST7:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 139


 4486 00e0 08000000 		.4byte	.LVL15
 4487 00e4 1D000000 		.4byte	.LVL16-1
 4488 00e8 0100     		.2byte	0x1
 4489 00ea 50       		.byte	0x50
 4490 00eb 00000000 		.4byte	0
 4491 00ef 00000000 		.4byte	0
 4492              	.LLST8:
 4493 00f3 00000000 		.4byte	.LVL18
 4494 00f7 07000000 		.4byte	.LVL19-1
 4495 00fb 0100     		.2byte	0x1
 4496 00fd 50       		.byte	0x50
 4497 00fe 07000000 		.4byte	.LVL19-1
 4498 0102 0C000000 		.4byte	.LVL20
 4499 0106 0100     		.2byte	0x1
 4500 0108 54       		.byte	0x54
 4501 0109 0C000000 		.4byte	.LVL20
 4502 010d 24000000 		.4byte	.LFE11
 4503 0111 0400     		.2byte	0x4
 4504 0113 F3       		.byte	0xf3
 4505 0114 01       		.uleb128 0x1
 4506 0115 50       		.byte	0x50
 4507 0116 9F       		.byte	0x9f
 4508 0117 00000000 		.4byte	0
 4509 011b 00000000 		.4byte	0
 4510              	.LLST9:
 4511 011f 08000000 		.4byte	.LVL19
 4512 0123 1B000000 		.4byte	.LVL21-1
 4513 0127 0100     		.2byte	0x1
 4514 0129 50       		.byte	0x50
 4515 012a 00000000 		.4byte	0
 4516 012e 00000000 		.4byte	0
 4517              	.LLST10:
 4518 0132 00000000 		.4byte	.LVL22
 4519 0136 08000000 		.4byte	.LVL23
 4520 013a 0100     		.2byte	0x1
 4521 013c 50       		.byte	0x50
 4522 013d 08000000 		.4byte	.LVL23
 4523 0141 14000000 		.4byte	.LFE12
 4524 0145 0100     		.2byte	0x1
 4525 0147 52       		.byte	0x52
 4526 0148 00000000 		.4byte	0
 4527 014c 00000000 		.4byte	0
 4528              	.LLST11:
 4529 0150 0A000000 		.4byte	.LVL24
 4530 0154 0C000000 		.4byte	.LVL25
 4531 0158 0500     		.2byte	0x5
 4532 015a 70       		.byte	0x70
 4533 015b 00       		.sleb128 0
 4534 015c 49       		.byte	0x49
 4535 015d 1A       		.byte	0x1a
 4536 015e 9F       		.byte	0x9f
 4537 015f 0C000000 		.4byte	.LVL25
 4538 0163 14000000 		.4byte	.LFE12
 4539 0167 0100     		.2byte	0x1
 4540 0169 50       		.byte	0x50
 4541 016a 00000000 		.4byte	0
 4542 016e 00000000 		.4byte	0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 140


 4543              	.LLST12:
 4544 0172 00000000 		.4byte	.LVL28
 4545 0176 04000000 		.4byte	.LVL29
 4546 017a 0100     		.2byte	0x1
 4547 017c 50       		.byte	0x50
 4548 017d 04000000 		.4byte	.LVL29
 4549 0181 0E000000 		.4byte	.LFE15
 4550 0185 0400     		.2byte	0x4
 4551 0187 F3       		.byte	0xf3
 4552 0188 01       		.uleb128 0x1
 4553 0189 50       		.byte	0x50
 4554 018a 9F       		.byte	0x9f
 4555 018b 00000000 		.4byte	0
 4556 018f 00000000 		.4byte	0
 4557              	.LLST13:
 4558 0193 00000000 		.4byte	.LVL31
 4559 0197 04000000 		.4byte	.LVL32
 4560 019b 0100     		.2byte	0x1
 4561 019d 50       		.byte	0x50
 4562 019e 04000000 		.4byte	.LVL32
 4563 01a2 0C000000 		.4byte	.LFE16
 4564 01a6 0400     		.2byte	0x4
 4565 01a8 F3       		.byte	0xf3
 4566 01a9 01       		.uleb128 0x1
 4567 01aa 50       		.byte	0x50
 4568 01ab 9F       		.byte	0x9f
 4569 01ac 00000000 		.4byte	0
 4570 01b0 00000000 		.4byte	0
 4571              	.LLST14:
 4572 01b4 00000000 		.4byte	.LVL33
 4573 01b8 04000000 		.4byte	.LVL34
 4574 01bc 0100     		.2byte	0x1
 4575 01be 50       		.byte	0x50
 4576 01bf 04000000 		.4byte	.LVL34
 4577 01c3 10000000 		.4byte	.LFE17
 4578 01c7 0400     		.2byte	0x4
 4579 01c9 F3       		.byte	0xf3
 4580 01ca 01       		.uleb128 0x1
 4581 01cb 50       		.byte	0x50
 4582 01cc 9F       		.byte	0x9f
 4583 01cd 00000000 		.4byte	0
 4584 01d1 00000000 		.4byte	0
 4585              	.LLST15:
 4586 01d5 00000000 		.4byte	.LVL36
 4587 01d9 04000000 		.4byte	.LVL37
 4588 01dd 0100     		.2byte	0x1
 4589 01df 50       		.byte	0x50
 4590 01e0 04000000 		.4byte	.LVL37
 4591 01e4 10000000 		.4byte	.LFE18
 4592 01e8 0400     		.2byte	0x4
 4593 01ea F3       		.byte	0xf3
 4594 01eb 01       		.uleb128 0x1
 4595 01ec 50       		.byte	0x50
 4596 01ed 9F       		.byte	0x9f
 4597 01ee 00000000 		.4byte	0
 4598 01f2 00000000 		.4byte	0
 4599              	.LLST16:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 141


 4600 01f6 00000000 		.4byte	.LVL38
 4601 01fa 17000000 		.4byte	.LVL40-1
 4602 01fe 0100     		.2byte	0x1
 4603 0200 50       		.byte	0x50
 4604 0201 17000000 		.4byte	.LVL40-1
 4605 0205 34000000 		.4byte	.LFE19
 4606 0209 0400     		.2byte	0x4
 4607 020b F3       		.byte	0xf3
 4608 020c 01       		.uleb128 0x1
 4609 020d 50       		.byte	0x50
 4610 020e 9F       		.byte	0x9f
 4611 020f 00000000 		.4byte	0
 4612 0213 00000000 		.4byte	0
 4613              	.LLST17:
 4614 0217 00000000 		.4byte	.LVL38
 4615 021b 17000000 		.4byte	.LVL40-1
 4616 021f 0100     		.2byte	0x1
 4617 0221 51       		.byte	0x51
 4618 0222 17000000 		.4byte	.LVL40-1
 4619 0226 34000000 		.4byte	.LFE19
 4620 022a 0400     		.2byte	0x4
 4621 022c F3       		.byte	0xf3
 4622 022d 01       		.uleb128 0x1
 4623 022e 51       		.byte	0x51
 4624 022f 9F       		.byte	0x9f
 4625 0230 00000000 		.4byte	0
 4626 0234 00000000 		.4byte	0
 4627              	.LLST18:
 4628 0238 18000000 		.4byte	.LVL40
 4629 023c 2B000000 		.4byte	.LVL44-1
 4630 0240 0100     		.2byte	0x1
 4631 0242 50       		.byte	0x50
 4632 0243 00000000 		.4byte	0
 4633 0247 00000000 		.4byte	0
 4634              	.LLST19:
 4635 024b 10000000 		.4byte	.LVL39
 4636 024f 2C000000 		.4byte	.LVL45
 4637 0253 0100     		.2byte	0x1
 4638 0255 55       		.byte	0x55
 4639 0256 00000000 		.4byte	0
 4640 025a 00000000 		.4byte	0
 4641              	.LLST20:
 4642 025e 22000000 		.4byte	.LVL41
 4643 0262 26000000 		.4byte	.LVL43
 4644 0266 0100     		.2byte	0x1
 4645 0268 53       		.byte	0x53
 4646 0269 26000000 		.4byte	.LVL43
 4647 026d 2C000000 		.4byte	.LVL46
 4648 0271 0100     		.2byte	0x1
 4649 0273 57       		.byte	0x57
 4650 0274 00000000 		.4byte	0
 4651 0278 00000000 		.4byte	0
 4652              	.LLST21:
 4653 027c 00000000 		.4byte	.LVL47
 4654 0280 18000000 		.4byte	.LVL50
 4655 0284 0100     		.2byte	0x1
 4656 0286 50       		.byte	0x50
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 142


 4657 0287 18000000 		.4byte	.LVL50
 4658 028b 20000000 		.4byte	.LFE20
 4659 028f 0400     		.2byte	0x4
 4660 0291 F3       		.byte	0xf3
 4661 0292 01       		.uleb128 0x1
 4662 0293 50       		.byte	0x50
 4663 0294 9F       		.byte	0x9f
 4664 0295 00000000 		.4byte	0
 4665 0299 00000000 		.4byte	0
 4666              	.LLST22:
 4667 029d 0A000000 		.4byte	.LVL48
 4668 02a1 16000000 		.4byte	.LVL49
 4669 02a5 0F00     		.2byte	0xf
 4670 02a7 71       		.byte	0x71
 4671 02a8 00       		.sleb128 0
 4672 02a9 70       		.byte	0x70
 4673 02aa 00       		.sleb128 0
 4674 02ab 33       		.byte	0x33
 4675 02ac 1A       		.byte	0x1a
 4676 02ad 08       		.byte	0x8
 4677 02ae FF       		.byte	0xff
 4678 02af 1A       		.byte	0x1a
 4679 02b0 33       		.byte	0x33
 4680 02b1 24       		.byte	0x24
 4681 02b2 23       		.byte	0x23
 4682 02b3 06       		.uleb128 0x6
 4683 02b4 25       		.byte	0x25
 4684 02b5 9F       		.byte	0x9f
 4685 02b6 00000000 		.4byte	0
 4686 02ba 00000000 		.4byte	0
 4687              	.LLST23:
 4688 02be 00000000 		.4byte	.LVL51
 4689 02c2 04000000 		.4byte	.LVL52
 4690 02c6 0100     		.2byte	0x1
 4691 02c8 50       		.byte	0x50
 4692 02c9 04000000 		.4byte	.LVL52
 4693 02cd 14000000 		.4byte	.LFE21
 4694 02d1 0400     		.2byte	0x4
 4695 02d3 F3       		.byte	0xf3
 4696 02d4 01       		.uleb128 0x1
 4697 02d5 50       		.byte	0x50
 4698 02d6 9F       		.byte	0x9f
 4699 02d7 00000000 		.4byte	0
 4700 02db 00000000 		.4byte	0
 4701              	.LLST24:
 4702 02df 00000000 		.4byte	.LVL53
 4703 02e3 06000000 		.4byte	.LVL54
 4704 02e7 0100     		.2byte	0x1
 4705 02e9 50       		.byte	0x50
 4706 02ea 06000000 		.4byte	.LVL54
 4707 02ee 18000000 		.4byte	.LFE22
 4708 02f2 0400     		.2byte	0x4
 4709 02f4 F3       		.byte	0xf3
 4710 02f5 01       		.uleb128 0x1
 4711 02f6 50       		.byte	0x50
 4712 02f7 9F       		.byte	0x9f
 4713 02f8 00000000 		.4byte	0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 143


 4714 02fc 00000000 		.4byte	0
 4715              	.LLST25:
 4716 0300 00000000 		.4byte	.LVL55
 4717 0304 04000000 		.4byte	.LVL56
 4718 0308 0100     		.2byte	0x1
 4719 030a 50       		.byte	0x50
 4720 030b 04000000 		.4byte	.LVL56
 4721 030f 14000000 		.4byte	.LFE23
 4722 0313 0400     		.2byte	0x4
 4723 0315 F3       		.byte	0xf3
 4724 0316 01       		.uleb128 0x1
 4725 0317 50       		.byte	0x50
 4726 0318 9F       		.byte	0x9f
 4727 0319 00000000 		.4byte	0
 4728 031d 00000000 		.4byte	0
 4729              	.LLST26:
 4730 0321 00000000 		.4byte	.LVL57
 4731 0325 04000000 		.4byte	.LVL58
 4732 0329 0100     		.2byte	0x1
 4733 032b 50       		.byte	0x50
 4734 032c 04000000 		.4byte	.LVL58
 4735 0330 14000000 		.4byte	.LFE24
 4736 0334 0400     		.2byte	0x4
 4737 0336 F3       		.byte	0xf3
 4738 0337 01       		.uleb128 0x1
 4739 0338 50       		.byte	0x50
 4740 0339 9F       		.byte	0x9f
 4741 033a 00000000 		.4byte	0
 4742 033e 00000000 		.4byte	0
 4743              	.LLST27:
 4744 0342 00000000 		.4byte	.LVL59
 4745 0346 04000000 		.4byte	.LVL60
 4746 034a 0100     		.2byte	0x1
 4747 034c 50       		.byte	0x50
 4748 034d 04000000 		.4byte	.LVL60
 4749 0351 14000000 		.4byte	.LFE25
 4750 0355 0400     		.2byte	0x4
 4751 0357 F3       		.byte	0xf3
 4752 0358 01       		.uleb128 0x1
 4753 0359 50       		.byte	0x50
 4754 035a 9F       		.byte	0x9f
 4755 035b 00000000 		.4byte	0
 4756 035f 00000000 		.4byte	0
 4757              	.LLST28:
 4758 0363 00000000 		.4byte	.LVL62
 4759 0367 08000000 		.4byte	.LVL63
 4760 036b 0100     		.2byte	0x1
 4761 036d 50       		.byte	0x50
 4762 036e 08000000 		.4byte	.LVL63
 4763 0372 22000000 		.4byte	.LVL67
 4764 0376 0100     		.2byte	0x1
 4765 0378 54       		.byte	0x54
 4766 0379 00000000 		.4byte	0
 4767 037d 00000000 		.4byte	0
 4768              	.LLST29:
 4769 0381 1C000000 		.4byte	.LVL72
 4770 0385 28000000 		.4byte	.LVL74
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 144


 4771 0389 1000     		.2byte	0x10
 4772 038b 73       		.byte	0x73
 4773 038c 00       		.sleb128 0
 4774 038d 32       		.byte	0x32
 4775 038e 24       		.byte	0x24
 4776 038f 4C       		.byte	0x4c
 4777 0390 1A       		.byte	0x1a
 4778 0391 23       		.byte	0x23
 4779 0392 18       		.uleb128 0x18
 4780 0393 70       		.byte	0x70
 4781 0394 00       		.sleb128 0
 4782 0395 32       		.byte	0x32
 4783 0396 25       		.byte	0x25
 4784 0397 33       		.byte	0x33
 4785 0398 1A       		.byte	0x1a
 4786 0399 25       		.byte	0x25
 4787 039a 9F       		.byte	0x9f
 4788 039b 28000000 		.4byte	.LVL74
 4789 039f 34000000 		.4byte	.LVL77
 4790 03a3 0E00     		.2byte	0xe
 4791 03a5 73       		.byte	0x73
 4792 03a6 00       		.sleb128 0
 4793 03a7 4C       		.byte	0x4c
 4794 03a8 1A       		.byte	0x1a
 4795 03a9 23       		.byte	0x23
 4796 03aa 18       		.uleb128 0x18
 4797 03ab 70       		.byte	0x70
 4798 03ac 00       		.sleb128 0
 4799 03ad 32       		.byte	0x32
 4800 03ae 25       		.byte	0x25
 4801 03af 33       		.byte	0x33
 4802 03b0 1A       		.byte	0x1a
 4803 03b1 25       		.byte	0x25
 4804 03b2 9F       		.byte	0x9f
 4805 03b3 00000000 		.4byte	0
 4806 03b7 00000000 		.4byte	0
 4807              	.LLST30:
 4808 03bb 18000000 		.4byte	.LVL71
 4809 03bf 9A000000 		.4byte	.LVL86
 4810 03c3 0200     		.2byte	0x2
 4811 03c5 91       		.byte	0x91
 4812 03c6 5C       		.sleb128 -36
 4813 03c7 00000000 		.4byte	0
 4814 03cb 00000000 		.4byte	0
 4815              	.LLST31:
 4816 03cf 24000000 		.4byte	.LVL73
 4817 03d3 2A000000 		.4byte	.LVL75
 4818 03d7 0A00     		.2byte	0xa
 4819 03d9 71       		.byte	0x71
 4820 03da 00       		.sleb128 0
 4821 03db 11       		.byte	0x11
 4822 03dc 80F08380 		.sleb128 -1073678336
 4822      7C
 4823 03e1 1A       		.byte	0x1a
 4824 03e2 9F       		.byte	0x9f
 4825 03e3 2A000000 		.4byte	.LVL75
 4826 03e7 30000000 		.4byte	.LVL76
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 145


 4827 03eb 0100     		.2byte	0x1
 4828 03ed 51       		.byte	0x51
 4829 03ee 4E000000 		.4byte	.LVL78
 4830 03f2 52000000 		.4byte	.LVL79
 4831 03f6 0100     		.2byte	0x1
 4832 03f8 53       		.byte	0x53
 4833 03f9 52000000 		.4byte	.LVL79
 4834 03fd 56000000 		.4byte	.LVL80
 4835 0401 0200     		.2byte	0x2
 4836 0403 75       		.byte	0x75
 4837 0404 00       		.sleb128 0
 4838 0405 6E000000 		.4byte	.LVL82
 4839 0409 9A000000 		.4byte	.LVL86
 4840 040d 0100     		.2byte	0x1
 4841 040f 57       		.byte	0x57
 4842 0410 00000000 		.4byte	0
 4843 0414 00000000 		.4byte	0
 4844              	.LLST32:
 4845 0418 6E000000 		.4byte	.LVL82
 4846 041c 72000000 		.4byte	.LVL83
 4847 0420 0100     		.2byte	0x1
 4848 0422 54       		.byte	0x54
 4849 0423 72000000 		.4byte	.LVL83
 4850 0427 76000000 		.4byte	.LVL84
 4851 042b 0300     		.2byte	0x3
 4852 042d 74       		.byte	0x74
 4853 042e 70       		.sleb128 -16
 4854 042f 9F       		.byte	0x9f
 4855 0430 76000000 		.4byte	.LVL84
 4856 0434 9A000000 		.4byte	.LVL86
 4857 0438 0100     		.2byte	0x1
 4858 043a 54       		.byte	0x54
 4859 043b 00000000 		.4byte	0
 4860 043f 00000000 		.4byte	0
 4861              	.LLST33:
 4862 0443 00000000 		.4byte	.LVL87
 4863 0447 1B000000 		.4byte	.LVL88-1
 4864 044b 0100     		.2byte	0x1
 4865 044d 50       		.byte	0x50
 4866 044e 1B000000 		.4byte	.LVL88-1
 4867 0452 6E000000 		.4byte	.LVL98
 4868 0456 0100     		.2byte	0x1
 4869 0458 54       		.byte	0x54
 4870 0459 6E000000 		.4byte	.LVL98
 4871 045d 70000000 		.4byte	.LVL99
 4872 0461 0300     		.2byte	0x3
 4873 0463 74       		.byte	0x74
 4874 0464 1C       		.sleb128 28
 4875 0465 9F       		.byte	0x9f
 4876 0466 70000000 		.4byte	.LVL99
 4877 046a 82000000 		.4byte	.LVL101
 4878 046e 0300     		.2byte	0x3
 4879 0470 75       		.byte	0x75
 4880 0471 18       		.sleb128 24
 4881 0472 9F       		.byte	0x9f
 4882 0473 82000000 		.4byte	.LVL101
 4883 0477 B8000000 		.4byte	.LFE10
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 146


 4884 047b 0400     		.2byte	0x4
 4885 047d F3       		.byte	0xf3
 4886 047e 01       		.uleb128 0x1
 4887 047f 50       		.byte	0x50
 4888 0480 9F       		.byte	0x9f
 4889 0481 00000000 		.4byte	0
 4890 0485 00000000 		.4byte	0
 4891              	.LLST34:
 4892 0489 1E000000 		.4byte	.LVL89
 4893 048d 98000000 		.4byte	.LVL103
 4894 0491 0200     		.2byte	0x2
 4895 0493 91       		.byte	0x91
 4896 0494 64       		.sleb128 -28
 4897 0495 00000000 		.4byte	0
 4898 0499 00000000 		.4byte	0
 4899              	.LLST35:
 4900 049d 44000000 		.4byte	.LVL94
 4901 04a1 4A000000 		.4byte	.LVL95
 4902 04a5 0100     		.2byte	0x1
 4903 04a7 53       		.byte	0x53
 4904 04a8 4A000000 		.4byte	.LVL95
 4905 04ac 4E000000 		.4byte	.LVL96
 4906 04b0 0700     		.2byte	0x7
 4907 04b2 0C       		.byte	0xc
 4908 04b3 0C0F0340 		.4byte	0x40030f0c
 4909 04b7 06       		.byte	0x6
 4910 04b8 9F       		.byte	0x9f
 4911 04b9 00000000 		.4byte	0
 4912 04bd 00000000 		.4byte	0
 4913              	.LLST36:
 4914 04c1 00000000 		.4byte	.LVL87
 4915 04c5 28000000 		.4byte	.LVL91
 4916 04c9 0200     		.2byte	0x2
 4917 04cb 30       		.byte	0x30
 4918 04cc 9F       		.byte	0x9f
 4919 04cd 28000000 		.4byte	.LVL91
 4920 04d1 2E000000 		.4byte	.LVL93
 4921 04d5 0200     		.2byte	0x2
 4922 04d7 31       		.byte	0x31
 4923 04d8 9F       		.byte	0x9f
 4924 04d9 2E000000 		.4byte	.LVL93
 4925 04dd 98000000 		.4byte	.LVL103
 4926 04e1 0200     		.2byte	0x2
 4927 04e3 7D       		.byte	0x7d
 4928 04e4 00       		.sleb128 0
 4929 04e5 00000000 		.4byte	0
 4930 04e9 00000000 		.4byte	0
 4931              	.LLST37:
 4932 04ed 00000000 		.4byte	.LVL104
 4933 04f1 08000000 		.4byte	.LVL105
 4934 04f5 0100     		.2byte	0x1
 4935 04f7 50       		.byte	0x50
 4936 04f8 08000000 		.4byte	.LVL105
 4937 04fc 14000000 		.4byte	.LFE29
 4938 0500 0400     		.2byte	0x4
 4939 0502 F3       		.byte	0xf3
 4940 0503 01       		.uleb128 0x1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 147


 4941 0504 50       		.byte	0x50
 4942 0505 9F       		.byte	0x9f
 4943 0506 00000000 		.4byte	0
 4944 050a 00000000 		.4byte	0
 4945              	.LLST38:
 4946 050e 00000000 		.4byte	.LVL107
 4947 0512 18000000 		.4byte	.LVL108
 4948 0516 0100     		.2byte	0x1
 4949 0518 50       		.byte	0x50
 4950 0519 18000000 		.4byte	.LVL108
 4951 051d 48000000 		.4byte	.LFE30
 4952 0521 0400     		.2byte	0x4
 4953 0523 F3       		.byte	0xf3
 4954 0524 01       		.uleb128 0x1
 4955 0525 50       		.byte	0x50
 4956 0526 9F       		.byte	0x9f
 4957 0527 00000000 		.4byte	0
 4958 052b 00000000 		.4byte	0
 4959              	.LLST39:
 4960 052f 00000000 		.4byte	.LVL111
 4961 0533 0C000000 		.4byte	.LVL112
 4962 0537 0200     		.2byte	0x2
 4963 0539 30       		.byte	0x30
 4964 053a 9F       		.byte	0x9f
 4965 053b 0C000000 		.4byte	.LVL112
 4966 053f 10000000 		.4byte	.LVL113
 4967 0543 0200     		.2byte	0x2
 4968 0545 31       		.byte	0x31
 4969 0546 9F       		.byte	0x9f
 4970 0547 10000000 		.4byte	.LVL113
 4971 054b 12000000 		.4byte	.LVL114
 4972 054f 0200     		.2byte	0x2
 4973 0551 32       		.byte	0x32
 4974 0552 9F       		.byte	0x9f
 4975 0553 12000000 		.4byte	.LVL114
 4976 0557 14000000 		.4byte	.LVL115
 4977 055b 0200     		.2byte	0x2
 4978 055d 33       		.byte	0x33
 4979 055e 9F       		.byte	0x9f
 4980 055f 14000000 		.4byte	.LVL115
 4981 0563 54000000 		.4byte	.LFE32
 4982 0567 0200     		.2byte	0x2
 4983 0569 35       		.byte	0x35
 4984 056a 9F       		.byte	0x9f
 4985 056b 00000000 		.4byte	0
 4986 056f 00000000 		.4byte	0
 4987              	.LLST40:
 4988 0573 18000000 		.4byte	.LVL117
 4989 0577 22000000 		.4byte	.LVL118
 4990 057b 0200     		.2byte	0x2
 4991 057d 31       		.byte	0x31
 4992 057e 9F       		.byte	0x9f
 4993 057f 00000000 		.4byte	0
 4994 0583 00000000 		.4byte	0
 4995              	.LLST42:
 4996 0587 14000000 		.4byte	.LVL115
 4997 058b 18000000 		.4byte	.LVL117
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 148


 4998 058f 0600     		.2byte	0x6
 4999 0591 03       		.byte	0x3
 5000 0592 00000000 		.4byte	CySysTickServiceCallbacks
 5001 0596 9F       		.byte	0x9f
 5002 0597 00000000 		.4byte	0
 5003 059b 00000000 		.4byte	0
 5004              	.LLST43:
 5005 059f 14000000 		.4byte	.LVL115
 5006 05a3 18000000 		.4byte	.LVL117
 5007 05a7 0200     		.2byte	0x2
 5008 05a9 3F       		.byte	0x3f
 5009 05aa 9F       		.byte	0x9f
 5010 05ab 00000000 		.4byte	0
 5011 05af 00000000 		.4byte	0
 5012              	.LLST44:
 5013 05b3 14000000 		.4byte	.LVL115
 5014 05b7 16000000 		.4byte	.LVL116
 5015 05bb 0500     		.2byte	0x5
 5016 05bd 0C       		.byte	0xc
 5017 05be 3C000020 		.4byte	0x2000003c
 5018 05c2 16000000 		.4byte	.LVL116
 5019 05c6 18000000 		.4byte	.LVL117
 5020 05ca 0200     		.2byte	0x2
 5021 05cc 73       		.byte	0x73
 5022 05cd 00       		.sleb128 0
 5023 05ce 00000000 		.4byte	0
 5024 05d2 00000000 		.4byte	0
 5025              	.LLST45:
 5026 05d6 2C000000 		.4byte	.LVL119
 5027 05da 30000000 		.4byte	.LVL120
 5028 05de 0100     		.2byte	0x1
 5029 05e0 50       		.byte	0x50
 5030 05e1 00000000 		.4byte	0
 5031 05e5 00000000 		.4byte	0
 5032              	.LLST46:
 5033 05e9 00000000 		.4byte	.LVL124
 5034 05ed 04000000 		.4byte	.LVL125
 5035 05f1 0100     		.2byte	0x1
 5036 05f3 50       		.byte	0x50
 5037 05f4 04000000 		.4byte	.LVL125
 5038 05f8 10000000 		.4byte	.LFE37
 5039 05fc 0400     		.2byte	0x4
 5040 05fe F3       		.byte	0xf3
 5041 05ff 01       		.uleb128 0x1
 5042 0600 50       		.byte	0x50
 5043 0601 9F       		.byte	0x9f
 5044 0602 00000000 		.4byte	0
 5045 0606 00000000 		.4byte	0
 5046              	.LLST47:
 5047 060a 0A000000 		.4byte	.LVL127
 5048 060e 0E000000 		.4byte	.LVL128
 5049 0612 0200     		.2byte	0x2
 5050 0614 31       		.byte	0x31
 5051 0615 9F       		.byte	0x9f
 5052 0616 00000000 		.4byte	0
 5053 061a 00000000 		.4byte	0
 5054              	.LLST48:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 149


 5055 061e 00000000 		.4byte	.LVL131
 5056 0622 06000000 		.4byte	.LVL132
 5057 0626 0100     		.2byte	0x1
 5058 0628 50       		.byte	0x50
 5059 0629 06000000 		.4byte	.LVL132
 5060 062d 10000000 		.4byte	.LFE44
 5061 0631 0400     		.2byte	0x4
 5062 0633 F3       		.byte	0xf3
 5063 0634 01       		.uleb128 0x1
 5064 0635 50       		.byte	0x50
 5065 0636 9F       		.byte	0x9f
 5066 0637 00000000 		.4byte	0
 5067 063b 00000000 		.4byte	0
 5068              	.LLST49:
 5069 063f 00000000 		.4byte	.LVL133
 5070 0643 04000000 		.4byte	.LVL134
 5071 0647 0100     		.2byte	0x1
 5072 0649 50       		.byte	0x50
 5073 064a 04000000 		.4byte	.LVL134
 5074 064e 0C000000 		.4byte	.LFE45
 5075 0652 0400     		.2byte	0x4
 5076 0654 F3       		.byte	0xf3
 5077 0655 01       		.uleb128 0x1
 5078 0656 50       		.byte	0x50
 5079 0657 9F       		.byte	0x9f
 5080 0658 00000000 		.4byte	0
 5081 065c 00000000 		.4byte	0
 5082              		.section	.debug_aranges,"",%progbits
 5083 0000 8C010000 		.4byte	0x18c
 5084 0004 0200     		.2byte	0x2
 5085 0006 00000000 		.4byte	.Ldebug_info0
 5086 000a 04       		.byte	0x4
 5087 000b 00       		.byte	0
 5088 000c 0000     		.2byte	0
 5089 000e 0000     		.2byte	0
 5090 0010 00000000 		.4byte	.LFB1
 5091 0014 14000000 		.4byte	.LFE1-.LFB1
 5092 0018 00000000 		.4byte	.LFB4
 5093 001c 48000000 		.4byte	.LFE4-.LFB4
 5094 0020 00000000 		.4byte	.LFB2
 5095 0024 18000000 		.4byte	.LFE2-.LFB2
 5096 0028 00000000 		.4byte	.LFB5
 5097 002c 10000000 		.4byte	.LFE5-.LFB5
 5098 0030 00000000 		.4byte	.LFB6
 5099 0034 20000000 		.4byte	.LFE6-.LFB6
 5100 0038 00000000 		.4byte	.LFB7
 5101 003c 30000000 		.4byte	.LFE7-.LFB7
 5102 0040 00000000 		.4byte	.LFB8
 5103 0044 18000000 		.4byte	.LFE8-.LFB8
 5104 0048 00000000 		.4byte	.LFB9
 5105 004c 24000000 		.4byte	.LFE9-.LFB9
 5106 0050 00000000 		.4byte	.LFB11
 5107 0054 24000000 		.4byte	.LFE11-.LFB11
 5108 0058 00000000 		.4byte	.LFB12
 5109 005c 14000000 		.4byte	.LFE12-.LFB12
 5110 0060 00000000 		.4byte	.LFB13
 5111 0064 10000000 		.4byte	.LFE13-.LFB13
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 150


 5112 0068 00000000 		.4byte	.LFB14
 5113 006c 0C000000 		.4byte	.LFE14-.LFB14
 5114 0070 00000000 		.4byte	.LFB15
 5115 0074 0E000000 		.4byte	.LFE15-.LFB15
 5116 0078 00000000 		.4byte	.LFB16
 5117 007c 0C000000 		.4byte	.LFE16-.LFB16
 5118 0080 00000000 		.4byte	.LFB17
 5119 0084 10000000 		.4byte	.LFE17-.LFB17
 5120 0088 00000000 		.4byte	.LFB18
 5121 008c 10000000 		.4byte	.LFE18-.LFB18
 5122 0090 00000000 		.4byte	.LFB19
 5123 0094 34000000 		.4byte	.LFE19-.LFB19
 5124 0098 00000000 		.4byte	.LFB20
 5125 009c 20000000 		.4byte	.LFE20-.LFB20
 5126 00a0 00000000 		.4byte	.LFB21
 5127 00a4 14000000 		.4byte	.LFE21-.LFB21
 5128 00a8 00000000 		.4byte	.LFB22
 5129 00ac 18000000 		.4byte	.LFE22-.LFB22
 5130 00b0 00000000 		.4byte	.LFB23
 5131 00b4 14000000 		.4byte	.LFE23-.LFB23
 5132 00b8 00000000 		.4byte	.LFB24
 5133 00bc 14000000 		.4byte	.LFE24-.LFB24
 5134 00c0 00000000 		.4byte	.LFB25
 5135 00c4 14000000 		.4byte	.LFE25-.LFB25
 5136 00c8 00000000 		.4byte	.LFB26
 5137 00cc 04000000 		.4byte	.LFE26-.LFB26
 5138 00d0 00000000 		.4byte	.LFB27
 5139 00d4 18000000 		.4byte	.LFE27-.LFB27
 5140 00d8 00000000 		.4byte	.LFB28
 5141 00dc 2C000000 		.4byte	.LFE28-.LFB28
 5142 00e0 00000000 		.4byte	.LFB3
 5143 00e4 C4000000 		.4byte	.LFE3-.LFB3
 5144 00e8 00000000 		.4byte	.LFB10
 5145 00ec B8000000 		.4byte	.LFE10-.LFB10
 5146 00f0 00000000 		.4byte	.LFB29
 5147 00f4 14000000 		.4byte	.LFE29-.LFB29
 5148 00f8 00000000 		.4byte	.LFB30
 5149 00fc 48000000 		.4byte	.LFE30-.LFB30
 5150 0100 00000000 		.4byte	.LFB32
 5151 0104 54000000 		.4byte	.LFE32-.LFB32
 5152 0108 00000000 		.4byte	.LFB34
 5153 010c 10000000 		.4byte	.LFE34-.LFB34
 5154 0110 00000000 		.4byte	.LFB35
 5155 0114 10000000 		.4byte	.LFE35-.LFB35
 5156 0118 00000000 		.4byte	.LFB33
 5157 011c 18000000 		.4byte	.LFE33-.LFB33
 5158 0120 00000000 		.4byte	.LFB31
 5159 0124 1C000000 		.4byte	.LFE31-.LFB31
 5160 0128 00000000 		.4byte	.LFB36
 5161 012c 10000000 		.4byte	.LFE36-.LFB36
 5162 0130 00000000 		.4byte	.LFB37
 5163 0134 10000000 		.4byte	.LFE37-.LFB37
 5164 0138 00000000 		.4byte	.LFB38
 5165 013c 10000000 		.4byte	.LFE38-.LFB38
 5166 0140 00000000 		.4byte	.LFB39
 5167 0144 10000000 		.4byte	.LFE39-.LFB39
 5168 0148 00000000 		.4byte	.LFB40
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 151


 5169 014c 18000000 		.4byte	.LFE40-.LFB40
 5170 0150 00000000 		.4byte	.LFB41
 5171 0154 10000000 		.4byte	.LFE41-.LFB41
 5172 0158 00000000 		.4byte	.LFB42
 5173 015c 10000000 		.4byte	.LFE42-.LFB42
 5174 0160 00000000 		.4byte	.LFB46
 5175 0164 24000000 		.4byte	.LFE46-.LFB46
 5176 0168 00000000 		.4byte	.LFB43
 5177 016c 0C000000 		.4byte	.LFE43-.LFB43
 5178 0170 00000000 		.4byte	.LFB44
 5179 0174 10000000 		.4byte	.LFE44-.LFB44
 5180 0178 00000000 		.4byte	.LFB45
 5181 017c 0C000000 		.4byte	.LFE45-.LFB45
 5182 0180 00000000 		.4byte	.LFB47
 5183 0184 74000000 		.4byte	.LFE47-.LFB47
 5184 0188 00000000 		.4byte	0
 5185 018c 00000000 		.4byte	0
 5186              		.section	.debug_ranges,"",%progbits
 5187              	.Ldebug_ranges0:
 5188 0000 04000000 		.4byte	.LBB24
 5189 0004 06000000 		.4byte	.LBE24
 5190 0008 18000000 		.4byte	.LBB37
 5191 000c 1E000000 		.4byte	.LBE37
 5192 0010 20000000 		.4byte	.LBB38
 5193 0014 22000000 		.4byte	.LBE38
 5194 0018 00000000 		.4byte	0
 5195 001c 00000000 		.4byte	0
 5196 0020 08000000 		.4byte	.LBB31
 5197 0024 0A000000 		.4byte	.LBE31
 5198 0028 14000000 		.4byte	.LBB35
 5199 002c 16000000 		.4byte	.LBE35
 5200 0030 16000000 		.4byte	.LBB36
 5201 0034 18000000 		.4byte	.LBE36
 5202 0038 00000000 		.4byte	0
 5203 003c 00000000 		.4byte	0
 5204 0040 04000000 		.4byte	.LBB45
 5205 0044 06000000 		.4byte	.LBE45
 5206 0048 0A000000 		.4byte	.LBB48
 5207 004c 0E000000 		.4byte	.LBE48
 5208 0050 00000000 		.4byte	0
 5209 0054 00000000 		.4byte	0
 5210 0058 00000000 		.4byte	.LFB1
 5211 005c 14000000 		.4byte	.LFE1
 5212 0060 00000000 		.4byte	.LFB4
 5213 0064 48000000 		.4byte	.LFE4
 5214 0068 00000000 		.4byte	.LFB2
 5215 006c 18000000 		.4byte	.LFE2
 5216 0070 00000000 		.4byte	.LFB5
 5217 0074 10000000 		.4byte	.LFE5
 5218 0078 00000000 		.4byte	.LFB6
 5219 007c 20000000 		.4byte	.LFE6
 5220 0080 00000000 		.4byte	.LFB7
 5221 0084 30000000 		.4byte	.LFE7
 5222 0088 00000000 		.4byte	.LFB8
 5223 008c 18000000 		.4byte	.LFE8
 5224 0090 00000000 		.4byte	.LFB9
 5225 0094 24000000 		.4byte	.LFE9
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 152


 5226 0098 00000000 		.4byte	.LFB11
 5227 009c 24000000 		.4byte	.LFE11
 5228 00a0 00000000 		.4byte	.LFB12
 5229 00a4 14000000 		.4byte	.LFE12
 5230 00a8 00000000 		.4byte	.LFB13
 5231 00ac 10000000 		.4byte	.LFE13
 5232 00b0 00000000 		.4byte	.LFB14
 5233 00b4 0C000000 		.4byte	.LFE14
 5234 00b8 00000000 		.4byte	.LFB15
 5235 00bc 0E000000 		.4byte	.LFE15
 5236 00c0 00000000 		.4byte	.LFB16
 5237 00c4 0C000000 		.4byte	.LFE16
 5238 00c8 00000000 		.4byte	.LFB17
 5239 00cc 10000000 		.4byte	.LFE17
 5240 00d0 00000000 		.4byte	.LFB18
 5241 00d4 10000000 		.4byte	.LFE18
 5242 00d8 00000000 		.4byte	.LFB19
 5243 00dc 34000000 		.4byte	.LFE19
 5244 00e0 00000000 		.4byte	.LFB20
 5245 00e4 20000000 		.4byte	.LFE20
 5246 00e8 00000000 		.4byte	.LFB21
 5247 00ec 14000000 		.4byte	.LFE21
 5248 00f0 00000000 		.4byte	.LFB22
 5249 00f4 18000000 		.4byte	.LFE22
 5250 00f8 00000000 		.4byte	.LFB23
 5251 00fc 14000000 		.4byte	.LFE23
 5252 0100 00000000 		.4byte	.LFB24
 5253 0104 14000000 		.4byte	.LFE24
 5254 0108 00000000 		.4byte	.LFB25
 5255 010c 14000000 		.4byte	.LFE25
 5256 0110 00000000 		.4byte	.LFB26
 5257 0114 04000000 		.4byte	.LFE26
 5258 0118 00000000 		.4byte	.LFB27
 5259 011c 18000000 		.4byte	.LFE27
 5260 0120 00000000 		.4byte	.LFB28
 5261 0124 2C000000 		.4byte	.LFE28
 5262 0128 00000000 		.4byte	.LFB3
 5263 012c C4000000 		.4byte	.LFE3
 5264 0130 00000000 		.4byte	.LFB10
 5265 0134 B8000000 		.4byte	.LFE10
 5266 0138 00000000 		.4byte	.LFB29
 5267 013c 14000000 		.4byte	.LFE29
 5268 0140 00000000 		.4byte	.LFB30
 5269 0144 48000000 		.4byte	.LFE30
 5270 0148 00000000 		.4byte	.LFB32
 5271 014c 54000000 		.4byte	.LFE32
 5272 0150 00000000 		.4byte	.LFB34
 5273 0154 10000000 		.4byte	.LFE34
 5274 0158 00000000 		.4byte	.LFB35
 5275 015c 10000000 		.4byte	.LFE35
 5276 0160 00000000 		.4byte	.LFB33
 5277 0164 18000000 		.4byte	.LFE33
 5278 0168 00000000 		.4byte	.LFB31
 5279 016c 1C000000 		.4byte	.LFE31
 5280 0170 00000000 		.4byte	.LFB36
 5281 0174 10000000 		.4byte	.LFE36
 5282 0178 00000000 		.4byte	.LFB37
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 153


 5283 017c 10000000 		.4byte	.LFE37
 5284 0180 00000000 		.4byte	.LFB38
 5285 0184 10000000 		.4byte	.LFE38
 5286 0188 00000000 		.4byte	.LFB39
 5287 018c 10000000 		.4byte	.LFE39
 5288 0190 00000000 		.4byte	.LFB40
 5289 0194 18000000 		.4byte	.LFE40
 5290 0198 00000000 		.4byte	.LFB41
 5291 019c 10000000 		.4byte	.LFE41
 5292 01a0 00000000 		.4byte	.LFB42
 5293 01a4 10000000 		.4byte	.LFE42
 5294 01a8 00000000 		.4byte	.LFB46
 5295 01ac 24000000 		.4byte	.LFE46
 5296 01b0 00000000 		.4byte	.LFB43
 5297 01b4 0C000000 		.4byte	.LFE43
 5298 01b8 00000000 		.4byte	.LFB44
 5299 01bc 10000000 		.4byte	.LFE44
 5300 01c0 00000000 		.4byte	.LFB45
 5301 01c4 0C000000 		.4byte	.LFE45
 5302 01c8 00000000 		.4byte	.LFB47
 5303 01cc 74000000 		.4byte	.LFE47
 5304 01d0 00000000 		.4byte	0
 5305 01d4 00000000 		.4byte	0
 5306              		.section	.debug_line,"",%progbits
 5307              	.Ldebug_line0:
 5308 0000 28050000 		.section	.debug_str,"MS",%progbits,1
 5308      02006700 
 5308      00000201 
 5308      FB0E0D00 
 5308      01010101 
 5309              	.LASF34:
 5310 0000 72616D56 		.ascii	"ramVectorTable\000"
 5310      6563746F 
 5310      72546162 
 5310      6C6500
 5311              	.LASF10:
 5312 000f 75696E74 		.ascii	"uint16\000"
 5312      313600
 5313              	.LASF51:
 5314 0016 696E7453 		.ascii	"intState\000"
 5314      74617465 
 5314      00
 5315              	.LASF37:
 5316 001f 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 5316      73436C6B 
 5316      57726974 
 5316      65486663 
 5316      6C6B4469 
 5317              	.LASF100:
 5318 0038 43795379 		.ascii	"CySysClkPumpConfig\000"
 5318      73436C6B 
 5318      50756D70 
 5318      436F6E66 
 5318      696700
 5319              	.LASF33:
 5320 004b 6F6C6449 		.ascii	"oldIsr\000"
 5320      737200
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 154


 5321              	.LASF90:
 5322 0052 72657456 		.ascii	"retVal\000"
 5322      616C00
 5323              	.LASF50:
 5324 0059 43794469 		.ascii	"CyDisableInts\000"
 5324      7361626C 
 5324      65496E74 
 5324      7300
 5325              	.LASF7:
 5326 0067 6C6F6E67 		.ascii	"long long unsigned int\000"
 5326      206C6F6E 
 5326      6720756E 
 5326      7369676E 
 5326      65642069 
 5327              	.LASF99:
 5328 007e 43795379 		.ascii	"CySysTickInitVar\000"
 5328      73546963 
 5328      6B496E69 
 5328      74566172 
 5328      00
 5329              	.LASF52:
 5330 008f 4379456E 		.ascii	"CyEnableInts\000"
 5330      61626C65 
 5330      496E7473 
 5330      00
 5331              	.LASF105:
 5332 009c 43795379 		.ascii	"CySysClkWcoEnabled\000"
 5332      73436C6B 
 5332      57636F45 
 5332      6E61626C 
 5332      656400
 5333              	.LASF68:
 5334 00af 4379536F 		.ascii	"CySoftwareReset\000"
 5334      66747761 
 5334      72655265 
 5334      73657400 
 5335              	.LASF79:
 5336 00bf 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 5336      73546963 
 5336      6B456E61 
 5336      626C6549 
 5336      6E746572 
 5337              	.LASF62:
 5338 00d8 4379496E 		.ascii	"CyIntGetState\000"
 5338      74476574 
 5338      53746174 
 5338      6500
 5339              	.LASF6:
 5340 00e6 6C6F6E67 		.ascii	"long long int\000"
 5340      206C6F6E 
 5340      6720696E 
 5340      7400
 5341              	.LASF0:
 5342 00f4 7369676E 		.ascii	"signed char\000"
 5342      65642063 
 5342      68617200 
 5343              	.LASF21:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 155


 5344 0100 66726571 		.ascii	"freq\000"
 5344      00
 5345              	.LASF76:
 5346 0105 43794465 		.ascii	"CyDelayFreq\000"
 5346      6C617946 
 5346      72657100 
 5347              	.LASF22:
 5348 0111 696E7465 		.ascii	"interruptState\000"
 5348      72727570 
 5348      74537461 
 5348      746500
 5349              	.LASF24:
 5350 0120 6C664C69 		.ascii	"lfLimit\000"
 5350      6D697400 
 5351              	.LASF84:
 5352 0128 43795379 		.ascii	"CySysTickGetReload\000"
 5352      73546963 
 5352      6B476574 
 5352      52656C6F 
 5352      616400
 5353              	.LASF83:
 5354 013b 43795379 		.ascii	"CySysClkImoGetWcoLock\000"
 5354      73436C6B 
 5354      496D6F47 
 5354      65745763 
 5354      6F4C6F63 
 5355              	.LASF73:
 5356 0151 77636F4C 		.ascii	"wcoLock\000"
 5356      6F636B00 
 5357              	.LASF4:
 5358 0159 6C6F6E67 		.ascii	"long int\000"
 5358      20696E74 
 5358      00
 5359              	.LASF63:
 5360 0162 4379496E 		.ascii	"CyIntDisable\000"
 5360      74446973 
 5360      61626C65 
 5360      00
 5361              	.LASF106:
 5362 016f 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5362      43313120 
 5362      352E342E 
 5362      31203230 
 5362      31363036 
 5363 01a2 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 5363      20726576 
 5363      6973696F 
 5363      6E203233 
 5363      37373135 
 5364 01d5 67202D4F 		.ascii	"g -Os -ffunction-sections -ffat-lto-objects\000"
 5364      73202D66 
 5364      66756E63 
 5364      74696F6E 
 5364      2D736563 
 5365              	.LASF91:
 5366 0201 43795379 		.ascii	"CySysTickGetCallback\000"
 5366      73546963 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 156


 5366      6B476574 
 5366      43616C6C 
 5366      6261636B 
 5367              	.LASF39:
 5368 0216 43795379 		.ascii	"CySysEnablePumpClock\000"
 5368      73456E61 
 5368      626C6550 
 5368      756D7043 
 5368      6C6F636B 
 5369              	.LASF9:
 5370 022b 75696E74 		.ascii	"uint8\000"
 5370      3800
 5371              	.LASF96:
 5372 0231 63796465 		.ascii	"cydelayFreqKhz\000"
 5372      6C617946 
 5372      7265714B 
 5372      687A00
 5373              	.LASF41:
 5374 0240 656E6162 		.ascii	"enable\000"
 5374      6C6500
 5375              	.LASF13:
 5376 0247 646F7562 		.ascii	"double\000"
 5376      6C6500
 5377              	.LASF59:
 5378 024e 73686966 		.ascii	"shift\000"
 5378      7400
 5379              	.LASF11:
 5380 0254 75696E74 		.ascii	"uint32\000"
 5380      333200
 5381              	.LASF53:
 5382 025b 6D61736B 		.ascii	"mask\000"
 5382      00
 5383              	.LASF46:
 5384 0260 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 5384      73436C6B 
 5384      47657453 
 5384      7973636C 
 5384      6B536F75 
 5385              	.LASF26:
 5386 0278 43795379 		.ascii	"CySysClkImoEnableWcoLock\000"
 5386      73436C6B 
 5386      496D6F45 
 5386      6E61626C 
 5386      6557636F 
 5387              	.LASF60:
 5388 0291 4379496E 		.ascii	"CyIntGetPriority\000"
 5388      74476574 
 5388      5072696F 
 5388      72697479 
 5388      00
 5389              	.LASF98:
 5390 02a2 63796465 		.ascii	"cydelay32kMs\000"
 5390      6C617933 
 5390      326B4D73 
 5390      00
 5391              	.LASF77:
 5392 02af 43795379 		.ascii	"CySysTickInit\000"
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 157


 5392      73546963 
 5392      6B496E69 
 5392      7400
 5393              	.LASF30:
 5394 02bd 76616C75 		.ascii	"value\000"
 5394      6500
 5395              	.LASF29:
 5396 02c3 636C6F63 		.ascii	"clockSource\000"
 5396      6B536F75 
 5396      72636500 
 5397              	.LASF92:
 5398 02cf 43794765 		.ascii	"CyGetUniqueId\000"
 5398      74556E69 
 5398      71756549 
 5398      6400
 5399              	.LASF87:
 5400 02dd 43795379 		.ascii	"CySysTickGetCountFlag\000"
 5400      73546963 
 5400      6B476574 
 5400      436F756E 
 5400      74466C61 
 5401              	.LASF8:
 5402 02f3 756E7369 		.ascii	"unsigned int\000"
 5402      676E6564 
 5402      20696E74 
 5402      00
 5403              	.LASF110:
 5404 0300 43795379 		.ascii	"CySysTickClear\000"
 5404      73546963 
 5404      6B436C65 
 5404      617200
 5405              	.LASF5:
 5406 030f 6C6F6E67 		.ascii	"long unsigned int\000"
 5406      20756E73 
 5406      69676E65 
 5406      6420696E 
 5406      7400
 5407              	.LASF36:
 5408 0321 43795379 		.ascii	"CySysClkImoStop\000"
 5408      73436C6B 
 5408      496D6F53 
 5408      746F7000 
 5409              	.LASF101:
 5410 0331 4379456E 		.ascii	"CyEnterCriticalSection\000"
 5410      74657243 
 5410      72697469 
 5410      63616C53 
 5410      65637469 
 5411              	.LASF64:
 5412 0348 4379496E 		.ascii	"CyIntSetPending\000"
 5412      74536574 
 5412      50656E64 
 5412      696E6700 
 5413              	.LASF47:
 5414 0358 43795379 		.ascii	"CySysGetResetReason\000"
 5414      73476574 
 5414      52657365 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 158


 5414      74526561 
 5414      736F6E00 
 5415              	.LASF3:
 5416 036c 73686F72 		.ascii	"short unsigned int\000"
 5416      7420756E 
 5416      7369676E 
 5416      65642069 
 5416      6E7400
 5417              	.LASF23:
 5418 037f 72656754 		.ascii	"regTmp\000"
 5418      6D7000
 5419              	.LASF27:
 5420 0386 43795379 		.ascii	"CySysTickSetClockSource\000"
 5420      73546963 
 5420      6B536574 
 5420      436C6F63 
 5420      6B536F75 
 5421              	.LASF55:
 5422 039e 4379496E 		.ascii	"CyIntSetVector\000"
 5422      74536574 
 5422      56656374 
 5422      6F7200
 5423              	.LASF31:
 5424 03ad 6E756D62 		.ascii	"number\000"
 5424      657200
 5425              	.LASF58:
 5426 03b4 7072696F 		.ascii	"priority\000"
 5426      72697479 
 5426      00
 5427              	.LASF71:
 5428 03bd 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 5428      73436C6B 
 5428      57726974 
 5428      65496D6F 
 5428      46726571 
 5429              	.LASF111:
 5430 03d2 4379496E 		.ascii	"CyIntSetSysVector\000"
 5430      74536574 
 5430      53797356 
 5430      6563746F 
 5430      7200
 5431              	.LASF35:
 5432 03e4 43795379 		.ascii	"CySysClkImoDisableWcoLock\000"
 5432      73436C6B 
 5432      496D6F44 
 5432      69736162 
 5432      6C655763 
 5433              	.LASF16:
 5434 03fe 72656733 		.ascii	"reg32\000"
 5434      3200
 5435              	.LASF81:
 5436 0404 43795379 		.ascii	"CySysTickStart\000"
 5436      73546963 
 5436      6B537461 
 5436      727400
 5437              	.LASF49:
 5438 0413 72657475 		.ascii	"returnStatus\000"
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 159


 5438      726E5374 
 5438      61747573 
 5438      00
 5439              	.LASF19:
 5440 0420 73697A65 		.ascii	"sizetype\000"
 5440      74797065 
 5440      00
 5441              	.LASF65:
 5442 0429 4379496E 		.ascii	"CyIntClearPending\000"
 5442      74436C65 
 5442      61725065 
 5442      6E64696E 
 5442      6700
 5443              	.LASF18:
 5444 043b 6C6F6E67 		.ascii	"long double\000"
 5444      20646F75 
 5444      626C6500 
 5445              	.LASF32:
 5446 0447 61646472 		.ascii	"address\000"
 5446      65737300 
 5447              	.LASF42:
 5448 044f 73797363 		.ascii	"sysclkSource\000"
 5448      6C6B536F 
 5448      75726365 
 5448      00
 5449              	.LASF89:
 5450 045c 66756E63 		.ascii	"function\000"
 5450      74696F6E 
 5450      00
 5451              	.LASF85:
 5452 0465 43795379 		.ascii	"CySysTickGetValue\000"
 5452      73546963 
 5452      6B476574 
 5452      56616C75 
 5452      6500
 5453              	.LASF95:
 5454 0477 63796465 		.ascii	"cydelayFreqHz\000"
 5454      6C617946 
 5454      72657148 
 5454      7A00
 5455              	.LASF57:
 5456 0485 4379496E 		.ascii	"CyIntSetPriority\000"
 5456      74536574 
 5456      5072696F 
 5456      72697479 
 5456      00
 5457              	.LASF12:
 5458 0496 666C6F61 		.ascii	"float\000"
 5458      7400
 5459              	.LASF102:
 5460 049c 43794578 		.ascii	"CyExitCriticalSection\000"
 5460      69744372 
 5460      69746963 
 5460      616C5365 
 5460      6374696F 
 5461              	.LASF20:
 5462 04b2 63795379 		.ascii	"cySysTickCallback\000"
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 160


 5462      73546963 
 5462      6B43616C 
 5462      6C626163 
 5462      6B00
 5463              	.LASF56:
 5464 04c4 4379496E 		.ascii	"CyIntGetVector\000"
 5464      74476574 
 5464      56656374 
 5464      6F7200
 5465              	.LASF70:
 5466 04d3 6D696C6C 		.ascii	"milliseconds\000"
 5466      69736563 
 5466      6F6E6473 
 5466      00
 5467              	.LASF108:
 5468 04e0 443A5C5F 		.ascii	"D:\\_Project\\_MD\\cypress_button\\EZIIC_button.cyd"
 5468      50726F6A 
 5468      6563745C 
 5468      5F4D445C 
 5468      63797072 
 5469 050f 736E00   		.ascii	"sn\000"
 5470              	.LASF103:
 5471 0512 43794465 		.ascii	"CyDelayCycles\000"
 5471      6C617943 
 5471      79636C65 
 5471      7300
 5472              	.LASF15:
 5473 0520 72656738 		.ascii	"reg8\000"
 5473      00
 5474              	.LASF66:
 5475 0525 43794861 		.ascii	"CyHalt\000"
 5475      6C7400
 5476              	.LASF1:
 5477 052c 756E7369 		.ascii	"unsigned char\000"
 5477      676E6564 
 5477      20636861 
 5477      7200
 5478              	.LASF48:
 5479 053a 72656173 		.ascii	"reason\000"
 5479      6F6E00
 5480              	.LASF2:
 5481 0541 73686F72 		.ascii	"short int\000"
 5481      7420696E 
 5481      7400
 5482              	.LASF61:
 5483 054b 4379496E 		.ascii	"CyIntEnable\000"
 5483      74456E61 
 5483      626C6500 
 5484              	.LASF54:
 5485 0557 4379496E 		.ascii	"CyIntGetSysVector\000"
 5485      74476574 
 5485      53797356 
 5485      6563746F 
 5485      7200
 5486              	.LASF40:
 5487 0569 636C6B53 		.ascii	"clkSelect\000"
 5487      656C6563 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 161


 5487      7400
 5488              	.LASF74:
 5489 0573 43794465 		.ascii	"CyDelayUs\000"
 5489      6C617955 
 5489      7300
 5490              	.LASF109:
 5491 057d 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 5491      73546963 
 5491      6B536572 
 5491      76696365 
 5491      43616C6C 
 5492              	.LASF14:
 5493 0597 63686172 		.ascii	"char\000"
 5493      00
 5494              	.LASF17:
 5495 059c 63796973 		.ascii	"cyisraddress\000"
 5495      72616464 
 5495      72657373 
 5495      00
 5496              	.LASF80:
 5497 05a9 43795379 		.ascii	"CySysTickEnable\000"
 5497      73546963 
 5497      6B456E61 
 5497      626C6500 
 5498              	.LASF45:
 5499 05b9 43795379 		.ascii	"CySysClkWriteHfclkDiv\000"
 5499      73436C6B 
 5499      57726974 
 5499      65486663 
 5499      6C6B4469 
 5500              	.LASF43:
 5501 05cf 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 5501      73436C6B 
 5501      57726974 
 5501      65537973 
 5501      636C6B44 
 5502              	.LASF88:
 5503 05e6 43795379 		.ascii	"CySysTickSetCallback\000"
 5503      73546963 
 5503      6B536574 
 5503      43616C6C 
 5503      6261636B 
 5504              	.LASF94:
 5505 05fb 43795379 		.ascii	"CySysTickCallbacks\000"
 5505      73546963 
 5505      6B43616C 
 5505      6C626163 
 5505      6B7300
 5506              	.LASF72:
 5507 060e 696D6F54 		.ascii	"imoTrim1Value\000"
 5507      72696D31 
 5507      56616C75 
 5507      6500
 5508              	.LASF93:
 5509 061c 756E6971 		.ascii	"uniqueId\000"
 5509      75654964 
 5509      00
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 162


 5510              	.LASF25:
 5511 0625 666C6173 		.ascii	"flashCtlReg\000"
 5511      6843746C 
 5511      52656700 
 5512              	.LASF69:
 5513 0631 43794465 		.ascii	"CyDelay\000"
 5513      6C617900 
 5514              	.LASF86:
 5515 0639 43795379 		.ascii	"CySysTickGetClockSource\000"
 5515      73546963 
 5515      6B476574 
 5515      436C6F63 
 5515      6B536F75 
 5516              	.LASF82:
 5517 0651 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 5517      73546963 
 5517      6B446973 
 5517      61626C65 
 5517      496E7465 
 5518              	.LASF97:
 5519 066b 63796465 		.ascii	"cydelayFreqMhz\000"
 5519      6C617946 
 5519      7265714D 
 5519      687A00
 5520              	.LASF78:
 5521 067a 43795379 		.ascii	"CySysTickStop\000"
 5521      73546963 
 5521      6B53746F 
 5521      7000
 5522              	.LASF44:
 5523 0688 64697669 		.ascii	"divider\000"
 5523      64657200 
 5524              	.LASF67:
 5525 0690 43795379 		.ascii	"CySysClkImoStart\000"
 5525      73436C6B 
 5525      496D6F53 
 5525      74617274 
 5525      00
 5526              	.LASF104:
 5527 06a1 43795379 		.ascii	"CySysFlashSetWaitCycles\000"
 5527      73466C61 
 5527      73685365 
 5527      74576169 
 5527      74437963 
 5528              	.LASF107:
 5529 06b9 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 5529      72617465 
 5529      645F536F 
 5529      75726365 
 5529      5C50536F 
 5530              	.LASF75:
 5531 06d8 6D696372 		.ascii	"microseconds\000"
 5531      6F736563 
 5531      6F6E6473 
 5531      00
 5532              	.LASF38:
 5533 06e5 746D7052 		.ascii	"tmpReg\000"
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccroCfB5.s 			page 163


 5533      656700
 5534              	.LASF28:
 5535 06ec 43795379 		.ascii	"CySysTickSetReload\000"
 5535      73546963 
 5535      6B536574 
 5535      52656C6F 
 5535      616400
 5536              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran

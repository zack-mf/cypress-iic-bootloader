ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_Sensing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_IsBusy,"ax",%progbits
  20              		.align	1
  21              		.global	CapSense_IsBusy
  22              		.code	16
  23              		.thumb_func
  24              		.type	CapSense_IsBusy, %function
  25              	CapSense_IsBusy:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC4\\CapSense_Sensing.c"
   1:Generated_Source\PSoC4/CapSense_Sensing.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CapSense_Sensing.c **** * \file CapSense_Sensing.c
   3:Generated_Source\PSoC4/CapSense_Sensing.c **** * \version 7.0
   4:Generated_Source\PSoC4/CapSense_Sensing.c **** *
   5:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
   6:Generated_Source\PSoC4/CapSense_Sensing.c **** *   This file contains the source of functions common for
   7:Generated_Source\PSoC4/CapSense_Sensing.c **** *   different sensing methods.
   8:Generated_Source\PSoC4/CapSense_Sensing.c **** *
   9:Generated_Source\PSoC4/CapSense_Sensing.c **** * \see CapSense v7.0 Datasheet
  10:Generated_Source\PSoC4/CapSense_Sensing.c **** *
  11:Generated_Source\PSoC4/CapSense_Sensing.c **** *//*****************************************************************************
  12:Generated_Source\PSoC4/CapSense_Sensing.c **** * Copyright (2016-2019), Cypress Semiconductor Corporation.
  13:Generated_Source\PSoC4/CapSense_Sensing.c **** ********************************************************************************
  14:Generated_Source\PSoC4/CapSense_Sensing.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  15:Generated_Source\PSoC4/CapSense_Sensing.c **** * protected by and subject to worldwide patent protection (United States and
  16:Generated_Source\PSoC4/CapSense_Sensing.c **** * foreign), United States copyright laws and international treaty provisions.
  17:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  18:Generated_Source\PSoC4/CapSense_Sensing.c **** * license to copy, use, modify, create derivative works of, and compile the
  19:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  20:Generated_Source\PSoC4/CapSense_Sensing.c **** * custom software in support of licensee product to be used only in conjunction
  21:Generated_Source\PSoC4/CapSense_Sensing.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  22:Generated_Source\PSoC4/CapSense_Sensing.c **** * Any reproduction, modification, translation, compilation, or representation of
  23:Generated_Source\PSoC4/CapSense_Sensing.c **** * this software except as specified above is prohibited without the express
  24:Generated_Source\PSoC4/CapSense_Sensing.c **** * written permission of Cypress.
  25:Generated_Source\PSoC4/CapSense_Sensing.c **** *
  26:Generated_Source\PSoC4/CapSense_Sensing.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  27:Generated_Source\PSoC4/CapSense_Sensing.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  28:Generated_Source\PSoC4/CapSense_Sensing.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  29:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress reserves the right to make changes without further notice to the
  30:Generated_Source\PSoC4/CapSense_Sensing.c **** * materials described herein. Cypress does not assume any liability arising out
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 2


  31:Generated_Source\PSoC4/CapSense_Sensing.c **** * of the application or use of any product or circuit described herein. Cypress
  32:Generated_Source\PSoC4/CapSense_Sensing.c **** * does not authorize its products for use as critical components in life-support
  33:Generated_Source\PSoC4/CapSense_Sensing.c **** * systems where a malfunction or failure may reasonably be expected to result in
  34:Generated_Source\PSoC4/CapSense_Sensing.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  35:Generated_Source\PSoC4/CapSense_Sensing.c **** * support systems application implies that the manufacturer assumes all risk of
  36:Generated_Source\PSoC4/CapSense_Sensing.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  37:Generated_Source\PSoC4/CapSense_Sensing.c **** * limited by and subject to the applicable Cypress software license agreement.
  38:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  40:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "cyfitter.h"
  41:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Configuration.h"
  42:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Structure.h"
  43:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Sensing.h"
  44:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
  45:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingCSX_LL.h"
  46:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  47:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
  48:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingISX_LL.h"
  49:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  50:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
  51:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingCSD_LL.h"
  52:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  53:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)
  54:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SmartSense_LL.h"
  55:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  56:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ADC_EN)
  57:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_Adc.h"
  58:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  59:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
  60:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SelfTest.h"
  61:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  62:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  63:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (0u != CapSense_ISX_EN)
  64:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_DigPrt2.h"
  65:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_USES_PORT_3)
  66:Generated_Source\PSoC4/CapSense_Sensing.c ****         #include "CapSense_DigPrt3.h"
  67:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
  68:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  69:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  70:Generated_Source\PSoC4/CapSense_Sensing.c **** /***************************************
  71:Generated_Source\PSoC4/CapSense_Sensing.c **** * API Constants
  72:Generated_Source\PSoC4/CapSense_Sensing.c **** ***************************************/
  73:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  74:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_IMO_FREQUENCY_OFFSET_MIN               (0u)
  75:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_IMO_FREQUENCY_OFFSET_MAX               (255u)
  76:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_AUTOTUNE_CALIBRATION_RESOLUTION        (12u)
  77:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_AUTOTUNE_CALIBRATION_FREQ_KHZ          (1500u)
  78:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_AUTOTUNE_CAL_LEVEL                     (CapSense_CSD_RAWCOUNT_CAL_LEVEL)
  79:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_AUTOTUNE_CAL_UNITS                     (1000u)
  80:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_AUTOTUNE_CP_MAX                        (69000Lu)
  81:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CLK_SOURCE_LFSR_SCALE_OFFSET           (4u)
  82:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  83:Generated_Source\PSoC4/CapSense_Sensing.c **** /* HW IP Block limitation */
  84:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
  85:Generated_Source\PSoC4/CapSense_Sensing.c ****     #define CapSense_CSD_SNS_FREQ_KHZ_MAX               (6000u)
  86:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
  87:Generated_Source\PSoC4/CapSense_Sensing.c ****     #define CapSense_CSD_SNS_FREQ_KHZ_MAX               (12600u)
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 3


  88:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
  89:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  90:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_FLIP_FLOP_DIV                          (1u)
  91:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  92:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_12000KHZ                   (12000uL)
  93:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_24000KHZ                   (24000uL)
  94:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_48000KHZ                   (48000uL)
  95:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  96:Generated_Source\PSoC4/CapSense_Sensing.c **** /*****************************************************************************/
  97:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Enumeration types definition                                              */
  98:Generated_Source\PSoC4/CapSense_Sensing.c **** /*****************************************************************************/
  99:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 100:Generated_Source\PSoC4/CapSense_Sensing.c **** typedef enum
 101:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 102:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RES_PULLUP_E   = 0x02u,
 103:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RES_PULLDOWN_E = 0x03u
 104:Generated_Source\PSoC4/CapSense_Sensing.c **** } CapSense_PORT_TEST_DM;
 105:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 106:Generated_Source\PSoC4/CapSense_Sensing.c **** typedef enum
 107:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 108:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_STS_RESET      = 0x01u,
 109:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_STS_NO_RESET   = 0x02u
 110:Generated_Source\PSoC4/CapSense_Sensing.c **** } CapSense_TEST_TYPE;
 111:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 112:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 113:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 114:Generated_Source\PSoC4/CapSense_Sensing.c **** * Static Function Prototypes
 115:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 116:Generated_Source\PSoC4/CapSense_Sensing.c **** /**
 117:Generated_Source\PSoC4/CapSense_Sensing.c **** * \cond SECTION_C_INTERNAL
 118:Generated_Source\PSoC4/CapSense_Sensing.c **** * \addtogroup group_c_internal
 119:Generated_Source\PSoC4/CapSense_Sensing.c **** * \{
 120:Generated_Source\PSoC4/CapSense_Sensing.c **** */
 121:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 122:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_DISABLE == CapSense_CSDV2)
 123:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsTrimIdacs(void);
 124:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 125:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_ENABLE == CapSense_ISX_EN) || \
 126:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG))
 127:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSinking(void);
 128:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
 129:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)) */
 130:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 131:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_ENABLE == CapSense_ISX_EN) || \
 132:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG))
 133:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSourcing(void);
 134:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
 135:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)) */
 136:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 137:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 138:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 139:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsCSDDisableMode(void);
 140:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 141:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
 142:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableCSXMode(void);
 143:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
 144:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 4


 145:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableISXMode(void);
 146:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
 147:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 148:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(((CapSense_ENABLE == CapSense_CSX_EN) && \
 149:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
 150:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) && \
 151:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)) ||\
 152:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSD_EN) && \
 153:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
 154:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)))
 155:Generated_Source\PSoC4/CapSense_Sensing.c ****     static uint8 CapSense_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum);
 156:Generated_Source\PSoC4/CapSense_Sensing.c ****     static uint8 CapSense_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize);
 157:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 158:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 159:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 160:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptr
 161:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 162:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 163:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
 164:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetTxClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptrWdg
 165:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 166:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 167:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 168:Generated_Source\PSoC4/CapSense_Sensing.c **** /** \}
 169:Generated_Source\PSoC4/CapSense_Sensing.c **** * \endcond */
 170:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 171:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 172:Generated_Source\PSoC4/CapSense_Sensing.c **** * Defines module variables
 173:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 174:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 175:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_SENSE_METHOD_ENUM CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
 176:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 177:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 178:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Module variable keep track of multi-frequency scan channel index */
 179:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 CapSense_scanFreqIndex = 0u;
 180:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Variable keep frequency offsets */
 181:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 CapSense_immunity[CapSense_NUM_SCAN_FREQS] = {0u, 0u, 0u};
 182:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
 183:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* const allows C-compiler to do optimization */
 184:Generated_Source\PSoC4/CapSense_Sensing.c ****     const uint8 CapSense_scanFreqIndex = 0u;
 185:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 186:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 187:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Global software variables */
 188:Generated_Source\PSoC4/CapSense_Sensing.c **** volatile uint8 CapSense_widgetIndex = 0u;    /* Index of the scanning widget */
 189:Generated_Source\PSoC4/CapSense_Sensing.c **** volatile uint8 CapSense_sensorIndex = 0u;    /* Index of the scanning sensor */
 190:Generated_Source\PSoC4/CapSense_Sensing.c **** uint8 CapSense_requestScanAllWidget = 0u;
 191:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 192:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Pointer to RAM_SNS_STRUCT structure */
 193:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_RAM_SNS_STRUCT *CapSense_curRamSnsPtr;
 194:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 195:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) || \
 196:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSX_EN) || \
 197:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_ISX_EN))
 198:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Pointer to Flash structure holding configuration of widget to be scanned */
 199:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_WD_STRUCT const *CapSense_curFlashWdgtPtr = 0u;
 200:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 201:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 5


 202:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
 203:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Pointer to Flash structure holding info of sensor to be scanned */
 204:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_SNS_STRUCT const *CapSense_curFlashSnsPtr = 0u;
 205:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 206:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 207:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Pointer to Flash structure to hold Sns electrode that was connected previously */
 208:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_FLASH_IO_STRUCT const *CapSense_curSnsIOPtr;
 209:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 210:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_IDAC_GAIN_TABLE_STRUCT const CapSense_idacGainTable[CapSense_IDAC_GAIN_NUMBER] = CapSense_
 211:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 212:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 213:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 214:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_IsBusy
 215:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 216:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 217:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 218:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the current status of the Component (Scan is completed or Scan is in
 219:Generated_Source\PSoC4/CapSense_Sensing.c **** *  progress).
 220:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 221:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 222:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function returns a status of the hardware block whether a scan is
 223:Generated_Source\PSoC4/CapSense_Sensing.c **** *  currently in progress or not. If the Component is busy, no new scan or Widget
 224:Generated_Source\PSoC4/CapSense_Sensing.c **** *  setup is made. The critical section (i.e. disable global interrupt)
 225:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is recommended for the application when the device transitions from
 226:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the active mode to sleep or deep sleep modes.
 227:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 228:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 229:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the current status of the Component:
 230:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CapSense_NOT_BUSY - No scan is in progress and a next scan
 231:Generated_Source\PSoC4/CapSense_Sensing.c **** *      can be initiated.
 232:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CapSense_SW_STS_BUSY - The previous scanning is not completed
 233:Generated_Source\PSoC4/CapSense_Sensing.c **** *      and the hardware block is busy.
 234:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 235:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 236:Generated_Source\PSoC4/CapSense_Sensing.c **** uint32 CapSense_IsBusy(void)
 237:Generated_Source\PSoC4/CapSense_Sensing.c **** {
  28              		.loc 1 237 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 238:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (CapSense_dsRam.status & CapSense_SW_STS_BUSY);
  33              		.loc 1 238 0
  34 0000 024B     		ldr	r3, .L2
 239:Generated_Source\PSoC4/CapSense_Sensing.c **** }
  35              		.loc 1 239 0
  36              		@ sp needed
 238:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (CapSense_dsRam.status & CapSense_SW_STS_BUSY);
  37              		.loc 1 238 0
  38 0002 D868     		ldr	r0, [r3, #12]
  39 0004 8023     		movs	r3, #128
  40 0006 1840     		ands	r0, r3
  41              		.loc 1 239 0
  42 0008 7047     		bx	lr
  43              	.L3:
  44 000a C046     		.align	2
  45              	.L2:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 6


  46 000c 00000000 		.word	CapSense_dsRam
  47              		.cfi_endproc
  48              	.LFE1:
  49              		.size	CapSense_IsBusy, .-CapSense_IsBusy
  50              		.section	.text.CapSense_SetupWidget,"ax",%progbits
  51              		.align	1
  52              		.global	CapSense_SetupWidget
  53              		.code	16
  54              		.thumb_func
  55              		.type	CapSense_SetupWidget, %function
  56              	CapSense_SetupWidget:
  57              	.LFB2:
 240:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 241:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 242:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SetupWidget
 243:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 244:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 245:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 246:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs the initialization required to scan the specified widget.
 247:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 248:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 249:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function prepares the Component to scan all the sensors in the specified
 250:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget by executing the following tasks:
 251:Generated_Source\PSoC4/CapSense_Sensing.c **** *    1. Re-initialize the hardware if it is not configured to perform the
 252:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensing method used by the specified widget, this happens only if multiple
 253:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensing methods are used in the Component.
 254:Generated_Source\PSoC4/CapSense_Sensing.c **** *    2. Initialize the hardware with specific sensing configuration (e.g.
 255:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensor clock, scan resolution) used by the widget.
 256:Generated_Source\PSoC4/CapSense_Sensing.c **** *    3. Disconnect all previously connected electrodes, if the electrodes
 257:Generated_Source\PSoC4/CapSense_Sensing.c **** *       connected by the lower level SetupWidgetExt() or ConnectSns() functions
 258:Generated_Source\PSoC4/CapSense_Sensing.c ****         and not disconnected.
 259:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 260:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function does not start sensor scanning, the CapSense_Scan()
 261:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function must be called to start the scan sensors in the widget. If this
 262:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function is called more than once, it does not break the Component operation,
 263:Generated_Source\PSoC4/CapSense_Sensing.c **** *  but only the last initialized widget is in effect.
 264:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 265:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param widgetId
 266:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID number of the widget to be initialized for scanning.
 267:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the widget ID can be found in the
 268:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as
 269:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_<WidgetName>_WDGT_ID.
 270:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 271:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 272:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the widget setting up operation:
 273:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_SUCCESS - The operation is successfully completed.
 274:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_BAD_PARAM - The widget is invalid or if the specified widget is
 275:Generated_Source\PSoC4/CapSense_Sensing.c **** *      disabled
 276:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_INVALID_STATE - The previous scanning is not completed and the
 277:Generated_Source\PSoC4/CapSense_Sensing.c **** *      hardware block is busy.
 278:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_UNKNOWN - An unknown sensing method is used by the widget or any
 279:Generated_Source\PSoC4/CapSense_Sensing.c **** *      other spurious error occurred.
 280:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 281:Generated_Source\PSoC4/CapSense_Sensing.c **** **********************************************************************************/
 282:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SetupWidget(uint32 widgetId)
 283:Generated_Source\PSoC4/CapSense_Sensing.c **** {
  58              		.loc 1 283 0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 7


  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62              	.LVL0:
 284:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
 285:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 286:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
  63              		.loc 1 286 0
  64 0000 8023     		movs	r3, #128
  65 0002 0A4A     		ldr	r2, .L12
 283:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
  66              		.loc 1 283 0
  67 0004 10B5     		push	{r4, lr}
  68              		.cfi_def_cfa_offset 8
  69              		.cfi_offset 4, -8
  70              		.cfi_offset 14, -4
  71              		.loc 1 286 0
  72 0006 D468     		ldr	r4, [r2, #12]
  73 0008 5B02     		lsls	r3, r3, #9
  74 000a 1C40     		ands	r4, r3
 287:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 288:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 289:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_INVALID_STATE;
  75              		.loc 1 289 0
  76 000c 1123     		movs	r3, #17
 286:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
  77              		.loc 1 286 0
  78 000e 002C     		cmp	r4, #0
  79 0010 09D1     		bne	.L10
  80 0012 103B     		subs	r3, r3, #16
 290:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 291:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 292:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  Check if widget id is valid, specified widget is enabled and widget did not
 293:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  detect any fault conditions if BIST is enabled. If all conditions are met,
 294:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  set widgetStatus as good, if not, set widgetStatus as bad.
 295:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 296:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if ((CapSense_TOTAL_WIDGETS > widgetId) &&
  81              		.loc 1 296 0
  82 0014 0428     		cmp	r0, #4
  83 0016 06D8     		bhi	.L10
  84              		.loc 1 296 0 is_stmt 0 discriminator 1
  85 0018 1269     		ldr	r2, [r2, #16]
  86 001a C240     		lsrs	r2, r2, r0
  87 001c 1A42     		tst	r2, r3
  88 001e 02D0     		beq	.L10
  89              	.LVL1:
 297:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)))
 298:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 299:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 300:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_SUCCESS;
 301:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 302:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 303:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 304:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_BAD_PARAM;
 305:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 306:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 307:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 8


 308:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Check widgetStatus flag that is set earlier, if flag is good, then set up only
 309:Generated_Source\PSoC4/CapSense_Sensing.c ****      * widget
 310:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 311:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CYRET_SUCCESS == widgetStatus)
 312:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 313:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
 314:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 315:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
 316:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
 317:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSX scan */
 318:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXSetupWidget(widgetId);
 319:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 320:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 321:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 322:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 323:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSD scan */
 324:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDSetupWidget(widgetId);
  90              		.loc 1 324 0 is_stmt 1
  91 0020 FFF7FEFF 		bl	CapSense_CSDSetupWidget
  92              	.LVL2:
 300:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
  93              		.loc 1 300 0
  94 0024 2300     		movs	r3, r4
  95              	.LVL3:
  96              	.L10:
 325:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 326:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 327:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 328:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 329:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for ISX scan */
 330:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXSetupWidget(widgetId);
 331:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 332:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 333:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 334:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Sensing method is invalid, return error to caller */
 335:Generated_Source\PSoC4/CapSense_Sensing.c ****             widgetStatus = CYRET_UNKNOWN;
 336:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 337:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 338:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 339:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (widgetStatus);
 340:Generated_Source\PSoC4/CapSense_Sensing.c **** }
  97              		.loc 1 340 0
  98 0026 1800     		movs	r0, r3
  99              		@ sp needed
 100 0028 10BD     		pop	{r4, pc}
 101              	.L13:
 102 002a C046     		.align	2
 103              	.L12:
 104 002c 00000000 		.word	CapSense_dsRam
 105              		.cfi_endproc
 106              	.LFE2:
 107              		.size	CapSense_SetupWidget, .-CapSense_SetupWidget
 108              		.section	.text.CapSense_Scan,"ax",%progbits
 109              		.align	1
 110              		.global	CapSense_Scan
 111              		.code	16
 112              		.thumb_func
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 9


 113              		.type	CapSense_Scan, %function
 114              	CapSense_Scan:
 115              	.LFB3:
 341:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 342:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 343:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 344:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_Scan
 345:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 346:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 347:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 348:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Initiates scanning of all the sensors in the widget initialized by
 349:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SetupWidget(), if no scan is in progress.
 350:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 351:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 352:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function is called only after the CapSense_SetupWidget()
 353:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function is called to start the scanning of the sensors in the widget. The
 354:Generated_Source\PSoC4/CapSense_Sensing.c **** *  status of a sensor scan must be checked using the CapSense_IsBusy()
 355:Generated_Source\PSoC4/CapSense_Sensing.c **** *  API prior to starting a next scan or setting up another widget.
 356:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 357:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 358:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the scan initiation operation:
 359:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 360:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the
 361:Generated_Source\PSoC4/CapSense_Sensing.c **** *    hardware block is busy.
 362:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - An unknown sensing method is used by the widget.
 363:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 364:Generated_Source\PSoC4/CapSense_Sensing.c **** ********************************************************************************/
 365:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_Scan(void)
 366:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 116              		.loc 1 366 0
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 0
 119              		@ frame_needed = 0, uses_anonymous_args = 0
 120              	.LVL4:
 367:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 368:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 369:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
 121              		.loc 1 369 0
 122 0000 094B     		ldr	r3, .L20
 366:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 123              		.loc 1 366 0
 124 0002 10B5     		push	{r4, lr}
 125              		.cfi_def_cfa_offset 8
 126              		.cfi_offset 4, -8
 127              		.cfi_offset 14, -4
 128              		.loc 1 369 0
 129 0004 DC68     		ldr	r4, [r3, #12]
 130 0006 8023     		movs	r3, #128
 131 0008 5B02     		lsls	r3, r3, #9
 132 000a 1C40     		ands	r4, r3
 370:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 371:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 372:Generated_Source\PSoC4/CapSense_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 133              		.loc 1 372 0
 134 000c 1120     		movs	r0, #17
 369:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 135              		.loc 1 369 0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 10


 136 000e 002C     		cmp	r4, #0
 137 0010 09D1     		bne	.L15
 138              	.LBB6:
 139              	.LBB7:
 373:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 374:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 375:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 376:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_currentSenseMethod)
 140              		.loc 1 376 0
 141 0012 064B     		ldr	r3, .L20+4
 142 0014 1B78     		ldrb	r3, [r3]
 143 0016 012B     		cmp	r3, #1
 144 0018 03D1     		bne	.L19
 377:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 378:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
 379:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
 380:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXScan();
 381:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 382:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 383:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 384:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 385:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDScan();
 145              		.loc 1 385 0
 146 001a FFF7FEFF 		bl	CapSense_CSDScan
 147              	.LVL5:
 367:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 148              		.loc 1 367 0
 149 001e 2000     		movs	r0, r4
 150 0020 01E0     		b	.L15
 151              	.L19:
 386:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 387:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 388:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 389:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 390:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXScan();
 391:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 392:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 393:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 394:Generated_Source\PSoC4/CapSense_Sensing.c ****             scanStatus = CYRET_UNKNOWN;
 152              		.loc 1 394 0
 153 0022 0120     		movs	r0, #1
 154 0024 4042     		rsbs	r0, r0, #0
 155              	.L15:
 156              	.LVL6:
 157              	.LBE7:
 158              	.LBE6:
 395:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 396:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 397:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 398:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (scanStatus);
 399:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 159              		.loc 1 399 0
 160              		@ sp needed
 161 0026 10BD     		pop	{r4, pc}
 162              	.L21:
 163              		.align	2
 164              	.L20:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 11


 165 0028 00000000 		.word	CapSense_dsRam
 166 002c 00000000 		.word	.LANCHOR0
 167              		.cfi_endproc
 168              	.LFE3:
 169              		.size	CapSense_Scan, .-CapSense_Scan
 170              		.section	.text.CapSense_ScanAllWidgets,"ax",%progbits
 171              		.align	1
 172              		.global	CapSense_ScanAllWidgets
 173              		.code	16
 174              		.thumb_func
 175              		.type	CapSense_ScanAllWidgets, %function
 176              	CapSense_ScanAllWidgets:
 177              	.LFB4:
 400:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 401:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 402:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 403:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_ScanAllWidgets
 404:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 405:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 406:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 407:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Initializes the first enabled widget and scanning of all the sensors in the
 408:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget, then the same process is repeated for all the widgets in the Component,
 409:Generated_Source\PSoC4/CapSense_Sensing.c **** *  i.e. scanning of all the widgets in the Component.
 410:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 411:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 412:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function initializes a widget and scans all the sensors in the widget,
 413:Generated_Source\PSoC4/CapSense_Sensing.c **** *  and then repeats the same for all the widgets in the Component. The tasks of
 414:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_SetupWidget() and CapSense_Scan() functions are
 415:Generated_Source\PSoC4/CapSense_Sensing.c **** *  executed by these functions. The status of a sensor scan must be checked
 416:Generated_Source\PSoC4/CapSense_Sensing.c **** *  using the CapSense_IsBusy() API prior to starting a next scan
 417:Generated_Source\PSoC4/CapSense_Sensing.c **** *  or setting up another widget.
 418:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 419:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 420:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the operation:
 421:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 422:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_BAD_PARAM - All the widgets are disabled.
 423:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the HW block is busy.
 424:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - There are unknown errors.
 425:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 426:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 427:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_ScanAllWidgets(void)
 428:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 178              		.loc 1 428 0
 179              		.cfi_startproc
 180              		@ args = 0, pretend = 0, frame = 0
 181              		@ frame_needed = 0, uses_anonymous_args = 0
 182              	.LVL7:
 429:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 430:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 431:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
 432:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 433:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_SW_STS_BUSY))
 183              		.loc 1 433 0
 184 0000 0C4B     		ldr	r3, .L30
 428:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 185              		.loc 1 428 0
 186 0002 10B5     		push	{r4, lr}
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 12


 187              		.cfi_def_cfa_offset 8
 188              		.cfi_offset 4, -8
 189              		.cfi_offset 14, -4
 190              		.loc 1 433 0
 191 0004 DC68     		ldr	r4, [r3, #12]
 192 0006 8023     		movs	r3, #128
 434:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 435:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 436:Generated_Source\PSoC4/CapSense_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 193              		.loc 1 436 0
 194 0008 1120     		movs	r0, #17
 433:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 195              		.loc 1 433 0
 196 000a 1C40     		ands	r4, r3
 197 000c 11D1     		bne	.L23
 198              	.LVL8:
 199              	.L27:
 437:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 438:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 439:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 440:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
 441:Generated_Source\PSoC4/CapSense_Sensing.c ****          *  Set up widget first widget.
 442:Generated_Source\PSoC4/CapSense_Sensing.c ****          *  If widget returned error, set up next, continue same until widget does not return error
 443:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
 444:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u;
 445:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex < CapSense_TOTAL_WIDGETS;
 446:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex++)
 447:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 448:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 449:Generated_Source\PSoC4/CapSense_Sensing.c ****             scanStatus = CapSense_SetupWidget(wdgtIndex);
 200              		.loc 1 449 0
 201 000e 2000     		movs	r0, r4
 202 0010 FFF7FEFF 		bl	CapSense_SetupWidget
 203              	.LVL9:
 450:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 451:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS == scanStatus)
 204              		.loc 1 451 0
 205 0014 0028     		cmp	r0, #0
 206 0016 09D1     		bne	.L24
 207 0018 074B     		ldr	r3, .L30+4
 452:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 453:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (0u != (CapSense_TOTAL_WIDGETS - 1u))
 454:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* If there are more than one widget to be scanned, request callback to scan ne
 455:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if ((CapSense_TOTAL_WIDGETS - 1u) > wdgtIndex)
 208              		.loc 1 455 0
 209 001a 042C     		cmp	r4, #4
 210 001c 02D0     		beq	.L25
 456:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 457:Generated_Source\PSoC4/CapSense_Sensing.c ****                          /* Request callback to scan next widget in ISR */
 458:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_ENABLE;
 211              		.loc 1 458 0
 212 001e 0122     		movs	r2, #1
 213 0020 5A70     		strb	r2, [r3, #1]
 214 0022 00E0     		b	.L26
 215              	.L25:
 459:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 460:Generated_Source\PSoC4/CapSense_Sensing.c ****                     else
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 13


 461:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 462:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Request to exit in ISR (Do not scan the next widgets) */
 463:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_DISABLE;
 216              		.loc 1 463 0
 217 0024 5870     		strb	r0, [r3, #1]
 218              	.L26:
 464:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 465:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else
 466:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 467:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Request to exit in ISR (We have only one widget) */
 468:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_DISABLE;
 469:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 470:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (0u != (CapSense_TOTAL_WIDGETS - 1u)) */
 471:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 472:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initiate scan and quit loop */
 473:Generated_Source\PSoC4/CapSense_Sensing.c ****                 scanStatus = CapSense_Scan();
 219              		.loc 1 473 0
 220 0026 FFF7FEFF 		bl	CapSense_Scan
 221              	.LVL10:
 474:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 475:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 222              		.loc 1 475 0
 223 002a 02E0     		b	.L23
 224              	.L24:
 446:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 225              		.loc 1 446 0
 226 002c 0134     		adds	r4, r4, #1
 227              	.LVL11:
 444:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex < CapSense_TOTAL_WIDGETS;
 228              		.loc 1 444 0
 229 002e 052C     		cmp	r4, #5
 230 0030 EDD1     		bne	.L27
 231              	.LVL12:
 232              	.L23:
 476:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 477:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 478:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 479:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 480:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (scanStatus);
 481:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 233              		.loc 1 481 0
 234              		@ sp needed
 235 0032 10BD     		pop	{r4, pc}
 236              	.L31:
 237              		.align	2
 238              	.L30:
 239 0034 00000000 		.word	CapSense_dsRam
 240 0038 00000000 		.word	.LANCHOR0
 241              		.cfi_endproc
 242              	.LFE4:
 243              		.size	CapSense_ScanAllWidgets, .-CapSense_ScanAllWidgets
 244              		.section	.text.CapSense_SetupWidgetExt,"ax",%progbits
 245              		.align	1
 246              		.global	CapSense_SetupWidgetExt
 247              		.code	16
 248              		.thumb_func
 249              		.type	CapSense_SetupWidgetExt, %function
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 14


 250              	CapSense_SetupWidgetExt:
 251              	.LFB5:
 482:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 483:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 484:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 485:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SetupWidgetExt
 486:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 487:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 488:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 489:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs extended initialization for the specified widget and also performs
 490:Generated_Source\PSoC4/CapSense_Sensing.c **** *  initialization required for a specific sensor in the widget. This function
 491:Generated_Source\PSoC4/CapSense_Sensing.c **** *  requires using the CapSense_ScanExt() function to initiate a scan.
 492:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 493:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 494:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function does the same as CapSense_SetupWidget() and also
 495:Generated_Source\PSoC4/CapSense_Sensing.c **** *  does the following tasks:
 496:Generated_Source\PSoC4/CapSense_Sensing.c **** *    1. Connects the first sensor of the widget.
 497:Generated_Source\PSoC4/CapSense_Sensing.c **** *    2. Configures the CSD HW block to perform a scan of the specified sensor.
 498:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 499:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Once this function is called to initialize a widget and a sensor, the
 500:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_ScanExt() function is called to scan the sensor.
 501:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 502:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function is called when no scanning is in progress. I.e.
 503:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_IsBusy() returns a non-busy status.
 504:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 505:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling this function directly from the application layer is not
 506:Generated_Source\PSoC4/CapSense_Sensing.c **** *  recommended. This function is used to implement only the user's specific
 507:Generated_Source\PSoC4/CapSense_Sensing.c **** *  use cases (for faster execution time or pipeline scanning for example).
 508:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 509:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param widgetId
 510:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID number of the widget to perform hardware and firmware
 511:Generated_Source\PSoC4/CapSense_Sensing.c **** *  initialization required for scanning the specific sensor in the specific
 512:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget.
 513:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the widget ID can be found in the CapSense
 514:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Configuration header file defined as CapSense_<WidgetName>_WDGT_ID.
 515:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 516:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param sensorId
 517:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID number of the sensor within the widget to perform hardware
 518:Generated_Source\PSoC4/CapSense_Sensing.c **** *  and firmware initialization required for scanning a specific sensor in a
 519:Generated_Source\PSoC4/CapSense_Sensing.c **** *  specific widget.
 520:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the sensor ID within a specified widget can be found in the
 521:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as
 522:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_<WidgetName>_SNS<SensorNumber>_ID
 523:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 524:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 525:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the operation:
 526:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - The operation is successfully completed.
 527:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_BAD_PARAM - The widget is invalid or if the specified widget is
 528:Generated_Source\PSoC4/CapSense_Sensing.c **** *    disabled
 529:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the
 530:Generated_Source\PSoC4/CapSense_Sensing.c **** *    hardware block is busy.
 531:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - An unknown sensing method is used by the widget or any
 532:Generated_Source\PSoC4/CapSense_Sensing.c **** *    other spurious error occurred.
 533:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 534:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 535:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SetupWidgetExt(uint32 widgetId, uint32 sensorId)
 536:Generated_Source\PSoC4/CapSense_Sensing.c **** {
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 15


 252              		.loc 1 536 0
 253              		.cfi_startproc
 254              		@ args = 0, pretend = 0, frame = 0
 255              		@ frame_needed = 0, uses_anonymous_args = 0
 256              	.LVL13:
 537:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
 538:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 539:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
 257              		.loc 1 539 0
 258 0000 8022     		movs	r2, #128
 259 0002 0D4B     		ldr	r3, .L41
 536:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
 260              		.loc 1 536 0
 261 0004 70B5     		push	{r4, r5, r6, lr}
 262              		.cfi_def_cfa_offset 16
 263              		.cfi_offset 4, -16
 264              		.cfi_offset 5, -12
 265              		.cfi_offset 6, -8
 266              		.cfi_offset 14, -4
 267              		.loc 1 539 0
 268 0006 DC68     		ldr	r4, [r3, #12]
 269 0008 5202     		lsls	r2, r2, #9
 270 000a 1440     		ands	r4, r2
 540:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 541:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 542:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_INVALID_STATE;
 271              		.loc 1 542 0
 272 000c 1122     		movs	r2, #17
 539:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 273              		.loc 1 539 0
 274 000e 002C     		cmp	r4, #0
 275 0010 10D1     		bne	.L39
 276 0012 103A     		subs	r2, r2, #16
 543:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 544:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 545:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  Check if widget id is valid, specified widget is enabled and widget did not
 546:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  detect any fault conditions if BIST is enabled. If all conditions are met,
 547:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  set widgetStatus as good, if not, set widgetStatus as bad.
 548:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 549:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if ((CapSense_TOTAL_WIDGETS > widgetId) &&
 277              		.loc 1 549 0
 278 0014 0428     		cmp	r0, #4
 279 0016 0DD8     		bhi	.L39
 280              		.loc 1 549 0 is_stmt 0 discriminator 1
 281 0018 1B69     		ldr	r3, [r3, #16]
 282 001a C340     		lsrs	r3, r3, r0
 283 001c 1342     		tst	r3, r2
 284 001e 09D0     		beq	.L39
 550:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)) &&
 551:Generated_Source\PSoC4/CapSense_Sensing.c ****         (sensorId < CapSense_GET_SENSOR_COUNT(widgetId)))
 285              		.loc 1 551 0 is_stmt 1
 286 0020 1C23     		movs	r3, #28
 287 0022 4343     		muls	r3, r0
 288 0024 054D     		ldr	r5, .L41+4
 289 0026 EB18     		adds	r3, r5, r3
 550:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)) &&
 290              		.loc 1 550 0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 16


 291 0028 1B8B     		ldrh	r3, [r3, #24]
 292 002a 8B42     		cmp	r3, r1
 293 002c 02D9     		bls	.L39
 294              	.LVL14:
 552:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 553:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 554:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_SUCCESS;
 555:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 556:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 557:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 558:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_BAD_PARAM;
 559:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 560:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 561:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 562:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Check widgetStatus flag that is set earlier, if flag is good, then set up only
 563:Generated_Source\PSoC4/CapSense_Sensing.c ****      * widget
 564:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 565:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CYRET_SUCCESS == widgetStatus)
 566:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 567:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
 568:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 569:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
 570:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
 571:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSX scan */
 572:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXSetupWidgetExt(widgetId, sensorId);
 573:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 574:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 575:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 576:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 577:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSD scan */
 578:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDSetupWidgetExt(widgetId, sensorId);
 295              		.loc 1 578 0
 296 002e FFF7FEFF 		bl	CapSense_CSDSetupWidgetExt
 297              	.LVL15:
 554:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 298              		.loc 1 554 0
 299 0032 2200     		movs	r2, r4
 300              	.LVL16:
 301              	.L39:
 579:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 580:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 581:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 582:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 583:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for ISX scan */
 584:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXSetupWidgetExt(widgetId, sensorId);
 585:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 586:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 587:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 588:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Sensing method is invalid, return error to caller */
 589:Generated_Source\PSoC4/CapSense_Sensing.c ****             widgetStatus = CYRET_UNKNOWN;
 590:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 591:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 592:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 593:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (widgetStatus);
 594:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 302              		.loc 1 594 0
 303 0034 1000     		movs	r0, r2
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 17


 304              		@ sp needed
 305 0036 70BD     		pop	{r4, r5, r6, pc}
 306              	.L42:
 307              		.align	2
 308              	.L41:
 309 0038 00000000 		.word	CapSense_dsRam
 310 003c 00000000 		.word	CapSense_dsFlash
 311              		.cfi_endproc
 312              	.LFE5:
 313              		.size	CapSense_SetupWidgetExt, .-CapSense_SetupWidgetExt
 314              		.section	.text.CapSense_ScanExt,"ax",%progbits
 315              		.align	1
 316              		.global	CapSense_ScanExt
 317              		.code	16
 318              		.thumb_func
 319              		.type	CapSense_ScanExt, %function
 320              	CapSense_ScanExt:
 321              	.LFB6:
 595:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 596:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 597:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 598:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_ScanExt
 599:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 600:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 601:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 602:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Starts a conversion on the pre-configured sensor. This function requires
 603:Generated_Source\PSoC4/CapSense_Sensing.c **** *  using the CapSense_SetupWidgetExt() function to set up the a
 604:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget.
 605:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 606:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 607:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function performs single scanning of one sensor in the widget configured
 608:Generated_Source\PSoC4/CapSense_Sensing.c **** *  by the CapSense_SetupWidgetExt() function.
 609:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 610:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling this function directly from the application layer is not
 611:Generated_Source\PSoC4/CapSense_Sensing.c **** *  recommended. This function is used to implement only the user's specific
 612:Generated_Source\PSoC4/CapSense_Sensing.c **** *  use cases (for faster execution time or pipeline scanning for example).
 613:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function is called when no scanning is in progress. I.e.
 614:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_IsBusy() returns a non-busy status.
 615:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 616:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The sensor must be preconfigured by using the
 617:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SetupWidgetExt() API prior to calling this function.
 618:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The sensor remains ready for a next scan if a previous scan was triggered
 619:Generated_Source\PSoC4/CapSense_Sensing.c **** *  by using the CapSense_ScanExt() function. In this case, calling
 620:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SetupWidgetExt() is not required every time before the
 621:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_ScanExt() function. If a previous scan was triggered in
 622:Generated_Source\PSoC4/CapSense_Sensing.c **** *  any other way - CapSense_Scan(), CapSense_ScanAllWidgets() or
 623:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_RunTuner() - (see the CapSense_RunTuner() function
 624:Generated_Source\PSoC4/CapSense_Sensing.c **** *  description for more details), the sensor must be preconfigured again by
 625:Generated_Source\PSoC4/CapSense_Sensing.c **** *  using the CapSense_SetupWidgetExt() API prior to calling the
 626:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_ScanExt() function.
 627:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 628:Generated_Source\PSoC4/CapSense_Sensing.c **** *  If disconnection of the sensors is required after calling
 629:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_ScanExt(), the CapSense_CSDDisconnectSns() or
 630:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_CSXDisconnectTx() or CapSense_CSXDisconnectRx()
 631:Generated_Source\PSoC4/CapSense_Sensing.c **** *  functions can be used.
 632:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 633:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 18


 634:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the scan initiation operation:
 635:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 636:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the
 637:Generated_Source\PSoC4/CapSense_Sensing.c **** *    hardware block is busy.
 638:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - An unknown sensing method is used by the widget.
 639:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 640:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 641:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_ScanExt(void)
 642:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 322              		.loc 1 642 0
 323              		.cfi_startproc
 324              		@ args = 0, pretend = 0, frame = 0
 325              		@ frame_needed = 0, uses_anonymous_args = 0
 326              	.LVL17:
 643:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 644:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 645:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
 327              		.loc 1 645 0
 328 0000 094B     		ldr	r3, .L49
 642:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 329              		.loc 1 642 0
 330 0002 10B5     		push	{r4, lr}
 331              		.cfi_def_cfa_offset 8
 332              		.cfi_offset 4, -8
 333              		.cfi_offset 14, -4
 334              		.loc 1 645 0
 335 0004 DC68     		ldr	r4, [r3, #12]
 336 0006 8023     		movs	r3, #128
 337 0008 5B02     		lsls	r3, r3, #9
 338 000a 1C40     		ands	r4, r3
 646:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 647:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 648:Generated_Source\PSoC4/CapSense_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 339              		.loc 1 648 0
 340 000c 1120     		movs	r0, #17
 645:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 341              		.loc 1 645 0
 342 000e 002C     		cmp	r4, #0
 343 0010 09D1     		bne	.L44
 649:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 650:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 651:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 652:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_currentSenseMethod)
 344              		.loc 1 652 0
 345 0012 064B     		ldr	r3, .L49+4
 346 0014 1B78     		ldrb	r3, [r3]
 347 0016 012B     		cmp	r3, #1
 348 0018 03D1     		bne	.L48
 653:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 654:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
 655:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
 656:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXScanExt();
 657:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 658:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 659:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 660:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 661:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDScanExt();
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 19


 349              		.loc 1 661 0
 350 001a FFF7FEFF 		bl	CapSense_CSDScanExt
 351              	.LVL18:
 643:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 352              		.loc 1 643 0
 353 001e 2000     		movs	r0, r4
 662:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 354              		.loc 1 662 0
 355 0020 01E0     		b	.L44
 356              	.L48:
 663:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 664:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 665:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 666:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXScanExt();
 667:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 668:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 669:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 670:Generated_Source\PSoC4/CapSense_Sensing.c ****             scanStatus = CYRET_UNKNOWN;
 357              		.loc 1 670 0
 358 0022 0120     		movs	r0, #1
 359 0024 4042     		rsbs	r0, r0, #0
 360              	.L44:
 361              	.LVL19:
 671:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 672:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 673:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 674:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (scanStatus);
 675:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 362              		.loc 1 675 0
 363              		@ sp needed
 364 0026 10BD     		pop	{r4, pc}
 365              	.L50:
 366              		.align	2
 367              	.L49:
 368 0028 00000000 		.word	CapSense_dsRam
 369 002c 00000000 		.word	.LANCHOR0
 370              		.cfi_endproc
 371              	.LFE6:
 372              		.size	CapSense_ScanExt, .-CapSense_ScanExt
 373              		.section	.text.CapSense_SetPinState,"ax",%progbits
 374              		.align	1
 375              		.global	CapSense_SetPinState
 376              		.code	16
 377              		.thumb_func
 378              		.type	CapSense_SetPinState, %function
 379              	CapSense_SetPinState:
 380              	.LFB8:
 676:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 677:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 678:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 679:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsInitialize
 680:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 681:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 682:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 683:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 684:Generated_Source\PSoC4/CapSense_Sensing.c **** *  of the CapSense Component. This function is called from
 685:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_Start() API prior to calling any other APIs of the Component.
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 20


 686:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 687:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 688:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 689:Generated_Source\PSoC4/CapSense_Sensing.c **** *  of the CapSense Component. This function is called from
 690:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_Start() API prior to calling any other APIs of the Component.
 691:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Depending on the configuration, the function initializes the CSD block
 692:Generated_Source\PSoC4/CapSense_Sensing.c **** *     for the corresponding sensing mode.
 693:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. The function updates the dsRam.wdgtWorking variable with 1 when Self-test
 694:Generated_Source\PSoC4/CapSense_Sensing.c **** *     is enabled.
 695:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 696:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling the CapSense_Start API is the recommended method to initialize
 697:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense Component at power-up. The CapSense_SsInitialize()
 698:Generated_Source\PSoC4/CapSense_Sensing.c **** *  API should not be used for initialization, resume, or wake-up operations.
 699:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The dsRam.wdgtWorking variable is updated.
 700:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 701:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return status
 702:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns status of operation:
 703:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Zero        - Indicates successful initialization.
 704:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Non-zero    - One or more errors occurred in the initialization process.
 705:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 706:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 707:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SsInitialize(void)
 708:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 709:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus initStatus;
 710:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 711:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) &&\
 712:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_MFS_IMO == CapSense_MFS_METHOD))
 713:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 centerFreqTrim;
 714:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 715:Generated_Source\PSoC4/CapSense_Sensing.c ****         centerFreqTrim = (uint8)CY_GET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR);
 716:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_immunity[CapSense_FREQ_CHANNEL_0] = centerFreqTrim;
 717:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 718:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (centerFreqTrim < CapSense_IMO_FREQUENCY_OFFSET_F1)
 719:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 720:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim + CapSense_IMO_FREQUENCY_OF
 721:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim + (CapSense_IMO_FREQUENCY_O
 722:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                            CapSense
 723:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 724:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (centerFreqTrim > (CapSense_IMO_FREQUENCY_OFFSET_MAX - CapSense_IMO_FREQUENCY_OFFSE
 725:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 726:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim - CapSense_IMO_FREQUENCY_OF
 727:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim - (CapSense_IMO_FREQUENCY_O
 728:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                            CapSense
 729:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 730:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 731:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 732:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim - CapSense_IMO_FREQUENCY_OF
 733:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim + CapSense_IMO_FREQUENCY_OF
 734:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 735:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 736:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) &&\
 737:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_MFS_IMO == CapSense_MFS_METHOD)) */
 738:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 739:Generated_Source\PSoC4/CapSense_Sensing.c ****     initStatus = CYRET_SUCCESS;
 740:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 741:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_DISABLE == CapSense_CSDV2)
 742:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsTrimIdacs();
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 21


 743:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 744:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 745:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if((CapSense_ENABLE == CapSense_CSD_EN) ||\
 746:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2)))
 747:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsInitializeSourceSenseClk();
 748:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) ||\
 749:Generated_Source\PSoC4/CapSense_Sensing.c ****               ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))) */
 750:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 751:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Set all IO states to the default state */
 752:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetAllIOsState((uint32)CapSense_SNS_CONNECTION_GROUND);
 753:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_dsRam.scanCurrentISC = CapSense_SNS_CONNECTION_GROUND;
 754:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 755:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSwitchSensingMode(CapSense_UNDEFINED_E);
 756:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_MANY_SENSE_MODES_EN)
 757:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSD_EN)
 758:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_CSD_E);
 759:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSX_EN)
 760:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_CSX_E);
 761:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_ISX_EN)
 762:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_ISX_E);
 763:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
 764:Generated_Source\PSoC4/CapSense_Sensing.c ****         #error "No sensing method enabled, Component cannot work in this mode"
 765:Generated_Source\PSoC4/CapSense_Sensing.c ****         initStatus = CYRET_UNKNOWN;
 766:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
 767:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 768:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (initStatus);
 769:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 770:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 771:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 772:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 773:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SetPinState
 774:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 775:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 776:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 777:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the state (drive mode and output state) of the port pin used by a sensor.
 778:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The possible states are GND, Shield, High-Z, Tx or Rx, Sensor. If the sensor
 779:Generated_Source\PSoC4/CapSense_Sensing.c **** *  specified in the input parameter is a ganged sensor, then the state of all pins
 780:Generated_Source\PSoC4/CapSense_Sensing.c **** *  associated with the ganged sensor is updated.
 781:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 782:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 783:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function sets a specified state for a specified sensor element. For the
 784:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CSD widgets, sensor element is a sensor ID, for the CSX widgets, it is either
 785:Generated_Source\PSoC4/CapSense_Sensing.c **** *  an Rx or Tx electrode ID. If the specified sensor is a ganged sensor, then
 786:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the specified state is set for all the electrodes belong to the sensor.
 787:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function must not be called while the Component is in the busy state.
 788:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 789:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function accepts the CapSense_SHIELD and
 790:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SENSOR states as an input only if there is at least
 791:Generated_Source\PSoC4/CapSense_Sensing.c **** *  one CSD widget. Similarly, this function accepts the CapSense_TX_PIN
 792:Generated_Source\PSoC4/CapSense_Sensing.c **** *  and CapSense_RX_PIN states as an input only if there is at least
 793:Generated_Source\PSoC4/CapSense_Sensing.c **** *  one CSX widget in the project.
 794:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 795:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling this function directly from the application layer is not
 796:Generated_Source\PSoC4/CapSense_Sensing.c **** *  recommended. This function is used to implement only the custom-specific
 797:Generated_Source\PSoC4/CapSense_Sensing.c **** *  use cases. Functions that perform a setup and scan of a sensor/widget
 798:Generated_Source\PSoC4/CapSense_Sensing.c **** *  automatically set the required pin states. They ignore changes
 799:Generated_Source\PSoC4/CapSense_Sensing.c **** *  in the design made by the CapSense_SetPinState() function.
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 22


 800:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function neither check wdgtIndex nor sensorElement for the correctness.
 801:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 802:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param widgetId
 803:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID of the widget to change the pin state of the specified
 804:Generated_Source\PSoC4/CapSense_Sensing.c **** *  sensor.
 805:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the widget ID can be found in the CapSense Configuration
 806:Generated_Source\PSoC4/CapSense_Sensing.c **** *  header file defined as CapSense_<WidgetName>_WDGT_ID.
 807:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 808:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param sensorElement
 809:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID of the sensor element within the widget to change
 810:Generated_Source\PSoC4/CapSense_Sensing.c **** *  its pin state.
 811:Generated_Source\PSoC4/CapSense_Sensing.c **** *  \if SECTION_C_LOW_LEVEL
 812:Generated_Source\PSoC4/CapSense_Sensing.c **** *  For the CSD widgets, sensorElement is the sensor ID and can be found in the
 813:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as
 814:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_SNS<SensorNumber>_ID.
 815:Generated_Source\PSoC4/CapSense_Sensing.c **** *  For the CSX widgets, sensorElement is defined either as Rx ID or Tx ID.
 816:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The first Rx in a widget corresponds to sensorElement = 0, the second
 817:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Rx in a widget corresponds to sensorElement = 1, and so on.
 818:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The last Tx in a widget corresponds to sensorElement = (RxNum + TxNum).
 819:Generated_Source\PSoC4/CapSense_Sensing.c **** *  \endif
 820:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Macros for Rx and Tx IDs can be found in the
 821:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as:
 822:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_RX<RXNumber>_ID
 823:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_TX<TXNumber>_ID.
 824:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 825:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param state
 826:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the state of the sensor to be set:
 827:Generated_Source\PSoC4/CapSense_Sensing.c **** *     1. CapSense_GROUND - The pin is connected to the ground.
 828:Generated_Source\PSoC4/CapSense_Sensing.c **** *     2. CapSense_HIGHZ - The drive mode of the pin is set to High-Z
 829:Generated_Source\PSoC4/CapSense_Sensing.c **** *        Analog.
 830:Generated_Source\PSoC4/CapSense_Sensing.c **** *     3. CapSense_SHIELD - The shield signal is routed to the pin
 831:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSD sensing method with shield electrode is enabled).
 832:Generated_Source\PSoC4/CapSense_Sensing.c **** *     4. CapSense_SENSOR - The pin is connected to the scanning bus
 833:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSD sensing method is enabled).
 834:Generated_Source\PSoC4/CapSense_Sensing.c **** *     5. CapSense_TX_PIN - The Tx or Lx signal is routed to the sensor
 835:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSX or ISX sensing method is enabled).
 836:Generated_Source\PSoC4/CapSense_Sensing.c **** *     6. CapSense_RX_PIN - The pin is connected to the scanning bus
 837:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSX or ISX sensing method is enabled).
 838:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 839:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 840:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SetPinState(uint32 widgetId, uint32 sensorElement, uint32 state)
 841:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 381              		.loc 1 841 0
 382              		.cfi_startproc
 383              		@ args = 0, pretend = 0, frame = 0
 384              		@ frame_needed = 0, uses_anonymous_args = 0
 385              	.LVL20:
 386 0000 70B5     		push	{r4, r5, r6, lr}
 387              		.cfi_def_cfa_offset 16
 388              		.cfi_offset 4, -16
 389              		.cfi_offset 5, -12
 390              		.cfi_offset 6, -8
 391              		.cfi_offset 14, -4
 842:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdNum;
 843:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdIndex;
 844:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8  interruptState;
 845:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_IO_STRUCT const *ioPtr;
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 23


 846:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_GANGED_SNS_EN)
 847:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_FLASH_SNS_STRUCT const *curFlashSnsPtr;
 848:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
 849:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 850:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Getting sensor element pointer and number of electrodes */
 851:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_GANGED_SNS_EN)
 852:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Check the ganged sns flag */
 853:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_GANGED_SNS_MASK == (CapSense_dsFlash.wdgtArray[widgetId].staticConfig & CapSen
 854:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 855:Generated_Source\PSoC4/CapSense_Sensing.c ****             curFlashSnsPtr = CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsFlash;
 856:Generated_Source\PSoC4/CapSense_Sensing.c ****             curFlashSnsPtr += sensorElement;
 857:Generated_Source\PSoC4/CapSense_Sensing.c ****             ioPtr = &CapSense_ioList[curFlashSnsPtr->firstPinId];
 858:Generated_Source\PSoC4/CapSense_Sensing.c ****             eltdNum = curFlashSnsPtr->numPins;
 859:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 860:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 861:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 862:Generated_Source\PSoC4/CapSense_Sensing.c ****             ioPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsF
 863:Generated_Source\PSoC4/CapSense_Sensing.c ****             eltdNum = 1u;
 864:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 865:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
 866:Generated_Source\PSoC4/CapSense_Sensing.c ****         ioPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsFlash
 392              		.loc 1 866 0
 393 0002 1C24     		movs	r4, #28
 394 0004 6043     		muls	r0, r4
 395              	.LVL21:
 396 0006 204B     		ldr	r3, .L60
 397 0008 4C43     		muls	r4, r1
 398 000a C158     		ldr	r1, [r0, r3]
 399              	.LVL22:
 841:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdNum;
 400              		.loc 1 841 0
 401 000c 1500     		movs	r5, r2
 402              		.loc 1 866 0
 403 000e 0C19     		adds	r4, r1, r4
 404              	.LVL23:
 867:Generated_Source\PSoC4/CapSense_Sensing.c ****         eltdNum = 1u;
 868:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
 869:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 870:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Loop through all electrodes of the specified sensor element */
 871:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (eltdIndex = 0u; eltdIndex < eltdNum; eltdIndex++)
 872:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 873:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Reset HSIOM and PC registers */
 874:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 405              		.loc 1 874 0
 406 0010 FFF7FEFF 		bl	CyEnterCriticalSection
 407              	.LVL24:
 875:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(CapSense_HSIOM_SEL_MASK << 
 408              		.loc 1 875 0
 409 0014 0F22     		movs	r2, #15
 410 0016 267E     		ldrb	r6, [r4, #24]
 411 0018 2168     		ldr	r1, [r4]
 412 001a B240     		lsls	r2, r2, r6
 413 001c 0B68     		ldr	r3, [r1]
 414 001e 9343     		bics	r3, r2
 876:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << ioPtr->s
 415              		.loc 1 876 0
 416 0020 0722     		movs	r2, #7
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 24


 875:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(CapSense_HSIOM_SEL_MASK << 
 417              		.loc 1 875 0
 418 0022 0B60     		str	r3, [r1]
 419              		.loc 1 876 0
 420 0024 A67E     		ldrb	r6, [r4, #26]
 421 0026 6168     		ldr	r1, [r4, #4]
 422 0028 B240     		lsls	r2, r2, r6
 423 002a 0B68     		ldr	r3, [r1]
 424 002c 9343     		bics	r3, r2
 425 002e 0B60     		str	r3, [r1]
 877:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 426              		.loc 1 877 0
 427 0030 FFF7FEFF 		bl	CyExitCriticalSection
 428              	.LVL25:
 878:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 879:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (state)
 429              		.loc 1 879 0
 430 0034 032D     		cmp	r5, #3
 431 0036 26D8     		bhi	.L51
 432 0038 2800     		movs	r0, r5
 433 003a FFF7FEFF 		bl	__gnu_thumb1_case_uqi
 434              	.L54:
 435 003e 02       		.byte	(.L53-.L54)/2
 436 003f 0C       		.byte	(.L55-.L54)/2
 437 0040 19       		.byte	(.L56-.L54)/2
 438 0041 15       		.byte	(.L57-.L54)/2
 439              		.p2align 1
 440              	.L53:
 880:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 881:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_GROUND:
 882:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 883:Generated_Source\PSoC4/CapSense_Sensing.c ****             interruptState = CyEnterCriticalSection();
 441              		.loc 1 883 0
 442 0042 FFF7FEFF 		bl	CyEnterCriticalSection
 443              	.LVL26:
 884:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_SNS_GROUND_CONNECT <<
 444              		.loc 1 884 0
 445 0046 0623     		movs	r3, #6
 446 0048 A57E     		ldrb	r5, [r4, #26]
 447              	.LVL27:
 448 004a 6168     		ldr	r1, [r4, #4]
 449 004c AB40     		lsls	r3, r3, r5
 450 004e 0A68     		ldr	r2, [r1]
 451 0050 1343     		orrs	r3, r2
 452 0052 0B60     		str	r3, [r1]
 453 0054 01E0     		b	.L59
 454              	.LVL28:
 455              	.L55:
 885:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
 886:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 887:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 888:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 889:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_HIGHZ:
 890:Generated_Source\PSoC4/CapSense_Sensing.c ****             interruptState = CyEnterCriticalSection();
 456              		.loc 1 890 0
 457 0056 FFF7FEFF 		bl	CyEnterCriticalSection
 458              	.LVL29:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 25


 459              	.L59:
 891:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 460              		.loc 1 891 0
 461 005a 0122     		movs	r2, #1
 462 005c A168     		ldr	r1, [r4, #8]
 463 005e 647E     		ldrb	r4, [r4, #25]
 464              	.LVL30:
 465 0060 0B68     		ldr	r3, [r1]
 466 0062 A240     		lsls	r2, r2, r4
 467 0064 9343     		bics	r3, r2
 468 0066 0BE0     		b	.L58
 469              	.LVL31:
 470              	.L57:
 892:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 893:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 894:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 895:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 896:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSOR:
 897:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Enable sensor */
 898:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDConnectSns(ioPtr);
 471              		.loc 1 898 0
 472 0068 2000     		movs	r0, r4
 473              	.LVL32:
 474 006a FFF7FEFF 		bl	CapSense_CSDConnectSns
 475              	.LVL33:
 899:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 476              		.loc 1 899 0
 477 006e 0AE0     		b	.L51
 478              	.LVL34:
 479              	.L56:
 900:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 901:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 902:Generated_Source\PSoC4/CapSense_Sensing.c ****                 case CapSense_SHIELD:
 903:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Set appropriate bit in HSIOM register to configure pin to shield mode */
 904:Generated_Source\PSoC4/CapSense_Sensing.c ****                     interruptState = CyEnterCriticalSection();
 480              		.loc 1 904 0
 481 0070 FFF7FEFF 		bl	CyEnterCriticalSection
 482              	.LVL35:
 905:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_S
 483              		.loc 1 905 0
 484 0074 0523     		movs	r3, #5
 485 0076 2168     		ldr	r1, [r4]
 486 0078 247E     		ldrb	r4, [r4, #24]
 487              	.LVL36:
 488 007a 0A68     		ldr	r2, [r1]
 489 007c A340     		lsls	r3, r3, r4
 490 007e 1343     		orrs	r3, r2
 491              	.LVL37:
 492              	.L58:
 493 0080 0B60     		str	r3, [r1]
 906:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CyExitCriticalSection(interruptState);
 494              		.loc 1 906 0
 495 0082 FFF7FEFF 		bl	CyExitCriticalSection
 496              	.LVL38:
 497              	.L51:
 907:Generated_Source\PSoC4/CapSense_Sensing.c ****                     break;
 908:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 26


 909:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 910:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 911:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 912:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_ISX_EN))
 913:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_TX_PIN:
 914:Generated_Source\PSoC4/CapSense_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 915:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_SEL_C
 916:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_GPIO_STRGDRV << i
 917:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CyExitCriticalSection(interruptState);
 918:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 919:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 920:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_RX_PIN:
 921:Generated_Source\PSoC4/CapSense_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 922:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_SEL_A
 923:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << 
 924:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CyExitCriticalSection(interruptState);
 925:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 926:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 927:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 928:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 929:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Wrong state */
 930:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 931:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 932:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 933:Generated_Source\PSoC4/CapSense_Sensing.c ****         ioPtr++;
 934:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 935:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 498              		.loc 1 935 0
 499              		@ sp needed
 500 0086 70BD     		pop	{r4, r5, r6, pc}
 501              	.L61:
 502              		.align	2
 503              	.L60:
 504 0088 00000000 		.word	CapSense_dsFlash
 505              		.cfi_endproc
 506              	.LFE8:
 507              		.size	CapSense_SetPinState, .-CapSense_SetPinState
 508              		.section	.text.CapSense_SsSetAllIOsState,"ax",%progbits
 509              		.align	1
 510              		.global	CapSense_SsSetAllIOsState
 511              		.code	16
 512              		.thumb_func
 513              		.type	CapSense_SsSetAllIOsState, %function
 514              	CapSense_SsSetAllIOsState:
 515              	.LFB11:
 936:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 937:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 938:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
 939:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsCSDDisableMode
 940:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
 941:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 942:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
 943:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables CSD mode.
 944:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 945:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
 946:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable CSD mode the following tasks are performed:
 947:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect Cmod from AMUXBUS-A.
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 27


 948:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 949:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  3. Disconnect Csh from AMUXBUS-B.
 950:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  4. Disable Shield Electrodes.
 951:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 952:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
 953:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsCSDDisableMode(void)
 954:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 955:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSDV2) && \
 956:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN))
 957:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 958:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 newRegValue;
 959:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 960:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Disconnect IDACA and IDACB */
 961:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue = CY_GET_REG32(CapSense_SW_REFGEN_SEL_PTR);
 962:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue &= (uint32)(~CapSense_SW_REFGEN_SEL_SW_IAIB_MASK);
 963:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_SW_REFGEN_SEL_PTR, newRegValue);
 964:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSDV2) && \
 965:Generated_Source\PSoC4/CapSense_Sensing.c ****                    (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)) */
 966:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 967:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Cmod from AMUXBUS-A using HSIOM registers */
 968:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_WriteBitsSafe(CapSense_CMOD_HSIOM_PTR, CapSense_CMOD_HSIOM_MASK, 0u);
 969:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 970:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous CSD electrode if it has been connected */
 971:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsCSDElectrodeCheck();
 972:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 973:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Csh from AMUXBUS-B */
 974:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 975:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
 976:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CSH_HSIOM_PTR, CapSense_CSH_HSIOM_MASK, 0u);
 977:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 978:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 979:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 980:Generated_Source\PSoC4/CapSense_Sensing.c ****              (0u != CapSense_CSD_TOTAL_SHIELD_COUNT))
 981:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsCSDDisableShieldElectrodes();
 982:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 983:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 984:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 985:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 986:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 987:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
 988:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
 989:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsDisableCSXMode
 990:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
 991:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 992:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
 993:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables CSX mode.
 994:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 995:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
 996:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable CSX mode the following tasks are performed:
 997:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A.
 998:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 999:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1000:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1001:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableCSXMode(void)
1002:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1003:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers */
1004:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_WriteBitsSafe(CapSense_CintA_HSIOM_PTR, CapSense_CintA_HSIOM_MASK, 0u);
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 28


1005:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers */
1006:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_WriteBitsSafe(CapSense_CintB_HSIOM_PTR, CapSense_CintB_HSIOM_MASK, 0u);
1007:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous CSX electrode if it has been connected */
1008:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_CSXElectrodeCheck();
1009:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1010:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1011:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1012:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1013:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
1014:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1015:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsDisableISXMode
1016:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1017:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1018:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1019:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables ISX mode.
1020:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1021:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1022:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable ISX mode the following tasks are performed:
1023:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A
1024:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous ISX electrode if it has been connected
1025:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1026:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1027:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableISXMode(void)
1028:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1029:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers */
1030:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_WriteBitsSafe(CapSense_CintA_HSIOM_PTR, CapSense_CintA_HSIOM_MASK, 0u);
1031:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers */
1032:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_WriteBitsSafe(CapSense_CintB_HSIOM_PTR, CapSense_CintB_HSIOM_MASK, 0u);
1033:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous ISX electrode if it has been connected */
1034:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_ISXElectrodeCheck();
1035:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_DigPrt2_Stop();
1036:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_USES_PORT_3)
1037:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_DigPrt3_Stop();
1038:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
1039:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1040:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
1041:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1042:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1043:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1044:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSwitchSensingMode
1045:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1046:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1047:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1048:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function changes the Сomponent settings for operation in a specified
1049:Generated_Source\PSoC4/CapSense_Sensing.c **** *  sensing mode.
1050:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1051:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1052:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function performs following tasks:
1053:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Releasing the CSD HW block.
1054:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. Disconnecting external capacitors.
1055:Generated_Source\PSoC4/CapSense_Sensing.c **** *  3. Setting new mode.
1056:Generated_Source\PSoC4/CapSense_Sensing.c **** *  4. Configuring HW to the new sensing mode.
1057:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1058:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param mode
1059:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the scan mode:
1060:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_CSD_E
1061:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_CSX_E
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 29


1062:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_ISX_E
1063:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_BIST_E
1064:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_UNDEFINED_E
1065:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1066:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1067:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_ENUM mode)
1068:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1069:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_currentSenseMethod != mode)
1070:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1071:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* The requested mode differs to the current one. Disable the current mode */
1072:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_SENSE_METHOD_CSD_E == CapSense_currentSenseMethod)
1073:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1074:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_EN)
1075:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsCSDDisableMode();
1076:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
1077:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1078:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_CSX_E == CapSense_currentSenseMethod)
1079:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1080:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSX_EN)
1081:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsDisableCSXMode();
1082:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1083:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1084:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_ISX_E == CapSense_currentSenseMethod)
1085:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1086:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ISX_EN)
1087:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsDisableISXMode();
1088:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
1089:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1090:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_BIST_E == CapSense_currentSenseMethod)
1091:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1092:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
1093:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_BistDisableMode();
1094:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1095:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1096:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
1097:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1098:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ADC_EN)
1099:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Release ADC resources */
1100:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)CapSense_AdcReleaseResources();
1101:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
1102:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1103:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1104:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Enable the specified mode */
1105:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_SENSE_METHOD_CSD_E == mode)
1106:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1107:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_EN)
1108:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize CSD mode to guarantee configured CSD mode */
1109:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsCSDInitialize();
1110:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSD_E;
1111:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
1112:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1113:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_CSX_E == mode)
1114:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1115:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSX_EN)
1116:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize CSX mode to guarantee configured CSX mode */
1117:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXInitialize();
1118:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSX_E;
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 30


1119:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1120:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1121:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_ISX_E == mode)
1122:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1123:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ISX_EN)
1124:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize ISX mode to guarantee configured ISX mode */
1125:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXInitialize();
1126:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_ISX_E;
1127:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
1128:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1129:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_BIST_E == mode)
1130:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1131:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
1132:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_BistInitialize();
1133:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_BIST_E;
1134:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1135:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1136:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
1137:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1138:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
1139:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1140:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1141:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1142:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1143:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1144:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1145:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetAllIOsState
1146:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1147:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1148:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1149:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all electrodes into a default state.
1150:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1151:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1152:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all the CSD/CSX IOs into a default state:
1153:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
1154:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - DM      - Strong drive.
1155:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - State   - Zero.
1156:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1157:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all the ADC channels into a default state:
1158:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
1159:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - DM      - HiZ-Analog.
1160:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - State   - Zero.
1161:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1162:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly from the application
1163:Generated_Source\PSoC4/CapSense_Sensing.c **** *  layer.
1164:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1165:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1166:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetAllIOsState(uint32 state)
1167:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 516              		.loc 1 1167 0
 517              		.cfi_startproc
 518              		@ args = 0, pretend = 0, frame = 8
 519              		@ frame_needed = 0, uses_anonymous_args = 0
 520              	.LVL39:
 521 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 522              		.cfi_def_cfa_offset 32
 523              		.cfi_offset 0, -32
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 31


 524              		.cfi_offset 1, -28
 525              		.cfi_offset 2, -24
 526              		.cfi_offset 4, -20
 527              		.cfi_offset 5, -16
 528              		.cfi_offset 6, -12
 529              		.cfi_offset 7, -8
 530              		.cfi_offset 14, -4
 531              		.loc 1 1167 0
 532 0002 0600     		movs	r6, r0
1168:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8  interruptState;
1169:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1170:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 loopIndex;
1171:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1172:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newPinPcVal;
1173:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newPinHsiomVal;
1174:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1175:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 tmpPcDrRegValue;
1176:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 tmpHsiomRegValue;
1177:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1178:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_IO_STRUCT const *snsIoPtr;
1179:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1180:Generated_Source\PSoC4/CapSense_Sensing.c ****     switch(state)
 533              		.loc 1 1180 0
 534 0004 0128     		cmp	r0, #1
 535 0006 07D0     		beq	.L67
 536 0008 0228     		cmp	r0, #2
 537 000a 02D0     		beq	.L65
1181:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1182:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_SNS_CONNECTION_GROUND:
1183:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinPcVal = CY_SYS_PINS_DM_STRONG;
1184:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
 538              		.loc 1 1184 0
 539 000c 0025     		movs	r5, #0
1183:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
 540              		.loc 1 1183 0
 541 000e 0627     		movs	r7, #6
 542 0010 04E0     		b	.L64
 543              	.L65:
 544              	.LVL40:
1185:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
1186:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_SNS_CONNECTION_HIGHZ:
1187:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinPcVal = CY_SYS_PINS_DM_ALG_HIZ;
1188:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
1189:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
1190:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_SNS_CONNECTION_SHIELD:
1191:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinPcVal = CY_SYS_PINS_DM_ALG_HIZ;
1192:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_CSD_SHIELD;
 545              		.loc 1 1192 0
 546 0012 0525     		movs	r5, #5
1191:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_CSD_SHIELD;
 547              		.loc 1 1191 0
 548 0014 0027     		movs	r7, #0
1193:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 549              		.loc 1 1193 0
 550 0016 01E0     		b	.L64
 551              	.LVL41:
 552              	.L67:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 32


1188:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 553              		.loc 1 1188 0
 554 0018 0025     		movs	r5, #0
1187:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
 555              		.loc 1 1187 0
 556 001a 2F00     		movs	r7, r5
 557              	.L64:
 558              	.LVL42:
 559 001c 164C     		ldr	r4, .L69
 560              	.LVL43:
 561              	.L66:
1194:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
1195:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinPcVal = CY_SYS_PINS_DM_STRONG;
1196:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
1197:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
1198:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1199:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1200:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Loop through all electrodes */
1201:Generated_Source\PSoC4/CapSense_Sensing.c ****     snsIoPtr = &CapSense_ioList[0u];
1202:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (loopIndex = 0u; loopIndex < CapSense_TOTAL_ELECTRODES; loopIndex++)
1203:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1204:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 562              		.loc 1 1204 0 discriminator 3
 563 001e FFF7FEFF 		bl	CyEnterCriticalSection
 564              	.LVL44:
 565 0022 0190     		str	r0, [sp, #4]
 566              	.LVL45:
1205:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1206:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpHsiomRegValue = CY_GET_REG32 (snsIoPtr->hsiomPtr);
1207:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpHsiomRegValue &= ~(snsIoPtr->hsiomMask);
1208:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->hsiomPtr, tmpHsiomRegValue);
1209:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1210:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue = CY_GET_REG32 (snsIoPtr->pcPtr);
1211:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue &= ~(CapSense_GPIO_PC_MASK << snsIoPtr->shift);
 567              		.loc 1 1211 0 discriminator 3
 568 0024 0720     		movs	r0, #7
1206:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpHsiomRegValue &= ~(snsIoPtr->hsiomMask);
 569              		.loc 1 1206 0 discriminator 3
 570 0026 231F     		subs	r3, r4, #4
 571              	.LVL46:
 572 0028 1A68     		ldr	r2, [r3]
1207:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->hsiomPtr, tmpHsiomRegValue);
 573              		.loc 1 1207 0 discriminator 3
 574 002a E168     		ldr	r1, [r4, #12]
1206:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpHsiomRegValue &= ~(snsIoPtr->hsiomMask);
 575              		.loc 1 1206 0 discriminator 3
 576 002c 1368     		ldr	r3, [r2]
 577              	.LVL47:
1207:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->hsiomPtr, tmpHsiomRegValue);
 578              		.loc 1 1207 0 discriminator 3
 579 002e 8B43     		bics	r3, r1
 580              	.LVL48:
1208:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 581              		.loc 1 1208 0 discriminator 3
 582 0030 1360     		str	r3, [r2]
 583              		.loc 1 1211 0 discriminator 3
 584 0032 A17D     		ldrb	r1, [r4, #22]
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 33


1207:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->hsiomPtr, tmpHsiomRegValue);
 585              		.loc 1 1207 0 discriminator 3
 586 0034 9C46     		mov	ip, r3
 587              	.LVL49:
 588              		.loc 1 1211 0 discriminator 3
 589 0036 8840     		lsls	r0, r0, r1
1210:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue &= ~(CapSense_GPIO_PC_MASK << snsIoPtr->shift);
 590              		.loc 1 1210 0 discriminator 3
 591 0038 2368     		ldr	r3, [r4]
 592              	.LVL50:
 593 003a 1B68     		ldr	r3, [r3]
 594              	.LVL51:
 595              		.loc 1 1211 0 discriminator 3
 596 003c 8343     		bics	r3, r0
 597              	.LVL52:
1212:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue |=  (newPinPcVal << snsIoPtr->shift);
 598              		.loc 1 1212 0 discriminator 3
 599 003e 3800     		movs	r0, r7
 600 0040 8840     		lsls	r0, r0, r1
1213:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->pcPtr, tmpPcDrRegValue);
 601              		.loc 1 1213 0 discriminator 3
 602 0042 2168     		ldr	r1, [r4]
1212:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue |=  (newPinPcVal << snsIoPtr->shift);
 603              		.loc 1 1212 0 discriminator 3
 604 0044 0343     		orrs	r3, r0
 605              	.LVL53:
 606              		.loc 1 1213 0 discriminator 3
 607 0046 0B60     		str	r3, [r1]
1214:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1215:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpHsiomRegValue |=  (newPinHsiomVal << snsIoPtr->hsiomShift);
 608              		.loc 1 1215 0 discriminator 3
 609 0048 2900     		movs	r1, r5
 610 004a 237D     		ldrb	r3, [r4, #20]
 611              	.LVL54:
1216:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->hsiomPtr, tmpHsiomRegValue);
1217:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1218:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue = CY_GET_REG32 (snsIoPtr->drPtr);
1219:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue &= ~(snsIoPtr->mask);
1220:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->drPtr, tmpPcDrRegValue);
1221:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1222:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 612              		.loc 1 1222 0 discriminator 3
 613 004c 0198     		ldr	r0, [sp, #4]
1215:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->hsiomPtr, tmpHsiomRegValue);
 614              		.loc 1 1215 0 discriminator 3
 615 004e 9940     		lsls	r1, r1, r3
 616 0050 0B00     		movs	r3, r1
 617 0052 6146     		mov	r1, ip
 618 0054 0B43     		orrs	r3, r1
 619              	.LVL55:
1216:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->hsiomPtr, tmpHsiomRegValue);
 620              		.loc 1 1216 0 discriminator 3
 621 0056 1360     		str	r3, [r2]
 622              	.LVL56:
1218:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue &= ~(snsIoPtr->mask);
 623              		.loc 1 1218 0 discriminator 3
 624 0058 6268     		ldr	r2, [r4, #4]
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 34


1219:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->drPtr, tmpPcDrRegValue);
 625              		.loc 1 1219 0 discriminator 3
 626 005a 2169     		ldr	r1, [r4, #16]
1218:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue &= ~(snsIoPtr->mask);
 627              		.loc 1 1218 0 discriminator 3
 628 005c 1368     		ldr	r3, [r2]
 629              	.LVL57:
 630 005e 1C34     		adds	r4, r4, #28
 631              	.LVL58:
1219:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->drPtr, tmpPcDrRegValue);
 632              		.loc 1 1219 0 discriminator 3
 633 0060 8B43     		bics	r3, r1
 634              	.LVL59:
1220:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 635              		.loc 1 1220 0 discriminator 3
 636 0062 1360     		str	r3, [r2]
 637              	.LVL60:
 638              		.loc 1 1222 0 discriminator 3
 639 0064 FFF7FEFF 		bl	CyExitCriticalSection
 640              	.LVL61:
1202:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 641              		.loc 1 1202 0 discriminator 3
 642 0068 044B     		ldr	r3, .L69+4
 643 006a 9C42     		cmp	r4, r3
 644 006c D7D1     		bne	.L66
1223:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1224:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Get next electrode */
1225:Generated_Source\PSoC4/CapSense_Sensing.c ****         snsIoPtr++;
1226:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1227:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1228:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_CSD_EN) &&\
1229:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) &&\
1230:Generated_Source\PSoC4/CapSense_Sensing.c ****          (0u != CapSense_CSD_TOTAL_SHIELD_COUNT))
1231:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsCSDSetShieldElectrodesState(state);
 645              		.loc 1 1231 0
 646 006e 3000     		movs	r0, r6
 647 0070 FFF7FEFF 		bl	CapSense_SsCSDSetShieldElectrodesState
 648              	.LVL62:
1232:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
1233:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1234:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if(CapSense_ENABLE == CapSense_ADC_EN)
1235:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_ClearAdcChannels();
1236:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
1237:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1238:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 649              		.loc 1 1238 0
 650              		@ sp needed
 651              	.LVL63:
 652              	.LVL64:
 653              	.LVL65:
 654 0074 F7BD     		pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 655              	.L70:
 656 0076 C046     		.align	2
 657              	.L69:
 658 0078 04000000 		.word	CapSense_ioList+4
 659 007c 90000000 		.word	CapSense_ioList+144
 660              		.cfi_endproc
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 35


 661              	.LFE11:
 662              		.size	CapSense_SsSetAllIOsState, .-CapSense_SsSetAllIOsState
 663              		.section	.text.CapSense_SsPostAllWidgetsScan,"ax",%progbits
 664              		.align	1
 665              		.global	CapSense_SsPostAllWidgetsScan
 666              		.code	16
 667              		.thumb_func
 668              		.type	CapSense_SsPostAllWidgetsScan, %function
 669              	CapSense_SsPostAllWidgetsScan:
 670              	.LFB12:
1239:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1240:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ADC_EN)
1241:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1242:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsReleaseResources()
1243:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1244:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1245:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1246:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function sets the resources that do not belong to the sensing HW block to
1247:Generated_Source\PSoC4/CapSense_Sensing.c **** *  default state.
1248:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1249:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1250:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The function performs following tasks:
1251:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Checks if CSD block busy and returns error if it is busy
1252:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. Disconnects integration capacitors (CintA, CintB for CSX mode and
1253:Generated_Source\PSoC4/CapSense_Sensing.c **** *     Cmod for CSD mode)
1254:Generated_Source\PSoC4/CapSense_Sensing.c **** *  3. Disconnect electroded if they have been connected.
1255:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1256:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
1257:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the operation:
1258:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Zero        - Resources released successfully.
1259:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Non-zero    - One or more errors occurred in releasing process.
1260:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1261:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1262:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SsReleaseResources(void)
1263:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1264:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus busyStatus = CYRET_SUCCESS;
1265:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1266:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_SW_STS_BUSY))
1267:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1268:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
1269:Generated_Source\PSoC4/CapSense_Sensing.c ****         busyStatus = CYRET_INVALID_STATE;
1270:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1271:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
1272:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1273:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
1274:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsDisableCSXMode();
1275:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1276:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1277:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
1278:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsDisableISXMode();
1279:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
1280:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1281:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
1282:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsCSDDisableMode();
1283:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
1284:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1285:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 36


1286:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_BistDisableMode();
1287:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1288:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1289:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSetAllIOsState((uint32)CapSense_SNS_CONNECTION_GROUND);
1290:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1291:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1292:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Reset of the currentSenseMethod variable to make sure that the next
1293:Generated_Source\PSoC4/CapSense_Sensing.c ****          * call of SetupWidget() API setups the correct widget mode
1294:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1295:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
1296:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1297:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1298:Generated_Source\PSoC4/CapSense_Sensing.c ****     return busyStatus;
1299:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1300:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
1301:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1302:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1303:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1304:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsPostAllWidgetsScan
1305:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1306:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1307:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1308:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The ISR function for multiple widget scanning implementation.
1309:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1310:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1311:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is the function used by the CapSense ISR to implement multiple widget
1312:Generated_Source\PSoC4/CapSense_Sensing.c **** *  scanning.
1313:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Should not be used by the application layer.
1314:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1315:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1316:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsPostAllWidgetsScan(void)
1317:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 671              		.loc 1 1317 0
 672              		.cfi_startproc
 673              		@ args = 0, pretend = 0, frame = 0
 674              		@ frame_needed = 0, uses_anonymous_args = 0
 675 0000 10B5     		push	{r4, lr}
 676              		.cfi_def_cfa_offset 8
 677              		.cfi_offset 4, -8
 678              		.cfi_offset 14, -4
 679              	.L76:
1318:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1319:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Increment widget index
1320:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Check if all the widgets are scanned
1321:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  3. If all the widgets are not scanned, set up and scan next widget
1322:Generated_Source\PSoC4/CapSense_Sensing.c ****     */
1323:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (1u != CapSense_TOTAL_WIDGETS)
1324:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus postScanStatus;
1325:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1326:Generated_Source\PSoC4/CapSense_Sensing.c ****         do
1327:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1328:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_widgetIndex++;
 680              		.loc 1 1328 0
 681 0002 174C     		ldr	r4, .L77
 682 0004 A378     		ldrb	r3, [r4, #2]
 683 0006 0133     		adds	r3, r3, #1
 684 0008 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 37


 685 000a A370     		strb	r3, [r4, #2]
1329:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1330:Generated_Source\PSoC4/CapSense_Sensing.c ****             postScanStatus = CapSense_SetupWidget((uint32)CapSense_widgetIndex);
 686              		.loc 1 1330 0
 687 000c A078     		ldrb	r0, [r4, #2]
 688 000e C0B2     		uxtb	r0, r0
 689 0010 FFF7FEFF 		bl	CapSense_SetupWidget
 690              	.LVL66:
1331:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1332:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS == postScanStatus)
 691              		.loc 1 1332 0
 692 0014 0028     		cmp	r0, #0
 693 0016 06D1     		bne	.L72
1333:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1334:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if((CapSense_TOTAL_WIDGETS - 1u) == CapSense_widgetIndex)
 694              		.loc 1 1334 0
 695 0018 A378     		ldrb	r3, [r4, #2]
 696 001a 042B     		cmp	r3, #4
 697 001c 00D1     		bne	.L73
1335:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1336:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* The last widget will be scanned. Reset flag to skip configuring the next wid
1337:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_requestScanAllWidget = CapSense_DISABLE;
 698              		.loc 1 1337 0
 699 001e 6070     		strb	r0, [r4, #1]
 700              	.L73:
1338:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1339:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)CapSense_Scan();
 701              		.loc 1 1339 0
 702 0020 FFF7FEFF 		bl	CapSense_Scan
 703              	.LVL67:
 704 0024 1BE0     		b	.L71
 705              	.LVL68:
 706              	.L72:
1340:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1341:Generated_Source\PSoC4/CapSense_Sensing.c ****             else if((CapSense_TOTAL_WIDGETS - 1u) == CapSense_widgetIndex)
 707              		.loc 1 1341 0
 708 0026 A278     		ldrb	r2, [r4, #2]
 709 0028 0E4B     		ldr	r3, .L77+4
 710 002a 0006     		lsls	r0, r0, #24
 711              	.LVL69:
 712 002c 042A     		cmp	r2, #4
 713 002e 0ED1     		bne	.L75
1342:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1343:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if ((CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) && \
1344:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (CapSense_ENABLE == CapSense_CSD_EN))
1345:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSD_E ==
1346:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[CapSense_widgetIndex]
1347:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1348:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Disable the CSD block */
1349:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd);
1350:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1351:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* ((CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) && \
1352:Generated_Source\PSoC4/CapSense_Sensing.c ****                            (CapSense_ENABLE == CapSense_CSD_EN)) */
1353:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1354:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update scan Counter */
1355:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.scanCounter++;
1356:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* All widgets are totally processed. Reset BUSY flag */
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 38


1357:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_SW_STS_BUSY;
 714              		.loc 1 1357 0
 715 0030 8021     		movs	r1, #128
1355:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* All widgets are totally processed. Reset BUSY flag */
 716              		.loc 1 1355 0
 717 0032 1A89     		ldrh	r2, [r3, #8]
 718 0034 0132     		adds	r2, r2, #1
 719 0036 1A81     		strh	r2, [r3, #8]
 720              		.loc 1 1357 0
 721 0038 DA68     		ldr	r2, [r3, #12]
 722 003a 8A43     		bics	r2, r1
 723 003c DA60     		str	r2, [r3, #12]
1358:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1359:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update status with with the failure */
1360:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_STATUS_ERR_MASK;
 724              		.loc 1 1360 0
 725 003e DA68     		ldr	r2, [r3, #12]
 726 0040 1202     		lsls	r2, r2, #8
 727 0042 120A     		lsrs	r2, r2, #8
 728 0044 DA60     		str	r2, [r3, #12]
1361:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSense_S
 729              		.loc 1 1361 0
 730 0046 DA68     		ldr	r2, [r3, #12]
 731 0048 1043     		orrs	r0, r2
 732 004a D860     		str	r0, [r3, #12]
 733              	.LVL70:
 734 004c 07E0     		b	.L71
 735              	.LVL71:
 736              	.L75:
1362:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1363:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set postScanStatus to exit the while loop */
1364:Generated_Source\PSoC4/CapSense_Sensing.c ****                 postScanStatus = CYRET_SUCCESS;
1365:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1366:Generated_Source\PSoC4/CapSense_Sensing.c ****             else
1367:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1368:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update status with with the failure. Configure the next widget in while() loop *
1369:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_STATUS_ERR_MASK;
 737              		.loc 1 1369 0
 738 004e DA68     		ldr	r2, [r3, #12]
 739 0050 1202     		lsls	r2, r2, #8
 740 0052 120A     		lsrs	r2, r2, #8
 741 0054 DA60     		str	r2, [r3, #12]
1370:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSense_S
 742              		.loc 1 1370 0
 743 0056 DA68     		ldr	r2, [r3, #12]
 744 0058 1043     		orrs	r0, r2
 745 005a D860     		str	r0, [r3, #12]
 746 005c D1E7     		b	.L76
 747              	.L71:
1371:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1372:Generated_Source\PSoC4/CapSense_Sensing.c ****         } while (CYRET_SUCCESS != postScanStatus);
1373:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (1u != CapSense_TOTAL_WIDGETS) */
1374:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 748              		.loc 1 1374 0
 749              		@ sp needed
 750 005e 10BD     		pop	{r4, pc}
 751              	.L78:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 39


 752              		.align	2
 753              	.L77:
 754 0060 00000000 		.word	.LANCHOR0
 755 0064 00000000 		.word	CapSense_dsRam
 756              		.cfi_endproc
 757              	.LFE12:
 758              		.size	CapSense_SsPostAllWidgetsScan, .-CapSense_SsPostAllWidgetsScan
 759              		.section	.text.CapSense_SsIsrInitialize,"ax",%progbits
 760              		.align	1
 761              		.global	CapSense_SsIsrInitialize
 762              		.code	16
 763              		.thumb_func
 764              		.type	CapSense_SsIsrInitialize, %function
 765              	CapSense_SsIsrInitialize:
 766              	.LFB13:
1375:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1376:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1377:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1378:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsIsrInitialize
1379:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1380:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1381:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1382:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Enables and initializes for the function pointer for a callback for the ISR.
1383:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1384:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1385:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The "address" is a special type cyisraddress defined by Cylib. This function
1386:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is used by Component APIs and should not be used by an application program for
1387:Generated_Source\PSoC4/CapSense_Sensing.c **** *  proper working of the Component.
1388:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1389:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param address
1390:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The address of the function to be called when interrupt is fired.
1391:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1392:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1393:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsIsrInitialize(cyisraddress address)
1394:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 767              		.loc 1 1394 0
 768              		.cfi_startproc
 769              		@ args = 0, pretend = 0, frame = 0
 770              		@ frame_needed = 0, uses_anonymous_args = 0
 771              	.LVL72:
 772 0000 10B5     		push	{r4, lr}
 773              		.cfi_def_cfa_offset 8
 774              		.cfi_offset 4, -8
 775              		.cfi_offset 14, -4
1395:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_ISR_StartEx(address);
 776              		.loc 1 1395 0
 777 0002 FFF7FEFF 		bl	CapSense_ISR_StartEx
 778              	.LVL73:
1396:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 779              		.loc 1 1396 0
 780              		@ sp needed
 781 0006 10BD     		pop	{r4, pc}
 782              		.cfi_endproc
 783              	.LFE13:
 784              		.size	CapSense_SsIsrInitialize, .-CapSense_SsIsrInitialize
 785              		.section	.text.CapSense_SsSetModClkClockDivider,"ax",%progbits
 786              		.align	1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 40


 787              		.global	CapSense_SsSetModClkClockDivider
 788              		.code	16
 789              		.thumb_func
 790              		.type	CapSense_SsSetModClkClockDivider, %function
 791              	CapSense_SsSetModClkClockDivider:
 792              	.LFB14:
1397:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1398:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1399:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1400:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetModClkClockDivider
1401:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1402:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1403:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1404:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for the modulator clock and then starts
1405:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the modulator clock.
1406:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1407:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1408:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1409:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1410:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
1411:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1412:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param modClk
1413:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The divider value for the modulator clock.
1414:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1415:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1416:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetModClkClockDivider(uint32 modClk)
1417:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 793              		.loc 1 1417 0
 794              		.cfi_startproc
 795              		@ args = 0, pretend = 0, frame = 0
 796              		@ frame_needed = 0, uses_anonymous_args = 0
 797              		@ link register save eliminated.
 798              	.LVL74:
1418:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1419:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Stop modulator clock */
1420:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
 799              		.loc 1 1420 0
 800 0000 064A     		ldr	r2, .L83
 801 0002 074B     		ldr	r3, .L83+4
1421:Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_ModClk__DIV_ID <<
1422:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CapSense_MODCLK_CMD_DIV_SHIFT)|
1423:Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_MODCLK_CMD_DISABLE_MASK));
1424:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1425:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1426:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Set divider value for sense modClk.
1427:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from modClk because Divider register value 0 corresponds
1428:Generated_Source\PSoC4/CapSense_Sensing.c ****      * to dividing by 1.
1429:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1430:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_DIV_PTR, ((modClk - 1u) << 8u));
 802              		.loc 1 1430 0
 803 0004 0138     		subs	r0, r0, #1
 804              	.LVL75:
1420:Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_ModClk__DIV_ID <<
 805              		.loc 1 1420 0
 806 0006 1A60     		str	r2, [r3]
 807              		.loc 1 1430 0
 808 0008 064A     		ldr	r2, .L83+8
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 41


 809 000a 0002     		lsls	r0, r0, #8
 810              	.LVL76:
 811 000c 1060     		str	r0, [r2]
 812              	.L81:
1431:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1432:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Check whether previous modulator clock start command has finished. */
1433:Generated_Source\PSoC4/CapSense_Sensing.c ****     while(0u != (CY_GET_REG32(CapSense_MODCLK_CMD_PTR) & CapSense_MODCLK_CMD_ENABLE_MASK))
 813              		.loc 1 1433 0 discriminator 1
 814 000e 1A68     		ldr	r2, [r3]
 815 0010 002A     		cmp	r2, #0
 816 0012 FCDB     		blt	.L81
1434:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1435:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Wait until previous modulator clock start command has finished */
1436:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1437:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1438:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Start modulator clock, aligned to HFCLK */
1439:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
 817              		.loc 1 1439 0
 818 0014 044A     		ldr	r2, .L83+12
 819 0016 024B     		ldr	r3, .L83+4
1440:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(((uint32)CapSense_ModClk__DIV_ID << CapSense_MODCLK_CMD_DIV_SHIFT) |
1441:Generated_Source\PSoC4/CapSense_Sensing.c ****                   ((uint32)CapSense_ModClk__PA_DIV_ID << CapSense_MODCLK_CMD_PA_DIV_SHIFT) |
1442:Generated_Source\PSoC4/CapSense_Sensing.c ****                   CapSense_MODCLK_CMD_ENABLE_MASK));
1443:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
1444:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newRegValue;
1445:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1446:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Clear bit to disable ModClk clock. */
1447:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1448:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CY_GET_REG32(CapSense_MODCLK_CMD_PTR) &
1449:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(~CapSense_ModClk__ENABLE_MASK));
1450:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1451:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1452:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Update ModClk clock divider.
1453:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from modClk because Divider register value has range (0-65535).
1454:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1455:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_MODCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_ModClk__DIVIDE
1456:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue |= (modClk - 1u);
1457:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_DIV_PTR, newRegValue);
1458:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1459:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Set bit to enable ModClk clock. */
1460:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1461:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CY_GET_REG32(CapSense_MODCLK_CMD_PTR) |
1462:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ModClk__ENABLE_MASK);
1463:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) */
1464:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 820              		.loc 1 1464 0
 821              		@ sp needed
1439:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(((uint32)CapSense_ModClk__DIV_ID << CapSense_MODCLK_CMD_DIV_SHIFT) |
 822              		.loc 1 1439 0
 823 0018 1A60     		str	r2, [r3]
 824              		.loc 1 1464 0
 825 001a 7047     		bx	lr
 826              	.L84:
 827              		.align	2
 828              	.L83:
 829 001c 40000040 		.word	1073741888
 830 0020 00000140 		.word	1073807360
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 42


 831 0024 00030140 		.word	1073808128
 832 0028 40FF0080 		.word	-2147418304
 833              		.cfi_endproc
 834              	.LFE14:
 835              		.size	CapSense_SsSetModClkClockDivider, .-CapSense_SsSetModClkClockDivider
 836              		.section	.text.CapSense_SsSetSnsClockDivider,"ax",%progbits
 837              		.align	1
 838              		.global	CapSense_SsSetSnsClockDivider
 839              		.code	16
 840              		.thumb_func
 841              		.type	CapSense_SsSetSnsClockDivider, %function
 842              	CapSense_SsSetSnsClockDivider:
 843              	.LFB15:
1465:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1466:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1467:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1468:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetSnsClockDivider
1469:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1470:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1471:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1472:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for the sense clock and then starts
1473:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the sense clock.
1474:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1475:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1476:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1477:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1478:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
1479:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1480:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
1481:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClk The divider value for the sense clock.
1482:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1483:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1484:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetSnsClockDivider(uint32 snsClk)
1485:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 844              		.loc 1 1485 0
 845              		.cfi_startproc
 846              		@ args = 0, pretend = 0, frame = 0
 847              		@ frame_needed = 0, uses_anonymous_args = 0
 848              		@ link register save eliminated.
 849              	.LVL77:
1486:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
1487:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newRegValue;
1488:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1489:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1490:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Set divider value for sense clock.
1491:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from snsClk because SENSE_DIV value 0 corresponds
1492:Generated_Source\PSoC4/CapSense_Sensing.c ****      * to dividing by 1.
1493:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1494:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_SENSE_PERIOD_PTR);
 850              		.loc 1 1494 0
 851 0000 034A     		ldr	r2, .L86
1495:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue &= (uint32)(~CapSense_SENSE_PERIOD_SENSE_DIV_MASK);
1496:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue |= snsClk - 1u;
 852              		.loc 1 1496 0
 853 0002 0138     		subs	r0, r0, #1
 854              	.LVL78:
1494:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue &= (uint32)(~CapSense_SENSE_PERIOD_SENSE_DIV_MASK);
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 43


 855              		.loc 1 1494 0
 856 0004 1368     		ldr	r3, [r2]
 857              	.LVL79:
1497:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_SENSE_PERIOD_PTR, newRegValue);
1498:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
1499:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1500:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Stop sense clock clock   */
1501:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1502:Generated_Source\PSoC4/CapSense_Sensing.c ****                      ((uint32)CapSense_SnsClk__DIV_ID <<
1503:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CapSense_SNSCLK_CMD_DIV_SHIFT)|
1504:Generated_Source\PSoC4/CapSense_Sensing.c ****                      ((uint32)CapSense_SNSCLK_CMD_DISABLE_MASK));
1505:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1506:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1507:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Set divider value for sense clock.
1508:Generated_Source\PSoC4/CapSense_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value 0 corresponds
1509:Generated_Source\PSoC4/CapSense_Sensing.c ****          * to dividing by 1.
1510:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1511:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_DIV_PTR, ((snsClk - 1u) << 8u));
1512:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1513:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Check whether previous sense clock start command has finished. */
1514:Generated_Source\PSoC4/CapSense_Sensing.c ****         while(0u != (CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) & CapSense_SNSCLK_CMD_ENABLE_MASK))
1515:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1516:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Wait until previous sense clock start command has finished. */
1517:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1518:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1519:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Start sense clock aligned to previously started modulator clock. */
1520:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1521:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (uint32)(((uint32)CapSense_SnsClk__DIV_ID << CapSense_SNSCLK_CMD_DIV_SHIFT) |
1522:Generated_Source\PSoC4/CapSense_Sensing.c ****                       ((uint32)CapSense_ModClk__PA_DIV_ID << CapSense_SNSCLK_CMD_PA_DIV_SHIFT) |
1523:Generated_Source\PSoC4/CapSense_Sensing.c ****                       CapSense_SNSCLK_CMD_ENABLE_MASK));
1524:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
1525:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
1526:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1527:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Clear bit to disable SnsClk clock. */
1528:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1529:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) &
1530:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (uint32)(~(uint32)CapSense_SnsClk__ENABLE_MASK));
1531:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1532:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1533:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Update snsClk clock divider.
1534:Generated_Source\PSoC4/CapSense_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value has range (0-65535).
1535:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1536:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_SNSCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_SnsClk__DI
1537:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= (snsClk - 1u);
1538:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_DIV_PTR, newRegValue);
1539:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1540:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Set bit to enable SnsClk clock. */
1541:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1542:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) |
1543:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_SnsClk__ENABLE_MASK);
1544:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) */
1545:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1546:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 858              		.loc 1 1546 0
 859              		@ sp needed
1495:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue |= snsClk - 1u;
 860              		.loc 1 1495 0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 44


 861 0006 1B0B     		lsrs	r3, r3, #12
 862              	.LVL80:
 863 0008 1B03     		lsls	r3, r3, #12
 864              	.LVL81:
1496:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_SENSE_PERIOD_PTR, newRegValue);
 865              		.loc 1 1496 0
 866 000a 1843     		orrs	r0, r3
 867              	.LVL82:
1497:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_SENSE_PERIOD_PTR, newRegValue);
 868              		.loc 1 1497 0
 869 000c 1060     		str	r0, [r2]
 870              		.loc 1 1546 0
 871 000e 7047     		bx	lr
 872              	.L87:
 873              		.align	2
 874              	.L86:
 875 0010 00020B40 		.word	1074463232
 876              		.cfi_endproc
 877              	.LFE15:
 878              		.size	CapSense_SsSetSnsClockDivider, .-CapSense_SsSetSnsClockDivider
 879              		.section	.text.CapSense_SsSetClockDividers,"ax",%progbits
 880              		.align	1
 881              		.global	CapSense_SsSetClockDividers
 882              		.code	16
 883              		.thumb_func
 884              		.type	CapSense_SsSetClockDividers, %function
 885              	CapSense_SsSetClockDividers:
 886              	.LFB16:
1547:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1548:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1549:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1550:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetClockDividers
1551:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1552:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1553:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1554:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for sense and modulator clocks and then starts
1555:Generated_Source\PSoC4/CapSense_Sensing.c **** *  a modulator clock-phase aligned to HFCLK and sense clock-phase aligned to
1556:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the modulator clock.
1557:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1558:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1559:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1560:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1561:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
1562:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1563:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
1564:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClk The divider value for the sense clock.
1565:Generated_Source\PSoC4/CapSense_Sensing.c **** *  modClk The divider value for the modulator clock.
1566:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1567:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1568:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetClockDividers(uint32 snsClk, uint32 modClk)
1569:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 887              		.loc 1 1569 0
 888              		.cfi_startproc
 889              		@ args = 0, pretend = 0, frame = 0
 890              		@ frame_needed = 0, uses_anonymous_args = 0
 891              	.LVL83:
 892 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 45


 893              		.cfi_def_cfa_offset 8
 894              		.cfi_offset 4, -8
 895              		.cfi_offset 14, -4
 896              		.loc 1 1569 0
 897 0002 0400     		movs	r4, r0
1570:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Configure Mod clock */
1571:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetModClkClockDivider(modClk);
 898              		.loc 1 1571 0
 899 0004 0800     		movs	r0, r1
 900              	.LVL84:
 901 0006 FFF7FEFF 		bl	CapSense_SsSetModClkClockDivider
 902              	.LVL85:
1572:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1573:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Configure Sns clock */
1574:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetSnsClockDivider(snsClk);
 903              		.loc 1 1574 0
 904 000a 2000     		movs	r0, r4
 905 000c FFF7FEFF 		bl	CapSense_SsSetSnsClockDivider
 906              	.LVL86:
1575:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 907              		.loc 1 1575 0
 908              		@ sp needed
 909              	.LVL87:
 910 0010 10BD     		pop	{r4, pc}
 911              		.cfi_endproc
 912              	.LFE16:
 913              		.size	CapSense_SsSetClockDividers, .-CapSense_SsSetClockDividers
 914              		.section	.text.CapSense_CalibrateWidget,"ax",%progbits
 915              		.align	1
 916              		.global	CapSense_CalibrateWidget
 917              		.code	16
 918              		.thumb_func
 919              		.type	CapSense_CalibrateWidget, %function
 920              	CapSense_CalibrateWidget:
 921              	.LFB17:
1576:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1577:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1578:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ANYMODE_AUTOCAL)
1579:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1580:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_CalibrateWidget
1581:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1582:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1583:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1584:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the sensors in the specified widget to the default
1585:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target, this function detects the sensing method used by the
1586:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  widget prior to calibration.
1587:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1588:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1589:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function performs exactly the same tasks as
1590:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense_CalibrateAllWidgets, but only for a specified widget.
1591:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function detects the sensing method used by the widgets and uses
1592:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the Enable compensation IDAC parameter.
1593:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1594:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1595:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1596:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1597:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_C_LOW_LEVEL
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 46


1598:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1599:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  auto-calibration parameter is enabled.
1600:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1601:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1602:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the ISX Enable auto-calibration parameter
1603:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  is enabled.
1604:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1605:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1606:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param widgetId
1607:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID number of the widget to calibrate its raw count.
1608:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  A macro for the widget ID can be found in the
1609:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense Configuration header file defined as
1610:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense_<WidgetName>_WDGT_ID.
1611:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1612:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
1613:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the specified widget calibration:
1614:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1615:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_PARAM - The input parameter is invalid.
1616:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1617:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    operate as expected.
1618:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1619:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1620:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_CalibrateWidget(uint32 widgetId)
1621:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 922              		.loc 1 1621 0
 923              		.cfi_startproc
 924              		@ args = 0, pretend = 0, frame = 0
 925              		@ frame_needed = 0, uses_anonymous_args = 0
 926              	.LVL88:
 927 0000 10B5     		push	{r4, lr}
 928              		.cfi_def_cfa_offset 8
 929              		.cfi_offset 4, -8
 930              		.cfi_offset 14, -4
1622:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1623:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1624:Generated_Source\PSoC4/CapSense_Sensing.c ****         do
1625:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1626:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_TOTAL_WIDGETS <= widgetId)
 931              		.loc 1 1626 0
 932 0002 0428     		cmp	r0, #4
 933 0004 01D9     		bls	.L90
 934 0006 0120     		movs	r0, #1
 935              	.LVL89:
 936 0008 02E0     		b	.L92
 937              	.LVL90:
 938              	.L90:
 939              	.LBB10:
 940              	.LBB11:
1627:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1628:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CYRET_BAD_PARAM;
1629:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1630:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1631:Generated_Source\PSoC4/CapSense_Sensing.c ****             /*
1632:Generated_Source\PSoC4/CapSense_Sensing.c ****              *  Check if widget id is valid, specified widget did not
1633:Generated_Source\PSoC4/CapSense_Sensing.c ****              *  detect any faults conditions if BIST is enabled.
1634:Generated_Source\PSoC4/CapSense_Sensing.c ****              */
1635:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 47


1636:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (0u != CapSense_GET_WIDGET_EN_STATUS(widgetId))
1637:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1638:Generated_Source\PSoC4/CapSense_Sensing.c ****                     calibrateStatus = CYRET_SUCCESS;
1639:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1640:Generated_Source\PSoC4/CapSense_Sensing.c ****                 else
1641:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1642:Generated_Source\PSoC4/CapSense_Sensing.c ****                     calibrateStatus = CYRET_INVALID_STATE;
1643:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1644:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif  /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1645:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1646:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS != calibrateStatus)
1647:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1648:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Exit from the loop because of a fail */
1649:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
1650:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1651:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1652:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If both CSD and CSX are enabled, calibrate widget using sensing method */
1653:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_MANY_WIDGET_METHODS_EN)
1654:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Check widget sensing method and call appropriate APIs */
1655:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_ISX_IDAC_AUTOCAL_EN)
1656:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_ISX_E ==
1657:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
1658:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1659:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calibrate CSX widget */
1660:Generated_Source\PSoC4/CapSense_Sensing.c ****                        CapSense_ISXCalibrateWidget(widgetId, CapSense_ISX_RAWCOUNT_CAL_LEVEL);
1661:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1662:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (CapSense_ENABLE == CapSense_ISX_IDAC_AUTOCAL_EN) */
1663:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1664:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Check widget sensing method and call appropriate APIs */
1665:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSX_IDAC_AUTOCAL_EN)
1666:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSX_E ==
1667:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
1668:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1669:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calibrate CSX widget */
1670:Generated_Source\PSoC4/CapSense_Sensing.c ****                        calibrateStatus = CapSense_CSXCalibrateWidget(widgetId, CapSense_CSX_RAWCOUN
1671:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1672:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (CapSense_ENABLE == CapSense_CSX_IDAC_AUTOCAL_EN) */
1673:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1674:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN)
1675:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSD_E ==
1676:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
1677:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1678:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calibrate CSD widget */
1679:Generated_Source\PSoC4/CapSense_Sensing.c ****                         calibrateStatus = CapSense_CSDCalibrateWidget(widgetId, CapSense_CSD_RAWCOU
1680:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1681:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN) */
1682:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1683:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only CSD is enabled, calibrate CSD sensor */
1684:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_CSD_EN)
1685:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CapSense_CSDCalibrateWidget(widgetId, CapSense_CSD_RAWCOUNT_CAL_L
 941              		.loc 1 1685 0
 942 000a 5521     		movs	r1, #85
 943 000c FFF7FEFF 		bl	CapSense_CSDCalibrateWidget
 944              	.LVL91:
 945              	.L92:
 946              	.LBE11:
 947              	.LBE10:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 48


1686:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1687:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only CSX is enabled, call CSX scan */
1688:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_CSX_EN)
1689:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CapSense_CSXCalibrateWidget(widgetId, CapSense_CSX_RAWCOUNT_CAL_L
1690:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1691:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only ISX is enabled, call ISX scan */
1692:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_ISX_EN)
1693:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXCalibrateWidget(widgetId, CapSense_ISX_RAWCOUNT_CAL_LEVEL);
1694:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1695:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
1696:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CYRET_UNKNOWN;
1697:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
1698:Generated_Source\PSoC4/CapSense_Sensing.c ****         } while (0u);
1699:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1700:Generated_Source\PSoC4/CapSense_Sensing.c ****         return calibrateStatus;
1701:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 948              		.loc 1 1701 0
 949              		@ sp needed
 950 0010 10BD     		pop	{r4, pc}
 951              		.cfi_endproc
 952              	.LFE17:
 953              		.size	CapSense_CalibrateWidget, .-CapSense_CalibrateWidget
 954              		.section	.text.CapSense_CalibrateAllWidgets,"ax",%progbits
 955              		.align	1
 956              		.global	CapSense_CalibrateAllWidgets
 957              		.code	16
 958              		.thumb_func
 959              		.type	CapSense_CalibrateAllWidgets, %function
 960              	CapSense_CalibrateAllWidgets:
 961              	.LFB18:
1702:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1703:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1704:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1705:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_CalibrateAllWidgets
1706:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1707:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1708:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1709:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
1710:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target, this function detects the sensing method used by the widgets
1711:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  prior to calibration.
1712:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1713:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1714:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
1715:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target value. This function detects the sensing method used by the widgets
1716:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and regards the Enable compensation IDAC parameter.
1717:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1718:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1719:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1720:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1721:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \cond SECTION_C_LOW_LEVEL
1722:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1723:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  auto-calibration parameter is enabled.
1724:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endcond
1725:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1726:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the ISX Enable Auto-calibration parameter
1727:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  is enabled.
1728:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 49


1729:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1730:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
1731:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the calibration process:
1732:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1733:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1734:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    operate as expected.
1735:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1736:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1737:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_CalibrateAllWidgets(void)
1738:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 962              		.loc 1 1738 0
 963              		.cfi_startproc
 964              		@ args = 0, pretend = 0, frame = 0
 965              		@ frame_needed = 0, uses_anonymous_args = 0
 966              	.LVL92:
 967 0000 70B5     		push	{r4, r5, r6, lr}
 968              		.cfi_def_cfa_offset 16
 969              		.cfi_offset 4, -16
 970              		.cfi_offset 5, -12
 971              		.cfi_offset 6, -8
 972              		.cfi_offset 14, -4
1739:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1740:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
1741:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1742:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
 973              		.loc 1 1742 0
 974 0002 0024     		movs	r4, #0
1739:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 975              		.loc 1 1739 0
 976 0004 2500     		movs	r5, r4
 977              	.LVL93:
 978              	.L94:
1743:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1744:Generated_Source\PSoC4/CapSense_Sensing.c ****             calibrateStatus |= CapSense_CalibrateWidget(wdgtIndex);
 979              		.loc 1 1744 0 discriminator 3
 980 0006 2000     		movs	r0, r4
 981 0008 FFF7FEFF 		bl	CapSense_CalibrateWidget
 982              	.LVL94:
1742:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 983              		.loc 1 1742 0 discriminator 3
 984 000c 0134     		adds	r4, r4, #1
 985              	.LVL95:
 986              		.loc 1 1744 0 discriminator 3
 987 000e 0543     		orrs	r5, r0
 988              	.LVL96:
1742:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 989              		.loc 1 1742 0 discriminator 3
 990 0010 052C     		cmp	r4, #5
 991 0012 F8D1     		bne	.L94
1745:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1746:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1747:Generated_Source\PSoC4/CapSense_Sensing.c ****         return calibrateStatus;
1748:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 992              		.loc 1 1748 0
 993 0014 2800     		movs	r0, r5
 994              		@ sp needed
 995              	.LVL97:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 50


 996              	.LVL98:
 997 0016 70BD     		pop	{r4, r5, r6, pc}
 998              		.cfi_endproc
 999              	.LFE18:
 1000              		.size	CapSense_CalibrateAllWidgets, .-CapSense_CalibrateAllWidgets
 1001              		.section	.text.CapSense_SsCSDGetColSnsClkDivider,"ax",%progbits
 1002              		.align	1
 1003              		.global	CapSense_SsCSDGetColSnsClkDivider
 1004              		.code	16
 1005              		.thumb_func
 1006              		.type	CapSense_SsCSDGetColSnsClkDivider, %function
 1007              	CapSense_SsCSDGetColSnsClkDivider:
 1008              	.LFB23:
1749:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ANYMODE_AUTOCAL) */
1750:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1751:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1752:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)
1753:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1754:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsAutoTuneWidget
1755:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1756:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1757:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1758:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the parameters auto-tuning for the optimal CapSense
1759:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  operation for a desired widget.
1760:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1761:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1762:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the following:
1763:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calibrates Modulator and Compensation IDACs.
1764:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Tunes the Sense Clock optimal value to get a Sense Clock period greater than
1765:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    2*5*R*Cp.
1766:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calculates the resolution for the optimal finger capacitance.
1767:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1768:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param widgetId
1769:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID number of a desired widget.
1770:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  A macro for the widget ID can be found in the
1771:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense Configuration header file defined as
1772:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense_<WidgetName>_WDGT_ID.
1773:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1774:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
1775:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the operation:
1776:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Zero     - All the widgets are auto-tuned successfully.
1777:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Non-zero - Auto-tuning failed for any widget.
1778:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1779:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1780:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_SsAutoTuneWidget(uint32 widgetId)
1781:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1782:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
1783:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1784:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 snsIndex;
1785:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 inputSnsClk;
1786:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 minSnsClkDiv;
1787:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 minSnsClkDivTmp;
1788:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1789:Generated_Source\PSoC4/CapSense_Sensing.c ****         AUTO_TUNE_CONFIG_TYPE autoTuneConfig;
1790:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1791:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 maxRaw = 0u;
1792:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 maxCp = 0u;
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 51


1793:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 maxIdacComp = 0u;
1794:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1795:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1796:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 maxCpSnsId = 0u;
1797:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 maxCpRowSnsId = 0u;
1798:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
1799:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1800:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_FLASH_WD_STRUCT const *ptrFlashWidget = &CapSense_dsFlash.wdgtArray[widgetId];
1801:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_RAM_WD_BASE_STRUCT *ptrRamWidget = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWidget->
1802:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_RAM_SNS_STRUCT *ptrRamSensor = ptrFlashWidget->ptr2SnsRam;
1803:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1804:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Find input of sensor clock frequency */
1805:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSDV2)
1806:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are chained (Fourth-generation HW block). Flip flop is not available */
1807:Generated_Source\PSoC4/CapSense_Sensing.c ****             inputSnsClk = ((uint32)CYDEV_BCLK__HFCLK__KHZ / (uint32)CapSense_dsRam.modCsdClk);
1808:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1809:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Minimum value of SnaClk divider that is allowed for all Fourth-generation
1810:Generated_Source\PSoC4/CapSense_Sensing.c ****              * CSD HW block based devices.
1811:Generated_Source\PSoC4/CapSense_Sensing.c ****             */
1812:Generated_Source\PSoC4/CapSense_Sensing.c ****             minSnsClkDiv = CapSense_MIN_SNS_CLK_DIVIDER;
1813:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1814:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are not chained */
1815:Generated_Source\PSoC4/CapSense_Sensing.c ****             inputSnsClk = CYDEV_BCLK__HFCLK__KHZ >> CapSense_FLIP_FLOP_DIV;
1816:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1817:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Minimum value of SnaClk divider that is allowed for PSoC 4100 and PSoC 4200
1818:Generated_Source\PSoC4/CapSense_Sensing.c ****                device families.
1819:Generated_Source\PSoC4/CapSense_Sensing.c ****             */
1820:Generated_Source\PSoC4/CapSense_Sensing.c ****             minSnsClkDiv = CapSense_dsRam.modCsdClk;
1821:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
1822:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are chained (PSoC 4100, PSoC 4200) */
1823:Generated_Source\PSoC4/CapSense_Sensing.c ****             inputSnsClk = (CYDEV_BCLK__HFCLK__KHZ / CapSense_dsRam.modCsdClk) >> CapSense_FLIP_FLOP
1824:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1825:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Minimum value of SnaClk divider that is allowed for all Fourth-generation
1826:Generated_Source\PSoC4/CapSense_Sensing.c ****              * CSD HW block based device except PSoC 4100 and PSoC 4200 device families.
1827:Generated_Source\PSoC4/CapSense_Sensing.c ****             */
1828:Generated_Source\PSoC4/CapSense_Sensing.c ****             minSnsClkDiv = CapSense_MIN_SNS_CLK_DIVIDER;
1829:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1830:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1831:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Minimum value of SnsClk divider required to ensure the CSD HW block
1832:Generated_Source\PSoC4/CapSense_Sensing.c ****          * operation in allowed frequency range.
1833:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1834:Generated_Source\PSoC4/CapSense_Sensing.c ****         minSnsClkDivTmp = inputSnsClk * CapSense_AUTOTUNE_CAL_UNITS;
1835:Generated_Source\PSoC4/CapSense_Sensing.c ****         minSnsClkDivTmp /= CapSense_CSD_SNS_FREQ_KHZ_MAX;
1836:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1837:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (minSnsClkDiv < minSnsClkDivTmp)
1838:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1839:Generated_Source\PSoC4/CapSense_Sensing.c ****             minSnsClkDiv = minSnsClkDivTmp;
1840:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1841:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1842:Generated_Source\PSoC4/CapSense_Sensing.c ****         minSnsClkDiv = (minSnsClkDiv + (CapSense_AUTOTUNE_CAL_UNITS - 1u)) / CapSense_AUTOTUNE_CAL_
1843:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1844:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Make divider even */
1845:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (0u != (minSnsClkDiv & 0x01u))
1846:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1847:Generated_Source\PSoC4/CapSense_Sensing.c ****             minSnsClkDiv++;
1848:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1849:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 52


1850:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Initialize auto-tuning configuration structure */
1851:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.snsClkInputClock = (uint16)inputSnsClk;
1852:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.snsClkConstantR = CapSense_CSD_SNSCLK_R_CONST;
1853:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.vRef = CapSense_CSD_VREF_MV;
1854:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.fingerCap = ptrRamWidget->fingerCap;
1855:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.sigPFC = &ptrRamWidget->sigPFC;
1856:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1857:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1858:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #1:
1859:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - performing the first calibration at fixed settings
1860:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting maximum sensor Cp
1861:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting sense clock frequency based on Cp
1862:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1863:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1864:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrRamWidget->resolution = CapSense_AUTOTUNE_CALIBRATION_RESOLUTION;
1865:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1866:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrRamWidget->snsClk = (uint16)(inputSnsClk / CapSense_AUTOTUNE_CALIBRATION_FREQ_KHZ);
1867:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrRamWidget->snsClkSource = (uint8)CapSense_CLK_SOURCE_DIRECT;
1868:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1869:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1870:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrRamWidget->rowSnsClk = (uint16)(inputSnsClk / CapSense_AUTOTUNE_CALIBRATION_FREQ_KHZ
1871:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrRamWidget->rowSnsClkSource = (uint8)CapSense_CLK_SOURCE_DIRECT;
1872:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
1873:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1874:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calibrate CSD widget to the default calibration target */
1875:Generated_Source\PSoC4/CapSense_Sensing.c ****         (void)CapSense_CSDCalibrateWidget(widgetId, CapSense_AUTOTUNE_CAL_LEVEL);
1876:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1877:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Find raw count and IDAC of a sensor with maximum Cp */
1878:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (snsIndex = 0u; snsIndex < ptrFlashWidget->numCols; snsIndex++)
1879:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1880:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
1881:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (maxIdacComp < ptrRamSensor->idacComp[0u])
1882:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1883:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1884:Generated_Source\PSoC4/CapSense_Sensing.c ****                         maxCpSnsId = snsIndex;
1885:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif
1886:Generated_Source\PSoC4/CapSense_Sensing.c ****                     maxIdacComp = ptrRamSensor->idacComp[0u];
1887:Generated_Source\PSoC4/CapSense_Sensing.c ****                     maxRaw = ptrRamSensor->raw[0u];
1888:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1889:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
1890:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (maxRaw < ptrRamSensor->raw[0u])
1891:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1892:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1893:Generated_Source\PSoC4/CapSense_Sensing.c ****                         maxCpSnsId = snsIndex;
1894:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif
1895:Generated_Source\PSoC4/CapSense_Sensing.c ****                     maxRaw = ptrRamSensor->raw[0u];
1896:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1897:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
1898:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrRamSensor++;
1899:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1900:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1901:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Update auto-tuning configuration structure */
1902:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacMod = ptrRamWidget->idacMod[0u];
1903:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacComp = (uint8)maxIdacComp;
1904:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacGain = CapSense_idacGainTable[ptrRamWidget->idacGainIndex].gainValue;
1905:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.ptrSenseClk = &ptrRamWidget->snsClk;
1906:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.calTarget = (uint16)((maxRaw * CapSense_AUTOTUNE_CAL_UNITS) /
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 53


1907:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ((uint32)(0x01uL << CapSense_AUTOTUNE_CALIBRATION_RESOLUTION) - 1u));
1908:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1909:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Find sensor Cp and optimum sense clock value */
1910:Generated_Source\PSoC4/CapSense_Sensing.c ****         maxCp = SmartSense_TunePrescalers(&autoTuneConfig);
1911:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.sensorCap = maxCp;
1912:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1913:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Increase sensor clock divider to valid value */
1914:Generated_Source\PSoC4/CapSense_Sensing.c ****         while(ptrRamWidget->snsClk < minSnsClkDiv)
1915:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1916:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrRamWidget->snsClk <<= 1u;
1917:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1918:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1919:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Do the same for row for touchpad or matrix buttons widgets */
1920:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1921:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((CapSense_WD_TOUCHPAD_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)) ||
1922:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_WD_MATRIX_BUTTON_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)))
1923:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1924:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Find a sensor with maximum Cp */
1925:Generated_Source\PSoC4/CapSense_Sensing.c ****                 maxRaw = 0u;
1926:Generated_Source\PSoC4/CapSense_Sensing.c ****                 maxIdacComp = 0u;
1927:Generated_Source\PSoC4/CapSense_Sensing.c ****                 for (snsIndex = ptrFlashWidget->numCols; snsIndex < ptrFlashWidget->totalNumSns; sn
1928:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1929:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
1930:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (maxIdacComp < ptrRamSensor->idacComp[0u])
1931:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1932:Generated_Source\PSoC4/CapSense_Sensing.c ****                             maxCpRowSnsId = snsIndex;
1933:Generated_Source\PSoC4/CapSense_Sensing.c ****                             maxIdacComp = ptrRamSensor->idacComp[0u];
1934:Generated_Source\PSoC4/CapSense_Sensing.c ****                             maxRaw = ptrRamSensor->raw[0u];
1935:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1936:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
1937:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (maxRaw < ptrRamSensor->raw[0u])
1938:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1939:Generated_Source\PSoC4/CapSense_Sensing.c ****                             maxCpRowSnsId = snsIndex;
1940:Generated_Source\PSoC4/CapSense_Sensing.c ****                             maxRaw = ptrRamSensor->raw[0u];
1941:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1942:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif
1943:Generated_Source\PSoC4/CapSense_Sensing.c ****                     ptrRamSensor++;
1944:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1945:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1946:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Configure auto-tuning configuration structure */
1947:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.iDacMod = ptrRamWidget->rowIdacMod[0u];
1948:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.iDacComp = (uint8)maxIdacComp;
1949:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.ptrSenseClk = &ptrRamWidget->rowSnsClk;
1950:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.calTarget = (uint16)((maxRaw * CapSense_AUTOTUNE_CAL_UNITS) /
1951:Generated_Source\PSoC4/CapSense_Sensing.c ****                         ((uint32)(0x01uL << CapSense_AUTOTUNE_CALIBRATION_RESOLUTION) - 1u));
1952:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1953:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Find correct sense clock value */
1954:Generated_Source\PSoC4/CapSense_Sensing.c ****                 maxCp = SmartSense_TunePrescalers(&autoTuneConfig);
1955:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1956:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Save maximum sensor Cp and corresponding sensor Id */
1957:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (autoTuneConfig.sensorCap < maxCp)
1958:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1959:Generated_Source\PSoC4/CapSense_Sensing.c ****                     autoTuneConfig.sensorCap = maxCp;
1960:Generated_Source\PSoC4/CapSense_Sensing.c ****                     maxCpSnsId = maxCpRowSnsId;
1961:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1962:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1963:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Increase sensor clock divider to valid value */
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 54


1964:Generated_Source\PSoC4/CapSense_Sensing.c ****                 while(ptrRamWidget->rowSnsClk < minSnsClkDiv)
1965:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1966:Generated_Source\PSoC4/CapSense_Sensing.c ****                     ptrRamWidget->rowSnsClk <<= 1u;
1967:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1968:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1969:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1970:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1971:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Check tuning results */
1972:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_AUTOTUNE_CP_MAX < maxCp)
1973:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1974:Generated_Source\PSoC4/CapSense_Sensing.c ****             autoTuneStatus = CYRET_BAD_DATA;
1975:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1976:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1977:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1978:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #2:
1979:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - repeating calibration with new sense clock frequency
1980:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting resolution
1981:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1982:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1983:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calibrate CSD widget to the default calibration target with newly defined sense frequenc
1984:Generated_Source\PSoC4/CapSense_Sensing.c ****         (void)CapSense_CSDCalibrateWidget(widgetId, CapSense_AUTOTUNE_CAL_LEVEL);
1985:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1986:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacGain = CapSense_idacGainTable[ptrRamWidget->idacGainIndex].gainValue;
1987:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacMod = ptrRamWidget->idacMod[0u];
1988:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.ptrSenseClk = &ptrRamWidget->snsClk;
1989:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1990:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1991:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((CapSense_WD_TOUCHPAD_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)) ||
1992:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_WD_MATRIX_BUTTON_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)))
1993:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1994:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (maxCpSnsId >= ptrFlashWidget->numCols)
1995:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1996:Generated_Source\PSoC4/CapSense_Sensing.c ****                     autoTuneConfig.iDacMod = ptrRamWidget->rowIdacMod[0u];
1997:Generated_Source\PSoC4/CapSense_Sensing.c ****                     autoTuneConfig.ptrSenseClk = &ptrRamWidget->rowSnsClk;
1998:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1999:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2000:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2001:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2002:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Find resolution */
2003:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrRamWidget->resolution = SmartSense_TuneSensitivity(&autoTuneConfig);
2004:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2005:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
2006:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #3:
2007:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - selecting a widget clock source if AUTO
2008:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - repeating calibration with found clock frequency, resolution and clock source
2009:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - updating sensitivity
2010:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
2011:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2012:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Tune widget sensitivity */
2013:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSetWidgetSenseClkSrc(widgetId, ptrRamWidget);
2014:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2015:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calibrate CSD widget to the default calibration target with newly defined resolution */
2016:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneStatus |= CapSense_CSDCalibrateWidget(widgetId, CapSense_AUTOTUNE_CAL_LEVEL);
2017:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2018:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN)
2019:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_DsUpdateWidgetCrc(widgetId);
2020:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN) */
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 55


2021:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2022:Generated_Source\PSoC4/CapSense_Sensing.c ****         return autoTuneStatus;
2023:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2024:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2025:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2026:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2027:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsAutoTune
2028:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2029:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2030:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2031:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the parameters auto-tuning for the optimal CapSense
2032:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  operation.
2033:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2034:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2035:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the following:
2036:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calibrates Modulator and Compensation IDACs.
2037:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Tunes the Sense Clock optimal value to get a Sense Clock period greater than
2038:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    2*5*R*Cp.
2039:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calculates the resolution for the optimal finger capacitance.
2040:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2041:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
2042:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the operation:
2043:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Zero     - All the widgets are auto-tuned successfully.
2044:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Non-zero - Auto-tuning failed for any widget.
2045:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2046:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2047:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_SsAutoTune(void)
2048:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2049:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
2050:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
2051:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2052:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Tune each CSD widget */
2053:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
2054:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2055:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_SENSE_METHOD_CSD_E ==
2056:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
2057:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2058:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneStatus |= CapSense_SsAutoTuneWidget(wdgtIndex);
2059:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2060:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2061:Generated_Source\PSoC4/CapSense_Sensing.c ****         return autoTuneStatus;
2062:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2063:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)) */
2064:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2065:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2066:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_DISABLE == CapSense_CSDV2)
2067:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ( ((CapSense_ENABLE == CapSense_CSX_EN) \
2068:Generated_Source\PSoC4/CapSense_Sensing.c ****         || (CapSense_ENABLE == CapSense_ISX_EN)) ||\
2069:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG))
2070:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
2071:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsTrimIdacsSinking
2072:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2073:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2074:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2075:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
2076:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  IDAC1 and IDAC2 for Sinking CSD Mode
2077:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 56


2078:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2079:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
2080:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
2081:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2082:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
2083:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSinking(void)
2084:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2085:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 trimValue;
2086:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2087:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Mod iDAC Sinking Mode */
2088:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue = CY_GET_REG32(CapSense_TRIM2_PTR) & ~CapSense_IDAC_TRIM2_MOD_SNK_MASK;
2089:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM2_PTR) &
2090:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                       CapSense_SFLASH_TRIM_IDAC_MOD_MASK) ;
2091:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2092:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
2093:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Comp iDAC Sinking Mode */
2094:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue &= ~CapSense_IDAC_TRIM2_COMP_SNK_MASK;
2095:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM2_PTR) &
2096:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                           CapSense_SFLASH_TRIM_IDAC_COMP_MASK);
2097:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
2098:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2099:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Update IDAC trim bits for gain control in current sink mode */
2100:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_TRIM2_PTR, trimValue);
2101:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2102:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
2103:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)) */
2104:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2105:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2106:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ( ((CapSense_ENABLE == CapSense_CSX_EN) \
2107:Generated_Source\PSoC4/CapSense_Sensing.c ****         || (CapSense_ENABLE == CapSense_ISX_EN)) || \
2108:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG))
2109:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
2110:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsTrimIdacsSourcing
2111:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2112:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2113:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2114:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
2115:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  IDAC1 and IDAC2 for Sourcing CSD Mode
2116:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2117:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2118:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
2119:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
2120:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2121:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
2122:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSourcing(void)
2123:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2124:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 trimValue;
2125:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2126:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Mod iDAC Sourcing Mode */
2127:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue = CY_GET_REG32(CapSense_TRIM1_PTR) & ~CapSense_IDAC_TRIM1_MOD_SRC_MASK;
2128:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM1_PTR) &
2129:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                       CapSense_SFLASH_TRIM_IDAC_MOD_MASK);
2130:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2131:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
2132:Generated_Source\PSoC4/CapSense_Sensing.c ****                  /* Comp iDAC Sourcing Mode */
2133:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue &= ~CapSense_IDAC_TRIM1_COMP_SRC_MASK;
2134:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM1_PTR) &
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 57


2135:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                           CapSense_SFLASH_TRIM_IDAC_COMP_MASK);
2136:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
2137:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2138:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Update IDAC trim bits for gain control in current source mode */
2139:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_TRIM1_PTR, trimValue);
2140:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2141:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
2142:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)) */
2143:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2144:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2145:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2146:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsTrimIdacs
2147:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2148:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2149:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2150:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function loads trim values from SFLASH rows to calibrate
2151:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  IDAC1 and IDAC2 for CSD Mode
2152:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2153:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2154:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  If CSX mode is enabled the function loads trim values for both sink and source
2155:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  mode. If CSX mode is disabled the function loads trim values for sink or
2156:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  source mode based on sink/source mode configuration.
2157:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
2158:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2159:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2160:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsTrimIdacs(void)
2161:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2162:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN)
2163:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSinking();
2164:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSourcing();
2165:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)
2166:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSinking();
2167:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)
2168:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSourcing();
2169:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2170:Generated_Source\PSoC4/CapSense_Sensing.c ****             #error "Not supported Mode, Component cannot work in this mode"
2171:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN) */
2172:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2173:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif  /* (CapSense_DISABLE == CapSense_CSDV2) */
2174:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2175:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2176:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
2177:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2178:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsChangeImoFreq
2179:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2180:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2181:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2182:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the IMO frequency.
2183:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2184:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2185:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The IMO frequency can have three offsets: 0%, -5% and +5%. The frequency
2186:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  trims are contained in the CapSense_immunity[value] array for each
2187:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  frequency channel.
2188:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2189:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param value The frequency channel ID.
2190:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2191:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 58


2192:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_SsChangeImoFreq(uint32 value)
2193:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2194:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR, CapSense_immunity[value]);
2195:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2196:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2197:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2198:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsChangeClkFreq
2199:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2200:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2201:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2202:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
2203:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the corresponding divider.
2204:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2205:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2206:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
2207:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the corresponding divider.
2208:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2209:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param chId
2210:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The frequency channel ID.
2211:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2212:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2213:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_SsChangeClkFreq(uint32 chId)
2214:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2215:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 snsClkDivider;
2216:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 freqOffset1 = 0u;
2217:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 freqOffset2 = 0u;
2218:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2219:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSD_WIDGETS)
2220:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSDV2)
2221:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 conversionsNum;
2222:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2223:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2224:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2225:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2226:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2227:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 snsClkSrc;
2228:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
2229:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2230:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2231:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((0u != CapSense_TOTAL_CSD_WIDGETS) || \
2232:Generated_Source\PSoC4/CapSense_Sensing.c ****              ((CapSense_DISABLE == CapSense_CSX_COMMON_TX_CLK_EN) && (0u != CapSense_TOTAL_CSX_WIDG
2233:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt = &CapSense_dsFlash.wdgtArray[CapSense_wid
2234:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdg
2235:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2236:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2237:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch(CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[CapSense_widgetIndex]))
2238:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2239:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSD_WIDGETS)
2240:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
2241:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get sensor clock divider value */
2242:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN)
2243:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_dsRam.snsCsdClk;
2244:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2245:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2246:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Get SnsClck divider for rows or columns */
2247:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].numCols <= CapSense_se
2248:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 59


2249:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = ptrWdgt->rowSnsClk;
2250:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2251:Generated_Source\PSoC4/CapSense_Sensing.c ****                         else
2252:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2253:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = ptrWdgt->snsClk;
2254:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2255:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2256:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider = ptrWdgt->snsClk;
2257:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2258:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2259:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2260:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset1 = CapSense_CSD_MFS_DIVIDER_OFFSET_F1;
2261:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset2 = CapSense_CSD_MFS_DIVIDER_OFFSET_F2;
2262:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2263:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2264:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2265:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2266:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Get sense clk source */
2267:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2268:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Get SnsClc Source for rows or columns */
2269:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].numCols <= CapSense_se
2270:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2271:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->rowSnsClkSource;
2272:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2273:Generated_Source\PSoC4/CapSense_Sensing.c ****                         else
2274:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2275:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2276:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2277:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2278:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2279:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2280:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2281:Generated_Source\PSoC4/CapSense_Sensing.c ****                     switch (snsClkSrc)
2282:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2283:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS8:
2284:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS12:
2285:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Multiply by 2 for PRS8/PRS12 mode */
2286:Generated_Source\PSoC4/CapSense_Sensing.c ****                         freqOffset1 <<= 1u;
2287:Generated_Source\PSoC4/CapSense_Sensing.c ****                         freqOffset2 <<= 1u;
2288:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2289:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2290:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2291:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2292:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2293:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
2294:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2295:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Change the divider based on the chId */
2296:Generated_Source\PSoC4/CapSense_Sensing.c ****                 switch (chId)
2297:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2298:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_1:
2299:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2300:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset1;
2301:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2302:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2303:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_2:
2304:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2305:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset2;
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 60


2306:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2307:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2308:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2309:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2310:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2311:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2312:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2313:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2314:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSDV2)
2315:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Set Number Of Conversions based on scanning resolution */
2316:Generated_Source\PSoC4/CapSense_Sensing.c ****                     conversionsNum = CapSense_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)pt
2317:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CY_SET_REG32(CapSense_SEQ_NORM_CNT_PTR, (conversionsNum & CapSense_SEQ_NORM_CNT
2318:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2319:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2320:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2321:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2322:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2323:Generated_Source\PSoC4/CapSense_Sensing.c ****                     switch (snsClkSrc)
2324:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2325:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS8:
2326:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS12:
2327:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Divide by 2 for PRS8/PRS12 mode */
2328:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider >>= 1;
2329:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (snsClkDivider == 0u)
2330:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2331:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = 1u;
2332:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2333:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2334:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2335:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2336:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2337:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2338:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
2339:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2340:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Configure the new divider */
2341:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetSnsClockDivider(snsClkDivider);
2342:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2343:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2344:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* #if (0u != CapSense_TOTAL_CSD_WIDGETS) */
2345:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2346:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSX_WIDGETS)
2347:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
2348:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN)
2349:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_dsRam.snsCsxClk;
2350:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else /* (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN) */
2351:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = ptrWdgt->snsClk;
2352:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN) */
2353:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset1 = CapSense_CSX_MFS_DIVIDER_OFFSET_F1;
2354:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset2 = CapSense_CSX_MFS_DIVIDER_OFFSET_F2;
2355:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2356:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Change the divider based on the chId */
2357:Generated_Source\PSoC4/CapSense_Sensing.c ****                 switch (chId)
2358:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2359:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_1:
2360:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2361:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset1;
2362:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 61


2363:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2364:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_2:
2365:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2366:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset2;
2367:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2368:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2369:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2370:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2371:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2372:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2373:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2374:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2375:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Configure the new divider */
2376:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetSnsClockDivider(snsClkDivider);
2377:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2378:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2379:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* #if (0u != CapSense_TOTAL_CSX_WIDGETS) */
2380:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2381:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
2382:Generated_Source\PSoC4/CapSense_Sensing.c ****             CYASSERT(0);
2383:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2384:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2385:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2386:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif  /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
2387:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2388:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2389:Generated_Source\PSoC4/CapSense_Sensing.c **** #if((CapSense_ENABLE == CapSense_CSD_EN) || \
2390:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSX_EN) && \
2391:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2)))
2392:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2393:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsInitializeSourceSenseClk
2394:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2395:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2396:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2397:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets a source for Sense Clk for all CSD widgets.
2398:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2399:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2400:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk.
2401:Generated_Source\PSoC4/CapSense_Sensing.c **** *  for all CSD widgets.
2402:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2403:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2404:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsInitializeSourceSenseClk(void)
2405:Generated_Source\PSoC4/CapSense_Sensing.c **** {
2406:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
2407:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2408:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2409:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
2410:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2411:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
2412:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2413:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
2414:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2415:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
2416:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
2417:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetWidgetSenseClkSrc(wdgtIndex, ptrWdgt);
2418:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2419:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 62


2420:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
2421:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
2422:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetWidgetTxClkSrc(wdgtIndex, ptrWdgt);
2423:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2424:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (((CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN)) &
2425:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
2426:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2427:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2428:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN)
2429:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_DsUpdateWidgetCrc(wdgtIndex);
2430:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN) */
2431:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2432:Generated_Source\PSoC4/CapSense_Sensing.c **** }
2433:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) || \
2434:Generated_Source\PSoC4/CapSense_Sensing.c ****            (((CapSense_ENABLE == CapSense_CSX_EN) || \
2435:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_ISX_EN)) && \
2436:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2))) */
2437:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2438:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2439:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
2440:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2441:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsSetWidgetSenseClkSrc
2442:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2443:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2444:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2445:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Sets a source for the sense clock for a widget.
2446:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2447:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param wdgtIndex
2448:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2449:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param ptrWdgt
2450:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2451:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2452:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2453:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk for a
2454:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  widget.
2455:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2456:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2457:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptr
2458:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2459:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
2460:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrScale;
2461:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2462:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2463:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if(CapSense_ENABLE == CapSense_CSDV2)
2464:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 conversionsNum;
2465:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2466:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 snsClkDivider;
2467:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2468:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2469:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2470:Generated_Source\PSoC4/CapSense_Sensing.c ****             snsClkDivider = CapSense_SsCSDGetColSnsClkDivider(wdgtIndex);
2471:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2472:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if(CapSense_ENABLE == CapSense_CSDV2)
2473:Generated_Source\PSoC4/CapSense_Sensing.c ****                 conversionsNum = CapSense_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)ptrWdg
2474:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                              CapSen
2475:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2476:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (CapSense_CLK_SOURCE_DIRECT == lfsrSize)
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 63


2477:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2478:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /*
2479:Generated_Source\PSoC4/CapSense_Sensing.c ****                     * Multiplying of the snsClkDivider by 2 is needed to pass the
2480:Generated_Source\PSoC4/CapSense_Sensing.c ****                     * average PRS frequency through the argument.
2481:Generated_Source\PSoC4/CapSense_Sensing.c ****                     */
2482:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->res
2483:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2484:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2485:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2486:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /*
2487:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * Multiplying of the snsClkDivider by 2 is needed to pass the
2488:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * average PRS frequency through the argument.
2489:Generated_Source\PSoC4/CapSense_Sensing.c ****                 */
2490:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->resolut
2491:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = 0u;
2492:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2493:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2494:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrSize = (uint8)CapSense_DEFAULT_MODULATION_MODE;
2495:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale = 0u;
2496:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)wdgtIndex; /* This parameter is unused in such configurations */
2497:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2498:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2499:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR_SCALE_OFFS
2500:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2501:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2502:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArray[wdgtIn
2503:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArray[w
2504:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2505:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2506:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_SsCSDGetRowSnsClkDivider(wdgtIndex);
2507:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2508:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if(CapSense_ENABLE == CapSense_CSDV2)
2509:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2510:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_CLK_SOURCE_DIRECT == lfsrSize)
2511:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2512:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /*
2513:Generated_Source\PSoC4/CapSense_Sensing.c ****                             * Multiplying of the snsClkDivider by 2 is needed to pass the
2514:Generated_Source\PSoC4/CapSense_Sensing.c ****                             * average PRS frequency through the argument.
2515:Generated_Source\PSoC4/CapSense_Sensing.c ****                             */
2516:Generated_Source\PSoC4/CapSense_Sensing.c ****                             lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrW
2517:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2518:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2519:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2520:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /*
2521:Generated_Source\PSoC4/CapSense_Sensing.c ****                         * Multiplying of the snsClkDivider by 2 is needed to pass the
2522:Generated_Source\PSoC4/CapSense_Sensing.c ****                         * average PRS frequency through the argument.
2523:Generated_Source\PSoC4/CapSense_Sensing.c ****                         */
2524:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt-
2525:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrScale = 0u;
2526:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2527:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else
2528:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrSize = (uint8)CapSense_DEFAULT_MODULATION_MODE;
2529:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrScale = 0u;
2530:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2531:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->rowSnsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR
2532:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2533:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 64


2534:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2535:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
2536:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2537:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2538:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
2539:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2540:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsSetWidgetTxClkSrc
2541:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2542:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2543:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2544:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Sets a source for the Tx clock for a widget.
2545:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2546:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param wdgtIndex
2547:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2548:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param ptrWdgt
2549:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2550:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2551:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2552:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Updates snsClkSource with a source for Tx Clk for a widget.
2553:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2554:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2555:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetTxClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptrWdg
2556:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2557:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
2558:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrScale;
2559:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2560:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) && \
2561:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES))
2562:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 conversionsNum;
2563:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 snsClkDivider;
2564:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2565:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2566:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)
2567:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
2568:Generated_Source\PSoC4/CapSense_Sensing.c ****                 conversionsNum = (uint32)ptrWdgt->resolution;
2569:Generated_Source\PSoC4/CapSense_Sensing.c ****                 snsClkDivider = CapSense_SsCSXGetTxClkDivider(wdgtIndex);
2570:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2571:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2572:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2573:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = (uint8)CapSense_CLK_SOURCE_DIRECT;
2574:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = 0u;
2575:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Unused function argument */
2576:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)wdgtIndex;
2577:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
2578:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2579:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrSize = (uint8)CapSense_CSX_TX_CLK_SOURCE;
2580:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale = 0u;
2581:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Unused function argument */
2582:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)wdgtIndex;
2583:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) */
2584:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2585:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR_SCALE_OFFS
2586:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2587:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2)) */
2588:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2589:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2590:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(((CapSense_ENABLE == CapSense_CSX_EN) && \
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 65


2591:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2592:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
2593:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)) ||\
2594:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSD_EN) && \
2595:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
2596:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)))
2597:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2598:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsCalcLfsrSize
2599:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2600:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2601:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2602:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is an internal function that finds a SSC polynomial size in the Auto mode.
2603:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2604:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2605:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The SSC polynomial size in the auto mode is found based on the following
2606:Generated_Source\PSoC4/CapSense_Sensing.c **** *  requirements:
2607:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - an LFSR value should be selected so that the max clock dither is limited with +/-10%.
2608:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - at least one full spread spectrum polynomial should pass during the scan time.
2609:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - the value of the number of conversions should be an integer multiple of the
2610:Generated_Source\PSoC4/CapSense_Sensing.c **** *    repeat period of the programmed LFSR_SIZE.
2611:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2612:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
2613:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2614:Generated_Source\PSoC4/CapSense_Sensing.c **** *  resolution The widget resolution.
2615:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2616:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return lfsrSize The LFSRSIZE value for the SENSE_PERIOD register.
2617:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2618:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2619:Generated_Source\PSoC4/CapSense_Sensing.c **** static uint8 CapSense_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum)
2620:Generated_Source\PSoC4/CapSense_Sensing.c **** {
2621:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 lfsrSize = 0u;
2622:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2623:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Find LFSR value */
2624:Generated_Source\PSoC4/CapSense_Sensing.c ****     if((CapSense_SNSCLK_SSC4_THRESHOLD <= snsClkDivider) &&
2625:Generated_Source\PSoC4/CapSense_Sensing.c ****        (CapSense_SNSCLK_SSC4_PERIOD <= conversionsNum) &&
2626:Generated_Source\PSoC4/CapSense_Sensing.c ****        (0uL == (conversionsNum % CapSense_SNSCLK_SSC4_PERIOD)))
2627:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2628:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC4;
2629:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2630:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC3_THRESHOLD <= snsClkDivider) &&
2631:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC3_PERIOD <= conversionsNum) &&
2632:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC3_PERIOD)))
2633:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2634:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC3;
2635:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2636:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC2_THRESHOLD <= snsClkDivider) &&
2637:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC2_PERIOD <= conversionsNum) &&
2638:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC2_PERIOD)))
2639:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2640:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC2;
2641:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2642:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC1_THRESHOLD <= snsClkDivider) &&
2643:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC1_PERIOD <= conversionsNum) &&
2644:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC1_PERIOD)))
2645:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2646:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC1;
2647:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 66


2648:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
2649:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2650:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = (uint8)CapSense_CLK_SOURCE_DIRECT;
2651:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2652:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2653:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (lfsrSize);
2654:Generated_Source\PSoC4/CapSense_Sensing.c **** }
2655:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2656:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2657:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2658:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsCalcLfsrScale
2659:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2660:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2661:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2662:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is an internal function that calculates the LFSR scale value.
2663:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2664:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2665:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The LFSR scale value is used to increase the clock dither if the desired dither
2666:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is wider than can be achieved with the current Sense Clock Divider and current LFSR
2667:Generated_Source\PSoC4/CapSense_Sensing.c **** *  period.
2668:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2669:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This returns the LFSR scale value needed to keep the clock dither in
2670:Generated_Source\PSoC4/CapSense_Sensing.c **** *  range +/-10%.
2671:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2672:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
2673:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2674:Generated_Source\PSoC4/CapSense_Sensing.c **** *  lfsrSize The period of the LFSR sequence.
2675:Generated_Source\PSoC4/CapSense_Sensing.c **** *          For devices with CapSense_CSDV2_REF9P6UA_EN = TRUE, the
2676:Generated_Source\PSoC4/CapSense_Sensing.c **** *          mode parameters can take the following values:
2677:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2678:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC1   The length of LFSR sequence is 63 cycles.
2679:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC2   The length of LFSR sequence is 127 cycles.
2680:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC3   The length of LFSR sequence is 255 cycles.
2681:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC4   The length of LFSR sequence is 511 cycles.
2682:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2683:Generated_Source\PSoC4/CapSense_Sensing.c **** *          For devices with CapSense_CSDV2_REF9P6UA_EN = TRUE, the
2684:Generated_Source\PSoC4/CapSense_Sensing.c **** *          mode parameters can take the following values:
2685:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2686:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC1   The length of LFSR sequence is 3 cycles.
2687:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC2   The length of LFSR sequence is 7 cycles.
2688:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC3   The length of LFSR sequence is 15 cycles.
2689:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC4   The length of LFSR sequence is 31 cycles.
2690:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2691:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
2692:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the LFSR scale value needed to keep the clock dither in range +/-10%.
2693:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2694:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2695:Generated_Source\PSoC4/CapSense_Sensing.c **** static uint8 CapSense_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize)
2696:Generated_Source\PSoC4/CapSense_Sensing.c **** {
2697:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrScale;
2698:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrRange;
2699:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrDither;
2700:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2701:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Initialize the lfsrSize variable with the LFSR Range for given Lfsr Size. */
2702:Generated_Source\PSoC4/CapSense_Sensing.c ****     switch(lfsrSize)
2703:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2704:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC1:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 67


2705:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2706:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC1_RANGE;
2707:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2708:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2709:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC2:
2710:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2711:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC2_RANGE;
2712:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2713:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2714:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC3:
2715:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2716:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC3_RANGE;
2717:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2718:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2719:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC4:
2720:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2721:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC4_RANGE;
2722:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2723:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2724:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
2725:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2726:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = 0u;
2727:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2728:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2729:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2730:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2731:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Calculate the LFSR Scale value that is required to keep the Clock dither
2732:Generated_Source\PSoC4/CapSense_Sensing.c ****      * as close as possible to the +/-10% limit of the used frequency.
2733:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
2734:Generated_Source\PSoC4/CapSense_Sensing.c ****     if((lfsrSize != CapSense_CLK_SOURCE_DIRECT) && (0u != lfsrRange))
2735:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2736:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calculate the LFSR Dither in percents. */
2737:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrDither  = ((lfsrRange * 100uL) / snsClkDivider);
2738:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrScale = 0uL;
2739:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2740:Generated_Source\PSoC4/CapSense_Sensing.c ****         while(lfsrDither < CapSense_LFSR_DITHER_PERCENTAGE)
2741:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2742:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale++;
2743:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrDither <<=1uL;
2744:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2745:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2746:Generated_Source\PSoC4/CapSense_Sensing.c ****         if(lfsrDither > CapSense_LFSR_DITHER_PERCENTAGE)
2747:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2748:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale--;
2749:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2750:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2751:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
2752:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2753:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrScale = 0uL;
2754:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2755:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2756:Generated_Source\PSoC4/CapSense_Sensing.c ****     return ((uint8)lfsrScale);
2757:Generated_Source\PSoC4/CapSense_Sensing.c **** }
2758:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2759:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (((CapSense_ENABLE == CapSense_CSX_EN) && \
2760:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2761:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2) && \
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 68


2762:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)) ||\
2763:Generated_Source\PSoC4/CapSense_Sensing.c ****           ((CapSense_ENABLE == CapSense_CSD_EN) && \
2764:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2) && \
2765:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))) */
2766:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2767:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2768:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
2769:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2770:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2771:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2772:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsCSDGetColSnsClkDivider
2773:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2774:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2775:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2776:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function gets the Sense Clock Divider value for one-dimension widgets
2777:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and Column Sense Clock divider value for two-dimension widgets.
2778:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2779:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2780:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function gets the Sense Clock Divider value based on the Component
2781:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  configuration. The function is applicable for one-dimension widgets and for
2782:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  two-dimension widgets.
2783:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2784:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param widgetId
2785:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2786:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2787:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
2788:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the Sense Clock Divider value for one-dimension widgets
2789:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and the Column Sense Clock divider value for two-dimension widgets.
2790:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2791:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2792:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 CapSense_SsCSDGetColSnsClkDivider(uint32 widgetId)
2793:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1009              		.loc 1 2793 0
 1010              		.cfi_startproc
 1011              		@ args = 0, pretend = 0, frame = 0
 1012              		@ frame_needed = 0, uses_anonymous_args = 0
 1013              		@ link register save eliminated.
 1014              	.LVL99:
2794:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 retVal;
2795:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2796:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Get sense divider based on configuration */
2797:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE != CapSense_CSD_COMMON_SNS_CLK_EN)
2798:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2799:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2800:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
 1015              		.loc 1 2800 0
 1016 0000 1C23     		movs	r3, #28
 1017 0002 5843     		muls	r0, r3
 1018              	.LVL100:
 1019 0004 024B     		ldr	r3, .L97
2801:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2802:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2803:Generated_Source\PSoC4/CapSense_Sensing.c ****             retVal = (uint32)(ptrWdgt->snsClk);
2804:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2805:Generated_Source\PSoC4/CapSense_Sensing.c ****             retVal = (uint32)CapSense_dsRam.snsCsdClk;
2806:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2807:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)widgetId; /* This parameter is unused in such configurations */
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 69


2808:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2809:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2810:Generated_Source\PSoC4/CapSense_Sensing.c ****         return (retVal);
2811:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1020              		.loc 1 2811 0
 1021              		@ sp needed
2800:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
 1022              		.loc 1 2800 0
 1023 0006 1818     		adds	r0, r3, r0
2803:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
 1024              		.loc 1 2803 0
 1025 0008 4368     		ldr	r3, [r0, #4]
2810:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1026              		.loc 1 2810 0
 1027 000a 9889     		ldrh	r0, [r3, #12]
 1028              		.loc 1 2811 0
 1029 000c 7047     		bx	lr
 1030              	.L98:
 1031 000e C046     		.align	2
 1032              	.L97:
 1033 0010 00000000 		.word	CapSense_dsFlash
 1034              		.cfi_endproc
 1035              	.LFE23:
 1036              		.size	CapSense_SsCSDGetColSnsClkDivider, .-CapSense_SsCSDGetColSnsClkDivider
 1037              		.section	.text.CapSense_SsCSDCalcPrsSize,"ax",%progbits
 1038              		.align	1
 1039              		.global	CapSense_SsCSDCalcPrsSize
 1040              		.code	16
 1041              		.thumb_func
 1042              		.type	CapSense_SsCSDCalcPrsSize, %function
 1043              	CapSense_SsCSDCalcPrsSize:
 1044              	.LFB24:
2812:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2813:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2814:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2815:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
2816:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsCSDGetRowSnsClkDivider
2817:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2818:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2819:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2820:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function gets the Sense Clock Divider value for one-dimension widgets
2821:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  and the Column Sense Clock divider value for two-dimension widgets.
2822:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2823:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2824:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function gets the Sense Clock Divider value based on the Component
2825:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  configuration. The function is applicable for one-dimension widgets and for
2826:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  two-dimension widgets.
2827:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2828:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \param
2829:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  widgetId Specifies the ID of the widget.
2830:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2831:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \return
2832:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Returns the sense clock divider value for one-dimension widgets
2833:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  and column sense clock divider value for two-dimension widgets.
2834:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2835:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
2836:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 CapSense_SsCSDGetRowSnsClkDivider(uint32 widgetId)
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 70


2837:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2838:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 retVal;
2839:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2840:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Get sense divider based on configuration */
2841:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE != CapSense_CSD_COMMON_SNS_CLK_EN)
2842:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2843:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2844:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
2845:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2846:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2847:Generated_Source\PSoC4/CapSense_Sensing.c ****                 retVal = ptrWdgt->rowSnsClk;
2848:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2849:Generated_Source\PSoC4/CapSense_Sensing.c ****                 retVal = (uint32)CapSense_dsRam.snsCsdClk;
2850:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2851:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)widgetId; /* This parameter is unused in such configurations */
2852:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2853:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2854:Generated_Source\PSoC4/CapSense_Sensing.c ****             return (retVal);
2855:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2856:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2857:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2858:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2859:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2860:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2861:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
2862:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsCSDCalcPrsSize
2863:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2864:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2865:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2866:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  The function finds PRS polynomial size in the Auto mode.
2867:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2868:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2869:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  The PRS polynomial size in the Auto mode is found based on the following
2870:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  requirements:
2871:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  - at least one full spread spectrum polynomial should pass during scan time.
2872:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2873:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \param
2874:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  snsClkDivider The divider value for the sense clock.
2875:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  resolution The widget resolution.
2876:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2877:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \return prsSize PRS value for SENSE_PERIOD register.
2878:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2879:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
2880:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 CapSense_SsCSDCalcPrsSize(uint32 snsClkDivider, uint32 resolution)
2881:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1045              		.loc 1 2881 0
 1046              		.cfi_startproc
 1047              		@ args = 0, pretend = 0, frame = 0
 1048              		@ frame_needed = 0, uses_anonymous_args = 0
 1049              		@ link register save eliminated.
 1050              	.LVL101:
2882:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 prsSize;
2883:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 modClkDivider = 1u;
2884:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2885:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE != CapSense_CSDV2)
2886:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if(CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
2887:Generated_Source\PSoC4/CapSense_Sensing.c ****                     modClkDivider = (uint32)CapSense_dsRam.modCsdClk;
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 71


2888:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
2889:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2890:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /*
2891:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * This operation is needed for Third-generation HW Block
2892:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * based devices to take into account DIV-2 flip-flop.
2893:Generated_Source\PSoC4/CapSense_Sensing.c ****                 */
2894:Generated_Source\PSoC4/CapSense_Sensing.c ****                 snsClkDivider <<= 1uL;
2895:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
2896:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2897:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((snsClkDivider * CapSense_PRS_LENGTH_12_BITS) <= (modClkDivider * ((0x00000001Lu <<
 1051              		.loc 1 2897 0
 1052 0000 0123     		movs	r3, #1
 1053 0002 8B40     		lsls	r3, r3, r1
 1054 0004 0103     		lsls	r1, r0, #12
 1055              	.LVL102:
 1056 0006 013B     		subs	r3, r3, #1
 1057 0008 091A     		subs	r1, r1, r0
2898:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2899:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set PRS12 mode */
2900:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_PRS_12_CONFIG;
 1058              		.loc 1 2900 0
 1059 000a 0622     		movs	r2, #6
2897:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 1060              		.loc 1 2897 0
 1061 000c 9942     		cmp	r1, r3
 1062 000e 05D9     		bls	.L100
2901:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2902:Generated_Source\PSoC4/CapSense_Sensing.c ****             else if ((snsClkDivider * CapSense_PRS_LENGTH_8_BITS) <= (modClkDivider * ((0x00000001L
 1063              		.loc 1 2902 0
 1064 0010 F932     		adds	r2, r2, #249
 1065 0012 5043     		muls	r0, r2
 1066              	.LVL103:
2903:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2904:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set PRS8 mode */
2905:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_PRS_8_CONFIG;
 1067              		.loc 1 2905 0
 1068 0014 FA3A     		subs	r2, r2, #250
2902:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 1069              		.loc 1 2902 0
 1070 0016 8342     		cmp	r3, r0
 1071 0018 00D2     		bcs	.L100
2906:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2907:Generated_Source\PSoC4/CapSense_Sensing.c ****             else
2908:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2909:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set Direct clock mode */
2910:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_CLK_SOURCE_DIRECT;
 1072              		.loc 1 2910 0
 1073 001a 0022     		movs	r2, #0
 1074              	.L100:
 1075              	.LVL104:
2911:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2912:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2913:Generated_Source\PSoC4/CapSense_Sensing.c ****             return (uint8)prsSize;
 1076              		.loc 1 2913 0
 1077 001c D0B2     		uxtb	r0, r2
2914:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1078              		.loc 1 2914 0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 72


 1079              		@ sp needed
 1080 001e 7047     		bx	lr
 1081              		.cfi_endproc
 1082              	.LFE24:
 1083              		.size	CapSense_SsCSDCalcPrsSize, .-CapSense_SsCSDCalcPrsSize
 1084              		.global	__aeabi_uidivmod
 1085              		.global	__aeabi_uidiv
 1086              		.section	.text.CapSense_SsInitializeSourceSenseClk,"ax",%progbits
 1087              		.align	1
 1088              		.global	CapSense_SsInitializeSourceSenseClk
 1089              		.code	16
 1090              		.thumb_func
 1091              		.type	CapSense_SsInitializeSourceSenseClk, %function
 1092              	CapSense_SsInitializeSourceSenseClk:
 1093              	.LFB19:
2405:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
 1094              		.loc 1 2405 0
 1095              		.cfi_startproc
 1096              		@ args = 0, pretend = 0, frame = 8
 1097              		@ frame_needed = 0, uses_anonymous_args = 0
 1098              	.LVL105:
 1099 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 1100              		.cfi_def_cfa_offset 32
 1101              		.cfi_offset 0, -32
 1102              		.cfi_offset 1, -28
 1103              		.cfi_offset 2, -24
 1104              		.cfi_offset 4, -20
 1105              		.cfi_offset 5, -16
 1106              		.cfi_offset 6, -12
 1107              		.cfi_offset 7, -8
 1108              		.cfi_offset 14, -4
 1109 0002 2C4F     		ldr	r7, .L131
 1110              	.LVL106:
 1111              	.L116:
2411:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1112              		.loc 1 2411 0
 1113 0004 3B68     		ldr	r3, [r7]
 1114              	.LBB20:
 1115              	.LBB21:
2473:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                              CapSen
 1116              		.loc 1 2473 0
 1117 0006 0022     		movs	r2, #0
 1118              	.LBE21:
 1119              	.LBE20:
2411:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1120              		.loc 1 2411 0
 1121 0008 0193     		str	r3, [sp, #4]
 1122              	.LVL107:
 1123              	.LBB34:
 1124              	.LBB32:
 1125              	.LBB22:
 1126              	.LBB23:
2803:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
 1127              		.loc 1 2803 0
 1128 000a 9E89     		ldrh	r6, [r3, #12]
 1129              	.LVL108:
 1130              	.LBE23:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 73


 1131              	.LBE22:
2473:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                              CapSen
 1132              		.loc 1 2473 0
 1133 000c 1988     		ldrh	r1, [r3]
 1134 000e 3000     		movs	r0, r6
 1135 0010 FFF7FEFF 		bl	CapSense_SsCSDGetNumberOfConversions
 1136              	.LVL109:
 1137 0014 0400     		movs	r4, r0
 1138              	.LVL110:
 1139              	.LBB24:
 1140              	.LBB25:
2624:Generated_Source\PSoC4/CapSense_Sensing.c ****        (CapSense_SNSCLK_SSC4_PERIOD <= conversionsNum) &&
 1141              		.loc 1 2624 0
 1142 0016 9F2E     		cmp	r6, #159
 1143 0018 27D9     		bls	.L104
 1144 001a 274B     		ldr	r3, .L131+4
 1145 001c 9842     		cmp	r0, r3
 1146 001e 06D9     		bls	.L105
2625:Generated_Source\PSoC4/CapSense_Sensing.c ****        (0uL == (conversionsNum % CapSense_SNSCLK_SSC4_PERIOD)))
 1147              		.loc 1 2625 0
 1148 0020 2649     		ldr	r1, .L131+8
 1149 0022 FFF7FEFF 		bl	__aeabi_uidivmod
 1150              	.LVL111:
2628:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1151              		.loc 1 2628 0
 1152 0026 0425     		movs	r5, #4
2625:Generated_Source\PSoC4/CapSense_Sensing.c ****        (0uL == (conversionsNum % CapSense_SNSCLK_SSC4_PERIOD)))
 1153              		.loc 1 2625 0
 1154 0028 0029     		cmp	r1, #0
 1155 002a 29D0     		beq	.L112
 1156 002c 03E0     		b	.L107
 1157              	.LVL112:
 1158              	.L105:
2630:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC3_PERIOD <= conversionsNum) &&
 1159              		.loc 1 2630 0
 1160 002e FF23     		movs	r3, #255
 1161 0030 5B00     		lsls	r3, r3, #1
 1162 0032 9842     		cmp	r0, r3
 1163 0034 07D9     		bls	.L108
 1164              	.LVL113:
 1165              	.L107:
2631:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC3_PERIOD)))
 1166              		.loc 1 2631 0
 1167 0036 2249     		ldr	r1, .L131+12
 1168 0038 2000     		movs	r0, r4
 1169 003a FFF7FEFF 		bl	__aeabi_uidivmod
 1170              	.LVL114:
2634:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1171              		.loc 1 2634 0
 1172 003e 0325     		movs	r5, #3
2631:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC3_PERIOD)))
 1173              		.loc 1 2631 0
 1174 0040 0029     		cmp	r1, #0
 1175 0042 1DD0     		beq	.L112
 1176 0044 01E0     		b	.L109
 1177              	.LVL115:
 1178              	.L108:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 74


2636:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC2_PERIOD <= conversionsNum) &&
 1179              		.loc 1 2636 0
 1180 0046 7E28     		cmp	r0, #126
 1181 0048 07D9     		bls	.L110
 1182              	.LVL116:
 1183              	.L109:
2637:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC2_PERIOD)))
 1184              		.loc 1 2637 0
 1185 004a 7F21     		movs	r1, #127
 1186 004c 2000     		movs	r0, r4
 1187 004e FFF7FEFF 		bl	__aeabi_uidivmod
 1188              	.LVL117:
2640:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1189              		.loc 1 2640 0
 1190 0052 0225     		movs	r5, #2
2637:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC2_PERIOD)))
 1191              		.loc 1 2637 0
 1192 0054 0029     		cmp	r1, #0
 1193 0056 13D0     		beq	.L112
 1194 0058 01E0     		b	.L111
 1195              	.LVL118:
 1196              	.L110:
2642:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC1_PERIOD <= conversionsNum) &&
 1197              		.loc 1 2642 0
 1198 005a 3E28     		cmp	r0, #62
 1199 005c 05D9     		bls	.L104
 1200              	.LVL119:
 1201              	.L111:
2643:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC1_PERIOD)))
 1202              		.loc 1 2643 0
 1203 005e 3F21     		movs	r1, #63
 1204 0060 2000     		movs	r0, r4
 1205 0062 FFF7FEFF 		bl	__aeabi_uidivmod
 1206              	.LVL120:
 1207 0066 0029     		cmp	r1, #0
 1208 0068 22D0     		beq	.L129
 1209              	.L104:
 1210              	.LVL121:
 1211              	.LBE25:
 1212              	.LBE24:
2482:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
 1213              		.loc 1 2482 0
 1214 006a 019B     		ldr	r3, [sp, #4]
 1215 006c 7000     		lsls	r0, r6, #1
 1216 006e 1988     		ldrh	r1, [r3]
 1217 0070 FFF7FEFF 		bl	CapSense_SsCSDCalcPrsSize
 1218              	.LVL122:
 1219              	.LBB27:
 1220              	.LBB28:
2702:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1221              		.loc 1 2702 0
 1222 0074 421E     		subs	r2, r0, #1
 1223 0076 D2B2     		uxtb	r2, r2
 1224              	.LBE28:
 1225              	.LBE27:
2482:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
 1226              		.loc 1 2482 0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 75


 1227 0078 0500     		movs	r5, r0
 1228              	.LVL123:
 1229              	.LBB30:
 1230              	.LBB29:
2753:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1231              		.loc 1 2753 0
 1232 007a 0023     		movs	r3, #0
2702:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1233              		.loc 1 2702 0
 1234 007c 032A     		cmp	r2, #3
 1235 007e 0ED8     		bhi	.L115
 1236              	.LVL124:
 1237              	.L112:
2737:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrScale = 0uL;
 1238              		.loc 1 2737 0
 1239 0080 C820     		movs	r0, #200
 1240 0082 3100     		movs	r1, r6
 1241 0084 C000     		lsls	r0, r0, #3
 1242 0086 FFF7FEFF 		bl	__aeabi_uidiv
 1243              	.LVL125:
2738:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1244              		.loc 1 2738 0
 1245 008a 0023     		movs	r3, #0
 1246              	.LVL126:
 1247              	.L113:
2740:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1248              		.loc 1 2740 0
 1249 008c 0928     		cmp	r0, #9
 1250 008e 02D8     		bhi	.L130
2742:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrDither <<=1uL;
 1251              		.loc 1 2742 0
 1252 0090 0133     		adds	r3, r3, #1
 1253              	.LVL127:
2743:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1254              		.loc 1 2743 0
 1255 0092 4000     		lsls	r0, r0, #1
 1256              	.LVL128:
 1257 0094 FAE7     		b	.L113
 1258              	.L130:
2748:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1259              		.loc 1 2748 0
 1260 0096 0A38     		subs	r0, r0, #10
 1261              	.LVL129:
 1262 0098 421E     		subs	r2, r0, #1
 1263 009a 9041     		sbcs	r0, r0, r2
 1264              	.LVL130:
 1265 009c 1B1A     		subs	r3, r3, r0
 1266              	.LVL131:
 1267              	.L115:
 1268              	.LBE29:
 1269              	.LBE30:
2499:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1270              		.loc 1 2499 0
 1271 009e 1B01     		lsls	r3, r3, #4
 1272 00a0 1D43     		orrs	r5, r3
 1273 00a2 019B     		ldr	r3, [sp, #4]
 1274 00a4 1C37     		adds	r7, r7, #28
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 76


 1275 00a6 9D73     		strb	r5, [r3, #14]
 1276              	.LVL132:
 1277              	.LBE32:
 1278              	.LBE34:
2409:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1279              		.loc 1 2409 0
 1280 00a8 064B     		ldr	r3, .L131+16
 1281 00aa BB42     		cmp	r3, r7
 1282 00ac AAD1     		bne	.L116
2432:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) || \
 1283              		.loc 1 2432 0
 1284              		@ sp needed
 1285 00ae F7BD     		pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 1286              	.LVL133:
 1287              	.L129:
 1288              	.LBB35:
 1289              	.LBB33:
 1290              	.LBB31:
 1291              	.LBB26:
2646:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1292              		.loc 1 2646 0
 1293 00b0 0125     		movs	r5, #1
 1294              	.LVL134:
 1295 00b2 E5E7     		b	.L112
 1296              	.L132:
 1297              		.align	2
 1298              	.L131:
 1299 00b4 04000000 		.word	CapSense_dsFlash+4
 1300 00b8 FE030000 		.word	1022
 1301 00bc FF030000 		.word	1023
 1302 00c0 FF010000 		.word	511
 1303 00c4 90000000 		.word	CapSense_dsFlash+144
 1304              	.LBE26:
 1305              	.LBE31:
 1306              	.LBE33:
 1307              	.LBE35:
 1308              		.cfi_endproc
 1309              	.LFE19:
 1310              		.size	CapSense_SsInitializeSourceSenseClk, .-CapSense_SsInitializeSourceSenseClk
 1311              		.section	.text.CapSense_DischargeExtCapacitors,"ax",%progbits
 1312              		.align	1
 1313              		.global	CapSense_DischargeExtCapacitors
 1314              		.code	16
 1315              		.thumb_func
 1316              		.type	CapSense_DischargeExtCapacitors, %function
 1317              	CapSense_DischargeExtCapacitors:
 1318              	.LFB25:
2915:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2916:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
2917:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2918:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2919:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
2920:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2921:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_DischargeExtCapacitors
2922:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2923:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2924:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 77


2925:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The internal function discharge available external capacitors.
2926:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2927:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2928:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function discharge available external capacitors by connection them
2929:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  to GND using STRONG GPIO drive mode. Additionaly, the function disconnects
2930:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the capacitors from analog mux buses if connected.
2931:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Note: the function does not restore the connection to analog mux busses
2932:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and supposes that all the capacitors belong to a single device port.
2933:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2934:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param
2935:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  dischargeTime The discharge time in us.
2936:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2937:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2938:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_DischargeExtCapacitors(uint32 dischargeTime)
2939:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1319              		.loc 1 2939 0
 1320              		.cfi_startproc
 1321              		@ args = 0, pretend = 0, frame = 16
 1322              		@ frame_needed = 0, uses_anonymous_args = 0
 1323              	.LVL135:
 1324 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1325              		.cfi_def_cfa_offset 20
 1326              		.cfi_offset 4, -20
 1327              		.cfi_offset 5, -16
 1328              		.cfi_offset 6, -12
 1329              		.cfi_offset 7, -8
 1330              		.cfi_offset 14, -4
2940:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 hsiomReg;
2941:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 drReg;
2942:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 pcReg;
2943:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
2944:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8  interruptState;
2945:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2946:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Store register state */
2947:Generated_Source\PSoC4/CapSense_Sensing.c ****         hsiomReg = CY_GET_REG32(CapSense_EXT_CAP_HSIOM_PTR) & CapSense_EXT_CAP_HSIOM_MASK;
 1331              		.loc 1 2947 0
 1332 0002 264C     		ldr	r4, .L134
2948:Generated_Source\PSoC4/CapSense_Sensing.c ****         drReg = CY_GET_REG32(CapSense_EXT_CAP_DR_PTR) & CapSense_EXT_CAP_DR_MASK;
 1333              		.loc 1 2948 0
 1334 0004 264D     		ldr	r5, .L134+4
2947:Generated_Source\PSoC4/CapSense_Sensing.c ****         drReg = CY_GET_REG32(CapSense_EXT_CAP_DR_PTR) & CapSense_EXT_CAP_DR_MASK;
 1335              		.loc 1 2947 0
 1336 0006 2368     		ldr	r3, [r4]
2939:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 hsiomReg;
 1337              		.loc 1 2939 0
 1338 0008 85B0     		sub	sp, sp, #20
 1339              		.cfi_def_cfa_offset 40
2949:Generated_Source\PSoC4/CapSense_Sensing.c ****         pcReg = CY_GET_REG32(CapSense_EXT_CAP_PC_PTR) & CapSense_EXT_CAP_PC_MASK;
 1340              		.loc 1 2949 0
 1341 000a 264E     		ldr	r6, .L134+8
2947:Generated_Source\PSoC4/CapSense_Sensing.c ****         drReg = CY_GET_REG32(CapSense_EXT_CAP_DR_PTR) & CapSense_EXT_CAP_DR_MASK;
 1342              		.loc 1 2947 0
 1343 000c 0093     		str	r3, [sp]
 1344              	.LVL136:
2948:Generated_Source\PSoC4/CapSense_Sensing.c ****         pcReg = CY_GET_REG32(CapSense_EXT_CAP_PC_PTR) & CapSense_EXT_CAP_PC_MASK;
 1345              		.loc 1 2948 0
 1346 000e 2B68     		ldr	r3, [r5]
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 78


 1347              	.LVL137:
2939:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 hsiomReg;
 1348              		.loc 1 2939 0
 1349 0010 0390     		str	r0, [sp, #12]
2948:Generated_Source\PSoC4/CapSense_Sensing.c ****         pcReg = CY_GET_REG32(CapSense_EXT_CAP_PC_PTR) & CapSense_EXT_CAP_PC_MASK;
 1350              		.loc 1 2948 0
 1351 0012 0193     		str	r3, [sp, #4]
 1352              	.LVL138:
 1353              		.loc 1 2949 0
 1354 0014 3368     		ldr	r3, [r6]
 1355              	.LVL139:
2950:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2951:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Ext Cap from AMUXBUS-A using HSIOM registers */
2952:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
2953:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_HSIOM_PTR);
2954:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_EXT_CAP_HSIOM_MASK);
2955:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_HSIOM_PTR, newRegValue);
2956:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
2957:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2958:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Set output port register to 0 to connect to GND */
2959:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
2960:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_DR_PTR);
2961:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_EXT_CAP_DR_MASK);
2962:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_DR_PTR, newRegValue);
2963:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
2964:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2965:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Set port configuration register (drive mode) in STRONG mode */
2966:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
2967:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_PC_PTR);
2968:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~((uint32)CapSense_EXT_CAP_PC_MASK));
 1356              		.loc 1 2968 0
 1357 0016 3827     		movs	r7, #56
2949:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1358              		.loc 1 2949 0
 1359 0018 0293     		str	r3, [sp, #8]
 1360              	.LVL140:
2952:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_HSIOM_PTR);
 1361              		.loc 1 2952 0
 1362 001a FFF7FEFF 		bl	CyEnterCriticalSection
 1363              	.LVL141:
2954:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_HSIOM_PTR, newRegValue);
 1364              		.loc 1 2954 0
 1365 001e F022     		movs	r2, #240
2953:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_EXT_CAP_HSIOM_MASK);
 1366              		.loc 1 2953 0
 1367 0020 2368     		ldr	r3, [r4]
 1368              	.LVL142:
2954:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_HSIOM_PTR, newRegValue);
 1369              		.loc 1 2954 0
 1370 0022 9343     		bics	r3, r2
 1371              	.LVL143:
2955:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1372              		.loc 1 2955 0
 1373 0024 2360     		str	r3, [r4]
2956:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1374              		.loc 1 2956 0
 1375 0026 FFF7FEFF 		bl	CyExitCriticalSection
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 79


 1376              	.LVL144:
2959:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_DR_PTR);
 1377              		.loc 1 2959 0
 1378 002a FFF7FEFF 		bl	CyEnterCriticalSection
 1379              	.LVL145:
2961:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_DR_PTR, newRegValue);
 1380              		.loc 1 2961 0
 1381 002e 0222     		movs	r2, #2
2960:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_EXT_CAP_DR_MASK);
 1382              		.loc 1 2960 0
 1383 0030 2B68     		ldr	r3, [r5]
 1384              	.LVL146:
2961:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_DR_PTR, newRegValue);
 1385              		.loc 1 2961 0
 1386 0032 9343     		bics	r3, r2
 1387              	.LVL147:
2962:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1388              		.loc 1 2962 0
 1389 0034 2B60     		str	r3, [r5]
2963:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1390              		.loc 1 2963 0
 1391 0036 FFF7FEFF 		bl	CyExitCriticalSection
 1392              	.LVL148:
2966:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_PC_PTR);
 1393              		.loc 1 2966 0
 1394 003a FFF7FEFF 		bl	CyEnterCriticalSection
 1395              	.LVL149:
2969:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= (CapSense_EXT_CAP_PC_STRONG_CFG);
 1396              		.loc 1 2969 0
 1397 003e 3022     		movs	r2, #48
2967:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~((uint32)CapSense_EXT_CAP_PC_MASK));
 1398              		.loc 1 2967 0
 1399 0040 3368     		ldr	r3, [r6]
 1400              	.LVL150:
2968:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= (CapSense_EXT_CAP_PC_STRONG_CFG);
 1401              		.loc 1 2968 0
 1402 0042 BB43     		bics	r3, r7
 1403              	.LVL151:
 1404              		.loc 1 2969 0
 1405 0044 1343     		orrs	r3, r2
 1406              	.LVL152:
2970:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_PC_PTR, newRegValue);
 1407              		.loc 1 2970 0
 1408 0046 3360     		str	r3, [r6]
2971:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1409              		.loc 1 2971 0
 1410 0048 FFF7FEFF 		bl	CyExitCriticalSection
 1411              	.LVL153:
2972:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2973:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Delay to discharge external capacitors */
2974:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyDelayUs((uint16)dischargeTime);
 1412              		.loc 1 2974 0
 1413 004c 6B46     		mov	r3, sp
 1414 004e 9889     		ldrh	r0, [r3, #12]
 1415 0050 FFF7FEFF 		bl	CyDelayUs
 1416              	.LVL154:
2975:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 80


2976:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Restore previous register values */
2977:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1417              		.loc 1 2977 0
 1418 0054 FFF7FEFF 		bl	CyEnterCriticalSection
 1419              	.LVL155:
2978:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_PC_PTR);
2979:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~((uint32)CapSense_EXT_CAP_PC_MASK));
2980:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= pcReg;
 1420              		.loc 1 2980 0
 1421 0058 029A     		ldr	r2, [sp, #8]
2978:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_PC_PTR);
 1422              		.loc 1 2978 0
 1423 005a 3368     		ldr	r3, [r6]
 1424              	.LVL156:
2979:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= pcReg;
 1425              		.loc 1 2979 0
 1426 005c BB43     		bics	r3, r7
 1427              	.LVL157:
 1428              		.loc 1 2980 0
 1429 005e 1740     		ands	r7, r2
 1430 0060 1F43     		orrs	r7, r3
 1431              	.LVL158:
2981:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_PC_PTR, newRegValue);
 1432              		.loc 1 2981 0
 1433 0062 3760     		str	r7, [r6]
2982:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1434              		.loc 1 2982 0
 1435 0064 FFF7FEFF 		bl	CyExitCriticalSection
 1436              	.LVL159:
2983:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2984:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1437              		.loc 1 2984 0
 1438 0068 FFF7FEFF 		bl	CyEnterCriticalSection
 1439              	.LVL160:
2985:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_DR_PTR);
2986:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_EXT_CAP_DR_MASK);
 1440              		.loc 1 2986 0
 1441 006c 0222     		movs	r2, #2
2987:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= drReg;
 1442              		.loc 1 2987 0
 1443 006e 0221     		movs	r1, #2
2985:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_DR_PTR);
 1444              		.loc 1 2985 0
 1445 0070 2B68     		ldr	r3, [r5]
 1446              	.LVL161:
2986:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= drReg;
 1447              		.loc 1 2986 0
 1448 0072 9343     		bics	r3, r2
 1449              	.LVL162:
 1450              		.loc 1 2987 0
 1451 0074 019A     		ldr	r2, [sp, #4]
 1452 0076 0A40     		ands	r2, r1
 1453 0078 1343     		orrs	r3, r2
 1454              	.LVL163:
2988:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_DR_PTR, newRegValue);
 1455              		.loc 1 2988 0
 1456 007a 2B60     		str	r3, [r5]
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 81


2989:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1457              		.loc 1 2989 0
 1458 007c FFF7FEFF 		bl	CyExitCriticalSection
 1459              	.LVL164:
2990:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2991:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1460              		.loc 1 2991 0
 1461 0080 FFF7FEFF 		bl	CyEnterCriticalSection
 1462              	.LVL165:
2992:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_HSIOM_PTR);
2993:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_EXT_CAP_HSIOM_MASK);
 1463              		.loc 1 2993 0
 1464 0084 F022     		movs	r2, #240
2994:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= hsiomReg;
 1465              		.loc 1 2994 0
 1466 0086 F021     		movs	r1, #240
2992:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_HSIOM_PTR);
 1467              		.loc 1 2992 0
 1468 0088 2368     		ldr	r3, [r4]
 1469              	.LVL166:
2993:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= hsiomReg;
 1470              		.loc 1 2993 0
 1471 008a 9343     		bics	r3, r2
 1472              	.LVL167:
 1473              		.loc 1 2994 0
 1474 008c 009A     		ldr	r2, [sp]
 1475 008e 0A40     		ands	r2, r1
 1476 0090 1343     		orrs	r3, r2
 1477              	.LVL168:
2995:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_HSIOM_PTR, newRegValue);
 1478              		.loc 1 2995 0
 1479 0092 2360     		str	r3, [r4]
2996:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1480              		.loc 1 2996 0
 1481 0094 FFF7FEFF 		bl	CyExitCriticalSection
 1482              	.LVL169:
2997:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1483              		.loc 1 2997 0
 1484 0098 05B0     		add	sp, sp, #20
 1485              	.LVL170:
 1486              		@ sp needed
 1487 009a F0BD     		pop	{r4, r5, r6, r7, pc}
 1488              	.L135:
 1489              		.align	2
 1490              	.L134:
 1491 009c 00040240 		.word	1073873920
 1492 00a0 00040440 		.word	1074004992
 1493 00a4 08040440 		.word	1074005000
 1494              		.cfi_endproc
 1495              	.LFE25:
 1496              		.size	CapSense_DischargeExtCapacitors, .-CapSense_DischargeExtCapacitors
 1497              		.section	.text.CapSense_SetInactiveElectrodeState,"ax",%progbits
 1498              		.align	1
 1499              		.global	CapSense_SetInactiveElectrodeState
 1500              		.code	16
 1501              		.thumb_func
 1502              		.type	CapSense_SetInactiveElectrodeState, %function
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 82


 1503              	CapSense_SetInactiveElectrodeState:
 1504              	.LFB26:
2998:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2999:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
3000:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3001:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3002:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV1)
3003:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
3004:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_DischargeExtCapacitors
3005:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
3006:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3007:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
3008:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The internal function discharge available external capacitors.
3009:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3010:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
3011:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function discharge available external capacitors by connection them
3012:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  to GND using STRONG GPIO drive mode. Additionaly, the function disconnects
3013:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the capacitors from analog mux buses if connected.
3014:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Note: the function does not restore the connection to analog mux busses
3015:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and supposes that all the capacitors belong to a single device port.
3016:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3017:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param
3018:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  dischargeTime The discharge time in us.
3019:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3020:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
3021:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_DischargeExtCapacitors(uint32 dischargeTime)
3022:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
3023:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Store the pin configuration, the CMOD capacitor is connected to. */
3024:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
3025:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cmodHsiom = CY_GET_REG32(CapSense_CMOD_HSIOM_PTR) & CapSense_EXT_CAP_HSIOM_MASK_
3026:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cmodDr = CY_GET_REG32(CapSense_CMOD_DR_PTR) & CapSense_EXT_CAP_DR_MASK_CMOD;
3027:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cmodPc = CY_GET_REG32(CapSense_CMOD_PC_PTR) & CapSense_EXT_CAP_PC_MASK_CMOD;
3028:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3029:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Store the pin configuration, the CSH capacitor is connected to. */
3030:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) &&\
3031:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
3032:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 cshHsiom = CY_GET_REG32(CapSense_CSH_HSIOM_PTR) & CapSense_EXT_CAP_HSIOM_MAS
3033:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 cshDr = CY_GET_REG32(CapSense_CSH_DR_PTR) & CapSense_EXT_CAP_DR_MASK_CSH;
3034:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 cshPc = CY_GET_REG32(CapSense_CSH_PC_PTR) & CapSense_EXT_CAP_PC_MASK_CSH;
3035:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
3036:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3037:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3038:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
3039:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Store the pin configuration, the CintA capacitor is connected to. */
3040:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintAHsiom = CY_GET_REG32(CapSense_CintA_HSIOM_PTR) & CapSense_EXT_CAP_HSIOM_MAS
3041:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintADr = CY_GET_REG32(CapSense_CintA_DR_PTR) & CapSense_EXT_CAP_DR_MASK_CINTA;
3042:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintAPc = CY_GET_REG32(CapSense_CintA_PC_PTR) & CapSense_EXT_CAP_PC_MASK_CINTA;
3043:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3044:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Store the pin configuration, the CintB capacitor is connected to. */
3045:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintBHsiom = CY_GET_REG32(CapSense_CintB_HSIOM_PTR) & CapSense_EXT_CAP_HSIOM_MAS
3046:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintBDr = CY_GET_REG32(CapSense_CintB_DR_PTR) & CapSense_EXT_CAP_DR_MASK_CINTB;
3047:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintBPc = CY_GET_REG32(CapSense_CintB_PC_PTR) & CapSense_EXT_CAP_PC_MASK_CINTB;
3048:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3049:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3050:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
3051:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Disconnect the CMOD capacitor from the AMUXBUS and connect it to GND. */
3052:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_HSIOM_PTR, CapSense_EXT_CAP_HSIOM_MASK_CMOD,
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 83


3053:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_HSIOM_SEL_GPIO);
3054:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_DR_PTR, CapSense_EXT_CAP_DR_MASK_CMOD, 0u);
3055:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_PC_PTR, CapSense_EXT_CAP_PC_MASK_CMOD,
3056:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_STRONG_CFG_CMOD);
3057:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3058:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) &&\
3059:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
3060:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Disconnect the CSH capacitor from the AMUXBUS and connect it to GND. */
3061:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_HSIOM_PTR, CapSense_EXT_CAP_HSIOM_MASK_CSH,
3062:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                CapSense_HSIOM_SEL_GPIO);
3063:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_DR_PTR, CapSense_EXT_CAP_DR_MASK_CSH, 0u);
3064:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_PC_PTR, CapSense_EXT_CAP_PC_MASK_CSH,
3065:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                CapSense_EXT_CAP_PC_STRONG_CFG_CSH);
3066:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
3067:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3068:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3069:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
3070:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Disconnect the CintA capacitor from the AMUXBUS and connect it to GND. */
3071:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_HSIOM_PTR, CapSense_EXT_CAP_HSIOM_MASK_CINTA,
3072:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_HSIOM_SEL_GPIO);
3073:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_DR_PTR, CapSense_EXT_CAP_DR_MASK_CINTA, 0u);
3074:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_PC_PTR, CapSense_EXT_CAP_PC_MASK_CINTA,
3075:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_STRONG_CFG_CINTA);
3076:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3077:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Disconnect the CintB capacitor from the AMUXBUS and connect it to GND. */
3078:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_HSIOM_PTR, CapSense_EXT_CAP_HSIOM_MASK_CINTB,
3079:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_HSIOM_SEL_GPIO);
3080:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_DR_PTR, CapSense_EXT_CAP_DR_MASK_CINTB, 0u);
3081:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_PC_PTR, CapSense_EXT_CAP_PC_MASK_CINTB,
3082:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_STRONG_CFG_CINTB);
3083:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3084:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3085:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Delay to discharge external capacitors */
3086:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyDelayUs((uint16)dischargeTime);
3087:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3088:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
3089:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Restore the pin configuration, the CMOD capacitor is connected to. */
3090:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_PC_PTR,
3091:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_MASK_CMOD, cmodPc);
3092:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_DR_PTR,
3093:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_DR_MASK_CMOD, cmodDr);
3094:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_HSIOM_PTR,
3095:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_HSIOM_MASK_CMOD, cmodHsiom);
3096:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3097:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) &&\
3098:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
3099:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Restore the pin configuration, the CSH capacitor is connected to. */
3100:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_PC_PTR,
3101:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                CapSense_EXT_CAP_PC_MASK_CSH, cshPc);
3102:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_DR_PTR,
3103:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                CapSense_EXT_CAP_DR_MASK_CSH, cshDr);
3104:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_HSIOM_PTR,
3105:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                CapSense_EXT_CAP_HSIOM_MASK_CSH, cshHsiom);
3106:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
3107:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3108:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3109:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 84


3110:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Restore the pin configuration, the CintA capacitor is connected to. */
3111:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_PC_PTR,
3112:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_MASK_CINTA, cintAPc);
3113:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_DR_PTR,
3114:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_DR_MASK_CINTA, cintADr);
3115:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_HSIOM_PTR,
3116:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_HSIOM_MASK_CINTA, cintAHsiom);
3117:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3118:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Restore the pin configuration, the CintB capacitor is connected to. */
3119:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_PC_PTR,
3120:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_MASK_CINTB, cintBPc);
3121:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_DR_PTR,
3122:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_DR_MASK_CINTB, cintBDr);
3123:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_HSIOM_PTR,
3124:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_HSIOM_MASK_CINTB, cintBHsiom);
3125:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3126:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
3127:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV1) */
3128:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3129:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3130:Generated_Source\PSoC4/CapSense_Sensing.c **** #if((CapSense_ENABLE == CapSense_CSD_EN) ||\
3131:Generated_Source\PSoC4/CapSense_Sensing.c ****     (CapSense_ENABLE == CapSense_CSX_EN))
3132:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
3133:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SetInactiveElectrodeState
3134:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
3135:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3136:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
3137:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function updates the RAM data structure with the desired state of inactive
3138:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  electrodes for the specified operation mode. The state of pins is not changed
3139:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  in scope of this routine.
3140:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3141:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
3142:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function updates the following registers of RAM data structure:
3143:Generated_Source\PSoC4/CapSense_Sensing.c ****     *   - CapSense_SCAN_CSD_ISC_VALUE - Connection of inactive CSD and CSX
3144:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     electrodes during the regular CSD scan. By default, this register is initialized
3145:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     with the value of Inactive Sensor Connection combobox on the CSD Settings tab.
3146:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     The CapSense_SCAN_CSD_E value should be used as the Mode parameter
3147:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     to update this register.
3148:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3149:Generated_Source\PSoC4/CapSense_Sensing.c ****     *   - CapSense_SCAN_CSX_ISC_VALUE - Connection of inactive CSD, CSX and
3150:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     the dedicated Shield electrodes during the regular CSX scan. By default, this
3151:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     register is initialized with the value of Inactive Sensor Connection combobox
3152:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     on the CSX Settings tab.
3153:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     The CapSense_SCAN_CSX_E value should be used as the Mode parameter
3154:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     to update this register.
3155:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3156:Generated_Source\PSoC4/CapSense_Sensing.c ****     *   - CapSense_BIST_CSD_SNS_CAP_ISC_VALUE - Connection of inactive CSD and CSX
3157:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     electrodes during measurement of CSD electrodes capacitance.
3158:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     This register is initialized with the CapSense_SNS_CONNECTION_GROUND value
3159:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     by default.
3160:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     The CapSense_BIST_CSD_SNS_CAP_E value should be used as the Mode parameter
3161:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     to update this register.
3162:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3163:Generated_Source\PSoC4/CapSense_Sensing.c ****     *   - CapSense_BIST_CSX_SNS_CAP_ISC_VALUE - Connection of inactive CSD, CSX and
3164:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     the dedicated Shield electrodes during measurement of CSX electrodes (Tx and Rx)
3165:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     capacitance. This register is initialized with the CapSense_SNS_CONNECTION_GROUND
3166:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     value by default.
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 85


3167:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     The CapSense_BIST_CSX_SNS_CAP_E value should be used as the Mode parameter
3168:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     to update this register.
3169:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3170:Generated_Source\PSoC4/CapSense_Sensing.c ****     *   - CapSense_BIST_CSD_SH_CAP_ISC_VALUE - Connection of inactive CSD and CSX electrodes
3171:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     measurement of dedicated Shield  electrodes capacitance. This register is initialized wit
3172:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     the CapSense_SNS_CONNECTION_GROUND value by default.
3173:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     The CapSense_BIST_CSD_SH_CAP_E value should be used as the Mode parameter
3174:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     to update this register.
3175:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3176:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param
3177:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  mode Operation mode, the state of inactive sensors should be configured for.
3178:Generated_Source\PSoC4/CapSense_Sensing.c ****     *       This parameter can take the following values:
3179:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        - CapSense_SCAN_CSD_E - Regular CSD scan.
3180:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        - CapSense_SCAN_CSX_E - Regular CSX scan.
3181:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        - CapSense_BIST_CSD_SNS_CAP_E - Measurement of the CSD sensor capacitance.
3182:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        - CapSense_BIST_CSX_SNS_CAP_E - Measurement of the CSX electrode capacitance.
3183:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        - CapSense_BIST_CSD_SH_CAP_E - Measurement of the dedicated CSD Shield
3184:Generated_Source\PSoC4/CapSense_Sensing.c ****     *          electrode capacitance.
3185:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3186:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param
3187:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  state The desired state of inactive sensors.
3188:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        This parameter can take the following values:
3189:Generated_Source\PSoC4/CapSense_Sensing.c ****     *         - CapSense_SNS_CONNECTION_GROUND - Inactive sensors are connected to the ground.
3190:Generated_Source\PSoC4/CapSense_Sensing.c ****     *         - CapSense_SNS_CONNECTION_HIGHZ - Inactive sensors are floating (not
3191:Generated_Source\PSoC4/CapSense_Sensing.c ****     *           connected to GND or Shield).
3192:Generated_Source\PSoC4/CapSense_Sensing.c ****     *         - CapSense_SNS_CONNECTION_SHIELD - Inactive sensors are connected to the shield.
3193:Generated_Source\PSoC4/CapSense_Sensing.c ****     *           This option is available only if the Enable shield electrode check box is set.
3194:Generated_Source\PSoC4/CapSense_Sensing.c ****     *           At least one dedicated shield electrode is required to use the
3195:Generated_Source\PSoC4/CapSense_Sensing.c ****     *           CapSense_SNS_CONNECTION_SHIELD option for the CapSense_BIST_CSD_SH_CAP_E
3196:Generated_Source\PSoC4/CapSense_Sensing.c ****     *           operation mode.
3197:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3198:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
3199:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the operation:
3200:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_SUCCESS - The operation was successfully completed.
3201:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_PARAM - The input parameter is invalid.
3202:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3203:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
3204:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32_t CapSense_SetInactiveElectrodeState(CapSense_OPERATION_MODE_ENUM mode, uint32_t state)
3205:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1505              		.loc 1 3205 0
 1506              		.cfi_startproc
 1507              		@ args = 0, pretend = 0, frame = 0
 1508              		@ frame_needed = 0, uses_anonymous_args = 0
 1509              		@ link register save eliminated.
 1510              	.LVL171:
3206:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32_t retVal = CYRET_SUCCESS;
3207:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3208:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch(mode)
 1511              		.loc 1 3208 0
 1512 0000 0028     		cmp	r0, #0
 1513 0002 03D1     		bne	.L140
3209:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
3210:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_ENABLE == CapSense_CSD_EN)
3211:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SCAN_CSD_E:
3212:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.scanCsdISC = (uint8)state;
 1514              		.loc 1 3212 0
 1515 0004 024B     		ldr	r3, .L141
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 86


 1516 0006 AC33     		adds	r3, r3, #172
 1517 0008 1970     		strb	r1, [r3]
3213:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 1518              		.loc 1 3213 0
 1519 000a 00E0     		b	.L137
 1520              	.L140:
3214:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3215:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3216:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_ENABLE == CapSense_CSX_EN)
3217:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SCAN_CSX_E:
3218:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.scanCsxISC = (uint8)state;
3219:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
3220:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3221:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3222:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if((CapSense_ENABLE == CapSense_SELF_TEST_EN) &&\
3223:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_TST_SNS_CAP_EN) &&\
3224:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_CSD_EN))
3225:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_BIST_CSD_SNS_CAP_E:
3226:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.selfTestConfig.bistCsdSnsCapISC = (uint8)state;
3227:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
3228:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3229:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3230:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if((CapSense_ENABLE == CapSense_SELF_TEST_EN) &&\
3231:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_TST_SNS_CAP_EN) &&\
3232:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_CSX_EN))
3233:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_BIST_CSX_SNS_CAP_E:
3234:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.selfTestConfig.bistCsxSnsCapISC = (uint8)state;
3235:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
3236:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3237:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3238:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if((CapSense_ENABLE == CapSense_SELF_TEST_EN) &&\
3239:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_TST_SH_CAP_EN) &&\
3240:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_CSD_EN) &&\
3241:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_CSD_SHIELD_EN))
3242:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_BIST_CSD_SH_CAP_E:
3243:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if((CapSense_CSD_TOTAL_SHIELD_COUNT == 0u) &&
3244:Generated_Source\PSoC4/CapSense_Sensing.c ****                    (CapSense_SNS_CONNECTION_SHIELD != state))
3245:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
3246:Generated_Source\PSoC4/CapSense_Sensing.c ****                     retVal = CYRET_BAD_PARAM;
3247:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
3248:Generated_Source\PSoC4/CapSense_Sensing.c ****                 else
3249:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
3250:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_dsRam.selfTestConfig.bistCsdShCapISC = (uint8)state;
3251:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
3252:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
3253:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3254:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3255:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
3256:Generated_Source\PSoC4/CapSense_Sensing.c ****             CYASSERT(0u);
3257:Generated_Source\PSoC4/CapSense_Sensing.c ****             retVal = CYRET_BAD_PARAM;
 1521              		.loc 1 3257 0
 1522 000c 0120     		movs	r0, #1
 1523              	.LVL172:
 1524              	.L137:
3258:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
3259:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
3260:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 87


3261:Generated_Source\PSoC4/CapSense_Sensing.c ****         return(retVal);
3262:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1525              		.loc 1 3262 0
 1526              		@ sp needed
 1527 000e 7047     		bx	lr
 1528              	.L142:
 1529              		.align	2
 1530              	.L141:
 1531 0010 00000000 		.word	CapSense_dsRam
 1532              		.cfi_endproc
 1533              	.LFE26:
 1534              		.size	CapSense_SetInactiveElectrodeState, .-CapSense_SetInactiveElectrodeState
 1535              		.section	.text.CapSense_WriteBitsSafe,"ax",%progbits
 1536              		.align	1
 1537              		.global	CapSense_WriteBitsSafe
 1538              		.code	16
 1539              		.thumb_func
 1540              		.type	CapSense_WriteBitsSafe, %function
 1541              	CapSense_WriteBitsSafe:
 1542              	.LFB27:
3263:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) ||\
3264:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSX_EN)) */
3265:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3266:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3267:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
3268:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_WriteBitsSafe
3269:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
3270:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3271:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
3272:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Writes a field in port-pin register, specified by the mask parameter
3273:Generated_Source\PSoC4/CapSense_Sensing.c **** *  with the specified value in critical section.
3274:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3275:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
3276:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Writes a field in port-pin register, specified by the mask parameter
3277:Generated_Source\PSoC4/CapSense_Sensing.c **** *  with the specified value in critical section.
3278:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3279:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param regPtr
3280:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies a pointer to port-pin register.
3281:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3282:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param mask
3283:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies bits to be modified.
3284:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3285:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param value
3286:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies a value to be written to the register.
3287:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3288:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
3289:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_WriteBitsSafe(reg32 * regPtr, uint32 mask, uint32 value)
3290:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 1543              		.loc 1 3290 0
 1544              		.cfi_startproc
 1545              		@ args = 0, pretend = 0, frame = 0
 1546              		@ frame_needed = 0, uses_anonymous_args = 0
 1547              	.LVL173:
 1548 0000 70B5     		push	{r4, r5, r6, lr}
 1549              		.cfi_def_cfa_offset 16
 1550              		.cfi_offset 4, -16
 1551              		.cfi_offset 5, -12
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 88


 1552              		.cfi_offset 6, -8
 1553              		.cfi_offset 14, -4
 1554              		.loc 1 3290 0
 1555 0002 0500     		movs	r5, r0
 1556 0004 1400     		movs	r4, r2
 1557 0006 0E00     		movs	r6, r1
3291:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 interruptState = CyEnterCriticalSection();
 1558              		.loc 1 3291 0
 1559 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1560              	.LVL174:
3292:Generated_Source\PSoC4/CapSense_Sensing.c ****     (* regPtr) = ((* regPtr) & ((uint32)~mask)) | (value & mask);
 1561              		.loc 1 3292 0
 1562 000c 2B68     		ldr	r3, [r5]
3293:Generated_Source\PSoC4/CapSense_Sensing.c ****     CyExitCriticalSection(interruptState);
3294:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 1563              		.loc 1 3294 0
 1564              		@ sp needed
3292:Generated_Source\PSoC4/CapSense_Sensing.c ****     (* regPtr) = ((* regPtr) & ((uint32)~mask)) | (value & mask);
 1565              		.loc 1 3292 0
 1566 000e 5C40     		eors	r4, r3
 1567              	.LVL175:
 1568 0010 3440     		ands	r4, r6
 1569 0012 5C40     		eors	r4, r3
 1570 0014 2C60     		str	r4, [r5]
3293:Generated_Source\PSoC4/CapSense_Sensing.c ****     CyExitCriticalSection(interruptState);
 1571              		.loc 1 3293 0
 1572 0016 FFF7FEFF 		bl	CyExitCriticalSection
 1573              	.LVL176:
 1574              	.LVL177:
 1575              	.LVL178:
 1576              		.loc 1 3294 0
 1577 001a 70BD     		pop	{r4, r5, r6, pc}
 1578              		.cfi_endproc
 1579              	.LFE27:
 1580              		.size	CapSense_WriteBitsSafe, .-CapSense_WriteBitsSafe
 1581              		.section	.text.CapSense_SsSwitchSensingMode,"ax",%progbits
 1582              		.align	1
 1583              		.global	CapSense_SsSwitchSensingMode
 1584              		.code	16
 1585              		.thumb_func
 1586              		.type	CapSense_SsSwitchSensingMode, %function
 1587              	CapSense_SsSwitchSensingMode:
 1588              	.LFB10:
1068:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_currentSenseMethod != mode)
 1589              		.loc 1 1068 0
 1590              		.cfi_startproc
 1591              		@ args = 0, pretend = 0, frame = 0
 1592              		@ frame_needed = 0, uses_anonymous_args = 0
 1593              	.LVL179:
 1594 0000 70B5     		push	{r4, r5, r6, lr}
 1595              		.cfi_def_cfa_offset 16
 1596              		.cfi_offset 4, -16
 1597              		.cfi_offset 5, -12
 1598              		.cfi_offset 6, -8
 1599              		.cfi_offset 14, -4
1069:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1600              		.loc 1 1069 0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 89


 1601 0002 104D     		ldr	r5, .L150
1068:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_currentSenseMethod != mode)
 1602              		.loc 1 1068 0
 1603 0004 0400     		movs	r4, r0
1069:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1604              		.loc 1 1069 0
 1605 0006 2A78     		ldrb	r2, [r5]
 1606 0008 8242     		cmp	r2, r0
 1607 000a 19D0     		beq	.L144
1072:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1608              		.loc 1 1072 0
 1609 000c 012A     		cmp	r2, #1
 1610 000e 0CD1     		bne	.L147
 1611              	.LBB40:
 1612              	.LBB41:
 961:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue &= (uint32)(~CapSense_SW_REFGEN_SEL_SW_IAIB_MASK);
 1613              		.loc 1 961 0
 1614 0010 0D49     		ldr	r1, .L150+4
 968:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1615              		.loc 1 968 0
 1616 0012 0E48     		ldr	r0, .L150+8
 1617              	.LVL180:
 961:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue &= (uint32)(~CapSense_SW_REFGEN_SEL_SW_IAIB_MASK);
 1618              		.loc 1 961 0
 1619 0014 0B68     		ldr	r3, [r1]
 1620              	.LVL181:
 962:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_SW_REFGEN_SEL_PTR, newRegValue);
 1621              		.loc 1 962 0
 1622 0016 9343     		bics	r3, r2
 1623              	.LVL182:
 963:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSDV2) && \
 1624              		.loc 1 963 0
 1625 0018 0B60     		str	r3, [r1]
 968:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1626              		.loc 1 968 0
 1627 001a 0022     		movs	r2, #0
 1628 001c F021     		movs	r1, #240
 1629 001e FFF7FEFF 		bl	CapSense_WriteBitsSafe
 1630              	.LVL183:
 971:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1631              		.loc 1 971 0
 1632 0022 FFF7FEFF 		bl	CapSense_SsCSDElectrodeCheck
 1633              	.LVL184:
 981:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 1634              		.loc 1 981 0
 1635 0026 FFF7FEFF 		bl	CapSense_SsCSDDisableShieldElectrodes
 1636              	.LVL185:
 1637              	.L147:
 1638              	.LBE41:
 1639              	.LBE40:
1105:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1640              		.loc 1 1105 0
 1641 002a 012C     		cmp	r4, #1
 1642 002c 03D1     		bne	.L148
1109:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSD_E;
 1643              		.loc 1 1109 0
 1644 002e FFF7FEFF 		bl	CapSense_SsCSDInitialize
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 90


 1645              	.LVL186:
1110:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 1646              		.loc 1 1110 0
 1647 0032 2C70     		strb	r4, [r5]
 1648 0034 04E0     		b	.L144
 1649              	.L148:
1113:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1650              		.loc 1 1113 0
 1651 0036 023C     		subs	r4, r4, #2
 1652 0038 022C     		cmp	r4, #2
 1653 003a 01D9     		bls	.L144
 1654              	.LVL187:
 1655              	.LBB42:
 1656              	.LBB43:
1138:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1657              		.loc 1 1138 0
 1658 003c 0023     		movs	r3, #0
 1659 003e 2B70     		strb	r3, [r5]
 1660              	.LVL188:
 1661              	.L144:
 1662              	.LBE43:
 1663              	.LBE42:
1141:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1664              		.loc 1 1141 0
 1665              		@ sp needed
 1666 0040 70BD     		pop	{r4, r5, r6, pc}
 1667              	.L151:
 1668 0042 C046     		.align	2
 1669              	.L150:
 1670 0044 00000000 		.word	.LANCHOR0
 1671 0048 A8020B40 		.word	1074463400
 1672 004c 00040240 		.word	1073873920
 1673              		.cfi_endproc
 1674              	.LFE10:
 1675              		.size	CapSense_SsSwitchSensingMode, .-CapSense_SsSwitchSensingMode
 1676              		.section	.text.CapSense_SsInitialize,"ax",%progbits
 1677              		.align	1
 1678              		.global	CapSense_SsInitialize
 1679              		.code	16
 1680              		.thumb_func
 1681              		.type	CapSense_SsInitialize, %function
 1682              	CapSense_SsInitialize:
 1683              	.LFB7:
 708:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus initStatus;
 1684              		.loc 1 708 0
 1685              		.cfi_startproc
 1686              		@ args = 0, pretend = 0, frame = 0
 1687              		@ frame_needed = 0, uses_anonymous_args = 0
 1688              	.LVL189:
 1689 0000 10B5     		push	{r4, lr}
 1690              		.cfi_def_cfa_offset 8
 1691              		.cfi_offset 4, -8
 1692              		.cfi_offset 14, -4
 753:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1693              		.loc 1 753 0
 1694 0002 0024     		movs	r4, #0
 747:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) ||\
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 91


 1695              		.loc 1 747 0
 1696 0004 FFF7FEFF 		bl	CapSense_SsInitializeSourceSenseClk
 1697              	.LVL190:
 752:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_dsRam.scanCurrentISC = CapSense_SNS_CONNECTION_GROUND;
 1698              		.loc 1 752 0
 1699 0008 0020     		movs	r0, #0
 1700 000a FFF7FEFF 		bl	CapSense_SsSetAllIOsState
 1701              	.LVL191:
 753:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1702              		.loc 1 753 0
 1703 000e 054B     		ldr	r3, .L153
 755:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_MANY_SENSE_MODES_EN)
 1704              		.loc 1 755 0
 1705 0010 2000     		movs	r0, r4
 753:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1706              		.loc 1 753 0
 1707 0012 AD33     		adds	r3, r3, #173
 1708 0014 1C70     		strb	r4, [r3]
 755:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_MANY_SENSE_MODES_EN)
 1709              		.loc 1 755 0
 1710 0016 FFF7FEFF 		bl	CapSense_SsSwitchSensingMode
 1711              	.LVL192:
 758:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSX_EN)
 1712              		.loc 1 758 0
 1713 001a 0120     		movs	r0, #1
 1714 001c FFF7FEFF 		bl	CapSense_SsSwitchSensingMode
 1715              	.LVL193:
 769:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1716              		.loc 1 769 0
 1717              		@ sp needed
 1718 0020 2000     		movs	r0, r4
 1719 0022 10BD     		pop	{r4, pc}
 1720              	.L154:
 1721              		.align	2
 1722              	.L153:
 1723 0024 00000000 		.word	CapSense_dsRam
 1724              		.cfi_endproc
 1725              	.LFE7:
 1726              		.size	CapSense_SsInitialize, .-CapSense_SsInitialize
 1727              		.global	CapSense_idacGainTable
 1728              		.comm	CapSense_curSnsIOPtr,4,4
 1729              		.comm	CapSense_curRamSnsPtr,4,4
 1730              		.global	CapSense_requestScanAllWidget
 1731              		.global	CapSense_sensorIndex
 1732              		.global	CapSense_widgetIndex
 1733              		.global	CapSense_scanFreqIndex
 1734              		.global	CapSense_currentSenseMethod
 1735              		.section	.rodata
 1736              		.align	2
 1737              		.type	CapSense_idacGainTable, %object
 1738              		.size	CapSense_idacGainTable, 48
 1739              	CapSense_idacGainTable:
 1740 0000 00000001 		.word	16777216
 1741 0004 7C920000 		.word	37500
 1742 0008 00000003 		.word	50331648
 1743 000c F8240100 		.word	75000
 1744 0010 00004001 		.word	20971520
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 92


 1745 0014 E0930400 		.word	300000
 1746 0018 00004003 		.word	54525952
 1747 001c C0270900 		.word	600000
 1748 0020 00008001 		.word	25165824
 1749 0024 009F2400 		.word	2400000
 1750 0028 00008003 		.word	58720256
 1751 002c 003E4900 		.word	4800000
 1752              		.type	CapSense_scanFreqIndex, %object
 1753              		.size	CapSense_scanFreqIndex, 1
 1754              	CapSense_scanFreqIndex:
 1755 0030 00       		.space	1
 1756              		.bss
 1757              		.set	.LANCHOR0,. + 0
 1758              		.type	CapSense_currentSenseMethod, %object
 1759              		.size	CapSense_currentSenseMethod, 1
 1760              	CapSense_currentSenseMethod:
 1761 0000 00       		.space	1
 1762              		.type	CapSense_requestScanAllWidget, %object
 1763              		.size	CapSense_requestScanAllWidget, 1
 1764              	CapSense_requestScanAllWidget:
 1765 0001 00       		.space	1
 1766              		.type	CapSense_widgetIndex, %object
 1767              		.size	CapSense_widgetIndex, 1
 1768              	CapSense_widgetIndex:
 1769 0002 00       		.space	1
 1770              		.type	CapSense_sensorIndex, %object
 1771              		.size	CapSense_sensorIndex, 1
 1772              	CapSense_sensorIndex:
 1773 0003 00       		.space	1
 1774              		.text
 1775              	.Letext0:
 1776              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1777              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1778              		.file 4 "Generated_Source\\PSoC4/cytypes.h"
 1779              		.file 5 "Generated_Source\\PSoC4\\CapSense_Configuration.h"
 1780              		.file 6 "Generated_Source\\PSoC4\\CapSense_Structure.h"
 1781              		.file 7 "Generated_Source\\PSoC4\\CapSense_Sensing.h"
 1782              		.file 8 "Generated_Source\\PSoC4\\CapSense_SensingCSD_LL.h"
 1783              		.file 9 "Generated_Source\\PSoC4/CyLib.h"
 1784              		.file 10 "Generated_Source\\PSoC4\\CapSense_ISR.h"
 1785              		.section	.debug_info,"",%progbits
 1786              	.Ldebug_info0:
 1787 0000 16140000 		.4byte	0x1416
 1788 0004 0400     		.2byte	0x4
 1789 0006 00000000 		.4byte	.Ldebug_abbrev0
 1790 000a 04       		.byte	0x4
 1791 000b 01       		.uleb128 0x1
 1792 000c 6F090000 		.4byte	.LASF200
 1793 0010 0C       		.byte	0xc
 1794 0011 2E090000 		.4byte	.LASF201
 1795 0015 E8060000 		.4byte	.LASF202
 1796 0019 50000000 		.4byte	.Ldebug_ranges0+0x50
 1797 001d 00000000 		.4byte	0
 1798 0021 00000000 		.4byte	.Ldebug_line0
 1799 0025 02       		.uleb128 0x2
 1800 0026 01       		.byte	0x1
 1801 0027 06       		.byte	0x6
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 93


 1802 0028 170C0000 		.4byte	.LASF0
 1803 002c 02       		.uleb128 0x2
 1804 002d 01       		.byte	0x1
 1805 002e 08       		.byte	0x8
 1806 002f F20A0000 		.4byte	.LASF1
 1807 0033 02       		.uleb128 0x2
 1808 0034 02       		.byte	0x2
 1809 0035 05       		.byte	0x5
 1810 0036 3D080000 		.4byte	.LASF2
 1811 003a 02       		.uleb128 0x2
 1812 003b 02       		.byte	0x2
 1813 003c 07       		.byte	0x7
 1814 003d 3F0C0000 		.4byte	.LASF3
 1815 0041 02       		.uleb128 0x2
 1816 0042 04       		.byte	0x4
 1817 0043 05       		.byte	0x5
 1818 0044 75080000 		.4byte	.LASF4
 1819 0048 03       		.uleb128 0x3
 1820 0049 000B0000 		.4byte	.LASF9
 1821 004d 02       		.byte	0x2
 1822 004e 41       		.byte	0x41
 1823 004f 53000000 		.4byte	0x53
 1824 0053 02       		.uleb128 0x2
 1825 0054 04       		.byte	0x4
 1826 0055 07       		.byte	0x7
 1827 0056 360A0000 		.4byte	.LASF5
 1828 005a 02       		.uleb128 0x2
 1829 005b 08       		.byte	0x8
 1830 005c 05       		.byte	0x5
 1831 005d 84050000 		.4byte	.LASF6
 1832 0061 02       		.uleb128 0x2
 1833 0062 08       		.byte	0x8
 1834 0063 07       		.byte	0x7
 1835 0064 8F020000 		.4byte	.LASF7
 1836 0068 04       		.uleb128 0x4
 1837 0069 04       		.byte	0x4
 1838 006a 05       		.byte	0x5
 1839 006b 696E7400 		.ascii	"int\000"
 1840 006f 02       		.uleb128 0x2
 1841 0070 04       		.byte	0x4
 1842 0071 07       		.byte	0x7
 1843 0072 BA000000 		.4byte	.LASF8
 1844 0076 03       		.uleb128 0x3
 1845 0077 00020000 		.4byte	.LASF10
 1846 007b 03       		.byte	0x3
 1847 007c 30       		.byte	0x30
 1848 007d 48000000 		.4byte	0x48
 1849 0081 05       		.uleb128 0x5
 1850 0082 AF0C0000 		.4byte	.LASF11
 1851 0086 04       		.byte	0x4
 1852 0087 E401     		.2byte	0x1e4
 1853 0089 2C000000 		.4byte	0x2c
 1854 008d 05       		.uleb128 0x5
 1855 008e 73040000 		.4byte	.LASF12
 1856 0092 04       		.byte	0x4
 1857 0093 E501     		.2byte	0x1e5
 1858 0095 3A000000 		.4byte	0x3a
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 94


 1859 0099 05       		.uleb128 0x5
 1860 009a AD060000 		.4byte	.LASF13
 1861 009e 04       		.byte	0x4
 1862 009f E601     		.2byte	0x1e6
 1863 00a1 53000000 		.4byte	0x53
 1864 00a5 02       		.uleb128 0x2
 1865 00a6 04       		.byte	0x4
 1866 00a7 04       		.byte	0x4
 1867 00a8 5A020000 		.4byte	.LASF14
 1868 00ac 02       		.uleb128 0x2
 1869 00ad 08       		.byte	0x8
 1870 00ae 04       		.byte	0x4
 1871 00af B50C0000 		.4byte	.LASF15
 1872 00b3 02       		.uleb128 0x2
 1873 00b4 01       		.byte	0x1
 1874 00b5 08       		.byte	0x8
 1875 00b6 01040000 		.4byte	.LASF16
 1876 00ba 05       		.uleb128 0x5
 1877 00bb C80A0000 		.4byte	.LASF17
 1878 00bf 04       		.byte	0x4
 1879 00c0 8602     		.2byte	0x286
 1880 00c2 53000000 		.4byte	0x53
 1881 00c6 06       		.uleb128 0x6
 1882 00c7 81000000 		.4byte	0x81
 1883 00cb 05       		.uleb128 0x5
 1884 00cc B4070000 		.4byte	.LASF18
 1885 00d0 04       		.byte	0x4
 1886 00d1 9002     		.2byte	0x290
 1887 00d3 D7000000 		.4byte	0xd7
 1888 00d7 06       		.uleb128 0x6
 1889 00d8 99000000 		.4byte	0x99
 1890 00dc 05       		.uleb128 0x5
 1891 00dd 6A060000 		.4byte	.LASF19
 1892 00e1 04       		.byte	0x4
 1893 00e2 A002     		.2byte	0x2a0
 1894 00e4 E8000000 		.4byte	0xe8
 1895 00e8 07       		.uleb128 0x7
 1896 00e9 04       		.byte	0x4
 1897 00ea EE000000 		.4byte	0xee
 1898 00ee 08       		.uleb128 0x8
 1899 00ef 05       		.uleb128 0x5
 1900 00f0 4E0B0000 		.4byte	.LASF20
 1901 00f4 05       		.byte	0x5
 1902 00f5 2E01     		.2byte	0x12e
 1903 00f7 8D000000 		.4byte	0x8d
 1904 00fb 05       		.uleb128 0x5
 1905 00fc FE040000 		.4byte	.LASF21
 1906 0100 05       		.byte	0x5
 1907 0101 3201     		.2byte	0x132
 1908 0103 81000000 		.4byte	0x81
 1909 0107 09       		.uleb128 0x9
 1910 0108 01       		.byte	0x1
 1911 0109 2C000000 		.4byte	0x2c
 1912 010d 06       		.byte	0x6
 1913 010e 70       		.byte	0x70
 1914 010f 32010000 		.4byte	0x132
 1915 0113 0A       		.uleb128 0xa
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 95


 1916 0114 A5000000 		.4byte	.LASF22
 1917 0118 00       		.byte	0
 1918 0119 0A       		.uleb128 0xa
 1919 011a 42010000 		.4byte	.LASF23
 1920 011e 01       		.byte	0x1
 1921 011f 0A       		.uleb128 0xa
 1922 0120 97080000 		.4byte	.LASF24
 1923 0124 02       		.byte	0x2
 1924 0125 0A       		.uleb128 0xa
 1925 0126 770B0000 		.4byte	.LASF25
 1926 012a 03       		.byte	0x3
 1927 012b 0A       		.uleb128 0xa
 1928 012c 8C070000 		.4byte	.LASF26
 1929 0130 04       		.byte	0x4
 1930 0131 00       		.byte	0
 1931 0132 03       		.uleb128 0x3
 1932 0133 37050000 		.4byte	.LASF27
 1933 0137 06       		.byte	0x6
 1934 0138 76       		.byte	0x76
 1935 0139 07010000 		.4byte	0x107
 1936 013d 0B       		.uleb128 0xb
 1937 013e 10       		.byte	0x10
 1938 013f 06       		.byte	0x6
 1939 0140 AD       		.byte	0xad
 1940 0141 CA010000 		.4byte	0x1ca
 1941 0145 0C       		.uleb128 0xc
 1942 0146 BF040000 		.4byte	.LASF28
 1943 014a 06       		.byte	0x6
 1944 014b B2       		.byte	0xb2
 1945 014c 8D000000 		.4byte	0x8d
 1946 0150 00       		.byte	0
 1947 0151 0C       		.uleb128 0xc
 1948 0152 790A0000 		.4byte	.LASF29
 1949 0156 06       		.byte	0x6
 1950 0157 B7       		.byte	0xb7
 1951 0158 EF000000 		.4byte	0xef
 1952 015c 02       		.byte	0x2
 1953 015d 0C       		.uleb128 0xc
 1954 015e F9030000 		.4byte	.LASF30
 1955 0162 06       		.byte	0x6
 1956 0163 BC       		.byte	0xbc
 1957 0164 81000000 		.4byte	0x81
 1958 0168 04       		.byte	0x4
 1959 0169 0C       		.uleb128 0xc
 1960 016a 56060000 		.4byte	.LASF31
 1961 016e 06       		.byte	0x6
 1962 016f C1       		.byte	0xc1
 1963 0170 81000000 		.4byte	0x81
 1964 0174 05       		.byte	0x5
 1965 0175 0C       		.uleb128 0xc
 1966 0176 90030000 		.4byte	.LASF32
 1967 017a 06       		.byte	0x6
 1968 017b C7       		.byte	0xc7
 1969 017c 81000000 		.4byte	0x81
 1970 0180 06       		.byte	0x6
 1971 0181 0C       		.uleb128 0xc
 1972 0182 B3050000 		.4byte	.LASF33
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 96


 1973 0186 06       		.byte	0x6
 1974 0187 CD       		.byte	0xcd
 1975 0188 81000000 		.4byte	0x81
 1976 018c 07       		.byte	0x7
 1977 018d 0C       		.uleb128 0xc
 1978 018e CA030000 		.4byte	.LASF34
 1979 0192 06       		.byte	0x6
 1980 0193 D4       		.byte	0xd4
 1981 0194 FB000000 		.4byte	0xfb
 1982 0198 08       		.byte	0x8
 1983 0199 0C       		.uleb128 0xc
 1984 019a 570A0000 		.4byte	.LASF35
 1985 019e 06       		.byte	0x6
 1986 019f DB       		.byte	0xdb
 1987 01a0 CA010000 		.4byte	0x1ca
 1988 01a4 09       		.byte	0x9
 1989 01a5 0C       		.uleb128 0xc
 1990 01a6 29020000 		.4byte	.LASF36
 1991 01aa 06       		.byte	0x6
 1992 01ab E0       		.byte	0xe0
 1993 01ac 81000000 		.4byte	0x81
 1994 01b0 0A       		.byte	0xa
 1995 01b1 0C       		.uleb128 0xc
 1996 01b2 C60B0000 		.4byte	.LASF37
 1997 01b6 06       		.byte	0x6
 1998 01b7 E8       		.byte	0xe8
 1999 01b8 8D000000 		.4byte	0x8d
 2000 01bc 0C       		.byte	0xc
 2001 01bd 0C       		.uleb128 0xc
 2002 01be FA070000 		.4byte	.LASF38
 2003 01c2 06       		.byte	0x6
 2004 01c3 ED       		.byte	0xed
 2005 01c4 81000000 		.4byte	0x81
 2006 01c8 0E       		.byte	0xe
 2007 01c9 00       		.byte	0
 2008 01ca 0D       		.uleb128 0xd
 2009 01cb 81000000 		.4byte	0x81
 2010 01cf DA010000 		.4byte	0x1da
 2011 01d3 0E       		.uleb128 0xe
 2012 01d4 DA010000 		.4byte	0x1da
 2013 01d8 00       		.byte	0
 2014 01d9 00       		.byte	0
 2015 01da 02       		.uleb128 0x2
 2016 01db 04       		.byte	0x4
 2017 01dc 07       		.byte	0x7
 2018 01dd 250A0000 		.4byte	.LASF39
 2019 01e1 03       		.uleb128 0x3
 2020 01e2 88060000 		.4byte	.LASF40
 2021 01e6 06       		.byte	0x6
 2022 01e7 EE       		.byte	0xee
 2023 01e8 3D010000 		.4byte	0x13d
 2024 01ec 0B       		.uleb128 0xb
 2025 01ed 10       		.byte	0x10
 2026 01ee 06       		.byte	0x6
 2027 01ef F3       		.byte	0xf3
 2028 01f0 82020000 		.4byte	0x282
 2029 01f4 0C       		.uleb128 0xc
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 97


 2030 01f5 BF040000 		.4byte	.LASF28
 2031 01f9 06       		.byte	0x6
 2032 01fa F8       		.byte	0xf8
 2033 01fb 8D000000 		.4byte	0x8d
 2034 01ff 00       		.byte	0
 2035 0200 0C       		.uleb128 0xc
 2036 0201 790A0000 		.4byte	.LASF29
 2037 0205 06       		.byte	0x6
 2038 0206 FD       		.byte	0xfd
 2039 0207 EF000000 		.4byte	0xef
 2040 020b 02       		.byte	0x2
 2041 020c 0F       		.uleb128 0xf
 2042 020d F9030000 		.4byte	.LASF30
 2043 0211 06       		.byte	0x6
 2044 0212 0201     		.2byte	0x102
 2045 0214 81000000 		.4byte	0x81
 2046 0218 04       		.byte	0x4
 2047 0219 0F       		.uleb128 0xf
 2048 021a 56060000 		.4byte	.LASF31
 2049 021e 06       		.byte	0x6
 2050 021f 0701     		.2byte	0x107
 2051 0221 81000000 		.4byte	0x81
 2052 0225 05       		.byte	0x5
 2053 0226 0F       		.uleb128 0xf
 2054 0227 90030000 		.4byte	.LASF32
 2055 022b 06       		.byte	0x6
 2056 022c 0D01     		.2byte	0x10d
 2057 022e 81000000 		.4byte	0x81
 2058 0232 06       		.byte	0x6
 2059 0233 0F       		.uleb128 0xf
 2060 0234 B3050000 		.4byte	.LASF33
 2061 0238 06       		.byte	0x6
 2062 0239 1301     		.2byte	0x113
 2063 023b 81000000 		.4byte	0x81
 2064 023f 07       		.byte	0x7
 2065 0240 0F       		.uleb128 0xf
 2066 0241 CA030000 		.4byte	.LASF34
 2067 0245 06       		.byte	0x6
 2068 0246 1A01     		.2byte	0x11a
 2069 0248 FB000000 		.4byte	0xfb
 2070 024c 08       		.byte	0x8
 2071 024d 0F       		.uleb128 0xf
 2072 024e 570A0000 		.4byte	.LASF35
 2073 0252 06       		.byte	0x6
 2074 0253 2101     		.2byte	0x121
 2075 0255 CA010000 		.4byte	0x1ca
 2076 0259 09       		.byte	0x9
 2077 025a 0F       		.uleb128 0xf
 2078 025b 29020000 		.4byte	.LASF36
 2079 025f 06       		.byte	0x6
 2080 0260 2601     		.2byte	0x126
 2081 0262 81000000 		.4byte	0x81
 2082 0266 0A       		.byte	0xa
 2083 0267 0F       		.uleb128 0xf
 2084 0268 C60B0000 		.4byte	.LASF37
 2085 026c 06       		.byte	0x6
 2086 026d 2E01     		.2byte	0x12e
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 98


 2087 026f 8D000000 		.4byte	0x8d
 2088 0273 0C       		.byte	0xc
 2089 0274 0F       		.uleb128 0xf
 2090 0275 FA070000 		.4byte	.LASF38
 2091 0279 06       		.byte	0x6
 2092 027a 3301     		.2byte	0x133
 2093 027c 81000000 		.4byte	0x81
 2094 0280 0E       		.byte	0xe
 2095 0281 00       		.byte	0
 2096 0282 05       		.uleb128 0x5
 2097 0283 AA0A0000 		.4byte	.LASF41
 2098 0287 06       		.byte	0x6
 2099 0288 3401     		.2byte	0x134
 2100 028a EC010000 		.4byte	0x1ec
 2101 028e 10       		.uleb128 0x10
 2102 028f 12       		.byte	0x12
 2103 0290 06       		.byte	0x6
 2104 0291 3901     		.2byte	0x139
 2105 0293 34030000 		.4byte	0x334
 2106 0297 0F       		.uleb128 0xf
 2107 0298 BF040000 		.4byte	.LASF28
 2108 029c 06       		.byte	0x6
 2109 029d 3E01     		.2byte	0x13e
 2110 029f 8D000000 		.4byte	0x8d
 2111 02a3 00       		.byte	0
 2112 02a4 0F       		.uleb128 0xf
 2113 02a5 790A0000 		.4byte	.LASF29
 2114 02a9 06       		.byte	0x6
 2115 02aa 4301     		.2byte	0x143
 2116 02ac EF000000 		.4byte	0xef
 2117 02b0 02       		.byte	0x2
 2118 02b1 0F       		.uleb128 0xf
 2119 02b2 F9030000 		.4byte	.LASF30
 2120 02b6 06       		.byte	0x6
 2121 02b7 4801     		.2byte	0x148
 2122 02b9 81000000 		.4byte	0x81
 2123 02bd 04       		.byte	0x4
 2124 02be 0F       		.uleb128 0xf
 2125 02bf 56060000 		.4byte	.LASF31
 2126 02c3 06       		.byte	0x6
 2127 02c4 4D01     		.2byte	0x14d
 2128 02c6 81000000 		.4byte	0x81
 2129 02ca 05       		.byte	0x5
 2130 02cb 0F       		.uleb128 0xf
 2131 02cc 90030000 		.4byte	.LASF32
 2132 02d0 06       		.byte	0x6
 2133 02d1 5301     		.2byte	0x153
 2134 02d3 81000000 		.4byte	0x81
 2135 02d7 06       		.byte	0x6
 2136 02d8 0F       		.uleb128 0xf
 2137 02d9 B3050000 		.4byte	.LASF33
 2138 02dd 06       		.byte	0x6
 2139 02de 5901     		.2byte	0x159
 2140 02e0 81000000 		.4byte	0x81
 2141 02e4 07       		.byte	0x7
 2142 02e5 0F       		.uleb128 0xf
 2143 02e6 CA030000 		.4byte	.LASF34
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 99


 2144 02ea 06       		.byte	0x6
 2145 02eb 6001     		.2byte	0x160
 2146 02ed FB000000 		.4byte	0xfb
 2147 02f1 08       		.byte	0x8
 2148 02f2 0F       		.uleb128 0xf
 2149 02f3 570A0000 		.4byte	.LASF35
 2150 02f7 06       		.byte	0x6
 2151 02f8 6701     		.2byte	0x167
 2152 02fa CA010000 		.4byte	0x1ca
 2153 02fe 09       		.byte	0x9
 2154 02ff 0F       		.uleb128 0xf
 2155 0300 29020000 		.4byte	.LASF36
 2156 0304 06       		.byte	0x6
 2157 0305 6C01     		.2byte	0x16c
 2158 0307 81000000 		.4byte	0x81
 2159 030b 0A       		.byte	0xa
 2160 030c 0F       		.uleb128 0xf
 2161 030d C60B0000 		.4byte	.LASF37
 2162 0311 06       		.byte	0x6
 2163 0312 7401     		.2byte	0x174
 2164 0314 8D000000 		.4byte	0x8d
 2165 0318 0C       		.byte	0xc
 2166 0319 0F       		.uleb128 0xf
 2167 031a FA070000 		.4byte	.LASF38
 2168 031e 06       		.byte	0x6
 2169 031f 7901     		.2byte	0x179
 2170 0321 81000000 		.4byte	0x81
 2171 0325 0E       		.byte	0xe
 2172 0326 0F       		.uleb128 0xf
 2173 0327 5C000000 		.4byte	.LASF42
 2174 032b 06       		.byte	0x6
 2175 032c 7E01     		.2byte	0x17e
 2176 032e EF000000 		.4byte	0xef
 2177 0332 10       		.byte	0x10
 2178 0333 00       		.byte	0
 2179 0334 05       		.uleb128 0x5
 2180 0335 D10A0000 		.4byte	.LASF43
 2181 0339 06       		.byte	0x6
 2182 033a 7F01     		.2byte	0x17f
 2183 033c 8E020000 		.4byte	0x28e
 2184 0340 10       		.uleb128 0x10
 2185 0341 52       		.byte	0x52
 2186 0342 06       		.byte	0x6
 2187 0343 8501     		.2byte	0x185
 2188 0345 8B030000 		.4byte	0x38b
 2189 0349 0F       		.uleb128 0xf
 2190 034a 30000000 		.4byte	.LASF44
 2191 034e 06       		.byte	0x6
 2192 034f 8A01     		.2byte	0x18a
 2193 0351 82020000 		.4byte	0x282
 2194 0355 00       		.byte	0
 2195 0356 0F       		.uleb128 0xf
 2196 0357 78010000 		.4byte	.LASF45
 2197 035b 06       		.byte	0x6
 2198 035c 8F01     		.2byte	0x18f
 2199 035e 82020000 		.4byte	0x282
 2200 0362 10       		.byte	0x10
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 100


 2201 0363 0F       		.uleb128 0xf
 2202 0364 520C0000 		.4byte	.LASF46
 2203 0368 06       		.byte	0x6
 2204 0369 9401     		.2byte	0x194
 2205 036b 82020000 		.4byte	0x282
 2206 036f 20       		.byte	0x20
 2207 0370 0F       		.uleb128 0xf
 2208 0371 68030000 		.4byte	.LASF47
 2209 0375 06       		.byte	0x6
 2210 0376 9901     		.2byte	0x199
 2211 0378 82020000 		.4byte	0x282
 2212 037c 30       		.byte	0x30
 2213 037d 0F       		.uleb128 0xf
 2214 037e 740A0000 		.4byte	.LASF48
 2215 0382 06       		.byte	0x6
 2216 0383 9E01     		.2byte	0x19e
 2217 0385 34030000 		.4byte	0x334
 2218 0389 40       		.byte	0x40
 2219 038a 00       		.byte	0
 2220 038b 05       		.uleb128 0x5
 2221 038c C2010000 		.4byte	.LASF49
 2222 0390 06       		.byte	0x6
 2223 0391 9F01     		.2byte	0x19f
 2224 0393 40030000 		.4byte	0x340
 2225 0397 10       		.uleb128 0x10
 2226 0398 0A       		.byte	0xa
 2227 0399 06       		.byte	0x6
 2228 039a A501     		.2byte	0x1a5
 2229 039c EF030000 		.4byte	0x3ef
 2230 03a0 11       		.uleb128 0x11
 2231 03a1 72617700 		.ascii	"raw\000"
 2232 03a5 06       		.byte	0x6
 2233 03a6 AA01     		.2byte	0x1aa
 2234 03a8 EF030000 		.4byte	0x3ef
 2235 03ac 00       		.byte	0
 2236 03ad 0F       		.uleb128 0xf
 2237 03ae 3A0C0000 		.4byte	.LASF50
 2238 03b2 06       		.byte	0x6
 2239 03b3 AF01     		.2byte	0x1af
 2240 03b5 EF030000 		.4byte	0x3ef
 2241 03b9 02       		.byte	0x2
 2242 03ba 0F       		.uleb128 0xf
 2243 03bb 820A0000 		.4byte	.LASF51
 2244 03bf 06       		.byte	0x6
 2245 03c0 B501     		.2byte	0x1b5
 2246 03c2 CA010000 		.4byte	0x1ca
 2247 03c6 04       		.byte	0x4
 2248 03c7 0F       		.uleb128 0xf
 2249 03c8 89080000 		.4byte	.LASF52
 2250 03cc 06       		.byte	0x6
 2251 03cd BA01     		.2byte	0x1ba
 2252 03cf EF000000 		.4byte	0xef
 2253 03d3 06       		.byte	0x6
 2254 03d4 0F       		.uleb128 0xf
 2255 03d5 BC0C0000 		.4byte	.LASF53
 2256 03d9 06       		.byte	0x6
 2257 03da BF01     		.2byte	0x1bf
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 101


 2258 03dc FF030000 		.4byte	0x3ff
 2259 03e0 08       		.byte	0x8
 2260 03e1 0F       		.uleb128 0xf
 2261 03e2 75050000 		.4byte	.LASF54
 2262 03e6 06       		.byte	0x6
 2263 03e7 C401     		.2byte	0x1c4
 2264 03e9 CA010000 		.4byte	0x1ca
 2265 03ed 09       		.byte	0x9
 2266 03ee 00       		.byte	0
 2267 03ef 0D       		.uleb128 0xd
 2268 03f0 8D000000 		.4byte	0x8d
 2269 03f4 FF030000 		.4byte	0x3ff
 2270 03f8 0E       		.uleb128 0xe
 2271 03f9 DA010000 		.4byte	0x1da
 2272 03fd 00       		.byte	0
 2273 03fe 00       		.byte	0
 2274 03ff 0D       		.uleb128 0xd
 2275 0400 FB000000 		.4byte	0xfb
 2276 0404 0F040000 		.4byte	0x40f
 2277 0408 0E       		.uleb128 0xe
 2278 0409 DA010000 		.4byte	0x1da
 2279 040d 00       		.byte	0
 2280 040e 00       		.byte	0
 2281 040f 05       		.uleb128 0x5
 2282 0410 36030000 		.4byte	.LASF55
 2283 0414 06       		.byte	0x6
 2284 0415 C501     		.2byte	0x1c5
 2285 0417 97030000 		.4byte	0x397
 2286 041b 10       		.uleb128 0x10
 2287 041c 32       		.byte	0x32
 2288 041d 06       		.byte	0x6
 2289 041e CB01     		.2byte	0x1cb
 2290 0420 66040000 		.4byte	0x466
 2291 0424 0F       		.uleb128 0xf
 2292 0425 30000000 		.4byte	.LASF44
 2293 0429 06       		.byte	0x6
 2294 042a D001     		.2byte	0x1d0
 2295 042c 66040000 		.4byte	0x466
 2296 0430 00       		.byte	0
 2297 0431 0F       		.uleb128 0xf
 2298 0432 78010000 		.4byte	.LASF45
 2299 0436 06       		.byte	0x6
 2300 0437 D501     		.2byte	0x1d5
 2301 0439 66040000 		.4byte	0x466
 2302 043d 0A       		.byte	0xa
 2303 043e 0F       		.uleb128 0xf
 2304 043f 520C0000 		.4byte	.LASF46
 2305 0443 06       		.byte	0x6
 2306 0444 DA01     		.2byte	0x1da
 2307 0446 66040000 		.4byte	0x466
 2308 044a 14       		.byte	0x14
 2309 044b 0F       		.uleb128 0xf
 2310 044c 68030000 		.4byte	.LASF47
 2311 0450 06       		.byte	0x6
 2312 0451 DF01     		.2byte	0x1df
 2313 0453 66040000 		.4byte	0x466
 2314 0457 1E       		.byte	0x1e
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 102


 2315 0458 0F       		.uleb128 0xf
 2316 0459 740A0000 		.4byte	.LASF48
 2317 045d 06       		.byte	0x6
 2318 045e E401     		.2byte	0x1e4
 2319 0460 66040000 		.4byte	0x466
 2320 0464 28       		.byte	0x28
 2321 0465 00       		.byte	0
 2322 0466 0D       		.uleb128 0xd
 2323 0467 0F040000 		.4byte	0x40f
 2324 046b 76040000 		.4byte	0x476
 2325 046f 0E       		.uleb128 0xe
 2326 0470 DA010000 		.4byte	0x1da
 2327 0474 00       		.byte	0
 2328 0475 00       		.byte	0
 2329 0476 05       		.uleb128 0x5
 2330 0477 900D0000 		.4byte	.LASF56
 2331 047b 06       		.byte	0x6
 2332 047c E501     		.2byte	0x1e5
 2333 047e 1B040000 		.4byte	0x41b
 2334 0482 10       		.uleb128 0x10
 2335 0483 B0       		.byte	0xb0
 2336 0484 06       		.byte	0x6
 2337 0485 EB01     		.2byte	0x1eb
 2338 0487 83050000 		.4byte	0x583
 2339 048b 0F       		.uleb128 0xf
 2340 048c CD070000 		.4byte	.LASF57
 2341 0490 06       		.byte	0x6
 2342 0491 F201     		.2byte	0x1f2
 2343 0493 8D000000 		.4byte	0x8d
 2344 0497 00       		.byte	0
 2345 0498 0F       		.uleb128 0xf
 2346 0499 FC0C0000 		.4byte	.LASF58
 2347 049d 06       		.byte	0x6
 2348 049e F701     		.2byte	0x1f7
 2349 04a0 8D000000 		.4byte	0x8d
 2350 04a4 02       		.byte	0x2
 2351 04a5 0F       		.uleb128 0xf
 2352 04a6 D3000000 		.4byte	.LASF59
 2353 04aa 06       		.byte	0x6
 2354 04ab FC01     		.2byte	0x1fc
 2355 04ad 8D000000 		.4byte	0x8d
 2356 04b1 04       		.byte	0x4
 2357 04b2 0F       		.uleb128 0xf
 2358 04b3 8E080000 		.4byte	.LASF60
 2359 04b7 06       		.byte	0x6
 2360 04b8 0202     		.2byte	0x202
 2361 04ba 8D000000 		.4byte	0x8d
 2362 04be 06       		.byte	0x6
 2363 04bf 0F       		.uleb128 0xf
 2364 04c0 C7000000 		.4byte	.LASF61
 2365 04c4 06       		.byte	0x6
 2366 04c5 0702     		.2byte	0x207
 2367 04c7 8D000000 		.4byte	0x8d
 2368 04cb 08       		.byte	0x8
 2369 04cc 0F       		.uleb128 0xf
 2370 04cd CA040000 		.4byte	.LASF62
 2371 04d1 06       		.byte	0x6
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 103


 2372 04d2 0C02     		.2byte	0x20c
 2373 04d4 D7000000 		.4byte	0xd7
 2374 04d8 0C       		.byte	0xc
 2375 04d9 0F       		.uleb128 0xf
 2376 04da 7E080000 		.4byte	.LASF63
 2377 04de 06       		.byte	0x6
 2378 04df 1202     		.2byte	0x212
 2379 04e1 83050000 		.4byte	0x583
 2380 04e5 10       		.byte	0x10
 2381 04e6 0F       		.uleb128 0xf
 2382 04e7 23090000 		.4byte	.LASF64
 2383 04eb 06       		.byte	0x6
 2384 04ec 1902     		.2byte	0x219
 2385 04ee 83050000 		.4byte	0x583
 2386 04f2 14       		.byte	0x14
 2387 04f3 0F       		.uleb128 0xf
 2388 04f4 E1070000 		.4byte	.LASF65
 2389 04f8 06       		.byte	0x6
 2390 04f9 2902     		.2byte	0x229
 2391 04fb 93050000 		.4byte	0x593
 2392 04ff 18       		.byte	0x18
 2393 0500 0F       		.uleb128 0xf
 2394 0501 5F060000 		.4byte	.LASF66
 2395 0505 06       		.byte	0x6
 2396 0506 2F02     		.2byte	0x22f
 2397 0508 8D000000 		.4byte	0x8d
 2398 050c 1E       		.byte	0x1e
 2399 050d 0F       		.uleb128 0xf
 2400 050e 2C030000 		.4byte	.LASF67
 2401 0512 06       		.byte	0x6
 2402 0513 3402     		.2byte	0x234
 2403 0515 81000000 		.4byte	0x81
 2404 0519 20       		.byte	0x20
 2405 051a 0F       		.uleb128 0xf
 2406 051b CE050000 		.4byte	.LASF68
 2407 051f 06       		.byte	0x6
 2408 0520 3902     		.2byte	0x239
 2409 0522 8B030000 		.4byte	0x38b
 2410 0526 22       		.byte	0x22
 2411 0527 0F       		.uleb128 0xf
 2412 0528 87020000 		.4byte	.LASF69
 2413 052c 06       		.byte	0x6
 2414 052d 3E02     		.2byte	0x23e
 2415 052f 76040000 		.4byte	0x476
 2416 0533 74       		.byte	0x74
 2417 0534 0F       		.uleb128 0xf
 2418 0535 95000000 		.4byte	.LASF70
 2419 0539 06       		.byte	0x6
 2420 053a 4302     		.2byte	0x243
 2421 053c 81000000 		.4byte	0x81
 2422 0540 A6       		.byte	0xa6
 2423 0541 0F       		.uleb128 0xf
 2424 0542 D4020000 		.4byte	.LASF71
 2425 0546 06       		.byte	0x6
 2426 0547 4802     		.2byte	0x248
 2427 0549 81000000 		.4byte	0x81
 2428 054d A7       		.byte	0xa7
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 104


 2429 054e 0F       		.uleb128 0xf
 2430 054f BA070000 		.4byte	.LASF72
 2431 0553 06       		.byte	0x6
 2432 0554 4D02     		.2byte	0x24d
 2433 0556 8D000000 		.4byte	0x8d
 2434 055a A8       		.byte	0xa8
 2435 055b 0F       		.uleb128 0xf
 2436 055c 46060000 		.4byte	.LASF73
 2437 0560 06       		.byte	0x6
 2438 0561 5202     		.2byte	0x252
 2439 0563 EF030000 		.4byte	0x3ef
 2440 0567 AA       		.byte	0xaa
 2441 0568 0F       		.uleb128 0xf
 2442 0569 DB000000 		.4byte	.LASF74
 2443 056d 06       		.byte	0x6
 2444 056e 5702     		.2byte	0x257
 2445 0570 81000000 		.4byte	0x81
 2446 0574 AC       		.byte	0xac
 2447 0575 0F       		.uleb128 0xf
 2448 0576 330B0000 		.4byte	.LASF75
 2449 057a 06       		.byte	0x6
 2450 057b 5C02     		.2byte	0x25c
 2451 057d 81000000 		.4byte	0x81
 2452 0581 AD       		.byte	0xad
 2453 0582 00       		.byte	0
 2454 0583 0D       		.uleb128 0xd
 2455 0584 99000000 		.4byte	0x99
 2456 0588 93050000 		.4byte	0x593
 2457 058c 0E       		.uleb128 0xe
 2458 058d DA010000 		.4byte	0x1da
 2459 0591 00       		.byte	0
 2460 0592 00       		.byte	0
 2461 0593 0D       		.uleb128 0xd
 2462 0594 81000000 		.4byte	0x81
 2463 0598 A3050000 		.4byte	0x5a3
 2464 059c 0E       		.uleb128 0xe
 2465 059d DA010000 		.4byte	0x1da
 2466 05a1 04       		.byte	0x4
 2467 05a2 00       		.byte	0
 2468 05a3 05       		.uleb128 0x5
 2469 05a4 47080000 		.4byte	.LASF76
 2470 05a8 06       		.byte	0x6
 2471 05a9 5D02     		.2byte	0x25d
 2472 05ab 82040000 		.4byte	0x482
 2473 05af 10       		.uleb128 0x10
 2474 05b0 1C       		.byte	0x1c
 2475 05b1 06       		.byte	0x6
 2476 05b2 6302     		.2byte	0x263
 2477 05b4 2E060000 		.4byte	0x62e
 2478 05b8 0F       		.uleb128 0xf
 2479 05b9 A4060000 		.4byte	.LASF77
 2480 05bd 06       		.byte	0x6
 2481 05be 6802     		.2byte	0x268
 2482 05c0 2E060000 		.4byte	0x62e
 2483 05c4 00       		.byte	0
 2484 05c5 0F       		.uleb128 0xf
 2485 05c6 7E050000 		.4byte	.LASF78
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 105


 2486 05ca 06       		.byte	0x6
 2487 05cb 6D02     		.2byte	0x26d
 2488 05cd 2E060000 		.4byte	0x62e
 2489 05d1 04       		.byte	0x4
 2490 05d2 0F       		.uleb128 0xf
 2491 05d3 72030000 		.4byte	.LASF79
 2492 05d7 06       		.byte	0x6
 2493 05d8 7202     		.2byte	0x272
 2494 05da 2E060000 		.4byte	0x62e
 2495 05de 08       		.byte	0x8
 2496 05df 0F       		.uleb128 0xf
 2497 05e0 B3080000 		.4byte	.LASF80
 2498 05e4 06       		.byte	0x6
 2499 05e5 7702     		.2byte	0x277
 2500 05e7 2E060000 		.4byte	0x62e
 2501 05eb 0C       		.byte	0xc
 2502 05ec 0F       		.uleb128 0xf
 2503 05ed BC0B0000 		.4byte	.LASF81
 2504 05f1 06       		.byte	0x6
 2505 05f2 7C02     		.2byte	0x27c
 2506 05f4 99000000 		.4byte	0x99
 2507 05f8 10       		.byte	0x10
 2508 05f9 0F       		.uleb128 0xf
 2509 05fa E3060000 		.4byte	.LASF82
 2510 05fe 06       		.byte	0x6
 2511 05ff 8102     		.2byte	0x281
 2512 0601 99000000 		.4byte	0x99
 2513 0605 14       		.byte	0x14
 2514 0606 0F       		.uleb128 0xf
 2515 0607 68040000 		.4byte	.LASF83
 2516 060b 06       		.byte	0x6
 2517 060c 8602     		.2byte	0x286
 2518 060e 81000000 		.4byte	0x81
 2519 0612 18       		.byte	0x18
 2520 0613 0F       		.uleb128 0xf
 2521 0614 2E0A0000 		.4byte	.LASF84
 2522 0618 06       		.byte	0x6
 2523 0619 8B02     		.2byte	0x28b
 2524 061b 81000000 		.4byte	0x81
 2525 061f 19       		.byte	0x19
 2526 0620 0F       		.uleb128 0xf
 2527 0621 60020000 		.4byte	.LASF85
 2528 0625 06       		.byte	0x6
 2529 0626 9002     		.2byte	0x290
 2530 0628 81000000 		.4byte	0x81
 2531 062c 1A       		.byte	0x1a
 2532 062d 00       		.byte	0
 2533 062e 07       		.uleb128 0x7
 2534 062f 04       		.byte	0x4
 2535 0630 CB000000 		.4byte	0xcb
 2536 0634 05       		.uleb128 0x5
 2537 0635 BB020000 		.4byte	.LASF86
 2538 0639 06       		.byte	0x6
 2539 063a 9102     		.2byte	0x291
 2540 063c AF050000 		.4byte	0x5af
 2541 0640 10       		.uleb128 0x10
 2542 0641 1C       		.byte	0x1c
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 106


 2543 0642 06       		.byte	0x6
 2544 0643 C402     		.2byte	0x2c4
 2545 0645 BF060000 		.4byte	0x6bf
 2546 0649 0F       		.uleb128 0xf
 2547 064a 8B0C0000 		.4byte	.LASF87
 2548 064e 06       		.byte	0x6
 2549 064f CD02     		.2byte	0x2cd
 2550 0651 BF060000 		.4byte	0x6bf
 2551 0655 00       		.byte	0
 2552 0656 0F       		.uleb128 0xf
 2553 0657 420B0000 		.4byte	.LASF88
 2554 065b 06       		.byte	0x6
 2555 065c D402     		.2byte	0x2d4
 2556 065e C6060000 		.4byte	0x6c6
 2557 0662 04       		.byte	0x4
 2558 0663 0F       		.uleb128 0xf
 2559 0664 D6070000 		.4byte	.LASF89
 2560 0668 06       		.byte	0x6
 2561 0669 DA02     		.2byte	0x2da
 2562 066b C8060000 		.4byte	0x6c8
 2563 066f 08       		.byte	0x8
 2564 0670 0F       		.uleb128 0xf
 2565 0671 B4060000 		.4byte	.LASF90
 2566 0675 06       		.byte	0x6
 2567 0676 E002     		.2byte	0x2e0
 2568 0678 C6060000 		.4byte	0x6c6
 2569 067c 0C       		.byte	0xc
 2570 067d 0F       		.uleb128 0xf
 2571 067e 89040000 		.4byte	.LASF91
 2572 0682 06       		.byte	0x6
 2573 0683 E702     		.2byte	0x2e7
 2574 0685 CE060000 		.4byte	0x6ce
 2575 0689 10       		.byte	0x10
 2576 068a 0F       		.uleb128 0xf
 2577 068b 200B0000 		.4byte	.LASF92
 2578 068f 06       		.byte	0x6
 2579 0690 EC02     		.2byte	0x2ec
 2580 0692 99000000 		.4byte	0x99
 2581 0696 14       		.byte	0x14
 2582 0697 0F       		.uleb128 0xf
 2583 0698 ED030000 		.4byte	.LASF93
 2584 069c 06       		.byte	0x6
 2585 069d F302     		.2byte	0x2f3
 2586 069f 8D000000 		.4byte	0x8d
 2587 06a3 18       		.byte	0x18
 2588 06a4 0F       		.uleb128 0xf
 2589 06a5 E4020000 		.4byte	.LASF94
 2590 06a9 06       		.byte	0x6
 2591 06aa FA02     		.2byte	0x2fa
 2592 06ac 81000000 		.4byte	0x81
 2593 06b0 1A       		.byte	0x1a
 2594 06b1 0F       		.uleb128 0xf
 2595 06b2 92050000 		.4byte	.LASF95
 2596 06b6 06       		.byte	0x6
 2597 06b7 0403     		.2byte	0x304
 2598 06b9 81000000 		.4byte	0x81
 2599 06bd 1B       		.byte	0x1b
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 107


 2600 06be 00       		.byte	0
 2601 06bf 07       		.uleb128 0x7
 2602 06c0 04       		.byte	0x4
 2603 06c1 C5060000 		.4byte	0x6c5
 2604 06c5 12       		.uleb128 0x12
 2605 06c6 13       		.uleb128 0x13
 2606 06c7 04       		.byte	0x4
 2607 06c8 07       		.uleb128 0x7
 2608 06c9 04       		.byte	0x4
 2609 06ca 0F040000 		.4byte	0x40f
 2610 06ce 07       		.uleb128 0x7
 2611 06cf 04       		.byte	0x4
 2612 06d0 81000000 		.4byte	0x81
 2613 06d4 05       		.uleb128 0x5
 2614 06d5 A9030000 		.4byte	.LASF96
 2615 06d9 06       		.byte	0x6
 2616 06da 0503     		.2byte	0x305
 2617 06dc 40060000 		.4byte	0x640
 2618 06e0 10       		.uleb128 0x10
 2619 06e1 8C       		.byte	0x8c
 2620 06e2 06       		.byte	0x6
 2621 06e3 0B03     		.2byte	0x30b
 2622 06e5 F7060000 		.4byte	0x6f7
 2623 06e9 0F       		.uleb128 0xf
 2624 06ea AD0D0000 		.4byte	.LASF97
 2625 06ee 06       		.byte	0x6
 2626 06ef 1003     		.2byte	0x310
 2627 06f1 F7060000 		.4byte	0x6f7
 2628 06f5 00       		.byte	0
 2629 06f6 00       		.byte	0
 2630 06f7 0D       		.uleb128 0xd
 2631 06f8 D4060000 		.4byte	0x6d4
 2632 06fc 07070000 		.4byte	0x707
 2633 0700 0E       		.uleb128 0xe
 2634 0701 DA010000 		.4byte	0x1da
 2635 0705 04       		.byte	0x4
 2636 0706 00       		.byte	0
 2637 0707 05       		.uleb128 0x5
 2638 0708 EB050000 		.4byte	.LASF98
 2639 070c 06       		.byte	0x6
 2640 070d 1103     		.2byte	0x311
 2641 070f E0060000 		.4byte	0x6e0
 2642 0713 02       		.uleb128 0x2
 2643 0714 08       		.byte	0x8
 2644 0715 04       		.byte	0x4
 2645 0716 A8070000 		.4byte	.LASF99
 2646 071a 09       		.uleb128 0x9
 2647 071b 01       		.byte	0x1
 2648 071c 2C000000 		.4byte	0x2c
 2649 0720 07       		.byte	0x7
 2650 0721 43       		.byte	0x43
 2651 0722 45070000 		.4byte	0x745
 2652 0726 0A       		.uleb128 0xa
 2653 0727 D7050000 		.4byte	.LASF100
 2654 072b 00       		.byte	0
 2655 072c 0A       		.uleb128 0xa
 2656 072d EA040000 		.4byte	.LASF101
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 108


 2657 0731 01       		.byte	0x1
 2658 0732 0A       		.uleb128 0xa
 2659 0733 4C040000 		.4byte	.LASF102
 2660 0737 02       		.byte	0x2
 2661 0738 0A       		.uleb128 0xa
 2662 0739 120D0000 		.4byte	.LASF103
 2663 073d 03       		.byte	0x3
 2664 073e 0A       		.uleb128 0xa
 2665 073f 18010000 		.4byte	.LASF104
 2666 0743 04       		.byte	0x4
 2667 0744 00       		.byte	0
 2668 0745 03       		.uleb128 0x3
 2669 0746 36070000 		.4byte	.LASF105
 2670 074a 07       		.byte	0x7
 2671 074b 49       		.byte	0x49
 2672 074c 1A070000 		.4byte	0x71a
 2673 0750 0B       		.uleb128 0xb
 2674 0751 08       		.byte	0x8
 2675 0752 07       		.byte	0x7
 2676 0753 CF       		.byte	0xcf
 2677 0754 71070000 		.4byte	0x771
 2678 0758 0C       		.uleb128 0xc
 2679 0759 EA080000 		.4byte	.LASF106
 2680 075d 07       		.byte	0x7
 2681 075e D4       		.byte	0xd4
 2682 075f 99000000 		.4byte	0x99
 2683 0763 00       		.byte	0
 2684 0764 0C       		.uleb128 0xc
 2685 0765 C4060000 		.4byte	.LASF107
 2686 0769 07       		.byte	0x7
 2687 076a D9       		.byte	0xd9
 2688 076b 99000000 		.4byte	0x99
 2689 076f 04       		.byte	0x4
 2690 0770 00       		.byte	0
 2691 0771 03       		.uleb128 0x3
 2692 0772 8A0A0000 		.4byte	.LASF108
 2693 0776 07       		.byte	0x7
 2694 0777 DA       		.byte	0xda
 2695 0778 50070000 		.4byte	0x750
 2696 077c 14       		.uleb128 0x14
 2697 077d 01060000 		.4byte	.LASF109
 2698 0781 01       		.byte	0x1
 2699 0782 6D01     		.2byte	0x16d
 2700 0784 BA000000 		.4byte	0xba
 2701 0788 01       		.byte	0x1
 2702 0789 9A070000 		.4byte	0x79a
 2703 078d 15       		.uleb128 0x15
 2704 078e 37000000 		.4byte	.LASF111
 2705 0792 01       		.byte	0x1
 2706 0793 6F01     		.2byte	0x16f
 2707 0795 BA000000 		.4byte	0xba
 2708 0799 00       		.byte	0
 2709 079a 14       		.uleb128 0x14
 2710 079b D1040000 		.4byte	.LASF110
 2711 079f 01       		.byte	0x1
 2712 07a0 5406     		.2byte	0x654
 2713 07a2 BA000000 		.4byte	0xba
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 109


 2714 07a6 01       		.byte	0x1
 2715 07a7 C4070000 		.4byte	0x7c4
 2716 07ab 16       		.uleb128 0x16
 2717 07ac 2E0D0000 		.4byte	.LASF114
 2718 07b0 01       		.byte	0x1
 2719 07b1 5406     		.2byte	0x654
 2720 07b3 99000000 		.4byte	0x99
 2721 07b7 15       		.uleb128 0x15
 2722 07b8 BE050000 		.4byte	.LASF112
 2723 07bc 01       		.byte	0x1
 2724 07bd 5606     		.2byte	0x656
 2725 07bf BA000000 		.4byte	0xba
 2726 07c3 00       		.byte	0
 2727 07c4 14       		.uleb128 0x14
 2728 07c5 00000000 		.4byte	.LASF113
 2729 07c9 01       		.byte	0x1
 2730 07ca E80A     		.2byte	0xae8
 2731 07cc 99000000 		.4byte	0x99
 2732 07d0 01       		.byte	0x1
 2733 07d1 FA070000 		.4byte	0x7fa
 2734 07d5 16       		.uleb128 0x16
 2735 07d6 2E0D0000 		.4byte	.LASF114
 2736 07da 01       		.byte	0x1
 2737 07db E80A     		.2byte	0xae8
 2738 07dd 99000000 		.4byte	0x99
 2739 07e1 15       		.uleb128 0x15
 2740 07e2 480A0000 		.4byte	.LASF115
 2741 07e6 01       		.byte	0x1
 2742 07e7 EA0A     		.2byte	0xaea
 2743 07e9 99000000 		.4byte	0x99
 2744 07ed 15       		.uleb128 0x15
 2745 07ee F8010000 		.4byte	.LASF116
 2746 07f2 01       		.byte	0x1
 2747 07f3 EE0A     		.2byte	0xaee
 2748 07f5 FA070000 		.4byte	0x7fa
 2749 07f9 00       		.byte	0
 2750 07fa 07       		.uleb128 0x7
 2751 07fb 04       		.byte	0x4
 2752 07fc E1010000 		.4byte	0x1e1
 2753 0800 17       		.uleb128 0x17
 2754 0801 CD0B0000 		.4byte	.LASF203
 2755 0805 01       		.byte	0x1
 2756 0806 2B04     		.2byte	0x42b
 2757 0808 01       		.byte	0x1
 2758 0809 1A080000 		.4byte	0x81a
 2759 080d 16       		.uleb128 0x16
 2760 080e 78030000 		.4byte	.LASF117
 2761 0812 01       		.byte	0x1
 2762 0813 2B04     		.2byte	0x42b
 2763 0815 32010000 		.4byte	0x132
 2764 0819 00       		.byte	0
 2765 081a 18       		.uleb128 0x18
 2766 081b 81010000 		.4byte	.LASF204
 2767 081f 01       		.byte	0x1
 2768 0820 EC       		.byte	0xec
 2769 0821 99000000 		.4byte	0x99
 2770 0825 00000000 		.4byte	.LFB1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 110


 2771 0829 10000000 		.4byte	.LFE1-.LFB1
 2772 082d 01       		.uleb128 0x1
 2773 082e 9C       		.byte	0x9c
 2774 082f 19       		.uleb128 0x19
 2775 0830 B9080000 		.4byte	.LASF118
 2776 0834 01       		.byte	0x1
 2777 0835 1A01     		.2byte	0x11a
 2778 0837 BA000000 		.4byte	0xba
 2779 083b 00000000 		.4byte	.LFB2
 2780 083f 30000000 		.4byte	.LFE2-.LFB2
 2781 0843 01       		.uleb128 0x1
 2782 0844 9C       		.byte	0x9c
 2783 0845 7B080000 		.4byte	0x87b
 2784 0849 1A       		.uleb128 0x1a
 2785 084a 2E0D0000 		.4byte	.LASF114
 2786 084e 01       		.byte	0x1
 2787 084f 1A01     		.2byte	0x11a
 2788 0851 99000000 		.4byte	0x99
 2789 0855 00000000 		.4byte	.LLST0
 2790 0859 1B       		.uleb128 0x1b
 2791 085a 050D0000 		.4byte	.LASF120
 2792 085e 01       		.byte	0x1
 2793 085f 1C01     		.2byte	0x11c
 2794 0861 BA000000 		.4byte	0xba
 2795 0865 21000000 		.4byte	.LLST1
 2796 0869 1C       		.uleb128 0x1c
 2797 086a 24000000 		.4byte	.LVL2
 2798 086e 69130000 		.4byte	0x1369
 2799 0872 1D       		.uleb128 0x1d
 2800 0873 01       		.uleb128 0x1
 2801 0874 50       		.byte	0x50
 2802 0875 03       		.uleb128 0x3
 2803 0876 F3       		.byte	0xf3
 2804 0877 01       		.uleb128 0x1
 2805 0878 50       		.byte	0x50
 2806 0879 00       		.byte	0
 2807 087a 00       		.byte	0
 2808 087b 1E       		.uleb128 0x1e
 2809 087c 7C070000 		.4byte	0x77c
 2810 0880 00000000 		.4byte	.LFB3
 2811 0884 30000000 		.4byte	.LFE3-.LFB3
 2812 0888 01       		.uleb128 0x1
 2813 0889 9C       		.byte	0x9c
 2814 088a B0080000 		.4byte	0x8b0
 2815 088e 1F       		.uleb128 0x1f
 2816 088f 8D070000 		.4byte	0x78d
 2817 0893 35000000 		.4byte	.LLST2
 2818 0897 20       		.uleb128 0x20
 2819 0898 12000000 		.4byte	.LBB7
 2820 089c 14000000 		.4byte	.LBE7-.LBB7
 2821 08a0 21       		.uleb128 0x21
 2822 08a1 8D070000 		.4byte	0x78d
 2823 08a5 22       		.uleb128 0x22
 2824 08a6 1E000000 		.4byte	.LVL5
 2825 08aa 75130000 		.4byte	0x1375
 2826 08ae 00       		.byte	0
 2827 08af 00       		.byte	0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 111


 2828 08b0 19       		.uleb128 0x19
 2829 08b1 A40B0000 		.4byte	.LASF119
 2830 08b5 01       		.byte	0x1
 2831 08b6 AB01     		.2byte	0x1ab
 2832 08b8 BA000000 		.4byte	0xba
 2833 08bc 00000000 		.4byte	.LFB4
 2834 08c0 3C000000 		.4byte	.LFE4-.LFB4
 2835 08c4 01       		.uleb128 0x1
 2836 08c5 9C       		.byte	0x9c
 2837 08c6 08090000 		.4byte	0x908
 2838 08ca 1B       		.uleb128 0x1b
 2839 08cb 37000000 		.4byte	.LASF111
 2840 08cf 01       		.byte	0x1
 2841 08d0 AD01     		.2byte	0x1ad
 2842 08d2 BA000000 		.4byte	0xba
 2843 08d6 54000000 		.4byte	.LLST3
 2844 08da 1B       		.uleb128 0x1b
 2845 08db 5D070000 		.4byte	.LASF121
 2846 08df 01       		.byte	0x1
 2847 08e0 AF01     		.2byte	0x1af
 2848 08e2 99000000 		.4byte	0x99
 2849 08e6 7F000000 		.4byte	.LLST4
 2850 08ea 23       		.uleb128 0x23
 2851 08eb 14000000 		.4byte	.LVL9
 2852 08ef 2F080000 		.4byte	0x82f
 2853 08f3 FE080000 		.4byte	0x8fe
 2854 08f7 1D       		.uleb128 0x1d
 2855 08f8 01       		.uleb128 0x1
 2856 08f9 50       		.byte	0x50
 2857 08fa 02       		.uleb128 0x2
 2858 08fb 74       		.byte	0x74
 2859 08fc 00       		.sleb128 0
 2860 08fd 00       		.byte	0
 2861 08fe 22       		.uleb128 0x22
 2862 08ff 2A000000 		.4byte	.LVL10
 2863 0903 7C070000 		.4byte	0x77c
 2864 0907 00       		.byte	0
 2865 0908 19       		.uleb128 0x19
 2866 0909 68000000 		.4byte	.LASF122
 2867 090d 01       		.byte	0x1
 2868 090e 1702     		.2byte	0x217
 2869 0910 BA000000 		.4byte	0xba
 2870 0914 00000000 		.4byte	.LFB5
 2871 0918 40000000 		.4byte	.LFE5-.LFB5
 2872 091c 01       		.uleb128 0x1
 2873 091d 9C       		.byte	0x9c
 2874 091e 6B090000 		.4byte	0x96b
 2875 0922 1A       		.uleb128 0x1a
 2876 0923 2E0D0000 		.4byte	.LASF114
 2877 0927 01       		.byte	0x1
 2878 0928 1702     		.2byte	0x217
 2879 092a 99000000 		.4byte	0x99
 2880 092e 92000000 		.4byte	.LLST5
 2881 0932 1A       		.uleb128 0x1a
 2882 0933 DE010000 		.4byte	.LASF123
 2883 0937 01       		.byte	0x1
 2884 0938 1702     		.2byte	0x217
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 112


 2885 093a 99000000 		.4byte	0x99
 2886 093e B3000000 		.4byte	.LLST6
 2887 0942 1B       		.uleb128 0x1b
 2888 0943 050D0000 		.4byte	.LASF120
 2889 0947 01       		.byte	0x1
 2890 0948 1902     		.2byte	0x219
 2891 094a BA000000 		.4byte	0xba
 2892 094e D4000000 		.4byte	.LLST7
 2893 0952 1C       		.uleb128 0x1c
 2894 0953 32000000 		.4byte	.LVL15
 2895 0957 81130000 		.4byte	0x1381
 2896 095b 1D       		.uleb128 0x1d
 2897 095c 01       		.uleb128 0x1
 2898 095d 50       		.byte	0x50
 2899 095e 03       		.uleb128 0x3
 2900 095f F3       		.byte	0xf3
 2901 0960 01       		.uleb128 0x1
 2902 0961 50       		.byte	0x50
 2903 0962 1D       		.uleb128 0x1d
 2904 0963 01       		.uleb128 0x1
 2905 0964 51       		.byte	0x51
 2906 0965 03       		.uleb128 0x3
 2907 0966 F3       		.byte	0xf3
 2908 0967 01       		.uleb128 0x1
 2909 0968 51       		.byte	0x51
 2910 0969 00       		.byte	0
 2911 096a 00       		.byte	0
 2912 096b 19       		.uleb128 0x19
 2913 096c 77060000 		.4byte	.LASF124
 2914 0970 01       		.byte	0x1
 2915 0971 8102     		.2byte	0x281
 2916 0973 BA000000 		.4byte	0xba
 2917 0977 00000000 		.4byte	.LFB6
 2918 097b 30000000 		.4byte	.LFE6-.LFB6
 2919 097f 01       		.uleb128 0x1
 2920 0980 9C       		.byte	0x9c
 2921 0981 9F090000 		.4byte	0x99f
 2922 0985 1B       		.uleb128 0x1b
 2923 0986 37000000 		.4byte	.LASF111
 2924 098a 01       		.byte	0x1
 2925 098b 8302     		.2byte	0x283
 2926 098d BA000000 		.4byte	0xba
 2927 0991 E8000000 		.4byte	.LLST8
 2928 0995 22       		.uleb128 0x22
 2929 0996 1E000000 		.4byte	.LVL18
 2930 099a 8D130000 		.4byte	0x138d
 2931 099e 00       		.byte	0
 2932 099f 24       		.uleb128 0x24
 2933 09a0 0B0B0000 		.4byte	.LASF131
 2934 09a4 01       		.byte	0x1
 2935 09a5 4803     		.2byte	0x348
 2936 09a7 00000000 		.4byte	.LFB8
 2937 09ab 8C000000 		.4byte	.LFE8-.LFB8
 2938 09af 01       		.uleb128 0x1
 2939 09b0 9C       		.byte	0x9c
 2940 09b1 6D0A0000 		.4byte	0xa6d
 2941 09b5 1A       		.uleb128 0x1a
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 113


 2942 09b6 2E0D0000 		.4byte	.LASF114
 2943 09ba 01       		.byte	0x1
 2944 09bb 4803     		.2byte	0x348
 2945 09bd 99000000 		.4byte	0x99
 2946 09c1 07010000 		.4byte	.LLST9
 2947 09c5 1A       		.uleb128 0x1a
 2948 09c6 22000000 		.4byte	.LASF125
 2949 09ca 01       		.byte	0x1
 2950 09cb 4803     		.2byte	0x348
 2951 09cd 99000000 		.4byte	0x99
 2952 09d1 28010000 		.4byte	.LLST10
 2953 09d5 1A       		.uleb128 0x1a
 2954 09d6 940B0000 		.4byte	.LASF126
 2955 09da 01       		.byte	0x1
 2956 09db 4803     		.2byte	0x348
 2957 09dd 99000000 		.4byte	0x99
 2958 09e1 49010000 		.4byte	.LLST11
 2959 09e5 25       		.uleb128 0x25
 2960 09e6 C2030000 		.4byte	.LASF127
 2961 09ea 01       		.byte	0x1
 2962 09eb 4A03     		.2byte	0x34a
 2963 09ed 99000000 		.4byte	0x99
 2964 09f1 01       		.byte	0x1
 2965 09f2 1B       		.uleb128 0x1b
 2966 09f3 9A0B0000 		.4byte	.LASF128
 2967 09f7 01       		.byte	0x1
 2968 09f8 4B03     		.2byte	0x34b
 2969 09fa 99000000 		.4byte	0x99
 2970 09fe D3010000 		.4byte	.LLST12
 2971 0a02 1B       		.uleb128 0x1b
 2972 0a03 33010000 		.4byte	.LASF129
 2973 0a07 01       		.byte	0x1
 2974 0a08 4C03     		.2byte	0x34c
 2975 0a0a 81000000 		.4byte	0x81
 2976 0a0e E7010000 		.4byte	.LLST13
 2977 0a12 1B       		.uleb128 0x1b
 2978 0a13 2D0B0000 		.4byte	.LASF130
 2979 0a17 01       		.byte	0x1
 2980 0a18 4D03     		.2byte	0x34d
 2981 0a1a 6D0A0000 		.4byte	0xa6d
 2982 0a1e 1B020000 		.4byte	.LLST14
 2983 0a22 22       		.uleb128 0x22
 2984 0a23 14000000 		.4byte	.LVL24
 2985 0a27 99130000 		.4byte	0x1399
 2986 0a2b 22       		.uleb128 0x22
 2987 0a2c 34000000 		.4byte	.LVL25
 2988 0a30 A4130000 		.4byte	0x13a4
 2989 0a34 22       		.uleb128 0x22
 2990 0a35 46000000 		.4byte	.LVL26
 2991 0a39 99130000 		.4byte	0x1399
 2992 0a3d 22       		.uleb128 0x22
 2993 0a3e 5A000000 		.4byte	.LVL29
 2994 0a42 99130000 		.4byte	0x1399
 2995 0a46 23       		.uleb128 0x23
 2996 0a47 6E000000 		.4byte	.LVL33
 2997 0a4b AF130000 		.4byte	0x13af
 2998 0a4f 5A0A0000 		.4byte	0xa5a
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 114


 2999 0a53 1D       		.uleb128 0x1d
 3000 0a54 01       		.uleb128 0x1
 3001 0a55 50       		.byte	0x50
 3002 0a56 02       		.uleb128 0x2
 3003 0a57 74       		.byte	0x74
 3004 0a58 00       		.sleb128 0
 3005 0a59 00       		.byte	0
 3006 0a5a 22       		.uleb128 0x22
 3007 0a5b 74000000 		.4byte	.LVL35
 3008 0a5f 99130000 		.4byte	0x1399
 3009 0a63 22       		.uleb128 0x22
 3010 0a64 86000000 		.4byte	.LVL38
 3011 0a68 A4130000 		.4byte	0x13a4
 3012 0a6c 00       		.byte	0
 3013 0a6d 07       		.uleb128 0x7
 3014 0a6e 04       		.byte	0x4
 3015 0a6f 730A0000 		.4byte	0xa73
 3016 0a73 26       		.uleb128 0x26
 3017 0a74 34060000 		.4byte	0x634
 3018 0a78 24       		.uleb128 0x24
 3019 0a79 5B080000 		.4byte	.LASF132
 3020 0a7d 01       		.byte	0x1
 3021 0a7e 8E04     		.2byte	0x48e
 3022 0a80 00000000 		.4byte	.LFB11
 3023 0a84 80000000 		.4byte	.LFE11-.LFB11
 3024 0a88 01       		.uleb128 0x1
 3025 0a89 9C       		.byte	0x9c
 3026 0a8a 3D0B0000 		.4byte	0xb3d
 3027 0a8e 1A       		.uleb128 0x1a
 3028 0a8f 940B0000 		.4byte	.LASF126
 3029 0a93 01       		.byte	0x1
 3030 0a94 8E04     		.2byte	0x48e
 3031 0a96 99000000 		.4byte	0x99
 3032 0a9a 39020000 		.4byte	.LLST15
 3033 0a9e 27       		.uleb128 0x27
 3034 0a9f 33010000 		.4byte	.LASF129
 3035 0aa3 01       		.byte	0x1
 3036 0aa4 9004     		.2byte	0x490
 3037 0aa6 81000000 		.4byte	0x81
 3038 0aaa 02       		.uleb128 0x2
 3039 0aab 91       		.byte	0x91
 3040 0aac 64       		.sleb128 -28
 3041 0aad 1B       		.uleb128 0x1b
 3042 0aae 37020000 		.4byte	.LASF133
 3043 0ab2 01       		.byte	0x1
 3044 0ab3 9204     		.2byte	0x492
 3045 0ab5 99000000 		.4byte	0x99
 3046 0ab9 65020000 		.4byte	.LLST16
 3047 0abd 1B       		.uleb128 0x1b
 3048 0abe 84030000 		.4byte	.LASF134
 3049 0ac2 01       		.byte	0x1
 3050 0ac3 9404     		.2byte	0x494
 3051 0ac5 99000000 		.4byte	0x99
 3052 0ac9 79020000 		.4byte	.LLST17
 3053 0acd 1B       		.uleb128 0x1b
 3054 0ace 1D030000 		.4byte	.LASF135
 3055 0ad2 01       		.byte	0x1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 115


 3056 0ad3 9504     		.2byte	0x495
 3057 0ad5 99000000 		.4byte	0x99
 3058 0ad9 98020000 		.4byte	.LLST18
 3059 0add 1B       		.uleb128 0x1b
 3060 0ade 3C040000 		.4byte	.LASF136
 3061 0ae2 01       		.byte	0x1
 3062 0ae3 9704     		.2byte	0x497
 3063 0ae5 99000000 		.4byte	0x99
 3064 0ae9 B7020000 		.4byte	.LLST19
 3065 0aed 1B       		.uleb128 0x1b
 3066 0aee 26060000 		.4byte	.LASF137
 3067 0af2 01       		.byte	0x1
 3068 0af3 9804     		.2byte	0x498
 3069 0af5 99000000 		.4byte	0x99
 3070 0af9 E2020000 		.4byte	.LLST20
 3071 0afd 1B       		.uleb128 0x1b
 3072 0afe 7E020000 		.4byte	.LASF138
 3073 0b02 01       		.byte	0x1
 3074 0b03 9A04     		.2byte	0x49a
 3075 0b05 6D0A0000 		.4byte	0xa6d
 3076 0b09 30030000 		.4byte	.LLST21
 3077 0b0d 22       		.uleb128 0x22
 3078 0b0e 22000000 		.4byte	.LVL44
 3079 0b12 99130000 		.4byte	0x1399
 3080 0b16 23       		.uleb128 0x23
 3081 0b17 68000000 		.4byte	.LVL61
 3082 0b1b A4130000 		.4byte	0x13a4
 3083 0b1f 2C0B0000 		.4byte	0xb2c
 3084 0b23 1D       		.uleb128 0x1d
 3085 0b24 01       		.uleb128 0x1
 3086 0b25 50       		.byte	0x50
 3087 0b26 04       		.uleb128 0x4
 3088 0b27 91       		.byte	0x91
 3089 0b28 64       		.sleb128 -28
 3090 0b29 94       		.byte	0x94
 3091 0b2a 01       		.byte	0x1
 3092 0b2b 00       		.byte	0
 3093 0b2c 1C       		.uleb128 0x1c
 3094 0b2d 74000000 		.4byte	.LVL62
 3095 0b31 BB130000 		.4byte	0x13bb
 3096 0b35 1D       		.uleb128 0x1d
 3097 0b36 01       		.uleb128 0x1
 3098 0b37 50       		.byte	0x50
 3099 0b38 02       		.uleb128 0x2
 3100 0b39 76       		.byte	0x76
 3101 0b3a 00       		.sleb128 0
 3102 0b3b 00       		.byte	0
 3103 0b3c 00       		.byte	0
 3104 0b3d 24       		.uleb128 0x24
 3105 0b3e 6D0C0000 		.4byte	.LASF139
 3106 0b42 01       		.byte	0x1
 3107 0b43 2405     		.2byte	0x524
 3108 0b45 00000000 		.4byte	.LFB12
 3109 0b49 68000000 		.4byte	.LFE12-.LFB12
 3110 0b4d 01       		.uleb128 0x1
 3111 0b4e 9C       		.byte	0x9c
 3112 0b4f 760B0000 		.4byte	0xb76
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 116


 3113 0b53 1B       		.uleb128 0x1b
 3114 0b54 EB070000 		.4byte	.LASF140
 3115 0b58 01       		.byte	0x1
 3116 0b59 2C05     		.2byte	0x52c
 3117 0b5b BA000000 		.4byte	0xba
 3118 0b5f 6A030000 		.4byte	.LLST22
 3119 0b63 22       		.uleb128 0x22
 3120 0b64 14000000 		.4byte	.LVL66
 3121 0b68 2F080000 		.4byte	0x82f
 3122 0b6c 22       		.uleb128 0x22
 3123 0b6d 24000000 		.4byte	.LVL67
 3124 0b71 7C070000 		.4byte	0x77c
 3125 0b75 00       		.byte	0
 3126 0b76 24       		.uleb128 0x24
 3127 0b77 24080000 		.4byte	.LASF141
 3128 0b7b 01       		.byte	0x1
 3129 0b7c 7105     		.2byte	0x571
 3130 0b7e 00000000 		.4byte	.LFB13
 3131 0b82 08000000 		.4byte	.LFE13-.LFB13
 3132 0b86 01       		.uleb128 0x1
 3133 0b87 9C       		.byte	0x9c
 3134 0b88 AE0B0000 		.4byte	0xbae
 3135 0b8c 1A       		.uleb128 0x1a
 3136 0b8d 4F0A0000 		.4byte	.LASF142
 3137 0b91 01       		.byte	0x1
 3138 0b92 7105     		.2byte	0x571
 3139 0b94 DC000000 		.4byte	0xdc
 3140 0b98 94030000 		.4byte	.LLST23
 3141 0b9c 1C       		.uleb128 0x1c
 3142 0b9d 06000000 		.4byte	.LVL73
 3143 0ba1 C7130000 		.4byte	0x13c7
 3144 0ba5 1D       		.uleb128 0x1d
 3145 0ba6 01       		.uleb128 0x1
 3146 0ba7 50       		.byte	0x50
 3147 0ba8 03       		.uleb128 0x3
 3148 0ba9 F3       		.byte	0xf3
 3149 0baa 01       		.uleb128 0x1
 3150 0bab 50       		.byte	0x50
 3151 0bac 00       		.byte	0
 3152 0bad 00       		.byte	0
 3153 0bae 24       		.uleb128 0x24
 3154 0baf 9A010000 		.4byte	.LASF143
 3155 0bb3 01       		.byte	0x1
 3156 0bb4 8805     		.2byte	0x588
 3157 0bb6 00000000 		.4byte	.LFB14
 3158 0bba 2C000000 		.4byte	.LFE14-.LFB14
 3159 0bbe 01       		.uleb128 0x1
 3160 0bbf 9C       		.byte	0x9c
 3161 0bc0 D50B0000 		.4byte	0xbd5
 3162 0bc4 1A       		.uleb128 0x1a
 3163 0bc5 7D030000 		.4byte	.LASF144
 3164 0bc9 01       		.byte	0x1
 3165 0bca 8805     		.2byte	0x588
 3166 0bcc 99000000 		.4byte	0x99
 3167 0bd0 B5030000 		.4byte	.LLST24
 3168 0bd4 00       		.byte	0
 3169 0bd5 24       		.uleb128 0x24
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 117


 3170 0bd6 19050000 		.4byte	.LASF145
 3171 0bda 01       		.byte	0x1
 3172 0bdb CC05     		.2byte	0x5cc
 3173 0bdd 00000000 		.4byte	.LFB15
 3174 0be1 14000000 		.4byte	.LFE15-.LFB15
 3175 0be5 01       		.uleb128 0x1
 3176 0be6 9C       		.byte	0x9c
 3177 0be7 0C0C0000 		.4byte	0xc0c
 3178 0beb 1A       		.uleb128 0x1a
 3179 0bec C60B0000 		.4byte	.LASF37
 3180 0bf0 01       		.byte	0x1
 3181 0bf1 CC05     		.2byte	0x5cc
 3182 0bf3 99000000 		.4byte	0x99
 3183 0bf7 E3030000 		.4byte	.LLST25
 3184 0bfb 1B       		.uleb128 0x1b
 3185 0bfc A30C0000 		.4byte	.LASF146
 3186 0c00 01       		.byte	0x1
 3187 0c01 CF05     		.2byte	0x5cf
 3188 0c03 99000000 		.4byte	0x99
 3189 0c07 11040000 		.4byte	.LLST26
 3190 0c0b 00       		.byte	0
 3191 0c0c 24       		.uleb128 0x24
 3192 0c0d 1A070000 		.4byte	.LASF147
 3193 0c11 01       		.byte	0x1
 3194 0c12 2006     		.2byte	0x620
 3195 0c14 00000000 		.4byte	.LFB16
 3196 0c18 12000000 		.4byte	.LFE16-.LFB16
 3197 0c1c 01       		.uleb128 0x1
 3198 0c1d 9C       		.byte	0x9c
 3199 0c1e 680C0000 		.4byte	0xc68
 3200 0c22 1A       		.uleb128 0x1a
 3201 0c23 C60B0000 		.4byte	.LASF37
 3202 0c27 01       		.byte	0x1
 3203 0c28 2006     		.2byte	0x620
 3204 0c2a 99000000 		.4byte	0x99
 3205 0c2e 3A040000 		.4byte	.LLST27
 3206 0c32 1A       		.uleb128 0x1a
 3207 0c33 7D030000 		.4byte	.LASF144
 3208 0c37 01       		.byte	0x1
 3209 0c38 2006     		.2byte	0x620
 3210 0c3a 99000000 		.4byte	0x99
 3211 0c3e 66040000 		.4byte	.LLST28
 3212 0c42 23       		.uleb128 0x23
 3213 0c43 0A000000 		.4byte	.LVL85
 3214 0c47 AE0B0000 		.4byte	0xbae
 3215 0c4b 570C0000 		.4byte	0xc57
 3216 0c4f 1D       		.uleb128 0x1d
 3217 0c50 01       		.uleb128 0x1
 3218 0c51 50       		.byte	0x50
 3219 0c52 03       		.uleb128 0x3
 3220 0c53 F3       		.byte	0xf3
 3221 0c54 01       		.uleb128 0x1
 3222 0c55 51       		.byte	0x51
 3223 0c56 00       		.byte	0
 3224 0c57 1C       		.uleb128 0x1c
 3225 0c58 10000000 		.4byte	.LVL86
 3226 0c5c D50B0000 		.4byte	0xbd5
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 118


 3227 0c60 1D       		.uleb128 0x1d
 3228 0c61 01       		.uleb128 0x1
 3229 0c62 50       		.byte	0x50
 3230 0c63 02       		.uleb128 0x2
 3231 0c64 74       		.byte	0x74
 3232 0c65 00       		.sleb128 0
 3233 0c66 00       		.byte	0
 3234 0c67 00       		.byte	0
 3235 0c68 1E       		.uleb128 0x1e
 3236 0c69 9A070000 		.4byte	0x79a
 3237 0c6d 00000000 		.4byte	.LFB17
 3238 0c71 12000000 		.4byte	.LFE17-.LFB17
 3239 0c75 01       		.uleb128 0x1
 3240 0c76 9C       		.byte	0x9c
 3241 0c77 C70C0000 		.4byte	0xcc7
 3242 0c7b 28       		.uleb128 0x28
 3243 0c7c AB070000 		.4byte	0x7ab
 3244 0c80 87040000 		.4byte	.LLST29
 3245 0c84 1F       		.uleb128 0x1f
 3246 0c85 B7070000 		.4byte	0x7b7
 3247 0c89 C1040000 		.4byte	.LLST30
 3248 0c8d 20       		.uleb128 0x20
 3249 0c8e 0A000000 		.4byte	.LBB10
 3250 0c92 06000000 		.4byte	.LBE10-.LBB10
 3251 0c96 28       		.uleb128 0x28
 3252 0c97 AB070000 		.4byte	0x7ab
 3253 0c9b D5040000 		.4byte	.LLST31
 3254 0c9f 20       		.uleb128 0x20
 3255 0ca0 0A000000 		.4byte	.LBB11
 3256 0ca4 06000000 		.4byte	.LBE11-.LBB11
 3257 0ca8 21       		.uleb128 0x21
 3258 0ca9 B7070000 		.4byte	0x7b7
 3259 0cad 1C       		.uleb128 0x1c
 3260 0cae 10000000 		.4byte	.LVL91
 3261 0cb2 D2130000 		.4byte	0x13d2
 3262 0cb6 1D       		.uleb128 0x1d
 3263 0cb7 01       		.uleb128 0x1
 3264 0cb8 50       		.byte	0x50
 3265 0cb9 03       		.uleb128 0x3
 3266 0cba F3       		.byte	0xf3
 3267 0cbb 01       		.uleb128 0x1
 3268 0cbc 50       		.byte	0x50
 3269 0cbd 1D       		.uleb128 0x1d
 3270 0cbe 01       		.uleb128 0x1
 3271 0cbf 51       		.byte	0x51
 3272 0cc0 02       		.uleb128 0x2
 3273 0cc1 08       		.byte	0x8
 3274 0cc2 55       		.byte	0x55
 3275 0cc3 00       		.byte	0
 3276 0cc4 00       		.byte	0
 3277 0cc5 00       		.byte	0
 3278 0cc6 00       		.byte	0
 3279 0cc7 19       		.uleb128 0x19
 3280 0cc8 F2080000 		.4byte	.LASF148
 3281 0ccc 01       		.byte	0x1
 3282 0ccd C906     		.2byte	0x6c9
 3283 0ccf BA000000 		.4byte	0xba
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 119


 3284 0cd3 00000000 		.4byte	.LFB18
 3285 0cd7 18000000 		.4byte	.LFE18-.LFB18
 3286 0cdb 01       		.uleb128 0x1
 3287 0cdc 9C       		.byte	0x9c
 3288 0cdd 120D0000 		.4byte	0xd12
 3289 0ce1 1B       		.uleb128 0x1b
 3290 0ce2 BE050000 		.4byte	.LASF112
 3291 0ce6 01       		.byte	0x1
 3292 0ce7 CB06     		.2byte	0x6cb
 3293 0ce9 BA000000 		.4byte	0xba
 3294 0ced F6040000 		.4byte	.LLST32
 3295 0cf1 1B       		.uleb128 0x1b
 3296 0cf2 5D070000 		.4byte	.LASF121
 3297 0cf6 01       		.byte	0x1
 3298 0cf7 CC06     		.2byte	0x6cc
 3299 0cf9 99000000 		.4byte	0x99
 3300 0cfd 20050000 		.4byte	.LLST33
 3301 0d01 1C       		.uleb128 0x1c
 3302 0d02 0C000000 		.4byte	.LVL94
 3303 0d06 9A070000 		.4byte	0x79a
 3304 0d0a 1D       		.uleb128 0x1d
 3305 0d0b 01       		.uleb128 0x1
 3306 0d0c 50       		.byte	0x50
 3307 0d0d 02       		.uleb128 0x2
 3308 0d0e 74       		.byte	0x74
 3309 0d0f 00       		.sleb128 0
 3310 0d10 00       		.byte	0
 3311 0d11 00       		.byte	0
 3312 0d12 1E       		.uleb128 0x1e
 3313 0d13 C4070000 		.4byte	0x7c4
 3314 0d17 00000000 		.4byte	.LFB23
 3315 0d1b 14000000 		.4byte	.LFE23-.LFB23
 3316 0d1f 01       		.uleb128 0x1
 3317 0d20 9C       		.byte	0x9c
 3318 0d21 390D0000 		.4byte	0xd39
 3319 0d25 28       		.uleb128 0x28
 3320 0d26 D5070000 		.4byte	0x7d5
 3321 0d2a 57050000 		.4byte	.LLST34
 3322 0d2e 21       		.uleb128 0x21
 3323 0d2f E1070000 		.4byte	0x7e1
 3324 0d33 21       		.uleb128 0x21
 3325 0d34 ED070000 		.4byte	0x7ed
 3326 0d38 00       		.byte	0
 3327 0d39 19       		.uleb128 0x19
 3328 0d3a 4E030000 		.4byte	.LASF149
 3329 0d3e 01       		.byte	0x1
 3330 0d3f 400B     		.2byte	0xb40
 3331 0d41 81000000 		.4byte	0x81
 3332 0d45 00000000 		.4byte	.LFB24
 3333 0d49 20000000 		.4byte	.LFE24-.LFB24
 3334 0d4d 01       		.uleb128 0x1
 3335 0d4e 9C       		.byte	0x9c
 3336 0d4f 8F0D0000 		.4byte	0xd8f
 3337 0d53 1A       		.uleb128 0x1a
 3338 0d54 E00C0000 		.4byte	.LASF150
 3339 0d58 01       		.byte	0x1
 3340 0d59 400B     		.2byte	0xb40
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 120


 3341 0d5b 99000000 		.4byte	0x99
 3342 0d5f 78050000 		.4byte	.LLST35
 3343 0d63 1A       		.uleb128 0x1a
 3344 0d64 BF040000 		.4byte	.LASF28
 3345 0d68 01       		.byte	0x1
 3346 0d69 400B     		.2byte	0xb40
 3347 0d6b 99000000 		.4byte	0x99
 3348 0d6f 99050000 		.4byte	.LLST36
 3349 0d73 27       		.uleb128 0x27
 3350 0d74 1D0A0000 		.4byte	.LASF151
 3351 0d78 01       		.byte	0x1
 3352 0d79 420B     		.2byte	0xb42
 3353 0d7b 99000000 		.4byte	0x99
 3354 0d7f 01       		.uleb128 0x1
 3355 0d80 52       		.byte	0x52
 3356 0d81 25       		.uleb128 0x25
 3357 0d82 EE0C0000 		.4byte	.LASF152
 3358 0d86 01       		.byte	0x1
 3359 0d87 430B     		.2byte	0xb43
 3360 0d89 99000000 		.4byte	0x99
 3361 0d8d 01       		.byte	0x1
 3362 0d8e 00       		.byte	0
 3363 0d8f 29       		.uleb128 0x29
 3364 0d90 09020000 		.4byte	.LASF170
 3365 0d94 01       		.byte	0x1
 3366 0d95 9909     		.2byte	0x999
 3367 0d97 01       		.byte	0x1
 3368 0d98 E50D0000 		.4byte	0xde5
 3369 0d9c 16       		.uleb128 0x16
 3370 0d9d 5D070000 		.4byte	.LASF121
 3371 0da1 01       		.byte	0x1
 3372 0da2 9909     		.2byte	0x999
 3373 0da4 99000000 		.4byte	0x99
 3374 0da8 16       		.uleb128 0x16
 3375 0da9 F8010000 		.4byte	.LASF116
 3376 0dad 01       		.byte	0x1
 3377 0dae 9909     		.2byte	0x999
 3378 0db0 FA070000 		.4byte	0x7fa
 3379 0db4 15       		.uleb128 0x15
 3380 0db5 ED020000 		.4byte	.LASF153
 3381 0db9 01       		.byte	0x1
 3382 0dba 9B09     		.2byte	0x99b
 3383 0dbc 81000000 		.4byte	0x81
 3384 0dc0 15       		.uleb128 0x15
 3385 0dc1 5E010000 		.4byte	.LASF154
 3386 0dc5 01       		.byte	0x1
 3387 0dc6 9C09     		.2byte	0x99c
 3388 0dc8 81000000 		.4byte	0x81
 3389 0dcc 15       		.uleb128 0x15
 3390 0dcd 7A040000 		.4byte	.LASF155
 3391 0dd1 01       		.byte	0x1
 3392 0dd2 A009     		.2byte	0x9a0
 3393 0dd4 99000000 		.4byte	0x99
 3394 0dd8 15       		.uleb128 0x15
 3395 0dd9 E00C0000 		.4byte	.LASF150
 3396 0ddd 01       		.byte	0x1
 3397 0dde A209     		.2byte	0x9a2
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 121


 3398 0de0 99000000 		.4byte	0x99
 3399 0de4 00       		.byte	0
 3400 0de5 2A       		.uleb128 0x2a
 3401 0de6 D5030000 		.4byte	.LASF156
 3402 0dea 01       		.byte	0x1
 3403 0deb 3B0A     		.2byte	0xa3b
 3404 0ded 81000000 		.4byte	0x81
 3405 0df1 01       		.byte	0x1
 3406 0df2 1B0E0000 		.4byte	0xe1b
 3407 0df6 16       		.uleb128 0x16
 3408 0df7 E00C0000 		.4byte	.LASF150
 3409 0dfb 01       		.byte	0x1
 3410 0dfc 3B0A     		.2byte	0xa3b
 3411 0dfe 99000000 		.4byte	0x99
 3412 0e02 16       		.uleb128 0x16
 3413 0e03 7A040000 		.4byte	.LASF155
 3414 0e07 01       		.byte	0x1
 3415 0e08 3B0A     		.2byte	0xa3b
 3416 0e0a 99000000 		.4byte	0x99
 3417 0e0e 15       		.uleb128 0x15
 3418 0e0f ED020000 		.4byte	.LASF153
 3419 0e13 01       		.byte	0x1
 3420 0e14 3D0A     		.2byte	0xa3d
 3421 0e16 81000000 		.4byte	0x81
 3422 0e1a 00       		.byte	0
 3423 0e1b 2A       		.uleb128 0x2a
 3424 0e1c 41020000 		.4byte	.LASF157
 3425 0e20 01       		.byte	0x1
 3426 0e21 870A     		.2byte	0xa87
 3427 0e23 81000000 		.4byte	0x81
 3428 0e27 01       		.byte	0x1
 3429 0e28 690E0000 		.4byte	0xe69
 3430 0e2c 16       		.uleb128 0x16
 3431 0e2d E00C0000 		.4byte	.LASF150
 3432 0e31 01       		.byte	0x1
 3433 0e32 870A     		.2byte	0xa87
 3434 0e34 99000000 		.4byte	0x99
 3435 0e38 16       		.uleb128 0x16
 3436 0e39 ED020000 		.4byte	.LASF153
 3437 0e3d 01       		.byte	0x1
 3438 0e3e 870A     		.2byte	0xa87
 3439 0e40 81000000 		.4byte	0x81
 3440 0e44 15       		.uleb128 0x15
 3441 0e45 5E010000 		.4byte	.LASF154
 3442 0e49 01       		.byte	0x1
 3443 0e4a 890A     		.2byte	0xa89
 3444 0e4c 99000000 		.4byte	0x99
 3445 0e50 15       		.uleb128 0x15
 3446 0e51 6E010000 		.4byte	.LASF158
 3447 0e55 01       		.byte	0x1
 3448 0e56 8A0A     		.2byte	0xa8a
 3449 0e58 99000000 		.4byte	0x99
 3450 0e5c 15       		.uleb128 0x15
 3451 0e5d 980C0000 		.4byte	.LASF159
 3452 0e61 01       		.byte	0x1
 3453 0e62 8B0A     		.2byte	0xa8b
 3454 0e64 99000000 		.4byte	0x99
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 122


 3455 0e68 00       		.byte	0
 3456 0e69 2B       		.uleb128 0x2b
 3457 0e6a 550D0000 		.4byte	.LASF160
 3458 0e6e 01       		.byte	0x1
 3459 0e6f 6409     		.2byte	0x964
 3460 0e71 00000000 		.4byte	.LFB19
 3461 0e75 C8000000 		.4byte	.LFE19-.LFB19
 3462 0e79 01       		.uleb128 0x1
 3463 0e7a 9C       		.byte	0x9c
 3464 0e7b BE0F0000 		.4byte	0xfbe
 3465 0e7f 1B       		.uleb128 0x1b
 3466 0e80 5D070000 		.4byte	.LASF121
 3467 0e84 01       		.byte	0x1
 3468 0e85 6609     		.2byte	0x966
 3469 0e87 99000000 		.4byte	0x99
 3470 0e8b BA050000 		.4byte	.LLST37
 3471 0e8f 1B       		.uleb128 0x1b
 3472 0e90 F8010000 		.4byte	.LASF116
 3473 0e94 01       		.byte	0x1
 3474 0e95 6709     		.2byte	0x967
 3475 0e97 FA070000 		.4byte	0x7fa
 3476 0e9b CE050000 		.4byte	.LLST38
 3477 0e9f 2C       		.uleb128 0x2c
 3478 0ea0 8F0D0000 		.4byte	0xd8f
 3479 0ea4 06000000 		.4byte	.LBB20
 3480 0ea8 00000000 		.4byte	.Ldebug_ranges0+0
 3481 0eac 01       		.byte	0x1
 3482 0ead 7109     		.2byte	0x971
 3483 0eaf 28       		.uleb128 0x28
 3484 0eb0 A80D0000 		.4byte	0xda8
 3485 0eb4 ED050000 		.4byte	.LLST39
 3486 0eb8 2D       		.uleb128 0x2d
 3487 0eb9 9C0D0000 		.4byte	0xd9c
 3488 0ebd 2E       		.uleb128 0x2e
 3489 0ebe 00000000 		.4byte	.Ldebug_ranges0+0
 3490 0ec2 1F       		.uleb128 0x1f
 3491 0ec3 B40D0000 		.4byte	0xdb4
 3492 0ec7 18060000 		.4byte	.LLST40
 3493 0ecb 21       		.uleb128 0x21
 3494 0ecc C00D0000 		.4byte	0xdc0
 3495 0ed0 1F       		.uleb128 0x1f
 3496 0ed1 CC0D0000 		.4byte	0xdcc
 3497 0ed5 36060000 		.4byte	.LLST41
 3498 0ed9 2F       		.uleb128 0x2f
 3499 0eda D80D0000 		.4byte	0xdd8
 3500 0ede 01       		.uleb128 0x1
 3501 0edf 56       		.byte	0x56
 3502 0ee0 30       		.uleb128 0x30
 3503 0ee1 C4070000 		.4byte	0x7c4
 3504 0ee5 0A000000 		.4byte	.LBB22
 3505 0ee9 02000000 		.4byte	.LBE22-.LBB22
 3506 0eed 01       		.byte	0x1
 3507 0eee A609     		.2byte	0x9a6
 3508 0ef0 120F0000 		.4byte	0xf12
 3509 0ef4 2D       		.uleb128 0x2d
 3510 0ef5 D5070000 		.4byte	0x7d5
 3511 0ef9 20       		.uleb128 0x20
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 123


 3512 0efa 0A000000 		.4byte	.LBB23
 3513 0efe 02000000 		.4byte	.LBE23-.LBB23
 3514 0f02 21       		.uleb128 0x21
 3515 0f03 E1070000 		.4byte	0x7e1
 3516 0f07 1F       		.uleb128 0x1f
 3517 0f08 ED070000 		.4byte	0x7ed
 3518 0f0c A1060000 		.4byte	.LLST42
 3519 0f10 00       		.byte	0
 3520 0f11 00       		.byte	0
 3521 0f12 31       		.uleb128 0x31
 3522 0f13 E50D0000 		.4byte	0xde5
 3523 0f17 16000000 		.4byte	.LBB24
 3524 0f1b 20000000 		.4byte	.Ldebug_ranges0+0x20
 3525 0f1f 01       		.byte	0x1
 3526 0f20 AB09     		.2byte	0x9ab
 3527 0f22 480F0000 		.4byte	0xf48
 3528 0f26 28       		.uleb128 0x28
 3529 0f27 020E0000 		.4byte	0xe02
 3530 0f2b B4060000 		.4byte	.LLST43
 3531 0f2f 28       		.uleb128 0x28
 3532 0f30 F60D0000 		.4byte	0xdf6
 3533 0f34 1F070000 		.4byte	.LLST44
 3534 0f38 2E       		.uleb128 0x2e
 3535 0f39 20000000 		.4byte	.Ldebug_ranges0+0x20
 3536 0f3d 1F       		.uleb128 0x1f
 3537 0f3e 0E0E0000 		.4byte	0xe0e
 3538 0f42 3D070000 		.4byte	.LLST45
 3539 0f46 00       		.byte	0
 3540 0f47 00       		.byte	0
 3541 0f48 31       		.uleb128 0x31
 3542 0f49 1B0E0000 		.4byte	0xe1b
 3543 0f4d 74000000 		.4byte	.LBB27
 3544 0f51 38000000 		.4byte	.Ldebug_ranges0+0x38
 3545 0f55 01       		.byte	0x1
 3546 0f56 B409     		.2byte	0x9b4
 3547 0f58 900F0000 		.4byte	0xf90
 3548 0f5c 28       		.uleb128 0x28
 3549 0f5d 380E0000 		.4byte	0xe38
 3550 0f61 18060000 		.4byte	.LLST40
 3551 0f65 28       		.uleb128 0x28
 3552 0f66 2C0E0000 		.4byte	0xe2c
 3553 0f6a 5D070000 		.4byte	.LLST47
 3554 0f6e 2E       		.uleb128 0x2e
 3555 0f6f 38000000 		.4byte	.Ldebug_ranges0+0x38
 3556 0f73 1F       		.uleb128 0x1f
 3557 0f74 440E0000 		.4byte	0xe44
 3558 0f78 70070000 		.4byte	.LLST48
 3559 0f7c 1F       		.uleb128 0x1f
 3560 0f7d 500E0000 		.4byte	0xe50
 3561 0f81 8F070000 		.4byte	.LLST49
 3562 0f85 1F       		.uleb128 0x1f
 3563 0f86 5C0E0000 		.4byte	0xe5c
 3564 0f8a A3070000 		.4byte	.LLST50
 3565 0f8e 00       		.byte	0
 3566 0f8f 00       		.byte	0
 3567 0f90 23       		.uleb128 0x23
 3568 0f91 14000000 		.4byte	.LVL109
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 124


 3569 0f95 DE130000 		.4byte	0x13de
 3570 0f99 A90F0000 		.4byte	0xfa9
 3571 0f9d 1D       		.uleb128 0x1d
 3572 0f9e 01       		.uleb128 0x1
 3573 0f9f 50       		.byte	0x50
 3574 0fa0 02       		.uleb128 0x2
 3575 0fa1 76       		.byte	0x76
 3576 0fa2 00       		.sleb128 0
 3577 0fa3 1D       		.uleb128 0x1d
 3578 0fa4 01       		.uleb128 0x1
 3579 0fa5 52       		.byte	0x52
 3580 0fa6 01       		.uleb128 0x1
 3581 0fa7 30       		.byte	0x30
 3582 0fa8 00       		.byte	0
 3583 0fa9 1C       		.uleb128 0x1c
 3584 0faa 74000000 		.4byte	.LVL122
 3585 0fae 390D0000 		.4byte	0xd39
 3586 0fb2 1D       		.uleb128 0x1d
 3587 0fb3 01       		.uleb128 0x1
 3588 0fb4 50       		.byte	0x50
 3589 0fb5 04       		.uleb128 0x4
 3590 0fb6 76       		.byte	0x76
 3591 0fb7 00       		.sleb128 0
 3592 0fb8 31       		.byte	0x31
 3593 0fb9 24       		.byte	0x24
 3594 0fba 00       		.byte	0
 3595 0fbb 00       		.byte	0
 3596 0fbc 00       		.byte	0
 3597 0fbd 00       		.byte	0
 3598 0fbe 24       		.uleb128 0x24
 3599 0fbf 1C040000 		.4byte	.LASF161
 3600 0fc3 01       		.byte	0x1
 3601 0fc4 7A0B     		.2byte	0xb7a
 3602 0fc6 00000000 		.4byte	.LFB25
 3603 0fca A8000000 		.4byte	.LFE25-.LFB25
 3604 0fce 01       		.uleb128 0x1
 3605 0fcf 9C       		.byte	0x9c
 3606 0fd0 B7100000 		.4byte	0x10b7
 3607 0fd4 1A       		.uleb128 0x1a
 3608 0fd5 9B030000 		.4byte	.LASF162
 3609 0fd9 01       		.byte	0x1
 3610 0fda 7A0B     		.2byte	0xb7a
 3611 0fdc 99000000 		.4byte	0x99
 3612 0fe0 C3070000 		.4byte	.LLST51
 3613 0fe4 1B       		.uleb128 0x1b
 3614 0fe5 91010000 		.4byte	.LASF163
 3615 0fe9 01       		.byte	0x1
 3616 0fea 7C0B     		.2byte	0xb7c
 3617 0fec 99000000 		.4byte	0x99
 3618 0ff0 E2070000 		.4byte	.LLST52
 3619 0ff4 1B       		.uleb128 0x1b
 3620 0ff5 68010000 		.4byte	.LASF164
 3621 0ff9 01       		.byte	0x1
 3622 0ffa 7D0B     		.2byte	0xb7d
 3623 0ffc 99000000 		.4byte	0x99
 3624 1000 1C080000 		.4byte	.LLST53
 3625 1004 1B       		.uleb128 0x1b
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 125


 3626 1005 11030000 		.4byte	.LASF165
 3627 1009 01       		.byte	0x1
 3628 100a 7E0B     		.2byte	0xb7e
 3629 100c 99000000 		.4byte	0x99
 3630 1010 43080000 		.4byte	.LLST54
 3631 1014 1B       		.uleb128 0x1b
 3632 1015 A30C0000 		.4byte	.LASF146
 3633 1019 01       		.byte	0x1
 3634 101a 7F0B     		.2byte	0xb7f
 3635 101c 99000000 		.4byte	0x99
 3636 1020 6C080000 		.4byte	.LLST55
 3637 1024 1B       		.uleb128 0x1b
 3638 1025 33010000 		.4byte	.LASF129
 3639 1029 01       		.byte	0x1
 3640 102a 800B     		.2byte	0xb80
 3641 102c 81000000 		.4byte	0x81
 3642 1030 C1080000 		.4byte	.LLST56
 3643 1034 22       		.uleb128 0x22
 3644 1035 1E000000 		.4byte	.LVL141
 3645 1039 99130000 		.4byte	0x1399
 3646 103d 22       		.uleb128 0x22
 3647 103e 2A000000 		.4byte	.LVL144
 3648 1042 A4130000 		.4byte	0x13a4
 3649 1046 22       		.uleb128 0x22
 3650 1047 2E000000 		.4byte	.LVL145
 3651 104b 99130000 		.4byte	0x1399
 3652 104f 22       		.uleb128 0x22
 3653 1050 3A000000 		.4byte	.LVL148
 3654 1054 A4130000 		.4byte	0x13a4
 3655 1058 22       		.uleb128 0x22
 3656 1059 3E000000 		.4byte	.LVL149
 3657 105d 99130000 		.4byte	0x1399
 3658 1061 22       		.uleb128 0x22
 3659 1062 4C000000 		.4byte	.LVL153
 3660 1066 A4130000 		.4byte	0x13a4
 3661 106a 23       		.uleb128 0x23
 3662 106b 54000000 		.4byte	.LVL154
 3663 106f EA130000 		.4byte	0x13ea
 3664 1073 80100000 		.4byte	0x1080
 3665 1077 1D       		.uleb128 0x1d
 3666 1078 01       		.uleb128 0x1
 3667 1079 50       		.byte	0x50
 3668 107a 04       		.uleb128 0x4
 3669 107b 7D       		.byte	0x7d
 3670 107c 0C       		.sleb128 12
 3671 107d 94       		.byte	0x94
 3672 107e 02       		.byte	0x2
 3673 107f 00       		.byte	0
 3674 1080 22       		.uleb128 0x22
 3675 1081 58000000 		.4byte	.LVL155
 3676 1085 99130000 		.4byte	0x1399
 3677 1089 22       		.uleb128 0x22
 3678 108a 68000000 		.4byte	.LVL159
 3679 108e A4130000 		.4byte	0x13a4
 3680 1092 22       		.uleb128 0x22
 3681 1093 6C000000 		.4byte	.LVL160
 3682 1097 99130000 		.4byte	0x1399
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 126


 3683 109b 22       		.uleb128 0x22
 3684 109c 80000000 		.4byte	.LVL164
 3685 10a0 A4130000 		.4byte	0x13a4
 3686 10a4 22       		.uleb128 0x22
 3687 10a5 84000000 		.4byte	.LVL165
 3688 10a9 99130000 		.4byte	0x1399
 3689 10ad 22       		.uleb128 0x22
 3690 10ae 98000000 		.4byte	.LVL169
 3691 10b2 A4130000 		.4byte	0x13a4
 3692 10b6 00       		.byte	0
 3693 10b7 19       		.uleb128 0x19
 3694 10b8 52050000 		.4byte	.LASF166
 3695 10bc 01       		.byte	0x1
 3696 10bd 840C     		.2byte	0xc84
 3697 10bf 76000000 		.4byte	0x76
 3698 10c3 00000000 		.4byte	.LFB26
 3699 10c7 14000000 		.4byte	.LFE26-.LFB26
 3700 10cb 01       		.uleb128 0x1
 3701 10cc 9C       		.byte	0x9c
 3702 10cd 00110000 		.4byte	0x1100
 3703 10d1 1A       		.uleb128 0x1a
 3704 10d2 78030000 		.4byte	.LASF117
 3705 10d6 01       		.byte	0x1
 3706 10d7 840C     		.2byte	0xc84
 3707 10d9 45070000 		.4byte	0x745
 3708 10dd 0B090000 		.4byte	.LLST57
 3709 10e1 32       		.uleb128 0x32
 3710 10e2 940B0000 		.4byte	.LASF126
 3711 10e6 01       		.byte	0x1
 3712 10e7 840C     		.2byte	0xc84
 3713 10e9 76000000 		.4byte	0x76
 3714 10ed 01       		.uleb128 0x1
 3715 10ee 51       		.byte	0x51
 3716 10ef 1B       		.uleb128 0x1b
 3717 10f0 480A0000 		.4byte	.LASF115
 3718 10f4 01       		.byte	0x1
 3719 10f5 860C     		.2byte	0xc86
 3720 10f7 76000000 		.4byte	0x76
 3721 10fb 2C090000 		.4byte	.LLST58
 3722 10ff 00       		.byte	0
 3723 1100 24       		.uleb128 0x24
 3724 1101 0F060000 		.4byte	.LASF167
 3725 1105 01       		.byte	0x1
 3726 1106 D90C     		.2byte	0xcd9
 3727 1108 00000000 		.4byte	.LFB27
 3728 110c 1C000000 		.4byte	.LFE27-.LFB27
 3729 1110 01       		.uleb128 0x1
 3730 1111 9C       		.byte	0x9c
 3731 1112 69110000 		.4byte	0x1169
 3732 1116 1A       		.uleb128 0x1a
 3733 1117 BB010000 		.4byte	.LASF168
 3734 111b 01       		.byte	0x1
 3735 111c D90C     		.2byte	0xcd9
 3736 111e 2E060000 		.4byte	0x62e
 3737 1122 4B090000 		.4byte	.LLST59
 3738 1126 1A       		.uleb128 0x1a
 3739 1127 E3060000 		.4byte	.LASF82
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 127


 3740 112b 01       		.byte	0x1
 3741 112c D90C     		.2byte	0xcd9
 3742 112e 99000000 		.4byte	0x99
 3743 1132 77090000 		.4byte	.LLST60
 3744 1136 1A       		.uleb128 0x1a
 3745 1137 17030000 		.4byte	.LASF169
 3746 113b 01       		.byte	0x1
 3747 113c D90C     		.2byte	0xcd9
 3748 113e 99000000 		.4byte	0x99
 3749 1142 A3090000 		.4byte	.LLST61
 3750 1146 1B       		.uleb128 0x1b
 3751 1147 33010000 		.4byte	.LASF129
 3752 114b 01       		.byte	0x1
 3753 114c DB0C     		.2byte	0xcdb
 3754 114e 81000000 		.4byte	0x81
 3755 1152 CF090000 		.4byte	.LLST62
 3756 1156 22       		.uleb128 0x22
 3757 1157 0C000000 		.4byte	.LVL174
 3758 115b 99130000 		.4byte	0x1399
 3759 115f 22       		.uleb128 0x22
 3760 1160 1A000000 		.4byte	.LVL176
 3761 1164 A4130000 		.4byte	0x13a4
 3762 1168 00       		.byte	0
 3763 1169 29       		.uleb128 0x29
 3764 116a 42000000 		.4byte	.LASF171
 3765 116e 01       		.byte	0x1
 3766 116f B903     		.2byte	0x3b9
 3767 1171 01       		.byte	0x1
 3768 1172 83110000 		.4byte	0x1183
 3769 1176 15       		.uleb128 0x15
 3770 1177 A30C0000 		.4byte	.LASF146
 3771 117b 01       		.byte	0x1
 3772 117c BE03     		.2byte	0x3be
 3773 117e 99000000 		.4byte	0x99
 3774 1182 00       		.byte	0
 3775 1183 1E       		.uleb128 0x1e
 3776 1184 00080000 		.4byte	0x800
 3777 1188 00000000 		.4byte	.LFB10
 3778 118c 50000000 		.4byte	.LFE10-.LFB10
 3779 1190 01       		.uleb128 0x1
 3780 1191 9C       		.byte	0x9c
 3781 1192 1C120000 		.4byte	0x121c
 3782 1196 28       		.uleb128 0x28
 3783 1197 0D080000 		.4byte	0x80d
 3784 119b E2090000 		.4byte	.LLST63
 3785 119f 30       		.uleb128 0x30
 3786 11a0 69110000 		.4byte	0x1169
 3787 11a4 10000000 		.4byte	.LBB40
 3788 11a8 1A000000 		.4byte	.LBE40-.LBB40
 3789 11ac 01       		.byte	0x1
 3790 11ad 3304     		.2byte	0x433
 3791 11af FB110000 		.4byte	0x11fb
 3792 11b3 20       		.uleb128 0x20
 3793 11b4 10000000 		.4byte	.LBB41
 3794 11b8 1A000000 		.4byte	.LBE41-.LBB41
 3795 11bc 1F       		.uleb128 0x1f
 3796 11bd 76110000 		.4byte	0x1176
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 128


 3797 11c1 030A0000 		.4byte	.LLST64
 3798 11c5 23       		.uleb128 0x23
 3799 11c6 22000000 		.4byte	.LVL183
 3800 11ca 00110000 		.4byte	0x1100
 3801 11ce E7110000 		.4byte	0x11e7
 3802 11d2 1D       		.uleb128 0x1d
 3803 11d3 01       		.uleb128 0x1
 3804 11d4 50       		.byte	0x50
 3805 11d5 05       		.uleb128 0x5
 3806 11d6 0C       		.byte	0xc
 3807 11d7 00040240 		.4byte	0x40020400
 3808 11db 1D       		.uleb128 0x1d
 3809 11dc 01       		.uleb128 0x1
 3810 11dd 51       		.byte	0x51
 3811 11de 02       		.uleb128 0x2
 3812 11df 08       		.byte	0x8
 3813 11e0 F0       		.byte	0xf0
 3814 11e1 1D       		.uleb128 0x1d
 3815 11e2 01       		.uleb128 0x1
 3816 11e3 52       		.byte	0x52
 3817 11e4 01       		.uleb128 0x1
 3818 11e5 30       		.byte	0x30
 3819 11e6 00       		.byte	0
 3820 11e7 22       		.uleb128 0x22
 3821 11e8 26000000 		.4byte	.LVL184
 3822 11ec F5130000 		.4byte	0x13f5
 3823 11f0 22       		.uleb128 0x22
 3824 11f1 2A000000 		.4byte	.LVL185
 3825 11f5 01140000 		.4byte	0x1401
 3826 11f9 00       		.byte	0
 3827 11fa 00       		.byte	0
 3828 11fb 33       		.uleb128 0x33
 3829 11fc 3C000000 		.4byte	.LBB42
 3830 1200 04000000 		.4byte	.LBE42-.LBB42
 3831 1204 12120000 		.4byte	0x1212
 3832 1208 28       		.uleb128 0x28
 3833 1209 0D080000 		.4byte	0x80d
 3834 120d 160A0000 		.4byte	.LLST65
 3835 1211 00       		.byte	0
 3836 1212 22       		.uleb128 0x22
 3837 1213 32000000 		.4byte	.LVL186
 3838 1217 0D140000 		.4byte	0x140d
 3839 121b 00       		.byte	0
 3840 121c 19       		.uleb128 0x19
 3841 121d CA0C0000 		.4byte	.LASF172
 3842 1221 01       		.byte	0x1
 3843 1222 C302     		.2byte	0x2c3
 3844 1224 BA000000 		.4byte	0xba
 3845 1228 00000000 		.4byte	.LFB7
 3846 122c 28000000 		.4byte	.LFE7-.LFB7
 3847 1230 01       		.uleb128 0x1
 3848 1231 9C       		.byte	0x9c
 3849 1232 84120000 		.4byte	0x1284
 3850 1236 25       		.uleb128 0x25
 3851 1237 E6000000 		.4byte	.LASF173
 3852 123b 01       		.byte	0x1
 3853 123c C502     		.2byte	0x2c5
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 129


 3854 123e BA000000 		.4byte	0xba
 3855 1242 00       		.byte	0
 3856 1243 22       		.uleb128 0x22
 3857 1244 08000000 		.4byte	.LVL190
 3858 1248 690E0000 		.4byte	0xe69
 3859 124c 23       		.uleb128 0x23
 3860 124d 0E000000 		.4byte	.LVL191
 3861 1251 780A0000 		.4byte	0xa78
 3862 1255 60120000 		.4byte	0x1260
 3863 1259 1D       		.uleb128 0x1d
 3864 125a 01       		.uleb128 0x1
 3865 125b 50       		.byte	0x50
 3866 125c 02       		.uleb128 0x2
 3867 125d 74       		.byte	0x74
 3868 125e 00       		.sleb128 0
 3869 125f 00       		.byte	0
 3870 1260 23       		.uleb128 0x23
 3871 1261 1A000000 		.4byte	.LVL192
 3872 1265 00080000 		.4byte	0x800
 3873 1269 74120000 		.4byte	0x1274
 3874 126d 1D       		.uleb128 0x1d
 3875 126e 01       		.uleb128 0x1
 3876 126f 50       		.byte	0x50
 3877 1270 02       		.uleb128 0x2
 3878 1271 74       		.byte	0x74
 3879 1272 00       		.sleb128 0
 3880 1273 00       		.byte	0
 3881 1274 1C       		.uleb128 0x1c
 3882 1275 20000000 		.4byte	.LVL193
 3883 1279 00080000 		.4byte	0x800
 3884 127d 1D       		.uleb128 0x1d
 3885 127e 01       		.uleb128 0x1
 3886 127f 50       		.byte	0x50
 3887 1280 01       		.uleb128 0x1
 3888 1281 31       		.byte	0x31
 3889 1282 00       		.byte	0
 3890 1283 00       		.byte	0
 3891 1284 34       		.uleb128 0x34
 3892 1285 37060000 		.4byte	.LASF174
 3893 1289 06       		.byte	0x6
 3894 128a 0205     		.2byte	0x502
 3895 128c A3050000 		.4byte	0x5a3
 3896 1290 34       		.uleb128 0x34
 3897 1291 E7010000 		.4byte	.LASF175
 3898 1295 06       		.byte	0x6
 3899 1296 0305     		.2byte	0x503
 3900 1298 9C120000 		.4byte	0x129c
 3901 129c 26       		.uleb128 0x26
 3902 129d 07070000 		.4byte	0x707
 3903 12a1 0D       		.uleb128 0xd
 3904 12a2 730A0000 		.4byte	0xa73
 3905 12a6 B1120000 		.4byte	0x12b1
 3906 12aa 0E       		.uleb128 0xe
 3907 12ab DA010000 		.4byte	0x1da
 3908 12af 04       		.byte	0x4
 3909 12b0 00       		.byte	0
 3910 12b1 34       		.uleb128 0x34
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 130


 3911 12b2 5D0C0000 		.4byte	.LASF176
 3912 12b6 06       		.byte	0x6
 3913 12b7 0405     		.2byte	0x504
 3914 12b9 BD120000 		.4byte	0x12bd
 3915 12bd 26       		.uleb128 0x26
 3916 12be A1120000 		.4byte	0x12a1
 3917 12c2 35       		.uleb128 0x35
 3918 12c3 80000000 		.4byte	.LASF177
 3919 12c7 01       		.byte	0x1
 3920 12c8 BC       		.byte	0xbc
 3921 12c9 C6000000 		.4byte	0xc6
 3922 12cd 05       		.uleb128 0x5
 3923 12ce 03       		.byte	0x3
 3924 12cf 00000000 		.4byte	CapSense_widgetIndex
 3925 12d3 35       		.uleb128 0x35
 3926 12d4 A6020000 		.4byte	.LASF178
 3927 12d8 01       		.byte	0x1
 3928 12d9 BD       		.byte	0xbd
 3929 12da C6000000 		.4byte	0xc6
 3930 12de 05       		.uleb128 0x5
 3931 12df 03       		.byte	0x3
 3932 12e0 00000000 		.4byte	CapSense_sensorIndex
 3933 12e4 35       		.uleb128 0x35
 3934 12e5 370D0000 		.4byte	.LASF179
 3935 12e9 01       		.byte	0x1
 3936 12ea BE       		.byte	0xbe
 3937 12eb 81000000 		.4byte	0x81
 3938 12ef 05       		.uleb128 0x5
 3939 12f0 03       		.byte	0x3
 3940 12f1 00000000 		.4byte	CapSense_requestScanAllWidget
 3941 12f5 35       		.uleb128 0x35
 3942 12f6 010C0000 		.4byte	.LASF180
 3943 12fa 01       		.byte	0x1
 3944 12fb C1       		.byte	0xc1
 3945 12fc C8060000 		.4byte	0x6c8
 3946 1300 05       		.uleb128 0x5
 3947 1301 03       		.byte	0x3
 3948 1302 00000000 		.4byte	CapSense_curRamSnsPtr
 3949 1306 35       		.uleb128 0x35
 3950 1307 010A0000 		.4byte	.LASF181
 3951 130b 01       		.byte	0x1
 3952 130c AF       		.byte	0xaf
 3953 130d 32010000 		.4byte	0x132
 3954 1311 05       		.uleb128 0x5
 3955 1312 03       		.byte	0x3
 3956 1313 00000000 		.4byte	CapSense_currentSenseMethod
 3957 1317 35       		.uleb128 0x35
 3958 1318 230C0000 		.4byte	.LASF182
 3959 131c 01       		.byte	0x1
 3960 131d B8       		.byte	0xb8
 3961 131e 28130000 		.4byte	0x1328
 3962 1322 05       		.uleb128 0x5
 3963 1323 03       		.byte	0x3
 3964 1324 00000000 		.4byte	CapSense_scanFreqIndex
 3965 1328 26       		.uleb128 0x26
 3966 1329 81000000 		.4byte	0x81
 3967 132d 35       		.uleb128 0x35
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 131


 3968 132e CE060000 		.4byte	.LASF183
 3969 1332 01       		.byte	0x1
 3970 1333 D0       		.byte	0xd0
 3971 1334 6D0A0000 		.4byte	0xa6d
 3972 1338 05       		.uleb128 0x5
 3973 1339 03       		.byte	0x3
 3974 133a 00000000 		.4byte	CapSense_curSnsIOPtr
 3975 133e 0D       		.uleb128 0xd
 3976 133f 4E130000 		.4byte	0x134e
 3977 1343 4E130000 		.4byte	0x134e
 3978 1347 0E       		.uleb128 0xe
 3979 1348 DA010000 		.4byte	0x1da
 3980 134c 05       		.byte	0x5
 3981 134d 00       		.byte	0
 3982 134e 26       		.uleb128 0x26
 3983 134f 71070000 		.4byte	0x771
 3984 1353 35       		.uleb128 0x35
 3985 1354 790D0000 		.4byte	.LASF184
 3986 1358 01       		.byte	0x1
 3987 1359 D2       		.byte	0xd2
 3988 135a 64130000 		.4byte	0x1364
 3989 135e 05       		.uleb128 0x5
 3990 135f 03       		.byte	0x3
 3991 1360 00000000 		.4byte	CapSense_idacGainTable
 3992 1364 26       		.uleb128 0x26
 3993 1365 3E130000 		.4byte	0x133e
 3994 1369 36       		.uleb128 0x36
 3995 136a 66020000 		.4byte	.LASF185
 3996 136e 66020000 		.4byte	.LASF185
 3997 1372 08       		.byte	0x8
 3998 1373 8801     		.2byte	0x188
 3999 1375 36       		.uleb128 0x36
 4000 1376 660B0000 		.4byte	.LASF186
 4001 137a 660B0000 		.4byte	.LASF186
 4002 137e 08       		.byte	0x8
 4003 137f 8A01     		.2byte	0x18a
 4004 1381 36       		.uleb128 0x36
 4005 1382 F6020000 		.4byte	.LASF187
 4006 1386 F6020000 		.4byte	.LASF187
 4007 138a 08       		.byte	0x8
 4008 138b 8901     		.2byte	0x189
 4009 138d 36       		.uleb128 0x36
 4010 138e 0F090000 		.4byte	.LASF188
 4011 1392 0F090000 		.4byte	.LASF188
 4012 1396 08       		.byte	0x8
 4013 1397 8B01     		.2byte	0x18b
 4014 1399 37       		.uleb128 0x37
 4015 139a EA0B0000 		.4byte	.LASF189
 4016 139e EA0B0000 		.4byte	.LASF189
 4017 13a2 09       		.byte	0x9
 4018 13a3 E5       		.byte	0xe5
 4019 13a4 37       		.uleb128 0x37
 4020 13a5 06040000 		.4byte	.LASF190
 4021 13a9 06040000 		.4byte	.LASF190
 4022 13ad 09       		.byte	0x9
 4023 13ae E6       		.byte	0xe6
 4024 13af 36       		.uleb128 0x36
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 132


 4025 13b0 58090000 		.4byte	.LASF191
 4026 13b4 58090000 		.4byte	.LASF191
 4027 13b8 08       		.byte	0x8
 4028 13b9 9101     		.2byte	0x191
 4029 13bb 36       		.uleb128 0x36
 4030 13bc F1000000 		.4byte	.LASF192
 4031 13c0 F1000000 		.4byte	.LASF192
 4032 13c4 08       		.byte	0x8
 4033 13c5 AA01     		.2byte	0x1aa
 4034 13c7 37       		.uleb128 0x37
 4035 13c8 5F0A0000 		.4byte	.LASF193
 4036 13cc 5F0A0000 		.4byte	.LASF193
 4037 13d0 0A       		.byte	0xa
 4038 13d1 18       		.byte	0x18
 4039 13d2 36       		.uleb128 0x36
 4040 13d3 CE080000 		.4byte	.LASF194
 4041 13d7 CE080000 		.4byte	.LASF194
 4042 13db 08       		.byte	0x8
 4043 13dc 8E01     		.2byte	0x18e
 4044 13de 36       		.uleb128 0x36
 4045 13df 67070000 		.4byte	.LASF195
 4046 13e3 67070000 		.4byte	.LASF195
 4047 13e7 08       		.byte	0x8
 4048 13e8 AE01     		.2byte	0x1ae
 4049 13ea 37       		.uleb128 0x37
 4050 13eb 53070000 		.4byte	.LASF196
 4051 13ef 53070000 		.4byte	.LASF196
 4052 13f3 09       		.byte	0x9
 4053 13f4 DA       		.byte	0xda
 4054 13f5 36       		.uleb128 0x36
 4055 13f6 07080000 		.4byte	.LASF197
 4056 13fa 07080000 		.4byte	.LASF197
 4057 13fe 08       		.byte	0x8
 4058 13ff A501     		.2byte	0x1a5
 4059 1401 36       		.uleb128 0x36
 4060 1402 99040000 		.4byte	.LASF198
 4061 1406 99040000 		.4byte	.LASF198
 4062 140a 08       		.byte	0x8
 4063 140b A901     		.2byte	0x1a9
 4064 140d 36       		.uleb128 0x36
 4065 140e 9A050000 		.4byte	.LASF199
 4066 1412 9A050000 		.4byte	.LASF199
 4067 1416 08       		.byte	0x8
 4068 1417 A101     		.2byte	0x1a1
 4069 1419 00       		.byte	0
 4070              		.section	.debug_abbrev,"",%progbits
 4071              	.Ldebug_abbrev0:
 4072 0000 01       		.uleb128 0x1
 4073 0001 11       		.uleb128 0x11
 4074 0002 01       		.byte	0x1
 4075 0003 25       		.uleb128 0x25
 4076 0004 0E       		.uleb128 0xe
 4077 0005 13       		.uleb128 0x13
 4078 0006 0B       		.uleb128 0xb
 4079 0007 03       		.uleb128 0x3
 4080 0008 0E       		.uleb128 0xe
 4081 0009 1B       		.uleb128 0x1b
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 133


 4082 000a 0E       		.uleb128 0xe
 4083 000b 55       		.uleb128 0x55
 4084 000c 17       		.uleb128 0x17
 4085 000d 11       		.uleb128 0x11
 4086 000e 01       		.uleb128 0x1
 4087 000f 10       		.uleb128 0x10
 4088 0010 17       		.uleb128 0x17
 4089 0011 00       		.byte	0
 4090 0012 00       		.byte	0
 4091 0013 02       		.uleb128 0x2
 4092 0014 24       		.uleb128 0x24
 4093 0015 00       		.byte	0
 4094 0016 0B       		.uleb128 0xb
 4095 0017 0B       		.uleb128 0xb
 4096 0018 3E       		.uleb128 0x3e
 4097 0019 0B       		.uleb128 0xb
 4098 001a 03       		.uleb128 0x3
 4099 001b 0E       		.uleb128 0xe
 4100 001c 00       		.byte	0
 4101 001d 00       		.byte	0
 4102 001e 03       		.uleb128 0x3
 4103 001f 16       		.uleb128 0x16
 4104 0020 00       		.byte	0
 4105 0021 03       		.uleb128 0x3
 4106 0022 0E       		.uleb128 0xe
 4107 0023 3A       		.uleb128 0x3a
 4108 0024 0B       		.uleb128 0xb
 4109 0025 3B       		.uleb128 0x3b
 4110 0026 0B       		.uleb128 0xb
 4111 0027 49       		.uleb128 0x49
 4112 0028 13       		.uleb128 0x13
 4113 0029 00       		.byte	0
 4114 002a 00       		.byte	0
 4115 002b 04       		.uleb128 0x4
 4116 002c 24       		.uleb128 0x24
 4117 002d 00       		.byte	0
 4118 002e 0B       		.uleb128 0xb
 4119 002f 0B       		.uleb128 0xb
 4120 0030 3E       		.uleb128 0x3e
 4121 0031 0B       		.uleb128 0xb
 4122 0032 03       		.uleb128 0x3
 4123 0033 08       		.uleb128 0x8
 4124 0034 00       		.byte	0
 4125 0035 00       		.byte	0
 4126 0036 05       		.uleb128 0x5
 4127 0037 16       		.uleb128 0x16
 4128 0038 00       		.byte	0
 4129 0039 03       		.uleb128 0x3
 4130 003a 0E       		.uleb128 0xe
 4131 003b 3A       		.uleb128 0x3a
 4132 003c 0B       		.uleb128 0xb
 4133 003d 3B       		.uleb128 0x3b
 4134 003e 05       		.uleb128 0x5
 4135 003f 49       		.uleb128 0x49
 4136 0040 13       		.uleb128 0x13
 4137 0041 00       		.byte	0
 4138 0042 00       		.byte	0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 134


 4139 0043 06       		.uleb128 0x6
 4140 0044 35       		.uleb128 0x35
 4141 0045 00       		.byte	0
 4142 0046 49       		.uleb128 0x49
 4143 0047 13       		.uleb128 0x13
 4144 0048 00       		.byte	0
 4145 0049 00       		.byte	0
 4146 004a 07       		.uleb128 0x7
 4147 004b 0F       		.uleb128 0xf
 4148 004c 00       		.byte	0
 4149 004d 0B       		.uleb128 0xb
 4150 004e 0B       		.uleb128 0xb
 4151 004f 49       		.uleb128 0x49
 4152 0050 13       		.uleb128 0x13
 4153 0051 00       		.byte	0
 4154 0052 00       		.byte	0
 4155 0053 08       		.uleb128 0x8
 4156 0054 15       		.uleb128 0x15
 4157 0055 00       		.byte	0
 4158 0056 27       		.uleb128 0x27
 4159 0057 19       		.uleb128 0x19
 4160 0058 00       		.byte	0
 4161 0059 00       		.byte	0
 4162 005a 09       		.uleb128 0x9
 4163 005b 04       		.uleb128 0x4
 4164 005c 01       		.byte	0x1
 4165 005d 0B       		.uleb128 0xb
 4166 005e 0B       		.uleb128 0xb
 4167 005f 49       		.uleb128 0x49
 4168 0060 13       		.uleb128 0x13
 4169 0061 3A       		.uleb128 0x3a
 4170 0062 0B       		.uleb128 0xb
 4171 0063 3B       		.uleb128 0x3b
 4172 0064 0B       		.uleb128 0xb
 4173 0065 01       		.uleb128 0x1
 4174 0066 13       		.uleb128 0x13
 4175 0067 00       		.byte	0
 4176 0068 00       		.byte	0
 4177 0069 0A       		.uleb128 0xa
 4178 006a 28       		.uleb128 0x28
 4179 006b 00       		.byte	0
 4180 006c 03       		.uleb128 0x3
 4181 006d 0E       		.uleb128 0xe
 4182 006e 1C       		.uleb128 0x1c
 4183 006f 0B       		.uleb128 0xb
 4184 0070 00       		.byte	0
 4185 0071 00       		.byte	0
 4186 0072 0B       		.uleb128 0xb
 4187 0073 13       		.uleb128 0x13
 4188 0074 01       		.byte	0x1
 4189 0075 0B       		.uleb128 0xb
 4190 0076 0B       		.uleb128 0xb
 4191 0077 3A       		.uleb128 0x3a
 4192 0078 0B       		.uleb128 0xb
 4193 0079 3B       		.uleb128 0x3b
 4194 007a 0B       		.uleb128 0xb
 4195 007b 01       		.uleb128 0x1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 135


 4196 007c 13       		.uleb128 0x13
 4197 007d 00       		.byte	0
 4198 007e 00       		.byte	0
 4199 007f 0C       		.uleb128 0xc
 4200 0080 0D       		.uleb128 0xd
 4201 0081 00       		.byte	0
 4202 0082 03       		.uleb128 0x3
 4203 0083 0E       		.uleb128 0xe
 4204 0084 3A       		.uleb128 0x3a
 4205 0085 0B       		.uleb128 0xb
 4206 0086 3B       		.uleb128 0x3b
 4207 0087 0B       		.uleb128 0xb
 4208 0088 49       		.uleb128 0x49
 4209 0089 13       		.uleb128 0x13
 4210 008a 38       		.uleb128 0x38
 4211 008b 0B       		.uleb128 0xb
 4212 008c 00       		.byte	0
 4213 008d 00       		.byte	0
 4214 008e 0D       		.uleb128 0xd
 4215 008f 01       		.uleb128 0x1
 4216 0090 01       		.byte	0x1
 4217 0091 49       		.uleb128 0x49
 4218 0092 13       		.uleb128 0x13
 4219 0093 01       		.uleb128 0x1
 4220 0094 13       		.uleb128 0x13
 4221 0095 00       		.byte	0
 4222 0096 00       		.byte	0
 4223 0097 0E       		.uleb128 0xe
 4224 0098 21       		.uleb128 0x21
 4225 0099 00       		.byte	0
 4226 009a 49       		.uleb128 0x49
 4227 009b 13       		.uleb128 0x13
 4228 009c 2F       		.uleb128 0x2f
 4229 009d 0B       		.uleb128 0xb
 4230 009e 00       		.byte	0
 4231 009f 00       		.byte	0
 4232 00a0 0F       		.uleb128 0xf
 4233 00a1 0D       		.uleb128 0xd
 4234 00a2 00       		.byte	0
 4235 00a3 03       		.uleb128 0x3
 4236 00a4 0E       		.uleb128 0xe
 4237 00a5 3A       		.uleb128 0x3a
 4238 00a6 0B       		.uleb128 0xb
 4239 00a7 3B       		.uleb128 0x3b
 4240 00a8 05       		.uleb128 0x5
 4241 00a9 49       		.uleb128 0x49
 4242 00aa 13       		.uleb128 0x13
 4243 00ab 38       		.uleb128 0x38
 4244 00ac 0B       		.uleb128 0xb
 4245 00ad 00       		.byte	0
 4246 00ae 00       		.byte	0
 4247 00af 10       		.uleb128 0x10
 4248 00b0 13       		.uleb128 0x13
 4249 00b1 01       		.byte	0x1
 4250 00b2 0B       		.uleb128 0xb
 4251 00b3 0B       		.uleb128 0xb
 4252 00b4 3A       		.uleb128 0x3a
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 136


 4253 00b5 0B       		.uleb128 0xb
 4254 00b6 3B       		.uleb128 0x3b
 4255 00b7 05       		.uleb128 0x5
 4256 00b8 01       		.uleb128 0x1
 4257 00b9 13       		.uleb128 0x13
 4258 00ba 00       		.byte	0
 4259 00bb 00       		.byte	0
 4260 00bc 11       		.uleb128 0x11
 4261 00bd 0D       		.uleb128 0xd
 4262 00be 00       		.byte	0
 4263 00bf 03       		.uleb128 0x3
 4264 00c0 08       		.uleb128 0x8
 4265 00c1 3A       		.uleb128 0x3a
 4266 00c2 0B       		.uleb128 0xb
 4267 00c3 3B       		.uleb128 0x3b
 4268 00c4 05       		.uleb128 0x5
 4269 00c5 49       		.uleb128 0x49
 4270 00c6 13       		.uleb128 0x13
 4271 00c7 38       		.uleb128 0x38
 4272 00c8 0B       		.uleb128 0xb
 4273 00c9 00       		.byte	0
 4274 00ca 00       		.byte	0
 4275 00cb 12       		.uleb128 0x12
 4276 00cc 26       		.uleb128 0x26
 4277 00cd 00       		.byte	0
 4278 00ce 00       		.byte	0
 4279 00cf 00       		.byte	0
 4280 00d0 13       		.uleb128 0x13
 4281 00d1 0F       		.uleb128 0xf
 4282 00d2 00       		.byte	0
 4283 00d3 0B       		.uleb128 0xb
 4284 00d4 0B       		.uleb128 0xb
 4285 00d5 00       		.byte	0
 4286 00d6 00       		.byte	0
 4287 00d7 14       		.uleb128 0x14
 4288 00d8 2E       		.uleb128 0x2e
 4289 00d9 01       		.byte	0x1
 4290 00da 3F       		.uleb128 0x3f
 4291 00db 19       		.uleb128 0x19
 4292 00dc 03       		.uleb128 0x3
 4293 00dd 0E       		.uleb128 0xe
 4294 00de 3A       		.uleb128 0x3a
 4295 00df 0B       		.uleb128 0xb
 4296 00e0 3B       		.uleb128 0x3b
 4297 00e1 05       		.uleb128 0x5
 4298 00e2 27       		.uleb128 0x27
 4299 00e3 19       		.uleb128 0x19
 4300 00e4 49       		.uleb128 0x49
 4301 00e5 13       		.uleb128 0x13
 4302 00e6 20       		.uleb128 0x20
 4303 00e7 0B       		.uleb128 0xb
 4304 00e8 01       		.uleb128 0x1
 4305 00e9 13       		.uleb128 0x13
 4306 00ea 00       		.byte	0
 4307 00eb 00       		.byte	0
 4308 00ec 15       		.uleb128 0x15
 4309 00ed 34       		.uleb128 0x34
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 137


 4310 00ee 00       		.byte	0
 4311 00ef 03       		.uleb128 0x3
 4312 00f0 0E       		.uleb128 0xe
 4313 00f1 3A       		.uleb128 0x3a
 4314 00f2 0B       		.uleb128 0xb
 4315 00f3 3B       		.uleb128 0x3b
 4316 00f4 05       		.uleb128 0x5
 4317 00f5 49       		.uleb128 0x49
 4318 00f6 13       		.uleb128 0x13
 4319 00f7 00       		.byte	0
 4320 00f8 00       		.byte	0
 4321 00f9 16       		.uleb128 0x16
 4322 00fa 05       		.uleb128 0x5
 4323 00fb 00       		.byte	0
 4324 00fc 03       		.uleb128 0x3
 4325 00fd 0E       		.uleb128 0xe
 4326 00fe 3A       		.uleb128 0x3a
 4327 00ff 0B       		.uleb128 0xb
 4328 0100 3B       		.uleb128 0x3b
 4329 0101 05       		.uleb128 0x5
 4330 0102 49       		.uleb128 0x49
 4331 0103 13       		.uleb128 0x13
 4332 0104 00       		.byte	0
 4333 0105 00       		.byte	0
 4334 0106 17       		.uleb128 0x17
 4335 0107 2E       		.uleb128 0x2e
 4336 0108 01       		.byte	0x1
 4337 0109 3F       		.uleb128 0x3f
 4338 010a 19       		.uleb128 0x19
 4339 010b 03       		.uleb128 0x3
 4340 010c 0E       		.uleb128 0xe
 4341 010d 3A       		.uleb128 0x3a
 4342 010e 0B       		.uleb128 0xb
 4343 010f 3B       		.uleb128 0x3b
 4344 0110 05       		.uleb128 0x5
 4345 0111 27       		.uleb128 0x27
 4346 0112 19       		.uleb128 0x19
 4347 0113 20       		.uleb128 0x20
 4348 0114 0B       		.uleb128 0xb
 4349 0115 01       		.uleb128 0x1
 4350 0116 13       		.uleb128 0x13
 4351 0117 00       		.byte	0
 4352 0118 00       		.byte	0
 4353 0119 18       		.uleb128 0x18
 4354 011a 2E       		.uleb128 0x2e
 4355 011b 00       		.byte	0
 4356 011c 3F       		.uleb128 0x3f
 4357 011d 19       		.uleb128 0x19
 4358 011e 03       		.uleb128 0x3
 4359 011f 0E       		.uleb128 0xe
 4360 0120 3A       		.uleb128 0x3a
 4361 0121 0B       		.uleb128 0xb
 4362 0122 3B       		.uleb128 0x3b
 4363 0123 0B       		.uleb128 0xb
 4364 0124 27       		.uleb128 0x27
 4365 0125 19       		.uleb128 0x19
 4366 0126 49       		.uleb128 0x49
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 138


 4367 0127 13       		.uleb128 0x13
 4368 0128 11       		.uleb128 0x11
 4369 0129 01       		.uleb128 0x1
 4370 012a 12       		.uleb128 0x12
 4371 012b 06       		.uleb128 0x6
 4372 012c 40       		.uleb128 0x40
 4373 012d 18       		.uleb128 0x18
 4374 012e 9742     		.uleb128 0x2117
 4375 0130 19       		.uleb128 0x19
 4376 0131 00       		.byte	0
 4377 0132 00       		.byte	0
 4378 0133 19       		.uleb128 0x19
 4379 0134 2E       		.uleb128 0x2e
 4380 0135 01       		.byte	0x1
 4381 0136 3F       		.uleb128 0x3f
 4382 0137 19       		.uleb128 0x19
 4383 0138 03       		.uleb128 0x3
 4384 0139 0E       		.uleb128 0xe
 4385 013a 3A       		.uleb128 0x3a
 4386 013b 0B       		.uleb128 0xb
 4387 013c 3B       		.uleb128 0x3b
 4388 013d 05       		.uleb128 0x5
 4389 013e 27       		.uleb128 0x27
 4390 013f 19       		.uleb128 0x19
 4391 0140 49       		.uleb128 0x49
 4392 0141 13       		.uleb128 0x13
 4393 0142 11       		.uleb128 0x11
 4394 0143 01       		.uleb128 0x1
 4395 0144 12       		.uleb128 0x12
 4396 0145 06       		.uleb128 0x6
 4397 0146 40       		.uleb128 0x40
 4398 0147 18       		.uleb128 0x18
 4399 0148 9742     		.uleb128 0x2117
 4400 014a 19       		.uleb128 0x19
 4401 014b 01       		.uleb128 0x1
 4402 014c 13       		.uleb128 0x13
 4403 014d 00       		.byte	0
 4404 014e 00       		.byte	0
 4405 014f 1A       		.uleb128 0x1a
 4406 0150 05       		.uleb128 0x5
 4407 0151 00       		.byte	0
 4408 0152 03       		.uleb128 0x3
 4409 0153 0E       		.uleb128 0xe
 4410 0154 3A       		.uleb128 0x3a
 4411 0155 0B       		.uleb128 0xb
 4412 0156 3B       		.uleb128 0x3b
 4413 0157 05       		.uleb128 0x5
 4414 0158 49       		.uleb128 0x49
 4415 0159 13       		.uleb128 0x13
 4416 015a 02       		.uleb128 0x2
 4417 015b 17       		.uleb128 0x17
 4418 015c 00       		.byte	0
 4419 015d 00       		.byte	0
 4420 015e 1B       		.uleb128 0x1b
 4421 015f 34       		.uleb128 0x34
 4422 0160 00       		.byte	0
 4423 0161 03       		.uleb128 0x3
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 139


 4424 0162 0E       		.uleb128 0xe
 4425 0163 3A       		.uleb128 0x3a
 4426 0164 0B       		.uleb128 0xb
 4427 0165 3B       		.uleb128 0x3b
 4428 0166 05       		.uleb128 0x5
 4429 0167 49       		.uleb128 0x49
 4430 0168 13       		.uleb128 0x13
 4431 0169 02       		.uleb128 0x2
 4432 016a 17       		.uleb128 0x17
 4433 016b 00       		.byte	0
 4434 016c 00       		.byte	0
 4435 016d 1C       		.uleb128 0x1c
 4436 016e 898201   		.uleb128 0x4109
 4437 0171 01       		.byte	0x1
 4438 0172 11       		.uleb128 0x11
 4439 0173 01       		.uleb128 0x1
 4440 0174 31       		.uleb128 0x31
 4441 0175 13       		.uleb128 0x13
 4442 0176 00       		.byte	0
 4443 0177 00       		.byte	0
 4444 0178 1D       		.uleb128 0x1d
 4445 0179 8A8201   		.uleb128 0x410a
 4446 017c 00       		.byte	0
 4447 017d 02       		.uleb128 0x2
 4448 017e 18       		.uleb128 0x18
 4449 017f 9142     		.uleb128 0x2111
 4450 0181 18       		.uleb128 0x18
 4451 0182 00       		.byte	0
 4452 0183 00       		.byte	0
 4453 0184 1E       		.uleb128 0x1e
 4454 0185 2E       		.uleb128 0x2e
 4455 0186 01       		.byte	0x1
 4456 0187 31       		.uleb128 0x31
 4457 0188 13       		.uleb128 0x13
 4458 0189 11       		.uleb128 0x11
 4459 018a 01       		.uleb128 0x1
 4460 018b 12       		.uleb128 0x12
 4461 018c 06       		.uleb128 0x6
 4462 018d 40       		.uleb128 0x40
 4463 018e 18       		.uleb128 0x18
 4464 018f 9742     		.uleb128 0x2117
 4465 0191 19       		.uleb128 0x19
 4466 0192 01       		.uleb128 0x1
 4467 0193 13       		.uleb128 0x13
 4468 0194 00       		.byte	0
 4469 0195 00       		.byte	0
 4470 0196 1F       		.uleb128 0x1f
 4471 0197 34       		.uleb128 0x34
 4472 0198 00       		.byte	0
 4473 0199 31       		.uleb128 0x31
 4474 019a 13       		.uleb128 0x13
 4475 019b 02       		.uleb128 0x2
 4476 019c 17       		.uleb128 0x17
 4477 019d 00       		.byte	0
 4478 019e 00       		.byte	0
 4479 019f 20       		.uleb128 0x20
 4480 01a0 0B       		.uleb128 0xb
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 140


 4481 01a1 01       		.byte	0x1
 4482 01a2 11       		.uleb128 0x11
 4483 01a3 01       		.uleb128 0x1
 4484 01a4 12       		.uleb128 0x12
 4485 01a5 06       		.uleb128 0x6
 4486 01a6 00       		.byte	0
 4487 01a7 00       		.byte	0
 4488 01a8 21       		.uleb128 0x21
 4489 01a9 34       		.uleb128 0x34
 4490 01aa 00       		.byte	0
 4491 01ab 31       		.uleb128 0x31
 4492 01ac 13       		.uleb128 0x13
 4493 01ad 00       		.byte	0
 4494 01ae 00       		.byte	0
 4495 01af 22       		.uleb128 0x22
 4496 01b0 898201   		.uleb128 0x4109
 4497 01b3 00       		.byte	0
 4498 01b4 11       		.uleb128 0x11
 4499 01b5 01       		.uleb128 0x1
 4500 01b6 31       		.uleb128 0x31
 4501 01b7 13       		.uleb128 0x13
 4502 01b8 00       		.byte	0
 4503 01b9 00       		.byte	0
 4504 01ba 23       		.uleb128 0x23
 4505 01bb 898201   		.uleb128 0x4109
 4506 01be 01       		.byte	0x1
 4507 01bf 11       		.uleb128 0x11
 4508 01c0 01       		.uleb128 0x1
 4509 01c1 31       		.uleb128 0x31
 4510 01c2 13       		.uleb128 0x13
 4511 01c3 01       		.uleb128 0x1
 4512 01c4 13       		.uleb128 0x13
 4513 01c5 00       		.byte	0
 4514 01c6 00       		.byte	0
 4515 01c7 24       		.uleb128 0x24
 4516 01c8 2E       		.uleb128 0x2e
 4517 01c9 01       		.byte	0x1
 4518 01ca 3F       		.uleb128 0x3f
 4519 01cb 19       		.uleb128 0x19
 4520 01cc 03       		.uleb128 0x3
 4521 01cd 0E       		.uleb128 0xe
 4522 01ce 3A       		.uleb128 0x3a
 4523 01cf 0B       		.uleb128 0xb
 4524 01d0 3B       		.uleb128 0x3b
 4525 01d1 05       		.uleb128 0x5
 4526 01d2 27       		.uleb128 0x27
 4527 01d3 19       		.uleb128 0x19
 4528 01d4 11       		.uleb128 0x11
 4529 01d5 01       		.uleb128 0x1
 4530 01d6 12       		.uleb128 0x12
 4531 01d7 06       		.uleb128 0x6
 4532 01d8 40       		.uleb128 0x40
 4533 01d9 18       		.uleb128 0x18
 4534 01da 9742     		.uleb128 0x2117
 4535 01dc 19       		.uleb128 0x19
 4536 01dd 01       		.uleb128 0x1
 4537 01de 13       		.uleb128 0x13
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 141


 4538 01df 00       		.byte	0
 4539 01e0 00       		.byte	0
 4540 01e1 25       		.uleb128 0x25
 4541 01e2 34       		.uleb128 0x34
 4542 01e3 00       		.byte	0
 4543 01e4 03       		.uleb128 0x3
 4544 01e5 0E       		.uleb128 0xe
 4545 01e6 3A       		.uleb128 0x3a
 4546 01e7 0B       		.uleb128 0xb
 4547 01e8 3B       		.uleb128 0x3b
 4548 01e9 05       		.uleb128 0x5
 4549 01ea 49       		.uleb128 0x49
 4550 01eb 13       		.uleb128 0x13
 4551 01ec 1C       		.uleb128 0x1c
 4552 01ed 0B       		.uleb128 0xb
 4553 01ee 00       		.byte	0
 4554 01ef 00       		.byte	0
 4555 01f0 26       		.uleb128 0x26
 4556 01f1 26       		.uleb128 0x26
 4557 01f2 00       		.byte	0
 4558 01f3 49       		.uleb128 0x49
 4559 01f4 13       		.uleb128 0x13
 4560 01f5 00       		.byte	0
 4561 01f6 00       		.byte	0
 4562 01f7 27       		.uleb128 0x27
 4563 01f8 34       		.uleb128 0x34
 4564 01f9 00       		.byte	0
 4565 01fa 03       		.uleb128 0x3
 4566 01fb 0E       		.uleb128 0xe
 4567 01fc 3A       		.uleb128 0x3a
 4568 01fd 0B       		.uleb128 0xb
 4569 01fe 3B       		.uleb128 0x3b
 4570 01ff 05       		.uleb128 0x5
 4571 0200 49       		.uleb128 0x49
 4572 0201 13       		.uleb128 0x13
 4573 0202 02       		.uleb128 0x2
 4574 0203 18       		.uleb128 0x18
 4575 0204 00       		.byte	0
 4576 0205 00       		.byte	0
 4577 0206 28       		.uleb128 0x28
 4578 0207 05       		.uleb128 0x5
 4579 0208 00       		.byte	0
 4580 0209 31       		.uleb128 0x31
 4581 020a 13       		.uleb128 0x13
 4582 020b 02       		.uleb128 0x2
 4583 020c 17       		.uleb128 0x17
 4584 020d 00       		.byte	0
 4585 020e 00       		.byte	0
 4586 020f 29       		.uleb128 0x29
 4587 0210 2E       		.uleb128 0x2e
 4588 0211 01       		.byte	0x1
 4589 0212 03       		.uleb128 0x3
 4590 0213 0E       		.uleb128 0xe
 4591 0214 3A       		.uleb128 0x3a
 4592 0215 0B       		.uleb128 0xb
 4593 0216 3B       		.uleb128 0x3b
 4594 0217 05       		.uleb128 0x5
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 142


 4595 0218 27       		.uleb128 0x27
 4596 0219 19       		.uleb128 0x19
 4597 021a 20       		.uleb128 0x20
 4598 021b 0B       		.uleb128 0xb
 4599 021c 01       		.uleb128 0x1
 4600 021d 13       		.uleb128 0x13
 4601 021e 00       		.byte	0
 4602 021f 00       		.byte	0
 4603 0220 2A       		.uleb128 0x2a
 4604 0221 2E       		.uleb128 0x2e
 4605 0222 01       		.byte	0x1
 4606 0223 03       		.uleb128 0x3
 4607 0224 0E       		.uleb128 0xe
 4608 0225 3A       		.uleb128 0x3a
 4609 0226 0B       		.uleb128 0xb
 4610 0227 3B       		.uleb128 0x3b
 4611 0228 05       		.uleb128 0x5
 4612 0229 27       		.uleb128 0x27
 4613 022a 19       		.uleb128 0x19
 4614 022b 49       		.uleb128 0x49
 4615 022c 13       		.uleb128 0x13
 4616 022d 20       		.uleb128 0x20
 4617 022e 0B       		.uleb128 0xb
 4618 022f 01       		.uleb128 0x1
 4619 0230 13       		.uleb128 0x13
 4620 0231 00       		.byte	0
 4621 0232 00       		.byte	0
 4622 0233 2B       		.uleb128 0x2b
 4623 0234 2E       		.uleb128 0x2e
 4624 0235 01       		.byte	0x1
 4625 0236 3F       		.uleb128 0x3f
 4626 0237 19       		.uleb128 0x19
 4627 0238 03       		.uleb128 0x3
 4628 0239 0E       		.uleb128 0xe
 4629 023a 3A       		.uleb128 0x3a
 4630 023b 0B       		.uleb128 0xb
 4631 023c 3B       		.uleb128 0x3b
 4632 023d 05       		.uleb128 0x5
 4633 023e 27       		.uleb128 0x27
 4634 023f 19       		.uleb128 0x19
 4635 0240 11       		.uleb128 0x11
 4636 0241 01       		.uleb128 0x1
 4637 0242 12       		.uleb128 0x12
 4638 0243 06       		.uleb128 0x6
 4639 0244 40       		.uleb128 0x40
 4640 0245 18       		.uleb128 0x18
 4641 0246 9642     		.uleb128 0x2116
 4642 0248 19       		.uleb128 0x19
 4643 0249 01       		.uleb128 0x1
 4644 024a 13       		.uleb128 0x13
 4645 024b 00       		.byte	0
 4646 024c 00       		.byte	0
 4647 024d 2C       		.uleb128 0x2c
 4648 024e 1D       		.uleb128 0x1d
 4649 024f 01       		.byte	0x1
 4650 0250 31       		.uleb128 0x31
 4651 0251 13       		.uleb128 0x13
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 143


 4652 0252 52       		.uleb128 0x52
 4653 0253 01       		.uleb128 0x1
 4654 0254 55       		.uleb128 0x55
 4655 0255 17       		.uleb128 0x17
 4656 0256 58       		.uleb128 0x58
 4657 0257 0B       		.uleb128 0xb
 4658 0258 59       		.uleb128 0x59
 4659 0259 05       		.uleb128 0x5
 4660 025a 00       		.byte	0
 4661 025b 00       		.byte	0
 4662 025c 2D       		.uleb128 0x2d
 4663 025d 05       		.uleb128 0x5
 4664 025e 00       		.byte	0
 4665 025f 31       		.uleb128 0x31
 4666 0260 13       		.uleb128 0x13
 4667 0261 00       		.byte	0
 4668 0262 00       		.byte	0
 4669 0263 2E       		.uleb128 0x2e
 4670 0264 0B       		.uleb128 0xb
 4671 0265 01       		.byte	0x1
 4672 0266 55       		.uleb128 0x55
 4673 0267 17       		.uleb128 0x17
 4674 0268 00       		.byte	0
 4675 0269 00       		.byte	0
 4676 026a 2F       		.uleb128 0x2f
 4677 026b 34       		.uleb128 0x34
 4678 026c 00       		.byte	0
 4679 026d 31       		.uleb128 0x31
 4680 026e 13       		.uleb128 0x13
 4681 026f 02       		.uleb128 0x2
 4682 0270 18       		.uleb128 0x18
 4683 0271 00       		.byte	0
 4684 0272 00       		.byte	0
 4685 0273 30       		.uleb128 0x30
 4686 0274 1D       		.uleb128 0x1d
 4687 0275 01       		.byte	0x1
 4688 0276 31       		.uleb128 0x31
 4689 0277 13       		.uleb128 0x13
 4690 0278 11       		.uleb128 0x11
 4691 0279 01       		.uleb128 0x1
 4692 027a 12       		.uleb128 0x12
 4693 027b 06       		.uleb128 0x6
 4694 027c 58       		.uleb128 0x58
 4695 027d 0B       		.uleb128 0xb
 4696 027e 59       		.uleb128 0x59
 4697 027f 05       		.uleb128 0x5
 4698 0280 01       		.uleb128 0x1
 4699 0281 13       		.uleb128 0x13
 4700 0282 00       		.byte	0
 4701 0283 00       		.byte	0
 4702 0284 31       		.uleb128 0x31
 4703 0285 1D       		.uleb128 0x1d
 4704 0286 01       		.byte	0x1
 4705 0287 31       		.uleb128 0x31
 4706 0288 13       		.uleb128 0x13
 4707 0289 52       		.uleb128 0x52
 4708 028a 01       		.uleb128 0x1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 144


 4709 028b 55       		.uleb128 0x55
 4710 028c 17       		.uleb128 0x17
 4711 028d 58       		.uleb128 0x58
 4712 028e 0B       		.uleb128 0xb
 4713 028f 59       		.uleb128 0x59
 4714 0290 05       		.uleb128 0x5
 4715 0291 01       		.uleb128 0x1
 4716 0292 13       		.uleb128 0x13
 4717 0293 00       		.byte	0
 4718 0294 00       		.byte	0
 4719 0295 32       		.uleb128 0x32
 4720 0296 05       		.uleb128 0x5
 4721 0297 00       		.byte	0
 4722 0298 03       		.uleb128 0x3
 4723 0299 0E       		.uleb128 0xe
 4724 029a 3A       		.uleb128 0x3a
 4725 029b 0B       		.uleb128 0xb
 4726 029c 3B       		.uleb128 0x3b
 4727 029d 05       		.uleb128 0x5
 4728 029e 49       		.uleb128 0x49
 4729 029f 13       		.uleb128 0x13
 4730 02a0 02       		.uleb128 0x2
 4731 02a1 18       		.uleb128 0x18
 4732 02a2 00       		.byte	0
 4733 02a3 00       		.byte	0
 4734 02a4 33       		.uleb128 0x33
 4735 02a5 0B       		.uleb128 0xb
 4736 02a6 01       		.byte	0x1
 4737 02a7 11       		.uleb128 0x11
 4738 02a8 01       		.uleb128 0x1
 4739 02a9 12       		.uleb128 0x12
 4740 02aa 06       		.uleb128 0x6
 4741 02ab 01       		.uleb128 0x1
 4742 02ac 13       		.uleb128 0x13
 4743 02ad 00       		.byte	0
 4744 02ae 00       		.byte	0
 4745 02af 34       		.uleb128 0x34
 4746 02b0 34       		.uleb128 0x34
 4747 02b1 00       		.byte	0
 4748 02b2 03       		.uleb128 0x3
 4749 02b3 0E       		.uleb128 0xe
 4750 02b4 3A       		.uleb128 0x3a
 4751 02b5 0B       		.uleb128 0xb
 4752 02b6 3B       		.uleb128 0x3b
 4753 02b7 05       		.uleb128 0x5
 4754 02b8 49       		.uleb128 0x49
 4755 02b9 13       		.uleb128 0x13
 4756 02ba 3F       		.uleb128 0x3f
 4757 02bb 19       		.uleb128 0x19
 4758 02bc 3C       		.uleb128 0x3c
 4759 02bd 19       		.uleb128 0x19
 4760 02be 00       		.byte	0
 4761 02bf 00       		.byte	0
 4762 02c0 35       		.uleb128 0x35
 4763 02c1 34       		.uleb128 0x34
 4764 02c2 00       		.byte	0
 4765 02c3 03       		.uleb128 0x3
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 145


 4766 02c4 0E       		.uleb128 0xe
 4767 02c5 3A       		.uleb128 0x3a
 4768 02c6 0B       		.uleb128 0xb
 4769 02c7 3B       		.uleb128 0x3b
 4770 02c8 0B       		.uleb128 0xb
 4771 02c9 49       		.uleb128 0x49
 4772 02ca 13       		.uleb128 0x13
 4773 02cb 3F       		.uleb128 0x3f
 4774 02cc 19       		.uleb128 0x19
 4775 02cd 02       		.uleb128 0x2
 4776 02ce 18       		.uleb128 0x18
 4777 02cf 00       		.byte	0
 4778 02d0 00       		.byte	0
 4779 02d1 36       		.uleb128 0x36
 4780 02d2 2E       		.uleb128 0x2e
 4781 02d3 00       		.byte	0
 4782 02d4 3F       		.uleb128 0x3f
 4783 02d5 19       		.uleb128 0x19
 4784 02d6 3C       		.uleb128 0x3c
 4785 02d7 19       		.uleb128 0x19
 4786 02d8 6E       		.uleb128 0x6e
 4787 02d9 0E       		.uleb128 0xe
 4788 02da 03       		.uleb128 0x3
 4789 02db 0E       		.uleb128 0xe
 4790 02dc 3A       		.uleb128 0x3a
 4791 02dd 0B       		.uleb128 0xb
 4792 02de 3B       		.uleb128 0x3b
 4793 02df 05       		.uleb128 0x5
 4794 02e0 00       		.byte	0
 4795 02e1 00       		.byte	0
 4796 02e2 37       		.uleb128 0x37
 4797 02e3 2E       		.uleb128 0x2e
 4798 02e4 00       		.byte	0
 4799 02e5 3F       		.uleb128 0x3f
 4800 02e6 19       		.uleb128 0x19
 4801 02e7 3C       		.uleb128 0x3c
 4802 02e8 19       		.uleb128 0x19
 4803 02e9 6E       		.uleb128 0x6e
 4804 02ea 0E       		.uleb128 0xe
 4805 02eb 03       		.uleb128 0x3
 4806 02ec 0E       		.uleb128 0xe
 4807 02ed 3A       		.uleb128 0x3a
 4808 02ee 0B       		.uleb128 0xb
 4809 02ef 3B       		.uleb128 0x3b
 4810 02f0 0B       		.uleb128 0xb
 4811 02f1 00       		.byte	0
 4812 02f2 00       		.byte	0
 4813 02f3 00       		.byte	0
 4814              		.section	.debug_loc,"",%progbits
 4815              	.Ldebug_loc0:
 4816              	.LLST0:
 4817 0000 00000000 		.4byte	.LVL0
 4818 0004 23000000 		.4byte	.LVL2-1
 4819 0008 0100     		.2byte	0x1
 4820 000a 50       		.byte	0x50
 4821 000b 23000000 		.4byte	.LVL2-1
 4822 000f 30000000 		.4byte	.LFE2
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 146


 4823 0013 0400     		.2byte	0x4
 4824 0015 F3       		.byte	0xf3
 4825 0016 01       		.uleb128 0x1
 4826 0017 50       		.byte	0x50
 4827 0018 9F       		.byte	0x9f
 4828 0019 00000000 		.4byte	0
 4829 001d 00000000 		.4byte	0
 4830              	.LLST1:
 4831 0021 20000000 		.4byte	.LVL1
 4832 0025 26000000 		.4byte	.LVL3
 4833 0029 0200     		.2byte	0x2
 4834 002b 30       		.byte	0x30
 4835 002c 9F       		.byte	0x9f
 4836 002d 00000000 		.4byte	0
 4837 0031 00000000 		.4byte	0
 4838              	.LLST2:
 4839 0035 00000000 		.4byte	.LVL4
 4840 0039 26000000 		.4byte	.LVL6
 4841 003d 0200     		.2byte	0x2
 4842 003f 30       		.byte	0x30
 4843 0040 9F       		.byte	0x9f
 4844 0041 26000000 		.4byte	.LVL6
 4845 0045 30000000 		.4byte	.LFE3
 4846 0049 0100     		.2byte	0x1
 4847 004b 50       		.byte	0x50
 4848 004c 00000000 		.4byte	0
 4849 0050 00000000 		.4byte	0
 4850              	.LLST3:
 4851 0054 00000000 		.4byte	.LVL7
 4852 0058 14000000 		.4byte	.LVL9
 4853 005c 0300     		.2byte	0x3
 4854 005e 09       		.byte	0x9
 4855 005f FF       		.byte	0xff
 4856 0060 9F       		.byte	0x9f
 4857 0061 14000000 		.4byte	.LVL9
 4858 0065 29000000 		.4byte	.LVL10-1
 4859 0069 0100     		.2byte	0x1
 4860 006b 50       		.byte	0x50
 4861 006c 2A000000 		.4byte	.LVL10
 4862 0070 3C000000 		.4byte	.LFE4
 4863 0074 0100     		.2byte	0x1
 4864 0076 50       		.byte	0x50
 4865 0077 00000000 		.4byte	0
 4866 007b 00000000 		.4byte	0
 4867              	.LLST4:
 4868 007f 0E000000 		.4byte	.LVL8
 4869 0083 32000000 		.4byte	.LVL12
 4870 0087 0100     		.2byte	0x1
 4871 0089 54       		.byte	0x54
 4872 008a 00000000 		.4byte	0
 4873 008e 00000000 		.4byte	0
 4874              	.LLST5:
 4875 0092 00000000 		.4byte	.LVL13
 4876 0096 31000000 		.4byte	.LVL15-1
 4877 009a 0100     		.2byte	0x1
 4878 009c 50       		.byte	0x50
 4879 009d 31000000 		.4byte	.LVL15-1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 147


 4880 00a1 40000000 		.4byte	.LFE5
 4881 00a5 0400     		.2byte	0x4
 4882 00a7 F3       		.byte	0xf3
 4883 00a8 01       		.uleb128 0x1
 4884 00a9 50       		.byte	0x50
 4885 00aa 9F       		.byte	0x9f
 4886 00ab 00000000 		.4byte	0
 4887 00af 00000000 		.4byte	0
 4888              	.LLST6:
 4889 00b3 00000000 		.4byte	.LVL13
 4890 00b7 31000000 		.4byte	.LVL15-1
 4891 00bb 0100     		.2byte	0x1
 4892 00bd 51       		.byte	0x51
 4893 00be 31000000 		.4byte	.LVL15-1
 4894 00c2 40000000 		.4byte	.LFE5
 4895 00c6 0400     		.2byte	0x4
 4896 00c8 F3       		.byte	0xf3
 4897 00c9 01       		.uleb128 0x1
 4898 00ca 51       		.byte	0x51
 4899 00cb 9F       		.byte	0x9f
 4900 00cc 00000000 		.4byte	0
 4901 00d0 00000000 		.4byte	0
 4902              	.LLST7:
 4903 00d4 2E000000 		.4byte	.LVL14
 4904 00d8 34000000 		.4byte	.LVL16
 4905 00dc 0200     		.2byte	0x2
 4906 00de 30       		.byte	0x30
 4907 00df 9F       		.byte	0x9f
 4908 00e0 00000000 		.4byte	0
 4909 00e4 00000000 		.4byte	0
 4910              	.LLST8:
 4911 00e8 00000000 		.4byte	.LVL17
 4912 00ec 26000000 		.4byte	.LVL19
 4913 00f0 0200     		.2byte	0x2
 4914 00f2 30       		.byte	0x30
 4915 00f3 9F       		.byte	0x9f
 4916 00f4 26000000 		.4byte	.LVL19
 4917 00f8 30000000 		.4byte	.LFE6
 4918 00fc 0100     		.2byte	0x1
 4919 00fe 50       		.byte	0x50
 4920 00ff 00000000 		.4byte	0
 4921 0103 00000000 		.4byte	0
 4922              	.LLST9:
 4923 0107 00000000 		.4byte	.LVL20
 4924 010b 06000000 		.4byte	.LVL21
 4925 010f 0100     		.2byte	0x1
 4926 0111 50       		.byte	0x50
 4927 0112 06000000 		.4byte	.LVL21
 4928 0116 8C000000 		.4byte	.LFE8
 4929 011a 0400     		.2byte	0x4
 4930 011c F3       		.byte	0xf3
 4931 011d 01       		.uleb128 0x1
 4932 011e 50       		.byte	0x50
 4933 011f 9F       		.byte	0x9f
 4934 0120 00000000 		.4byte	0
 4935 0124 00000000 		.4byte	0
 4936              	.LLST10:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 148


 4937 0128 00000000 		.4byte	.LVL20
 4938 012c 0C000000 		.4byte	.LVL22
 4939 0130 0100     		.2byte	0x1
 4940 0132 51       		.byte	0x51
 4941 0133 0C000000 		.4byte	.LVL22
 4942 0137 8C000000 		.4byte	.LFE8
 4943 013b 0400     		.2byte	0x4
 4944 013d F3       		.byte	0xf3
 4945 013e 01       		.uleb128 0x1
 4946 013f 51       		.byte	0x51
 4947 0140 9F       		.byte	0x9f
 4948 0141 00000000 		.4byte	0
 4949 0145 00000000 		.4byte	0
 4950              	.LLST11:
 4951 0149 00000000 		.4byte	.LVL20
 4952 014d 13000000 		.4byte	.LVL24-1
 4953 0151 0100     		.2byte	0x1
 4954 0153 52       		.byte	0x52
 4955 0154 13000000 		.4byte	.LVL24-1
 4956 0158 4A000000 		.4byte	.LVL27
 4957 015c 0100     		.2byte	0x1
 4958 015e 55       		.byte	0x55
 4959 015f 4A000000 		.4byte	.LVL27
 4960 0163 56000000 		.4byte	.LVL28
 4961 0167 0400     		.2byte	0x4
 4962 0169 F3       		.byte	0xf3
 4963 016a 01       		.uleb128 0x1
 4964 016b 52       		.byte	0x52
 4965 016c 9F       		.byte	0x9f
 4966 016d 56000000 		.4byte	.LVL28
 4967 0171 59000000 		.4byte	.LVL29-1
 4968 0175 0100     		.2byte	0x1
 4969 0177 50       		.byte	0x50
 4970 0178 59000000 		.4byte	.LVL29-1
 4971 017c 5A000000 		.4byte	.LVL29
 4972 0180 0100     		.2byte	0x1
 4973 0182 55       		.byte	0x55
 4974 0183 5A000000 		.4byte	.LVL29
 4975 0187 68000000 		.4byte	.LVL31
 4976 018b 0400     		.2byte	0x4
 4977 018d F3       		.byte	0xf3
 4978 018e 01       		.uleb128 0x1
 4979 018f 52       		.byte	0x52
 4980 0190 9F       		.byte	0x9f
 4981 0191 68000000 		.4byte	.LVL31
 4982 0195 6A000000 		.4byte	.LVL32
 4983 0199 0100     		.2byte	0x1
 4984 019b 50       		.byte	0x50
 4985 019c 6A000000 		.4byte	.LVL32
 4986 01a0 70000000 		.4byte	.LVL34
 4987 01a4 0100     		.2byte	0x1
 4988 01a6 55       		.byte	0x55
 4989 01a7 70000000 		.4byte	.LVL34
 4990 01ab 73000000 		.4byte	.LVL35-1
 4991 01af 0100     		.2byte	0x1
 4992 01b1 50       		.byte	0x50
 4993 01b2 73000000 		.4byte	.LVL35-1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 149


 4994 01b6 80000000 		.4byte	.LVL37
 4995 01ba 0100     		.2byte	0x1
 4996 01bc 55       		.byte	0x55
 4997 01bd 80000000 		.4byte	.LVL37
 4998 01c1 8C000000 		.4byte	.LFE8
 4999 01c5 0400     		.2byte	0x4
 5000 01c7 F3       		.byte	0xf3
 5001 01c8 01       		.uleb128 0x1
 5002 01c9 52       		.byte	0x52
 5003 01ca 9F       		.byte	0x9f
 5004 01cb 00000000 		.4byte	0
 5005 01cf 00000000 		.4byte	0
 5006              	.LLST12:
 5007 01d3 10000000 		.4byte	.LVL23
 5008 01d7 86000000 		.4byte	.LVL38
 5009 01db 0200     		.2byte	0x2
 5010 01dd 30       		.byte	0x30
 5011 01de 9F       		.byte	0x9f
 5012 01df 00000000 		.4byte	0
 5013 01e3 00000000 		.4byte	0
 5014              	.LLST13:
 5015 01e7 14000000 		.4byte	.LVL24
 5016 01eb 33000000 		.4byte	.LVL25-1
 5017 01ef 0100     		.2byte	0x1
 5018 01f1 50       		.byte	0x50
 5019 01f2 46000000 		.4byte	.LVL26
 5020 01f6 56000000 		.4byte	.LVL28
 5021 01fa 0100     		.2byte	0x1
 5022 01fc 50       		.byte	0x50
 5023 01fd 5A000000 		.4byte	.LVL29
 5024 0201 68000000 		.4byte	.LVL31
 5025 0205 0100     		.2byte	0x1
 5026 0207 50       		.byte	0x50
 5027 0208 74000000 		.4byte	.LVL35
 5028 020c 85000000 		.4byte	.LVL38-1
 5029 0210 0100     		.2byte	0x1
 5030 0212 50       		.byte	0x50
 5031 0213 00000000 		.4byte	0
 5032 0217 00000000 		.4byte	0
 5033              	.LLST14:
 5034 021b 10000000 		.4byte	.LVL23
 5035 021f 60000000 		.4byte	.LVL30
 5036 0223 0100     		.2byte	0x1
 5037 0225 54       		.byte	0x54
 5038 0226 68000000 		.4byte	.LVL31
 5039 022a 7A000000 		.4byte	.LVL36
 5040 022e 0100     		.2byte	0x1
 5041 0230 54       		.byte	0x54
 5042 0231 00000000 		.4byte	0
 5043 0235 00000000 		.4byte	0
 5044              	.LLST15:
 5045 0239 00000000 		.4byte	.LVL39
 5046 023d 1E000000 		.4byte	.LVL43
 5047 0241 0100     		.2byte	0x1
 5048 0243 50       		.byte	0x50
 5049 0244 1E000000 		.4byte	.LVL43
 5050 0248 74000000 		.4byte	.LVL64
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 150


 5051 024c 0100     		.2byte	0x1
 5052 024e 56       		.byte	0x56
 5053 024f 74000000 		.4byte	.LVL64
 5054 0253 80000000 		.4byte	.LFE11
 5055 0257 0400     		.2byte	0x4
 5056 0259 F3       		.byte	0xf3
 5057 025a 01       		.uleb128 0x1
 5058 025b 50       		.byte	0x50
 5059 025c 9F       		.byte	0x9f
 5060 025d 00000000 		.4byte	0
 5061 0261 00000000 		.4byte	0
 5062              	.LLST16:
 5063 0265 1C000000 		.4byte	.LVL42
 5064 0269 1E000000 		.4byte	.LVL43
 5065 026d 0200     		.2byte	0x2
 5066 026f 30       		.byte	0x30
 5067 0270 9F       		.byte	0x9f
 5068 0271 00000000 		.4byte	0
 5069 0275 00000000 		.4byte	0
 5070              	.LLST17:
 5071 0279 12000000 		.4byte	.LVL40
 5072 027d 18000000 		.4byte	.LVL41
 5073 0281 0200     		.2byte	0x2
 5074 0283 30       		.byte	0x30
 5075 0284 9F       		.byte	0x9f
 5076 0285 1C000000 		.4byte	.LVL42
 5077 0289 74000000 		.4byte	.LVL65
 5078 028d 0100     		.2byte	0x1
 5079 028f 57       		.byte	0x57
 5080 0290 00000000 		.4byte	0
 5081 0294 00000000 		.4byte	0
 5082              	.LLST18:
 5083 0298 12000000 		.4byte	.LVL40
 5084 029c 18000000 		.4byte	.LVL41
 5085 02a0 0200     		.2byte	0x2
 5086 02a2 35       		.byte	0x35
 5087 02a3 9F       		.byte	0x9f
 5088 02a4 1C000000 		.4byte	.LVL42
 5089 02a8 74000000 		.4byte	.LVL63
 5090 02ac 0100     		.2byte	0x1
 5091 02ae 55       		.byte	0x55
 5092 02af 00000000 		.4byte	0
 5093 02b3 00000000 		.4byte	0
 5094              	.LLST19:
 5095 02b7 3C000000 		.4byte	.LVL51
 5096 02bb 4C000000 		.4byte	.LVL54
 5097 02bf 0100     		.2byte	0x1
 5098 02c1 53       		.byte	0x53
 5099 02c2 4C000000 		.4byte	.LVL54
 5100 02c6 58000000 		.4byte	.LVL56
 5101 02ca 0300     		.2byte	0x3
 5102 02cc 74       		.byte	0x74
 5103 02cd 00       		.sleb128 0
 5104 02ce 06       		.byte	0x6
 5105 02cf 5E000000 		.4byte	.LVL57
 5106 02d3 67000000 		.4byte	.LVL61-1
 5107 02d7 0100     		.2byte	0x1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 151


 5108 02d9 53       		.byte	0x53
 5109 02da 00000000 		.4byte	0
 5110 02de 00000000 		.4byte	0
 5111              	.LLST20:
 5112 02e2 2E000000 		.4byte	.LVL47
 5113 02e6 30000000 		.4byte	.LVL48
 5114 02ea 0100     		.2byte	0x1
 5115 02ec 53       		.byte	0x53
 5116 02ed 36000000 		.4byte	.LVL49
 5117 02f1 3A000000 		.4byte	.LVL50
 5118 02f5 0100     		.2byte	0x1
 5119 02f7 53       		.byte	0x53
 5120 02f8 3A000000 		.4byte	.LVL50
 5121 02fc 56000000 		.4byte	.LVL55
 5122 0300 0100     		.2byte	0x1
 5123 0302 5C       		.byte	0x5c
 5124 0303 56000000 		.4byte	.LVL55
 5125 0307 5E000000 		.4byte	.LVL57
 5126 030b 0100     		.2byte	0x1
 5127 030d 53       		.byte	0x53
 5128 030e 5E000000 		.4byte	.LVL57
 5129 0312 60000000 		.4byte	.LVL58
 5130 0316 0300     		.2byte	0x3
 5131 0318 74       		.byte	0x74
 5132 0319 7C       		.sleb128 -4
 5133 031a 06       		.byte	0x6
 5134 031b 60000000 		.4byte	.LVL58
 5135 031f 64000000 		.4byte	.LVL60
 5136 0323 0300     		.2byte	0x3
 5137 0325 74       		.byte	0x74
 5138 0326 60       		.sleb128 -32
 5139 0327 06       		.byte	0x6
 5140 0328 00000000 		.4byte	0
 5141 032c 00000000 		.4byte	0
 5142              	.LLST21:
 5143 0330 1E000000 		.4byte	.LVL43
 5144 0334 28000000 		.4byte	.LVL46
 5145 0338 0300     		.2byte	0x3
 5146 033a 74       		.byte	0x74
 5147 033b 7C       		.sleb128 -4
 5148 033c 9F       		.byte	0x9f
 5149 033d 28000000 		.4byte	.LVL46
 5150 0341 2E000000 		.4byte	.LVL47
 5151 0345 0100     		.2byte	0x1
 5152 0347 53       		.byte	0x53
 5153 0348 2E000000 		.4byte	.LVL47
 5154 034c 60000000 		.4byte	.LVL58
 5155 0350 0300     		.2byte	0x3
 5156 0352 74       		.byte	0x74
 5157 0353 7C       		.sleb128 -4
 5158 0354 9F       		.byte	0x9f
 5159 0355 60000000 		.4byte	.LVL58
 5160 0359 68000000 		.4byte	.LVL61
 5161 035d 0300     		.2byte	0x3
 5162 035f 74       		.byte	0x74
 5163 0360 60       		.sleb128 -32
 5164 0361 9F       		.byte	0x9f
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 152


 5165 0362 00000000 		.4byte	0
 5166 0366 00000000 		.4byte	0
 5167              	.LLST22:
 5168 036a 14000000 		.4byte	.LVL66
 5169 036e 23000000 		.4byte	.LVL67-1
 5170 0372 0100     		.2byte	0x1
 5171 0374 50       		.byte	0x50
 5172 0375 26000000 		.4byte	.LVL68
 5173 0379 2C000000 		.4byte	.LVL69
 5174 037d 0100     		.2byte	0x1
 5175 037f 50       		.byte	0x50
 5176 0380 4C000000 		.4byte	.LVL70
 5177 0384 4E000000 		.4byte	.LVL71
 5178 0388 0200     		.2byte	0x2
 5179 038a 30       		.byte	0x30
 5180 038b 9F       		.byte	0x9f
 5181 038c 00000000 		.4byte	0
 5182 0390 00000000 		.4byte	0
 5183              	.LLST23:
 5184 0394 00000000 		.4byte	.LVL72
 5185 0398 05000000 		.4byte	.LVL73-1
 5186 039c 0100     		.2byte	0x1
 5187 039e 50       		.byte	0x50
 5188 039f 05000000 		.4byte	.LVL73-1
 5189 03a3 08000000 		.4byte	.LFE13
 5190 03a7 0400     		.2byte	0x4
 5191 03a9 F3       		.byte	0xf3
 5192 03aa 01       		.uleb128 0x1
 5193 03ab 50       		.byte	0x50
 5194 03ac 9F       		.byte	0x9f
 5195 03ad 00000000 		.4byte	0
 5196 03b1 00000000 		.4byte	0
 5197              	.LLST24:
 5198 03b5 00000000 		.4byte	.LVL74
 5199 03b9 06000000 		.4byte	.LVL75
 5200 03bd 0100     		.2byte	0x1
 5201 03bf 50       		.byte	0x50
 5202 03c0 06000000 		.4byte	.LVL75
 5203 03c4 0C000000 		.4byte	.LVL76
 5204 03c8 0300     		.2byte	0x3
 5205 03ca 70       		.byte	0x70
 5206 03cb 01       		.sleb128 1
 5207 03cc 9F       		.byte	0x9f
 5208 03cd 0C000000 		.4byte	.LVL76
 5209 03d1 2C000000 		.4byte	.LFE14
 5210 03d5 0400     		.2byte	0x4
 5211 03d7 F3       		.byte	0xf3
 5212 03d8 01       		.uleb128 0x1
 5213 03d9 50       		.byte	0x50
 5214 03da 9F       		.byte	0x9f
 5215 03db 00000000 		.4byte	0
 5216 03df 00000000 		.4byte	0
 5217              	.LLST25:
 5218 03e3 00000000 		.4byte	.LVL77
 5219 03e7 04000000 		.4byte	.LVL78
 5220 03eb 0100     		.2byte	0x1
 5221 03ed 50       		.byte	0x50
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 153


 5222 03ee 04000000 		.4byte	.LVL78
 5223 03f2 0C000000 		.4byte	.LVL82
 5224 03f6 0300     		.2byte	0x3
 5225 03f8 70       		.byte	0x70
 5226 03f9 01       		.sleb128 1
 5227 03fa 9F       		.byte	0x9f
 5228 03fb 0C000000 		.4byte	.LVL82
 5229 03ff 14000000 		.4byte	.LFE15
 5230 0403 0400     		.2byte	0x4
 5231 0405 F3       		.byte	0xf3
 5232 0406 01       		.uleb128 0x1
 5233 0407 50       		.byte	0x50
 5234 0408 9F       		.byte	0x9f
 5235 0409 00000000 		.4byte	0
 5236 040d 00000000 		.4byte	0
 5237              	.LLST26:
 5238 0411 06000000 		.4byte	.LVL79
 5239 0415 08000000 		.4byte	.LVL80
 5240 0419 0100     		.2byte	0x1
 5241 041b 53       		.byte	0x53
 5242 041c 0A000000 		.4byte	.LVL81
 5243 0420 0C000000 		.4byte	.LVL82
 5244 0424 0100     		.2byte	0x1
 5245 0426 53       		.byte	0x53
 5246 0427 0C000000 		.4byte	.LVL82
 5247 042b 14000000 		.4byte	.LFE15
 5248 042f 0100     		.2byte	0x1
 5249 0431 50       		.byte	0x50
 5250 0432 00000000 		.4byte	0
 5251 0436 00000000 		.4byte	0
 5252              	.LLST27:
 5253 043a 00000000 		.4byte	.LVL83
 5254 043e 06000000 		.4byte	.LVL84
 5255 0442 0100     		.2byte	0x1
 5256 0444 50       		.byte	0x50
 5257 0445 06000000 		.4byte	.LVL84
 5258 0449 10000000 		.4byte	.LVL87
 5259 044d 0100     		.2byte	0x1
 5260 044f 54       		.byte	0x54
 5261 0450 10000000 		.4byte	.LVL87
 5262 0454 12000000 		.4byte	.LFE16
 5263 0458 0400     		.2byte	0x4
 5264 045a F3       		.byte	0xf3
 5265 045b 01       		.uleb128 0x1
 5266 045c 50       		.byte	0x50
 5267 045d 9F       		.byte	0x9f
 5268 045e 00000000 		.4byte	0
 5269 0462 00000000 		.4byte	0
 5270              	.LLST28:
 5271 0466 00000000 		.4byte	.LVL83
 5272 046a 09000000 		.4byte	.LVL85-1
 5273 046e 0100     		.2byte	0x1
 5274 0470 51       		.byte	0x51
 5275 0471 09000000 		.4byte	.LVL85-1
 5276 0475 12000000 		.4byte	.LFE16
 5277 0479 0400     		.2byte	0x4
 5278 047b F3       		.byte	0xf3
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 154


 5279 047c 01       		.uleb128 0x1
 5280 047d 51       		.byte	0x51
 5281 047e 9F       		.byte	0x9f
 5282 047f 00000000 		.4byte	0
 5283 0483 00000000 		.4byte	0
 5284              	.LLST29:
 5285 0487 00000000 		.4byte	.LVL88
 5286 048b 08000000 		.4byte	.LVL89
 5287 048f 0100     		.2byte	0x1
 5288 0491 50       		.byte	0x50
 5289 0492 08000000 		.4byte	.LVL89
 5290 0496 0A000000 		.4byte	.LVL90
 5291 049a 0400     		.2byte	0x4
 5292 049c F3       		.byte	0xf3
 5293 049d 01       		.uleb128 0x1
 5294 049e 50       		.byte	0x50
 5295 049f 9F       		.byte	0x9f
 5296 04a0 0A000000 		.4byte	.LVL90
 5297 04a4 0F000000 		.4byte	.LVL91-1
 5298 04a8 0100     		.2byte	0x1
 5299 04aa 50       		.byte	0x50
 5300 04ab 0F000000 		.4byte	.LVL91-1
 5301 04af 12000000 		.4byte	.LFE17
 5302 04b3 0400     		.2byte	0x4
 5303 04b5 F3       		.byte	0xf3
 5304 04b6 01       		.uleb128 0x1
 5305 04b7 50       		.byte	0x50
 5306 04b8 9F       		.byte	0x9f
 5307 04b9 00000000 		.4byte	0
 5308 04bd 00000000 		.4byte	0
 5309              	.LLST30:
 5310 04c1 00000000 		.4byte	.LVL88
 5311 04c5 10000000 		.4byte	.LVL91
 5312 04c9 0200     		.2byte	0x2
 5313 04cb 30       		.byte	0x30
 5314 04cc 9F       		.byte	0x9f
 5315 04cd 00000000 		.4byte	0
 5316 04d1 00000000 		.4byte	0
 5317              	.LLST31:
 5318 04d5 0A000000 		.4byte	.LVL90
 5319 04d9 0F000000 		.4byte	.LVL91-1
 5320 04dd 0100     		.2byte	0x1
 5321 04df 50       		.byte	0x50
 5322 04e0 0F000000 		.4byte	.LVL91-1
 5323 04e4 10000000 		.4byte	.LVL91
 5324 04e8 0400     		.2byte	0x4
 5325 04ea F3       		.byte	0xf3
 5326 04eb 01       		.uleb128 0x1
 5327 04ec 50       		.byte	0x50
 5328 04ed 9F       		.byte	0x9f
 5329 04ee 00000000 		.4byte	0
 5330 04f2 00000000 		.4byte	0
 5331              	.LLST32:
 5332 04f6 00000000 		.4byte	.LVL92
 5333 04fa 06000000 		.4byte	.LVL93
 5334 04fe 0200     		.2byte	0x2
 5335 0500 30       		.byte	0x30
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 155


 5336 0501 9F       		.byte	0x9f
 5337 0502 06000000 		.4byte	.LVL93
 5338 0506 16000000 		.4byte	.LVL98
 5339 050a 0100     		.2byte	0x1
 5340 050c 55       		.byte	0x55
 5341 050d 16000000 		.4byte	.LVL98
 5342 0511 18000000 		.4byte	.LFE18
 5343 0515 0100     		.2byte	0x1
 5344 0517 50       		.byte	0x50
 5345 0518 00000000 		.4byte	0
 5346 051c 00000000 		.4byte	0
 5347              	.LLST33:
 5348 0520 00000000 		.4byte	.LVL92
 5349 0524 06000000 		.4byte	.LVL93
 5350 0528 0200     		.2byte	0x2
 5351 052a 30       		.byte	0x30
 5352 052b 9F       		.byte	0x9f
 5353 052c 06000000 		.4byte	.LVL93
 5354 0530 0E000000 		.4byte	.LVL95
 5355 0534 0100     		.2byte	0x1
 5356 0536 54       		.byte	0x54
 5357 0537 0E000000 		.4byte	.LVL95
 5358 053b 10000000 		.4byte	.LVL96
 5359 053f 0300     		.2byte	0x3
 5360 0541 74       		.byte	0x74
 5361 0542 7F       		.sleb128 -1
 5362 0543 9F       		.byte	0x9f
 5363 0544 10000000 		.4byte	.LVL96
 5364 0548 16000000 		.4byte	.LVL97
 5365 054c 0100     		.2byte	0x1
 5366 054e 54       		.byte	0x54
 5367 054f 00000000 		.4byte	0
 5368 0553 00000000 		.4byte	0
 5369              	.LLST34:
 5370 0557 00000000 		.4byte	.LVL99
 5371 055b 04000000 		.4byte	.LVL100
 5372 055f 0100     		.2byte	0x1
 5373 0561 50       		.byte	0x50
 5374 0562 04000000 		.4byte	.LVL100
 5375 0566 14000000 		.4byte	.LFE23
 5376 056a 0400     		.2byte	0x4
 5377 056c F3       		.byte	0xf3
 5378 056d 01       		.uleb128 0x1
 5379 056e 50       		.byte	0x50
 5380 056f 9F       		.byte	0x9f
 5381 0570 00000000 		.4byte	0
 5382 0574 00000000 		.4byte	0
 5383              	.LLST35:
 5384 0578 00000000 		.4byte	.LVL101
 5385 057c 14000000 		.4byte	.LVL103
 5386 0580 0100     		.2byte	0x1
 5387 0582 50       		.byte	0x50
 5388 0583 14000000 		.4byte	.LVL103
 5389 0587 20000000 		.4byte	.LFE24
 5390 058b 0400     		.2byte	0x4
 5391 058d F3       		.byte	0xf3
 5392 058e 01       		.uleb128 0x1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 156


 5393 058f 50       		.byte	0x50
 5394 0590 9F       		.byte	0x9f
 5395 0591 00000000 		.4byte	0
 5396 0595 00000000 		.4byte	0
 5397              	.LLST36:
 5398 0599 00000000 		.4byte	.LVL101
 5399 059d 06000000 		.4byte	.LVL102
 5400 05a1 0100     		.2byte	0x1
 5401 05a3 51       		.byte	0x51
 5402 05a4 06000000 		.4byte	.LVL102
 5403 05a8 20000000 		.4byte	.LFE24
 5404 05ac 0400     		.2byte	0x4
 5405 05ae F3       		.byte	0xf3
 5406 05af 01       		.uleb128 0x1
 5407 05b0 51       		.byte	0x51
 5408 05b1 9F       		.byte	0x9f
 5409 05b2 00000000 		.4byte	0
 5410 05b6 00000000 		.4byte	0
 5411              	.LLST37:
 5412 05ba 00000000 		.4byte	.LVL105
 5413 05be 04000000 		.4byte	.LVL106
 5414 05c2 0200     		.2byte	0x2
 5415 05c4 30       		.byte	0x30
 5416 05c5 9F       		.byte	0x9f
 5417 05c6 00000000 		.4byte	0
 5418 05ca 00000000 		.4byte	0
 5419              	.LLST38:
 5420 05ce 0A000000 		.4byte	.LVL107
 5421 05d2 13000000 		.4byte	.LVL109-1
 5422 05d6 0100     		.2byte	0x1
 5423 05d8 53       		.byte	0x53
 5424 05d9 13000000 		.4byte	.LVL109-1
 5425 05dd C8000000 		.4byte	.LFE19
 5426 05e1 0200     		.2byte	0x2
 5427 05e3 91       		.byte	0x91
 5428 05e4 64       		.sleb128 -28
 5429 05e5 00000000 		.4byte	0
 5430 05e9 00000000 		.4byte	0
 5431              	.LLST39:
 5432 05ed 0A000000 		.4byte	.LVL107
 5433 05f1 13000000 		.4byte	.LVL109-1
 5434 05f5 0100     		.2byte	0x1
 5435 05f7 53       		.byte	0x53
 5436 05f8 13000000 		.4byte	.LVL109-1
 5437 05fc A8000000 		.4byte	.LVL132
 5438 0600 0200     		.2byte	0x2
 5439 0602 91       		.byte	0x91
 5440 0603 64       		.sleb128 -28
 5441 0604 B0000000 		.4byte	.LVL133
 5442 0608 C8000000 		.4byte	.LFE19
 5443 060c 0200     		.2byte	0x2
 5444 060e 91       		.byte	0x91
 5445 060f 64       		.sleb128 -28
 5446 0610 00000000 		.4byte	0
 5447 0614 00000000 		.4byte	0
 5448              	.LLST40:
 5449 0618 7A000000 		.4byte	.LVL123
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 157


 5450 061c 80000000 		.4byte	.LVL124
 5451 0620 0100     		.2byte	0x1
 5452 0622 50       		.byte	0x50
 5453 0623 80000000 		.4byte	.LVL124
 5454 0627 9E000000 		.4byte	.LVL131
 5455 062b 0100     		.2byte	0x1
 5456 062d 55       		.byte	0x55
 5457 062e 00000000 		.4byte	0
 5458 0632 00000000 		.4byte	0
 5459              	.LLST41:
 5460 0636 16000000 		.4byte	.LVL110
 5461 063a 25000000 		.4byte	.LVL111-1
 5462 063e 0100     		.2byte	0x1
 5463 0640 50       		.byte	0x50
 5464 0641 25000000 		.4byte	.LVL111-1
 5465 0645 2E000000 		.4byte	.LVL112
 5466 0649 0100     		.2byte	0x1
 5467 064b 54       		.byte	0x54
 5468 064c 2E000000 		.4byte	.LVL112
 5469 0650 36000000 		.4byte	.LVL113
 5470 0654 0100     		.2byte	0x1
 5471 0656 50       		.byte	0x50
 5472 0657 36000000 		.4byte	.LVL113
 5473 065b 46000000 		.4byte	.LVL115
 5474 065f 0100     		.2byte	0x1
 5475 0661 54       		.byte	0x54
 5476 0662 46000000 		.4byte	.LVL115
 5477 0666 4A000000 		.4byte	.LVL116
 5478 066a 0100     		.2byte	0x1
 5479 066c 50       		.byte	0x50
 5480 066d 4A000000 		.4byte	.LVL116
 5481 0671 5A000000 		.4byte	.LVL118
 5482 0675 0100     		.2byte	0x1
 5483 0677 54       		.byte	0x54
 5484 0678 5A000000 		.4byte	.LVL118
 5485 067c 5E000000 		.4byte	.LVL119
 5486 0680 0100     		.2byte	0x1
 5487 0682 50       		.byte	0x50
 5488 0683 5E000000 		.4byte	.LVL119
 5489 0687 A8000000 		.4byte	.LVL132
 5490 068b 0100     		.2byte	0x1
 5491 068d 54       		.byte	0x54
 5492 068e B0000000 		.4byte	.LVL133
 5493 0692 C8000000 		.4byte	.LFE19
 5494 0696 0100     		.2byte	0x1
 5495 0698 54       		.byte	0x54
 5496 0699 00000000 		.4byte	0
 5497 069d 00000000 		.4byte	0
 5498              	.LLST42:
 5499 06a1 0A000000 		.4byte	.LVL107
 5500 06a5 0C000000 		.4byte	.LVL108
 5501 06a9 0100     		.2byte	0x1
 5502 06ab 53       		.byte	0x53
 5503 06ac 00000000 		.4byte	0
 5504 06b0 00000000 		.4byte	0
 5505              	.LLST43:
 5506 06b4 16000000 		.4byte	.LVL110
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 158


 5507 06b8 25000000 		.4byte	.LVL111-1
 5508 06bc 0100     		.2byte	0x1
 5509 06be 50       		.byte	0x50
 5510 06bf 25000000 		.4byte	.LVL111-1
 5511 06c3 2E000000 		.4byte	.LVL112
 5512 06c7 0100     		.2byte	0x1
 5513 06c9 54       		.byte	0x54
 5514 06ca 2E000000 		.4byte	.LVL112
 5515 06ce 36000000 		.4byte	.LVL113
 5516 06d2 0100     		.2byte	0x1
 5517 06d4 50       		.byte	0x50
 5518 06d5 36000000 		.4byte	.LVL113
 5519 06d9 46000000 		.4byte	.LVL115
 5520 06dd 0100     		.2byte	0x1
 5521 06df 54       		.byte	0x54
 5522 06e0 46000000 		.4byte	.LVL115
 5523 06e4 4A000000 		.4byte	.LVL116
 5524 06e8 0100     		.2byte	0x1
 5525 06ea 50       		.byte	0x50
 5526 06eb 4A000000 		.4byte	.LVL116
 5527 06ef 5A000000 		.4byte	.LVL118
 5528 06f3 0100     		.2byte	0x1
 5529 06f5 54       		.byte	0x54
 5530 06f6 5A000000 		.4byte	.LVL118
 5531 06fa 5E000000 		.4byte	.LVL119
 5532 06fe 0100     		.2byte	0x1
 5533 0700 50       		.byte	0x50
 5534 0701 5E000000 		.4byte	.LVL119
 5535 0705 6A000000 		.4byte	.LVL121
 5536 0709 0100     		.2byte	0x1
 5537 070b 54       		.byte	0x54
 5538 070c B0000000 		.4byte	.LVL133
 5539 0710 B2000000 		.4byte	.LVL134
 5540 0714 0100     		.2byte	0x1
 5541 0716 54       		.byte	0x54
 5542 0717 00000000 		.4byte	0
 5543 071b 00000000 		.4byte	0
 5544              	.LLST44:
 5545 071f 16000000 		.4byte	.LVL110
 5546 0723 6A000000 		.4byte	.LVL121
 5547 0727 0100     		.2byte	0x1
 5548 0729 56       		.byte	0x56
 5549 072a B0000000 		.4byte	.LVL133
 5550 072e B2000000 		.4byte	.LVL134
 5551 0732 0100     		.2byte	0x1
 5552 0734 56       		.byte	0x56
 5553 0735 00000000 		.4byte	0
 5554 0739 00000000 		.4byte	0
 5555              	.LLST45:
 5556 073d 16000000 		.4byte	.LVL110
 5557 0741 6A000000 		.4byte	.LVL121
 5558 0745 0200     		.2byte	0x2
 5559 0747 30       		.byte	0x30
 5560 0748 9F       		.byte	0x9f
 5561 0749 B0000000 		.4byte	.LVL133
 5562 074d B2000000 		.4byte	.LVL134
 5563 0751 0200     		.2byte	0x2
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 159


 5564 0753 30       		.byte	0x30
 5565 0754 9F       		.byte	0x9f
 5566 0755 00000000 		.4byte	0
 5567 0759 00000000 		.4byte	0
 5568              	.LLST47:
 5569 075d 7A000000 		.4byte	.LVL123
 5570 0761 9E000000 		.4byte	.LVL131
 5571 0765 0100     		.2byte	0x1
 5572 0767 56       		.byte	0x56
 5573 0768 00000000 		.4byte	0
 5574 076c 00000000 		.4byte	0
 5575              	.LLST48:
 5576 0770 8A000000 		.4byte	.LVL125
 5577 0774 8C000000 		.4byte	.LVL126
 5578 0778 0200     		.2byte	0x2
 5579 077a 30       		.byte	0x30
 5580 077b 9F       		.byte	0x9f
 5581 077c 8C000000 		.4byte	.LVL126
 5582 0780 9E000000 		.4byte	.LVL131
 5583 0784 0100     		.2byte	0x1
 5584 0786 53       		.byte	0x53
 5585 0787 00000000 		.4byte	0
 5586 078b 00000000 		.4byte	0
 5587              	.LLST49:
 5588 078f 80000000 		.4byte	.LVL124
 5589 0793 9E000000 		.4byte	.LVL131
 5590 0797 0200     		.2byte	0x2
 5591 0799 40       		.byte	0x40
 5592 079a 9F       		.byte	0x9f
 5593 079b 00000000 		.4byte	0
 5594 079f 00000000 		.4byte	0
 5595              	.LLST50:
 5596 07a3 8A000000 		.4byte	.LVL125
 5597 07a7 98000000 		.4byte	.LVL129
 5598 07ab 0100     		.2byte	0x1
 5599 07ad 50       		.byte	0x50
 5600 07ae 98000000 		.4byte	.LVL129
 5601 07b2 9C000000 		.4byte	.LVL130
 5602 07b6 0300     		.2byte	0x3
 5603 07b8 70       		.byte	0x70
 5604 07b9 0A       		.sleb128 10
 5605 07ba 9F       		.byte	0x9f
 5606 07bb 00000000 		.4byte	0
 5607 07bf 00000000 		.4byte	0
 5608              	.LLST51:
 5609 07c3 00000000 		.4byte	.LVL135
 5610 07c7 1D000000 		.4byte	.LVL141-1
 5611 07cb 0100     		.2byte	0x1
 5612 07cd 50       		.byte	0x50
 5613 07ce 1D000000 		.4byte	.LVL141-1
 5614 07d2 A8000000 		.4byte	.LFE25
 5615 07d6 0200     		.2byte	0x2
 5616 07d8 91       		.byte	0x91
 5617 07d9 64       		.sleb128 -28
 5618 07da 00000000 		.4byte	0
 5619 07de 00000000 		.4byte	0
 5620              	.LLST52:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 160


 5621 07e2 0E000000 		.4byte	.LVL136
 5622 07e6 10000000 		.4byte	.LVL137
 5623 07ea 0600     		.2byte	0x6
 5624 07ec 73       		.byte	0x73
 5625 07ed 00       		.sleb128 0
 5626 07ee 08       		.byte	0x8
 5627 07ef F0       		.byte	0xf0
 5628 07f0 1A       		.byte	0x1a
 5629 07f1 9F       		.byte	0x9f
 5630 07f2 10000000 		.4byte	.LVL137
 5631 07f6 9A000000 		.4byte	.LVL170
 5632 07fa 0700     		.2byte	0x7
 5633 07fc 7D       		.byte	0x7d
 5634 07fd 00       		.sleb128 0
 5635 07fe 06       		.byte	0x6
 5636 07ff 08       		.byte	0x8
 5637 0800 F0       		.byte	0xf0
 5638 0801 1A       		.byte	0x1a
 5639 0802 9F       		.byte	0x9f
 5640 0803 9A000000 		.4byte	.LVL170
 5641 0807 A8000000 		.4byte	.LFE25
 5642 080b 0700     		.2byte	0x7
 5643 080d 91       		.byte	0x91
 5644 080e 58       		.sleb128 -40
 5645 080f 06       		.byte	0x6
 5646 0810 08       		.byte	0x8
 5647 0811 F0       		.byte	0xf0
 5648 0812 1A       		.byte	0x1a
 5649 0813 9F       		.byte	0x9f
 5650 0814 00000000 		.4byte	0
 5651 0818 00000000 		.4byte	0
 5652              	.LLST53:
 5653 081c 14000000 		.4byte	.LVL138
 5654 0820 16000000 		.4byte	.LVL139
 5655 0824 0500     		.2byte	0x5
 5656 0826 73       		.byte	0x73
 5657 0827 00       		.sleb128 0
 5658 0828 32       		.byte	0x32
 5659 0829 1A       		.byte	0x1a
 5660 082a 9F       		.byte	0x9f
 5661 082b 16000000 		.4byte	.LVL139
 5662 082f A8000000 		.4byte	.LFE25
 5663 0833 0600     		.2byte	0x6
 5664 0835 91       		.byte	0x91
 5665 0836 5C       		.sleb128 -36
 5666 0837 06       		.byte	0x6
 5667 0838 32       		.byte	0x32
 5668 0839 1A       		.byte	0x1a
 5669 083a 9F       		.byte	0x9f
 5670 083b 00000000 		.4byte	0
 5671 083f 00000000 		.4byte	0
 5672              	.LLST54:
 5673 0843 1A000000 		.4byte	.LVL140
 5674 0847 1D000000 		.4byte	.LVL141-1
 5675 084b 0600     		.2byte	0x6
 5676 084d 73       		.byte	0x73
 5677 084e 00       		.sleb128 0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 161


 5678 084f 08       		.byte	0x8
 5679 0850 38       		.byte	0x38
 5680 0851 1A       		.byte	0x1a
 5681 0852 9F       		.byte	0x9f
 5682 0853 1D000000 		.4byte	.LVL141-1
 5683 0857 A8000000 		.4byte	.LFE25
 5684 085b 0700     		.2byte	0x7
 5685 085d 91       		.byte	0x91
 5686 085e 60       		.sleb128 -32
 5687 085f 06       		.byte	0x6
 5688 0860 08       		.byte	0x8
 5689 0861 38       		.byte	0x38
 5690 0862 1A       		.byte	0x1a
 5691 0863 9F       		.byte	0x9f
 5692 0864 00000000 		.4byte	0
 5693 0868 00000000 		.4byte	0
 5694              	.LLST55:
 5695 086c 22000000 		.4byte	.LVL142
 5696 0870 29000000 		.4byte	.LVL144-1
 5697 0874 0100     		.2byte	0x1
 5698 0876 53       		.byte	0x53
 5699 0877 32000000 		.4byte	.LVL146
 5700 087b 39000000 		.4byte	.LVL148-1
 5701 087f 0100     		.2byte	0x1
 5702 0881 53       		.byte	0x53
 5703 0882 42000000 		.4byte	.LVL150
 5704 0886 4B000000 		.4byte	.LVL153-1
 5705 088a 0100     		.2byte	0x1
 5706 088c 53       		.byte	0x53
 5707 088d 5C000000 		.4byte	.LVL156
 5708 0891 62000000 		.4byte	.LVL158
 5709 0895 0100     		.2byte	0x1
 5710 0897 53       		.byte	0x53
 5711 0898 62000000 		.4byte	.LVL158
 5712 089c 72000000 		.4byte	.LVL161
 5713 08a0 0100     		.2byte	0x1
 5714 08a2 57       		.byte	0x57
 5715 08a3 72000000 		.4byte	.LVL161
 5716 08a7 7F000000 		.4byte	.LVL164-1
 5717 08ab 0100     		.2byte	0x1
 5718 08ad 53       		.byte	0x53
 5719 08ae 8A000000 		.4byte	.LVL166
 5720 08b2 97000000 		.4byte	.LVL169-1
 5721 08b6 0100     		.2byte	0x1
 5722 08b8 53       		.byte	0x53
 5723 08b9 00000000 		.4byte	0
 5724 08bd 00000000 		.4byte	0
 5725              	.LLST56:
 5726 08c1 1E000000 		.4byte	.LVL141
 5727 08c5 29000000 		.4byte	.LVL144-1
 5728 08c9 0100     		.2byte	0x1
 5729 08cb 50       		.byte	0x50
 5730 08cc 2E000000 		.4byte	.LVL145
 5731 08d0 39000000 		.4byte	.LVL148-1
 5732 08d4 0100     		.2byte	0x1
 5733 08d6 50       		.byte	0x50
 5734 08d7 3E000000 		.4byte	.LVL149
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 162


 5735 08db 4B000000 		.4byte	.LVL153-1
 5736 08df 0100     		.2byte	0x1
 5737 08e1 50       		.byte	0x50
 5738 08e2 58000000 		.4byte	.LVL155
 5739 08e6 67000000 		.4byte	.LVL159-1
 5740 08ea 0100     		.2byte	0x1
 5741 08ec 50       		.byte	0x50
 5742 08ed 6C000000 		.4byte	.LVL160
 5743 08f1 7F000000 		.4byte	.LVL164-1
 5744 08f5 0100     		.2byte	0x1
 5745 08f7 50       		.byte	0x50
 5746 08f8 84000000 		.4byte	.LVL165
 5747 08fc 97000000 		.4byte	.LVL169-1
 5748 0900 0100     		.2byte	0x1
 5749 0902 50       		.byte	0x50
 5750 0903 00000000 		.4byte	0
 5751 0907 00000000 		.4byte	0
 5752              	.LLST57:
 5753 090b 00000000 		.4byte	.LVL171
 5754 090f 0E000000 		.4byte	.LVL172
 5755 0913 0100     		.2byte	0x1
 5756 0915 50       		.byte	0x50
 5757 0916 0E000000 		.4byte	.LVL172
 5758 091a 14000000 		.4byte	.LFE26
 5759 091e 0400     		.2byte	0x4
 5760 0920 F3       		.byte	0xf3
 5761 0921 01       		.uleb128 0x1
 5762 0922 50       		.byte	0x50
 5763 0923 9F       		.byte	0x9f
 5764 0924 00000000 		.4byte	0
 5765 0928 00000000 		.4byte	0
 5766              	.LLST58:
 5767 092c 00000000 		.4byte	.LVL171
 5768 0930 0E000000 		.4byte	.LVL172
 5769 0934 0200     		.2byte	0x2
 5770 0936 30       		.byte	0x30
 5771 0937 9F       		.byte	0x9f
 5772 0938 0E000000 		.4byte	.LVL172
 5773 093c 14000000 		.4byte	.LFE26
 5774 0940 0100     		.2byte	0x1
 5775 0942 50       		.byte	0x50
 5776 0943 00000000 		.4byte	0
 5777 0947 00000000 		.4byte	0
 5778              	.LLST59:
 5779 094b 00000000 		.4byte	.LVL173
 5780 094f 0B000000 		.4byte	.LVL174-1
 5781 0953 0100     		.2byte	0x1
 5782 0955 50       		.byte	0x50
 5783 0956 0B000000 		.4byte	.LVL174-1
 5784 095a 1A000000 		.4byte	.LVL177
 5785 095e 0100     		.2byte	0x1
 5786 0960 55       		.byte	0x55
 5787 0961 1A000000 		.4byte	.LVL177
 5788 0965 1C000000 		.4byte	.LFE27
 5789 0969 0400     		.2byte	0x4
 5790 096b F3       		.byte	0xf3
 5791 096c 01       		.uleb128 0x1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 163


 5792 096d 50       		.byte	0x50
 5793 096e 9F       		.byte	0x9f
 5794 096f 00000000 		.4byte	0
 5795 0973 00000000 		.4byte	0
 5796              	.LLST60:
 5797 0977 00000000 		.4byte	.LVL173
 5798 097b 0B000000 		.4byte	.LVL174-1
 5799 097f 0100     		.2byte	0x1
 5800 0981 51       		.byte	0x51
 5801 0982 0B000000 		.4byte	.LVL174-1
 5802 0986 1A000000 		.4byte	.LVL178
 5803 098a 0100     		.2byte	0x1
 5804 098c 56       		.byte	0x56
 5805 098d 1A000000 		.4byte	.LVL178
 5806 0991 1C000000 		.4byte	.LFE27
 5807 0995 0400     		.2byte	0x4
 5808 0997 F3       		.byte	0xf3
 5809 0998 01       		.uleb128 0x1
 5810 0999 51       		.byte	0x51
 5811 099a 9F       		.byte	0x9f
 5812 099b 00000000 		.4byte	0
 5813 099f 00000000 		.4byte	0
 5814              	.LLST61:
 5815 09a3 00000000 		.4byte	.LVL173
 5816 09a7 0B000000 		.4byte	.LVL174-1
 5817 09ab 0100     		.2byte	0x1
 5818 09ad 52       		.byte	0x52
 5819 09ae 0B000000 		.4byte	.LVL174-1
 5820 09b2 10000000 		.4byte	.LVL175
 5821 09b6 0100     		.2byte	0x1
 5822 09b8 54       		.byte	0x54
 5823 09b9 10000000 		.4byte	.LVL175
 5824 09bd 1C000000 		.4byte	.LFE27
 5825 09c1 0400     		.2byte	0x4
 5826 09c3 F3       		.byte	0xf3
 5827 09c4 01       		.uleb128 0x1
 5828 09c5 52       		.byte	0x52
 5829 09c6 9F       		.byte	0x9f
 5830 09c7 00000000 		.4byte	0
 5831 09cb 00000000 		.4byte	0
 5832              	.LLST62:
 5833 09cf 0C000000 		.4byte	.LVL174
 5834 09d3 19000000 		.4byte	.LVL176-1
 5835 09d7 0100     		.2byte	0x1
 5836 09d9 50       		.byte	0x50
 5837 09da 00000000 		.4byte	0
 5838 09de 00000000 		.4byte	0
 5839              	.LLST63:
 5840 09e2 00000000 		.4byte	.LVL179
 5841 09e6 14000000 		.4byte	.LVL180
 5842 09ea 0100     		.2byte	0x1
 5843 09ec 50       		.byte	0x50
 5844 09ed 14000000 		.4byte	.LVL180
 5845 09f1 50000000 		.4byte	.LFE10
 5846 09f5 0400     		.2byte	0x4
 5847 09f7 F3       		.byte	0xf3
 5848 09f8 01       		.uleb128 0x1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 164


 5849 09f9 50       		.byte	0x50
 5850 09fa 9F       		.byte	0x9f
 5851 09fb 00000000 		.4byte	0
 5852 09ff 00000000 		.4byte	0
 5853              	.LLST64:
 5854 0a03 16000000 		.4byte	.LVL181
 5855 0a07 21000000 		.4byte	.LVL183-1
 5856 0a0b 0100     		.2byte	0x1
 5857 0a0d 53       		.byte	0x53
 5858 0a0e 00000000 		.4byte	0
 5859 0a12 00000000 		.4byte	0
 5860              	.LLST65:
 5861 0a16 3C000000 		.4byte	.LVL187
 5862 0a1a 40000000 		.4byte	.LVL188
 5863 0a1e 0300     		.2byte	0x3
 5864 0a20 74       		.byte	0x74
 5865 0a21 02       		.sleb128 2
 5866 0a22 9F       		.byte	0x9f
 5867 0a23 00000000 		.4byte	0
 5868 0a27 00000000 		.4byte	0
 5869              		.section	.debug_aranges,"",%progbits
 5870 0000 CC000000 		.4byte	0xcc
 5871 0004 0200     		.2byte	0x2
 5872 0006 00000000 		.4byte	.Ldebug_info0
 5873 000a 04       		.byte	0x4
 5874 000b 00       		.byte	0
 5875 000c 0000     		.2byte	0
 5876 000e 0000     		.2byte	0
 5877 0010 00000000 		.4byte	.LFB1
 5878 0014 10000000 		.4byte	.LFE1-.LFB1
 5879 0018 00000000 		.4byte	.LFB2
 5880 001c 30000000 		.4byte	.LFE2-.LFB2
 5881 0020 00000000 		.4byte	.LFB3
 5882 0024 30000000 		.4byte	.LFE3-.LFB3
 5883 0028 00000000 		.4byte	.LFB4
 5884 002c 3C000000 		.4byte	.LFE4-.LFB4
 5885 0030 00000000 		.4byte	.LFB5
 5886 0034 40000000 		.4byte	.LFE5-.LFB5
 5887 0038 00000000 		.4byte	.LFB6
 5888 003c 30000000 		.4byte	.LFE6-.LFB6
 5889 0040 00000000 		.4byte	.LFB8
 5890 0044 8C000000 		.4byte	.LFE8-.LFB8
 5891 0048 00000000 		.4byte	.LFB11
 5892 004c 80000000 		.4byte	.LFE11-.LFB11
 5893 0050 00000000 		.4byte	.LFB12
 5894 0054 68000000 		.4byte	.LFE12-.LFB12
 5895 0058 00000000 		.4byte	.LFB13
 5896 005c 08000000 		.4byte	.LFE13-.LFB13
 5897 0060 00000000 		.4byte	.LFB14
 5898 0064 2C000000 		.4byte	.LFE14-.LFB14
 5899 0068 00000000 		.4byte	.LFB15
 5900 006c 14000000 		.4byte	.LFE15-.LFB15
 5901 0070 00000000 		.4byte	.LFB16
 5902 0074 12000000 		.4byte	.LFE16-.LFB16
 5903 0078 00000000 		.4byte	.LFB17
 5904 007c 12000000 		.4byte	.LFE17-.LFB17
 5905 0080 00000000 		.4byte	.LFB18
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 165


 5906 0084 18000000 		.4byte	.LFE18-.LFB18
 5907 0088 00000000 		.4byte	.LFB23
 5908 008c 14000000 		.4byte	.LFE23-.LFB23
 5909 0090 00000000 		.4byte	.LFB24
 5910 0094 20000000 		.4byte	.LFE24-.LFB24
 5911 0098 00000000 		.4byte	.LFB19
 5912 009c C8000000 		.4byte	.LFE19-.LFB19
 5913 00a0 00000000 		.4byte	.LFB25
 5914 00a4 A8000000 		.4byte	.LFE25-.LFB25
 5915 00a8 00000000 		.4byte	.LFB26
 5916 00ac 14000000 		.4byte	.LFE26-.LFB26
 5917 00b0 00000000 		.4byte	.LFB27
 5918 00b4 1C000000 		.4byte	.LFE27-.LFB27
 5919 00b8 00000000 		.4byte	.LFB10
 5920 00bc 50000000 		.4byte	.LFE10-.LFB10
 5921 00c0 00000000 		.4byte	.LFB7
 5922 00c4 28000000 		.4byte	.LFE7-.LFB7
 5923 00c8 00000000 		.4byte	0
 5924 00cc 00000000 		.4byte	0
 5925              		.section	.debug_ranges,"",%progbits
 5926              	.Ldebug_ranges0:
 5927 0000 06000000 		.4byte	.LBB20
 5928 0004 08000000 		.4byte	.LBE20
 5929 0008 0A000000 		.4byte	.LBB34
 5930 000c A8000000 		.4byte	.LBE34
 5931 0010 B0000000 		.4byte	.LBB35
 5932 0014 C8000000 		.4byte	.LBE35
 5933 0018 00000000 		.4byte	0
 5934 001c 00000000 		.4byte	0
 5935 0020 16000000 		.4byte	.LBB24
 5936 0024 6A000000 		.4byte	.LBE24
 5937 0028 B0000000 		.4byte	.LBB31
 5938 002c C8000000 		.4byte	.LBE31
 5939 0030 00000000 		.4byte	0
 5940 0034 00000000 		.4byte	0
 5941 0038 74000000 		.4byte	.LBB27
 5942 003c 78000000 		.4byte	.LBE27
 5943 0040 7A000000 		.4byte	.LBB30
 5944 0044 9E000000 		.4byte	.LBE30
 5945 0048 00000000 		.4byte	0
 5946 004c 00000000 		.4byte	0
 5947 0050 00000000 		.4byte	.LFB1
 5948 0054 10000000 		.4byte	.LFE1
 5949 0058 00000000 		.4byte	.LFB2
 5950 005c 30000000 		.4byte	.LFE2
 5951 0060 00000000 		.4byte	.LFB3
 5952 0064 30000000 		.4byte	.LFE3
 5953 0068 00000000 		.4byte	.LFB4
 5954 006c 3C000000 		.4byte	.LFE4
 5955 0070 00000000 		.4byte	.LFB5
 5956 0074 40000000 		.4byte	.LFE5
 5957 0078 00000000 		.4byte	.LFB6
 5958 007c 30000000 		.4byte	.LFE6
 5959 0080 00000000 		.4byte	.LFB8
 5960 0084 8C000000 		.4byte	.LFE8
 5961 0088 00000000 		.4byte	.LFB11
 5962 008c 80000000 		.4byte	.LFE11
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 166


 5963 0090 00000000 		.4byte	.LFB12
 5964 0094 68000000 		.4byte	.LFE12
 5965 0098 00000000 		.4byte	.LFB13
 5966 009c 08000000 		.4byte	.LFE13
 5967 00a0 00000000 		.4byte	.LFB14
 5968 00a4 2C000000 		.4byte	.LFE14
 5969 00a8 00000000 		.4byte	.LFB15
 5970 00ac 14000000 		.4byte	.LFE15
 5971 00b0 00000000 		.4byte	.LFB16
 5972 00b4 12000000 		.4byte	.LFE16
 5973 00b8 00000000 		.4byte	.LFB17
 5974 00bc 12000000 		.4byte	.LFE17
 5975 00c0 00000000 		.4byte	.LFB18
 5976 00c4 18000000 		.4byte	.LFE18
 5977 00c8 00000000 		.4byte	.LFB23
 5978 00cc 14000000 		.4byte	.LFE23
 5979 00d0 00000000 		.4byte	.LFB24
 5980 00d4 20000000 		.4byte	.LFE24
 5981 00d8 00000000 		.4byte	.LFB19
 5982 00dc C8000000 		.4byte	.LFE19
 5983 00e0 00000000 		.4byte	.LFB25
 5984 00e4 A8000000 		.4byte	.LFE25
 5985 00e8 00000000 		.4byte	.LFB26
 5986 00ec 14000000 		.4byte	.LFE26
 5987 00f0 00000000 		.4byte	.LFB27
 5988 00f4 1C000000 		.4byte	.LFE27
 5989 00f8 00000000 		.4byte	.LFB10
 5990 00fc 50000000 		.4byte	.LFE10
 5991 0100 00000000 		.4byte	.LFB7
 5992 0104 28000000 		.4byte	.LFE7
 5993 0108 00000000 		.4byte	0
 5994 010c 00000000 		.4byte	0
 5995              		.section	.debug_line,"",%progbits
 5996              	.Ldebug_line0:
 5997 0000 A9050000 		.section	.debug_str,"MS",%progbits,1
 5997      0200CD01 
 5997      00000201 
 5997      FB0E0D00 
 5997      01010101 
 5998              	.LASF113:
 5999 0000 43617053 		.ascii	"CapSense_SsCSDGetColSnsClkDivider\000"
 5999      656E7365 
 5999      5F537343 
 5999      53444765 
 5999      74436F6C 
 6000              	.LASF125:
 6001 0022 73656E73 		.ascii	"sensorElement\000"
 6001      6F72456C 
 6001      656D656E 
 6001      7400
 6002              	.LASF44:
 6003 0030 766F6C5F 		.ascii	"vol_up\000"
 6003      757000
 6004              	.LASF111:
 6005 0037 7363616E 		.ascii	"scanStatus\000"
 6005      53746174 
 6005      757300
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 167


 6006              	.LASF171:
 6007 0042 43617053 		.ascii	"CapSense_SsCSDDisableMode\000"
 6007      656E7365 
 6007      5F537343 
 6007      53444469 
 6007      7361626C 
 6008              	.LASF42:
 6009 005c 70726F78 		.ascii	"proxTouchTh\000"
 6009      546F7563 
 6009      68546800 
 6010              	.LASF122:
 6011 0068 43617053 		.ascii	"CapSense_SetupWidgetExt\000"
 6011      656E7365 
 6011      5F536574 
 6011      75705769 
 6011      64676574 
 6012              	.LASF177:
 6013 0080 43617053 		.ascii	"CapSense_widgetIndex\000"
 6013      656E7365 
 6013      5F776964 
 6013      67657449 
 6013      6E646578 
 6014              	.LASF70:
 6015 0095 736E7254 		.ascii	"snrTestWidgetId\000"
 6015      65737457 
 6015      69646765 
 6015      74496400 
 6016              	.LASF22:
 6017 00a5 43617053 		.ascii	"CapSense_UNDEFINED_E\000"
 6017      656E7365 
 6017      5F554E44 
 6017      4546494E 
 6017      45445F45 
 6018              	.LASF8:
 6019 00ba 756E7369 		.ascii	"unsigned int\000"
 6019      676E6564 
 6019      20696E74 
 6019      00
 6020              	.LASF61:
 6021 00c7 7363616E 		.ascii	"scanCounter\000"
 6021      436F756E 
 6021      74657200 
 6022              	.LASF59:
 6023 00d3 6877436C 		.ascii	"hwClock\000"
 6023      6F636B00 
 6024              	.LASF74:
 6025 00db 7363616E 		.ascii	"scanCsdISC\000"
 6025      43736449 
 6025      534300
 6026              	.LASF173:
 6027 00e6 696E6974 		.ascii	"initStatus\000"
 6027      53746174 
 6027      757300
 6028              	.LASF192:
 6029 00f1 43617053 		.ascii	"CapSense_SsCSDSetShieldElectrodesState\000"
 6029      656E7365 
 6029      5F537343 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 168


 6029      53445365 
 6029      74536869 
 6030              	.LASF104:
 6031 0118 43617053 		.ascii	"CapSense_BIST_CSD_SH_CAP_E\000"
 6031      656E7365 
 6031      5F424953 
 6031      545F4353 
 6031      445F5348 
 6032              	.LASF129:
 6033 0133 696E7465 		.ascii	"interruptState\000"
 6033      72727570 
 6033      74537461 
 6033      746500
 6034              	.LASF23:
 6035 0142 43617053 		.ascii	"CapSense_SENSE_METHOD_CSD_E\000"
 6035      656E7365 
 6035      5F53454E 
 6035      53455F4D 
 6035      4554484F 
 6036              	.LASF154:
 6037 015e 6C667372 		.ascii	"lfsrScale\000"
 6037      5363616C 
 6037      6500
 6038              	.LASF164:
 6039 0168 64725265 		.ascii	"drReg\000"
 6039      6700
 6040              	.LASF158:
 6041 016e 6C667372 		.ascii	"lfsrRange\000"
 6041      52616E67 
 6041      6500
 6042              	.LASF45:
 6043 0178 766F6C5F 		.ascii	"vol_down\000"
 6043      646F776E 
 6043      00
 6044              	.LASF204:
 6045 0181 43617053 		.ascii	"CapSense_IsBusy\000"
 6045      656E7365 
 6045      5F497342 
 6045      75737900 
 6046              	.LASF163:
 6047 0191 6873696F 		.ascii	"hsiomReg\000"
 6047      6D526567 
 6047      00
 6048              	.LASF143:
 6049 019a 43617053 		.ascii	"CapSense_SsSetModClkClockDivider\000"
 6049      656E7365 
 6049      5F537353 
 6049      65744D6F 
 6049      64436C6B 
 6050              	.LASF168:
 6051 01bb 72656750 		.ascii	"regPtr\000"
 6051      747200
 6052              	.LASF49:
 6053 01c2 43617053 		.ascii	"CapSense_RAM_WD_LIST_STRUCT\000"
 6053      656E7365 
 6053      5F52414D 
 6053      5F57445F 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 169


 6053      4C495354 
 6054              	.LASF123:
 6055 01de 73656E73 		.ascii	"sensorId\000"
 6055      6F724964 
 6055      00
 6056              	.LASF175:
 6057 01e7 43617053 		.ascii	"CapSense_dsFlash\000"
 6057      656E7365 
 6057      5F647346 
 6057      6C617368 
 6057      00
 6058              	.LASF116:
 6059 01f8 70747257 		.ascii	"ptrWdgt\000"
 6059      64677400 
 6060              	.LASF10:
 6061 0200 75696E74 		.ascii	"uint32_t\000"
 6061      33325F74 
 6061      00
 6062              	.LASF170:
 6063 0209 43617053 		.ascii	"CapSense_SsSetWidgetSenseClkSrc\000"
 6063      656E7365 
 6063      5F537353 
 6063      65745769 
 6063      64676574 
 6064              	.LASF36:
 6065 0229 69646163 		.ascii	"idacGainIndex\000"
 6065      4761696E 
 6065      496E6465 
 6065      7800
 6066              	.LASF133:
 6067 0237 6C6F6F70 		.ascii	"loopIndex\000"
 6067      496E6465 
 6067      7800
 6068              	.LASF157:
 6069 0241 43617053 		.ascii	"CapSense_SsCalcLfsrScale\000"
 6069      656E7365 
 6069      5F537343 
 6069      616C634C 
 6069      66737253 
 6070              	.LASF14:
 6071 025a 666C6F61 		.ascii	"float\000"
 6071      7400
 6072              	.LASF85:
 6073 0260 73686966 		.ascii	"shift\000"
 6073      7400
 6074              	.LASF185:
 6075 0266 43617053 		.ascii	"CapSense_CSDSetupWidget\000"
 6075      656E7365 
 6075      5F435344 
 6075      53657475 
 6075      70576964 
 6076              	.LASF138:
 6077 027e 736E7349 		.ascii	"snsIoPtr\000"
 6077      6F507472 
 6077      00
 6078              	.LASF69:
 6079 0287 736E734C 		.ascii	"snsList\000"
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 170


 6079      69737400 
 6080              	.LASF7:
 6081 028f 6C6F6E67 		.ascii	"long long unsigned int\000"
 6081      206C6F6E 
 6081      6720756E 
 6081      7369676E 
 6081      65642069 
 6082              	.LASF178:
 6083 02a6 43617053 		.ascii	"CapSense_sensorIndex\000"
 6083      656E7365 
 6083      5F73656E 
 6083      736F7249 
 6083      6E646578 
 6084              	.LASF86:
 6085 02bb 43617053 		.ascii	"CapSense_FLASH_IO_STRUCT\000"
 6085      656E7365 
 6085      5F464C41 
 6085      53485F49 
 6085      4F5F5354 
 6086              	.LASF71:
 6087 02d4 736E7254 		.ascii	"snrTestSensorId\000"
 6087      65737453 
 6087      656E736F 
 6087      72496400 
 6088              	.LASF94:
 6089 02e4 77646774 		.ascii	"wdgtType\000"
 6089      54797065 
 6089      00
 6090              	.LASF153:
 6091 02ed 6C667372 		.ascii	"lfsrSize\000"
 6091      53697A65 
 6091      00
 6092              	.LASF187:
 6093 02f6 43617053 		.ascii	"CapSense_CSDSetupWidgetExt\000"
 6093      656E7365 
 6093      5F435344 
 6093      53657475 
 6093      70576964 
 6094              	.LASF165:
 6095 0311 70635265 		.ascii	"pcReg\000"
 6095      6700
 6096              	.LASF169:
 6097 0317 76616C75 		.ascii	"value\000"
 6097      6500
 6098              	.LASF135:
 6099 031d 6E657750 		.ascii	"newPinHsiomVal\000"
 6099      696E4873 
 6099      696F6D56 
 6099      616C00
 6100              	.LASF67:
 6101 032c 6D6F6443 		.ascii	"modCsdClk\000"
 6101      7364436C 
 6101      6B00
 6102              	.LASF55:
 6103 0336 43617053 		.ascii	"CapSense_RAM_SNS_STRUCT\000"
 6103      656E7365 
 6103      5F52414D 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 171


 6103      5F534E53 
 6103      5F535452 
 6104              	.LASF149:
 6105 034e 43617053 		.ascii	"CapSense_SsCSDCalcPrsSize\000"
 6105      656E7365 
 6105      5F537343 
 6105      53444361 
 6105      6C635072 
 6106              	.LASF47:
 6107 0368 666F726D 		.ascii	"formation\000"
 6107      6174696F 
 6107      6E00
 6108              	.LASF79:
 6109 0372 64725074 		.ascii	"drPtr\000"
 6109      7200
 6110              	.LASF117:
 6111 0378 6D6F6465 		.ascii	"mode\000"
 6111      00
 6112              	.LASF144:
 6113 037d 6D6F6443 		.ascii	"modClk\000"
 6113      6C6B00
 6114              	.LASF134:
 6115 0384 6E657750 		.ascii	"newPinPcVal\000"
 6115      696E5063 
 6115      56616C00 
 6116              	.LASF32:
 6117 0390 68797374 		.ascii	"hysteresis\000"
 6117      65726573 
 6117      697300
 6118              	.LASF162:
 6119 039b 64697363 		.ascii	"dischargeTime\000"
 6119      68617267 
 6119      6554696D 
 6119      6500
 6120              	.LASF96:
 6121 03a9 43617053 		.ascii	"CapSense_FLASH_WD_STRUCT\000"
 6121      656E7365 
 6121      5F464C41 
 6121      53485F57 
 6121      445F5354 
 6122              	.LASF127:
 6123 03c2 656C7464 		.ascii	"eltdNum\000"
 6123      4E756D00 
 6124              	.LASF34:
 6125 03ca 6C6F7742 		.ascii	"lowBslnRst\000"
 6125      736C6E52 
 6125      737400
 6126              	.LASF156:
 6127 03d5 43617053 		.ascii	"CapSense_SsCalcLfsrSize\000"
 6127      656E7365 
 6127      5F537343 
 6127      616C634C 
 6127      66737253 
 6128              	.LASF93:
 6129 03ed 746F7461 		.ascii	"totalNumSns\000"
 6129      6C4E756D 
 6129      536E7300 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 172


 6130              	.LASF30:
 6131 03f9 6E6F6973 		.ascii	"noiseTh\000"
 6131      65546800 
 6132              	.LASF16:
 6133 0401 63686172 		.ascii	"char\000"
 6133      00
 6134              	.LASF190:
 6135 0406 43794578 		.ascii	"CyExitCriticalSection\000"
 6135      69744372 
 6135      69746963 
 6135      616C5365 
 6135      6374696F 
 6136              	.LASF161:
 6137 041c 43617053 		.ascii	"CapSense_DischargeExtCapacitors\000"
 6137      656E7365 
 6137      5F446973 
 6137      63686172 
 6137      67654578 
 6138              	.LASF136:
 6139 043c 746D7050 		.ascii	"tmpPcDrRegValue\000"
 6139      63447252 
 6139      65675661 
 6139      6C756500 
 6140              	.LASF102:
 6141 044c 43617053 		.ascii	"CapSense_BIST_CSD_SNS_CAP_E\000"
 6141      656E7365 
 6141      5F424953 
 6141      545F4353 
 6141      445F534E 
 6142              	.LASF83:
 6143 0468 6873696F 		.ascii	"hsiomShift\000"
 6143      6D536869 
 6143      667400
 6144              	.LASF12:
 6145 0473 75696E74 		.ascii	"uint16\000"
 6145      313600
 6146              	.LASF155:
 6147 047a 636F6E76 		.ascii	"conversionsNum\000"
 6147      65727369 
 6147      6F6E734E 
 6147      756D00
 6148              	.LASF91:
 6149 0489 70747232 		.ascii	"ptr2DebounceArr\000"
 6149      4465626F 
 6149      756E6365 
 6149      41727200 
 6150              	.LASF198:
 6151 0499 43617053 		.ascii	"CapSense_SsCSDDisableShieldElectrodes\000"
 6151      656E7365 
 6151      5F537343 
 6151      53444469 
 6151      7361626C 
 6152              	.LASF28:
 6153 04bf 7265736F 		.ascii	"resolution\000"
 6153      6C757469 
 6153      6F6E00
 6154              	.LASF62:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 173


 6155 04ca 73746174 		.ascii	"status\000"
 6155      757300
 6156              	.LASF110:
 6157 04d1 43617053 		.ascii	"CapSense_CalibrateWidget\000"
 6157      656E7365 
 6157      5F43616C 
 6157      69627261 
 6157      74655769 
 6158              	.LASF101:
 6159 04ea 43617053 		.ascii	"CapSense_SCAN_CSX_E\000"
 6159      656E7365 
 6159      5F534341 
 6159      4E5F4353 
 6159      585F4500 
 6160              	.LASF21:
 6161 04fe 43617053 		.ascii	"CapSense_LOW_BSLN_RST_TYPE\000"
 6161      656E7365 
 6161      5F4C4F57 
 6161      5F42534C 
 6161      4E5F5253 
 6162              	.LASF145:
 6163 0519 43617053 		.ascii	"CapSense_SsSetSnsClockDivider\000"
 6163      656E7365 
 6163      5F537353 
 6163      6574536E 
 6163      73436C6F 
 6164              	.LASF27:
 6165 0537 43617053 		.ascii	"CapSense_SENSE_METHOD_ENUM\000"
 6165      656E7365 
 6165      5F53454E 
 6165      53455F4D 
 6165      4554484F 
 6166              	.LASF166:
 6167 0552 43617053 		.ascii	"CapSense_SetInactiveElectrodeState\000"
 6167      656E7365 
 6167      5F536574 
 6167      496E6163 
 6167      74697665 
 6168              	.LASF54:
 6169 0575 69646163 		.ascii	"idacComp\000"
 6169      436F6D70 
 6169      00
 6170              	.LASF78:
 6171 057e 70635074 		.ascii	"pcPtr\000"
 6171      7200
 6172              	.LASF6:
 6173 0584 6C6F6E67 		.ascii	"long long int\000"
 6173      206C6F6E 
 6173      6720696E 
 6173      7400
 6174              	.LASF95:
 6175 0592 6E756D43 		.ascii	"numCols\000"
 6175      6F6C7300 
 6176              	.LASF199:
 6177 059a 43617053 		.ascii	"CapSense_SsCSDInitialize\000"
 6177      656E7365 
 6177      5F537343 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 174


 6177      5344496E 
 6177      69746961 
 6178              	.LASF33:
 6179 05b3 6F6E4465 		.ascii	"onDebounce\000"
 6179      626F756E 
 6179      636500
 6180              	.LASF112:
 6181 05be 63616C69 		.ascii	"calibrateStatus\000"
 6181      62726174 
 6181      65537461 
 6181      74757300 
 6182              	.LASF68:
 6183 05ce 77646774 		.ascii	"wdgtList\000"
 6183      4C697374 
 6183      00
 6184              	.LASF100:
 6185 05d7 43617053 		.ascii	"CapSense_SCAN_CSD_E\000"
 6185      656E7365 
 6185      5F534341 
 6185      4E5F4353 
 6185      445F4500 
 6186              	.LASF98:
 6187 05eb 43617053 		.ascii	"CapSense_FLASH_STRUCT\000"
 6187      656E7365 
 6187      5F464C41 
 6187      53485F53 
 6187      54525543 
 6188              	.LASF109:
 6189 0601 43617053 		.ascii	"CapSense_Scan\000"
 6189      656E7365 
 6189      5F536361 
 6189      6E00
 6190              	.LASF167:
 6191 060f 43617053 		.ascii	"CapSense_WriteBitsSafe\000"
 6191      656E7365 
 6191      5F577269 
 6191      74654269 
 6191      74735361 
 6192              	.LASF137:
 6193 0626 746D7048 		.ascii	"tmpHsiomRegValue\000"
 6193      73696F6D 
 6193      52656756 
 6193      616C7565 
 6193      00
 6194              	.LASF174:
 6195 0637 43617053 		.ascii	"CapSense_dsRam\000"
 6195      656E7365 
 6195      5F647352 
 6195      616D00
 6196              	.LASF73:
 6197 0646 736E7254 		.ascii	"snrTestRawCount\000"
 6197      65737452 
 6197      6177436F 
 6197      756E7400 
 6198              	.LASF31:
 6199 0656 6E4E6F69 		.ascii	"nNoiseTh\000"
 6199      73655468 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 175


 6199      00
 6200              	.LASF66:
 6201 065f 63736430 		.ascii	"csd0Config\000"
 6201      436F6E66 
 6201      696700
 6202              	.LASF19:
 6203 066a 63796973 		.ascii	"cyisraddress\000"
 6203      72616464 
 6203      72657373 
 6203      00
 6204              	.LASF124:
 6205 0677 43617053 		.ascii	"CapSense_ScanExt\000"
 6205      656E7365 
 6205      5F536361 
 6205      6E457874 
 6205      00
 6206              	.LASF40:
 6207 0688 43617053 		.ascii	"CapSense_RAM_WD_BASE_STRUCT\000"
 6207      656E7365 
 6207      5F52414D 
 6207      5F57445F 
 6207      42415345 
 6208              	.LASF77:
 6209 06a4 6873696F 		.ascii	"hsiomPtr\000"
 6209      6D507472 
 6209      00
 6210              	.LASF13:
 6211 06ad 75696E74 		.ascii	"uint32\000"
 6211      333200
 6212              	.LASF90:
 6213 06b4 70747232 		.ascii	"ptr2FltrHistory\000"
 6213      466C7472 
 6213      48697374 
 6213      6F727900 
 6214              	.LASF107:
 6215 06c4 6761696E 		.ascii	"gainValue\000"
 6215      56616C75 
 6215      6500
 6216              	.LASF183:
 6217 06ce 43617053 		.ascii	"CapSense_curSnsIOPtr\000"
 6217      656E7365 
 6217      5F637572 
 6217      536E7349 
 6217      4F507472 
 6218              	.LASF82:
 6219 06e3 6D61736B 		.ascii	"mask\000"
 6219      00
 6220              	.LASF202:
 6221 06e8 443A5C5F 		.ascii	"D:\\_Project\\_MD\\cypress_button\\EZIIC_button.cyd"
 6221      50726F6A 
 6221      6563745C 
 6221      5F4D445C 
 6221      63797072 
 6222 0717 736E00   		.ascii	"sn\000"
 6223              	.LASF147:
 6224 071a 43617053 		.ascii	"CapSense_SsSetClockDividers\000"
 6224      656E7365 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 176


 6224      5F537353 
 6224      6574436C 
 6224      6F636B44 
 6225              	.LASF105:
 6226 0736 43617053 		.ascii	"CapSense_OPERATION_MODE_ENUM\000"
 6226      656E7365 
 6226      5F4F5045 
 6226      52415449 
 6226      4F4E5F4D 
 6227              	.LASF196:
 6228 0753 43794465 		.ascii	"CyDelayUs\000"
 6228      6C617955 
 6228      7300
 6229              	.LASF121:
 6230 075d 77646774 		.ascii	"wdgtIndex\000"
 6230      496E6465 
 6230      7800
 6231              	.LASF195:
 6232 0767 43617053 		.ascii	"CapSense_SsCSDGetNumberOfConversions\000"
 6232      656E7365 
 6232      5F537343 
 6232      53444765 
 6232      744E756D 
 6233              	.LASF26:
 6234 078c 43617053 		.ascii	"CapSense_SENSE_METHOD_ISX_E\000"
 6234      656E7365 
 6234      5F53454E 
 6234      53455F4D 
 6234      4554484F 
 6235              	.LASF99:
 6236 07a8 6C6F6E67 		.ascii	"long double\000"
 6236      20646F75 
 6236      626C6500 
 6237              	.LASF18:
 6238 07b4 72656733 		.ascii	"reg32\000"
 6238      3200
 6239              	.LASF72:
 6240 07ba 736E7254 		.ascii	"snrTestScanCounter\000"
 6240      65737453 
 6240      63616E43 
 6240      6F756E74 
 6240      657200
 6241              	.LASF57:
 6242 07cd 636F6E66 		.ascii	"configId\000"
 6242      69674964 
 6242      00
 6243              	.LASF89:
 6244 07d6 70747232 		.ascii	"ptr2SnsRam\000"
 6244      536E7352 
 6244      616D00
 6245              	.LASF65:
 6246 07e1 736E7353 		.ascii	"snsStatus\000"
 6246      74617475 
 6246      7300
 6247              	.LASF140:
 6248 07eb 706F7374 		.ascii	"postScanStatus\000"
 6248      5363616E 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 177


 6248      53746174 
 6248      757300
 6249              	.LASF38:
 6250 07fa 736E7343 		.ascii	"snsClkSource\000"
 6250      6C6B536F 
 6250      75726365 
 6250      00
 6251              	.LASF197:
 6252 0807 43617053 		.ascii	"CapSense_SsCSDElectrodeCheck\000"
 6252      656E7365 
 6252      5F537343 
 6252      5344456C 
 6252      65637472 
 6253              	.LASF141:
 6254 0824 43617053 		.ascii	"CapSense_SsIsrInitialize\000"
 6254      656E7365 
 6254      5F537349 
 6254      7372496E 
 6254      69746961 
 6255              	.LASF2:
 6256 083d 73686F72 		.ascii	"short int\000"
 6256      7420696E 
 6256      7400
 6257              	.LASF76:
 6258 0847 43617053 		.ascii	"CapSense_RAM_STRUCT\000"
 6258      656E7365 
 6258      5F52414D 
 6258      5F535452 
 6258      55435400 
 6259              	.LASF132:
 6260 085b 43617053 		.ascii	"CapSense_SsSetAllIOsState\000"
 6260      656E7365 
 6260      5F537353 
 6260      6574416C 
 6260      6C494F73 
 6261              	.LASF4:
 6262 0875 6C6F6E67 		.ascii	"long int\000"
 6262      20696E74 
 6262      00
 6263              	.LASF63:
 6264 087e 77646774 		.ascii	"wdgtEnable\000"
 6264      456E6162 
 6264      6C6500
 6265              	.LASF52:
 6266 0889 64696666 		.ascii	"diff\000"
 6266      00
 6267              	.LASF60:
 6268 088e 74756E65 		.ascii	"tunerCmd\000"
 6268      72436D64 
 6268      00
 6269              	.LASF24:
 6270 0897 43617053 		.ascii	"CapSense_SENSE_METHOD_CSX_E\000"
 6270      656E7365 
 6270      5F53454E 
 6270      53455F4D 
 6270      4554484F 
 6271              	.LASF80:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 178


 6272 08b3 70735074 		.ascii	"psPtr\000"
 6272      7200
 6273              	.LASF118:
 6274 08b9 43617053 		.ascii	"CapSense_SetupWidget\000"
 6274      656E7365 
 6274      5F536574 
 6274      75705769 
 6274      64676574 
 6275              	.LASF194:
 6276 08ce 43617053 		.ascii	"CapSense_CSDCalibrateWidget\000"
 6276      656E7365 
 6276      5F435344 
 6276      43616C69 
 6276      62726174 
 6277              	.LASF106:
 6278 08ea 6761696E 		.ascii	"gainReg\000"
 6278      52656700 
 6279              	.LASF148:
 6280 08f2 43617053 		.ascii	"CapSense_CalibrateAllWidgets\000"
 6280      656E7365 
 6280      5F43616C 
 6280      69627261 
 6280      7465416C 
 6281              	.LASF188:
 6282 090f 43617053 		.ascii	"CapSense_CSDScanExt\000"
 6282      656E7365 
 6282      5F435344 
 6282      5363616E 
 6282      45787400 
 6283              	.LASF64:
 6284 0923 77646774 		.ascii	"wdgtStatus\000"
 6284      53746174 
 6284      757300
 6285              	.LASF201:
 6286 092e 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_Sensing.c\000"
 6286      72617465 
 6286      645F536F 
 6286      75726365 
 6286      5C50536F 
 6287              	.LASF191:
 6288 0958 43617053 		.ascii	"CapSense_CSDConnectSns\000"
 6288      656E7365 
 6288      5F435344 
 6288      436F6E6E 
 6288      65637453 
 6289              	.LASF200:
 6290 096f 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 6290      43313120 
 6290      352E342E 
 6290      31203230 
 6290      31363036 
 6291 09a2 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 6291      20726576 
 6291      6973696F 
 6291      6E203233 
 6291      37373135 
 6292 09d5 67202D4F 		.ascii	"g -Os -ffunction-sections -ffat-lto-objects\000"
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 179


 6292      73202D66 
 6292      66756E63 
 6292      74696F6E 
 6292      2D736563 
 6293              	.LASF181:
 6294 0a01 43617053 		.ascii	"CapSense_currentSenseMethod\000"
 6294      656E7365 
 6294      5F637572 
 6294      72656E74 
 6294      53656E73 
 6295              	.LASF151:
 6296 0a1d 70727353 		.ascii	"prsSize\000"
 6296      697A6500 
 6297              	.LASF39:
 6298 0a25 73697A65 		.ascii	"sizetype\000"
 6298      74797065 
 6298      00
 6299              	.LASF84:
 6300 0a2e 64725368 		.ascii	"drShift\000"
 6300      69667400 
 6301              	.LASF5:
 6302 0a36 6C6F6E67 		.ascii	"long unsigned int\000"
 6302      20756E73 
 6302      69676E65 
 6302      6420696E 
 6302      7400
 6303              	.LASF115:
 6304 0a48 72657456 		.ascii	"retVal\000"
 6304      616C00
 6305              	.LASF142:
 6306 0a4f 61646472 		.ascii	"address\000"
 6306      65737300 
 6307              	.LASF35:
 6308 0a57 69646163 		.ascii	"idacMod\000"
 6308      4D6F6400 
 6309              	.LASF193:
 6310 0a5f 43617053 		.ascii	"CapSense_ISR_StartEx\000"
 6310      656E7365 
 6310      5F495352 
 6310      5F537461 
 6310      72744578 
 6311              	.LASF48:
 6312 0a74 70726F78 		.ascii	"prox\000"
 6312      00
 6313              	.LASF29:
 6314 0a79 66696E67 		.ascii	"fingerTh\000"
 6314      65725468 
 6314      00
 6315              	.LASF51:
 6316 0a82 62736C6E 		.ascii	"bslnExt\000"
 6316      45787400 
 6317              	.LASF108:
 6318 0a8a 43617053 		.ascii	"CapSense_IDAC_GAIN_TABLE_STRUCT\000"
 6318      656E7365 
 6318      5F494441 
 6318      435F4741 
 6318      494E5F54 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 180


 6319              	.LASF41:
 6320 0aaa 43617053 		.ascii	"CapSense_RAM_WD_BUTTON_STRUCT\000"
 6320      656E7365 
 6320      5F52414D 
 6320      5F57445F 
 6320      42555454 
 6321              	.LASF17:
 6322 0ac8 63797374 		.ascii	"cystatus\000"
 6322      61747573 
 6322      00
 6323              	.LASF43:
 6324 0ad1 43617053 		.ascii	"CapSense_RAM_WD_PROXIMITY_STRUCT\000"
 6324      656E7365 
 6324      5F52414D 
 6324      5F57445F 
 6324      50524F58 
 6325              	.LASF1:
 6326 0af2 756E7369 		.ascii	"unsigned char\000"
 6326      676E6564 
 6326      20636861 
 6326      7200
 6327              	.LASF9:
 6328 0b00 5F5F7569 		.ascii	"__uint32_t\000"
 6328      6E743332 
 6328      5F7400
 6329              	.LASF131:
 6330 0b0b 43617053 		.ascii	"CapSense_SetPinState\000"
 6330      656E7365 
 6330      5F536574 
 6330      50696E53 
 6330      74617465 
 6331              	.LASF92:
 6332 0b20 73746174 		.ascii	"staticConfig\000"
 6332      6963436F 
 6332      6E666967 
 6332      00
 6333              	.LASF130:
 6334 0b2d 696F5074 		.ascii	"ioPtr\000"
 6334      7200
 6335              	.LASF75:
 6336 0b33 7363616E 		.ascii	"scanCurrentISC\000"
 6336      43757272 
 6336      656E7449 
 6336      534300
 6337              	.LASF88:
 6338 0b42 70747232 		.ascii	"ptr2WdgtRam\000"
 6338      57646774 
 6338      52616D00 
 6339              	.LASF20:
 6340 0b4e 43617053 		.ascii	"CapSense_THRESHOLD_TYPE\000"
 6340      656E7365 
 6340      5F544852 
 6340      4553484F 
 6340      4C445F54 
 6341              	.LASF186:
 6342 0b66 43617053 		.ascii	"CapSense_CSDScan\000"
 6342      656E7365 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 181


 6342      5F435344 
 6342      5363616E 
 6342      00
 6343              	.LASF25:
 6344 0b77 43617053 		.ascii	"CapSense_SENSE_METHOD_BIST_E\000"
 6344      656E7365 
 6344      5F53454E 
 6344      53455F4D 
 6344      4554484F 
 6345              	.LASF126:
 6346 0b94 73746174 		.ascii	"state\000"
 6346      6500
 6347              	.LASF128:
 6348 0b9a 656C7464 		.ascii	"eltdIndex\000"
 6348      496E6465 
 6348      7800
 6349              	.LASF119:
 6350 0ba4 43617053 		.ascii	"CapSense_ScanAllWidgets\000"
 6350      656E7365 
 6350      5F536361 
 6350      6E416C6C 
 6350      57696467 
 6351              	.LASF81:
 6352 0bbc 6873696F 		.ascii	"hsiomMask\000"
 6352      6D4D6173 
 6352      6B00
 6353              	.LASF37:
 6354 0bc6 736E7343 		.ascii	"snsClk\000"
 6354      6C6B00
 6355              	.LASF203:
 6356 0bcd 43617053 		.ascii	"CapSense_SsSwitchSensingMode\000"
 6356      656E7365 
 6356      5F537353 
 6356      77697463 
 6356      6853656E 
 6357              	.LASF189:
 6358 0bea 4379456E 		.ascii	"CyEnterCriticalSection\000"
 6358      74657243 
 6358      72697469 
 6358      63616C53 
 6358      65637469 
 6359              	.LASF180:
 6360 0c01 43617053 		.ascii	"CapSense_curRamSnsPtr\000"
 6360      656E7365 
 6360      5F637572 
 6360      52616D53 
 6360      6E735074 
 6361              	.LASF0:
 6362 0c17 7369676E 		.ascii	"signed char\000"
 6362      65642063 
 6362      68617200 
 6363              	.LASF182:
 6364 0c23 43617053 		.ascii	"CapSense_scanFreqIndex\000"
 6364      656E7365 
 6364      5F736361 
 6364      6E467265 
 6364      71496E64 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 182


 6365              	.LASF50:
 6366 0c3a 62736C6E 		.ascii	"bsln\000"
 6366      00
 6367              	.LASF3:
 6368 0c3f 73686F72 		.ascii	"short unsigned int\000"
 6368      7420756E 
 6368      7369676E 
 6368      65642069 
 6368      6E7400
 6369              	.LASF46:
 6370 0c52 706C6179 		.ascii	"play_pause\000"
 6370      5F706175 
 6370      736500
 6371              	.LASF176:
 6372 0c5d 43617053 		.ascii	"CapSense_ioList\000"
 6372      656E7365 
 6372      5F696F4C 
 6372      69737400 
 6373              	.LASF139:
 6374 0c6d 43617053 		.ascii	"CapSense_SsPostAllWidgetsScan\000"
 6374      656E7365 
 6374      5F537350 
 6374      6F737441 
 6374      6C6C5769 
 6375              	.LASF87:
 6376 0c8b 70747232 		.ascii	"ptr2SnsFlash\000"
 6376      536E7346 
 6376      6C617368 
 6376      00
 6377              	.LASF159:
 6378 0c98 6C667372 		.ascii	"lfsrDither\000"
 6378      44697468 
 6378      657200
 6379              	.LASF146:
 6380 0ca3 6E657752 		.ascii	"newRegValue\000"
 6380      65675661 
 6380      6C756500 
 6381              	.LASF11:
 6382 0caf 75696E74 		.ascii	"uint8\000"
 6382      3800
 6383              	.LASF15:
 6384 0cb5 646F7562 		.ascii	"double\000"
 6384      6C6500
 6385              	.LASF53:
 6386 0cbc 6E656742 		.ascii	"negBslnRstCnt\000"
 6386      736C6E52 
 6386      7374436E 
 6386      7400
 6387              	.LASF172:
 6388 0cca 43617053 		.ascii	"CapSense_SsInitialize\000"
 6388      656E7365 
 6388      5F537349 
 6388      6E697469 
 6388      616C697A 
 6389              	.LASF150:
 6390 0ce0 736E7343 		.ascii	"snsClkDivider\000"
 6390      6C6B4469 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\ccIZUJPr.s 			page 183


 6390      76696465 
 6390      7200
 6391              	.LASF152:
 6392 0cee 6D6F6443 		.ascii	"modClkDivider\000"
 6392      6C6B4469 
 6392      76696465 
 6392      7200
 6393              	.LASF58:
 6394 0cfc 64657669 		.ascii	"deviceId\000"
 6394      63654964 
 6394      00
 6395              	.LASF120:
 6396 0d05 77696467 		.ascii	"widgetStatus\000"
 6396      65745374 
 6396      61747573 
 6396      00
 6397              	.LASF103:
 6398 0d12 43617053 		.ascii	"CapSense_BIST_CSX_SNS_CAP_E\000"
 6398      656E7365 
 6398      5F424953 
 6398      545F4353 
 6398      585F534E 
 6399              	.LASF114:
 6400 0d2e 77696467 		.ascii	"widgetId\000"
 6400      65744964 
 6400      00
 6401              	.LASF179:
 6402 0d37 43617053 		.ascii	"CapSense_requestScanAllWidget\000"
 6402      656E7365 
 6402      5F726571 
 6402      75657374 
 6402      5363616E 
 6403              	.LASF160:
 6404 0d55 43617053 		.ascii	"CapSense_SsInitializeSourceSenseClk\000"
 6404      656E7365 
 6404      5F537349 
 6404      6E697469 
 6404      616C697A 
 6405              	.LASF184:
 6406 0d79 43617053 		.ascii	"CapSense_idacGainTable\000"
 6406      656E7365 
 6406      5F696461 
 6406      63476169 
 6406      6E546162 
 6407              	.LASF56:
 6408 0d90 43617053 		.ascii	"CapSense_RAM_SNS_LIST_STRUCT\000"
 6408      656E7365 
 6408      5F52414D 
 6408      5F534E53 
 6408      5F4C4953 
 6409              	.LASF97:
 6410 0dad 77646774 		.ascii	"wdgtArray\000"
 6410      41727261 
 6410      7900
 6411              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran

ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_Processing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_DpInitialize,"ax",%progbits
  20              		.align	1
  21              		.global	CapSense_DpInitialize
  22              		.code	16
  23              		.thumb_func
  24              		.type	CapSense_DpInitialize, %function
  25              	CapSense_DpInitialize:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC4\\CapSense_Processing.c"
   1:Generated_Source\PSoC4/CapSense_Processing.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CapSense_Processing.c **** * \file CapSense_Processing.c
   3:Generated_Source\PSoC4/CapSense_Processing.c **** * \version 7.0
   4:Generated_Source\PSoC4/CapSense_Processing.c **** *
   5:Generated_Source\PSoC4/CapSense_Processing.c **** * \brief
   6:Generated_Source\PSoC4/CapSense_Processing.c **** *   This file provides the source code for the Data Processing module APIs
   7:Generated_Source\PSoC4/CapSense_Processing.c **** *   of the Component. The Data Processing module is responsible for the
   8:Generated_Source\PSoC4/CapSense_Processing.c **** *   low level raw counts processing provided by the sensing module, maintaining
   9:Generated_Source\PSoC4/CapSense_Processing.c **** *   baseline and difference values and performing high-level widget processing
  10:Generated_Source\PSoC4/CapSense_Processing.c **** *   like updating button status or calculating slider position.
  11:Generated_Source\PSoC4/CapSense_Processing.c **** *
  12:Generated_Source\PSoC4/CapSense_Processing.c **** * \see CapSense v7.0 Datasheet
  13:Generated_Source\PSoC4/CapSense_Processing.c **** *
  14:Generated_Source\PSoC4/CapSense_Processing.c **** *//*****************************************************************************
  15:Generated_Source\PSoC4/CapSense_Processing.c **** * Copyright (2016-2019), Cypress Semiconductor Corporation.
  16:Generated_Source\PSoC4/CapSense_Processing.c **** ********************************************************************************
  17:Generated_Source\PSoC4/CapSense_Processing.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  18:Generated_Source\PSoC4/CapSense_Processing.c **** * protected by and subject to worldwide patent protection (United States and
  19:Generated_Source\PSoC4/CapSense_Processing.c **** * foreign), United States copyright laws and international treaty provisions.
  20:Generated_Source\PSoC4/CapSense_Processing.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  21:Generated_Source\PSoC4/CapSense_Processing.c **** * license to copy, use, modify, create derivative works of, and compile the
  22:Generated_Source\PSoC4/CapSense_Processing.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  23:Generated_Source\PSoC4/CapSense_Processing.c **** * custom software in support of licensee product to be used only in conjunction
  24:Generated_Source\PSoC4/CapSense_Processing.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  25:Generated_Source\PSoC4/CapSense_Processing.c **** * Any reproduction, modification, translation, compilation, or representation of
  26:Generated_Source\PSoC4/CapSense_Processing.c **** * this software except as specified above is prohibited without the express
  27:Generated_Source\PSoC4/CapSense_Processing.c **** * written permission of Cypress.
  28:Generated_Source\PSoC4/CapSense_Processing.c **** *
  29:Generated_Source\PSoC4/CapSense_Processing.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  30:Generated_Source\PSoC4/CapSense_Processing.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 2


  31:Generated_Source\PSoC4/CapSense_Processing.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  32:Generated_Source\PSoC4/CapSense_Processing.c **** * Cypress reserves the right to make changes without further notice to the
  33:Generated_Source\PSoC4/CapSense_Processing.c **** * materials described herein. Cypress does not assume any liability arising out
  34:Generated_Source\PSoC4/CapSense_Processing.c **** * of the application or use of any product or circuit described herein. Cypress
  35:Generated_Source\PSoC4/CapSense_Processing.c **** * does not authorize its products for use as critical components in life-support
  36:Generated_Source\PSoC4/CapSense_Processing.c **** * systems where a malfunction or failure may reasonably be expected to result in
  37:Generated_Source\PSoC4/CapSense_Processing.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  38:Generated_Source\PSoC4/CapSense_Processing.c **** * support systems application implies that the manufacturer assumes all risk of
  39:Generated_Source\PSoC4/CapSense_Processing.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  40:Generated_Source\PSoC4/CapSense_Processing.c **** * limited by and subject to the applicable Cypress software license agreement.
  41:Generated_Source\PSoC4/CapSense_Processing.c **** *******************************************************************************/
  42:Generated_Source\PSoC4/CapSense_Processing.c **** 
  43:Generated_Source\PSoC4/CapSense_Processing.c **** #include "CyLib.h"
  44:Generated_Source\PSoC4/CapSense_Processing.c **** #include "cytypes.h"
  45:Generated_Source\PSoC4/CapSense_Processing.c **** #include "CapSense_Configuration.h"
  46:Generated_Source\PSoC4/CapSense_Processing.c **** #include "CapSense_Processing.h"
  47:Generated_Source\PSoC4/CapSense_Processing.c **** #include "CapSense_Filter.h"
  48:Generated_Source\PSoC4/CapSense_Processing.c **** 
  49:Generated_Source\PSoC4/CapSense_Processing.c **** #if (0u != CapSense_CENTROID_EN)
  50:Generated_Source\PSoC4/CapSense_Processing.c ****     #include "CapSense_Centroid_LL.h"
  51:Generated_Source\PSoC4/CapSense_Processing.c **** #endif /* (0 != CapSense_CENTROID_EN) */
  52:Generated_Source\PSoC4/CapSense_Processing.c **** 
  53:Generated_Source\PSoC4/CapSense_Processing.c **** #if (0 != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
  54:Generated_Source\PSoC4/CapSense_Processing.c ****     #include "CapSense_SmartSense_LL.h"
  55:Generated_Source\PSoC4/CapSense_Processing.c **** #endif /* (0 != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
  56:Generated_Source\PSoC4/CapSense_Processing.c **** 
  57:Generated_Source\PSoC4/CapSense_Processing.c **** #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
  58:Generated_Source\PSoC4/CapSense_Processing.c ****     #include "CapSense_SelfTest.h"
  59:Generated_Source\PSoC4/CapSense_Processing.c **** #endif
  60:Generated_Source\PSoC4/CapSense_Processing.c **** 
  61:Generated_Source\PSoC4/CapSense_Processing.c **** #if (CapSense_ENABLE == CapSense_CENTROID_5X5_CSD_EN)
  62:Generated_Source\PSoC4/CapSense_Processing.c ****     #include "CapSense_AdvancedCentroid_LL.h"
  63:Generated_Source\PSoC4/CapSense_Processing.c **** #endif
  64:Generated_Source\PSoC4/CapSense_Processing.c **** 
  65:Generated_Source\PSoC4/CapSense_Processing.c **** #if (CapSense_ENABLE == CapSense_POS_ADAPTIVE_IIR_FILTER_EN)
  66:Generated_Source\PSoC4/CapSense_Processing.c ****     #include "CapSense_AdaptiveFilter_LL.h"
  67:Generated_Source\PSoC4/CapSense_Processing.c **** #endif
  68:Generated_Source\PSoC4/CapSense_Processing.c **** 
  69:Generated_Source\PSoC4/CapSense_Processing.c **** #if(CapSense_ENABLE == CapSense_BALLISTIC_MULTIPLIER_EN)
  70:Generated_Source\PSoC4/CapSense_Processing.c ****     #include "CapSense_Gesture.h"
  71:Generated_Source\PSoC4/CapSense_Processing.c **** #endif
  72:Generated_Source\PSoC4/CapSense_Processing.c **** 
  73:Generated_Source\PSoC4/CapSense_Processing.c **** /**************************************************************************************************
  74:Generated_Source\PSoC4/CapSense_Processing.c **** * Local definition
  75:Generated_Source\PSoC4/CapSense_Processing.c **** ***************************************************************************************************
  76:Generated_Source\PSoC4/CapSense_Processing.c **** 
  77:Generated_Source\PSoC4/CapSense_Processing.c **** /* UINT32 constant with all odd bits set. It is used by the processing function of the Proximity wi
  78:Generated_Source\PSoC4/CapSense_Processing.c **** *  determine type of the status bit: odd bits report proximity status; even bits report touch statu
  79:Generated_Source\PSoC4/CapSense_Processing.c **** */
  80:Generated_Source\PSoC4/CapSense_Processing.c **** #define UINT32_ODD_BITS_CONST       (0x55555555u)
  81:Generated_Source\PSoC4/CapSense_Processing.c **** 
  82:Generated_Source\PSoC4/CapSense_Processing.c **** /* Default value for the Off Debounce counter when the Off Debounce is disabled */
  83:Generated_Source\PSoC4/CapSense_Processing.c **** #define DEFAULT_OFF_DEBOUNCE_VALUE  (1u)
  84:Generated_Source\PSoC4/CapSense_Processing.c **** #define PERCENTAGE_100              (100u)
  85:Generated_Source\PSoC4/CapSense_Processing.c **** #define TEMP_BUFFER_MSB_SHIFT       (16)
  86:Generated_Source\PSoC4/CapSense_Processing.c **** 
  87:Generated_Source\PSoC4/CapSense_Processing.c **** /**************************************************************************************************
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 3


  88:Generated_Source\PSoC4/CapSense_Processing.c **** * Local variables
  89:Generated_Source\PSoC4/CapSense_Processing.c **** ***************************************************************************************************
  90:Generated_Source\PSoC4/CapSense_Processing.c **** #if (0u != CapSense_CSX_MULTIPHASE_TX_EN)
  91:Generated_Source\PSoC4/CapSense_Processing.c ****     static uint16 deconvRowData[CapSense_CSX_MAX_TX_PHASE_LENGTH];
  92:Generated_Source\PSoC4/CapSense_Processing.c **** #endif
  93:Generated_Source\PSoC4/CapSense_Processing.c **** 
  94:Generated_Source\PSoC4/CapSense_Processing.c **** 
  95:Generated_Source\PSoC4/CapSense_Processing.c **** /**************************************************************************************************
  96:Generated_Source\PSoC4/CapSense_Processing.c **** * Static Function Prototypes
  97:Generated_Source\PSoC4/CapSense_Processing.c **** ***************************************************************************************************
  98:Generated_Source\PSoC4/CapSense_Processing.c **** /**
  99:Generated_Source\PSoC4/CapSense_Processing.c **** * \cond SECTION_C_INTERNAL
 100:Generated_Source\PSoC4/CapSense_Processing.c **** * \addtogroup group_c_internal
 101:Generated_Source\PSoC4/CapSense_Processing.c **** * \{
 102:Generated_Source\PSoC4/CapSense_Processing.c **** */
 103:Generated_Source\PSoC4/CapSense_Processing.c **** #if (0u != CapSense_TOTAL_LINEAR_SLIDERS)
 104:Generated_Source\PSoC4/CapSense_Processing.c ****     static CY_INLINE void DpUpdateLinSlider(
 105:Generated_Source\PSoC4/CapSense_Processing.c ****                         const uint16 newPos[], uint32 numTouches,
 106:Generated_Source\PSoC4/CapSense_Processing.c ****                         CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt,
 107:Generated_Source\PSoC4/CapSense_Processing.c ****                         CapSense_RAM_WD_SLIDER_STRUCT *ptrRamWdgt);
 108:Generated_Source\PSoC4/CapSense_Processing.c **** #endif /* #if (0u != CapSense_TOTAL_LINEAR_SLIDERS) */
 109:Generated_Source\PSoC4/CapSense_Processing.c **** 
 110:Generated_Source\PSoC4/CapSense_Processing.c **** #if (0u != CapSense_TOTAL_RADIAL_SLIDERS)
 111:Generated_Source\PSoC4/CapSense_Processing.c ****     static CY_INLINE void DpUpdateRadSlider(
 112:Generated_Source\PSoC4/CapSense_Processing.c ****                         const uint16 newPos[], uint32 numTouches,
 113:Generated_Source\PSoC4/CapSense_Processing.c ****                         CapSense_FLASH_WD_STRUCT const * ptrFlashWdgt,
 114:Generated_Source\PSoC4/CapSense_Processing.c ****                         CapSense_RAM_WD_SLIDER_STRUCT *ptrRamWdgt);
 115:Generated_Source\PSoC4/CapSense_Processing.c **** #endif /* #if (0u != CapSense_TOTAL_RADIAL_SLIDERS) */
 116:Generated_Source\PSoC4/CapSense_Processing.c **** 
 117:Generated_Source\PSoC4/CapSense_Processing.c **** #if (0u != CapSense_CSD_TOUCHPAD_WIDGET_EN)
 118:Generated_Source\PSoC4/CapSense_Processing.c ****     static CY_INLINE void CapSense_DpInitCsdTouchpad(CapSense_FLASH_WD_STRUCT const * ptrFlashWdgt)
 119:Generated_Source\PSoC4/CapSense_Processing.c **** #endif /* #if (0u != CapSense_CSD_TOUCHPAD_WIDGET_EN) */
 120:Generated_Source\PSoC4/CapSense_Processing.c **** 
 121:Generated_Source\PSoC4/CapSense_Processing.c **** #if (0u != CapSense_CSX_TOUCHPAD_WIDGET_EN)
 122:Generated_Source\PSoC4/CapSense_Processing.c ****     static CY_INLINE void CapSense_DpInitCsxTouchpad(CapSense_FLASH_WD_STRUCT const * ptrFlashWdgt)
 123:Generated_Source\PSoC4/CapSense_Processing.c **** #endif /* #if (0u != CapSense_CSX_TOUCHPAD_WIDGET_EN) */
 124:Generated_Source\PSoC4/CapSense_Processing.c **** 
 125:Generated_Source\PSoC4/CapSense_Processing.c **** #if (0u != CapSense_SLIDER_WIDGET_EN)
 126:Generated_Source\PSoC4/CapSense_Processing.c ****     static CY_INLINE void CapSense_DpInitSlider(CapSense_FLASH_WD_STRUCT const * ptrFlashWdgt);
 127:Generated_Source\PSoC4/CapSense_Processing.c **** #endif /* #if (0u != CapSense_SLIDER_WIDGET_EN) */
 128:Generated_Source\PSoC4/CapSense_Processing.c **** 
 129:Generated_Source\PSoC4/CapSense_Processing.c **** #if (0u != CapSense_CSD_MATRIX_WIDGET_EN)
 130:Generated_Source\PSoC4/CapSense_Processing.c ****     static CY_INLINE void CapSense_DpInitCsdMatrix(CapSense_FLASH_WD_STRUCT const * ptrFlashWdgt);
 131:Generated_Source\PSoC4/CapSense_Processing.c **** #endif /* #if (0u != CapSense_CSD_MATRIX_WIDGET_EN) */
 132:Generated_Source\PSoC4/CapSense_Processing.c **** 
 133:Generated_Source\PSoC4/CapSense_Processing.c **** /** \}
 134:Generated_Source\PSoC4/CapSense_Processing.c **** * \endcond */
 135:Generated_Source\PSoC4/CapSense_Processing.c **** 
 136:Generated_Source\PSoC4/CapSense_Processing.c **** #if (0u != CapSense_CSD_TOUCHPAD_WIDGET_EN)
 137:Generated_Source\PSoC4/CapSense_Processing.c **** /*******************************************************************************
 138:Generated_Source\PSoC4/CapSense_Processing.c **** * Function Name: CapSense_DpInitCsdTouchpad
 139:Generated_Source\PSoC4/CapSense_Processing.c **** ****************************************************************************//**
 140:Generated_Source\PSoC4/CapSense_Processing.c **** *
 141:Generated_Source\PSoC4/CapSense_Processing.c **** * \brief
 142:Generated_Source\PSoC4/CapSense_Processing.c **** *  Performs initialization of the CSD touchpad widget.
 143:Generated_Source\PSoC4/CapSense_Processing.c **** *   - Resets the position data to NONE
 144:Generated_Source\PSoC4/CapSense_Processing.c **** *   - Initializes the position filter history if enabled.
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 4


 145:Generated_Source\PSoC4/CapSense_Processing.c **** *
 146:Generated_Source\PSoC4/CapSense_Processing.c **** * \details
 147:Generated_Source\PSoC4/CapSense_Processing.c **** *  The position data is always reset to the CapSense_TOUCHPAD_POS_NONE value.
 148:Generated_Source\PSoC4/CapSense_Processing.c **** *  The same happens to the position filter history data if enabled.
 149:Generated_Source\PSoC4/CapSense_Processing.c **** *
 150:Generated_Source\PSoC4/CapSense_Processing.c **** *******************************************************************************/
 151:Generated_Source\PSoC4/CapSense_Processing.c **** static CY_INLINE void CapSense_DpInitCsdTouchpad(CapSense_FLASH_WD_STRUCT const * ptrFlashWdgt)
 152:Generated_Source\PSoC4/CapSense_Processing.c **** {
 153:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (CapSense_ENABLE == CapSense_CENTROID_5X5_CSD_EN)
 154:Generated_Source\PSoC4/CapSense_Processing.c ****         uint32 touchIndex;
 155:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif
 156:Generated_Source\PSoC4/CapSense_Processing.c **** 
 157:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_RAM_WD_CSD_TOUCHPAD_STRUCT *ptrWdTouchpad;
 158:Generated_Source\PSoC4/CapSense_Processing.c **** 
 159:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_POSITION_FILTER_EN)
 160:Generated_Source\PSoC4/CapSense_Processing.c ****         CapSense_TOUCHPAD_POS_HISTORY_STRUCT *ptrHistory;
 161:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif  /* #if (0u != CapSense_POSITION_FILTER_EN) */
 162:Generated_Source\PSoC4/CapSense_Processing.c **** 
 163:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN)
 164:Generated_Source\PSoC4/CapSense_Processing.c ****         ADAPTIVE_FILTER_CONTEXT_STRUCT adpContext;
 165:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN) */
 166:Generated_Source\PSoC4/CapSense_Processing.c **** 
 167:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrWdTouchpad = ptrFlashWdgt->ptr2WdgtRam;
 168:Generated_Source\PSoC4/CapSense_Processing.c **** 
 169:Generated_Source\PSoC4/CapSense_Processing.c ****     /* Reset position data */
 170:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (CapSense_ENABLE == CapSense_CENTROID_5X5_CSD_EN)
 171:Generated_Source\PSoC4/CapSense_Processing.c ****         #if (CapSense_ENABLE == CapSense_CENTROID_3X3_CSD_EN)
 172:Generated_Source\PSoC4/CapSense_Processing.c ****             if (0u != (ptrFlashWdgt->staticConfig & CapSense_CENTROID_5X5_MASK))
 173:Generated_Source\PSoC4/CapSense_Processing.c ****             {
 174:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif
 175:Generated_Source\PSoC4/CapSense_Processing.c **** 
 176:Generated_Source\PSoC4/CapSense_Processing.c ****         ptrWdTouchpad->position.touchNum = 0u;
 177:Generated_Source\PSoC4/CapSense_Processing.c **** 
 178:Generated_Source\PSoC4/CapSense_Processing.c ****         #if (0u != CapSense_POSITION_FILTER_EN)
 179:Generated_Source\PSoC4/CapSense_Processing.c ****             ptrHistory = ptrFlashWdgt->ptr2PosHistory;
 180:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* (0u != CapSense_POSITION_FILTER_EN) */
 181:Generated_Source\PSoC4/CapSense_Processing.c **** 
 182:Generated_Source\PSoC4/CapSense_Processing.c ****         for (touchIndex = 0u; touchIndex < ADVANCED_CENTROID_MAX_TOUCHES; touchIndex++)
 183:Generated_Source\PSoC4/CapSense_Processing.c ****         {
 184:Generated_Source\PSoC4/CapSense_Processing.c ****             ptrWdTouchpad->position.pos[touchIndex].x = ADVANCED_CENTROID_POSITION_NONE;
 185:Generated_Source\PSoC4/CapSense_Processing.c ****             ptrWdTouchpad->position.pos[touchIndex].y = ADVANCED_CENTROID_POSITION_NONE;
 186:Generated_Source\PSoC4/CapSense_Processing.c ****             ptrWdTouchpad->position.pos[touchIndex].zX = ADVANCED_CENTROID_POSITION_NONE;
 187:Generated_Source\PSoC4/CapSense_Processing.c ****             ptrWdTouchpad->position.pos[touchIndex].zY = ADVANCED_CENTROID_POSITION_NONE;
 188:Generated_Source\PSoC4/CapSense_Processing.c **** 
 189:Generated_Source\PSoC4/CapSense_Processing.c ****             /* Clear position filter history data if available */
 190:Generated_Source\PSoC4/CapSense_Processing.c ****             #if (0u != CapSense_POSITION_FILTER_EN)
 191:Generated_Source\PSoC4/CapSense_Processing.c ****                 if (NULL != ptrHistory)
 192:Generated_Source\PSoC4/CapSense_Processing.c ****                 {
 193:Generated_Source\PSoC4/CapSense_Processing.c ****                     CapSense_InitPosFiltersDd(&ptrHistory[touchIndex], CapSense_TOUCHPAD_POS_NONE, 
 194:Generated_Source\PSoC4/CapSense_Processing.c ****                     #if (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN)
 195:Generated_Source\PSoC4/CapSense_Processing.c ****                         AdaptiveFilter_Initialize(&ptrWdTouchpad->aiirConfig, &adpContext);
 196:Generated_Source\PSoC4/CapSense_Processing.c ****                         ptrHistory[touchIndex].xPos.posAIIRCoeff = adpContext.coefficient;
 197:Generated_Source\PSoC4/CapSense_Processing.c ****                         ptrHistory[touchIndex].yPos.posAIIRCoeff = adpContext.coefficient;
 198:Generated_Source\PSoC4/CapSense_Processing.c ****                     #endif /* (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN) */
 199:Generated_Source\PSoC4/CapSense_Processing.c ****                 }
 200:Generated_Source\PSoC4/CapSense_Processing.c ****             #endif /* (0u != CapSense_POSITION_FILTER_EN) */
 201:Generated_Source\PSoC4/CapSense_Processing.c ****         }
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 5


 202:Generated_Source\PSoC4/CapSense_Processing.c **** 
 203:Generated_Source\PSoC4/CapSense_Processing.c ****         #if (CapSense_ENABLE == CapSense_CENTROID_3X3_CSD_EN)
 204:Generated_Source\PSoC4/CapSense_Processing.c ****             }
 205:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif
 206:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif
 207:Generated_Source\PSoC4/CapSense_Processing.c **** 
 208:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (CapSense_ENABLE == CapSense_CENTROID_3X3_CSD_EN)
 209:Generated_Source\PSoC4/CapSense_Processing.c ****         if (0u != (ptrFlashWdgt->staticConfig & CapSense_CENTROID_3X3_MASK))
 210:Generated_Source\PSoC4/CapSense_Processing.c ****         {
 211:Generated_Source\PSoC4/CapSense_Processing.c ****             ptrWdTouchpad->posX = CapSense_TOUCHPAD_POS_NONE;
 212:Generated_Source\PSoC4/CapSense_Processing.c ****             ptrWdTouchpad->posY = CapSense_TOUCHPAD_POS_NONE;
 213:Generated_Source\PSoC4/CapSense_Processing.c **** 
 214:Generated_Source\PSoC4/CapSense_Processing.c ****             /* Clear position filter history data if available */
 215:Generated_Source\PSoC4/CapSense_Processing.c ****             #if (0u != CapSense_POSITION_FILTER_EN)
 216:Generated_Source\PSoC4/CapSense_Processing.c ****                 ptrHistory = ptrFlashWdgt->ptr2PosHistory;
 217:Generated_Source\PSoC4/CapSense_Processing.c ****                 CapSense_InitPosFiltersDd(ptrHistory, CapSense_TOUCHPAD_POS_NONE, CapSense_TOUCHPAD
 218:Generated_Source\PSoC4/CapSense_Processing.c **** 
 219:Generated_Source\PSoC4/CapSense_Processing.c ****                 #if (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN)
 220:Generated_Source\PSoC4/CapSense_Processing.c ****                     if (NULL != ptrHistory)
 221:Generated_Source\PSoC4/CapSense_Processing.c ****                     {
 222:Generated_Source\PSoC4/CapSense_Processing.c ****                         AdaptiveFilter_Initialize(&ptrWdTouchpad->aiirConfig, &adpContext);
 223:Generated_Source\PSoC4/CapSense_Processing.c ****                         ptrHistory->xPos.posAIIRCoeff = adpContext.coefficient;
 224:Generated_Source\PSoC4/CapSense_Processing.c ****                         ptrHistory->yPos.posAIIRCoeff = adpContext.coefficient;
 225:Generated_Source\PSoC4/CapSense_Processing.c ****                     }
 226:Generated_Source\PSoC4/CapSense_Processing.c ****                 #endif /* (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN) */
 227:Generated_Source\PSoC4/CapSense_Processing.c ****             #endif /* (0u != CapSense_POSITION_FILTER_EN) */
 228:Generated_Source\PSoC4/CapSense_Processing.c ****         }
 229:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif
 230:Generated_Source\PSoC4/CapSense_Processing.c **** }
 231:Generated_Source\PSoC4/CapSense_Processing.c **** #endif /* #if (0u != CapSense_CSD_TOUCHPAD_WIDGET_EN) */
 232:Generated_Source\PSoC4/CapSense_Processing.c **** 
 233:Generated_Source\PSoC4/CapSense_Processing.c **** #if (0u != CapSense_CSX_TOUCHPAD_WIDGET_EN)
 234:Generated_Source\PSoC4/CapSense_Processing.c **** /*******************************************************************************
 235:Generated_Source\PSoC4/CapSense_Processing.c **** * Function Name: CapSense_DpInitCsxTouchpad
 236:Generated_Source\PSoC4/CapSense_Processing.c **** ****************************************************************************//**
 237:Generated_Source\PSoC4/CapSense_Processing.c **** *
 238:Generated_Source\PSoC4/CapSense_Processing.c **** * \brief
 239:Generated_Source\PSoC4/CapSense_Processing.c **** *  Performs initialization of the CSX touchpad widget i.e. Resets the position data to NONE.
 240:Generated_Source\PSoC4/CapSense_Processing.c **** *
 241:Generated_Source\PSoC4/CapSense_Processing.c **** * \details
 242:Generated_Source\PSoC4/CapSense_Processing.c **** *  The position data is always reset to the CapSense_TOUCHPAD_POS_NONE value.
 243:Generated_Source\PSoC4/CapSense_Processing.c **** *
 244:Generated_Source\PSoC4/CapSense_Processing.c **** *******************************************************************************/
 245:Generated_Source\PSoC4/CapSense_Processing.c **** static CY_INLINE void CapSense_DpInitCsxTouchpad(CapSense_FLASH_WD_STRUCT const * ptrFlashWdgt)
 246:Generated_Source\PSoC4/CapSense_Processing.c **** {
 247:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_RAM_WD_CSX_TOUCHPAD_STRUCT *ptrWdTouchpad;
 248:Generated_Source\PSoC4/CapSense_Processing.c **** 
 249:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_POSITION_FILTER_EN)
 250:Generated_Source\PSoC4/CapSense_Processing.c ****         uint32 touchIndex;
 251:Generated_Source\PSoC4/CapSense_Processing.c ****         CapSense_TOUCHPAD_POS_HISTORY_STRUCT *ptrHistory;
 252:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif  /* #if (0u != CapSense_POSITION_FILTER_EN) */
 253:Generated_Source\PSoC4/CapSense_Processing.c **** 
 254:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN)
 255:Generated_Source\PSoC4/CapSense_Processing.c ****         ADAPTIVE_FILTER_CONTEXT_STRUCT adpContext;
 256:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN) */
 257:Generated_Source\PSoC4/CapSense_Processing.c **** 
 258:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrWdTouchpad = ptrFlashWdgt->ptr2WdgtRam;
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 6


 259:Generated_Source\PSoC4/CapSense_Processing.c **** 
 260:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_POSITION_FILTER_EN)
 261:Generated_Source\PSoC4/CapSense_Processing.c ****         ptrHistory = ptrFlashWdgt->ptr2PosHistory;
 262:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* (0u != CapSense_POSITION_FILTER_EN) */
 263:Generated_Source\PSoC4/CapSense_Processing.c **** 
 264:Generated_Source\PSoC4/CapSense_Processing.c ****     /* Reset position data for finger */
 265:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrWdTouchpad->touch[0u].x = CapSense_TOUCHPAD_POS_NONE;
 266:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrWdTouchpad->touch[0u].y = CapSense_TOUCHPAD_POS_NONE;
 267:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrWdTouchpad->touch[0u].z = LO8(CapSense_TOUCHPAD_POS_NONE);
 268:Generated_Source\PSoC4/CapSense_Processing.c **** 
 269:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (CapSense_CSX_MAX_FINGERS > 1u)
 270:Generated_Source\PSoC4/CapSense_Processing.c ****         ptrWdTouchpad->touch[1u].x = CapSense_TOUCHPAD_POS_NONE;
 271:Generated_Source\PSoC4/CapSense_Processing.c ****         ptrWdTouchpad->touch[1u].y = CapSense_TOUCHPAD_POS_NONE;
 272:Generated_Source\PSoC4/CapSense_Processing.c ****         ptrWdTouchpad->touch[1u].z = LO8(CapSense_TOUCHPAD_POS_NONE);
 273:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (CapSense_CSX_MAX_FINGERS > 1u) */
 274:Generated_Source\PSoC4/CapSense_Processing.c **** 
 275:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (CapSense_CSX_MAX_FINGERS > 2u)
 276:Generated_Source\PSoC4/CapSense_Processing.c ****         ptrWdTouchpad->touch[2u].x = CapSense_TOUCHPAD_POS_NONE;
 277:Generated_Source\PSoC4/CapSense_Processing.c ****         ptrWdTouchpad->touch[2u].y = CapSense_TOUCHPAD_POS_NONE;
 278:Generated_Source\PSoC4/CapSense_Processing.c ****         ptrWdTouchpad->touch[2u].z = LO8(CapSense_TOUCHPAD_POS_NONE);
 279:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (CapSense_CSX_MAX_FINGERS > 2u) */
 280:Generated_Source\PSoC4/CapSense_Processing.c **** 
 281:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_POSITION_FILTER_EN)
 282:Generated_Source\PSoC4/CapSense_Processing.c ****         for (touchIndex = 0u; touchIndex < CapSense_CSX_MAX_FINGERS; touchIndex++)
 283:Generated_Source\PSoC4/CapSense_Processing.c ****         {
 284:Generated_Source\PSoC4/CapSense_Processing.c ****             if (NULL != ptrHistory)
 285:Generated_Source\PSoC4/CapSense_Processing.c ****             {
 286:Generated_Source\PSoC4/CapSense_Processing.c ****                 /* Clear position filter history data if available */
 287:Generated_Source\PSoC4/CapSense_Processing.c ****                 CapSense_InitPosFiltersDd(&ptrHistory[touchIndex], CapSense_TOUCHPAD_POS_NONE, CapS
 288:Generated_Source\PSoC4/CapSense_Processing.c ****                 #if (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN)
 289:Generated_Source\PSoC4/CapSense_Processing.c ****                     AdaptiveFilter_Initialize(&ptrWdTouchpad->aiirConfig, &adpContext);
 290:Generated_Source\PSoC4/CapSense_Processing.c ****                     ptrHistory[touchIndex].xPos.posAIIRCoeff = adpContext.coefficient;
 291:Generated_Source\PSoC4/CapSense_Processing.c ****                     ptrHistory[touchIndex].yPos.posAIIRCoeff = adpContext.coefficient;
 292:Generated_Source\PSoC4/CapSense_Processing.c ****                 #endif /* (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN) */
 293:Generated_Source\PSoC4/CapSense_Processing.c ****             }
 294:Generated_Source\PSoC4/CapSense_Processing.c ****         }
 295:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* (0u != CapSense_POSITION_FILTER_EN) */
 296:Generated_Source\PSoC4/CapSense_Processing.c **** }
 297:Generated_Source\PSoC4/CapSense_Processing.c **** #endif /* #if (0u != CapSense_CSX_TOUCHPAD_WIDGET_EN) */
 298:Generated_Source\PSoC4/CapSense_Processing.c **** 
 299:Generated_Source\PSoC4/CapSense_Processing.c **** #if (0u != CapSense_SLIDER_WIDGET_EN)
 300:Generated_Source\PSoC4/CapSense_Processing.c **** /*******************************************************************************
 301:Generated_Source\PSoC4/CapSense_Processing.c **** * Function Name: CapSense_DpInitSlider
 302:Generated_Source\PSoC4/CapSense_Processing.c **** ****************************************************************************//**
 303:Generated_Source\PSoC4/CapSense_Processing.c **** *
 304:Generated_Source\PSoC4/CapSense_Processing.c **** * \brief
 305:Generated_Source\PSoC4/CapSense_Processing.c **** *  Performs initialization of the Radial and Linear Slider widget.
 306:Generated_Source\PSoC4/CapSense_Processing.c **** *   - Resets the position data to NONE
 307:Generated_Source\PSoC4/CapSense_Processing.c **** *   - Initializes the position filter history to NONE if enabled.
 308:Generated_Source\PSoC4/CapSense_Processing.c **** *
 309:Generated_Source\PSoC4/CapSense_Processing.c **** * \details
 310:Generated_Source\PSoC4/CapSense_Processing.c **** *  Position data is always reset to the CapSense_SLIDER_POS_NONE value.
 311:Generated_Source\PSoC4/CapSense_Processing.c **** *  The same happens to the position filter history data if enabled.
 312:Generated_Source\PSoC4/CapSense_Processing.c **** *
 313:Generated_Source\PSoC4/CapSense_Processing.c **** *******************************************************************************/
 314:Generated_Source\PSoC4/CapSense_Processing.c **** static CY_INLINE void CapSense_DpInitSlider(CapSense_FLASH_WD_STRUCT const * ptrFlashWdgt)
 315:Generated_Source\PSoC4/CapSense_Processing.c **** {
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 7


 316:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 idx;
 317:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_RAM_WD_SLIDER_STRUCT *ptrWdSlider;
 318:Generated_Source\PSoC4/CapSense_Processing.c **** 
 319:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_POSITION_FILTER_EN)
 320:Generated_Source\PSoC4/CapSense_Processing.c ****         CapSense_SLIDER_POS_HISTORY_STRUCT *ptrHistory;
 321:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_POSITION_FILTER_EN) */
 322:Generated_Source\PSoC4/CapSense_Processing.c **** 
 323:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN)
 324:Generated_Source\PSoC4/CapSense_Processing.c ****         ADAPTIVE_FILTER_CONTEXT_STRUCT context;
 325:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN) */
 326:Generated_Source\PSoC4/CapSense_Processing.c **** 
 327:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrWdSlider = ptrFlashWdgt->ptr2WdgtRam;
 328:Generated_Source\PSoC4/CapSense_Processing.c **** 
 329:Generated_Source\PSoC4/CapSense_Processing.c ****     /* Reset slider position data to NONE */
 330:Generated_Source\PSoC4/CapSense_Processing.c ****     for (idx = 0u; idx < CapSense_NUM_CENTROIDS; idx++)
 331:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 332:Generated_Source\PSoC4/CapSense_Processing.c ****         ptrWdSlider->position[idx] = CapSense_SLIDER_POS_NONE;
 333:Generated_Source\PSoC4/CapSense_Processing.c **** 
 334:Generated_Source\PSoC4/CapSense_Processing.c ****         #if (0u != CapSense_POSITION_FILTER_EN)
 335:Generated_Source\PSoC4/CapSense_Processing.c ****             ptrHistory = ptrFlashWdgt->ptr2PosHistory;
 336:Generated_Source\PSoC4/CapSense_Processing.c ****             if (NULL != ptrHistory)
 337:Generated_Source\PSoC4/CapSense_Processing.c ****             {
 338:Generated_Source\PSoC4/CapSense_Processing.c ****                 CapSense_InitPosFiltersSd(&ptrHistory[idx], CapSense_SLIDER_POS_NONE);
 339:Generated_Source\PSoC4/CapSense_Processing.c ****                 #if (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN)
 340:Generated_Source\PSoC4/CapSense_Processing.c ****                     AdaptiveFilter_Initialize(&ptrWdSlider->aiirConfig, &context);
 341:Generated_Source\PSoC4/CapSense_Processing.c ****                     ptrHistory->posAIIRCoeff = context.coefficient;
 342:Generated_Source\PSoC4/CapSense_Processing.c ****                 #endif /* (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN) */
 343:Generated_Source\PSoC4/CapSense_Processing.c ****             }
 344:Generated_Source\PSoC4/CapSense_Processing.c **** 
 345:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* #if (0u != CapSense_POSITION_FILTER_EN) */
 346:Generated_Source\PSoC4/CapSense_Processing.c ****     }
 347:Generated_Source\PSoC4/CapSense_Processing.c **** }
 348:Generated_Source\PSoC4/CapSense_Processing.c **** #endif /* #if (0u != CapSense_SLIDER_WIDGET_EN) */
 349:Generated_Source\PSoC4/CapSense_Processing.c **** 
 350:Generated_Source\PSoC4/CapSense_Processing.c **** #if (0u != CapSense_CSD_MATRIX_WIDGET_EN)
 351:Generated_Source\PSoC4/CapSense_Processing.c **** /*******************************************************************************
 352:Generated_Source\PSoC4/CapSense_Processing.c **** * Function Name: CapSense_DpInitCsdMatrix
 353:Generated_Source\PSoC4/CapSense_Processing.c **** ****************************************************************************//**
 354:Generated_Source\PSoC4/CapSense_Processing.c **** *
 355:Generated_Source\PSoC4/CapSense_Processing.c **** * \brief
 356:Generated_Source\PSoC4/CapSense_Processing.c **** *  Performs initialization of the CSD Matrix Buttons widget.
 357:Generated_Source\PSoC4/CapSense_Processing.c **** *   - Resets the active button position data to NONE.
 358:Generated_Source\PSoC4/CapSense_Processing.c **** *
 359:Generated_Source\PSoC4/CapSense_Processing.c **** * \details
 360:Generated_Source\PSoC4/CapSense_Processing.c **** *  Position data is always reset to the CapSense_MATRIX_POS_NONE value.
 361:Generated_Source\PSoC4/CapSense_Processing.c **** *
 362:Generated_Source\PSoC4/CapSense_Processing.c **** *******************************************************************************/
 363:Generated_Source\PSoC4/CapSense_Processing.c **** static CY_INLINE void CapSense_DpInitCsdMatrix(CapSense_FLASH_WD_STRUCT const * ptrFlashWdgt)
 364:Generated_Source\PSoC4/CapSense_Processing.c **** {
 365:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_RAM_WD_CSD_MATRIX_STRUCT *ptrRamWdgt;
 366:Generated_Source\PSoC4/CapSense_Processing.c **** 
 367:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrRamWdgt = (CapSense_RAM_WD_CSD_MATRIX_STRUCT *)ptrFlashWdgt->ptr2WdgtRam;
 368:Generated_Source\PSoC4/CapSense_Processing.c **** 
 369:Generated_Source\PSoC4/CapSense_Processing.c ****     /* Reset sensor id, row and col registers in data structure */
 370:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrRamWdgt->posRow   = CapSense_MATRIX_POS_NONE;
 371:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrRamWdgt->posCol   = CapSense_MATRIX_POS_NONE;
 372:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrRamWdgt->posSnsId = CapSense_MATRIX_POS_NONE;
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 8


 373:Generated_Source\PSoC4/CapSense_Processing.c **** }
 374:Generated_Source\PSoC4/CapSense_Processing.c **** #endif /* #if (0u != CapSense_CSD_MATRIX_WIDGET_EN) */
 375:Generated_Source\PSoC4/CapSense_Processing.c **** 
 376:Generated_Source\PSoC4/CapSense_Processing.c **** /*******************************************************************************
 377:Generated_Source\PSoC4/CapSense_Processing.c **** * Function Name: CapSense_DpInitialize
 378:Generated_Source\PSoC4/CapSense_Processing.c **** ****************************************************************************//**
 379:Generated_Source\PSoC4/CapSense_Processing.c **** *
 380:Generated_Source\PSoC4/CapSense_Processing.c **** * \brief
 381:Generated_Source\PSoC4/CapSense_Processing.c **** *  Performs initialization of the data processing FW module:
 382:Generated_Source\PSoC4/CapSense_Processing.c **** *   - Resets the de-bounce counters of all the widgets
 383:Generated_Source\PSoC4/CapSense_Processing.c **** *   - Resets the position filter history for slider and touchpad widgets
 384:Generated_Source\PSoC4/CapSense_Processing.c **** *   - Clears widget and sensor statuses
 385:Generated_Source\PSoC4/CapSense_Processing.c **** *   - Enables all the widgets.
 386:Generated_Source\PSoC4/CapSense_Processing.c **** *
 387:Generated_Source\PSoC4/CapSense_Processing.c **** * \details
 388:Generated_Source\PSoC4/CapSense_Processing.c **** *  The Button and Matrix Button widgets have individual de-bounce counter per
 389:Generated_Source\PSoC4/CapSense_Processing.c **** *  sensor for the CSD widgets and per node for the CSX widgets.
 390:Generated_Source\PSoC4/CapSense_Processing.c **** *
 391:Generated_Source\PSoC4/CapSense_Processing.c **** *  The Slider and Touchpad widgets have a single de-bounce counter per widget.
 392:Generated_Source\PSoC4/CapSense_Processing.c **** *
 393:Generated_Source\PSoC4/CapSense_Processing.c **** *  The Proximity widget has two de-bounce counters per sensor. One for the
 394:Generated_Source\PSoC4/CapSense_Processing.c **** *  proximity event and second for the touch event.
 395:Generated_Source\PSoC4/CapSense_Processing.c **** *
 396:Generated_Source\PSoC4/CapSense_Processing.c **** *  All debounce counters during initialization are set to the value of the
 397:Generated_Source\PSoC4/CapSense_Processing.c **** *  onDebounce widget parameter.
 398:Generated_Source\PSoC4/CapSense_Processing.c **** *
 399:Generated_Source\PSoC4/CapSense_Processing.c **** *******************************************************************************/
 400:Generated_Source\PSoC4/CapSense_Processing.c **** void CapSense_DpInitialize(void)
 401:Generated_Source\PSoC4/CapSense_Processing.c **** {
  28              		.loc 1 401 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
 402:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 wdgtId;
 403:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_WD_TYPE_ENUM widgetType;
 404:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_RAM_WD_BASE_STRUCT * ptrRamWdgt;
 405:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_FLASH_WD_STRUCT const * ptrFlashWdgt;
 406:Generated_Source\PSoC4/CapSense_Processing.c **** 
 407:Generated_Source\PSoC4/CapSense_Processing.c ****     for (wdgtId = 0u; wdgtId < CapSense_WDGT_STATUS_WORDS; wdgtId++)
 408:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 409:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Clear widget status */
 410:Generated_Source\PSoC4/CapSense_Processing.c ****         CapSense_dsRam.wdgtStatus[wdgtId] = 0u;
  33              		.loc 1 410 0
  34 0000 0022     		movs	r2, #0
  35 0002 124B     		ldr	r3, .L16
 401:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 wdgtId;
  36              		.loc 1 401 0
  37 0004 70B5     		push	{r4, r5, r6, lr}
  38              		.cfi_def_cfa_offset 16
  39              		.cfi_offset 4, -16
  40              		.cfi_offset 5, -12
  41              		.cfi_offset 6, -8
  42              		.cfi_offset 14, -4
  43              		.loc 1 410 0
  44 0006 5A61     		str	r2, [r3, #20]
  45 0008 114C     		ldr	r4, .L16+4
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 9


 411:Generated_Source\PSoC4/CapSense_Processing.c **** 
 412:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Enable all the widgets */
 413:Generated_Source\PSoC4/CapSense_Processing.c ****         CapSense_dsRam.wdgtEnable[wdgtId] = 0xFFFFFFFFLu;
  46              		.loc 1 413 0
  47 000a 013A     		subs	r2, r2, #1
  48 000c 114D     		ldr	r5, .L16+8
  49 000e 124E     		ldr	r6, .L16+12
  50 0010 1A61     		str	r2, [r3, #16]
  51              	.LVL1:
  52              	.L2:
 414:Generated_Source\PSoC4/CapSense_Processing.c **** 
 415:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Set all the widgets to working state if the Self-Test is not enabled */
 416:Generated_Source\PSoC4/CapSense_Processing.c ****         #if (0u != CapSense_SELF_TEST_EN)
 417:Generated_Source\PSoC4/CapSense_Processing.c ****             CapSense_dsRam.wdgtWorking[wdgtId] = 0xFFFFFFFFLu;
 418:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* #if (0u == CapSense_SELF_TEST_EN) */
 419:Generated_Source\PSoC4/CapSense_Processing.c ****     }
 420:Generated_Source\PSoC4/CapSense_Processing.c **** 
 421:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrFlashWdgt = CapSense_dsFlash.wdgtArray;
 422:Generated_Source\PSoC4/CapSense_Processing.c **** 
 423:Generated_Source\PSoC4/CapSense_Processing.c ****     for (wdgtId = CapSense_TOTAL_WIDGETS; wdgtId-- > 0u; )
  53              		.loc 1 423 0 discriminator 1
  54 0012 B542     		cmp	r5, r6
  55 0014 18D0     		beq	.L15
 424:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 425:Generated_Source\PSoC4/CapSense_Processing.c ****         ptrRamWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdgt->ptr2WdgtRam;
 426:Generated_Source\PSoC4/CapSense_Processing.c ****         widgetType = (CapSense_WD_TYPE_ENUM)ptrFlashWdgt->wdgtType;
 427:Generated_Source\PSoC4/CapSense_Processing.c **** 
 428:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Clear all sensor statuses */
 429:Generated_Source\PSoC4/CapSense_Processing.c ****         CapSense_dsRam.snsStatus[wdgtId] = 0u;
  56              		.loc 1 429 0
  57 0016 0021     		movs	r1, #0
 426:Generated_Source\PSoC4/CapSense_Processing.c **** 
  58              		.loc 1 426 0
  59 0018 A27D     		ldrb	r2, [r4, #22]
 425:Generated_Source\PSoC4/CapSense_Processing.c ****         widgetType = (CapSense_WD_TYPE_ENUM)ptrFlashWdgt->wdgtType;
  60              		.loc 1 425 0
  61 001a 2368     		ldr	r3, [r4]
  62              	.LVL2:
  63              		.loc 1 429 0
  64 001c 2970     		strb	r1, [r5]
 430:Generated_Source\PSoC4/CapSense_Processing.c **** 
 431:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Reset de-bounce counters */
 432:Generated_Source\PSoC4/CapSense_Processing.c ****         switch (widgetType)
  65              		.loc 1 432 0
  66 001e 012A     		cmp	r2, #1
  67 0020 02D0     		beq	.L4
  68 0022 062A     		cmp	r2, #6
  69 0024 05D0     		beq	.L5
  70 0026 0CE0     		b	.L3
  71              	.L4:
 433:Generated_Source\PSoC4/CapSense_Processing.c ****         {
 434:Generated_Source\PSoC4/CapSense_Processing.c ****         #if (0u != CapSense_MATRIX_WIDGET_EN)
 435:Generated_Source\PSoC4/CapSense_Processing.c ****             case CapSense_WD_MATRIX_BUTTON_E:
 436:Generated_Source\PSoC4/CapSense_Processing.c ****                 #if (0u != CapSense_CSD_MATRIX_WIDGET_EN)
 437:Generated_Source\PSoC4/CapSense_Processing.c ****                     if (CapSense_SENSE_METHOD_CSD_E == CapSense_GET_SENSE_METHOD(ptrFlashWdgt))
 438:Generated_Source\PSoC4/CapSense_Processing.c ****                     {
 439:Generated_Source\PSoC4/CapSense_Processing.c ****                         CapSense_DpInitCsdMatrix(ptrFlashWdgt);
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 10


 440:Generated_Source\PSoC4/CapSense_Processing.c ****                     }
 441:Generated_Source\PSoC4/CapSense_Processing.c ****                 #endif /* #if (0u != CapSense_CSD_MATRIX_WIDGET_EN) */
 442:Generated_Source\PSoC4/CapSense_Processing.c **** 
 443:Generated_Source\PSoC4/CapSense_Processing.c ****                 if (NULL != ptrFlashWdgt->ptr2DebounceArr)
 444:Generated_Source\PSoC4/CapSense_Processing.c ****                 {
 445:Generated_Source\PSoC4/CapSense_Processing.c ****                     /* Initialize array of debounce counters */
 446:Generated_Source\PSoC4/CapSense_Processing.c ****                     (void)memset(ptrFlashWdgt->ptr2DebounceArr,
 447:Generated_Source\PSoC4/CapSense_Processing.c ****                                  (int32)ptrRamWdgt->onDebounce,
 448:Generated_Source\PSoC4/CapSense_Processing.c ****                                  (size_t)ptrFlashWdgt->totalNumSns);
 449:Generated_Source\PSoC4/CapSense_Processing.c ****                 }
 450:Generated_Source\PSoC4/CapSense_Processing.c ****                 break;
 451:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* #if (0u != CapSense_MATRIX_WIDGET_EN) */
 452:Generated_Source\PSoC4/CapSense_Processing.c **** 
 453:Generated_Source\PSoC4/CapSense_Processing.c ****         #if (0u != CapSense_BUTTON_WIDGET_EN)
 454:Generated_Source\PSoC4/CapSense_Processing.c ****             case CapSense_WD_BUTTON_E:
 455:Generated_Source\PSoC4/CapSense_Processing.c ****                 if (NULL != ptrFlashWdgt->ptr2DebounceArr)
  72              		.loc 1 455 0
  73 0028 E068     		ldr	r0, [r4, #12]
  74 002a 0028     		cmp	r0, #0
  75 002c 09D0     		beq	.L3
 456:Generated_Source\PSoC4/CapSense_Processing.c ****                 {
 457:Generated_Source\PSoC4/CapSense_Processing.c ****                     /* Initialize array of debounce counters */
 458:Generated_Source\PSoC4/CapSense_Processing.c ****                     (void)memset(ptrFlashWdgt->ptr2DebounceArr,
  76              		.loc 1 458 0
  77 002e A28A     		ldrh	r2, [r4, #20]
  78              	.LVL3:
  79 0030 04E0     		b	.L13
  80              	.LVL4:
  81              	.L5:
 459:Generated_Source\PSoC4/CapSense_Processing.c ****                                  (int32)ptrRamWdgt->onDebounce,
 460:Generated_Source\PSoC4/CapSense_Processing.c ****                                  (size_t)ptrFlashWdgt->totalNumSns);
 461:Generated_Source\PSoC4/CapSense_Processing.c ****                 }
 462:Generated_Source\PSoC4/CapSense_Processing.c ****                 break;
 463:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* #if (0u != CapSense_BUTTON_WIDGET_EN) */
 464:Generated_Source\PSoC4/CapSense_Processing.c **** 
 465:Generated_Source\PSoC4/CapSense_Processing.c ****         #if (0u != CapSense_SLIDER_WIDGET_EN)
 466:Generated_Source\PSoC4/CapSense_Processing.c ****             case CapSense_WD_LINEAR_SLIDER_E:
 467:Generated_Source\PSoC4/CapSense_Processing.c ****             case CapSense_WD_RADIAL_SLIDER_E:
 468:Generated_Source\PSoC4/CapSense_Processing.c ****                 if (NULL != ptrFlashWdgt->ptr2DebounceArr)
 469:Generated_Source\PSoC4/CapSense_Processing.c ****                 {
 470:Generated_Source\PSoC4/CapSense_Processing.c ****                     /* Initialize single debounce counter of slider */
 471:Generated_Source\PSoC4/CapSense_Processing.c ****                     *(uint8 *)(ptrFlashWdgt->ptr2DebounceArr) = ptrRamWdgt->onDebounce;
 472:Generated_Source\PSoC4/CapSense_Processing.c ****                 }
 473:Generated_Source\PSoC4/CapSense_Processing.c **** 
 474:Generated_Source\PSoC4/CapSense_Processing.c ****                 CapSense_DpInitSlider(ptrFlashWdgt);
 475:Generated_Source\PSoC4/CapSense_Processing.c **** 
 476:Generated_Source\PSoC4/CapSense_Processing.c ****                 break;
 477:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* #if (0u != CapSense_SLIDER_WIDGET_EN) */
 478:Generated_Source\PSoC4/CapSense_Processing.c **** 
 479:Generated_Source\PSoC4/CapSense_Processing.c ****         #if (0u != CapSense_TOUCHPAD_WIDGET_EN)
 480:Generated_Source\PSoC4/CapSense_Processing.c ****             case CapSense_WD_TOUCHPAD_E:
 481:Generated_Source\PSoC4/CapSense_Processing.c ****                 if (NULL != ptrFlashWdgt->ptr2DebounceArr)
 482:Generated_Source\PSoC4/CapSense_Processing.c ****                 {
 483:Generated_Source\PSoC4/CapSense_Processing.c ****                     /* Initialize single debounce counter of touchpad */
 484:Generated_Source\PSoC4/CapSense_Processing.c ****                     *(uint8 *)(ptrFlashWdgt->ptr2DebounceArr) = ptrRamWdgt->onDebounce;
 485:Generated_Source\PSoC4/CapSense_Processing.c ****                 }
 486:Generated_Source\PSoC4/CapSense_Processing.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 11


 487:Generated_Source\PSoC4/CapSense_Processing.c ****                 #if (0u != CapSense_CSD_TOUCHPAD_WIDGET_EN)
 488:Generated_Source\PSoC4/CapSense_Processing.c ****                     if (CapSense_SENSE_METHOD_CSD_E == CapSense_GET_SENSE_METHOD(ptrFlashWdgt))
 489:Generated_Source\PSoC4/CapSense_Processing.c ****                     {
 490:Generated_Source\PSoC4/CapSense_Processing.c ****                         CapSense_DpInitCsdTouchpad(ptrFlashWdgt);
 491:Generated_Source\PSoC4/CapSense_Processing.c ****                     }
 492:Generated_Source\PSoC4/CapSense_Processing.c ****                 #endif /* #if (0u != CapSense_CSD_TOUCHPAD_WIDGET_EN) */
 493:Generated_Source\PSoC4/CapSense_Processing.c **** 
 494:Generated_Source\PSoC4/CapSense_Processing.c ****                 #if (0u != CapSense_CSX_TOUCHPAD_WIDGET_EN)
 495:Generated_Source\PSoC4/CapSense_Processing.c ****                     if (CapSense_SENSE_METHOD_CSX_E == CapSense_GET_SENSE_METHOD(ptrFlashWdgt))
 496:Generated_Source\PSoC4/CapSense_Processing.c ****                     {
 497:Generated_Source\PSoC4/CapSense_Processing.c ****                         CapSense_DpInitCsxTouchpad(ptrFlashWdgt);
 498:Generated_Source\PSoC4/CapSense_Processing.c ****                     }
 499:Generated_Source\PSoC4/CapSense_Processing.c ****                 #endif /* #if (0u != CapSense_CSX_TOUCHPAD_WIDGET_EN) */
 500:Generated_Source\PSoC4/CapSense_Processing.c **** 
 501:Generated_Source\PSoC4/CapSense_Processing.c ****                 break;
 502:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* #if (0u != CapSense_TOUCHPAD_WIDGET_EN) */
 503:Generated_Source\PSoC4/CapSense_Processing.c **** 
 504:Generated_Source\PSoC4/CapSense_Processing.c ****         #if (0u != CapSense_PROXIMITY_WIDGET_EN)
 505:Generated_Source\PSoC4/CapSense_Processing.c ****             case CapSense_WD_PROXIMITY_E:
 506:Generated_Source\PSoC4/CapSense_Processing.c ****                 if (NULL != ptrFlashWdgt->ptr2DebounceArr)
  82              		.loc 1 506 0
  83 0032 E068     		ldr	r0, [r4, #12]
  84 0034 0028     		cmp	r0, #0
  85 0036 04D0     		beq	.L3
 507:Generated_Source\PSoC4/CapSense_Processing.c ****                 {
 508:Generated_Source\PSoC4/CapSense_Processing.c ****                     /* Proximity widgets have 2 de-bounce counters per sensor.
 509:Generated_Source\PSoC4/CapSense_Processing.c ****                      * Therefore the number of sensors is multiplied by 2.
 510:Generated_Source\PSoC4/CapSense_Processing.c ****                      */
 511:Generated_Source\PSoC4/CapSense_Processing.c ****                    (void)memset(ptrFlashWdgt->ptr2DebounceArr,
  86              		.loc 1 511 0
  87 0038 A28A     		ldrh	r2, [r4, #20]
  88              	.LVL5:
  89 003a 5200     		lsls	r2, r2, #1
  90              	.L13:
  91 003c D979     		ldrb	r1, [r3, #7]
  92 003e FFF7FEFF 		bl	memset
  93              	.LVL6:
  94              	.L3:
  95 0042 1C34     		adds	r4, r4, #28
  96              	.LVL7:
  97 0044 013D     		subs	r5, r5, #1
  98              	.LVL8:
  99 0046 E4E7     		b	.L2
 100              	.LVL9:
 101              	.L15:
 512:Generated_Source\PSoC4/CapSense_Processing.c ****                                 (int32)ptrRamWdgt->onDebounce,
 513:Generated_Source\PSoC4/CapSense_Processing.c ****                                 (size_t)ptrFlashWdgt->totalNumSns * 2u);
 514:Generated_Source\PSoC4/CapSense_Processing.c ****                 }
 515:Generated_Source\PSoC4/CapSense_Processing.c ****                 break;
 516:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* #if (0u != CapSense_PROXIMITY_WIDGET_EN) */
 517:Generated_Source\PSoC4/CapSense_Processing.c **** 
 518:Generated_Source\PSoC4/CapSense_Processing.c ****         #if (0u != CapSense_ENCODERDIAL_WIDGET_EN)
 519:Generated_Source\PSoC4/CapSense_Processing.c ****             case CapSense_WD_ENCODERDIAL_E:
 520:Generated_Source\PSoC4/CapSense_Processing.c ****                 if (NULL != ptrFlashWdgt->ptr2DebounceArr)
 521:Generated_Source\PSoC4/CapSense_Processing.c ****                 {
 522:Generated_Source\PSoC4/CapSense_Processing.c ****                     /* Proximity widgets have 2 de-bounce counters per sensor.
 523:Generated_Source\PSoC4/CapSense_Processing.c ****                      * Therefore the number of sensors is multiplied by 2.
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 12


 524:Generated_Source\PSoC4/CapSense_Processing.c ****                      */
 525:Generated_Source\PSoC4/CapSense_Processing.c ****                    (void)memset(ptrFlashWdgt->ptr2DebounceArr,
 526:Generated_Source\PSoC4/CapSense_Processing.c ****                                 (int32)ptrRamWdgt->onDebounce,
 527:Generated_Source\PSoC4/CapSense_Processing.c ****                                 (size_t)ptrFlashWdgt->totalNumSns);
 528:Generated_Source\PSoC4/CapSense_Processing.c ****                 }
 529:Generated_Source\PSoC4/CapSense_Processing.c ****                 break;
 530:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* (0u != CapSense_ENCODERDIAL_WIDGET_EN) */
 531:Generated_Source\PSoC4/CapSense_Processing.c ****             default:
 532:Generated_Source\PSoC4/CapSense_Processing.c ****                 break;
 533:Generated_Source\PSoC4/CapSense_Processing.c ****         }
 534:Generated_Source\PSoC4/CapSense_Processing.c **** 
 535:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Move to next widget */
 536:Generated_Source\PSoC4/CapSense_Processing.c ****         ptrFlashWdgt++;
 537:Generated_Source\PSoC4/CapSense_Processing.c ****     }
 538:Generated_Source\PSoC4/CapSense_Processing.c **** }
 102              		.loc 1 538 0
 103              		@ sp needed
 104              	.LVL10:
 105              	.LVL11:
 106 0048 70BD     		pop	{r4, r5, r6, pc}
 107              	.L17:
 108 004a C046     		.align	2
 109              	.L16:
 110 004c 00000000 		.word	CapSense_dsRam
 111 0050 04000000 		.word	CapSense_dsFlash+4
 112 0054 1C000000 		.word	CapSense_dsRam+28
 113 0058 17000000 		.word	CapSense_dsRam+23
 114              		.cfi_endproc
 115              	.LFE1:
 116              		.size	CapSense_DpInitialize, .-CapSense_DpInitialize
 117              		.section	.text.CapSense_DpUpdateDifferences,"ax",%progbits
 118              		.align	1
 119              		.global	CapSense_DpUpdateDifferences
 120              		.code	16
 121              		.thumb_func
 122              		.type	CapSense_DpUpdateDifferences, %function
 123              	CapSense_DpUpdateDifferences:
 124              	.LFB5:
 539:Generated_Source\PSoC4/CapSense_Processing.c **** 
 540:Generated_Source\PSoC4/CapSense_Processing.c **** #if (0u != CapSense_TOTAL_CSX_WIDGETS)
 541:Generated_Source\PSoC4/CapSense_Processing.c **** /*******************************************************************************
 542:Generated_Source\PSoC4/CapSense_Processing.c **** * Function Name: CapSense_DpProcessCsxWidgetRawCounts
 543:Generated_Source\PSoC4/CapSense_Processing.c **** ****************************************************************************//**
 544:Generated_Source\PSoC4/CapSense_Processing.c **** *
 545:Generated_Source\PSoC4/CapSense_Processing.c **** * \brief
 546:Generated_Source\PSoC4/CapSense_Processing.c **** *  Performs default processing of the CSX raw counts.
 547:Generated_Source\PSoC4/CapSense_Processing.c **** *
 548:Generated_Source\PSoC4/CapSense_Processing.c **** * \details
 549:Generated_Source\PSoC4/CapSense_Processing.c **** *  Performs default processing of the CSX raw counts:
 550:Generated_Source\PSoC4/CapSense_Processing.c **** *   - Run Filters
 551:Generated_Source\PSoC4/CapSense_Processing.c **** *   - Update Baselines
 552:Generated_Source\PSoC4/CapSense_Processing.c **** *   - Update Differences
 553:Generated_Source\PSoC4/CapSense_Processing.c **** *   - Update Status.
 554:Generated_Source\PSoC4/CapSense_Processing.c **** *  The same process is applied to all the sensors of the specified widget.
 555:Generated_Source\PSoC4/CapSense_Processing.c **** *
 556:Generated_Source\PSoC4/CapSense_Processing.c **** * \param ptrFlashWdgt The pointer to the Flash widget structure.
 557:Generated_Source\PSoC4/CapSense_Processing.c **** *
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 13


 558:Generated_Source\PSoC4/CapSense_Processing.c **** * \return
 559:Generated_Source\PSoC4/CapSense_Processing.c **** *  Returns the status of the specified widget processing operation:
 560:Generated_Source\PSoC4/CapSense_Processing.c **** *  - CYRET_SUCCESS if operation was successfully completed;
 561:Generated_Source\PSoC4/CapSense_Processing.c **** *  - CapSense_PROCESS_BASELINE_FAILED if baseline processing of any
 562:Generated_Source\PSoC4/CapSense_Processing.c **** *    sensor of the specified widget failed. The result is concatenated with the index
 563:Generated_Source\PSoC4/CapSense_Processing.c **** *    of failed sensor.
 564:Generated_Source\PSoC4/CapSense_Processing.c **** *
 565:Generated_Source\PSoC4/CapSense_Processing.c **** *******************************************************************************/
 566:Generated_Source\PSoC4/CapSense_Processing.c **** uint32 CapSense_DpProcessCsxWidgetRawCounts(CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt)
 567:Generated_Source\PSoC4/CapSense_Processing.c **** {
 568:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 result = CYRET_SUCCESS;
 569:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 widgetType;
 570:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 snsCount;
 571:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_RAM_SNS_STRUCT *ptrSnsTmp;
 572:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrRamWdgt;
 573:Generated_Source\PSoC4/CapSense_Processing.c **** 
 574:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
 575:Generated_Source\PSoC4/CapSense_Processing.c ****         CapSense_PTR_FILTER_VARIANT fltrHistV;
 576:Generated_Source\PSoC4/CapSense_Processing.c **** 
 577:Generated_Source\PSoC4/CapSense_Processing.c ****         fltrHistV.ptr = ptrFlashWdgt->ptr2FltrHistory;
 578:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
 579:Generated_Source\PSoC4/CapSense_Processing.c **** 
 580:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrSnsTmp = ptrFlashWdgt->ptr2SnsRam;
 581:Generated_Source\PSoC4/CapSense_Processing.c ****     snsCount = ptrFlashWdgt->totalNumSns;
 582:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrRamWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdgt->ptr2WdgtRam;
 583:Generated_Source\PSoC4/CapSense_Processing.c ****     widgetType = ptrFlashWdgt->wdgtType;
 584:Generated_Source\PSoC4/CapSense_Processing.c **** 
 585:Generated_Source\PSoC4/CapSense_Processing.c ****     /* Run deconvolution algorithm for the widgets with multiphase TX support */
 586:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_CSX_MULTIPHASE_TX_EN)
 587:Generated_Source\PSoC4/CapSense_Processing.c ****         if (0u != (ptrFlashWdgt->staticConfig & CapSense_MULTIPHASE_TX_MASK))
 588:Generated_Source\PSoC4/CapSense_Processing.c ****         {
 589:Generated_Source\PSoC4/CapSense_Processing.c ****             CapSense_DpDeconvolution(ptrFlashWdgt);
 590:Generated_Source\PSoC4/CapSense_Processing.c ****         }
 591:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif  /* #if (0u != CapSense_CSX_MULTIPHASE_TX_EN) */
 592:Generated_Source\PSoC4/CapSense_Processing.c **** 
 593:Generated_Source\PSoC4/CapSense_Processing.c ****     for (;snsCount-- > 0u;)
 594:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 595:Generated_Source\PSoC4/CapSense_Processing.c ****         #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
 596:Generated_Source\PSoC4/CapSense_Processing.c ****             CapSense_FtRunEnabledFiltersInternal(fltrHistV, ptrSnsTmp, widgetType);
 597:Generated_Source\PSoC4/CapSense_Processing.c ****             #if (CapSense_ALP_FILTER_EN)
 598:Generated_Source\PSoC4/CapSense_Processing.c ****                 CapSense_ConfigRunALPInternal(fltrHistV, ptrRamWdgt, ptrSnsTmp, widgetType);
 599:Generated_Source\PSoC4/CapSense_Processing.c ****             #endif
 600:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* #if (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
 601:Generated_Source\PSoC4/CapSense_Processing.c **** 
 602:Generated_Source\PSoC4/CapSense_Processing.c ****         result = CapSense_FtUpdateBaseline(ptrRamWdgt, ptrSnsTmp, widgetType);
 603:Generated_Source\PSoC4/CapSense_Processing.c **** 
 604:Generated_Source\PSoC4/CapSense_Processing.c ****         #if (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN)
 605:Generated_Source\PSoC4/CapSense_Processing.c ****             if (CYRET_SUCCESS != result)
 606:Generated_Source\PSoC4/CapSense_Processing.c ****             {
 607:Generated_Source\PSoC4/CapSense_Processing.c ****                 result = snsCount | CapSense_PROCESS_BASELINE_FAILED;
 608:Generated_Source\PSoC4/CapSense_Processing.c ****             }
 609:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN) */
 610:Generated_Source\PSoC4/CapSense_Processing.c **** 
 611:Generated_Source\PSoC4/CapSense_Processing.c ****         CapSense_DpUpdateDifferences(ptrRamWdgt, ptrSnsTmp);
 612:Generated_Source\PSoC4/CapSense_Processing.c **** 
 613:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Move pointers to the next sensor and filter history objects */
 614:Generated_Source\PSoC4/CapSense_Processing.c ****         ptrSnsTmp++;
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 14


 615:Generated_Source\PSoC4/CapSense_Processing.c **** 
 616:Generated_Source\PSoC4/CapSense_Processing.c ****         #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
 617:Generated_Source\PSoC4/CapSense_Processing.c ****             CapSense_INC_REG_FLTR_OBJ(fltrHistV);
 618:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* #if (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
 619:Generated_Source\PSoC4/CapSense_Processing.c ****     }
 620:Generated_Source\PSoC4/CapSense_Processing.c ****     return result;
 621:Generated_Source\PSoC4/CapSense_Processing.c **** }
 622:Generated_Source\PSoC4/CapSense_Processing.c **** 
 623:Generated_Source\PSoC4/CapSense_Processing.c **** /*******************************************************************************
 624:Generated_Source\PSoC4/CapSense_Processing.c **** * Function Name: CapSense_DpProcessCsxSensorRawCountsExt
 625:Generated_Source\PSoC4/CapSense_Processing.c **** ****************************************************************************//**
 626:Generated_Source\PSoC4/CapSense_Processing.c **** *
 627:Generated_Source\PSoC4/CapSense_Processing.c **** * \brief
 628:Generated_Source\PSoC4/CapSense_Processing.c **** *   Performs customized processing of the CSX sensor raw counts.
 629:Generated_Source\PSoC4/CapSense_Processing.c **** *
 630:Generated_Source\PSoC4/CapSense_Processing.c **** * \details
 631:Generated_Source\PSoC4/CapSense_Processing.c **** *   Performs customized processing of the CSX sensor raw counts.
 632:Generated_Source\PSoC4/CapSense_Processing.c **** *
 633:Generated_Source\PSoC4/CapSense_Processing.c **** *   If all bits are set at once the default processing order will take place.
 634:Generated_Source\PSoC4/CapSense_Processing.c **** *   For the custom order this API can be called multiple times and execute one task at a time.
 635:Generated_Source\PSoC4/CapSense_Processing.c **** *
 636:Generated_Source\PSoC4/CapSense_Processing.c **** * \param ptrFlashWdgt The pointer to the Flash Widget Object.
 637:Generated_Source\PSoC4/CapSense_Processing.c **** * \param curSnsPtr    The pointer to the specific RAM Sensor Object.
 638:Generated_Source\PSoC4/CapSense_Processing.c **** * \param fltrHistV    The pointer to the Filter History Object in RAM associated with specific sens
 639:Generated_Source\PSoC4/CapSense_Processing.c **** * \param mode         The bit-mask with the data processing tasks to be executed.
 640:Generated_Source\PSoC4/CapSense_Processing.c **** *   The mode parameters can take the following values:
 641:Generated_Source\PSoC4/CapSense_Processing.c **** *    - CapSense_PROCESS_FILTER     (0x01) Run Firmware Filter
 642:Generated_Source\PSoC4/CapSense_Processing.c **** *    - CapSense_PROCESS_BASELINE   (0x02) Update Baselines
 643:Generated_Source\PSoC4/CapSense_Processing.c **** *    - CapSense_PROCESS_DIFFCOUNTS (0x04) Update Difference Counts
 644:Generated_Source\PSoC4/CapSense_Processing.c **** *    - CapSense_PROCESS_ALL               Execute all tasks
 645:Generated_Source\PSoC4/CapSense_Processing.c **** *
 646:Generated_Source\PSoC4/CapSense_Processing.c **** * \return
 647:Generated_Source\PSoC4/CapSense_Processing.c **** *  Returns the status of the specified sensor processing operation:
 648:Generated_Source\PSoC4/CapSense_Processing.c **** *  - CYRET_SUCCESS if operation was successfully completed;
 649:Generated_Source\PSoC4/CapSense_Processing.c **** *  - CapSense_PROCESS_BASELINE_FAILED if baseline processing of any
 650:Generated_Source\PSoC4/CapSense_Processing.c **** *    sensor of the specified widget failed. The result is concatenated with the index
 651:Generated_Source\PSoC4/CapSense_Processing.c **** *    of failed sensor.
 652:Generated_Source\PSoC4/CapSense_Processing.c **** *
 653:Generated_Source\PSoC4/CapSense_Processing.c **** *******************************************************************************/
 654:Generated_Source\PSoC4/CapSense_Processing.c **** uint32 CapSense_DpProcessCsxSensorRawCountsExt(
 655:Generated_Source\PSoC4/CapSense_Processing.c ****                 CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt,
 656:Generated_Source\PSoC4/CapSense_Processing.c ****                 CapSense_RAM_SNS_STRUCT *curSnsPtr,
 657:Generated_Source\PSoC4/CapSense_Processing.c ****                 CapSense_PTR_FILTER_VARIANT fltrHistV,
 658:Generated_Source\PSoC4/CapSense_Processing.c ****                 uint32 mode)
 659:Generated_Source\PSoC4/CapSense_Processing.c **** {
 660:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32  result = CYRET_SUCCESS;
 661:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32  widgetType;
 662:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrRamWdgt;
 663:Generated_Source\PSoC4/CapSense_Processing.c **** 
 664:Generated_Source\PSoC4/CapSense_Processing.c ****     widgetType = ptrFlashWdgt->wdgtType;
 665:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrRamWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdgt->ptr2WdgtRam;
 666:Generated_Source\PSoC4/CapSense_Processing.c **** 
 667:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
 668:Generated_Source\PSoC4/CapSense_Processing.c ****         if (0u != (mode & CapSense_PROCESS_FILTER))
 669:Generated_Source\PSoC4/CapSense_Processing.c ****         {
 670:Generated_Source\PSoC4/CapSense_Processing.c ****             CapSense_FtRunEnabledFiltersInternal(fltrHistV, curSnsPtr, widgetType);
 671:Generated_Source\PSoC4/CapSense_Processing.c ****             #if (CapSense_ALP_FILTER_EN)
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 15


 672:Generated_Source\PSoC4/CapSense_Processing.c ****                 CapSense_ConfigRunALPInternal(fltrHistV, ptrRamWdgt, curSnsPtr, widgetType);
 673:Generated_Source\PSoC4/CapSense_Processing.c ****             #endif
 674:Generated_Source\PSoC4/CapSense_Processing.c ****         }
 675:Generated_Source\PSoC4/CapSense_Processing.c ****     #else
 676:Generated_Source\PSoC4/CapSense_Processing.c ****         (void)fltrHistV; /* This parameter is unused in such configurations */
 677:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
 678:Generated_Source\PSoC4/CapSense_Processing.c **** 
 679:Generated_Source\PSoC4/CapSense_Processing.c ****     if (0u != (mode & CapSense_PROCESS_BASELINE))
 680:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 681:Generated_Source\PSoC4/CapSense_Processing.c ****         result = CapSense_FtUpdateBaseline(ptrRamWdgt, curSnsPtr, widgetType);
 682:Generated_Source\PSoC4/CapSense_Processing.c ****     }
 683:Generated_Source\PSoC4/CapSense_Processing.c **** 
 684:Generated_Source\PSoC4/CapSense_Processing.c ****     if (0u != (mode & CapSense_PROCESS_DIFFCOUNTS))
 685:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 686:Generated_Source\PSoC4/CapSense_Processing.c ****         CapSense_DpUpdateDifferences(ptrRamWdgt, curSnsPtr);
 687:Generated_Source\PSoC4/CapSense_Processing.c ****     }
 688:Generated_Source\PSoC4/CapSense_Processing.c ****     return result;
 689:Generated_Source\PSoC4/CapSense_Processing.c **** }
 690:Generated_Source\PSoC4/CapSense_Processing.c **** 
 691:Generated_Source\PSoC4/CapSense_Processing.c **** 
 692:Generated_Source\PSoC4/CapSense_Processing.c **** /*******************************************************************************
 693:Generated_Source\PSoC4/CapSense_Processing.c **** * Function Name: CapSense_DpProcessCsxWidgetStatus
 694:Generated_Source\PSoC4/CapSense_Processing.c **** ****************************************************************************//**
 695:Generated_Source\PSoC4/CapSense_Processing.c **** *
 696:Generated_Source\PSoC4/CapSense_Processing.c **** * \brief
 697:Generated_Source\PSoC4/CapSense_Processing.c **** *   Updates the status of the CSX widget in the Data Structure.
 698:Generated_Source\PSoC4/CapSense_Processing.c **** *
 699:Generated_Source\PSoC4/CapSense_Processing.c **** * \details
 700:Generated_Source\PSoC4/CapSense_Processing.c **** *  This API determines the type of widget and runs the appropriate function
 701:Generated_Source\PSoC4/CapSense_Processing.c **** *  that implements the status update algorithm for this type of widget.
 702:Generated_Source\PSoC4/CapSense_Processing.c **** *
 703:Generated_Source\PSoC4/CapSense_Processing.c **** *  When the widget-specific processing completes this API updates the snsStatus
 704:Generated_Source\PSoC4/CapSense_Processing.c **** *  and wdgtStatus registers in the data structure. The wdgtStatus register
 705:Generated_Source\PSoC4/CapSense_Processing.c **** *  is a bitmask were each bit corresponds to the specific widget identified by
 706:Generated_Source\PSoC4/CapSense_Processing.c **** *  the widget index. When the bit is set the widget is active (touched);
 707:Generated_Source\PSoC4/CapSense_Processing.c **** *
 708:Generated_Source\PSoC4/CapSense_Processing.c **** *  Depending on the type of widget the snsStatus register may contain either
 709:Generated_Source\PSoC4/CapSense_Processing.c **** *  status of each widget node (active/non-active) or in case of the CSX Touchpad
 710:Generated_Source\PSoC4/CapSense_Processing.c **** *  is contains the number of touches. In both cases 0 means that widget is not
 711:Generated_Source\PSoC4/CapSense_Processing.c **** *  active.
 712:Generated_Source\PSoC4/CapSense_Processing.c **** *
 713:Generated_Source\PSoC4/CapSense_Processing.c **** * \param widgetId     The widget ID number.
 714:Generated_Source\PSoC4/CapSense_Processing.c **** * \param ptrFlashWdgt The pointer to the Flash Widget Object.
 715:Generated_Source\PSoC4/CapSense_Processing.c **** *
 716:Generated_Source\PSoC4/CapSense_Processing.c **** *******************************************************************************/
 717:Generated_Source\PSoC4/CapSense_Processing.c **** void CapSense_DpProcessCsxWidgetStatus(uint32 widgetId, CapSense_FLASH_WD_STRUCT const *ptrFlashWdg
 718:Generated_Source\PSoC4/CapSense_Processing.c **** {
 719:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 sensorStatus;
 720:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 wdStatusIndex;
 721:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 wdStatusMask;
 722:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_WD_TYPE_ENUM widgetType;
 723:Generated_Source\PSoC4/CapSense_Processing.c **** 
 724:Generated_Source\PSoC4/CapSense_Processing.c ****     widgetType = (CapSense_WD_TYPE_ENUM)ptrFlashWdgt->wdgtType;
 725:Generated_Source\PSoC4/CapSense_Processing.c ****     sensorStatus = CapSense_dsRam.snsStatus[widgetId];
 726:Generated_Source\PSoC4/CapSense_Processing.c **** 
 727:Generated_Source\PSoC4/CapSense_Processing.c ****     switch (widgetType)
 728:Generated_Source\PSoC4/CapSense_Processing.c ****     {
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 16


 729:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_BUTTON_WIDGET_EN)
 730:Generated_Source\PSoC4/CapSense_Processing.c ****         case CapSense_WD_BUTTON_E:
 731:Generated_Source\PSoC4/CapSense_Processing.c ****             sensorStatus = CapSense_DpProcessButton(sensorStatus, ptrFlashWdgt);
 732:Generated_Source\PSoC4/CapSense_Processing.c ****             break;
 733:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_BUTTON_WIDGET_EN) */
 734:Generated_Source\PSoC4/CapSense_Processing.c **** 
 735:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_CSX_MATRIX_WIDGET_EN)
 736:Generated_Source\PSoC4/CapSense_Processing.c ****         case CapSense_WD_MATRIX_BUTTON_E:
 737:Generated_Source\PSoC4/CapSense_Processing.c ****             sensorStatus = CapSense_DpProcessButton(sensorStatus, ptrFlashWdgt);
 738:Generated_Source\PSoC4/CapSense_Processing.c ****             break;
 739:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_CSX_MATRIX_WIDGET_EN) */
 740:Generated_Source\PSoC4/CapSense_Processing.c **** 
 741:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_CSX_TOUCHPAD_WIDGET_EN)
 742:Generated_Source\PSoC4/CapSense_Processing.c ****         case CapSense_WD_TOUCHPAD_E:
 743:Generated_Source\PSoC4/CapSense_Processing.c ****             sensorStatus = CapSense_DpProcessCsxTouchpad(sensorStatus, ptrFlashWdgt);
 744:Generated_Source\PSoC4/CapSense_Processing.c ****             break;
 745:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_CSX_TOUCHPAD_WIDGET_EN) */
 746:Generated_Source\PSoC4/CapSense_Processing.c **** 
 747:Generated_Source\PSoC4/CapSense_Processing.c ****     default:
 748:Generated_Source\PSoC4/CapSense_Processing.c ****         CYASSERT(0u);
 749:Generated_Source\PSoC4/CapSense_Processing.c ****         break;
 750:Generated_Source\PSoC4/CapSense_Processing.c ****     }
 751:Generated_Source\PSoC4/CapSense_Processing.c **** 
 752:Generated_Source\PSoC4/CapSense_Processing.c ****     /* Update sensor status in the data structure */
 753:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_dsRam.snsStatus[widgetId] = (CapSense_SNS_STS_TYPE)sensorStatus;
 754:Generated_Source\PSoC4/CapSense_Processing.c **** 
 755:Generated_Source\PSoC4/CapSense_Processing.c ****     /* The next two lines calculate index and bitmask of the widget status bit in the wdgtStatus ar
 756:Generated_Source\PSoC4/CapSense_Processing.c ****     wdStatusIndex = CapSense_GET_WDGT_STATUS_INDEX(widgetId);
 757:Generated_Source\PSoC4/CapSense_Processing.c ****     wdStatusMask = CapSense_GET_WDGT_STATUS_MASK(widgetId);
 758:Generated_Source\PSoC4/CapSense_Processing.c **** 
 759:Generated_Source\PSoC4/CapSense_Processing.c ****     /* Check if there are active sensors and update widget status accordingly */
 760:Generated_Source\PSoC4/CapSense_Processing.c ****     if (0u == sensorStatus)
 761:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 762:Generated_Source\PSoC4/CapSense_Processing.c ****         CapSense_dsRam.wdgtStatus[wdStatusIndex] &= ~wdStatusMask;
 763:Generated_Source\PSoC4/CapSense_Processing.c ****     }
 764:Generated_Source\PSoC4/CapSense_Processing.c ****     else
 765:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 766:Generated_Source\PSoC4/CapSense_Processing.c ****         CapSense_dsRam.wdgtStatus[wdStatusIndex] |= wdStatusMask;
 767:Generated_Source\PSoC4/CapSense_Processing.c ****     }
 768:Generated_Source\PSoC4/CapSense_Processing.c **** }
 769:Generated_Source\PSoC4/CapSense_Processing.c **** #endif /* #if CapSense_TOTAL_CSX_WIDGETS */
 770:Generated_Source\PSoC4/CapSense_Processing.c **** 
 771:Generated_Source\PSoC4/CapSense_Processing.c **** #if (0u != CapSense_TOTAL_ISX_WIDGETS)
 772:Generated_Source\PSoC4/CapSense_Processing.c **** /*******************************************************************************
 773:Generated_Source\PSoC4/CapSense_Processing.c **** * Function Name: CapSense_DpProcessIsxWidgetRawCounts
 774:Generated_Source\PSoC4/CapSense_Processing.c **** ****************************************************************************//**
 775:Generated_Source\PSoC4/CapSense_Processing.c **** *
 776:Generated_Source\PSoC4/CapSense_Processing.c **** * \brief
 777:Generated_Source\PSoC4/CapSense_Processing.c **** *  Performs default processing of the ISX raw counts.
 778:Generated_Source\PSoC4/CapSense_Processing.c **** *
 779:Generated_Source\PSoC4/CapSense_Processing.c **** * \details
 780:Generated_Source\PSoC4/CapSense_Processing.c **** *  Performs default processing of the ISX raw counts:
 781:Generated_Source\PSoC4/CapSense_Processing.c **** *   - Run Filters
 782:Generated_Source\PSoC4/CapSense_Processing.c **** *   - Update Baselines
 783:Generated_Source\PSoC4/CapSense_Processing.c **** *   - Update Differences
 784:Generated_Source\PSoC4/CapSense_Processing.c **** *   - Update Status.
 785:Generated_Source\PSoC4/CapSense_Processing.c **** *  The same process is applied to all the sensors of the specified widget.
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 17


 786:Generated_Source\PSoC4/CapSense_Processing.c **** *
 787:Generated_Source\PSoC4/CapSense_Processing.c **** * \param ptrFlashWdgt The pointer to the Flash widget structure.
 788:Generated_Source\PSoC4/CapSense_Processing.c **** *
 789:Generated_Source\PSoC4/CapSense_Processing.c **** * \return
 790:Generated_Source\PSoC4/CapSense_Processing.c **** *  Returns the status of the specified widget processing operation:
 791:Generated_Source\PSoC4/CapSense_Processing.c **** *  - CYRET_SUCCESS if operation was successfully completed;
 792:Generated_Source\PSoC4/CapSense_Processing.c **** *  - CapSense_PROCESS_BASELINE_FAILED if baseline processing of any
 793:Generated_Source\PSoC4/CapSense_Processing.c **** *    sensor of the specified widget failed. The result is concatenated with the index
 794:Generated_Source\PSoC4/CapSense_Processing.c **** *    of failed sensor.
 795:Generated_Source\PSoC4/CapSense_Processing.c **** *
 796:Generated_Source\PSoC4/CapSense_Processing.c **** *******************************************************************************/
 797:Generated_Source\PSoC4/CapSense_Processing.c **** uint32 CapSense_DpProcessIsxWidgetRawCounts(CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt)
 798:Generated_Source\PSoC4/CapSense_Processing.c **** {
 799:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 result = CYRET_SUCCESS;
 800:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 widgetType;
 801:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 snsCount;
 802:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_RAM_SNS_STRUCT *ptrSns;
 803:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrRamWdgt;
 804:Generated_Source\PSoC4/CapSense_Processing.c **** 
 805:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
 806:Generated_Source\PSoC4/CapSense_Processing.c ****         CapSense_PTR_FILTER_VARIANT fltrHistV;
 807:Generated_Source\PSoC4/CapSense_Processing.c **** 
 808:Generated_Source\PSoC4/CapSense_Processing.c ****         fltrHistV.ptr = ptrFlashWdgt->ptr2FltrHistory;
 809:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
 810:Generated_Source\PSoC4/CapSense_Processing.c **** 
 811:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrSns = ptrFlashWdgt->ptr2SnsRam;
 812:Generated_Source\PSoC4/CapSense_Processing.c ****     snsCount = ptrFlashWdgt->totalNumSns;
 813:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrRamWdgt = ptrFlashWdgt->ptr2WdgtRam;
 814:Generated_Source\PSoC4/CapSense_Processing.c ****     widgetType = ptrFlashWdgt->wdgtType;
 815:Generated_Source\PSoC4/CapSense_Processing.c **** 
 816:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_ISX_SKIP_OVSMPL_SPECIFIC_NODES)
 817:Generated_Source\PSoC4/CapSense_Processing.c ****         if (0u != ptrSns->resolution)
 818:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif
 819:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 820:Generated_Source\PSoC4/CapSense_Processing.c ****         for(;snsCount-- > 0u;)
 821:Generated_Source\PSoC4/CapSense_Processing.c ****         {
 822:Generated_Source\PSoC4/CapSense_Processing.c ****             #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
 823:Generated_Source\PSoC4/CapSense_Processing.c ****                 CapSense_FtRunEnabledFiltersInternal(fltrHistV, ptrSns, widgetType);
 824:Generated_Source\PSoC4/CapSense_Processing.c ****             #endif /* #if (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
 825:Generated_Source\PSoC4/CapSense_Processing.c **** 
 826:Generated_Source\PSoC4/CapSense_Processing.c ****             result = CapSense_FtUpdateBaseline(ptrRamWdgt, ptrSns, widgetType);
 827:Generated_Source\PSoC4/CapSense_Processing.c **** 
 828:Generated_Source\PSoC4/CapSense_Processing.c ****             #if (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN)
 829:Generated_Source\PSoC4/CapSense_Processing.c ****                 if (CYRET_SUCCESS != result)
 830:Generated_Source\PSoC4/CapSense_Processing.c ****                 {
 831:Generated_Source\PSoC4/CapSense_Processing.c ****                     result = CapSense_PROCESS_BASELINE_FAILED;
 832:Generated_Source\PSoC4/CapSense_Processing.c ****                 }
 833:Generated_Source\PSoC4/CapSense_Processing.c ****             #endif /* (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN) */
 834:Generated_Source\PSoC4/CapSense_Processing.c **** 
 835:Generated_Source\PSoC4/CapSense_Processing.c ****             CapSense_DpUpdateDifferences(ptrRamWdgt, ptrSns);
 836:Generated_Source\PSoC4/CapSense_Processing.c ****             ptrSns++;
 837:Generated_Source\PSoC4/CapSense_Processing.c **** 
 838:Generated_Source\PSoC4/CapSense_Processing.c ****             #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
 839:Generated_Source\PSoC4/CapSense_Processing.c ****                 CapSense_INC_FLTR_OBJ_VARIANT(0u, fltrHistV);
 840:Generated_Source\PSoC4/CapSense_Processing.c ****             #endif /* #if (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
 841:Generated_Source\PSoC4/CapSense_Processing.c ****         }
 842:Generated_Source\PSoC4/CapSense_Processing.c ****     }
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 18


 843:Generated_Source\PSoC4/CapSense_Processing.c **** 
 844:Generated_Source\PSoC4/CapSense_Processing.c ****     return result;
 845:Generated_Source\PSoC4/CapSense_Processing.c **** }
 846:Generated_Source\PSoC4/CapSense_Processing.c **** 
 847:Generated_Source\PSoC4/CapSense_Processing.c **** /*******************************************************************************
 848:Generated_Source\PSoC4/CapSense_Processing.c **** * Function Name: CapSense_DpProcessIsxSensorRawCountsExt
 849:Generated_Source\PSoC4/CapSense_Processing.c **** ****************************************************************************//**
 850:Generated_Source\PSoC4/CapSense_Processing.c **** *
 851:Generated_Source\PSoC4/CapSense_Processing.c **** * \brief
 852:Generated_Source\PSoC4/CapSense_Processing.c **** *   Performs customized processing of the ISX sensor raw counts.
 853:Generated_Source\PSoC4/CapSense_Processing.c **** *
 854:Generated_Source\PSoC4/CapSense_Processing.c **** * \details
 855:Generated_Source\PSoC4/CapSense_Processing.c **** *   Performs customized processing of the ISX sensor raw counts.
 856:Generated_Source\PSoC4/CapSense_Processing.c **** *
 857:Generated_Source\PSoC4/CapSense_Processing.c **** *   If all bits are set at once the default processing order will take place.
 858:Generated_Source\PSoC4/CapSense_Processing.c **** *   For the custom order this API can be called multiple times and execute one task at a time.
 859:Generated_Source\PSoC4/CapSense_Processing.c **** *
 860:Generated_Source\PSoC4/CapSense_Processing.c **** * \param ptrFlashWdgt The pointer to the Flash Widget Object.
 861:Generated_Source\PSoC4/CapSense_Processing.c **** * \param ptrSns       The pointer to the specific RAM Sensor Object.
 862:Generated_Source\PSoC4/CapSense_Processing.c **** * \param fltrHistV    The pointer to the Filter History Object in RAM associated with specific sens
 863:Generated_Source\PSoC4/CapSense_Processing.c **** * \param mode         The bit-mask with the data processing tasks to be executed.
 864:Generated_Source\PSoC4/CapSense_Processing.c **** *   The mode parameters can take the following values:
 865:Generated_Source\PSoC4/CapSense_Processing.c **** *    - CapSense_PROCESS_FILTER     (0x01) Run Firmware Filter
 866:Generated_Source\PSoC4/CapSense_Processing.c **** *    - CapSense_PROCESS_BASELINE   (0x02) Update Baselines
 867:Generated_Source\PSoC4/CapSense_Processing.c **** *    - CapSense_PROCESS_DIFFCOUNTS (0x04) Update Difference Counts
 868:Generated_Source\PSoC4/CapSense_Processing.c **** *    - CapSense_PROCESS_ALL               Execute all tasks
 869:Generated_Source\PSoC4/CapSense_Processing.c **** *
 870:Generated_Source\PSoC4/CapSense_Processing.c **** * \return
 871:Generated_Source\PSoC4/CapSense_Processing.c **** *  Returns the status of the specified sensor processing operation:
 872:Generated_Source\PSoC4/CapSense_Processing.c **** *  - CYRET_SUCCESS if operation was successfully completed;
 873:Generated_Source\PSoC4/CapSense_Processing.c **** *  - CapSense_PROCESS_BASELINE_FAILED if baseline processing of any
 874:Generated_Source\PSoC4/CapSense_Processing.c **** *    sensor of the specified widget failed. The result is concatenated with the index
 875:Generated_Source\PSoC4/CapSense_Processing.c **** *    of failed sensor.
 876:Generated_Source\PSoC4/CapSense_Processing.c **** *
 877:Generated_Source\PSoC4/CapSense_Processing.c **** *******************************************************************************/
 878:Generated_Source\PSoC4/CapSense_Processing.c **** uint32 CapSense_DpProcessIsxSensorRawCountsExt(
 879:Generated_Source\PSoC4/CapSense_Processing.c ****                 CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt,
 880:Generated_Source\PSoC4/CapSense_Processing.c ****                 CapSense_RAM_SNS_STRUCT *ptrSns,
 881:Generated_Source\PSoC4/CapSense_Processing.c ****                 CapSense_PTR_FILTER_VARIANT fltrHistV,
 882:Generated_Source\PSoC4/CapSense_Processing.c ****                 uint32 mode)
 883:Generated_Source\PSoC4/CapSense_Processing.c **** {
 884:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32  result = CYRET_SUCCESS;
 885:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32  widgetType;
 886:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrRamWdgt;
 887:Generated_Source\PSoC4/CapSense_Processing.c **** 
 888:Generated_Source\PSoC4/CapSense_Processing.c ****     widgetType = ptrFlashWdgt->wdgtType;
 889:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrRamWdgt = ptrFlashWdgt->ptr2WdgtRam;
 890:Generated_Source\PSoC4/CapSense_Processing.c **** 
 891:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
 892:Generated_Source\PSoC4/CapSense_Processing.c ****         if (0u != (mode & CapSense_PROCESS_FILTER))
 893:Generated_Source\PSoC4/CapSense_Processing.c ****         {
 894:Generated_Source\PSoC4/CapSense_Processing.c ****             CapSense_FtRunEnabledFiltersInternal(fltrHistV, ptrSns, widgetType);
 895:Generated_Source\PSoC4/CapSense_Processing.c ****         }
 896:Generated_Source\PSoC4/CapSense_Processing.c ****     #else
 897:Generated_Source\PSoC4/CapSense_Processing.c ****         (void)fltrHistV; /* This parameter is unused in such configurations */
 898:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
 899:Generated_Source\PSoC4/CapSense_Processing.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 19


 900:Generated_Source\PSoC4/CapSense_Processing.c ****     if (0u != (mode & CapSense_PROCESS_BASELINE))
 901:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 902:Generated_Source\PSoC4/CapSense_Processing.c ****         result = CapSense_FtUpdateBaseline(ptrRamWdgt, ptrSns, widgetType);
 903:Generated_Source\PSoC4/CapSense_Processing.c ****     }
 904:Generated_Source\PSoC4/CapSense_Processing.c **** 
 905:Generated_Source\PSoC4/CapSense_Processing.c ****     if (0u != (mode & CapSense_PROCESS_DIFFCOUNTS))
 906:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 907:Generated_Source\PSoC4/CapSense_Processing.c ****         CapSense_DpUpdateDifferences(ptrRamWdgt, ptrSns);
 908:Generated_Source\PSoC4/CapSense_Processing.c ****     }
 909:Generated_Source\PSoC4/CapSense_Processing.c ****     return result;
 910:Generated_Source\PSoC4/CapSense_Processing.c **** }
 911:Generated_Source\PSoC4/CapSense_Processing.c **** 
 912:Generated_Source\PSoC4/CapSense_Processing.c **** 
 913:Generated_Source\PSoC4/CapSense_Processing.c **** /*******************************************************************************
 914:Generated_Source\PSoC4/CapSense_Processing.c **** * Function Name: CapSense_DpProcessIsxWidgetStatus
 915:Generated_Source\PSoC4/CapSense_Processing.c **** ****************************************************************************//**
 916:Generated_Source\PSoC4/CapSense_Processing.c **** *
 917:Generated_Source\PSoC4/CapSense_Processing.c **** * \brief
 918:Generated_Source\PSoC4/CapSense_Processing.c **** *   Updates the status of the ISX widget in the Data Structure.
 919:Generated_Source\PSoC4/CapSense_Processing.c **** *
 920:Generated_Source\PSoC4/CapSense_Processing.c **** * \details
 921:Generated_Source\PSoC4/CapSense_Processing.c **** *  This API determines the type of widget and runs the appropriate function
 922:Generated_Source\PSoC4/CapSense_Processing.c **** *  that implements the status update algorithm for this type of widget.
 923:Generated_Source\PSoC4/CapSense_Processing.c **** *
 924:Generated_Source\PSoC4/CapSense_Processing.c **** *  When the widget-specific processing completes this API updates the snsStatus
 925:Generated_Source\PSoC4/CapSense_Processing.c **** *  and wdgtStatus registers in the data structure. The wdgtStatus register
 926:Generated_Source\PSoC4/CapSense_Processing.c **** *  is a bitmask were each bit corresponds to the specific widget identified by
 927:Generated_Source\PSoC4/CapSense_Processing.c **** *  the widget index. When the bit is set the widget is active (touched);
 928:Generated_Source\PSoC4/CapSense_Processing.c **** *
 929:Generated_Source\PSoC4/CapSense_Processing.c **** *  Depending on the type of widget the snsStatus register may contain either
 930:Generated_Source\PSoC4/CapSense_Processing.c **** *  status of each widget node (active/non-active) or in case of the ISX Touchpad
 931:Generated_Source\PSoC4/CapSense_Processing.c **** *  is contains the number of touches. In both cases 0 means that widget is not
 932:Generated_Source\PSoC4/CapSense_Processing.c **** *  active.
 933:Generated_Source\PSoC4/CapSense_Processing.c **** *
 934:Generated_Source\PSoC4/CapSense_Processing.c **** * \param wdgtId       The widget index number.
 935:Generated_Source\PSoC4/CapSense_Processing.c **** * \param ptrFlashWdgt The pointer to the Flash Widget Object.
 936:Generated_Source\PSoC4/CapSense_Processing.c **** *
 937:Generated_Source\PSoC4/CapSense_Processing.c **** *******************************************************************************/
 938:Generated_Source\PSoC4/CapSense_Processing.c **** void CapSense_DpProcessIsxWidgetStatus(uint32 wdgtId, CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt)
 939:Generated_Source\PSoC4/CapSense_Processing.c **** {
 940:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 sensorStatus;
 941:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 wdStatusIndex;
 942:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 wdStatusMask;
 943:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_WD_TYPE_ENUM widgetType;
 944:Generated_Source\PSoC4/CapSense_Processing.c **** 
 945:Generated_Source\PSoC4/CapSense_Processing.c ****     widgetType = (CapSense_WD_TYPE_ENUM)ptrFlashWdgt->wdgtType;
 946:Generated_Source\PSoC4/CapSense_Processing.c ****     sensorStatus = CapSense_dsRam.snsStatus[wdgtId];
 947:Generated_Source\PSoC4/CapSense_Processing.c **** 
 948:Generated_Source\PSoC4/CapSense_Processing.c ****     switch (widgetType)
 949:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 950:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_PROXIMITY_WIDGET_EN)
 951:Generated_Source\PSoC4/CapSense_Processing.c ****         case CapSense_WD_PROXIMITY_E:
 952:Generated_Source\PSoC4/CapSense_Processing.c ****             sensorStatus = CapSense_DpProcessProximity(sensorStatus, ptrFlashWdgt);
 953:Generated_Source\PSoC4/CapSense_Processing.c ****             break;
 954:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_Proximity_WIDGET_EN) */
 955:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_ENCODERDIAL_WIDGET_EN)
 956:Generated_Source\PSoC4/CapSense_Processing.c ****         case CapSense_WD_ENCODERDIAL_E:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 20


 957:Generated_Source\PSoC4/CapSense_Processing.c ****             sensorStatus = CapSense_DpProcessEncoderDial(sensorStatus, ptrFlashWdgt);
 958:Generated_Source\PSoC4/CapSense_Processing.c ****             break;
 959:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_Proximity_WIDGET_EN) */
 960:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_BUTTON_WIDGET_EN)
 961:Generated_Source\PSoC4/CapSense_Processing.c ****         case CapSense_WD_BUTTON_E:
 962:Generated_Source\PSoC4/CapSense_Processing.c ****             sensorStatus = CapSense_DpProcessButton(sensorStatus, ptrFlashWdgt);
 963:Generated_Source\PSoC4/CapSense_Processing.c ****             break;
 964:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_Proximity_WIDGET_EN) */
 965:Generated_Source\PSoC4/CapSense_Processing.c **** 
 966:Generated_Source\PSoC4/CapSense_Processing.c ****     default:
 967:Generated_Source\PSoC4/CapSense_Processing.c ****         CYASSERT(0u);
 968:Generated_Source\PSoC4/CapSense_Processing.c ****         break;
 969:Generated_Source\PSoC4/CapSense_Processing.c ****     }
 970:Generated_Source\PSoC4/CapSense_Processing.c **** 
 971:Generated_Source\PSoC4/CapSense_Processing.c ****     /* Update sensor status in the data structure */
 972:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_dsRam.snsStatus[wdgtId] = (CapSense_SNS_STS_TYPE)sensorStatus;
 973:Generated_Source\PSoC4/CapSense_Processing.c **** 
 974:Generated_Source\PSoC4/CapSense_Processing.c ****     /* The next two lines calculate index and bitmask of the widget status bit in the wdgtStatus ar
 975:Generated_Source\PSoC4/CapSense_Processing.c ****     wdStatusIndex = CapSense_GET_WDGT_STATUS_INDEX(wdgtId);
 976:Generated_Source\PSoC4/CapSense_Processing.c ****     wdStatusMask = CapSense_GET_WDGT_STATUS_MASK(wdgtId);
 977:Generated_Source\PSoC4/CapSense_Processing.c **** 
 978:Generated_Source\PSoC4/CapSense_Processing.c ****     /* Check if there are active sensors and update widget status accordingly */
 979:Generated_Source\PSoC4/CapSense_Processing.c ****     if (0u == sensorStatus)
 980:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 981:Generated_Source\PSoC4/CapSense_Processing.c ****         CapSense_dsRam.wdgtStatus[wdStatusIndex] &= ~wdStatusMask;
 982:Generated_Source\PSoC4/CapSense_Processing.c ****     }
 983:Generated_Source\PSoC4/CapSense_Processing.c ****     else
 984:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 985:Generated_Source\PSoC4/CapSense_Processing.c ****         CapSense_dsRam.wdgtStatus[wdStatusIndex] |= wdStatusMask;
 986:Generated_Source\PSoC4/CapSense_Processing.c ****     }
 987:Generated_Source\PSoC4/CapSense_Processing.c **** }
 988:Generated_Source\PSoC4/CapSense_Processing.c **** #endif /* #if CapSense_TOTAL_ISX_WIDGETS */
 989:Generated_Source\PSoC4/CapSense_Processing.c **** 
 990:Generated_Source\PSoC4/CapSense_Processing.c **** #if (0u != CapSense_TOTAL_CSD_WIDGETS)
 991:Generated_Source\PSoC4/CapSense_Processing.c **** /*******************************************************************************
 992:Generated_Source\PSoC4/CapSense_Processing.c **** * Function Name: CapSense_DpProcessCsdWidgetRawCounts
 993:Generated_Source\PSoC4/CapSense_Processing.c **** ****************************************************************************//**
 994:Generated_Source\PSoC4/CapSense_Processing.c **** *
 995:Generated_Source\PSoC4/CapSense_Processing.c **** * \brief
 996:Generated_Source\PSoC4/CapSense_Processing.c **** *   Performs default processing for the CSD widget raw counts.
 997:Generated_Source\PSoC4/CapSense_Processing.c **** *
 998:Generated_Source\PSoC4/CapSense_Processing.c **** * \details
 999:Generated_Source\PSoC4/CapSense_Processing.c **** *   Performs default processing for the CSD widget raw counts:
1000:Generated_Source\PSoC4/CapSense_Processing.c **** *    - Run Filters
1001:Generated_Source\PSoC4/CapSense_Processing.c **** *    - Update Thresholds (FW Auto-tuning)
1002:Generated_Source\PSoC4/CapSense_Processing.c **** *    - Update Baselines
1003:Generated_Source\PSoC4/CapSense_Processing.c **** *    - Update Differences.
1004:Generated_Source\PSoC4/CapSense_Processing.c **** *   The process is applied to all widget's sensors.
1005:Generated_Source\PSoC4/CapSense_Processing.c **** *
1006:Generated_Source\PSoC4/CapSense_Processing.c **** * \param ptrFlashWdgt The pointer to the Flash Widget Object.
1007:Generated_Source\PSoC4/CapSense_Processing.c **** *
1008:Generated_Source\PSoC4/CapSense_Processing.c **** * \return
1009:Generated_Source\PSoC4/CapSense_Processing.c **** *  Returns the status of the specified widget processing operation:
1010:Generated_Source\PSoC4/CapSense_Processing.c **** *  - CYRET_SUCCESS if operation was successfully completed;
1011:Generated_Source\PSoC4/CapSense_Processing.c **** *  - CapSense_PROCESS_BASELINE_FAILED if baseline processing of any
1012:Generated_Source\PSoC4/CapSense_Processing.c **** *    sensor of the specified widget failed. The result is concatenated with the index
1013:Generated_Source\PSoC4/CapSense_Processing.c **** *    of failed sensor.
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 21


1014:Generated_Source\PSoC4/CapSense_Processing.c **** *
1015:Generated_Source\PSoC4/CapSense_Processing.c **** *******************************************************************************/
1016:Generated_Source\PSoC4/CapSense_Processing.c **** uint32 CapSense_DpProcessCsdWidgetRawCounts(CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt)
1017:Generated_Source\PSoC4/CapSense_Processing.c **** {
1018:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32  result = CYRET_SUCCESS;
1019:Generated_Source\PSoC4/CapSense_Processing.c **** 
1020:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN)
1021:Generated_Source\PSoC4/CapSense_Processing.c ****         uint32 bslnTstResult = CYRET_SUCCESS;
1022:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN) */
1023:Generated_Source\PSoC4/CapSense_Processing.c **** 
1024:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32  widgetType;
1025:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32  snsId;
1026:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_RAM_SNS_STRUCT *ptrSnsTmp;
1027:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrRamWdgt;
1028:Generated_Source\PSoC4/CapSense_Processing.c **** 
1029:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
1030:Generated_Source\PSoC4/CapSense_Processing.c ****         /* The noise envelope data is available only when Full CSD Auto-Tuning is enabled */
1031:Generated_Source\PSoC4/CapSense_Processing.c ****         SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT *ptrNoiseEnvelope;
1032:Generated_Source\PSoC4/CapSense_Processing.c ****         #if (CapSense_ENABLE == CapSense_PROXIMITY_WIDGET_EN)
1033:Generated_Source\PSoC4/CapSense_Processing.c ****             uint32  proximityThreshold;
1034:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* (0 != CapSense_PROXIMITY_WIDGET_EN) */
1035:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
1036:Generated_Source\PSoC4/CapSense_Processing.c **** 
1037:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
1038:Generated_Source\PSoC4/CapSense_Processing.c ****         CapSense_PTR_FILTER_VARIANT fltrHistV;
1039:Generated_Source\PSoC4/CapSense_Processing.c **** 
1040:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Determine if widget type is proximity */
1041:Generated_Source\PSoC4/CapSense_Processing.c ****         uint32 isProxWdgt = (CapSense_GET_WIDGET_TYPE(ptrFlashWdgt) == CapSense_WD_PROXIMITY_E) ? 1
1042:Generated_Source\PSoC4/CapSense_Processing.c **** 
1043:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Get pointer to the filter history object */
1044:Generated_Source\PSoC4/CapSense_Processing.c ****         fltrHistV.ptr = ptrFlashWdgt->ptr2FltrHistory;
1045:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
1046:Generated_Source\PSoC4/CapSense_Processing.c **** 
1047:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrSnsTmp = ptrFlashWdgt->ptr2SnsRam;
1048:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrRamWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdgt->ptr2WdgtRam;
1049:Generated_Source\PSoC4/CapSense_Processing.c ****     widgetType = ptrFlashWdgt->wdgtType;
1050:Generated_Source\PSoC4/CapSense_Processing.c **** 
1051:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
1052:Generated_Source\PSoC4/CapSense_Processing.c ****         ptrNoiseEnvelope = ptrFlashWdgt->ptr2NoiseEnvlp;
1053:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
1054:Generated_Source\PSoC4/CapSense_Processing.c **** 
1055:Generated_Source\PSoC4/CapSense_Processing.c ****     /* Iterate through all widget's sensors */
1056:Generated_Source\PSoC4/CapSense_Processing.c ****     for(snsId = 0u; snsId < ptrFlashWdgt->totalNumSns; snsId++)
1057:Generated_Source\PSoC4/CapSense_Processing.c ****     {
1058:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Run all enabled filter on specified widget's sensor */
1059:Generated_Source\PSoC4/CapSense_Processing.c ****         #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
1060:Generated_Source\PSoC4/CapSense_Processing.c ****             CapSense_FtRunEnabledFiltersInternal(fltrHistV, ptrSnsTmp, widgetType);
1061:Generated_Source\PSoC4/CapSense_Processing.c ****             #if (CapSense_ALP_FILTER_EN)
1062:Generated_Source\PSoC4/CapSense_Processing.c ****                 CapSense_ConfigRunALPInternal(fltrHistV, ptrRamWdgt, ptrSnsTmp, widgetType);
1063:Generated_Source\PSoC4/CapSense_Processing.c ****             #endif
1064:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* #if (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
1065:Generated_Source\PSoC4/CapSense_Processing.c **** 
1066:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Run auto-tuning activities */
1067:Generated_Source\PSoC4/CapSense_Processing.c ****         #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
1068:Generated_Source\PSoC4/CapSense_Processing.c ****             SmartSense_RunNoiseEnvelope(ptrSnsTmp->raw[0u], ptrRamWdgt->sigPFC, ptrNoiseEnvelope);
1069:Generated_Source\PSoC4/CapSense_Processing.c ****             CapSense_DpUpdateThresholds(ptrRamWdgt, ptrNoiseEnvelope, snsId);
1070:Generated_Source\PSoC4/CapSense_Processing.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 22


1071:Generated_Source\PSoC4/CapSense_Processing.c ****             /* Calculate Proximity Touch Threshold in SmartSense mode based on Finger Threshold and
1072:Generated_Source\PSoC4/CapSense_Processing.c ****             #if (CapSense_ENABLE == CapSense_PROXIMITY_WIDGET_EN)
1073:Generated_Source\PSoC4/CapSense_Processing.c ****                 if (CapSense_WD_PROXIMITY_E == CapSense_GET_WIDGET_TYPE(ptrFlashWdgt))
1074:Generated_Source\PSoC4/CapSense_Processing.c ****                 {
1075:Generated_Source\PSoC4/CapSense_Processing.c ****                     proximityThreshold = ((uint32)ptrRamWdgt->fingerTh * CapSense_PROX_TOUCH_COEFF)
1076:Generated_Source\PSoC4/CapSense_Processing.c ****                     if ((((1Lu) << CapSense_THRESHOLD_SIZE) - 1u) < proximityThreshold)
1077:Generated_Source\PSoC4/CapSense_Processing.c ****                     {
1078:Generated_Source\PSoC4/CapSense_Processing.c ****                         proximityThreshold = ((1Lu) << CapSense_THRESHOLD_SIZE) - 1u;
1079:Generated_Source\PSoC4/CapSense_Processing.c ****                     }
1080:Generated_Source\PSoC4/CapSense_Processing.c ****                     ((CapSense_RAM_WD_PROXIMITY_STRUCT *)ptrFlashWdgt->ptr2WdgtRam)->proxTouchTh =
1081:Generated_Source\PSoC4/CapSense_Processing.c ****                         (CapSense_THRESHOLD_TYPE)proximityThreshold;
1082:Generated_Source\PSoC4/CapSense_Processing.c ****                 }
1083:Generated_Source\PSoC4/CapSense_Processing.c ****             #endif /* (0 != CapSense_PROXIMITY_WIDGET_EN) */
1084:Generated_Source\PSoC4/CapSense_Processing.c **** 
1085:Generated_Source\PSoC4/CapSense_Processing.c ****             /* Move to next noise-envelope object */
1086:Generated_Source\PSoC4/CapSense_Processing.c ****             ptrNoiseEnvelope++;
1087:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
1088:Generated_Source\PSoC4/CapSense_Processing.c **** 
1089:Generated_Source\PSoC4/CapSense_Processing.c ****         #if (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN)
1090:Generated_Source\PSoC4/CapSense_Processing.c ****             bslnTstResult = CapSense_FtUpdateBaseline(ptrRamWdgt, ptrSnsTmp, widgetType);
1091:Generated_Source\PSoC4/CapSense_Processing.c ****             if ((CYRET_SUCCESS != bslnTstResult) && (CYRET_SUCCESS == result))
1092:Generated_Source\PSoC4/CapSense_Processing.c ****             {
1093:Generated_Source\PSoC4/CapSense_Processing.c ****                 result = snsId | CapSense_PROCESS_BASELINE_FAILED;
1094:Generated_Source\PSoC4/CapSense_Processing.c ****             }
1095:Generated_Source\PSoC4/CapSense_Processing.c ****         #else /* (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN) */
1096:Generated_Source\PSoC4/CapSense_Processing.c ****             result = CapSense_FtUpdateBaseline(ptrRamWdgt, ptrSnsTmp, widgetType);
1097:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN) */
1098:Generated_Source\PSoC4/CapSense_Processing.c **** 
1099:Generated_Source\PSoC4/CapSense_Processing.c ****         CapSense_DpUpdateDifferences(ptrRamWdgt, ptrSnsTmp);
1100:Generated_Source\PSoC4/CapSense_Processing.c **** 
1101:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Move to next sensor object */
1102:Generated_Source\PSoC4/CapSense_Processing.c ****         ptrSnsTmp++;
1103:Generated_Source\PSoC4/CapSense_Processing.c **** 
1104:Generated_Source\PSoC4/CapSense_Processing.c ****         #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
1105:Generated_Source\PSoC4/CapSense_Processing.c ****             /* Move to the next filter history object */
1106:Generated_Source\PSoC4/CapSense_Processing.c ****             CapSense_INC_FLTR_OBJ_VARIANT(isProxWdgt, fltrHistV);
1107:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* #if (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
1108:Generated_Source\PSoC4/CapSense_Processing.c ****     }
1109:Generated_Source\PSoC4/CapSense_Processing.c ****     return result;
1110:Generated_Source\PSoC4/CapSense_Processing.c **** }
1111:Generated_Source\PSoC4/CapSense_Processing.c **** 
1112:Generated_Source\PSoC4/CapSense_Processing.c **** 
1113:Generated_Source\PSoC4/CapSense_Processing.c **** /*******************************************************************************
1114:Generated_Source\PSoC4/CapSense_Processing.c **** * Function Name: CapSense_DpProcessCsdSensorRawCountsExt
1115:Generated_Source\PSoC4/CapSense_Processing.c **** ****************************************************************************//**
1116:Generated_Source\PSoC4/CapSense_Processing.c **** *
1117:Generated_Source\PSoC4/CapSense_Processing.c **** * \brief
1118:Generated_Source\PSoC4/CapSense_Processing.c **** *   Performs customized processing of the CSD sensor raw counts.
1119:Generated_Source\PSoC4/CapSense_Processing.c **** *
1120:Generated_Source\PSoC4/CapSense_Processing.c **** * \details
1121:Generated_Source\PSoC4/CapSense_Processing.c **** *   Performs customized processing of the CSD sensor raw counts.
1122:Generated_Source\PSoC4/CapSense_Processing.c **** *
1123:Generated_Source\PSoC4/CapSense_Processing.c **** *   Note that this API updates data associated only with the sensor. It cannot be used to update
1124:Generated_Source\PSoC4/CapSense_Processing.c **** *   widget status.
1125:Generated_Source\PSoC4/CapSense_Processing.c **** *
1126:Generated_Source\PSoC4/CapSense_Processing.c **** * \param ptrFlashWdgt The pointer to the Flash widget structure.
1127:Generated_Source\PSoC4/CapSense_Processing.c **** * \param curSnsPtr    The pointer to the sensor object in RAM.
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 23


1128:Generated_Source\PSoC4/CapSense_Processing.c **** * \param fltrHistV    The pointer to the Filter History Object in RAM.
1129:Generated_Source\PSoC4/CapSense_Processing.c **** * \param mode         The bit-mask with the data processing tasks to be executed.
1130:Generated_Source\PSoC4/CapSense_Processing.c **** *   The mode parameters can take the following values:
1131:Generated_Source\PSoC4/CapSense_Processing.c **** *    - CapSense_PROCESS_FILTER     (0x01) Run Firmware Filter
1132:Generated_Source\PSoC4/CapSense_Processing.c **** *    - CapSense_PROCESS_BASELINE   (0x02) Update Baselines
1133:Generated_Source\PSoC4/CapSense_Processing.c **** *    - CapSense_PROCESS_DIFFCOUNTS (0x04) Update Difference Counts
1134:Generated_Source\PSoC4/CapSense_Processing.c **** *    - CapSense_PROCESS_CALC_NOISE (0x08) Calculate Noise (only if FW Tuning is enabled)
1135:Generated_Source\PSoC4/CapSense_Processing.c **** *    - CapSense_PROCESS_THRESHOLDS (0x10) Update Thresholds (only if FW Tuning is enabled)
1136:Generated_Source\PSoC4/CapSense_Processing.c **** *    - CapSense_PROCESS_ALL               Execute all tasks
1137:Generated_Source\PSoC4/CapSense_Processing.c **** *
1138:Generated_Source\PSoC4/CapSense_Processing.c **** * \return
1139:Generated_Source\PSoC4/CapSense_Processing.c **** *  Returns the status of the specified sensor processing operation:
1140:Generated_Source\PSoC4/CapSense_Processing.c **** *  - CYRET_SUCCESS if operation was successfully completed.
1141:Generated_Source\PSoC4/CapSense_Processing.c **** *  - CapSense_PROCESS_BASELINE_FAILED if baseline processing of any
1142:Generated_Source\PSoC4/CapSense_Processing.c **** *    sensor of the specified widget failed. The result is concatenated with the index
1143:Generated_Source\PSoC4/CapSense_Processing.c **** *    of failed sensor.
1144:Generated_Source\PSoC4/CapSense_Processing.c **** *
1145:Generated_Source\PSoC4/CapSense_Processing.c **** *******************************************************************************/
1146:Generated_Source\PSoC4/CapSense_Processing.c **** uint32 CapSense_DpProcessCsdSensorRawCountsExt(
1147:Generated_Source\PSoC4/CapSense_Processing.c ****                 CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt,
1148:Generated_Source\PSoC4/CapSense_Processing.c ****                 CapSense_RAM_SNS_STRUCT *curSnsPtr,
1149:Generated_Source\PSoC4/CapSense_Processing.c ****                 CapSense_PTR_FILTER_VARIANT fltrHistV,
1150:Generated_Source\PSoC4/CapSense_Processing.c ****                  uint32 mode)
1151:Generated_Source\PSoC4/CapSense_Processing.c **** {
1152:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 result = CYRET_SUCCESS;
1153:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32  widgetType;
1154:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrRamWdgt;
1155:Generated_Source\PSoC4/CapSense_Processing.c **** 
1156:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
1157:Generated_Source\PSoC4/CapSense_Processing.c ****         SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT *ptrNoiseEnvelope;
1158:Generated_Source\PSoC4/CapSense_Processing.c ****         #if (CapSense_ENABLE == CapSense_PROXIMITY_WIDGET_EN)
1159:Generated_Source\PSoC4/CapSense_Processing.c ****             uint32  proximityThreshold;
1160:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* (0 != CapSense_PROXIMITY_WIDGET_EN) */
1161:Generated_Source\PSoC4/CapSense_Processing.c **** 
1162:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Need to specify pointer to corresponding sensor's noise-envelope object.*/
1163:Generated_Source\PSoC4/CapSense_Processing.c ****         ptrNoiseEnvelope = ptrFlashWdgt->ptr2NoiseEnvlp;
1164:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
1165:Generated_Source\PSoC4/CapSense_Processing.c **** 
1166:Generated_Source\PSoC4/CapSense_Processing.c ****     widgetType = ptrFlashWdgt->wdgtType;
1167:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrRamWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdgt->ptr2WdgtRam;
1168:Generated_Source\PSoC4/CapSense_Processing.c **** 
1169:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
1170:Generated_Source\PSoC4/CapSense_Processing.c ****         if (0u != (mode & CapSense_PROCESS_FILTER))
1171:Generated_Source\PSoC4/CapSense_Processing.c ****         {
1172:Generated_Source\PSoC4/CapSense_Processing.c ****             CapSense_FtRunEnabledFiltersInternal(fltrHistV, curSnsPtr, widgetType);
1173:Generated_Source\PSoC4/CapSense_Processing.c ****             #if (CapSense_ALP_FILTER_EN)
1174:Generated_Source\PSoC4/CapSense_Processing.c ****                 CapSense_ConfigRunALPInternal(fltrHistV, ptrRamWdgt, curSnsPtr, widgetType);
1175:Generated_Source\PSoC4/CapSense_Processing.c ****             #endif
1176:Generated_Source\PSoC4/CapSense_Processing.c ****         }
1177:Generated_Source\PSoC4/CapSense_Processing.c ****     #else
1178:Generated_Source\PSoC4/CapSense_Processing.c ****         (void)fltrHistV; /* This parameter is unused in such configurations */
1179:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
1180:Generated_Source\PSoC4/CapSense_Processing.c **** 
1181:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
1182:Generated_Source\PSoC4/CapSense_Processing.c ****         if (0u != (mode & CapSense_PROCESS_CALC_NOISE))
1183:Generated_Source\PSoC4/CapSense_Processing.c ****         {
1184:Generated_Source\PSoC4/CapSense_Processing.c ****             SmartSense_RunNoiseEnvelope(curSnsPtr->raw[0u], ptrRamWdgt->sigPFC, ptrNoiseEnvelope);
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 24


1185:Generated_Source\PSoC4/CapSense_Processing.c ****         }
1186:Generated_Source\PSoC4/CapSense_Processing.c **** 
1187:Generated_Source\PSoC4/CapSense_Processing.c ****         if (0u != (mode & CapSense_PROCESS_THRESHOLDS))
1188:Generated_Source\PSoC4/CapSense_Processing.c ****         {
1189:Generated_Source\PSoC4/CapSense_Processing.c ****             CapSense_DpUpdateThresholds(ptrRamWdgt, ptrNoiseEnvelope, 0u);
1190:Generated_Source\PSoC4/CapSense_Processing.c **** 
1191:Generated_Source\PSoC4/CapSense_Processing.c ****             /* Calculate Proximity Touch Threshold in SmartSense mode based on Finger Threshold and
1192:Generated_Source\PSoC4/CapSense_Processing.c ****             #if (CapSense_ENABLE == CapSense_PROXIMITY_WIDGET_EN)
1193:Generated_Source\PSoC4/CapSense_Processing.c ****                 if (CapSense_WD_PROXIMITY_E == CapSense_GET_WIDGET_TYPE(ptrFlashWdgt))
1194:Generated_Source\PSoC4/CapSense_Processing.c ****                 {
1195:Generated_Source\PSoC4/CapSense_Processing.c ****                     proximityThreshold = ((uint32)ptrRamWdgt->fingerTh * CapSense_PROX_TOUCH_COEFF)
1196:Generated_Source\PSoC4/CapSense_Processing.c ****                     if ((((1Lu) << CapSense_THRESHOLD_SIZE) - 1u) < proximityThreshold)
1197:Generated_Source\PSoC4/CapSense_Processing.c ****                     {
1198:Generated_Source\PSoC4/CapSense_Processing.c ****                         proximityThreshold = ((1Lu) << CapSense_THRESHOLD_SIZE) - 1u;
1199:Generated_Source\PSoC4/CapSense_Processing.c ****                     }
1200:Generated_Source\PSoC4/CapSense_Processing.c ****                     ((CapSense_RAM_WD_PROXIMITY_STRUCT *)ptrFlashWdgt->ptr2WdgtRam)->proxTouchTh =
1201:Generated_Source\PSoC4/CapSense_Processing.c ****                         (CapSense_THRESHOLD_TYPE)proximityThreshold;
1202:Generated_Source\PSoC4/CapSense_Processing.c ****                 }
1203:Generated_Source\PSoC4/CapSense_Processing.c ****             #endif /* (0 != CapSense_PROXIMITY_WIDGET_EN) */
1204:Generated_Source\PSoC4/CapSense_Processing.c ****         }
1205:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
1206:Generated_Source\PSoC4/CapSense_Processing.c **** 
1207:Generated_Source\PSoC4/CapSense_Processing.c ****     if (0u != (mode & CapSense_PROCESS_BASELINE))
1208:Generated_Source\PSoC4/CapSense_Processing.c ****     {
1209:Generated_Source\PSoC4/CapSense_Processing.c ****         result = CapSense_FtUpdateBaseline(ptrRamWdgt, curSnsPtr, widgetType);
1210:Generated_Source\PSoC4/CapSense_Processing.c ****     }
1211:Generated_Source\PSoC4/CapSense_Processing.c **** 
1212:Generated_Source\PSoC4/CapSense_Processing.c ****     if (0u != (mode & CapSense_PROCESS_DIFFCOUNTS))
1213:Generated_Source\PSoC4/CapSense_Processing.c ****     {
1214:Generated_Source\PSoC4/CapSense_Processing.c ****         CapSense_DpUpdateDifferences(ptrRamWdgt, curSnsPtr);
1215:Generated_Source\PSoC4/CapSense_Processing.c ****     }
1216:Generated_Source\PSoC4/CapSense_Processing.c ****     return result;
1217:Generated_Source\PSoC4/CapSense_Processing.c **** }
1218:Generated_Source\PSoC4/CapSense_Processing.c **** 
1219:Generated_Source\PSoC4/CapSense_Processing.c **** /*******************************************************************************
1220:Generated_Source\PSoC4/CapSense_Processing.c **** * Function Name: CapSense_DpProcessCsdWidgetStatus
1221:Generated_Source\PSoC4/CapSense_Processing.c **** ****************************************************************************//**
1222:Generated_Source\PSoC4/CapSense_Processing.c **** *
1223:Generated_Source\PSoC4/CapSense_Processing.c **** * \brief
1224:Generated_Source\PSoC4/CapSense_Processing.c **** *  Runs the status processing of the CSD widget and updates it in the Data Structure.
1225:Generated_Source\PSoC4/CapSense_Processing.c **** *
1226:Generated_Source\PSoC4/CapSense_Processing.c **** * \details
1227:Generated_Source\PSoC4/CapSense_Processing.c **** *  This API determines the widget type and calls the appropriate low-level processing
1228:Generated_Source\PSoC4/CapSense_Processing.c **** *  function. Based on the returned results it updates the widget and sensor
1229:Generated_Source\PSoC4/CapSense_Processing.c **** *  status in the data structure. Any widget specific registers like the centroid
1230:Generated_Source\PSoC4/CapSense_Processing.c **** *  position are updated directly in the low-level processing function.
1231:Generated_Source\PSoC4/CapSense_Processing.c **** *
1232:Generated_Source\PSoC4/CapSense_Processing.c **** *  When the widget-specific processing completes this API updates the snsStatus
1233:Generated_Source\PSoC4/CapSense_Processing.c **** *  and wdgtStatus registers in the data structure. The wdgtStatus register
1234:Generated_Source\PSoC4/CapSense_Processing.c **** *  is a bitmask were each bit corresponds to the specific widget identified by
1235:Generated_Source\PSoC4/CapSense_Processing.c **** *  the widget index. When the bit is set the widget is active (touched);
1236:Generated_Source\PSoC4/CapSense_Processing.c **** *
1237:Generated_Source\PSoC4/CapSense_Processing.c **** *  The snsStatus register for CSD widgets contains status of each widget sensor
1238:Generated_Source\PSoC4/CapSense_Processing.c **** *  (active/non-active). Each bit corresponds to one sensor. In case of the
1239:Generated_Source\PSoC4/CapSense_Processing.c **** *  Proximity widget two bits are used per sensor: one for proximity status and
1240:Generated_Source\PSoC4/CapSense_Processing.c **** *  second for the touch status.
1241:Generated_Source\PSoC4/CapSense_Processing.c **** *
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 25


1242:Generated_Source\PSoC4/CapSense_Processing.c **** * \param widgetId      The widget index number.
1243:Generated_Source\PSoC4/CapSense_Processing.c **** * \param ptrFlashWdgt  The pointer to the Flash widget structure.
1244:Generated_Source\PSoC4/CapSense_Processing.c **** *
1245:Generated_Source\PSoC4/CapSense_Processing.c **** *******************************************************************************/
1246:Generated_Source\PSoC4/CapSense_Processing.c **** void CapSense_DpProcessCsdWidgetStatus(uint32 widgetId, CapSense_FLASH_WD_STRUCT const *ptrFlashWdg
1247:Generated_Source\PSoC4/CapSense_Processing.c **** {
1248:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 sensorStatus;
1249:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 wdStatusIndex;
1250:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 wdStatusMask;
1251:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_WD_TYPE_ENUM widgetType;
1252:Generated_Source\PSoC4/CapSense_Processing.c **** 
1253:Generated_Source\PSoC4/CapSense_Processing.c ****     widgetType = (CapSense_WD_TYPE_ENUM)ptrFlashWdgt->wdgtType;
1254:Generated_Source\PSoC4/CapSense_Processing.c ****     sensorStatus = CapSense_dsRam.snsStatus[widgetId];
1255:Generated_Source\PSoC4/CapSense_Processing.c **** 
1256:Generated_Source\PSoC4/CapSense_Processing.c ****     switch (widgetType)
1257:Generated_Source\PSoC4/CapSense_Processing.c ****     {
1258:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_BUTTON_WIDGET_EN)
1259:Generated_Source\PSoC4/CapSense_Processing.c ****         case CapSense_WD_BUTTON_E:
1260:Generated_Source\PSoC4/CapSense_Processing.c ****             sensorStatus = CapSense_DpProcessButton(sensorStatus, ptrFlashWdgt);
1261:Generated_Source\PSoC4/CapSense_Processing.c ****             break;
1262:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_BUTTON_WIDGET_EN) */
1263:Generated_Source\PSoC4/CapSense_Processing.c **** 
1264:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_SLIDER_WIDGET_EN)
1265:Generated_Source\PSoC4/CapSense_Processing.c ****         case CapSense_WD_LINEAR_SLIDER_E:
1266:Generated_Source\PSoC4/CapSense_Processing.c ****         case CapSense_WD_RADIAL_SLIDER_E:
1267:Generated_Source\PSoC4/CapSense_Processing.c ****             sensorStatus = CapSense_DpProcessSlider(sensorStatus, ptrFlashWdgt);
1268:Generated_Source\PSoC4/CapSense_Processing.c ****             break;
1269:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_SLIDER_WIDGET_EN) */
1270:Generated_Source\PSoC4/CapSense_Processing.c **** 
1271:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_CSD_MATRIX_WIDGET_EN)
1272:Generated_Source\PSoC4/CapSense_Processing.c ****         case CapSense_WD_MATRIX_BUTTON_E:
1273:Generated_Source\PSoC4/CapSense_Processing.c ****             sensorStatus = CapSense_DpProcessCsdMatrix(sensorStatus, ptrFlashWdgt);
1274:Generated_Source\PSoC4/CapSense_Processing.c ****             break;
1275:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_CSD_MATRIX_WIDGET_EN) */
1276:Generated_Source\PSoC4/CapSense_Processing.c **** 
1277:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_CSD_TOUCHPAD_WIDGET_EN)
1278:Generated_Source\PSoC4/CapSense_Processing.c ****         case CapSense_WD_TOUCHPAD_E:
1279:Generated_Source\PSoC4/CapSense_Processing.c ****             sensorStatus = CapSense_DpProcessCsdTouchpad(sensorStatus, ptrFlashWdgt);
1280:Generated_Source\PSoC4/CapSense_Processing.c ****             #if (0u != CapSense_BALLISTIC_MULTIPLIER_EN)
1281:Generated_Source\PSoC4/CapSense_Processing.c ****                 CapSense_RunBallisticMultiplier(widgetId);
1282:Generated_Source\PSoC4/CapSense_Processing.c ****             #endif /* (0u != CapSense_BALLISTIC_MULTIPLIER_EN) */
1283:Generated_Source\PSoC4/CapSense_Processing.c ****             break;
1284:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1285:Generated_Source\PSoC4/CapSense_Processing.c **** 
1286:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_PROXIMITY_WIDGET_EN)
1287:Generated_Source\PSoC4/CapSense_Processing.c ****         case CapSense_WD_PROXIMITY_E:
1288:Generated_Source\PSoC4/CapSense_Processing.c ****             sensorStatus = CapSense_DpProcessProximity(sensorStatus, ptrFlashWdgt);
1289:Generated_Source\PSoC4/CapSense_Processing.c ****             break;
1290:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_PROXIMITY_WIDGET_EN) */
1291:Generated_Source\PSoC4/CapSense_Processing.c **** 
1292:Generated_Source\PSoC4/CapSense_Processing.c ****     default:
1293:Generated_Source\PSoC4/CapSense_Processing.c ****         CYASSERT(0u);
1294:Generated_Source\PSoC4/CapSense_Processing.c ****         break;
1295:Generated_Source\PSoC4/CapSense_Processing.c ****     }
1296:Generated_Source\PSoC4/CapSense_Processing.c **** 
1297:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_dsRam.snsStatus[widgetId] = (CapSense_SNS_STS_TYPE)sensorStatus;
1298:Generated_Source\PSoC4/CapSense_Processing.c **** 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 26


1299:Generated_Source\PSoC4/CapSense_Processing.c ****     /* The next two lines calculate index and bitmask of the widget status bit in the wdgtStatus ar
1300:Generated_Source\PSoC4/CapSense_Processing.c ****     wdStatusIndex = CapSense_GET_WDGT_STATUS_INDEX(widgetId);
1301:Generated_Source\PSoC4/CapSense_Processing.c ****     wdStatusMask = CapSense_GET_WDGT_STATUS_MASK(widgetId);
1302:Generated_Source\PSoC4/CapSense_Processing.c **** 
1303:Generated_Source\PSoC4/CapSense_Processing.c ****     /* Check if there are active sensors and update widget status accordingly */
1304:Generated_Source\PSoC4/CapSense_Processing.c ****     if (0u == sensorStatus)
1305:Generated_Source\PSoC4/CapSense_Processing.c ****     {
1306:Generated_Source\PSoC4/CapSense_Processing.c ****         CapSense_dsRam.wdgtStatus[wdStatusIndex] &= ~wdStatusMask;
1307:Generated_Source\PSoC4/CapSense_Processing.c ****     }
1308:Generated_Source\PSoC4/CapSense_Processing.c ****     else
1309:Generated_Source\PSoC4/CapSense_Processing.c ****     {
1310:Generated_Source\PSoC4/CapSense_Processing.c ****         CapSense_dsRam.wdgtStatus[wdStatusIndex] |= wdStatusMask;
1311:Generated_Source\PSoC4/CapSense_Processing.c ****     }
1312:Generated_Source\PSoC4/CapSense_Processing.c **** }
1313:Generated_Source\PSoC4/CapSense_Processing.c **** #endif /* #if (0u != CapSense_TOTAL_CSD_WIDGETS) */
1314:Generated_Source\PSoC4/CapSense_Processing.c **** 
1315:Generated_Source\PSoC4/CapSense_Processing.c **** 
1316:Generated_Source\PSoC4/CapSense_Processing.c **** #if (0 != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
1317:Generated_Source\PSoC4/CapSense_Processing.c **** /*******************************************************************************
1318:Generated_Source\PSoC4/CapSense_Processing.c **** * Function Name: CapSense_DpUpdateThresholds
1319:Generated_Source\PSoC4/CapSense_Processing.c **** ****************************************************************************//**
1320:Generated_Source\PSoC4/CapSense_Processing.c **** *
1321:Generated_Source\PSoC4/CapSense_Processing.c **** * \brief
1322:Generated_Source\PSoC4/CapSense_Processing.c **** *   Updates noise and finger thresholds for a specified widget.
1323:Generated_Source\PSoC4/CapSense_Processing.c **** *
1324:Generated_Source\PSoC4/CapSense_Processing.c **** * \details
1325:Generated_Source\PSoC4/CapSense_Processing.c **** *   Updates noise and finger thresholds for a specified widget.
1326:Generated_Source\PSoC4/CapSense_Processing.c **** *   This algorithm is a part of Auto-tuning feature.
1327:Generated_Source\PSoC4/CapSense_Processing.c **** *
1328:Generated_Source\PSoC4/CapSense_Processing.c **** * \param ptrRamWdgt       The pointer to the RAM widget object.
1329:Generated_Source\PSoC4/CapSense_Processing.c **** * \param ptrNoiseEnvelope The pointer to the noise-envelope object in RAM.
1330:Generated_Source\PSoC4/CapSense_Processing.c **** * \param startFlag        The flag indicates when new widget is processed.
1331:Generated_Source\PSoC4/CapSense_Processing.c **** *
1332:Generated_Source\PSoC4/CapSense_Processing.c **** *******************************************************************************/
1333:Generated_Source\PSoC4/CapSense_Processing.c **** void CapSense_DpUpdateThresholds(CapSense_RAM_WD_BASE_STRUCT *ptrRamWdgt,
1334:Generated_Source\PSoC4/CapSense_Processing.c ****                                          SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT *ptrNoiseEnvelope,
1335:Generated_Source\PSoC4/CapSense_Processing.c ****                                          uint32 startFlag)
1336:Generated_Source\PSoC4/CapSense_Processing.c **** {
1337:Generated_Source\PSoC4/CapSense_Processing.c ****     SMARTSENSE_UPDATE_THRESHOLDS_STRUCT thresholds;
1338:Generated_Source\PSoC4/CapSense_Processing.c ****     SMARTSENSE_UPDATE_THRESHOLDS_STRUCT *ptrThresholds = &thresholds;
1339:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrThresholds->fingerTh = ptrRamWdgt->fingerTh;
1340:Generated_Source\PSoC4/CapSense_Processing.c **** 
1341:Generated_Source\PSoC4/CapSense_Processing.c ****     SmartSense_UpdateThresholds(ptrNoiseEnvelope, ptrThresholds, ptrRamWdgt->sigPFC, startFlag);
1342:Generated_Source\PSoC4/CapSense_Processing.c **** 
1343:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrRamWdgt->fingerTh = ptrThresholds->fingerTh;
1344:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrRamWdgt->noiseTh = ptrThresholds->noiseTh;
1345:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrRamWdgt->nNoiseTh = ptrThresholds->nNoiseTh;
1346:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrRamWdgt->hysteresis = ptrThresholds->hysteresis;
1347:Generated_Source\PSoC4/CapSense_Processing.c **** }
1348:Generated_Source\PSoC4/CapSense_Processing.c **** #endif /* #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
1349:Generated_Source\PSoC4/CapSense_Processing.c **** 
1350:Generated_Source\PSoC4/CapSense_Processing.c **** 
1351:Generated_Source\PSoC4/CapSense_Processing.c **** /*******************************************************************************
1352:Generated_Source\PSoC4/CapSense_Processing.c **** * Function Name: CapSense_DpUpdateDifferences
1353:Generated_Source\PSoC4/CapSense_Processing.c **** ****************************************************************************//**
1354:Generated_Source\PSoC4/CapSense_Processing.c **** *
1355:Generated_Source\PSoC4/CapSense_Processing.c **** * \brief
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 27


1356:Generated_Source\PSoC4/CapSense_Processing.c **** *   Calculates new difference values.
1357:Generated_Source\PSoC4/CapSense_Processing.c **** *   Also, executes the multi-frequency scan algorithm if it is enabled.
1358:Generated_Source\PSoC4/CapSense_Processing.c **** *
1359:Generated_Source\PSoC4/CapSense_Processing.c **** * \details
1360:Generated_Source\PSoC4/CapSense_Processing.c **** *   This API calculates the difference between the baseline and raw counts.
1361:Generated_Source\PSoC4/CapSense_Processing.c **** *   If the difference is positive (raw > baseline), and higher than the widget
1362:Generated_Source\PSoC4/CapSense_Processing.c **** *   noise threshold, it is saved into the data structure for further processing.
1363:Generated_Source\PSoC4/CapSense_Processing.c **** *   Otherwise the difference is set to zero. The final difference value is saved
1364:Generated_Source\PSoC4/CapSense_Processing.c **** *   with the subtracted noise threshold value.
1365:Generated_Source\PSoC4/CapSense_Processing.c **** *
1366:Generated_Source\PSoC4/CapSense_Processing.c **** *   If the multi-frequency scan algorithm is enabled, the difference is calculated
1367:Generated_Source\PSoC4/CapSense_Processing.c **** *   for the three sets of data available for each sensor. Then
1368:Generated_Source\PSoC4/CapSense_Processing.c **** *   the median filter selects the final difference value.
1369:Generated_Source\PSoC4/CapSense_Processing.c **** *
1370:Generated_Source\PSoC4/CapSense_Processing.c **** * \param ptrRamWdgt The pointer to the RAR Widget Object.
1371:Generated_Source\PSoC4/CapSense_Processing.c **** * \param curSnsPtr  The pointer to the sensor object in RAM.
1372:Generated_Source\PSoC4/CapSense_Processing.c **** *
1373:Generated_Source\PSoC4/CapSense_Processing.c **** *******************************************************************************/
1374:Generated_Source\PSoC4/CapSense_Processing.c **** void CapSense_DpUpdateDifferences(
1375:Generated_Source\PSoC4/CapSense_Processing.c ****                         CapSense_RAM_WD_BASE_STRUCT *ptrRamWdgt,
1376:Generated_Source\PSoC4/CapSense_Processing.c ****                         CapSense_RAM_SNS_STRUCT *curSnsPtr)
1377:Generated_Source\PSoC4/CapSense_Processing.c **** {
 125              		.loc 1 1377 0
 126              		.cfi_startproc
 127              		@ args = 0, pretend = 0, frame = 0
 128              		@ frame_needed = 0, uses_anonymous_args = 0
 129              	.LVL12:
 130 0000 10B5     		push	{r4, lr}
 131              		.cfi_def_cfa_offset 8
 132              		.cfi_offset 4, -8
 133              		.cfi_offset 14, -4
1378:Generated_Source\PSoC4/CapSense_Processing.c ****     register int32 diffValue = 0;
1379:Generated_Source\PSoC4/CapSense_Processing.c **** 
1380:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_MULTI_FREQ_SCAN_EN)
1381:Generated_Source\PSoC4/CapSense_Processing.c ****         register int32 diffValue_0 = 0;
1382:Generated_Source\PSoC4/CapSense_Processing.c ****         register int32 diffValue_2 = 0;
1383:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_MULTI_FREQ_SCAN_EN) */
1384:Generated_Source\PSoC4/CapSense_Processing.c **** 
1385:Generated_Source\PSoC4/CapSense_Processing.c ****     /* Calculate difference */
1386:Generated_Source\PSoC4/CapSense_Processing.c ****     diffValue = (int32)curSnsPtr->raw[0u] - (int32)curSnsPtr->bsln[0u];
1387:Generated_Source\PSoC4/CapSense_Processing.c **** 
1388:Generated_Source\PSoC4/CapSense_Processing.c ****     #if (0u != CapSense_MULTI_FREQ_SCAN_EN)
1389:Generated_Source\PSoC4/CapSense_Processing.c ****         diffValue_0 = (int32)curSnsPtr->raw[1u] - (int32)curSnsPtr->bsln[1u];
1390:Generated_Source\PSoC4/CapSense_Processing.c ****         diffValue_2 = (int32)curSnsPtr->raw[2u] - (int32)curSnsPtr->bsln[2u];
1391:Generated_Source\PSoC4/CapSense_Processing.c **** 
1392:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Find median and put it into [0u] element */
1393:Generated_Source\PSoC4/CapSense_Processing.c ****         if (diffValue_0 > diffValue)
1394:Generated_Source\PSoC4/CapSense_Processing.c ****         {
1395:Generated_Source\PSoC4/CapSense_Processing.c ****             register int32 swapv = diffValue_0;
1396:Generated_Source\PSoC4/CapSense_Processing.c ****             diffValue_0 = diffValue;
1397:Generated_Source\PSoC4/CapSense_Processing.c ****             diffValue = swapv;
1398:Generated_Source\PSoC4/CapSense_Processing.c ****         }
1399:Generated_Source\PSoC4/CapSense_Processing.c **** 
1400:Generated_Source\PSoC4/CapSense_Processing.c ****         if (diffValue > diffValue_2)
1401:Generated_Source\PSoC4/CapSense_Processing.c ****         {
1402:Generated_Source\PSoC4/CapSense_Processing.c ****             register int32 swapv = diffValue;
1403:Generated_Source\PSoC4/CapSense_Processing.c ****             diffValue = diffValue_2;
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 28


1404:Generated_Source\PSoC4/CapSense_Processing.c ****             diffValue_2 = swapv;
1405:Generated_Source\PSoC4/CapSense_Processing.c ****         }
1406:Generated_Source\PSoC4/CapSense_Processing.c **** 
1407:Generated_Source\PSoC4/CapSense_Processing.c ****         if (diffValue_0 > diffValue)
1408:Generated_Source\PSoC4/CapSense_Processing.c ****         {
1409:Generated_Source\PSoC4/CapSense_Processing.c ****             register int32 swapv = diffValue_0;
1410:Generated_Source\PSoC4/CapSense_Processing.c ****             diffValue_0 = diffValue;
1411:Generated_Source\PSoC4/CapSense_Processing.c ****             diffValue = swapv;
1412:Generated_Source\PSoC4/CapSense_Processing.c ****         }
1413:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_MULTI_FREQ_SCAN_EN) */
1414:Generated_Source\PSoC4/CapSense_Processing.c **** 
1415:Generated_Source\PSoC4/CapSense_Processing.c ****     curSnsPtr->diff = 0u;
 134              		.loc 1 1415 0
 135 0002 0024     		movs	r4, #0
1386:Generated_Source\PSoC4/CapSense_Processing.c **** 
 136              		.loc 1 1386 0
 137 0004 4A88     		ldrh	r2, [r1, #2]
 138 0006 0B88     		ldrh	r3, [r1]
 139              	.LVL13:
 140              		.loc 1 1415 0
 141 0008 CC80     		strh	r4, [r1, #6]
1416:Generated_Source\PSoC4/CapSense_Processing.c **** 
1417:Generated_Source\PSoC4/CapSense_Processing.c ****     if (diffValue > (int32)ptrRamWdgt->noiseTh)
 142              		.loc 1 1417 0
 143 000a 9B1A     		subs	r3, r3, r2
 144              	.LVL14:
 145 000c 0279     		ldrb	r2, [r0, #4]
 146              	.LVL15:
 147 000e 9342     		cmp	r3, r2
 148 0010 00DD     		ble	.L18
1418:Generated_Source\PSoC4/CapSense_Processing.c ****     {
1419:Generated_Source\PSoC4/CapSense_Processing.c ****         curSnsPtr->diff = (CapSense_THRESHOLD_TYPE) diffValue;
 149              		.loc 1 1419 0
 150 0012 CB80     		strh	r3, [r1, #6]
 151              	.L18:
1420:Generated_Source\PSoC4/CapSense_Processing.c ****     }
1421:Generated_Source\PSoC4/CapSense_Processing.c **** }
 152              		.loc 1 1421 0
 153              		@ sp needed
 154 0014 10BD     		pop	{r4, pc}
 155              		.cfi_endproc
 156              	.LFE5:
 157              		.size	CapSense_DpUpdateDifferences, .-CapSense_DpUpdateDifferences
 158              		.section	.text.CapSense_DpProcessCsdWidgetRawCounts,"ax",%progbits
 159              		.align	1
 160              		.global	CapSense_DpProcessCsdWidgetRawCounts
 161              		.code	16
 162              		.thumb_func
 163              		.type	CapSense_DpProcessCsdWidgetRawCounts, %function
 164              	CapSense_DpProcessCsdWidgetRawCounts:
 165              	.LFB2:
1017:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32  result = CYRET_SUCCESS;
 166              		.loc 1 1017 0
 167              		.cfi_startproc
 168              		@ args = 0, pretend = 0, frame = 16
 169              		@ frame_needed = 0, uses_anonymous_args = 0
 170              	.LVL16:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 29


 171 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 172              		.cfi_def_cfa_offset 20
 173              		.cfi_offset 4, -20
 174              		.cfi_offset 5, -16
 175              		.cfi_offset 6, -12
 176              		.cfi_offset 7, -8
 177              		.cfi_offset 14, -4
1056:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 178              		.loc 1 1056 0
 179 0002 0024     		movs	r4, #0
1017:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32  result = CYRET_SUCCESS;
 180              		.loc 1 1017 0
 181 0004 0500     		movs	r5, r0
1047:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrRamWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdgt->ptr2WdgtRam;
 182              		.loc 1 1047 0
 183 0006 8368     		ldr	r3, [r0, #8]
1017:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32  result = CYRET_SUCCESS;
 184              		.loc 1 1017 0
 185 0008 85B0     		sub	sp, sp, #20
 186              		.cfi_def_cfa_offset 40
1047:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrRamWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdgt->ptr2WdgtRam;
 187              		.loc 1 1047 0
 188 000a 0393     		str	r3, [sp, #12]
 189              	.LVL17:
1048:Generated_Source\PSoC4/CapSense_Processing.c ****     widgetType = ptrFlashWdgt->wdgtType;
 190              		.loc 1 1048 0
 191 000c 4368     		ldr	r3, [r0, #4]
 192              	.LVL18:
 193 000e C768     		ldr	r7, [r0, #12]
 194 0010 0193     		str	r3, [sp, #4]
 195              	.LVL19:
1049:Generated_Source\PSoC4/CapSense_Processing.c **** 
 196              		.loc 1 1049 0
 197 0012 837E     		ldrb	r3, [r0, #26]
 198              	.LVL20:
 199 0014 0C37     		adds	r7, r7, #12
 200 0016 0293     		str	r3, [sp, #8]
 201              	.LVL21:
1018:Generated_Source\PSoC4/CapSense_Processing.c **** 
 202              		.loc 1 1018 0
 203 0018 0094     		str	r4, [sp]
 204              	.LVL22:
 205              	.L21:
 206 001a 0A26     		movs	r6, #10
 207 001c 3800     		movs	r0, r7
 208 001e 6643     		muls	r6, r4
 209 0020 039B     		ldr	r3, [sp, #12]
 210 0022 0C38     		subs	r0, r0, #12
 211              	.LVL23:
 212 0024 9E19     		adds	r6, r3, r6
 213              	.LVL24:
1056:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 214              		.loc 1 1056 0 discriminator 1
 215 0026 2B8B     		ldrh	r3, [r5, #24]
 216 0028 9C42     		cmp	r4, r3
 217 002a 10D2     		bcs	.L23
1060:Generated_Source\PSoC4/CapSense_Processing.c ****             #if (CapSense_ALP_FILTER_EN)
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 30


 218              		.loc 1 1060 0
 219 002c 029A     		ldr	r2, [sp, #8]
 220 002e 3100     		movs	r1, r6
 221 0030 FFF7FEFF 		bl	CapSense_FtRunEnabledFiltersInternal
 222              	.LVL25:
1096:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN) */
 223              		.loc 1 1096 0
 224 0034 029A     		ldr	r2, [sp, #8]
 225 0036 3100     		movs	r1, r6
 226 0038 0198     		ldr	r0, [sp, #4]
 227 003a FFF7FEFF 		bl	CapSense_FtUpdateBaseline
 228              	.LVL26:
1099:Generated_Source\PSoC4/CapSense_Processing.c **** 
 229              		.loc 1 1099 0
 230 003e 3100     		movs	r1, r6
1096:Generated_Source\PSoC4/CapSense_Processing.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN) */
 231              		.loc 1 1096 0
 232 0040 0090     		str	r0, [sp]
 233              	.LVL27:
1099:Generated_Source\PSoC4/CapSense_Processing.c **** 
 234              		.loc 1 1099 0
 235 0042 0198     		ldr	r0, [sp, #4]
 236              	.LVL28:
 237 0044 FFF7FEFF 		bl	CapSense_DpUpdateDifferences
 238              	.LVL29:
1056:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 239              		.loc 1 1056 0
 240 0048 0134     		adds	r4, r4, #1
 241              	.LVL30:
 242 004a 0C37     		adds	r7, r7, #12
 243 004c E5E7     		b	.L21
 244              	.LVL31:
 245              	.L23:
1110:Generated_Source\PSoC4/CapSense_Processing.c **** 
 246              		.loc 1 1110 0
 247 004e 0098     		ldr	r0, [sp]
 248 0050 05B0     		add	sp, sp, #20
 249              	.LVL32:
 250              		@ sp needed
 251              	.LVL33:
 252              	.LVL34:
 253              	.LVL35:
 254 0052 F0BD     		pop	{r4, r5, r6, r7, pc}
 255              		.cfi_endproc
 256              	.LFE2:
 257              		.size	CapSense_DpProcessCsdWidgetRawCounts, .-CapSense_DpProcessCsdWidgetRawCounts
 258              		.section	.text.CapSense_DpProcessCsdSensorRawCountsExt,"ax",%progbits
 259              		.align	1
 260              		.global	CapSense_DpProcessCsdSensorRawCountsExt
 261              		.code	16
 262              		.thumb_func
 263              		.type	CapSense_DpProcessCsdSensorRawCountsExt, %function
 264              	CapSense_DpProcessCsdSensorRawCountsExt:
 265              	.LFB3:
1151:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 result = CYRET_SUCCESS;
 266              		.loc 1 1151 0
 267              		.cfi_startproc
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 31


 268              		@ args = 0, pretend = 0, frame = 8
 269              		@ frame_needed = 0, uses_anonymous_args = 0
 270              	.LVL36:
 271 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 272              		.cfi_def_cfa_offset 32
 273              		.cfi_offset 0, -32
 274              		.cfi_offset 1, -28
 275              		.cfi_offset 2, -24
 276              		.cfi_offset 4, -20
 277              		.cfi_offset 5, -16
 278              		.cfi_offset 6, -12
 279              		.cfi_offset 7, -8
 280              		.cfi_offset 14, -4
 281              	.LVL37:
1151:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 result = CYRET_SUCCESS;
 282              		.loc 1 1151 0
 283 0002 1E00     		movs	r6, r3
1167:Generated_Source\PSoC4/CapSense_Processing.c **** 
 284              		.loc 1 1167 0
 285 0004 4368     		ldr	r3, [r0, #4]
 286              	.LVL38:
1166:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrRamWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdgt->ptr2WdgtRam;
 287              		.loc 1 1166 0
 288 0006 877E     		ldrb	r7, [r0, #26]
 289              	.LVL39:
1151:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 result = CYRET_SUCCESS;
 290              		.loc 1 1151 0
 291 0008 0C00     		movs	r4, r1
 292              	.LVL40:
 293 000a 1500     		movs	r5, r2
1167:Generated_Source\PSoC4/CapSense_Processing.c **** 
 294              		.loc 1 1167 0
 295 000c 0193     		str	r3, [sp, #4]
 296              	.LVL41:
1170:Generated_Source\PSoC4/CapSense_Processing.c ****         {
 297              		.loc 1 1170 0
 298 000e F307     		lsls	r3, r6, #31
 299 0010 03D5     		bpl	.L25
 300              	.LVL42:
1172:Generated_Source\PSoC4/CapSense_Processing.c ****             #if (CapSense_ALP_FILTER_EN)
 301              		.loc 1 1172 0
 302 0012 3A00     		movs	r2, r7
 303              	.LVL43:
 304 0014 2800     		movs	r0, r5
 305              	.LVL44:
 306 0016 FFF7FEFF 		bl	CapSense_FtRunEnabledFiltersInternal
 307              	.LVL45:
 308              	.L25:
1152:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32  widgetType;
 309              		.loc 1 1152 0
 310 001a 0025     		movs	r5, #0
 311              	.LVL46:
1207:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 312              		.loc 1 1207 0
 313 001c B307     		lsls	r3, r6, #30
 314 001e 05D5     		bpl	.L26
1209:Generated_Source\PSoC4/CapSense_Processing.c ****     }
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 32


 315              		.loc 1 1209 0
 316 0020 3A00     		movs	r2, r7
 317              	.LVL47:
 318 0022 2100     		movs	r1, r4
 319 0024 0198     		ldr	r0, [sp, #4]
 320 0026 FFF7FEFF 		bl	CapSense_FtUpdateBaseline
 321              	.LVL48:
 322 002a 0500     		movs	r5, r0
 323              	.LVL49:
 324              	.L26:
1212:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 325              		.loc 1 1212 0
 326 002c 7307     		lsls	r3, r6, #29
 327 002e 03D5     		bpl	.L27
1214:Generated_Source\PSoC4/CapSense_Processing.c ****     }
 328              		.loc 1 1214 0
 329 0030 2100     		movs	r1, r4
 330 0032 0198     		ldr	r0, [sp, #4]
 331 0034 FFF7FEFF 		bl	CapSense_DpUpdateDifferences
 332              	.LVL50:
 333              	.L27:
1217:Generated_Source\PSoC4/CapSense_Processing.c **** 
 334              		.loc 1 1217 0
 335 0038 2800     		movs	r0, r5
 336              		@ sp needed
 337              	.LVL51:
 338              	.LVL52:
 339              	.LVL53:
 340              	.LVL54:
 341 003a FEBD     		pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 342              		.cfi_endproc
 343              	.LFE3:
 344              		.size	CapSense_DpProcessCsdSensorRawCountsExt, .-CapSense_DpProcessCsdSensorRawCountsExt
 345              		.section	.text.CapSense_DpProcessButton,"ax",%progbits
 346              		.align	1
 347              		.global	CapSense_DpProcessButton
 348              		.code	16
 349              		.thumb_func
 350              		.type	CapSense_DpProcessButton, %function
 351              	CapSense_DpProcessButton:
 352              	.LFB6:
1422:Generated_Source\PSoC4/CapSense_Processing.c **** 
1423:Generated_Source\PSoC4/CapSense_Processing.c **** 
1424:Generated_Source\PSoC4/CapSense_Processing.c **** #if ((0u != CapSense_BUTTON_WIDGET_EN) || (0u != CapSense_CSX_MATRIX_WIDGET_EN))
1425:Generated_Source\PSoC4/CapSense_Processing.c **** /*******************************************************************************
1426:Generated_Source\PSoC4/CapSense_Processing.c **** * Function Name: CapSense_DpProcessButton
1427:Generated_Source\PSoC4/CapSense_Processing.c **** ****************************************************************************//**
1428:Generated_Source\PSoC4/CapSense_Processing.c **** *
1429:Generated_Source\PSoC4/CapSense_Processing.c **** * \brief
1430:Generated_Source\PSoC4/CapSense_Processing.c **** *   Processes the status of the Button widget.
1431:Generated_Source\PSoC4/CapSense_Processing.c **** *
1432:Generated_Source\PSoC4/CapSense_Processing.c **** * \details
1433:Generated_Source\PSoC4/CapSense_Processing.c **** *   This API processes the status of the CSD/CSX Button widget and
1434:Generated_Source\PSoC4/CapSense_Processing.c **** *   CSX Matrix Button widget. It applies the hysteresis and de-bounce algorithm
1435:Generated_Source\PSoC4/CapSense_Processing.c **** *   to each sensor difference value. This API is expected to be called
1436:Generated_Source\PSoC4/CapSense_Processing.c **** *   after each new widget scan. If it is called multiple times for the same
1437:Generated_Source\PSoC4/CapSense_Processing.c **** *   scan data, the de-bounce algorithm will not work properly.
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 33


1438:Generated_Source\PSoC4/CapSense_Processing.c **** *
1439:Generated_Source\PSoC4/CapSense_Processing.c **** *   This API does not update any Data Structure registers
1440:Generated_Source\PSoC4/CapSense_Processing.c **** *   except the de-bounce counters.
1441:Generated_Source\PSoC4/CapSense_Processing.c **** *
1442:Generated_Source\PSoC4/CapSense_Processing.c **** * \param currStatus   The current status of the widget sensors.
1443:Generated_Source\PSoC4/CapSense_Processing.c **** * \param ptrFlashWdgt The pointer to the Flash Widget Object.
1444:Generated_Source\PSoC4/CapSense_Processing.c **** *
1445:Generated_Source\PSoC4/CapSense_Processing.c **** * \return Returns the status of the widget's sensors. Bit #0 - corresponds to Sensor #0.
1446:Generated_Source\PSoC4/CapSense_Processing.c **** *
1447:Generated_Source\PSoC4/CapSense_Processing.c **** *******************************************************************************/
1448:Generated_Source\PSoC4/CapSense_Processing.c **** uint32 CapSense_DpProcessButton(uint32 currStatus, CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt)
1449:Generated_Source\PSoC4/CapSense_Processing.c **** {
 353              		.loc 1 1449 0
 354              		.cfi_startproc
 355              		@ args = 0, pretend = 0, frame = 8
 356              		@ frame_needed = 0, uses_anonymous_args = 0
 357              	.LVL55:
 358 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 359              		.cfi_def_cfa_offset 32
 360              		.cfi_offset 0, -32
 361              		.cfi_offset 1, -28
 362              		.cfi_offset 2, -24
 363              		.cfi_offset 4, -20
 364              		.cfi_offset 5, -16
 365              		.cfi_offset 6, -12
 366              		.cfi_offset 7, -8
 367              		.cfi_offset 14, -4
1450:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 snsCnt;
1451:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 snsMask;
1452:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 newStatus;
1453:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 touchTh;
1454:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_RAM_SNS_STRUCT *ptrSnsTmp;
1455:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrRamWdgt;
1456:Generated_Source\PSoC4/CapSense_Processing.c ****     uint8 * ptrDebounceCnt;
1457:Generated_Source\PSoC4/CapSense_Processing.c **** 
1458:Generated_Source\PSoC4/CapSense_Processing.c ****     snsCnt = ptrFlashWdgt->totalNumSns;
 368              		.loc 1 1458 0
 369 0002 0B8B     		ldrh	r3, [r1, #24]
1459:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrSnsTmp = ptrFlashWdgt->ptr2SnsRam;
 370              		.loc 1 1459 0
 371 0004 8C68     		ldr	r4, [r1, #8]
1458:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrSnsTmp = ptrFlashWdgt->ptr2SnsRam;
 372              		.loc 1 1458 0
 373 0006 0193     		str	r3, [sp, #4]
 374              	.LVL56:
1460:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrRamWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdgt->ptr2WdgtRam;
1461:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrDebounceCnt = ptrFlashWdgt->ptr2DebounceArr;
1462:Generated_Source\PSoC4/CapSense_Processing.c **** 
1463:Generated_Source\PSoC4/CapSense_Processing.c ****     /* Go through all widget's sensors */
1464:Generated_Source\PSoC4/CapSense_Processing.c ****     snsMask = 1Lu;
 375              		.loc 1 1464 0
 376 0008 0123     		movs	r3, #1
 377              	.LVL57:
1460:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrRamWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdgt->ptr2WdgtRam;
 378              		.loc 1 1460 0
 379 000a 4D68     		ldr	r5, [r1, #4]
 380              	.LVL58:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 34


1461:Generated_Source\PSoC4/CapSense_Processing.c **** 
 381              		.loc 1 1461 0
 382 000c 0969     		ldr	r1, [r1, #16]
 383              	.LVL59:
 384              	.L37:
1465:Generated_Source\PSoC4/CapSense_Processing.c ****     for (; snsCnt-- > 0u; )
 385              		.loc 1 1465 0
 386 000e 019A     		ldr	r2, [sp, #4]
 387 0010 561E     		subs	r6, r2, #1
 388 0012 0196     		str	r6, [sp, #4]
 389 0014 26D3     		bcc	.L52
 390              	.LVL60:
1466:Generated_Source\PSoC4/CapSense_Processing.c ****     {
1467:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Calculate touch threshold taking into account hysteresis
1468:Generated_Source\PSoC4/CapSense_Processing.c ****            and current sensor state. */
1469:Generated_Source\PSoC4/CapSense_Processing.c ****         touchTh = (0u == (currStatus & snsMask)) ?
 391              		.loc 1 1469 0
 392 0016 1A00     		movs	r2, r3
 393 0018 6E88     		ldrh	r6, [r5, #2]
 394 001a AF79     		ldrb	r7, [r5, #6]
 395 001c B446     		mov	ip, r6
 396 001e 0240     		ands	r2, r0
1470:Generated_Source\PSoC4/CapSense_Processing.c ****                   ((uint32)ptrRamWdgt->fingerTh + ptrRamWdgt->hysteresis) :
 397              		.loc 1 1470 0
 398 0020 F61B     		subs	r6, r6, r7
 399 0022 002A     		cmp	r2, #0
 400 0024 01D1     		bne	.L39
 401              		.loc 1 1470 0 is_stmt 0 discriminator 1
 402 0026 3E00     		movs	r6, r7
 403 0028 6644     		add	r6, r6, ip
 404              	.L39:
 405              	.LVL61:
1471:Generated_Source\PSoC4/CapSense_Processing.c ****                   ((uint32)ptrRamWdgt->fingerTh - ptrRamWdgt->hysteresis);
1472:Generated_Source\PSoC4/CapSense_Processing.c **** 
1473:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Determine new potential sensor state */
1474:Generated_Source\PSoC4/CapSense_Processing.c ****         newStatus = (ptrSnsTmp->diff > touchTh) ? snsMask : 0u;
 406              		.loc 1 1474 0 is_stmt 1
 407 002a E788     		ldrh	r7, [r4, #6]
 408 002c BE42     		cmp	r6, r7
 409 002e 03D2     		bcs	.L40
 410              	.LVL62:
1475:Generated_Source\PSoC4/CapSense_Processing.c **** 
1476:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Sensor state changed ? */
1477:Generated_Source\PSoC4/CapSense_Processing.c ****         if (newStatus != (currStatus & snsMask))
 411              		.loc 1 1477 0 discriminator 4
 412 0030 9342     		cmp	r3, r2
 413 0032 0AD0     		beq	.L41
 414 0034 1A00     		movs	r2, r3
 415 0036 02E0     		b	.L46
 416              	.LVL63:
 417              	.L40:
 418              		.loc 1 1477 0 is_stmt 0
 419 0038 002A     		cmp	r2, #0
 420 003a 11D0     		beq	.L53
1474:Generated_Source\PSoC4/CapSense_Processing.c **** 
 421              		.loc 1 1474 0 is_stmt 1
 422 003c 0022     		movs	r2, #0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 35


 423              	.LVL64:
 424              	.L46:
1478:Generated_Source\PSoC4/CapSense_Processing.c ****         {
1479:Generated_Source\PSoC4/CapSense_Processing.c ****             /* Decrement de-bounce counter */
1480:Generated_Source\PSoC4/CapSense_Processing.c ****             (*ptrDebounceCnt)--;
 425              		.loc 1 1480 0
 426 003e 0E78     		ldrb	r6, [r1]
 427              	.LVL65:
 428 0040 013E     		subs	r6, r6, #1
 429 0042 F6B2     		uxtb	r6, r6
 430 0044 0E70     		strb	r6, [r1]
1481:Generated_Source\PSoC4/CapSense_Processing.c ****         }
1482:Generated_Source\PSoC4/CapSense_Processing.c **** 
1483:Generated_Source\PSoC4/CapSense_Processing.c ****         /*
1484:Generated_Source\PSoC4/CapSense_Processing.c ****         *  This piece of code has two objectives:
1485:Generated_Source\PSoC4/CapSense_Processing.c ****         *  1. Reset de-bounce counter if the sensor state did not change.
1486:Generated_Source\PSoC4/CapSense_Processing.c ****         *     (It is possible that during previous processing cycles sensor
1487:Generated_Source\PSoC4/CapSense_Processing.c ****         *     was active and de-bounce counter was decremented.)
1488:Generated_Source\PSoC4/CapSense_Processing.c ****         *  2. Set new sensor state after successful de-bounce.
1489:Generated_Source\PSoC4/CapSense_Processing.c ****         */
1490:Generated_Source\PSoC4/CapSense_Processing.c ****         if ((newStatus == (currStatus & snsMask)) || (0u == (*ptrDebounceCnt)))
 431              		.loc 1 1490 0
 432 0046 002E     		cmp	r6, #0
 433 0048 06D1     		bne	.L42
 434              	.LVL66:
 435              	.L41:
1491:Generated_Source\PSoC4/CapSense_Processing.c ****         {
1492:Generated_Source\PSoC4/CapSense_Processing.c ****             /* Set new sensor status */
1493:Generated_Source\PSoC4/CapSense_Processing.c ****             currStatus &= ~snsMask;
 436              		.loc 1 1493 0
 437 004a 9843     		bics	r0, r3
 438              	.LVL67:
1494:Generated_Source\PSoC4/CapSense_Processing.c ****             currStatus |= newStatus;
 439              		.loc 1 1494 0
 440 004c 1043     		orrs	r0, r2
 441              	.LVL68:
1495:Generated_Source\PSoC4/CapSense_Processing.c **** 
1496:Generated_Source\PSoC4/CapSense_Processing.c ****             /* Reset de-bounce counter */
1497:Generated_Source\PSoC4/CapSense_Processing.c ****             #if (0u != CapSense_OFF_DEBOUNCE_EN)
1498:Generated_Source\PSoC4/CapSense_Processing.c ****                 *ptrDebounceCnt = (0Lu == newStatus) ? ptrRamWdgt->onDebounce : ptrRamWdgt->offDebo
1499:Generated_Source\PSoC4/CapSense_Processing.c ****             #else
1500:Generated_Source\PSoC4/CapSense_Processing.c ****                 *ptrDebounceCnt = (0Lu == newStatus) ? ptrRamWdgt->onDebounce : DEFAULT_OFF_DEBOUNC
 442              		.loc 1 1500 0
 443 004e 0126     		movs	r6, #1
 444 0050 002A     		cmp	r2, #0
 445 0052 00D1     		bne	.L43
 446              	.L45:
 447              		.loc 1 1500 0 is_stmt 0 discriminator 1
 448 0054 EE79     		ldrb	r6, [r5, #7]
 449              	.L43:
 450              		.loc 1 1500 0 discriminator 4
 451 0056 0E70     		strb	r6, [r1]
 452              	.L42:
1501:Generated_Source\PSoC4/CapSense_Processing.c ****             #endif /* #if (0u != CapSense_OFF_DEBOUNCE_EN) */
1502:Generated_Source\PSoC4/CapSense_Processing.c ****         }
1503:Generated_Source\PSoC4/CapSense_Processing.c **** 
1504:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Move mask to the next sensor */
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 36


1505:Generated_Source\PSoC4/CapSense_Processing.c ****         snsMask <<= 1u;
 453              		.loc 1 1505 0 is_stmt 1
 454 0058 5B00     		lsls	r3, r3, #1
 455              	.LVL69:
1506:Generated_Source\PSoC4/CapSense_Processing.c **** 
1507:Generated_Source\PSoC4/CapSense_Processing.c ****         ptrSnsTmp++;
 456              		.loc 1 1507 0
 457 005a 0A34     		adds	r4, r4, #10
 458              	.LVL70:
1508:Generated_Source\PSoC4/CapSense_Processing.c ****         ptrDebounceCnt++;
 459              		.loc 1 1508 0
 460 005c 0131     		adds	r1, r1, #1
 461              	.LVL71:
 462 005e D6E7     		b	.L37
 463              	.LVL72:
 464              	.L53:
1493:Generated_Source\PSoC4/CapSense_Processing.c ****             currStatus |= newStatus;
 465              		.loc 1 1493 0
 466 0060 9843     		bics	r0, r3
 467              	.LVL73:
 468 0062 F7E7     		b	.L45
 469              	.LVL74:
 470              	.L52:
1509:Generated_Source\PSoC4/CapSense_Processing.c ****     }
1510:Generated_Source\PSoC4/CapSense_Processing.c **** 
1511:Generated_Source\PSoC4/CapSense_Processing.c ****     return currStatus;
1512:Generated_Source\PSoC4/CapSense_Processing.c **** }
 471              		.loc 1 1512 0
 472              		@ sp needed
 473              	.LVL75:
 474              	.LVL76:
 475 0064 FEBD     		pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 476              		.cfi_endproc
 477              	.LFE6:
 478              		.size	CapSense_DpProcessButton, .-CapSense_DpProcessButton
 479              		.section	.text.CapSense_DpProcessProximity,"ax",%progbits
 480              		.align	1
 481              		.global	CapSense_DpProcessProximity
 482              		.code	16
 483              		.thumb_func
 484              		.type	CapSense_DpProcessProximity, %function
 485              	CapSense_DpProcessProximity:
 486              	.LFB7:
1513:Generated_Source\PSoC4/CapSense_Processing.c **** #endif /* #if ((0u != CapSense_BUTTON_WIDGET_EN) || (0u != CapSense_CSX_MATRIX_WIDGET_EN)) */
1514:Generated_Source\PSoC4/CapSense_Processing.c **** 
1515:Generated_Source\PSoC4/CapSense_Processing.c **** 
1516:Generated_Source\PSoC4/CapSense_Processing.c **** #if (0u != CapSense_PROXIMITY_WIDGET_EN)
1517:Generated_Source\PSoC4/CapSense_Processing.c **** /*******************************************************************************
1518:Generated_Source\PSoC4/CapSense_Processing.c **** * Function Name: CapSense_DpProcessProximity
1519:Generated_Source\PSoC4/CapSense_Processing.c **** ****************************************************************************//**
1520:Generated_Source\PSoC4/CapSense_Processing.c **** *
1521:Generated_Source\PSoC4/CapSense_Processing.c **** * \brief
1522:Generated_Source\PSoC4/CapSense_Processing.c **** *   Processes the status of the Proximity widget.
1523:Generated_Source\PSoC4/CapSense_Processing.c **** *
1524:Generated_Source\PSoC4/CapSense_Processing.c **** * \details
1525:Generated_Source\PSoC4/CapSense_Processing.c **** *   This API processes the status of the CSD Proximity widget. It applies the
1526:Generated_Source\PSoC4/CapSense_Processing.c **** *   hysteresis and debounce algorithm to each sensor difference value.
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 37


1527:Generated_Source\PSoC4/CapSense_Processing.c **** *   The proximity and touch events are considered independently so debounce and
1528:Generated_Source\PSoC4/CapSense_Processing.c **** *   hysteresis are also applied independently.
1529:Generated_Source\PSoC4/CapSense_Processing.c **** *
1530:Generated_Source\PSoC4/CapSense_Processing.c **** *   This API is expected to be called after each new widget scan. If it is
1531:Generated_Source\PSoC4/CapSense_Processing.c **** *   called multiple times for the same scan data the debounce algorithm
1532:Generated_Source\PSoC4/CapSense_Processing.c **** *   will not work properly.
1533:Generated_Source\PSoC4/CapSense_Processing.c **** *
1534:Generated_Source\PSoC4/CapSense_Processing.c **** *   This API does not update any Data Structure registers
1535:Generated_Source\PSoC4/CapSense_Processing.c **** *   except the debounce counters.
1536:Generated_Source\PSoC4/CapSense_Processing.c **** *
1537:Generated_Source\PSoC4/CapSense_Processing.c **** * \param currStatus   The value with the current widget status.
1538:Generated_Source\PSoC4/CapSense_Processing.c **** * \param ptrFlashWdgt The pointer to the Flash Widget Object.
1539:Generated_Source\PSoC4/CapSense_Processing.c **** *
1540:Generated_Source\PSoC4/CapSense_Processing.c **** * \return
1541:Generated_Source\PSoC4/CapSense_Processing.c **** *  Returns the status of the proximity sensors. Each sensor is represented by two bits
1542:Generated_Source\PSoC4/CapSense_Processing.c **** *  that can take the following values:
1543:Generated_Source\PSoC4/CapSense_Processing.c **** *   - 00b not active
1544:Generated_Source\PSoC4/CapSense_Processing.c **** *   - 01b proximity is detected (signal is above finger threshold)
1545:Generated_Source\PSoC4/CapSense_Processing.c **** *   - 11b finger touch is detected (signal is above the touch threshold)
1546:Generated_Source\PSoC4/CapSense_Processing.c **** *
1547:Generated_Source\PSoC4/CapSense_Processing.c **** *******************************************************************************/
1548:Generated_Source\PSoC4/CapSense_Processing.c **** uint32 CapSense_DpProcessProximity(uint32 currStatus, CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt)
1549:Generated_Source\PSoC4/CapSense_Processing.c **** {
 487              		.loc 1 1549 0
 488              		.cfi_startproc
 489              		@ args = 0, pretend = 0, frame = 8
 490              		@ frame_needed = 0, uses_anonymous_args = 0
 491              	.LVL77:
 492 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 493              		.cfi_def_cfa_offset 32
 494              		.cfi_offset 0, -32
 495              		.cfi_offset 1, -28
 496              		.cfi_offset 2, -24
 497              		.cfi_offset 4, -20
 498              		.cfi_offset 5, -16
 499              		.cfi_offset 6, -12
 500              		.cfi_offset 7, -8
 501              		.cfi_offset 14, -4
 502 0002 0B8B     		ldrh	r3, [r1, #24]
1550:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 currTh;
1551:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 snsCnt;
1552:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 snsMask;
1553:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 newStatus;
1554:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 difference;
1555:Generated_Source\PSoC4/CapSense_Processing.c **** 
1556:Generated_Source\PSoC4/CapSense_Processing.c ****     uint8 *ptrDebounceCnt;
1557:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_RAM_SNS_STRUCT *ptrSnsTmp;
1558:Generated_Source\PSoC4/CapSense_Processing.c ****     CapSense_RAM_WD_PROXIMITY_STRUCT *ptrRamWdgt;
1559:Generated_Source\PSoC4/CapSense_Processing.c **** 
1560:Generated_Source\PSoC4/CapSense_Processing.c ****     /* Mask for proximity status bits. (All odd bits.) */
1561:Generated_Source\PSoC4/CapSense_Processing.c ****     const uint32 proxMask = UINT32_ODD_BITS_CONST;
1562:Generated_Source\PSoC4/CapSense_Processing.c **** 
1563:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrSnsTmp = ptrFlashWdgt->ptr2SnsRam;
1564:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrRamWdgt = (CapSense_RAM_WD_PROXIMITY_STRUCT *)ptrFlashWdgt->ptr2WdgtRam;
1565:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrDebounceCnt = ptrFlashWdgt->ptr2DebounceArr;
 503              		.loc 1 1565 0
 504 0004 0A69     		ldr	r2, [r1, #16]
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 38


 505 0006 5B00     		lsls	r3, r3, #1
 506 0008 D318     		adds	r3, r2, r3
 507 000a 0193     		str	r3, [sp, #4]
1566:Generated_Source\PSoC4/CapSense_Processing.c **** 
1567:Generated_Source\PSoC4/CapSense_Processing.c ****     /* Get number of sensors and multiply it by 2 - proximity and touch statuses per sensor. */
1568:Generated_Source\PSoC4/CapSense_Processing.c ****     snsCnt = (uint32)ptrFlashWdgt->totalNumSns << 1u;
1569:Generated_Source\PSoC4/CapSense_Processing.c **** 
1570:Generated_Source\PSoC4/CapSense_Processing.c ****     /* Go through all sensor's status bits */
1571:Generated_Source\PSoC4/CapSense_Processing.c ****     snsMask = 1Lu;
 508              		.loc 1 1571 0
 509 000c 0123     		movs	r3, #1
1563:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrRamWdgt = (CapSense_RAM_WD_PROXIMITY_STRUCT *)ptrFlashWdgt->ptr2WdgtRam;
 510              		.loc 1 1563 0
 511 000e 8F68     		ldr	r7, [r1, #8]
 512              	.LVL78:
1564:Generated_Source\PSoC4/CapSense_Processing.c ****     ptrDebounceCnt = ptrFlashWdgt->ptr2DebounceArr;
 513              		.loc 1 1564 0
 514 0010 4D68     		ldr	r5, [r1, #4]
 515              	.LVL79:
 516              	.L55:
1572:Generated_Source\PSoC4/CapSense_Processing.c ****     for (; snsCnt-- > 0u;)
 517              		.loc 1 1572 0
 518 0012 0199     		ldr	r1, [sp, #4]
 519 0014 8A42     		cmp	r2, r1
 520 0016 29D0     		beq	.L71
1573:Generated_Source\PSoC4/CapSense_Processing.c ****     {
1574:Generated_Source\PSoC4/CapSense_Processing.c ****         difference = ptrSnsTmp->diff;
 521              		.loc 1 1574 0
 522 0018 F988     		ldrh	r1, [r7, #6]
1575:Generated_Source\PSoC4/CapSense_Processing.c **** 
1576:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Determine current event (proximity - odd; touch - even) and get appropriate threshold. *
1577:Generated_Source\PSoC4/CapSense_Processing.c ****         currTh = ptrRamWdgt->fingerTh;
1578:Generated_Source\PSoC4/CapSense_Processing.c **** 
1579:Generated_Source\PSoC4/CapSense_Processing.c ****         if (0u == (snsMask & proxMask))
 523              		.loc 1 1579 0
 524 001a 154C     		ldr	r4, .L73
1574:Generated_Source\PSoC4/CapSense_Processing.c **** 
 525              		.loc 1 1574 0
 526 001c 8C46     		mov	ip, r1
 527              	.LVL80:
1577:Generated_Source\PSoC4/CapSense_Processing.c **** 
 528              		.loc 1 1577 0
 529 001e 6988     		ldrh	r1, [r5, #2]
 530              	.LVL81:
 531              		.loc 1 1579 0
 532 0020 2342     		tst	r3, r4
 533 0022 01D1     		bne	.L57
1580:Generated_Source\PSoC4/CapSense_Processing.c ****         {
1581:Generated_Source\PSoC4/CapSense_Processing.c ****             currTh = ptrRamWdgt->proxTouchTh;
 534              		.loc 1 1581 0
 535 0024 298A     		ldrh	r1, [r5, #16]
 536              	.LVL82:
1582:Generated_Source\PSoC4/CapSense_Processing.c ****             ptrSnsTmp++;
 537              		.loc 1 1582 0
 538 0026 0A37     		adds	r7, r7, #10
 539              	.LVL83:
 540              	.L57:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 39


1583:Generated_Source\PSoC4/CapSense_Processing.c ****         }
1584:Generated_Source\PSoC4/CapSense_Processing.c **** 
1585:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Calculate finger threshold applying hysteresis based on current sensor state. */
1586:Generated_Source\PSoC4/CapSense_Processing.c ****         currTh = (0u == (currStatus & snsMask)) ? (currTh + ptrRamWdgt->hysteresis) : (currTh - ptr
 541              		.loc 1 1586 0
 542 0028 1C00     		movs	r4, r3
 543 002a AE79     		ldrb	r6, [r5, #6]
 544 002c 0440     		ands	r4, r0
 545 002e 03D1     		bne	.L58
 546              	.LVL84:
1587:Generated_Source\PSoC4/CapSense_Processing.c **** 
1588:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Determine new potential sensor state before de-bounce */
1589:Generated_Source\PSoC4/CapSense_Processing.c ****         newStatus = (difference > currTh) ? snsMask : 0Lu;
 547              		.loc 1 1589 0 discriminator 1
 548 0030 7118     		adds	r1, r6, r1
 549              	.LVL85:
 550 0032 8C45     		cmp	ip, r1
 551 0034 03D8     		bhi	.L59
 552 0036 17E0     		b	.L72
 553              	.L58:
 554              	.LVL86:
 555              		.loc 1 1589 0 is_stmt 0 discriminator 2
 556 0038 891B     		subs	r1, r1, r6
 557              	.LVL87:
 558 003a 8C45     		cmp	ip, r1
 559 003c 03D9     		bls	.L67
 560              	.L59:
 561              	.LVL88:
1590:Generated_Source\PSoC4/CapSense_Processing.c **** 
1591:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Sensor state changed ? */
1592:Generated_Source\PSoC4/CapSense_Processing.c ****         if (newStatus != (currStatus & snsMask))
 562              		.loc 1 1592 0 is_stmt 1 discriminator 4
 563 003e A342     		cmp	r3, r4
 564 0040 08D0     		beq	.L62
 565 0042 1C00     		movs	r4, r3
 566 0044 00E0     		b	.L61
 567              	.LVL89:
 568              	.L67:
1589:Generated_Source\PSoC4/CapSense_Processing.c **** 
 569              		.loc 1 1589 0
 570 0046 0024     		movs	r4, #0
 571              	.L61:
 572              	.LVL90:
1593:Generated_Source\PSoC4/CapSense_Processing.c ****         {
1594:Generated_Source\PSoC4/CapSense_Processing.c ****             /* Decrement de-bounce counter */
1595:Generated_Source\PSoC4/CapSense_Processing.c ****             (*ptrDebounceCnt)--;
 573              		.loc 1 1595 0
 574 0048 1178     		ldrb	r1, [r2]
 575 004a 0139     		subs	r1, r1, #1
 576 004c C9B2     		uxtb	r1, r1
 577 004e 1170     		strb	r1, [r2]
1596:Generated_Source\PSoC4/CapSense_Processing.c ****         }
1597:Generated_Source\PSoC4/CapSense_Processing.c **** 
1598:Generated_Source\PSoC4/CapSense_Processing.c ****         /*
1599:Generated_Source\PSoC4/CapSense_Processing.c ****         *  This piece of code has two objectives:
1600:Generated_Source\PSoC4/CapSense_Processing.c ****         *  1. Reset de-bounce counter if new sensor state has not changed.
1601:Generated_Source\PSoC4/CapSense_Processing.c ****         *     (It is possible that during previous processing cycles the sensor
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 40


1602:Generated_Source\PSoC4/CapSense_Processing.c ****         *     state was different which caused de-bounce counter change.)
1603:Generated_Source\PSoC4/CapSense_Processing.c ****         *  2. Set new sensor state after successful de-bounce.
1604:Generated_Source\PSoC4/CapSense_Processing.c ****         */
1605:Generated_Source\PSoC4/CapSense_Processing.c ****         if ((newStatus == (currStatus & snsMask)) || (0u == (*ptrDebounceCnt)))
 578              		.loc 1 1605 0
 579 0050 0029     		cmp	r1, #0
 580 0052 06D1     		bne	.L63
 581              	.LVL91:
 582              	.L62:
1606:Generated_Source\PSoC4/CapSense_Processing.c ****         {
1607:Generated_Source\PSoC4/CapSense_Processing.c ****             /* Set new sensor status */
1608:Generated_Source\PSoC4/CapSense_Processing.c ****             currStatus &= ~snsMask;
 583              		.loc 1 1608 0
 584 0054 9843     		bics	r0, r3
 585              	.LVL92:
1609:Generated_Source\PSoC4/CapSense_Processing.c ****             currStatus |= newStatus;
 586              		.loc 1 1609 0
 587 0056 2043     		orrs	r0, r4
 588              	.LVL93:
1610:Generated_Source\PSoC4/CapSense_Processing.c **** 
1611:Generated_Source\PSoC4/CapSense_Processing.c ****             /* Reset de-bounce counter */
1612:Generated_Source\PSoC4/CapSense_Processing.c ****             #if (0u != CapSense_OFF_DEBOUNCE_EN)
1613:Generated_Source\PSoC4/CapSense_Processing.c ****                 *ptrDebounceCnt = (0Lu == newStatus) ? ptrRamWdgt->onDebounce : ptrRamWdgt->offDebo
1614:Generated_Source\PSoC4/CapSense_Processing.c ****             #else
1615:Generated_Source\PSoC4/CapSense_Processing.c ****                 *ptrDebounceCnt = (0Lu == newStatus) ? ptrRamWdgt->onDebounce : DEFAULT_OFF_DEBOUNC
 589              		.loc 1 1615 0
 590 0058 0121     		movs	r1, #1
 591 005a 002C     		cmp	r4, #0
 592 005c 00D1     		bne	.L64
 593              	.L66:
 594              		.loc 1 1615 0 is_stmt 0 discriminator 1
 595 005e E979     		ldrb	r1, [r5, #7]
 596              	.L64:
 597              		.loc 1 1615 0 discriminator 4
 598 0060 1170     		strb	r1, [r2]
 599              	.L63:
1616:Generated_Source\PSoC4/CapSense_Processing.c ****             #endif /* #if (0u != CapSense_OFF_DEBOUNCE_EN) */
1617:Generated_Source\PSoC4/CapSense_Processing.c ****         }
1618:Generated_Source\PSoC4/CapSense_Processing.c **** 
1619:Generated_Source\PSoC4/CapSense_Processing.c ****         ptrDebounceCnt++;
 600              		.loc 1 1619 0 is_stmt 1
 601 0062 0132     		adds	r2, r2, #1
 602              	.LVL94:
1620:Generated_Source\PSoC4/CapSense_Processing.c **** 
1621:Generated_Source\PSoC4/CapSense_Processing.c ****         /* Move sensor mask to the next sensor */
1622:Generated_Source\PSoC4/CapSense_Processing.c ****         snsMask <<= 1u;
 603              		.loc 1 1622 0
 604 0064 5B00     		lsls	r3, r3, #1
 605              	.LVL95:
 606 0066 D4E7     		b	.L55
 607              	.LVL96:
 608              	.L72:
1608:Generated_Source\PSoC4/CapSense_Processing.c ****             currStatus |= newStatus;
 609              		.loc 1 1608 0
 610 0068 9843     		bics	r0, r3
 611              	.LVL97:
 612 006a F8E7     		b	.L66
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 41


 613              	.LVL98:
 614              	.L71:
1623:Generated_Source\PSoC4/CapSense_Processing.c ****     }
1624:Generated_Source\PSoC4/CapSense_Processing.c **** 
1625:Generated_Source\PSoC4/CapSense_Processing.c ****     return currStatus;
1626:Generated_Source\PSoC4/CapSense_Processing.c **** }
 615              		.loc 1 1626 0
 616              		@ sp needed
 617              	.LVL99:
 618              	.LVL100:
 619 006c FEBD     		pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 620              	.L74:
 621 006e C046     		.align	2
 622              	.L73:
 623 0070 55555555 		.word	1431655765
 624              		.cfi_endproc
 625              	.LFE7:
 626              		.size	CapSense_DpProcessProximity, .-CapSense_DpProcessProximity
 627              		.section	.text.CapSense_DpProcessCsdWidgetStatus,"ax",%progbits
 628              		.align	1
 629              		.global	CapSense_DpProcessCsdWidgetStatus
 630              		.code	16
 631              		.thumb_func
 632              		.type	CapSense_DpProcessCsdWidgetStatus, %function
 633              	CapSense_DpProcessCsdWidgetStatus:
 634              	.LFB4:
1247:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 sensorStatus;
 635              		.loc 1 1247 0
 636              		.cfi_startproc
 637              		@ args = 0, pretend = 0, frame = 0
 638              		@ frame_needed = 0, uses_anonymous_args = 0
 639              	.LVL101:
 640 0000 70B5     		push	{r4, r5, r6, lr}
 641              		.cfi_def_cfa_offset 16
 642              		.cfi_offset 4, -16
 643              		.cfi_offset 5, -12
 644              		.cfi_offset 6, -8
 645              		.cfi_offset 14, -4
1254:Generated_Source\PSoC4/CapSense_Processing.c **** 
 646              		.loc 1 1254 0
 647 0002 114B     		ldr	r3, .L82
1247:Generated_Source\PSoC4/CapSense_Processing.c ****     uint32 sensorStatus;
 648              		.loc 1 1247 0
 649 0004 0500     		movs	r5, r0
1254:Generated_Source\PSoC4/CapSense_Processing.c **** 
 650              		.loc 1 1254 0
 651 0006 1A18     		adds	r2, r3, r0
 652 0008 107E     		ldrb	r0, [r2, #24]
 653              	.LVL102:
1256:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 654              		.loc 1 1256 0
 655 000a 8A7E     		ldrb	r2, [r1, #26]
 656 000c 1C00     		movs	r4, r3
 657 000e 012A     		cmp	r2, #1
 658 0010 04D0     		beq	.L77
 659 0012 062A     		cmp	r2, #6
 660 0014 04D1     		bne	.L76
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 42


1288:Generated_Source\PSoC4/CapSense_Processing.c ****             break;
 661              		.loc 1 1288 0
 662 0016 FFF7FEFF 		bl	CapSense_DpProcessProximity
 663              	.LVL103:
1289:Generated_Source\PSoC4/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_PROXIMITY_WIDGET_EN) */
 664              		.loc 1 1289 0
 665 001a 01E0     		b	.L76
 666              	.LVL104:
 667              	.L77:
1260:Generated_Source\PSoC4/CapSense_Processing.c ****             break;
 668              		.loc 1 1260 0
 669 001c FFF7FEFF 		bl	CapSense_DpProcessButton
 670              	.LVL105:
 671              	.L76:
1301:Generated_Source\PSoC4/CapSense_Processing.c **** 
 672              		.loc 1 1301 0
 673 0020 1F22     		movs	r2, #31
1297:Generated_Source\PSoC4/CapSense_Processing.c **** 
 674              		.loc 1 1297 0
 675 0022 6319     		adds	r3, r4, r5
 676 0024 1876     		strb	r0, [r3, #24]
1300:Generated_Source\PSoC4/CapSense_Processing.c ****     wdStatusMask = CapSense_GET_WDGT_STATUS_MASK(widgetId);
 677              		.loc 1 1300 0
 678 0026 6B09     		lsrs	r3, r5, #5
 679              	.LVL106:
 680 0028 0433     		adds	r3, r3, #4
 681              	.LVL107:
1306:Generated_Source\PSoC4/CapSense_Processing.c ****     }
 682              		.loc 1 1306 0
 683 002a 9B00     		lsls	r3, r3, #2
 684              	.LVL108:
1301:Generated_Source\PSoC4/CapSense_Processing.c **** 
 685              		.loc 1 1301 0
 686 002c 1540     		ands	r5, r2
 687              	.LVL109:
1306:Generated_Source\PSoC4/CapSense_Processing.c ****     }
 688              		.loc 1 1306 0
 689 002e E318     		adds	r3, r4, r3
1301:Generated_Source\PSoC4/CapSense_Processing.c **** 
 690              		.loc 1 1301 0
 691 0030 1E3A     		subs	r2, r2, #30
 692 0032 AA40     		lsls	r2, r2, r5
 693              	.LVL110:
1306:Generated_Source\PSoC4/CapSense_Processing.c ****     }
 694              		.loc 1 1306 0
 695 0034 5968     		ldr	r1, [r3, #4]
1304:Generated_Source\PSoC4/CapSense_Processing.c ****     {
 696              		.loc 1 1304 0
 697 0036 0028     		cmp	r0, #0
 698 0038 02D1     		bne	.L79
1306:Generated_Source\PSoC4/CapSense_Processing.c ****     }
 699              		.loc 1 1306 0
 700 003a 9143     		bics	r1, r2
 701 003c 0A00     		movs	r2, r1
 702              	.LVL111:
 703 003e 00E0     		b	.L81
 704              	.LVL112:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 43


 705              	.L79:
1310:Generated_Source\PSoC4/CapSense_Processing.c ****     }
 706              		.loc 1 1310 0
 707 0040 0A43     		orrs	r2, r1
 708              	.LVL113:
 709              	.L81:
 710 0042 5A60     		str	r2, [r3, #4]
1312:Generated_Source\PSoC4/CapSense_Processing.c **** #endif /* #if (0u != CapSense_TOTAL_CSD_WIDGETS) */
 711              		.loc 1 1312 0
 712              		@ sp needed
 713              	.LVL114:
 714 0044 70BD     		pop	{r4, r5, r6, pc}
 715              	.L83:
 716 0046 C046     		.align	2
 717              	.L82:
 718 0048 00000000 		.word	CapSense_dsRam
 719              		.cfi_endproc
 720              	.LFE4:
 721              		.size	CapSense_DpProcessCsdWidgetStatus, .-CapSense_DpProcessCsdWidgetStatus
 722              		.text
 723              	.Letext0:
 724              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 725              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 726              		.file 4 "Generated_Source\\PSoC4\\CapSense_Configuration.h"
 727              		.file 5 "Generated_Source\\PSoC4\\CapSense_Structure.h"
 728              		.file 6 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 729              		.file 7 "Generated_Source\\PSoC4\\CapSense_Filter.h"
 730              		.section	.debug_info,"",%progbits
 731              	.Ldebug_info0:
 732 0000 7D0C0000 		.4byte	0xc7d
 733 0004 0400     		.2byte	0x4
 734 0006 00000000 		.4byte	.Ldebug_abbrev0
 735 000a 04       		.byte	0x4
 736 000b 01       		.uleb128 0x1
 737 000c A3060000 		.4byte	.LASF138
 738 0010 0C       		.byte	0xc
 739 0011 72030000 		.4byte	.LASF139
 740 0015 CE040000 		.4byte	.LASF140
 741 0019 00000000 		.4byte	.Ldebug_ranges0+0
 742 001d 00000000 		.4byte	0
 743 0021 00000000 		.4byte	.Ldebug_line0
 744 0025 02       		.uleb128 0x2
 745 0026 01       		.byte	0x1
 746 0027 06       		.byte	0x6
 747 0028 48080000 		.4byte	.LASF0
 748 002c 02       		.uleb128 0x2
 749 002d 01       		.byte	0x1
 750 002e 08       		.byte	0x8
 751 002f AD070000 		.4byte	.LASF1
 752 0033 02       		.uleb128 0x2
 753 0034 02       		.byte	0x2
 754 0035 05       		.byte	0x5
 755 0036 C0050000 		.4byte	.LASF2
 756 003a 02       		.uleb128 0x2
 757 003b 02       		.byte	0x2
 758 003c 07       		.byte	0x7
 759 003d 59080000 		.4byte	.LASF3
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 44


 760 0041 02       		.uleb128 0x2
 761 0042 04       		.byte	0x4
 762 0043 05       		.byte	0x5
 763 0044 FB050000 		.4byte	.LASF4
 764 0048 02       		.uleb128 0x2
 765 0049 04       		.byte	0x4
 766 004a 07       		.byte	0x7
 767 004b 3E070000 		.4byte	.LASF5
 768 004f 02       		.uleb128 0x2
 769 0050 08       		.byte	0x8
 770 0051 05       		.byte	0x5
 771 0052 DC030000 		.4byte	.LASF6
 772 0056 02       		.uleb128 0x2
 773 0057 08       		.byte	0x8
 774 0058 07       		.byte	0x7
 775 0059 DA010000 		.4byte	.LASF7
 776 005d 03       		.uleb128 0x3
 777 005e 04       		.byte	0x4
 778 005f 05       		.byte	0x5
 779 0060 696E7400 		.ascii	"int\000"
 780 0064 02       		.uleb128 0x2
 781 0065 04       		.byte	0x4
 782 0066 07       		.byte	0x7
 783 0067 9D000000 		.4byte	.LASF8
 784 006b 04       		.uleb128 0x4
 785 006c 84080000 		.4byte	.LASF9
 786 0070 02       		.byte	0x2
 787 0071 E401     		.2byte	0x1e4
 788 0073 2C000000 		.4byte	0x2c
 789 0077 04       		.uleb128 0x4
 790 0078 49030000 		.4byte	.LASF10
 791 007c 02       		.byte	0x2
 792 007d E501     		.2byte	0x1e5
 793 007f 3A000000 		.4byte	0x3a
 794 0083 04       		.uleb128 0x4
 795 0084 AF040000 		.4byte	.LASF11
 796 0088 02       		.byte	0x2
 797 0089 E601     		.2byte	0x1e6
 798 008b 48000000 		.4byte	0x48
 799 008f 04       		.uleb128 0x4
 800 0090 78010000 		.4byte	.LASF12
 801 0094 02       		.byte	0x2
 802 0095 E901     		.2byte	0x1e9
 803 0097 41000000 		.4byte	0x41
 804 009b 02       		.uleb128 0x2
 805 009c 04       		.byte	0x4
 806 009d 04       		.byte	0x4
 807 009e 66010000 		.4byte	.LASF13
 808 00a2 02       		.uleb128 0x2
 809 00a3 08       		.byte	0x8
 810 00a4 04       		.byte	0x4
 811 00a5 8A080000 		.4byte	.LASF14
 812 00a9 02       		.uleb128 0x2
 813 00aa 01       		.byte	0x1
 814 00ab 08       		.byte	0x8
 815 00ac 1F030000 		.4byte	.LASF15
 816 00b0 05       		.uleb128 0x5
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 45


 817 00b1 83000000 		.4byte	0x83
 818 00b5 06       		.uleb128 0x6
 819 00b6 B4020000 		.4byte	.LASF16
 820 00ba 03       		.byte	0x3
 821 00bb D8       		.byte	0xd8
 822 00bc 64000000 		.4byte	0x64
 823 00c0 02       		.uleb128 0x2
 824 00c1 08       		.byte	0x8
 825 00c2 04       		.byte	0x4
 826 00c3 3E050000 		.4byte	.LASF17
 827 00c7 02       		.uleb128 0x2
 828 00c8 04       		.byte	0x4
 829 00c9 07       		.byte	0x7
 830 00ca 35070000 		.4byte	.LASF18
 831 00ce 07       		.uleb128 0x7
 832 00cf 04       		.byte	0x4
 833 00d0 04       		.uleb128 0x4
 834 00d1 08080000 		.4byte	.LASF19
 835 00d5 04       		.byte	0x4
 836 00d6 2E01     		.2byte	0x12e
 837 00d8 77000000 		.4byte	0x77
 838 00dc 04       		.uleb128 0x4
 839 00dd 9F030000 		.4byte	.LASF20
 840 00e1 04       		.byte	0x4
 841 00e2 3201     		.2byte	0x132
 842 00e4 6B000000 		.4byte	0x6b
 843 00e8 08       		.uleb128 0x8
 844 00e9 01       		.byte	0x1
 845 00ea 2C000000 		.4byte	0x2c
 846 00ee 05       		.byte	0x5
 847 00ef 61       		.byte	0x61
 848 00f0 1F010000 		.4byte	0x11f
 849 00f4 09       		.uleb128 0x9
 850 00f5 23060000 		.4byte	.LASF21
 851 00f9 01       		.byte	0x1
 852 00fa 09       		.uleb128 0x9
 853 00fb 00050000 		.4byte	.LASF22
 854 00ff 02       		.byte	0x2
 855 0100 09       		.uleb128 0x9
 856 0101 CB020000 		.4byte	.LASF23
 857 0105 03       		.byte	0x3
 858 0106 09       		.uleb128 0x9
 859 0107 F1010000 		.4byte	.LASF24
 860 010b 04       		.byte	0x4
 861 010c 09       		.uleb128 0x9
 862 010d 03010000 		.4byte	.LASF25
 863 0111 05       		.byte	0x5
 864 0112 09       		.uleb128 0x9
 865 0113 00000000 		.4byte	.LASF26
 866 0117 06       		.byte	0x6
 867 0118 09       		.uleb128 0x9
 868 0119 99050000 		.4byte	.LASF27
 869 011d 07       		.byte	0x7
 870 011e 00       		.byte	0
 871 011f 06       		.uleb128 0x6
 872 0120 8C040000 		.4byte	.LASF28
 873 0124 05       		.byte	0x5
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 46


 874 0125 69       		.byte	0x69
 875 0126 E8000000 		.4byte	0xe8
 876 012a 0A       		.uleb128 0xa
 877 012b 10       		.byte	0x10
 878 012c 05       		.byte	0x5
 879 012d AD       		.byte	0xad
 880 012e B7010000 		.4byte	0x1b7
 881 0132 0B       		.uleb128 0xb
 882 0133 60030000 		.4byte	.LASF29
 883 0137 05       		.byte	0x5
 884 0138 B2       		.byte	0xb2
 885 0139 77000000 		.4byte	0x77
 886 013d 00       		.byte	0
 887 013e 0B       		.uleb128 0xb
 888 013f 5D070000 		.4byte	.LASF30
 889 0143 05       		.byte	0x5
 890 0144 B7       		.byte	0xb7
 891 0145 D0000000 		.4byte	0xd0
 892 0149 02       		.byte	0x2
 893 014a 0B       		.uleb128 0xb
 894 014b 17030000 		.4byte	.LASF31
 895 014f 05       		.byte	0x5
 896 0150 BC       		.byte	0xbc
 897 0151 6B000000 		.4byte	0x6b
 898 0155 04       		.byte	0x4
 899 0156 0B       		.uleb128 0xb
 900 0157 5C040000 		.4byte	.LASF32
 901 015b 05       		.byte	0x5
 902 015c C1       		.byte	0xc1
 903 015d 6B000000 		.4byte	0x6b
 904 0161 05       		.byte	0x5
 905 0162 0B       		.uleb128 0xb
 906 0163 C0020000 		.4byte	.LASF33
 907 0167 05       		.byte	0x5
 908 0168 C7       		.byte	0xc7
 909 0169 6B000000 		.4byte	0x6b
 910 016d 06       		.byte	0x6
 911 016e 0B       		.uleb128 0xb
 912 016f 0C040000 		.4byte	.LASF34
 913 0173 05       		.byte	0x5
 914 0174 CD       		.byte	0xcd
 915 0175 6B000000 		.4byte	0x6b
 916 0179 07       		.byte	0x7
 917 017a 0B       		.uleb128 0xb
 918 017b 00030000 		.4byte	.LASF35
 919 017f 05       		.byte	0x5
 920 0180 D4       		.byte	0xd4
 921 0181 DC000000 		.4byte	0xdc
 922 0185 08       		.byte	0x8
 923 0186 0B       		.uleb128 0xb
 924 0187 50070000 		.4byte	.LASF36
 925 018b 05       		.byte	0x5
 926 018c DB       		.byte	0xdb
 927 018d B7010000 		.4byte	0x1b7
 928 0191 09       		.byte	0x9
 929 0192 0B       		.uleb128 0xb
 930 0193 4E010000 		.4byte	.LASF37
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 47


 931 0197 05       		.byte	0x5
 932 0198 E0       		.byte	0xe0
 933 0199 6B000000 		.4byte	0x6b
 934 019d 0A       		.byte	0xa
 935 019e 0B       		.uleb128 0xb
 936 019f 41080000 		.4byte	.LASF38
 937 01a3 05       		.byte	0x5
 938 01a4 E8       		.byte	0xe8
 939 01a5 77000000 		.4byte	0x77
 940 01a9 0C       		.byte	0xc
 941 01aa 0B       		.uleb128 0xb
 942 01ab B3050000 		.4byte	.LASF39
 943 01af 05       		.byte	0x5
 944 01b0 ED       		.byte	0xed
 945 01b1 6B000000 		.4byte	0x6b
 946 01b5 0E       		.byte	0xe
 947 01b6 00       		.byte	0
 948 01b7 0C       		.uleb128 0xc
 949 01b8 6B000000 		.4byte	0x6b
 950 01bc C7010000 		.4byte	0x1c7
 951 01c0 0D       		.uleb128 0xd
 952 01c1 C7000000 		.4byte	0xc7
 953 01c5 00       		.byte	0
 954 01c6 00       		.byte	0
 955 01c7 06       		.uleb128 0x6
 956 01c8 70040000 		.4byte	.LASF40
 957 01cc 05       		.byte	0x5
 958 01cd EE       		.byte	0xee
 959 01ce 2A010000 		.4byte	0x12a
 960 01d2 0A       		.uleb128 0xa
 961 01d3 10       		.byte	0x10
 962 01d4 05       		.byte	0x5
 963 01d5 F3       		.byte	0xf3
 964 01d6 68020000 		.4byte	0x268
 965 01da 0B       		.uleb128 0xb
 966 01db 60030000 		.4byte	.LASF29
 967 01df 05       		.byte	0x5
 968 01e0 F8       		.byte	0xf8
 969 01e1 77000000 		.4byte	0x77
 970 01e5 00       		.byte	0
 971 01e6 0B       		.uleb128 0xb
 972 01e7 5D070000 		.4byte	.LASF30
 973 01eb 05       		.byte	0x5
 974 01ec FD       		.byte	0xfd
 975 01ed D0000000 		.4byte	0xd0
 976 01f1 02       		.byte	0x2
 977 01f2 0E       		.uleb128 0xe
 978 01f3 17030000 		.4byte	.LASF31
 979 01f7 05       		.byte	0x5
 980 01f8 0201     		.2byte	0x102
 981 01fa 6B000000 		.4byte	0x6b
 982 01fe 04       		.byte	0x4
 983 01ff 0E       		.uleb128 0xe
 984 0200 5C040000 		.4byte	.LASF32
 985 0204 05       		.byte	0x5
 986 0205 0701     		.2byte	0x107
 987 0207 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 48


 988 020b 05       		.byte	0x5
 989 020c 0E       		.uleb128 0xe
 990 020d C0020000 		.4byte	.LASF33
 991 0211 05       		.byte	0x5
 992 0212 0D01     		.2byte	0x10d
 993 0214 6B000000 		.4byte	0x6b
 994 0218 06       		.byte	0x6
 995 0219 0E       		.uleb128 0xe
 996 021a 0C040000 		.4byte	.LASF34
 997 021e 05       		.byte	0x5
 998 021f 1301     		.2byte	0x113
 999 0221 6B000000 		.4byte	0x6b
 1000 0225 07       		.byte	0x7
 1001 0226 0E       		.uleb128 0xe
 1002 0227 00030000 		.4byte	.LASF35
 1003 022b 05       		.byte	0x5
 1004 022c 1A01     		.2byte	0x11a
 1005 022e DC000000 		.4byte	0xdc
 1006 0232 08       		.byte	0x8
 1007 0233 0E       		.uleb128 0xe
 1008 0234 50070000 		.4byte	.LASF36
 1009 0238 05       		.byte	0x5
 1010 0239 2101     		.2byte	0x121
 1011 023b B7010000 		.4byte	0x1b7
 1012 023f 09       		.byte	0x9
 1013 0240 0E       		.uleb128 0xe
 1014 0241 4E010000 		.4byte	.LASF37
 1015 0245 05       		.byte	0x5
 1016 0246 2601     		.2byte	0x126
 1017 0248 6B000000 		.4byte	0x6b
 1018 024c 0A       		.byte	0xa
 1019 024d 0E       		.uleb128 0xe
 1020 024e 41080000 		.4byte	.LASF38
 1021 0252 05       		.byte	0x5
 1022 0253 2E01     		.2byte	0x12e
 1023 0255 77000000 		.4byte	0x77
 1024 0259 0C       		.byte	0xc
 1025 025a 0E       		.uleb128 0xe
 1026 025b B3050000 		.4byte	.LASF39
 1027 025f 05       		.byte	0x5
 1028 0260 3301     		.2byte	0x133
 1029 0262 6B000000 		.4byte	0x6b
 1030 0266 0E       		.byte	0xe
 1031 0267 00       		.byte	0
 1032 0268 04       		.uleb128 0x4
 1033 0269 6E070000 		.4byte	.LASF41
 1034 026d 05       		.byte	0x5
 1035 026e 3401     		.2byte	0x134
 1036 0270 D2010000 		.4byte	0x1d2
 1037 0274 0F       		.uleb128 0xf
 1038 0275 12       		.byte	0x12
 1039 0276 05       		.byte	0x5
 1040 0277 3901     		.2byte	0x139
 1041 0279 1A030000 		.4byte	0x31a
 1042 027d 0E       		.uleb128 0xe
 1043 027e 60030000 		.4byte	.LASF29
 1044 0282 05       		.byte	0x5
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 49


 1045 0283 3E01     		.2byte	0x13e
 1046 0285 77000000 		.4byte	0x77
 1047 0289 00       		.byte	0
 1048 028a 0E       		.uleb128 0xe
 1049 028b 5D070000 		.4byte	.LASF30
 1050 028f 05       		.byte	0x5
 1051 0290 4301     		.2byte	0x143
 1052 0292 D0000000 		.4byte	0xd0
 1053 0296 02       		.byte	0x2
 1054 0297 0E       		.uleb128 0xe
 1055 0298 17030000 		.4byte	.LASF31
 1056 029c 05       		.byte	0x5
 1057 029d 4801     		.2byte	0x148
 1058 029f 6B000000 		.4byte	0x6b
 1059 02a3 04       		.byte	0x4
 1060 02a4 0E       		.uleb128 0xe
 1061 02a5 5C040000 		.4byte	.LASF32
 1062 02a9 05       		.byte	0x5
 1063 02aa 4D01     		.2byte	0x14d
 1064 02ac 6B000000 		.4byte	0x6b
 1065 02b0 05       		.byte	0x5
 1066 02b1 0E       		.uleb128 0xe
 1067 02b2 C0020000 		.4byte	.LASF33
 1068 02b6 05       		.byte	0x5
 1069 02b7 5301     		.2byte	0x153
 1070 02b9 6B000000 		.4byte	0x6b
 1071 02bd 06       		.byte	0x6
 1072 02be 0E       		.uleb128 0xe
 1073 02bf 0C040000 		.4byte	.LASF34
 1074 02c3 05       		.byte	0x5
 1075 02c4 5901     		.2byte	0x159
 1076 02c6 6B000000 		.4byte	0x6b
 1077 02ca 07       		.byte	0x7
 1078 02cb 0E       		.uleb128 0xe
 1079 02cc 00030000 		.4byte	.LASF35
 1080 02d0 05       		.byte	0x5
 1081 02d1 6001     		.2byte	0x160
 1082 02d3 DC000000 		.4byte	0xdc
 1083 02d7 08       		.byte	0x8
 1084 02d8 0E       		.uleb128 0xe
 1085 02d9 50070000 		.4byte	.LASF36
 1086 02dd 05       		.byte	0x5
 1087 02de 6701     		.2byte	0x167
 1088 02e0 B7010000 		.4byte	0x1b7
 1089 02e4 09       		.byte	0x9
 1090 02e5 0E       		.uleb128 0xe
 1091 02e6 4E010000 		.4byte	.LASF37
 1092 02ea 05       		.byte	0x5
 1093 02eb 6C01     		.2byte	0x16c
 1094 02ed 6B000000 		.4byte	0x6b
 1095 02f1 0A       		.byte	0xa
 1096 02f2 0E       		.uleb128 0xe
 1097 02f3 41080000 		.4byte	.LASF38
 1098 02f7 05       		.byte	0x5
 1099 02f8 7401     		.2byte	0x174
 1100 02fa 77000000 		.4byte	0x77
 1101 02fe 0C       		.byte	0xc
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 50


 1102 02ff 0E       		.uleb128 0xe
 1103 0300 B3050000 		.4byte	.LASF39
 1104 0304 05       		.byte	0x5
 1105 0305 7901     		.2byte	0x179
 1106 0307 6B000000 		.4byte	0x6b
 1107 030b 0E       		.byte	0xe
 1108 030c 0E       		.uleb128 0xe
 1109 030d 4E000000 		.4byte	.LASF42
 1110 0311 05       		.byte	0x5
 1111 0312 7E01     		.2byte	0x17e
 1112 0314 D0000000 		.4byte	0xd0
 1113 0318 10       		.byte	0x10
 1114 0319 00       		.byte	0
 1115 031a 04       		.uleb128 0x4
 1116 031b 8C070000 		.4byte	.LASF43
 1117 031f 05       		.byte	0x5
 1118 0320 7F01     		.2byte	0x17f
 1119 0322 74020000 		.4byte	0x274
 1120 0326 0F       		.uleb128 0xf
 1121 0327 52       		.byte	0x52
 1122 0328 05       		.byte	0x5
 1123 0329 8501     		.2byte	0x185
 1124 032b 71030000 		.4byte	0x371
 1125 032f 0E       		.uleb128 0xe
 1126 0330 40000000 		.4byte	.LASF44
 1127 0334 05       		.byte	0x5
 1128 0335 8A01     		.2byte	0x18a
 1129 0337 68020000 		.4byte	0x268
 1130 033b 00       		.byte	0
 1131 033c 0E       		.uleb128 0xe
 1132 033d F0000000 		.4byte	.LASF45
 1133 0341 05       		.byte	0x5
 1134 0342 8F01     		.2byte	0x18f
 1135 0344 68020000 		.4byte	0x268
 1136 0348 10       		.byte	0x10
 1137 0349 0E       		.uleb128 0xe
 1138 034a 6C080000 		.4byte	.LASF46
 1139 034e 05       		.byte	0x5
 1140 034f 9401     		.2byte	0x194
 1141 0351 68020000 		.4byte	0x268
 1142 0355 20       		.byte	0x20
 1143 0356 0E       		.uleb128 0xe
 1144 0357 AA020000 		.4byte	.LASF47
 1145 035b 05       		.byte	0x5
 1146 035c 9901     		.2byte	0x199
 1147 035e 68020000 		.4byte	0x268
 1148 0362 30       		.byte	0x30
 1149 0363 0E       		.uleb128 0xe
 1150 0364 58070000 		.4byte	.LASF48
 1151 0368 05       		.byte	0x5
 1152 0369 9E01     		.2byte	0x19e
 1153 036b 1A030000 		.4byte	0x31a
 1154 036f 40       		.byte	0x40
 1155 0370 00       		.byte	0
 1156 0371 04       		.uleb128 0x4
 1157 0372 1A010000 		.4byte	.LASF49
 1158 0376 05       		.byte	0x5
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 51


 1159 0377 9F01     		.2byte	0x19f
 1160 0379 26030000 		.4byte	0x326
 1161 037d 0F       		.uleb128 0xf
 1162 037e 0A       		.byte	0xa
 1163 037f 05       		.byte	0x5
 1164 0380 A501     		.2byte	0x1a5
 1165 0382 D5030000 		.4byte	0x3d5
 1166 0386 10       		.uleb128 0x10
 1167 0387 72617700 		.ascii	"raw\000"
 1168 038b 05       		.byte	0x5
 1169 038c AA01     		.2byte	0x1aa
 1170 038e D5030000 		.4byte	0x3d5
 1171 0392 00       		.byte	0
 1172 0393 0E       		.uleb128 0xe
 1173 0394 54080000 		.4byte	.LASF50
 1174 0398 05       		.byte	0x5
 1175 0399 AF01     		.2byte	0x1af
 1176 039b D5030000 		.4byte	0x3d5
 1177 039f 02       		.byte	0x2
 1178 03a0 0E       		.uleb128 0xe
 1179 03a1 66070000 		.4byte	.LASF51
 1180 03a5 05       		.byte	0x5
 1181 03a6 B501     		.2byte	0x1b5
 1182 03a8 B7010000 		.4byte	0x1b7
 1183 03ac 04       		.byte	0x4
 1184 03ad 0E       		.uleb128 0xe
 1185 03ae 0F060000 		.4byte	.LASF52
 1186 03b2 05       		.byte	0x5
 1187 03b3 BA01     		.2byte	0x1ba
 1188 03b5 D0000000 		.4byte	0xd0
 1189 03b9 06       		.byte	0x6
 1190 03ba 0E       		.uleb128 0xe
 1191 03bb 91080000 		.4byte	.LASF53
 1192 03bf 05       		.byte	0x5
 1193 03c0 BF01     		.2byte	0x1bf
 1194 03c2 E5030000 		.4byte	0x3e5
 1195 03c6 08       		.byte	0x8
 1196 03c7 0E       		.uleb128 0xe
 1197 03c8 D3030000 		.4byte	.LASF54
 1198 03cc 05       		.byte	0x5
 1199 03cd C401     		.2byte	0x1c4
 1200 03cf B7010000 		.4byte	0x1b7
 1201 03d3 09       		.byte	0x9
 1202 03d4 00       		.byte	0
 1203 03d5 0C       		.uleb128 0xc
 1204 03d6 77000000 		.4byte	0x77
 1205 03da E5030000 		.4byte	0x3e5
 1206 03de 0D       		.uleb128 0xd
 1207 03df C7000000 		.4byte	0xc7
 1208 03e3 00       		.byte	0
 1209 03e4 00       		.byte	0
 1210 03e5 0C       		.uleb128 0xc
 1211 03e6 DC000000 		.4byte	0xdc
 1212 03ea F5030000 		.4byte	0x3f5
 1213 03ee 0D       		.uleb128 0xd
 1214 03ef C7000000 		.4byte	0xc7
 1215 03f3 00       		.byte	0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 52


 1216 03f4 00       		.byte	0
 1217 03f5 04       		.uleb128 0x4
 1218 03f6 92020000 		.4byte	.LASF55
 1219 03fa 05       		.byte	0x5
 1220 03fb C501     		.2byte	0x1c5
 1221 03fd 7D030000 		.4byte	0x37d
 1222 0401 0F       		.uleb128 0xf
 1223 0402 32       		.byte	0x32
 1224 0403 05       		.byte	0x5
 1225 0404 CB01     		.2byte	0x1cb
 1226 0406 4C040000 		.4byte	0x44c
 1227 040a 0E       		.uleb128 0xe
 1228 040b 40000000 		.4byte	.LASF44
 1229 040f 05       		.byte	0x5
 1230 0410 D001     		.2byte	0x1d0
 1231 0412 4C040000 		.4byte	0x44c
 1232 0416 00       		.byte	0
 1233 0417 0E       		.uleb128 0xe
 1234 0418 F0000000 		.4byte	.LASF45
 1235 041c 05       		.byte	0x5
 1236 041d D501     		.2byte	0x1d5
 1237 041f 4C040000 		.4byte	0x44c
 1238 0423 0A       		.byte	0xa
 1239 0424 0E       		.uleb128 0xe
 1240 0425 6C080000 		.4byte	.LASF46
 1241 0429 05       		.byte	0x5
 1242 042a DA01     		.2byte	0x1da
 1243 042c 4C040000 		.4byte	0x44c
 1244 0430 14       		.byte	0x14
 1245 0431 0E       		.uleb128 0xe
 1246 0432 AA020000 		.4byte	.LASF47
 1247 0436 05       		.byte	0x5
 1248 0437 DF01     		.2byte	0x1df
 1249 0439 4C040000 		.4byte	0x44c
 1250 043d 1E       		.byte	0x1e
 1251 043e 0E       		.uleb128 0xe
 1252 043f 58070000 		.4byte	.LASF48
 1253 0443 05       		.byte	0x5
 1254 0444 E401     		.2byte	0x1e4
 1255 0446 4C040000 		.4byte	0x44c
 1256 044a 28       		.byte	0x28
 1257 044b 00       		.byte	0
 1258 044c 0C       		.uleb128 0xc
 1259 044d F5030000 		.4byte	0x3f5
 1260 0451 5C040000 		.4byte	0x45c
 1261 0455 0D       		.uleb128 0xd
 1262 0456 C7000000 		.4byte	0xc7
 1263 045a 00       		.byte	0
 1264 045b 00       		.byte	0
 1265 045c 04       		.uleb128 0x4
 1266 045d BC080000 		.4byte	.LASF56
 1267 0461 05       		.byte	0x5
 1268 0462 E501     		.2byte	0x1e5
 1269 0464 01040000 		.4byte	0x401
 1270 0468 0F       		.uleb128 0xf
 1271 0469 B0       		.byte	0xb0
 1272 046a 05       		.byte	0x5
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 53


 1273 046b EB01     		.2byte	0x1eb
 1274 046d 69050000 		.4byte	0x569
 1275 0471 0E       		.uleb128 0xe
 1276 0472 70050000 		.4byte	.LASF57
 1277 0476 05       		.byte	0x5
 1278 0477 F201     		.2byte	0x1f2
 1279 0479 77000000 		.4byte	0x77
 1280 047d 00       		.byte	0
 1281 047e 0E       		.uleb128 0xe
 1282 047f AA080000 		.4byte	.LASF58
 1283 0483 05       		.byte	0x5
 1284 0484 F701     		.2byte	0x1f7
 1285 0486 77000000 		.4byte	0x77
 1286 048a 02       		.byte	0x2
 1287 048b 0E       		.uleb128 0xe
 1288 048c D3000000 		.4byte	.LASF59
 1289 0490 05       		.byte	0x5
 1290 0491 FC01     		.2byte	0x1fc
 1291 0493 77000000 		.4byte	0x77
 1292 0497 04       		.byte	0x4
 1293 0498 0E       		.uleb128 0xe
 1294 0499 14060000 		.4byte	.LASF60
 1295 049d 05       		.byte	0x5
 1296 049e 0202     		.2byte	0x202
 1297 04a0 77000000 		.4byte	0x77
 1298 04a4 06       		.byte	0x6
 1299 04a5 0E       		.uleb128 0xe
 1300 04a6 AA000000 		.4byte	.LASF61
 1301 04aa 05       		.byte	0x5
 1302 04ab 0702     		.2byte	0x207
 1303 04ad 77000000 		.4byte	0x77
 1304 04b1 08       		.byte	0x8
 1305 04b2 0E       		.uleb128 0xe
 1306 04b3 6B030000 		.4byte	.LASF62
 1307 04b7 05       		.byte	0x5
 1308 04b8 0C02     		.2byte	0x20c
 1309 04ba B0000000 		.4byte	0xb0
 1310 04be 0C       		.byte	0xc
 1311 04bf 0E       		.uleb128 0xe
 1312 04c0 04060000 		.4byte	.LASF63
 1313 04c4 05       		.byte	0x5
 1314 04c5 1202     		.2byte	0x212
 1315 04c7 69050000 		.4byte	0x569
 1316 04cb 10       		.byte	0x10
 1317 04cc 0E       		.uleb128 0xe
 1318 04cd 98060000 		.4byte	.LASF64
 1319 04d1 05       		.byte	0x5
 1320 04d2 1902     		.2byte	0x219
 1321 04d4 69050000 		.4byte	0x569
 1322 04d8 14       		.byte	0x14
 1323 04d9 0E       		.uleb128 0xe
 1324 04da 8F050000 		.4byte	.LASF65
 1325 04de 05       		.byte	0x5
 1326 04df 2902     		.2byte	0x229
 1327 04e1 79050000 		.4byte	0x579
 1328 04e5 18       		.byte	0x18
 1329 04e6 0E       		.uleb128 0xe
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 54


 1330 04e7 65040000 		.4byte	.LASF66
 1331 04eb 05       		.byte	0x5
 1332 04ec 2F02     		.2byte	0x22f
 1333 04ee 77000000 		.4byte	0x77
 1334 04f2 1E       		.byte	0x1e
 1335 04f3 0E       		.uleb128 0xe
 1336 04f4 88020000 		.4byte	.LASF67
 1337 04f8 05       		.byte	0x5
 1338 04f9 3402     		.2byte	0x234
 1339 04fb 6B000000 		.4byte	0x6b
 1340 04ff 20       		.byte	0x20
 1341 0500 0E       		.uleb128 0xe
 1342 0501 17040000 		.4byte	.LASF68
 1343 0505 05       		.byte	0x5
 1344 0506 3902     		.2byte	0x239
 1345 0508 71030000 		.4byte	0x371
 1346 050c 22       		.byte	0x22
 1347 050d 0E       		.uleb128 0xe
 1348 050e CA010000 		.4byte	.LASF69
 1349 0512 05       		.byte	0x5
 1350 0513 3E02     		.2byte	0x23e
 1351 0515 5C040000 		.4byte	0x45c
 1352 0519 74       		.byte	0x74
 1353 051a 0E       		.uleb128 0xe
 1354 051b 6B000000 		.4byte	.LASF70
 1355 051f 05       		.byte	0x5
 1356 0520 4302     		.2byte	0x243
 1357 0522 6B000000 		.4byte	0x6b
 1358 0526 A6       		.byte	0xa6
 1359 0527 0E       		.uleb128 0xe
 1360 0528 1F020000 		.4byte	.LASF71
 1361 052c 05       		.byte	0x5
 1362 052d 4802     		.2byte	0x248
 1363 052f 6B000000 		.4byte	0x6b
 1364 0533 A7       		.byte	0xa7
 1365 0534 0E       		.uleb128 0xe
 1366 0535 5D050000 		.4byte	.LASF72
 1367 0539 05       		.byte	0x5
 1368 053a 4D02     		.2byte	0x24d
 1369 053c 77000000 		.4byte	0x77
 1370 0540 A8       		.byte	0xa8
 1371 0541 0E       		.uleb128 0xe
 1372 0542 45040000 		.4byte	.LASF73
 1373 0546 05       		.byte	0x5
 1374 0547 5202     		.2byte	0x252
 1375 0549 D5030000 		.4byte	0x3d5
 1376 054d AA       		.byte	0xaa
 1377 054e 0E       		.uleb128 0xe
 1378 054f DB000000 		.4byte	.LASF74
 1379 0553 05       		.byte	0x5
 1380 0554 5702     		.2byte	0x257
 1381 0556 6B000000 		.4byte	0x6b
 1382 055a AC       		.byte	0xac
 1383 055b 0E       		.uleb128 0xe
 1384 055c ED070000 		.4byte	.LASF75
 1385 0560 05       		.byte	0x5
 1386 0561 5C02     		.2byte	0x25c
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 55


 1387 0563 6B000000 		.4byte	0x6b
 1388 0567 AD       		.byte	0xad
 1389 0568 00       		.byte	0
 1390 0569 0C       		.uleb128 0xc
 1391 056a 83000000 		.4byte	0x83
 1392 056e 79050000 		.4byte	0x579
 1393 0572 0D       		.uleb128 0xd
 1394 0573 C7000000 		.4byte	0xc7
 1395 0577 00       		.byte	0
 1396 0578 00       		.byte	0
 1397 0579 0C       		.uleb128 0xc
 1398 057a 6B000000 		.4byte	0x6b
 1399 057e 89050000 		.4byte	0x589
 1400 0582 0D       		.uleb128 0xd
 1401 0583 C7000000 		.4byte	0xc7
 1402 0587 04       		.byte	0x4
 1403 0588 00       		.byte	0
 1404 0589 04       		.uleb128 0x4
 1405 058a CA050000 		.4byte	.LASF76
 1406 058e 05       		.byte	0x5
 1407 058f 5D02     		.2byte	0x25d
 1408 0591 68040000 		.4byte	0x468
 1409 0595 0F       		.uleb128 0xf
 1410 0596 1C       		.byte	0x1c
 1411 0597 05       		.byte	0x5
 1412 0598 C402     		.2byte	0x2c4
 1413 059a 14060000 		.4byte	0x614
 1414 059e 0E       		.uleb128 0xe
 1415 059f 77080000 		.4byte	.LASF77
 1416 05a3 05       		.byte	0x5
 1417 05a4 CD02     		.2byte	0x2cd
 1418 05a6 14060000 		.4byte	0x614
 1419 05aa 00       		.byte	0
 1420 05ab 0E       		.uleb128 0xe
 1421 05ac FC070000 		.4byte	.LASF78
 1422 05b0 05       		.byte	0x5
 1423 05b1 D402     		.2byte	0x2d4
 1424 05b3 CE000000 		.4byte	0xce
 1425 05b7 04       		.byte	0x4
 1426 05b8 0E       		.uleb128 0xe
 1427 05b9 79050000 		.4byte	.LASF79
 1428 05bd 05       		.byte	0x5
 1429 05be DA02     		.2byte	0x2da
 1430 05c0 1B060000 		.4byte	0x61b
 1431 05c4 08       		.byte	0x8
 1432 05c5 0E       		.uleb128 0xe
 1433 05c6 BE040000 		.4byte	.LASF80
 1434 05ca 05       		.byte	0x5
 1435 05cb E002     		.2byte	0x2e0
 1436 05cd CE000000 		.4byte	0xce
 1437 05d1 0C       		.byte	0xc
 1438 05d2 0E       		.uleb128 0xe
 1439 05d3 50030000 		.4byte	.LASF81
 1440 05d7 05       		.byte	0x5
 1441 05d8 E702     		.2byte	0x2e7
 1442 05da 21060000 		.4byte	0x621
 1443 05de 10       		.byte	0x10
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 56


 1444 05df 0E       		.uleb128 0xe
 1445 05e0 E0070000 		.4byte	.LASF82
 1446 05e4 05       		.byte	0x5
 1447 05e5 EC02     		.2byte	0x2ec
 1448 05e7 83000000 		.4byte	0x83
 1449 05eb 14       		.byte	0x14
 1450 05ec 0E       		.uleb128 0xe
 1451 05ed 0B030000 		.4byte	.LASF83
 1452 05f1 05       		.byte	0x5
 1453 05f2 F302     		.2byte	0x2f3
 1454 05f4 77000000 		.4byte	0x77
 1455 05f8 18       		.byte	0x18
 1456 05f9 0E       		.uleb128 0xe
 1457 05fa 2F020000 		.4byte	.LASF84
 1458 05fe 05       		.byte	0x5
 1459 05ff FA02     		.2byte	0x2fa
 1460 0601 6B000000 		.4byte	0x6b
 1461 0605 1A       		.byte	0x1a
 1462 0606 0E       		.uleb128 0xe
 1463 0607 EA030000 		.4byte	.LASF85
 1464 060b 05       		.byte	0x5
 1465 060c 0403     		.2byte	0x304
 1466 060e 6B000000 		.4byte	0x6b
 1467 0612 1B       		.byte	0x1b
 1468 0613 00       		.byte	0
 1469 0614 11       		.uleb128 0x11
 1470 0615 04       		.byte	0x4
 1471 0616 1A060000 		.4byte	0x61a
 1472 061a 12       		.uleb128 0x12
 1473 061b 11       		.uleb128 0x11
 1474 061c 04       		.byte	0x4
 1475 061d F5030000 		.4byte	0x3f5
 1476 0621 11       		.uleb128 0x11
 1477 0622 04       		.byte	0x4
 1478 0623 6B000000 		.4byte	0x6b
 1479 0627 04       		.uleb128 0x4
 1480 0628 E7020000 		.4byte	.LASF86
 1481 062c 05       		.byte	0x5
 1482 062d 0503     		.2byte	0x305
 1483 062f 95050000 		.4byte	0x595
 1484 0633 0F       		.uleb128 0xf
 1485 0634 8C       		.byte	0x8c
 1486 0635 05       		.byte	0x5
 1487 0636 0B03     		.2byte	0x30b
 1488 0638 4A060000 		.4byte	0x64a
 1489 063c 0E       		.uleb128 0xe
 1490 063d D9080000 		.4byte	.LASF87
 1491 0641 05       		.byte	0x5
 1492 0642 1003     		.2byte	0x310
 1493 0644 4A060000 		.4byte	0x64a
 1494 0648 00       		.byte	0
 1495 0649 00       		.byte	0
 1496 064a 0C       		.uleb128 0xc
 1497 064b 27060000 		.4byte	0x627
 1498 064f 5A060000 		.4byte	0x65a
 1499 0653 0D       		.uleb128 0xd
 1500 0654 C7000000 		.4byte	0xc7
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 57


 1501 0658 04       		.byte	0x4
 1502 0659 00       		.byte	0
 1503 065a 04       		.uleb128 0x4
 1504 065b 20040000 		.4byte	.LASF88
 1505 065f 05       		.byte	0x5
 1506 0660 1103     		.2byte	0x311
 1507 0662 33060000 		.4byte	0x633
 1508 0666 0F       		.uleb128 0xf
 1509 0667 0C       		.byte	0xc
 1510 0668 05       		.byte	0x5
 1511 0669 6F03     		.2byte	0x36f
 1512 066b 97060000 		.4byte	0x697
 1513 066f 0E       		.uleb128 0xe
 1514 0670 20080000 		.4byte	.LASF89
 1515 0674 05       		.byte	0x5
 1516 0675 7403     		.2byte	0x374
 1517 0677 77000000 		.4byte	0x77
 1518 067b 00       		.byte	0
 1519 067c 0E       		.uleb128 0xe
 1520 067d 2A050000 		.4byte	.LASF90
 1521 0681 05       		.byte	0x5
 1522 0682 7A03     		.2byte	0x37a
 1523 0684 97060000 		.4byte	0x697
 1524 0688 02       		.byte	0x2
 1525 0689 0E       		.uleb128 0xe
 1526 068a 84050000 		.4byte	.LASF91
 1527 068e 05       		.byte	0x5
 1528 068f 7F03     		.2byte	0x37f
 1529 0691 A7060000 		.4byte	0x6a7
 1530 0695 06       		.byte	0x6
 1531 0696 00       		.byte	0
 1532 0697 0C       		.uleb128 0xc
 1533 0698 77000000 		.4byte	0x77
 1534 069c A7060000 		.4byte	0x6a7
 1535 06a0 0D       		.uleb128 0xd
 1536 06a1 C7000000 		.4byte	0xc7
 1537 06a5 01       		.byte	0x1
 1538 06a6 00       		.byte	0
 1539 06a7 0C       		.uleb128 0xc
 1540 06a8 77000000 		.4byte	0x77
 1541 06ac B7060000 		.4byte	0x6b7
 1542 06b0 0D       		.uleb128 0xd
 1543 06b1 C7000000 		.4byte	0xc7
 1544 06b5 02       		.byte	0x2
 1545 06b6 00       		.byte	0
 1546 06b7 04       		.uleb128 0x4
 1547 06b8 38060000 		.4byte	.LASF92
 1548 06bc 05       		.byte	0x5
 1549 06bd 8003     		.2byte	0x380
 1550 06bf 66060000 		.4byte	0x666
 1551 06c3 0F       		.uleb128 0xf
 1552 06c4 0C       		.byte	0xc
 1553 06c5 05       		.byte	0x5
 1554 06c6 8503     		.2byte	0x385
 1555 06c8 F4060000 		.4byte	0x6f4
 1556 06cc 0E       		.uleb128 0xe
 1557 06cd 20080000 		.4byte	.LASF89
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 58


 1558 06d1 05       		.byte	0x5
 1559 06d2 8A03     		.2byte	0x38a
 1560 06d4 77000000 		.4byte	0x77
 1561 06d8 00       		.byte	0
 1562 06d9 0E       		.uleb128 0xe
 1563 06da 2A050000 		.4byte	.LASF90
 1564 06de 05       		.byte	0x5
 1565 06df 8F03     		.2byte	0x38f
 1566 06e1 97060000 		.4byte	0x697
 1567 06e5 02       		.byte	0x2
 1568 06e6 0E       		.uleb128 0xe
 1569 06e7 84050000 		.4byte	.LASF91
 1570 06eb 05       		.byte	0x5
 1571 06ec 9403     		.2byte	0x394
 1572 06ee A7060000 		.4byte	0x6a7
 1573 06f2 06       		.byte	0x6
 1574 06f3 00       		.byte	0
 1575 06f4 04       		.uleb128 0x4
 1576 06f5 67060000 		.4byte	.LASF93
 1577 06f9 05       		.byte	0x5
 1578 06fa 9503     		.2byte	0x395
 1579 06fc C3060000 		.4byte	0x6c3
 1580 0700 0F       		.uleb128 0xf
 1581 0701 0C       		.byte	0xc
 1582 0702 05       		.byte	0x5
 1583 0703 9A03     		.2byte	0x39a
 1584 0705 17070000 		.4byte	0x717
 1585 0709 0E       		.uleb128 0xe
 1586 070a 79020000 		.4byte	.LASF94
 1587 070e 05       		.byte	0x5
 1588 070f 9F03     		.2byte	0x39f
 1589 0711 17070000 		.4byte	0x717
 1590 0715 00       		.byte	0
 1591 0716 00       		.byte	0
 1592 0717 0C       		.uleb128 0xc
 1593 0718 B7060000 		.4byte	0x6b7
 1594 071c 27070000 		.4byte	0x727
 1595 0720 0D       		.uleb128 0xd
 1596 0721 C7000000 		.4byte	0xc7
 1597 0725 00       		.byte	0
 1598 0726 00       		.byte	0
 1599 0727 04       		.uleb128 0x4
 1600 0728 DE050000 		.4byte	.LASF95
 1601 072c 05       		.byte	0x5
 1602 072d A003     		.2byte	0x3a0
 1603 072f 00070000 		.4byte	0x700
 1604 0733 0F       		.uleb128 0xf
 1605 0734 0C       		.byte	0xc
 1606 0735 05       		.byte	0x5
 1607 0736 A503     		.2byte	0x3a5
 1608 0738 4A070000 		.4byte	0x74a
 1609 073c 0E       		.uleb128 0xe
 1610 073d 6C010000 		.4byte	.LASF96
 1611 0741 05       		.byte	0x5
 1612 0742 AA03     		.2byte	0x3aa
 1613 0744 4A070000 		.4byte	0x74a
 1614 0748 00       		.byte	0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 59


 1615 0749 00       		.byte	0
 1616 074a 0C       		.uleb128 0xc
 1617 074b F4060000 		.4byte	0x6f4
 1618 074f 5A070000 		.4byte	0x75a
 1619 0753 0D       		.uleb128 0xd
 1620 0754 C7000000 		.4byte	0xc7
 1621 0758 00       		.byte	0
 1622 0759 00       		.byte	0
 1623 075a 04       		.uleb128 0x4
 1624 075b F2030000 		.4byte	.LASF97
 1625 075f 05       		.byte	0x5
 1626 0760 AB03     		.2byte	0x3ab
 1627 0762 33070000 		.4byte	0x733
 1628 0766 13       		.uleb128 0x13
 1629 0767 04       		.byte	0x4
 1630 0768 05       		.byte	0x5
 1631 0769 B103     		.2byte	0x3b1
 1632 076b 94070000 		.4byte	0x794
 1633 076f 14       		.uleb128 0x14
 1634 0770 70747200 		.ascii	"ptr\000"
 1635 0774 05       		.byte	0x5
 1636 0775 B603     		.2byte	0x3b6
 1637 0777 CE000000 		.4byte	0xce
 1638 077b 15       		.uleb128 0x15
 1639 077c 0D020000 		.4byte	.LASF98
 1640 0780 05       		.byte	0x5
 1641 0781 BB03     		.2byte	0x3bb
 1642 0783 94070000 		.4byte	0x794
 1643 0787 15       		.uleb128 0x15
 1644 0788 D2010000 		.4byte	.LASF99
 1645 078c 05       		.byte	0x5
 1646 078d C003     		.2byte	0x3c0
 1647 078f 9A070000 		.4byte	0x79a
 1648 0793 00       		.byte	0
 1649 0794 11       		.uleb128 0x11
 1650 0795 04       		.byte	0x4
 1651 0796 27070000 		.4byte	0x727
 1652 079a 11       		.uleb128 0x11
 1653 079b 04       		.byte	0x4
 1654 079c 5A070000 		.4byte	0x75a
 1655 07a0 04       		.uleb128 0x4
 1656 07a1 5D020000 		.4byte	.LASF100
 1657 07a5 05       		.byte	0x5
 1658 07a6 C103     		.2byte	0x3c1
 1659 07a8 66070000 		.4byte	0x766
 1660 07ac 16       		.uleb128 0x16
 1661 07ad 9A010000 		.4byte	.LASF105
 1662 07b1 01       		.byte	0x1
 1663 07b2 9001     		.2byte	0x190
 1664 07b4 00000000 		.4byte	.LFB1
 1665 07b8 5C000000 		.4byte	.LFE1-.LFB1
 1666 07bc 01       		.uleb128 0x1
 1667 07bd 9C       		.byte	0x9c
 1668 07be 0C080000 		.4byte	0x80c
 1669 07c2 17       		.uleb128 0x17
 1670 07c3 5A000000 		.4byte	.LASF101
 1671 07c7 01       		.byte	0x1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 60


 1672 07c8 9201     		.2byte	0x192
 1673 07ca 83000000 		.4byte	0x83
 1674 07ce 00000000 		.4byte	.LLST0
 1675 07d2 17       		.uleb128 0x17
 1676 07d3 9F080000 		.4byte	.LASF102
 1677 07d7 01       		.byte	0x1
 1678 07d8 9301     		.2byte	0x193
 1679 07da 1F010000 		.4byte	0x11f
 1680 07de 14000000 		.4byte	.LLST1
 1681 07e2 17       		.uleb128 0x17
 1682 07e3 4A050000 		.4byte	.LASF103
 1683 07e7 01       		.byte	0x1
 1684 07e8 9401     		.2byte	0x194
 1685 07ea 0C080000 		.4byte	0x80c
 1686 07ee 32000000 		.4byte	.LLST2
 1687 07f2 17       		.uleb128 0x17
 1688 07f3 D3070000 		.4byte	.LASF104
 1689 07f7 01       		.byte	0x1
 1690 07f8 9501     		.2byte	0x195
 1691 07fa 12080000 		.4byte	0x812
 1692 07fe 45000000 		.4byte	.LLST3
 1693 0802 18       		.uleb128 0x18
 1694 0803 42000000 		.4byte	.LVL6
 1695 0807 5F0C0000 		.4byte	0xc5f
 1696 080b 00       		.byte	0
 1697 080c 11       		.uleb128 0x11
 1698 080d 04       		.byte	0x4
 1699 080e C7010000 		.4byte	0x1c7
 1700 0812 11       		.uleb128 0x11
 1701 0813 04       		.byte	0x4
 1702 0814 18080000 		.4byte	0x818
 1703 0818 19       		.uleb128 0x19
 1704 0819 27060000 		.4byte	0x627
 1705 081d 16       		.uleb128 0x16
 1706 081e B6000000 		.4byte	.LASF106
 1707 0822 01       		.byte	0x1
 1708 0823 5E05     		.2byte	0x55e
 1709 0825 00000000 		.4byte	.LFB5
 1710 0829 16000000 		.4byte	.LFE5-.LFB5
 1711 082d 01       		.uleb128 0x1
 1712 082e 9C       		.byte	0x9c
 1713 082f 60080000 		.4byte	0x860
 1714 0833 1A       		.uleb128 0x1a
 1715 0834 4A050000 		.4byte	.LASF103
 1716 0838 01       		.byte	0x1
 1717 0839 5F05     		.2byte	0x55f
 1718 083b 0C080000 		.4byte	0x80c
 1719 083f 01       		.uleb128 0x1
 1720 0840 50       		.byte	0x50
 1721 0841 1A       		.uleb128 0x1a
 1722 0842 F9000000 		.4byte	.LASF107
 1723 0846 01       		.byte	0x1
 1724 0847 6005     		.2byte	0x560
 1725 0849 1B060000 		.4byte	0x61b
 1726 084d 01       		.uleb128 0x1
 1727 084e 51       		.byte	0x51
 1728 084f 17       		.uleb128 0x17
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 61


 1729 0850 E6000000 		.4byte	.LASF108
 1730 0854 01       		.byte	0x1
 1731 0855 6205     		.2byte	0x562
 1732 0857 8F000000 		.4byte	0x8f
 1733 085b 74000000 		.4byte	.LLST4
 1734 085f 00       		.byte	0
 1735 0860 1B       		.uleb128 0x1b
 1736 0861 24030000 		.4byte	.LASF114
 1737 0865 01       		.byte	0x1
 1738 0866 F803     		.2byte	0x3f8
 1739 0868 83000000 		.4byte	0x83
 1740 086c 00000000 		.4byte	.LFB2
 1741 0870 54000000 		.4byte	.LFE2-.LFB2
 1742 0874 01       		.uleb128 0x1
 1743 0875 9C       		.byte	0x9c
 1744 0876 55090000 		.4byte	0x955
 1745 087a 1C       		.uleb128 0x1c
 1746 087b D3070000 		.4byte	.LASF104
 1747 087f 01       		.byte	0x1
 1748 0880 F803     		.2byte	0x3f8
 1749 0882 12080000 		.4byte	0x812
 1750 0886 D6000000 		.4byte	.LLST5
 1751 088a 17       		.uleb128 0x17
 1752 088b 47010000 		.4byte	.LASF109
 1753 088f 01       		.byte	0x1
 1754 0890 FA03     		.2byte	0x3fa
 1755 0892 83000000 		.4byte	0x83
 1756 0896 02010000 		.4byte	.LLST6
 1757 089a 17       		.uleb128 0x17
 1758 089b 9F080000 		.4byte	.LASF102
 1759 089f 01       		.byte	0x1
 1760 08a0 0004     		.2byte	0x400
 1761 08a2 83000000 		.4byte	0x83
 1762 08a6 45010000 		.4byte	.LLST7
 1763 08aa 17       		.uleb128 0x17
 1764 08ab 1D060000 		.4byte	.LASF110
 1765 08af 01       		.byte	0x1
 1766 08b0 0104     		.2byte	0x401
 1767 08b2 83000000 		.4byte	0x83
 1768 08b6 64010000 		.4byte	.LLST8
 1769 08ba 17       		.uleb128 0x17
 1770 08bb 5D060000 		.4byte	.LASF111
 1771 08bf 01       		.byte	0x1
 1772 08c0 0204     		.2byte	0x402
 1773 08c2 1B060000 		.4byte	0x61b
 1774 08c6 83010000 		.4byte	.LLST9
 1775 08ca 17       		.uleb128 0x17
 1776 08cb 4A050000 		.4byte	.LASF103
 1777 08cf 01       		.byte	0x1
 1778 08d0 0304     		.2byte	0x403
 1779 08d2 0C080000 		.4byte	0x80c
 1780 08d6 DE010000 		.4byte	.LLST10
 1781 08da 17       		.uleb128 0x17
 1782 08db 61000000 		.4byte	.LASF112
 1783 08df 01       		.byte	0x1
 1784 08e0 0E04     		.2byte	0x40e
 1785 08e2 A0070000 		.4byte	0x7a0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 62


 1786 08e6 09020000 		.4byte	.LLST11
 1787 08ea 17       		.uleb128 0x17
 1788 08eb C8070000 		.4byte	.LASF113
 1789 08ef 01       		.byte	0x1
 1790 08f0 1104     		.2byte	0x411
 1791 08f2 83000000 		.4byte	0x83
 1792 08f6 3B020000 		.4byte	.LLST12
 1793 08fa 1D       		.uleb128 0x1d
 1794 08fb 34000000 		.4byte	.LVL25
 1795 08ff 6A0C0000 		.4byte	0xc6a
 1796 0903 1B090000 		.4byte	0x91b
 1797 0907 1E       		.uleb128 0x1e
 1798 0908 01       		.uleb128 0x1
 1799 0909 50       		.byte	0x50
 1800 090a 02       		.uleb128 0x2
 1801 090b 77       		.byte	0x77
 1802 090c 74       		.sleb128 -12
 1803 090d 1E       		.uleb128 0x1e
 1804 090e 01       		.uleb128 0x1
 1805 090f 51       		.byte	0x51
 1806 0910 02       		.uleb128 0x2
 1807 0911 76       		.byte	0x76
 1808 0912 00       		.sleb128 0
 1809 0913 1E       		.uleb128 0x1e
 1810 0914 01       		.uleb128 0x1
 1811 0915 52       		.byte	0x52
 1812 0916 03       		.uleb128 0x3
 1813 0917 91       		.byte	0x91
 1814 0918 60       		.sleb128 -32
 1815 0919 06       		.byte	0x6
 1816 091a 00       		.byte	0
 1817 091b 1D       		.uleb128 0x1d
 1818 091c 3E000000 		.4byte	.LVL26
 1819 0920 750C0000 		.4byte	0xc75
 1820 0924 3D090000 		.4byte	0x93d
 1821 0928 1E       		.uleb128 0x1e
 1822 0929 01       		.uleb128 0x1
 1823 092a 50       		.byte	0x50
 1824 092b 03       		.uleb128 0x3
 1825 092c 91       		.byte	0x91
 1826 092d 5C       		.sleb128 -36
 1827 092e 06       		.byte	0x6
 1828 092f 1E       		.uleb128 0x1e
 1829 0930 01       		.uleb128 0x1
 1830 0931 51       		.byte	0x51
 1831 0932 02       		.uleb128 0x2
 1832 0933 76       		.byte	0x76
 1833 0934 00       		.sleb128 0
 1834 0935 1E       		.uleb128 0x1e
 1835 0936 01       		.uleb128 0x1
 1836 0937 52       		.byte	0x52
 1837 0938 03       		.uleb128 0x3
 1838 0939 91       		.byte	0x91
 1839 093a 60       		.sleb128 -32
 1840 093b 06       		.byte	0x6
 1841 093c 00       		.byte	0
 1842 093d 1F       		.uleb128 0x1f
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 63


 1843 093e 48000000 		.4byte	.LVL29
 1844 0942 1D080000 		.4byte	0x81d
 1845 0946 1E       		.uleb128 0x1e
 1846 0947 01       		.uleb128 0x1
 1847 0948 50       		.byte	0x50
 1848 0949 03       		.uleb128 0x3
 1849 094a 91       		.byte	0x91
 1850 094b 5C       		.sleb128 -36
 1851 094c 06       		.byte	0x6
 1852 094d 1E       		.uleb128 0x1e
 1853 094e 01       		.uleb128 0x1
 1854 094f 51       		.byte	0x51
 1855 0950 02       		.uleb128 0x2
 1856 0951 76       		.byte	0x76
 1857 0952 00       		.sleb128 0
 1858 0953 00       		.byte	0
 1859 0954 00       		.byte	0
 1860 0955 1B       		.uleb128 0x1b
 1861 0956 18000000 		.4byte	.LASF115
 1862 095a 01       		.byte	0x1
 1863 095b 7A04     		.2byte	0x47a
 1864 095d 83000000 		.4byte	0x83
 1865 0961 00000000 		.4byte	.LFB3
 1866 0965 3C000000 		.4byte	.LFE3-.LFB3
 1867 0969 01       		.uleb128 0x1
 1868 096a 9C       		.byte	0x9c
 1869 096b 380A0000 		.4byte	0xa38
 1870 096f 1C       		.uleb128 0x1c
 1871 0970 D3070000 		.4byte	.LASF104
 1872 0974 01       		.byte	0x1
 1873 0975 7B04     		.2byte	0x47b
 1874 0977 12080000 		.4byte	0x812
 1875 097b 57020000 		.4byte	.LLST13
 1876 097f 1C       		.uleb128 0x1c
 1877 0980 F9000000 		.4byte	.LASF107
 1878 0984 01       		.byte	0x1
 1879 0985 7C04     		.2byte	0x47c
 1880 0987 1B060000 		.4byte	0x61b
 1881 098b 78020000 		.4byte	.LLST14
 1882 098f 1C       		.uleb128 0x1c
 1883 0990 61000000 		.4byte	.LASF112
 1884 0994 01       		.byte	0x1
 1885 0995 7D04     		.2byte	0x47d
 1886 0997 A0070000 		.4byte	0x7a0
 1887 099b A4020000 		.4byte	.LLST15
 1888 099f 1C       		.uleb128 0x1c
 1889 09a0 BB020000 		.4byte	.LASF116
 1890 09a4 01       		.byte	0x1
 1891 09a5 7E04     		.2byte	0x47e
 1892 09a7 83000000 		.4byte	0x83
 1893 09ab EE020000 		.4byte	.LLST16
 1894 09af 17       		.uleb128 0x17
 1895 09b0 47010000 		.4byte	.LASF109
 1896 09b4 01       		.byte	0x1
 1897 09b5 8004     		.2byte	0x480
 1898 09b7 83000000 		.4byte	0x83
 1899 09bb 1A030000 		.4byte	.LLST17
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 64


 1900 09bf 17       		.uleb128 0x17
 1901 09c0 9F080000 		.4byte	.LASF102
 1902 09c4 01       		.byte	0x1
 1903 09c5 8104     		.2byte	0x481
 1904 09c7 83000000 		.4byte	0x83
 1905 09cb 44030000 		.4byte	.LLST18
 1906 09cf 17       		.uleb128 0x17
 1907 09d0 4A050000 		.4byte	.LASF103
 1908 09d4 01       		.byte	0x1
 1909 09d5 8204     		.2byte	0x482
 1910 09d7 0C080000 		.4byte	0x80c
 1911 09db 57030000 		.4byte	.LLST19
 1912 09df 1D       		.uleb128 0x1d
 1913 09e0 1A000000 		.4byte	.LVL45
 1914 09e4 6A0C0000 		.4byte	0xc6a
 1915 09e8 FF090000 		.4byte	0x9ff
 1916 09ec 1E       		.uleb128 0x1e
 1917 09ed 01       		.uleb128 0x1
 1918 09ee 50       		.byte	0x50
 1919 09ef 02       		.uleb128 0x2
 1920 09f0 75       		.byte	0x75
 1921 09f1 00       		.sleb128 0
 1922 09f2 1E       		.uleb128 0x1e
 1923 09f3 01       		.uleb128 0x1
 1924 09f4 51       		.byte	0x51
 1925 09f5 02       		.uleb128 0x2
 1926 09f6 74       		.byte	0x74
 1927 09f7 00       		.sleb128 0
 1928 09f8 1E       		.uleb128 0x1e
 1929 09f9 01       		.uleb128 0x1
 1930 09fa 52       		.byte	0x52
 1931 09fb 02       		.uleb128 0x2
 1932 09fc 77       		.byte	0x77
 1933 09fd 00       		.sleb128 0
 1934 09fe 00       		.byte	0
 1935 09ff 1D       		.uleb128 0x1d
 1936 0a00 2A000000 		.4byte	.LVL48
 1937 0a04 750C0000 		.4byte	0xc75
 1938 0a08 200A0000 		.4byte	0xa20
 1939 0a0c 1E       		.uleb128 0x1e
 1940 0a0d 01       		.uleb128 0x1
 1941 0a0e 50       		.byte	0x50
 1942 0a0f 03       		.uleb128 0x3
 1943 0a10 91       		.byte	0x91
 1944 0a11 64       		.sleb128 -28
 1945 0a12 06       		.byte	0x6
 1946 0a13 1E       		.uleb128 0x1e
 1947 0a14 01       		.uleb128 0x1
 1948 0a15 51       		.byte	0x51
 1949 0a16 02       		.uleb128 0x2
 1950 0a17 74       		.byte	0x74
 1951 0a18 00       		.sleb128 0
 1952 0a19 1E       		.uleb128 0x1e
 1953 0a1a 01       		.uleb128 0x1
 1954 0a1b 52       		.byte	0x52
 1955 0a1c 02       		.uleb128 0x2
 1956 0a1d 77       		.byte	0x77
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 65


 1957 0a1e 00       		.sleb128 0
 1958 0a1f 00       		.byte	0
 1959 0a20 1F       		.uleb128 0x1f
 1960 0a21 38000000 		.4byte	.LVL50
 1961 0a25 1D080000 		.4byte	0x81d
 1962 0a29 1E       		.uleb128 0x1e
 1963 0a2a 01       		.uleb128 0x1
 1964 0a2b 50       		.byte	0x50
 1965 0a2c 03       		.uleb128 0x3
 1966 0a2d 91       		.byte	0x91
 1967 0a2e 64       		.sleb128 -28
 1968 0a2f 06       		.byte	0x6
 1969 0a30 1E       		.uleb128 0x1e
 1970 0a31 01       		.uleb128 0x1
 1971 0a32 51       		.byte	0x51
 1972 0a33 02       		.uleb128 0x2
 1973 0a34 74       		.byte	0x74
 1974 0a35 00       		.sleb128 0
 1975 0a36 00       		.byte	0
 1976 0a37 00       		.byte	0
 1977 0a38 1B       		.uleb128 0x1b
 1978 0a39 BA030000 		.4byte	.LASF117
 1979 0a3d 01       		.byte	0x1
 1980 0a3e A805     		.2byte	0x5a8
 1981 0a40 83000000 		.4byte	0x83
 1982 0a44 00000000 		.4byte	.LFB6
 1983 0a48 66000000 		.4byte	.LFE6-.LFB6
 1984 0a4c 01       		.uleb128 0x1
 1985 0a4d 9C       		.byte	0x9c
 1986 0a4e DF0A0000 		.4byte	0xadf
 1987 0a52 1C       		.uleb128 0x1c
 1988 0a53 2B080000 		.4byte	.LASF118
 1989 0a57 01       		.byte	0x1
 1990 0a58 A805     		.2byte	0x5a8
 1991 0a5a 83000000 		.4byte	0x83
 1992 0a5e 82030000 		.4byte	.LLST20
 1993 0a62 1C       		.uleb128 0x1c
 1994 0a63 D3070000 		.4byte	.LASF104
 1995 0a67 01       		.byte	0x1
 1996 0a68 A805     		.2byte	0x5a8
 1997 0a6a 12080000 		.4byte	0x812
 1998 0a6e A0030000 		.4byte	.LLST21
 1999 0a72 17       		.uleb128 0x17
 2000 0a73 47000000 		.4byte	.LASF119
 2001 0a77 01       		.byte	0x1
 2002 0a78 AA05     		.2byte	0x5aa
 2003 0a7a 83000000 		.4byte	0x83
 2004 0a7e C1030000 		.4byte	.LLST22
 2005 0a82 20       		.uleb128 0x20
 2006 0a83 55050000 		.4byte	.LASF120
 2007 0a87 01       		.byte	0x1
 2008 0a88 AB05     		.2byte	0x5ab
 2009 0a8a 83000000 		.4byte	0x83
 2010 0a8e 01       		.uleb128 0x1
 2011 0a8f 53       		.byte	0x53
 2012 0a90 17       		.uleb128 0x17
 2013 0a91 5C010000 		.4byte	.LASF121
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 66


 2014 0a95 01       		.byte	0x1
 2015 0a96 AC05     		.2byte	0x5ac
 2016 0a98 83000000 		.4byte	0x83
 2017 0a9c FC030000 		.4byte	.LLST23
 2018 0aa0 17       		.uleb128 0x17
 2019 0aa1 B6040000 		.4byte	.LASF122
 2020 0aa5 01       		.byte	0x1
 2021 0aa6 AD05     		.2byte	0x5ad
 2022 0aa8 83000000 		.4byte	0x83
 2023 0aac 32040000 		.4byte	.LLST24
 2024 0ab0 17       		.uleb128 0x17
 2025 0ab1 5D060000 		.4byte	.LASF111
 2026 0ab5 01       		.byte	0x1
 2027 0ab6 AE05     		.2byte	0x5ae
 2028 0ab8 1B060000 		.4byte	0x61b
 2029 0abc 50040000 		.4byte	.LLST25
 2030 0ac0 17       		.uleb128 0x17
 2031 0ac1 4A050000 		.4byte	.LASF103
 2032 0ac5 01       		.byte	0x1
 2033 0ac6 AF05     		.2byte	0x5af
 2034 0ac8 0C080000 		.4byte	0x80c
 2035 0acc 63040000 		.4byte	.LLST26
 2036 0ad0 20       		.uleb128 0x20
 2037 0ad1 89060000 		.4byte	.LASF123
 2038 0ad5 01       		.byte	0x1
 2039 0ad6 B005     		.2byte	0x5b0
 2040 0ad8 21060000 		.4byte	0x621
 2041 0adc 01       		.uleb128 0x1
 2042 0add 51       		.byte	0x51
 2043 0ade 00       		.byte	0
 2044 0adf 1B       		.uleb128 0x1b
 2045 0ae0 7E010000 		.4byte	.LASF124
 2046 0ae4 01       		.byte	0x1
 2047 0ae5 0C06     		.2byte	0x60c
 2048 0ae7 83000000 		.4byte	0x83
 2049 0aeb 00000000 		.4byte	.LFB7
 2050 0aef 74000000 		.4byte	.LFE7-.LFB7
 2051 0af3 01       		.uleb128 0x1
 2052 0af4 9C       		.byte	0x9c
 2053 0af5 A20B0000 		.4byte	0xba2
 2054 0af9 1C       		.uleb128 0x1c
 2055 0afa 2B080000 		.4byte	.LASF118
 2056 0afe 01       		.byte	0x1
 2057 0aff 0C06     		.2byte	0x60c
 2058 0b01 83000000 		.4byte	0x83
 2059 0b05 76040000 		.4byte	.LLST27
 2060 0b09 1C       		.uleb128 0x1c
 2061 0b0a D3070000 		.4byte	.LASF104
 2062 0b0e 01       		.byte	0x1
 2063 0b0f 0C06     		.2byte	0x60c
 2064 0b11 12080000 		.4byte	0x812
 2065 0b15 94040000 		.4byte	.LLST28
 2066 0b19 17       		.uleb128 0x17
 2067 0b1a 18020000 		.4byte	.LASF125
 2068 0b1e 01       		.byte	0x1
 2069 0b1f 0E06     		.2byte	0x60e
 2070 0b21 83000000 		.4byte	0x83
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 67


 2071 0b25 B5040000 		.4byte	.LLST29
 2072 0b29 21       		.uleb128 0x21
 2073 0b2a 47000000 		.4byte	.LASF119
 2074 0b2e 01       		.byte	0x1
 2075 0b2f 0F06     		.2byte	0x60f
 2076 0b31 83000000 		.4byte	0x83
 2077 0b35 20       		.uleb128 0x20
 2078 0b36 55050000 		.4byte	.LASF120
 2079 0b3a 01       		.byte	0x1
 2080 0b3b 1006     		.2byte	0x610
 2081 0b3d 83000000 		.4byte	0x83
 2082 0b41 01       		.uleb128 0x1
 2083 0b42 53       		.byte	0x53
 2084 0b43 17       		.uleb128 0x17
 2085 0b44 5C010000 		.4byte	.LASF121
 2086 0b48 01       		.byte	0x1
 2087 0b49 1106     		.2byte	0x611
 2088 0b4b 83000000 		.4byte	0x83
 2089 0b4f 19050000 		.4byte	.LLST30
 2090 0b53 17       		.uleb128 0x17
 2091 0b54 36080000 		.4byte	.LASF126
 2092 0b58 01       		.byte	0x1
 2093 0b59 1206     		.2byte	0x612
 2094 0b5b 83000000 		.4byte	0x83
 2095 0b5f 43050000 		.4byte	.LLST31
 2096 0b63 20       		.uleb128 0x20
 2097 0b64 89060000 		.4byte	.LASF123
 2098 0b68 01       		.byte	0x1
 2099 0b69 1406     		.2byte	0x614
 2100 0b6b 21060000 		.4byte	0x621
 2101 0b6f 01       		.uleb128 0x1
 2102 0b70 52       		.byte	0x52
 2103 0b71 17       		.uleb128 0x17
 2104 0b72 5D060000 		.4byte	.LASF111
 2105 0b76 01       		.byte	0x1
 2106 0b77 1506     		.2byte	0x615
 2107 0b79 1B060000 		.4byte	0x61b
 2108 0b7d 61050000 		.4byte	.LLST32
 2109 0b81 17       		.uleb128 0x17
 2110 0b82 4A050000 		.4byte	.LASF103
 2111 0b86 01       		.byte	0x1
 2112 0b87 1606     		.2byte	0x616
 2113 0b89 A20B0000 		.4byte	0xba2
 2114 0b8d 74050000 		.4byte	.LLST33
 2115 0b91 22       		.uleb128 0x22
 2116 0b92 35050000 		.4byte	.LASF127
 2117 0b96 01       		.byte	0x1
 2118 0b97 1906     		.2byte	0x619
 2119 0b99 A80B0000 		.4byte	0xba8
 2120 0b9d 55555555 		.4byte	0x55555555
 2121 0ba1 00       		.byte	0
 2122 0ba2 11       		.uleb128 0x11
 2123 0ba3 04       		.byte	0x4
 2124 0ba4 1A030000 		.4byte	0x31a
 2125 0ba8 19       		.uleb128 0x19
 2126 0ba9 83000000 		.4byte	0x83
 2127 0bad 16       		.uleb128 0x16
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 68


 2128 0bae 7B000000 		.4byte	.LASF128
 2129 0bb2 01       		.byte	0x1
 2130 0bb3 DE04     		.2byte	0x4de
 2131 0bb5 00000000 		.4byte	.LFB4
 2132 0bb9 4C000000 		.4byte	.LFE4-.LFB4
 2133 0bbd 01       		.uleb128 0x1
 2134 0bbe 9C       		.byte	0x9c
 2135 0bbf 420C0000 		.4byte	0xc42
 2136 0bc3 1C       		.uleb128 0x1c
 2137 0bc4 B3080000 		.4byte	.LASF129
 2138 0bc8 01       		.byte	0x1
 2139 0bc9 DE04     		.2byte	0x4de
 2140 0bcb 83000000 		.4byte	0x83
 2141 0bcf 87050000 		.4byte	.LLST34
 2142 0bd3 1C       		.uleb128 0x1c
 2143 0bd4 D3070000 		.4byte	.LASF104
 2144 0bd8 01       		.byte	0x1
 2145 0bd9 DE04     		.2byte	0x4de
 2146 0bdb 12080000 		.4byte	0x812
 2147 0bdf B3050000 		.4byte	.LLST35
 2148 0be3 17       		.uleb128 0x17
 2149 0be4 A2040000 		.4byte	.LASF130
 2150 0be8 01       		.byte	0x1
 2151 0be9 E004     		.2byte	0x4e0
 2152 0beb 83000000 		.4byte	0x83
 2153 0bef ED050000 		.4byte	.LLST36
 2154 0bf3 17       		.uleb128 0x17
 2155 0bf4 1C050000 		.4byte	.LASF131
 2156 0bf8 01       		.byte	0x1
 2157 0bf9 E104     		.2byte	0x4e1
 2158 0bfb 83000000 		.4byte	0x83
 2159 0bff 16060000 		.4byte	.LLST37
 2160 0c03 17       		.uleb128 0x17
 2161 0c04 BB070000 		.4byte	.LASF132
 2162 0c08 01       		.byte	0x1
 2163 0c09 E204     		.2byte	0x4e2
 2164 0c0b 83000000 		.4byte	0x83
 2165 0c0f 55060000 		.4byte	.LLST38
 2166 0c13 17       		.uleb128 0x17
 2167 0c14 9F080000 		.4byte	.LASF102
 2168 0c18 01       		.byte	0x1
 2169 0c19 E304     		.2byte	0x4e3
 2170 0c1b 1F010000 		.4byte	0x11f
 2171 0c1f A3060000 		.4byte	.LLST39
 2172 0c23 1D       		.uleb128 0x1d
 2173 0c24 1A000000 		.4byte	.LVL103
 2174 0c28 DF0A0000 		.4byte	0xadf
 2175 0c2c 380C0000 		.4byte	0xc38
 2176 0c30 1E       		.uleb128 0x1e
 2177 0c31 01       		.uleb128 0x1
 2178 0c32 51       		.byte	0x51
 2179 0c33 03       		.uleb128 0x3
 2180 0c34 F3       		.byte	0xf3
 2181 0c35 01       		.uleb128 0x1
 2182 0c36 51       		.byte	0x51
 2183 0c37 00       		.byte	0
 2184 0c38 18       		.uleb128 0x18
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 69


 2185 0c39 20000000 		.4byte	.LVL105
 2186 0c3d 380A0000 		.4byte	0xa38
 2187 0c41 00       		.byte	0
 2188 0c42 23       		.uleb128 0x23
 2189 0c43 36040000 		.4byte	.LASF133
 2190 0c47 05       		.byte	0x5
 2191 0c48 0205     		.2byte	0x502
 2192 0c4a 89050000 		.4byte	0x589
 2193 0c4e 23       		.uleb128 0x23
 2194 0c4f 36010000 		.4byte	.LASF134
 2195 0c53 05       		.byte	0x5
 2196 0c54 0305     		.2byte	0x503
 2197 0c56 5A0C0000 		.4byte	0xc5a
 2198 0c5a 19       		.uleb128 0x19
 2199 0c5b 5A060000 		.4byte	0x65a
 2200 0c5f 24       		.uleb128 0x24
 2201 0c60 55040000 		.4byte	.LASF135
 2202 0c64 55040000 		.4byte	.LASF135
 2203 0c68 06       		.byte	0x6
 2204 0c69 19       		.byte	0x19
 2205 0c6a 24       		.uleb128 0x24
 2206 0c6b 38020000 		.4byte	.LASF136
 2207 0c6f 38020000 		.4byte	.LASF136
 2208 0c73 07       		.byte	0x7
 2209 0c74 85       		.byte	0x85
 2210 0c75 24       		.uleb128 0x24
 2211 0c76 B0010000 		.4byte	.LASF137
 2212 0c7a B0010000 		.4byte	.LASF137
 2213 0c7e 07       		.byte	0x7
 2214 0c7f 72       		.byte	0x72
 2215 0c80 00       		.byte	0
 2216              		.section	.debug_abbrev,"",%progbits
 2217              	.Ldebug_abbrev0:
 2218 0000 01       		.uleb128 0x1
 2219 0001 11       		.uleb128 0x11
 2220 0002 01       		.byte	0x1
 2221 0003 25       		.uleb128 0x25
 2222 0004 0E       		.uleb128 0xe
 2223 0005 13       		.uleb128 0x13
 2224 0006 0B       		.uleb128 0xb
 2225 0007 03       		.uleb128 0x3
 2226 0008 0E       		.uleb128 0xe
 2227 0009 1B       		.uleb128 0x1b
 2228 000a 0E       		.uleb128 0xe
 2229 000b 55       		.uleb128 0x55
 2230 000c 17       		.uleb128 0x17
 2231 000d 11       		.uleb128 0x11
 2232 000e 01       		.uleb128 0x1
 2233 000f 10       		.uleb128 0x10
 2234 0010 17       		.uleb128 0x17
 2235 0011 00       		.byte	0
 2236 0012 00       		.byte	0
 2237 0013 02       		.uleb128 0x2
 2238 0014 24       		.uleb128 0x24
 2239 0015 00       		.byte	0
 2240 0016 0B       		.uleb128 0xb
 2241 0017 0B       		.uleb128 0xb
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 70


 2242 0018 3E       		.uleb128 0x3e
 2243 0019 0B       		.uleb128 0xb
 2244 001a 03       		.uleb128 0x3
 2245 001b 0E       		.uleb128 0xe
 2246 001c 00       		.byte	0
 2247 001d 00       		.byte	0
 2248 001e 03       		.uleb128 0x3
 2249 001f 24       		.uleb128 0x24
 2250 0020 00       		.byte	0
 2251 0021 0B       		.uleb128 0xb
 2252 0022 0B       		.uleb128 0xb
 2253 0023 3E       		.uleb128 0x3e
 2254 0024 0B       		.uleb128 0xb
 2255 0025 03       		.uleb128 0x3
 2256 0026 08       		.uleb128 0x8
 2257 0027 00       		.byte	0
 2258 0028 00       		.byte	0
 2259 0029 04       		.uleb128 0x4
 2260 002a 16       		.uleb128 0x16
 2261 002b 00       		.byte	0
 2262 002c 03       		.uleb128 0x3
 2263 002d 0E       		.uleb128 0xe
 2264 002e 3A       		.uleb128 0x3a
 2265 002f 0B       		.uleb128 0xb
 2266 0030 3B       		.uleb128 0x3b
 2267 0031 05       		.uleb128 0x5
 2268 0032 49       		.uleb128 0x49
 2269 0033 13       		.uleb128 0x13
 2270 0034 00       		.byte	0
 2271 0035 00       		.byte	0
 2272 0036 05       		.uleb128 0x5
 2273 0037 35       		.uleb128 0x35
 2274 0038 00       		.byte	0
 2275 0039 49       		.uleb128 0x49
 2276 003a 13       		.uleb128 0x13
 2277 003b 00       		.byte	0
 2278 003c 00       		.byte	0
 2279 003d 06       		.uleb128 0x6
 2280 003e 16       		.uleb128 0x16
 2281 003f 00       		.byte	0
 2282 0040 03       		.uleb128 0x3
 2283 0041 0E       		.uleb128 0xe
 2284 0042 3A       		.uleb128 0x3a
 2285 0043 0B       		.uleb128 0xb
 2286 0044 3B       		.uleb128 0x3b
 2287 0045 0B       		.uleb128 0xb
 2288 0046 49       		.uleb128 0x49
 2289 0047 13       		.uleb128 0x13
 2290 0048 00       		.byte	0
 2291 0049 00       		.byte	0
 2292 004a 07       		.uleb128 0x7
 2293 004b 0F       		.uleb128 0xf
 2294 004c 00       		.byte	0
 2295 004d 0B       		.uleb128 0xb
 2296 004e 0B       		.uleb128 0xb
 2297 004f 00       		.byte	0
 2298 0050 00       		.byte	0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 71


 2299 0051 08       		.uleb128 0x8
 2300 0052 04       		.uleb128 0x4
 2301 0053 01       		.byte	0x1
 2302 0054 0B       		.uleb128 0xb
 2303 0055 0B       		.uleb128 0xb
 2304 0056 49       		.uleb128 0x49
 2305 0057 13       		.uleb128 0x13
 2306 0058 3A       		.uleb128 0x3a
 2307 0059 0B       		.uleb128 0xb
 2308 005a 3B       		.uleb128 0x3b
 2309 005b 0B       		.uleb128 0xb
 2310 005c 01       		.uleb128 0x1
 2311 005d 13       		.uleb128 0x13
 2312 005e 00       		.byte	0
 2313 005f 00       		.byte	0
 2314 0060 09       		.uleb128 0x9
 2315 0061 28       		.uleb128 0x28
 2316 0062 00       		.byte	0
 2317 0063 03       		.uleb128 0x3
 2318 0064 0E       		.uleb128 0xe
 2319 0065 1C       		.uleb128 0x1c
 2320 0066 0B       		.uleb128 0xb
 2321 0067 00       		.byte	0
 2322 0068 00       		.byte	0
 2323 0069 0A       		.uleb128 0xa
 2324 006a 13       		.uleb128 0x13
 2325 006b 01       		.byte	0x1
 2326 006c 0B       		.uleb128 0xb
 2327 006d 0B       		.uleb128 0xb
 2328 006e 3A       		.uleb128 0x3a
 2329 006f 0B       		.uleb128 0xb
 2330 0070 3B       		.uleb128 0x3b
 2331 0071 0B       		.uleb128 0xb
 2332 0072 01       		.uleb128 0x1
 2333 0073 13       		.uleb128 0x13
 2334 0074 00       		.byte	0
 2335 0075 00       		.byte	0
 2336 0076 0B       		.uleb128 0xb
 2337 0077 0D       		.uleb128 0xd
 2338 0078 00       		.byte	0
 2339 0079 03       		.uleb128 0x3
 2340 007a 0E       		.uleb128 0xe
 2341 007b 3A       		.uleb128 0x3a
 2342 007c 0B       		.uleb128 0xb
 2343 007d 3B       		.uleb128 0x3b
 2344 007e 0B       		.uleb128 0xb
 2345 007f 49       		.uleb128 0x49
 2346 0080 13       		.uleb128 0x13
 2347 0081 38       		.uleb128 0x38
 2348 0082 0B       		.uleb128 0xb
 2349 0083 00       		.byte	0
 2350 0084 00       		.byte	0
 2351 0085 0C       		.uleb128 0xc
 2352 0086 01       		.uleb128 0x1
 2353 0087 01       		.byte	0x1
 2354 0088 49       		.uleb128 0x49
 2355 0089 13       		.uleb128 0x13
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 72


 2356 008a 01       		.uleb128 0x1
 2357 008b 13       		.uleb128 0x13
 2358 008c 00       		.byte	0
 2359 008d 00       		.byte	0
 2360 008e 0D       		.uleb128 0xd
 2361 008f 21       		.uleb128 0x21
 2362 0090 00       		.byte	0
 2363 0091 49       		.uleb128 0x49
 2364 0092 13       		.uleb128 0x13
 2365 0093 2F       		.uleb128 0x2f
 2366 0094 0B       		.uleb128 0xb
 2367 0095 00       		.byte	0
 2368 0096 00       		.byte	0
 2369 0097 0E       		.uleb128 0xe
 2370 0098 0D       		.uleb128 0xd
 2371 0099 00       		.byte	0
 2372 009a 03       		.uleb128 0x3
 2373 009b 0E       		.uleb128 0xe
 2374 009c 3A       		.uleb128 0x3a
 2375 009d 0B       		.uleb128 0xb
 2376 009e 3B       		.uleb128 0x3b
 2377 009f 05       		.uleb128 0x5
 2378 00a0 49       		.uleb128 0x49
 2379 00a1 13       		.uleb128 0x13
 2380 00a2 38       		.uleb128 0x38
 2381 00a3 0B       		.uleb128 0xb
 2382 00a4 00       		.byte	0
 2383 00a5 00       		.byte	0
 2384 00a6 0F       		.uleb128 0xf
 2385 00a7 13       		.uleb128 0x13
 2386 00a8 01       		.byte	0x1
 2387 00a9 0B       		.uleb128 0xb
 2388 00aa 0B       		.uleb128 0xb
 2389 00ab 3A       		.uleb128 0x3a
 2390 00ac 0B       		.uleb128 0xb
 2391 00ad 3B       		.uleb128 0x3b
 2392 00ae 05       		.uleb128 0x5
 2393 00af 01       		.uleb128 0x1
 2394 00b0 13       		.uleb128 0x13
 2395 00b1 00       		.byte	0
 2396 00b2 00       		.byte	0
 2397 00b3 10       		.uleb128 0x10
 2398 00b4 0D       		.uleb128 0xd
 2399 00b5 00       		.byte	0
 2400 00b6 03       		.uleb128 0x3
 2401 00b7 08       		.uleb128 0x8
 2402 00b8 3A       		.uleb128 0x3a
 2403 00b9 0B       		.uleb128 0xb
 2404 00ba 3B       		.uleb128 0x3b
 2405 00bb 05       		.uleb128 0x5
 2406 00bc 49       		.uleb128 0x49
 2407 00bd 13       		.uleb128 0x13
 2408 00be 38       		.uleb128 0x38
 2409 00bf 0B       		.uleb128 0xb
 2410 00c0 00       		.byte	0
 2411 00c1 00       		.byte	0
 2412 00c2 11       		.uleb128 0x11
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 73


 2413 00c3 0F       		.uleb128 0xf
 2414 00c4 00       		.byte	0
 2415 00c5 0B       		.uleb128 0xb
 2416 00c6 0B       		.uleb128 0xb
 2417 00c7 49       		.uleb128 0x49
 2418 00c8 13       		.uleb128 0x13
 2419 00c9 00       		.byte	0
 2420 00ca 00       		.byte	0
 2421 00cb 12       		.uleb128 0x12
 2422 00cc 26       		.uleb128 0x26
 2423 00cd 00       		.byte	0
 2424 00ce 00       		.byte	0
 2425 00cf 00       		.byte	0
 2426 00d0 13       		.uleb128 0x13
 2427 00d1 17       		.uleb128 0x17
 2428 00d2 01       		.byte	0x1
 2429 00d3 0B       		.uleb128 0xb
 2430 00d4 0B       		.uleb128 0xb
 2431 00d5 3A       		.uleb128 0x3a
 2432 00d6 0B       		.uleb128 0xb
 2433 00d7 3B       		.uleb128 0x3b
 2434 00d8 05       		.uleb128 0x5
 2435 00d9 01       		.uleb128 0x1
 2436 00da 13       		.uleb128 0x13
 2437 00db 00       		.byte	0
 2438 00dc 00       		.byte	0
 2439 00dd 14       		.uleb128 0x14
 2440 00de 0D       		.uleb128 0xd
 2441 00df 00       		.byte	0
 2442 00e0 03       		.uleb128 0x3
 2443 00e1 08       		.uleb128 0x8
 2444 00e2 3A       		.uleb128 0x3a
 2445 00e3 0B       		.uleb128 0xb
 2446 00e4 3B       		.uleb128 0x3b
 2447 00e5 05       		.uleb128 0x5
 2448 00e6 49       		.uleb128 0x49
 2449 00e7 13       		.uleb128 0x13
 2450 00e8 00       		.byte	0
 2451 00e9 00       		.byte	0
 2452 00ea 15       		.uleb128 0x15
 2453 00eb 0D       		.uleb128 0xd
 2454 00ec 00       		.byte	0
 2455 00ed 03       		.uleb128 0x3
 2456 00ee 0E       		.uleb128 0xe
 2457 00ef 3A       		.uleb128 0x3a
 2458 00f0 0B       		.uleb128 0xb
 2459 00f1 3B       		.uleb128 0x3b
 2460 00f2 05       		.uleb128 0x5
 2461 00f3 49       		.uleb128 0x49
 2462 00f4 13       		.uleb128 0x13
 2463 00f5 00       		.byte	0
 2464 00f6 00       		.byte	0
 2465 00f7 16       		.uleb128 0x16
 2466 00f8 2E       		.uleb128 0x2e
 2467 00f9 01       		.byte	0x1
 2468 00fa 3F       		.uleb128 0x3f
 2469 00fb 19       		.uleb128 0x19
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 74


 2470 00fc 03       		.uleb128 0x3
 2471 00fd 0E       		.uleb128 0xe
 2472 00fe 3A       		.uleb128 0x3a
 2473 00ff 0B       		.uleb128 0xb
 2474 0100 3B       		.uleb128 0x3b
 2475 0101 05       		.uleb128 0x5
 2476 0102 27       		.uleb128 0x27
 2477 0103 19       		.uleb128 0x19
 2478 0104 11       		.uleb128 0x11
 2479 0105 01       		.uleb128 0x1
 2480 0106 12       		.uleb128 0x12
 2481 0107 06       		.uleb128 0x6
 2482 0108 40       		.uleb128 0x40
 2483 0109 18       		.uleb128 0x18
 2484 010a 9742     		.uleb128 0x2117
 2485 010c 19       		.uleb128 0x19
 2486 010d 01       		.uleb128 0x1
 2487 010e 13       		.uleb128 0x13
 2488 010f 00       		.byte	0
 2489 0110 00       		.byte	0
 2490 0111 17       		.uleb128 0x17
 2491 0112 34       		.uleb128 0x34
 2492 0113 00       		.byte	0
 2493 0114 03       		.uleb128 0x3
 2494 0115 0E       		.uleb128 0xe
 2495 0116 3A       		.uleb128 0x3a
 2496 0117 0B       		.uleb128 0xb
 2497 0118 3B       		.uleb128 0x3b
 2498 0119 05       		.uleb128 0x5
 2499 011a 49       		.uleb128 0x49
 2500 011b 13       		.uleb128 0x13
 2501 011c 02       		.uleb128 0x2
 2502 011d 17       		.uleb128 0x17
 2503 011e 00       		.byte	0
 2504 011f 00       		.byte	0
 2505 0120 18       		.uleb128 0x18
 2506 0121 898201   		.uleb128 0x4109
 2507 0124 00       		.byte	0
 2508 0125 11       		.uleb128 0x11
 2509 0126 01       		.uleb128 0x1
 2510 0127 31       		.uleb128 0x31
 2511 0128 13       		.uleb128 0x13
 2512 0129 00       		.byte	0
 2513 012a 00       		.byte	0
 2514 012b 19       		.uleb128 0x19
 2515 012c 26       		.uleb128 0x26
 2516 012d 00       		.byte	0
 2517 012e 49       		.uleb128 0x49
 2518 012f 13       		.uleb128 0x13
 2519 0130 00       		.byte	0
 2520 0131 00       		.byte	0
 2521 0132 1A       		.uleb128 0x1a
 2522 0133 05       		.uleb128 0x5
 2523 0134 00       		.byte	0
 2524 0135 03       		.uleb128 0x3
 2525 0136 0E       		.uleb128 0xe
 2526 0137 3A       		.uleb128 0x3a
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 75


 2527 0138 0B       		.uleb128 0xb
 2528 0139 3B       		.uleb128 0x3b
 2529 013a 05       		.uleb128 0x5
 2530 013b 49       		.uleb128 0x49
 2531 013c 13       		.uleb128 0x13
 2532 013d 02       		.uleb128 0x2
 2533 013e 18       		.uleb128 0x18
 2534 013f 00       		.byte	0
 2535 0140 00       		.byte	0
 2536 0141 1B       		.uleb128 0x1b
 2537 0142 2E       		.uleb128 0x2e
 2538 0143 01       		.byte	0x1
 2539 0144 3F       		.uleb128 0x3f
 2540 0145 19       		.uleb128 0x19
 2541 0146 03       		.uleb128 0x3
 2542 0147 0E       		.uleb128 0xe
 2543 0148 3A       		.uleb128 0x3a
 2544 0149 0B       		.uleb128 0xb
 2545 014a 3B       		.uleb128 0x3b
 2546 014b 05       		.uleb128 0x5
 2547 014c 27       		.uleb128 0x27
 2548 014d 19       		.uleb128 0x19
 2549 014e 49       		.uleb128 0x49
 2550 014f 13       		.uleb128 0x13
 2551 0150 11       		.uleb128 0x11
 2552 0151 01       		.uleb128 0x1
 2553 0152 12       		.uleb128 0x12
 2554 0153 06       		.uleb128 0x6
 2555 0154 40       		.uleb128 0x40
 2556 0155 18       		.uleb128 0x18
 2557 0156 9742     		.uleb128 0x2117
 2558 0158 19       		.uleb128 0x19
 2559 0159 01       		.uleb128 0x1
 2560 015a 13       		.uleb128 0x13
 2561 015b 00       		.byte	0
 2562 015c 00       		.byte	0
 2563 015d 1C       		.uleb128 0x1c
 2564 015e 05       		.uleb128 0x5
 2565 015f 00       		.byte	0
 2566 0160 03       		.uleb128 0x3
 2567 0161 0E       		.uleb128 0xe
 2568 0162 3A       		.uleb128 0x3a
 2569 0163 0B       		.uleb128 0xb
 2570 0164 3B       		.uleb128 0x3b
 2571 0165 05       		.uleb128 0x5
 2572 0166 49       		.uleb128 0x49
 2573 0167 13       		.uleb128 0x13
 2574 0168 02       		.uleb128 0x2
 2575 0169 17       		.uleb128 0x17
 2576 016a 00       		.byte	0
 2577 016b 00       		.byte	0
 2578 016c 1D       		.uleb128 0x1d
 2579 016d 898201   		.uleb128 0x4109
 2580 0170 01       		.byte	0x1
 2581 0171 11       		.uleb128 0x11
 2582 0172 01       		.uleb128 0x1
 2583 0173 31       		.uleb128 0x31
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 76


 2584 0174 13       		.uleb128 0x13
 2585 0175 01       		.uleb128 0x1
 2586 0176 13       		.uleb128 0x13
 2587 0177 00       		.byte	0
 2588 0178 00       		.byte	0
 2589 0179 1E       		.uleb128 0x1e
 2590 017a 8A8201   		.uleb128 0x410a
 2591 017d 00       		.byte	0
 2592 017e 02       		.uleb128 0x2
 2593 017f 18       		.uleb128 0x18
 2594 0180 9142     		.uleb128 0x2111
 2595 0182 18       		.uleb128 0x18
 2596 0183 00       		.byte	0
 2597 0184 00       		.byte	0
 2598 0185 1F       		.uleb128 0x1f
 2599 0186 898201   		.uleb128 0x4109
 2600 0189 01       		.byte	0x1
 2601 018a 11       		.uleb128 0x11
 2602 018b 01       		.uleb128 0x1
 2603 018c 31       		.uleb128 0x31
 2604 018d 13       		.uleb128 0x13
 2605 018e 00       		.byte	0
 2606 018f 00       		.byte	0
 2607 0190 20       		.uleb128 0x20
 2608 0191 34       		.uleb128 0x34
 2609 0192 00       		.byte	0
 2610 0193 03       		.uleb128 0x3
 2611 0194 0E       		.uleb128 0xe
 2612 0195 3A       		.uleb128 0x3a
 2613 0196 0B       		.uleb128 0xb
 2614 0197 3B       		.uleb128 0x3b
 2615 0198 05       		.uleb128 0x5
 2616 0199 49       		.uleb128 0x49
 2617 019a 13       		.uleb128 0x13
 2618 019b 02       		.uleb128 0x2
 2619 019c 18       		.uleb128 0x18
 2620 019d 00       		.byte	0
 2621 019e 00       		.byte	0
 2622 019f 21       		.uleb128 0x21
 2623 01a0 34       		.uleb128 0x34
 2624 01a1 00       		.byte	0
 2625 01a2 03       		.uleb128 0x3
 2626 01a3 0E       		.uleb128 0xe
 2627 01a4 3A       		.uleb128 0x3a
 2628 01a5 0B       		.uleb128 0xb
 2629 01a6 3B       		.uleb128 0x3b
 2630 01a7 05       		.uleb128 0x5
 2631 01a8 49       		.uleb128 0x49
 2632 01a9 13       		.uleb128 0x13
 2633 01aa 00       		.byte	0
 2634 01ab 00       		.byte	0
 2635 01ac 22       		.uleb128 0x22
 2636 01ad 34       		.uleb128 0x34
 2637 01ae 00       		.byte	0
 2638 01af 03       		.uleb128 0x3
 2639 01b0 0E       		.uleb128 0xe
 2640 01b1 3A       		.uleb128 0x3a
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 77


 2641 01b2 0B       		.uleb128 0xb
 2642 01b3 3B       		.uleb128 0x3b
 2643 01b4 05       		.uleb128 0x5
 2644 01b5 49       		.uleb128 0x49
 2645 01b6 13       		.uleb128 0x13
 2646 01b7 1C       		.uleb128 0x1c
 2647 01b8 06       		.uleb128 0x6
 2648 01b9 00       		.byte	0
 2649 01ba 00       		.byte	0
 2650 01bb 23       		.uleb128 0x23
 2651 01bc 34       		.uleb128 0x34
 2652 01bd 00       		.byte	0
 2653 01be 03       		.uleb128 0x3
 2654 01bf 0E       		.uleb128 0xe
 2655 01c0 3A       		.uleb128 0x3a
 2656 01c1 0B       		.uleb128 0xb
 2657 01c2 3B       		.uleb128 0x3b
 2658 01c3 05       		.uleb128 0x5
 2659 01c4 49       		.uleb128 0x49
 2660 01c5 13       		.uleb128 0x13
 2661 01c6 3F       		.uleb128 0x3f
 2662 01c7 19       		.uleb128 0x19
 2663 01c8 3C       		.uleb128 0x3c
 2664 01c9 19       		.uleb128 0x19
 2665 01ca 00       		.byte	0
 2666 01cb 00       		.byte	0
 2667 01cc 24       		.uleb128 0x24
 2668 01cd 2E       		.uleb128 0x2e
 2669 01ce 00       		.byte	0
 2670 01cf 3F       		.uleb128 0x3f
 2671 01d0 19       		.uleb128 0x19
 2672 01d1 3C       		.uleb128 0x3c
 2673 01d2 19       		.uleb128 0x19
 2674 01d3 6E       		.uleb128 0x6e
 2675 01d4 0E       		.uleb128 0xe
 2676 01d5 03       		.uleb128 0x3
 2677 01d6 0E       		.uleb128 0xe
 2678 01d7 3A       		.uleb128 0x3a
 2679 01d8 0B       		.uleb128 0xb
 2680 01d9 3B       		.uleb128 0x3b
 2681 01da 0B       		.uleb128 0xb
 2682 01db 00       		.byte	0
 2683 01dc 00       		.byte	0
 2684 01dd 00       		.byte	0
 2685              		.section	.debug_loc,"",%progbits
 2686              	.Ldebug_loc0:
 2687              	.LLST0:
 2688 0000 00000000 		.4byte	.LVL0
 2689 0004 12000000 		.4byte	.LVL1
 2690 0008 0200     		.2byte	0x2
 2691 000a 30       		.byte	0x30
 2692 000b 9F       		.byte	0x9f
 2693 000c 00000000 		.4byte	0
 2694 0010 00000000 		.4byte	0
 2695              	.LLST1:
 2696 0014 1C000000 		.4byte	.LVL2
 2697 0018 30000000 		.4byte	.LVL3
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 78


 2698 001c 0100     		.2byte	0x1
 2699 001e 52       		.byte	0x52
 2700 001f 32000000 		.4byte	.LVL4
 2701 0023 3A000000 		.4byte	.LVL5
 2702 0027 0100     		.2byte	0x1
 2703 0029 52       		.byte	0x52
 2704 002a 00000000 		.4byte	0
 2705 002e 00000000 		.4byte	0
 2706              	.LLST2:
 2707 0032 1C000000 		.4byte	.LVL2
 2708 0036 41000000 		.4byte	.LVL6-1
 2709 003a 0100     		.2byte	0x1
 2710 003c 53       		.byte	0x53
 2711 003d 00000000 		.4byte	0
 2712 0041 00000000 		.4byte	0
 2713              	.LLST3:
 2714 0045 12000000 		.4byte	.LVL1
 2715 0049 42000000 		.4byte	.LVL6
 2716 004d 0300     		.2byte	0x3
 2717 004f 74       		.byte	0x74
 2718 0050 7C       		.sleb128 -4
 2719 0051 9F       		.byte	0x9f
 2720 0052 42000000 		.4byte	.LVL6
 2721 0056 44000000 		.4byte	.LVL7
 2722 005a 0300     		.2byte	0x3
 2723 005c 74       		.byte	0x74
 2724 005d 18       		.sleb128 24
 2725 005e 9F       		.byte	0x9f
 2726 005f 44000000 		.4byte	.LVL7
 2727 0063 48000000 		.4byte	.LVL10
 2728 0067 0300     		.2byte	0x3
 2729 0069 74       		.byte	0x74
 2730 006a 7C       		.sleb128 -4
 2731 006b 9F       		.byte	0x9f
 2732 006c 00000000 		.4byte	0
 2733 0070 00000000 		.4byte	0
 2734              	.LLST4:
 2735 0074 00000000 		.4byte	.LVL12
 2736 0078 08000000 		.4byte	.LVL13
 2737 007c 0200     		.2byte	0x2
 2738 007e 30       		.byte	0x30
 2739 007f 9F       		.byte	0x9f
 2740 0080 08000000 		.4byte	.LVL13
 2741 0084 0C000000 		.4byte	.LVL14
 2742 0088 0E00     		.2byte	0xe
 2743 008a 73       		.byte	0x73
 2744 008b 00       		.sleb128 0
 2745 008c 0A       		.byte	0xa
 2746 008d FFFF     		.2byte	0xffff
 2747 008f 1A       		.byte	0x1a
 2748 0090 72       		.byte	0x72
 2749 0091 00       		.sleb128 0
 2750 0092 0A       		.byte	0xa
 2751 0093 FFFF     		.2byte	0xffff
 2752 0095 1A       		.byte	0x1a
 2753 0096 1C       		.byte	0x1c
 2754 0097 9F       		.byte	0x9f
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 79


 2755 0098 0C000000 		.4byte	.LVL14
 2756 009c 0E000000 		.4byte	.LVL15
 2757 00a0 1000     		.2byte	0x10
 2758 00a2 71       		.byte	0x71
 2759 00a3 00       		.sleb128 0
 2760 00a4 94       		.byte	0x94
 2761 00a5 02       		.byte	0x2
 2762 00a6 0A       		.byte	0xa
 2763 00a7 FFFF     		.2byte	0xffff
 2764 00a9 1A       		.byte	0x1a
 2765 00aa 72       		.byte	0x72
 2766 00ab 00       		.sleb128 0
 2767 00ac 0A       		.byte	0xa
 2768 00ad FFFF     		.2byte	0xffff
 2769 00af 1A       		.byte	0x1a
 2770 00b0 1C       		.byte	0x1c
 2771 00b1 9F       		.byte	0x9f
 2772 00b2 0E000000 		.4byte	.LVL15
 2773 00b6 16000000 		.4byte	.LFE5
 2774 00ba 1200     		.2byte	0x12
 2775 00bc 71       		.byte	0x71
 2776 00bd 00       		.sleb128 0
 2777 00be 94       		.byte	0x94
 2778 00bf 02       		.byte	0x2
 2779 00c0 0A       		.byte	0xa
 2780 00c1 FFFF     		.2byte	0xffff
 2781 00c3 1A       		.byte	0x1a
 2782 00c4 71       		.byte	0x71
 2783 00c5 02       		.sleb128 2
 2784 00c6 94       		.byte	0x94
 2785 00c7 02       		.byte	0x2
 2786 00c8 0A       		.byte	0xa
 2787 00c9 FFFF     		.2byte	0xffff
 2788 00cb 1A       		.byte	0x1a
 2789 00cc 1C       		.byte	0x1c
 2790 00cd 9F       		.byte	0x9f
 2791 00ce 00000000 		.4byte	0
 2792 00d2 00000000 		.4byte	0
 2793              	.LLST5:
 2794 00d6 00000000 		.4byte	.LVL16
 2795 00da 1A000000 		.4byte	.LVL22
 2796 00de 0100     		.2byte	0x1
 2797 00e0 50       		.byte	0x50
 2798 00e1 1A000000 		.4byte	.LVL22
 2799 00e5 52000000 		.4byte	.LVL34
 2800 00e9 0100     		.2byte	0x1
 2801 00eb 55       		.byte	0x55
 2802 00ec 52000000 		.4byte	.LVL34
 2803 00f0 54000000 		.4byte	.LFE2
 2804 00f4 0400     		.2byte	0x4
 2805 00f6 F3       		.byte	0xf3
 2806 00f7 01       		.uleb128 0x1
 2807 00f8 50       		.byte	0x50
 2808 00f9 9F       		.byte	0x9f
 2809 00fa 00000000 		.4byte	0
 2810 00fe 00000000 		.4byte	0
 2811              	.LLST6:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 80


 2812 0102 00000000 		.4byte	.LVL16
 2813 0106 1A000000 		.4byte	.LVL22
 2814 010a 0200     		.2byte	0x2
 2815 010c 30       		.byte	0x30
 2816 010d 9F       		.byte	0x9f
 2817 010e 26000000 		.4byte	.LVL24
 2818 0112 42000000 		.4byte	.LVL27
 2819 0116 0200     		.2byte	0x2
 2820 0118 7D       		.byte	0x7d
 2821 0119 00       		.sleb128 0
 2822 011a 42000000 		.4byte	.LVL27
 2823 011e 44000000 		.4byte	.LVL28
 2824 0122 0100     		.2byte	0x1
 2825 0124 50       		.byte	0x50
 2826 0125 44000000 		.4byte	.LVL28
 2827 0129 52000000 		.4byte	.LVL32
 2828 012d 0200     		.2byte	0x2
 2829 012f 7D       		.byte	0x7d
 2830 0130 00       		.sleb128 0
 2831 0131 52000000 		.4byte	.LVL32
 2832 0135 54000000 		.4byte	.LFE2
 2833 0139 0200     		.2byte	0x2
 2834 013b 91       		.byte	0x91
 2835 013c 58       		.sleb128 -40
 2836 013d 00000000 		.4byte	0
 2837 0141 00000000 		.4byte	0
 2838              	.LLST7:
 2839 0145 18000000 		.4byte	.LVL21
 2840 0149 1A000000 		.4byte	.LVL22
 2841 014d 0100     		.2byte	0x1
 2842 014f 53       		.byte	0x53
 2843 0150 1A000000 		.4byte	.LVL22
 2844 0154 54000000 		.4byte	.LFE2
 2845 0158 0200     		.2byte	0x2
 2846 015a 91       		.byte	0x91
 2847 015b 60       		.sleb128 -32
 2848 015c 00000000 		.4byte	0
 2849 0160 00000000 		.4byte	0
 2850              	.LLST8:
 2851 0164 18000000 		.4byte	.LVL21
 2852 0168 1A000000 		.4byte	.LVL22
 2853 016c 0200     		.2byte	0x2
 2854 016e 30       		.byte	0x30
 2855 016f 9F       		.byte	0x9f
 2856 0170 26000000 		.4byte	.LVL24
 2857 0174 52000000 		.4byte	.LVL33
 2858 0178 0100     		.2byte	0x1
 2859 017a 54       		.byte	0x54
 2860 017b 00000000 		.4byte	0
 2861 017f 00000000 		.4byte	0
 2862              	.LLST9:
 2863 0183 0C000000 		.4byte	.LVL17
 2864 0187 0E000000 		.4byte	.LVL18
 2865 018b 0100     		.2byte	0x1
 2866 018d 53       		.byte	0x53
 2867 018e 0E000000 		.4byte	.LVL18
 2868 0192 1A000000 		.4byte	.LVL22
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 81


 2869 0196 0200     		.2byte	0x2
 2870 0198 70       		.byte	0x70
 2871 0199 08       		.sleb128 8
 2872 019a 26000000 		.4byte	.LVL24
 2873 019e 48000000 		.4byte	.LVL29
 2874 01a2 0100     		.2byte	0x1
 2875 01a4 56       		.byte	0x56
 2876 01a5 48000000 		.4byte	.LVL29
 2877 01a9 4A000000 		.4byte	.LVL30
 2878 01ad 0900     		.2byte	0x9
 2879 01af 74       		.byte	0x74
 2880 01b0 01       		.sleb128 1
 2881 01b1 3A       		.byte	0x3a
 2882 01b2 1E       		.byte	0x1e
 2883 01b3 91       		.byte	0x91
 2884 01b4 64       		.sleb128 -28
 2885 01b5 06       		.byte	0x6
 2886 01b6 22       		.byte	0x22
 2887 01b7 9F       		.byte	0x9f
 2888 01b8 4A000000 		.4byte	.LVL30
 2889 01bc 4E000000 		.4byte	.LVL31
 2890 01c0 0900     		.2byte	0x9
 2891 01c2 74       		.byte	0x74
 2892 01c3 00       		.sleb128 0
 2893 01c4 3A       		.byte	0x3a
 2894 01c5 1E       		.byte	0x1e
 2895 01c6 91       		.byte	0x91
 2896 01c7 64       		.sleb128 -28
 2897 01c8 06       		.byte	0x6
 2898 01c9 22       		.byte	0x22
 2899 01ca 9F       		.byte	0x9f
 2900 01cb 4E000000 		.4byte	.LVL31
 2901 01cf 52000000 		.4byte	.LVL35
 2902 01d3 0100     		.2byte	0x1
 2903 01d5 56       		.byte	0x56
 2904 01d6 00000000 		.4byte	0
 2905 01da 00000000 		.4byte	0
 2906              	.LLST10:
 2907 01de 12000000 		.4byte	.LVL19
 2908 01e2 14000000 		.4byte	.LVL20
 2909 01e6 0100     		.2byte	0x1
 2910 01e8 53       		.byte	0x53
 2911 01e9 14000000 		.4byte	.LVL20
 2912 01ed 1A000000 		.4byte	.LVL22
 2913 01f1 0200     		.2byte	0x2
 2914 01f3 70       		.byte	0x70
 2915 01f4 04       		.sleb128 4
 2916 01f5 1A000000 		.4byte	.LVL22
 2917 01f9 54000000 		.4byte	.LFE2
 2918 01fd 0200     		.2byte	0x2
 2919 01ff 91       		.byte	0x91
 2920 0200 5C       		.sleb128 -36
 2921 0201 00000000 		.4byte	0
 2922 0205 00000000 		.4byte	0
 2923              	.LLST11:
 2924 0209 00000000 		.4byte	.LVL16
 2925 020d 1A000000 		.4byte	.LVL22
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 82


 2926 0211 0400     		.2byte	0x4
 2927 0213 70       		.byte	0x70
 2928 0214 0C       		.sleb128 12
 2929 0215 93       		.byte	0x93
 2930 0216 04       		.uleb128 0x4
 2931 0217 24000000 		.4byte	.LVL23
 2932 021b 33000000 		.4byte	.LVL25-1
 2933 021f 0300     		.2byte	0x3
 2934 0221 50       		.byte	0x50
 2935 0222 93       		.byte	0x93
 2936 0223 04       		.uleb128 0x4
 2937 0224 33000000 		.4byte	.LVL25-1
 2938 0228 48000000 		.4byte	.LVL29
 2939 022c 0500     		.2byte	0x5
 2940 022e 77       		.byte	0x77
 2941 022f 74       		.sleb128 -12
 2942 0230 9F       		.byte	0x9f
 2943 0231 93       		.byte	0x93
 2944 0232 04       		.uleb128 0x4
 2945 0233 00000000 		.4byte	0
 2946 0237 00000000 		.4byte	0
 2947              	.LLST12:
 2948 023b 00000000 		.4byte	.LVL16
 2949 023f 1A000000 		.4byte	.LVL22
 2950 0243 0A00     		.2byte	0xa
 2951 0245 70       		.byte	0x70
 2952 0246 1A       		.sleb128 26
 2953 0247 94       		.byte	0x94
 2954 0248 01       		.byte	0x1
 2955 0249 36       		.byte	0x36
 2956 024a 29       		.byte	0x29
 2957 024b 08       		.byte	0x8
 2958 024c FF       		.byte	0xff
 2959 024d 1A       		.byte	0x1a
 2960 024e 9F       		.byte	0x9f
 2961 024f 00000000 		.4byte	0
 2962 0253 00000000 		.4byte	0
 2963              	.LLST13:
 2964 0257 00000000 		.4byte	.LVL36
 2965 025b 16000000 		.4byte	.LVL44
 2966 025f 0100     		.2byte	0x1
 2967 0261 50       		.byte	0x50
 2968 0262 16000000 		.4byte	.LVL44
 2969 0266 3C000000 		.4byte	.LFE3
 2970 026a 0400     		.2byte	0x4
 2971 026c F3       		.byte	0xf3
 2972 026d 01       		.uleb128 0x1
 2973 026e 50       		.byte	0x50
 2974 026f 9F       		.byte	0x9f
 2975 0270 00000000 		.4byte	0
 2976 0274 00000000 		.4byte	0
 2977              	.LLST14:
 2978 0278 00000000 		.4byte	.LVL36
 2979 027c 19000000 		.4byte	.LVL45-1
 2980 0280 0100     		.2byte	0x1
 2981 0282 51       		.byte	0x51
 2982 0283 19000000 		.4byte	.LVL45-1
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 83


 2983 0287 3A000000 		.4byte	.LVL51
 2984 028b 0100     		.2byte	0x1
 2985 028d 54       		.byte	0x54
 2986 028e 3A000000 		.4byte	.LVL51
 2987 0292 3C000000 		.4byte	.LFE3
 2988 0296 0400     		.2byte	0x4
 2989 0298 F3       		.byte	0xf3
 2990 0299 01       		.uleb128 0x1
 2991 029a 51       		.byte	0x51
 2992 029b 9F       		.byte	0x9f
 2993 029c 00000000 		.4byte	0
 2994 02a0 00000000 		.4byte	0
 2995              	.LLST15:
 2996 02a4 00000000 		.4byte	.LVL36
 2997 02a8 02000000 		.4byte	.LVL37
 2998 02ac 0100     		.2byte	0x1
 2999 02ae 52       		.byte	0x52
 3000 02af 0A000000 		.4byte	.LVL40
 3001 02b3 14000000 		.4byte	.LVL43
 3002 02b7 0100     		.2byte	0x1
 3003 02b9 52       		.byte	0x52
 3004 02ba 14000000 		.4byte	.LVL43
 3005 02be 1C000000 		.4byte	.LVL46
 3006 02c2 0100     		.2byte	0x1
 3007 02c4 55       		.byte	0x55
 3008 02c5 1C000000 		.4byte	.LVL46
 3009 02c9 22000000 		.4byte	.LVL47
 3010 02cd 0100     		.2byte	0x1
 3011 02cf 52       		.byte	0x52
 3012 02d0 2C000000 		.4byte	.LVL49
 3013 02d4 37000000 		.4byte	.LVL50-1
 3014 02d8 0100     		.2byte	0x1
 3015 02da 52       		.byte	0x52
 3016 02db 38000000 		.4byte	.LVL50
 3017 02df 3C000000 		.4byte	.LFE3
 3018 02e3 0100     		.2byte	0x1
 3019 02e5 52       		.byte	0x52
 3020 02e6 00000000 		.4byte	0
 3021 02ea 00000000 		.4byte	0
 3022              	.LLST16:
 3023 02ee 00000000 		.4byte	.LVL36
 3024 02f2 06000000 		.4byte	.LVL38
 3025 02f6 0100     		.2byte	0x1
 3026 02f8 53       		.byte	0x53
 3027 02f9 06000000 		.4byte	.LVL38
 3028 02fd 3A000000 		.4byte	.LVL53
 3029 0301 0100     		.2byte	0x1
 3030 0303 56       		.byte	0x56
 3031 0304 3A000000 		.4byte	.LVL53
 3032 0308 3C000000 		.4byte	.LFE3
 3033 030c 0400     		.2byte	0x4
 3034 030e F3       		.byte	0xf3
 3035 030f 01       		.uleb128 0x1
 3036 0310 53       		.byte	0x53
 3037 0311 9F       		.byte	0x9f
 3038 0312 00000000 		.4byte	0
 3039 0316 00000000 		.4byte	0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 84


 3040              	.LLST17:
 3041 031a 00000000 		.4byte	.LVL36
 3042 031e 2C000000 		.4byte	.LVL49
 3043 0322 0200     		.2byte	0x2
 3044 0324 30       		.byte	0x30
 3045 0325 9F       		.byte	0x9f
 3046 0326 2C000000 		.4byte	.LVL49
 3047 032a 3A000000 		.4byte	.LVL52
 3048 032e 0100     		.2byte	0x1
 3049 0330 55       		.byte	0x55
 3050 0331 3A000000 		.4byte	.LVL52
 3051 0335 3C000000 		.4byte	.LFE3
 3052 0339 0100     		.2byte	0x1
 3053 033b 50       		.byte	0x50
 3054 033c 00000000 		.4byte	0
 3055 0340 00000000 		.4byte	0
 3056              	.LLST18:
 3057 0344 08000000 		.4byte	.LVL39
 3058 0348 3A000000 		.4byte	.LVL54
 3059 034c 0100     		.2byte	0x1
 3060 034e 57       		.byte	0x57
 3061 034f 00000000 		.4byte	0
 3062 0353 00000000 		.4byte	0
 3063              	.LLST19:
 3064 0357 0E000000 		.4byte	.LVL41
 3065 035b 12000000 		.4byte	.LVL42
 3066 035f 0100     		.2byte	0x1
 3067 0361 53       		.byte	0x53
 3068 0362 12000000 		.4byte	.LVL42
 3069 0366 16000000 		.4byte	.LVL44
 3070 036a 0200     		.2byte	0x2
 3071 036c 70       		.byte	0x70
 3072 036d 04       		.sleb128 4
 3073 036e 16000000 		.4byte	.LVL44
 3074 0372 3C000000 		.4byte	.LFE3
 3075 0376 0200     		.2byte	0x2
 3076 0378 91       		.byte	0x91
 3077 0379 64       		.sleb128 -28
 3078 037a 00000000 		.4byte	0
 3079 037e 00000000 		.4byte	0
 3080              	.LLST20:
 3081 0382 00000000 		.4byte	.LVL55
 3082 0386 4C000000 		.4byte	.LVL67
 3083 038a 0100     		.2byte	0x1
 3084 038c 50       		.byte	0x50
 3085 038d 4C000000 		.4byte	.LVL67
 3086 0391 66000000 		.4byte	.LFE6
 3087 0395 0100     		.2byte	0x1
 3088 0397 50       		.byte	0x50
 3089 0398 00000000 		.4byte	0
 3090 039c 00000000 		.4byte	0
 3091              	.LLST21:
 3092 03a0 00000000 		.4byte	.LVL55
 3093 03a4 0E000000 		.4byte	.LVL59
 3094 03a8 0100     		.2byte	0x1
 3095 03aa 51       		.byte	0x51
 3096 03ab 0E000000 		.4byte	.LVL59
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 85


 3097 03af 66000000 		.4byte	.LFE6
 3098 03b3 0400     		.2byte	0x4
 3099 03b5 F3       		.byte	0xf3
 3100 03b6 01       		.uleb128 0x1
 3101 03b7 51       		.byte	0x51
 3102 03b8 9F       		.byte	0x9f
 3103 03b9 00000000 		.4byte	0
 3104 03bd 00000000 		.4byte	0
 3105              	.LLST22:
 3106 03c1 08000000 		.4byte	.LVL56
 3107 03c5 0A000000 		.4byte	.LVL57
 3108 03c9 0100     		.2byte	0x1
 3109 03cb 53       		.byte	0x53
 3110 03cc 0A000000 		.4byte	.LVL57
 3111 03d0 0E000000 		.4byte	.LVL59
 3112 03d4 0200     		.2byte	0x2
 3113 03d6 91       		.byte	0x91
 3114 03d7 64       		.sleb128 -28
 3115 03d8 0E000000 		.4byte	.LVL59
 3116 03dc 16000000 		.4byte	.LVL60
 3117 03e0 0600     		.2byte	0x6
 3118 03e2 91       		.byte	0x91
 3119 03e3 64       		.sleb128 -28
 3120 03e4 06       		.byte	0x6
 3121 03e5 31       		.byte	0x31
 3122 03e6 1C       		.byte	0x1c
 3123 03e7 9F       		.byte	0x9f
 3124 03e8 16000000 		.4byte	.LVL60
 3125 03ec 66000000 		.4byte	.LFE6
 3126 03f0 0200     		.2byte	0x2
 3127 03f2 91       		.byte	0x91
 3128 03f3 64       		.sleb128 -28
 3129 03f4 00000000 		.4byte	0
 3130 03f8 00000000 		.4byte	0
 3131              	.LLST23:
 3132 03fc 30000000 		.4byte	.LVL62
 3133 0400 38000000 		.4byte	.LVL63
 3134 0404 0100     		.2byte	0x1
 3135 0406 53       		.byte	0x53
 3136 0407 38000000 		.4byte	.LVL63
 3137 040b 3E000000 		.4byte	.LVL64
 3138 040f 0200     		.2byte	0x2
 3139 0411 30       		.byte	0x30
 3140 0412 9F       		.byte	0x9f
 3141 0413 3E000000 		.4byte	.LVL64
 3142 0417 4A000000 		.4byte	.LVL66
 3143 041b 0100     		.2byte	0x1
 3144 041d 52       		.byte	0x52
 3145 041e 60000000 		.4byte	.LVL72
 3146 0422 64000000 		.4byte	.LVL74
 3147 0426 0200     		.2byte	0x2
 3148 0428 30       		.byte	0x30
 3149 0429 9F       		.byte	0x9f
 3150 042a 00000000 		.4byte	0
 3151 042e 00000000 		.4byte	0
 3152              	.LLST24:
 3153 0432 2A000000 		.4byte	.LVL61
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 86


 3154 0436 40000000 		.4byte	.LVL65
 3155 043a 0100     		.2byte	0x1
 3156 043c 56       		.byte	0x56
 3157 043d 60000000 		.4byte	.LVL72
 3158 0441 64000000 		.4byte	.LVL74
 3159 0445 0100     		.2byte	0x1
 3160 0447 56       		.byte	0x56
 3161 0448 00000000 		.4byte	0
 3162 044c 00000000 		.4byte	0
 3163              	.LLST25:
 3164 0450 08000000 		.4byte	.LVL56
 3165 0454 64000000 		.4byte	.LVL75
 3166 0458 0100     		.2byte	0x1
 3167 045a 54       		.byte	0x54
 3168 045b 00000000 		.4byte	0
 3169 045f 00000000 		.4byte	0
 3170              	.LLST26:
 3171 0463 0C000000 		.4byte	.LVL58
 3172 0467 64000000 		.4byte	.LVL76
 3173 046b 0100     		.2byte	0x1
 3174 046d 55       		.byte	0x55
 3175 046e 00000000 		.4byte	0
 3176 0472 00000000 		.4byte	0
 3177              	.LLST27:
 3178 0476 00000000 		.4byte	.LVL77
 3179 047a 56000000 		.4byte	.LVL92
 3180 047e 0100     		.2byte	0x1
 3181 0480 50       		.byte	0x50
 3182 0481 56000000 		.4byte	.LVL92
 3183 0485 74000000 		.4byte	.LFE7
 3184 0489 0100     		.2byte	0x1
 3185 048b 50       		.byte	0x50
 3186 048c 00000000 		.4byte	0
 3187 0490 00000000 		.4byte	0
 3188              	.LLST28:
 3189 0494 00000000 		.4byte	.LVL77
 3190 0498 12000000 		.4byte	.LVL79
 3191 049c 0100     		.2byte	0x1
 3192 049e 51       		.byte	0x51
 3193 049f 12000000 		.4byte	.LVL79
 3194 04a3 74000000 		.4byte	.LFE7
 3195 04a7 0400     		.2byte	0x4
 3196 04a9 F3       		.byte	0xf3
 3197 04aa 01       		.uleb128 0x1
 3198 04ab 51       		.byte	0x51
 3199 04ac 9F       		.byte	0x9f
 3200 04ad 00000000 		.4byte	0
 3201 04b1 00000000 		.4byte	0
 3202              	.LLST29:
 3203 04b5 20000000 		.4byte	.LVL81
 3204 04b9 26000000 		.4byte	.LVL82
 3205 04bd 0700     		.2byte	0x7
 3206 04bf 71       		.byte	0x71
 3207 04c0 00       		.sleb128 0
 3208 04c1 0A       		.byte	0xa
 3209 04c2 FFFF     		.2byte	0xffff
 3210 04c4 1A       		.byte	0x1a
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 87


 3211 04c5 9F       		.byte	0x9f
 3212 04c6 26000000 		.4byte	.LVL82
 3213 04ca 30000000 		.4byte	.LVL84
 3214 04ce 0100     		.2byte	0x1
 3215 04d0 51       		.byte	0x51
 3216 04d1 30000000 		.4byte	.LVL84
 3217 04d5 32000000 		.4byte	.LVL85
 3218 04d9 0B00     		.2byte	0xb
 3219 04db 75       		.byte	0x75
 3220 04dc 06       		.sleb128 6
 3221 04dd 94       		.byte	0x94
 3222 04de 01       		.byte	0x1
 3223 04df 08       		.byte	0x8
 3224 04e0 FF       		.byte	0xff
 3225 04e1 1A       		.byte	0x1a
 3226 04e2 71       		.byte	0x71
 3227 04e3 00       		.sleb128 0
 3228 04e4 22       		.byte	0x22
 3229 04e5 9F       		.byte	0x9f
 3230 04e6 32000000 		.4byte	.LVL85
 3231 04ea 38000000 		.4byte	.LVL86
 3232 04ee 0100     		.2byte	0x1
 3233 04f0 51       		.byte	0x51
 3234 04f1 38000000 		.4byte	.LVL86
 3235 04f5 3A000000 		.4byte	.LVL87
 3236 04f9 0B00     		.2byte	0xb
 3237 04fb 71       		.byte	0x71
 3238 04fc 00       		.sleb128 0
 3239 04fd 75       		.byte	0x75
 3240 04fe 06       		.sleb128 6
 3241 04ff 94       		.byte	0x94
 3242 0500 01       		.byte	0x1
 3243 0501 08       		.byte	0x8
 3244 0502 FF       		.byte	0xff
 3245 0503 1A       		.byte	0x1a
 3246 0504 1C       		.byte	0x1c
 3247 0505 9F       		.byte	0x9f
 3248 0506 68000000 		.4byte	.LVL96
 3249 050a 6C000000 		.4byte	.LVL98
 3250 050e 0100     		.2byte	0x1
 3251 0510 51       		.byte	0x51
 3252 0511 00000000 		.4byte	0
 3253 0515 00000000 		.4byte	0
 3254              	.LLST30:
 3255 0519 3E000000 		.4byte	.LVL88
 3256 051d 46000000 		.4byte	.LVL89
 3257 0521 0100     		.2byte	0x1
 3258 0523 53       		.byte	0x53
 3259 0524 48000000 		.4byte	.LVL90
 3260 0528 54000000 		.4byte	.LVL91
 3261 052c 0100     		.2byte	0x1
 3262 052e 54       		.byte	0x54
 3263 052f 68000000 		.4byte	.LVL96
 3264 0533 6C000000 		.4byte	.LVL98
 3265 0537 0200     		.2byte	0x2
 3266 0539 30       		.byte	0x30
 3267 053a 9F       		.byte	0x9f
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 88


 3268 053b 00000000 		.4byte	0
 3269 053f 00000000 		.4byte	0
 3270              	.LLST31:
 3271 0543 1E000000 		.4byte	.LVL80
 3272 0547 20000000 		.4byte	.LVL81
 3273 054b 0100     		.2byte	0x1
 3274 054d 51       		.byte	0x51
 3275 054e 20000000 		.4byte	.LVL81
 3276 0552 6C000000 		.4byte	.LVL98
 3277 0556 0100     		.2byte	0x1
 3278 0558 5C       		.byte	0x5c
 3279 0559 00000000 		.4byte	0
 3280 055d 00000000 		.4byte	0
 3281              	.LLST32:
 3282 0561 10000000 		.4byte	.LVL78
 3283 0565 6C000000 		.4byte	.LVL100
 3284 0569 0100     		.2byte	0x1
 3285 056b 57       		.byte	0x57
 3286 056c 00000000 		.4byte	0
 3287 0570 00000000 		.4byte	0
 3288              	.LLST33:
 3289 0574 12000000 		.4byte	.LVL79
 3290 0578 6C000000 		.4byte	.LVL99
 3291 057c 0100     		.2byte	0x1
 3292 057e 55       		.byte	0x55
 3293 057f 00000000 		.4byte	0
 3294 0583 00000000 		.4byte	0
 3295              	.LLST34:
 3296 0587 00000000 		.4byte	.LVL101
 3297 058b 0A000000 		.4byte	.LVL102
 3298 058f 0100     		.2byte	0x1
 3299 0591 50       		.byte	0x50
 3300 0592 0A000000 		.4byte	.LVL102
 3301 0596 2E000000 		.4byte	.LVL109
 3302 059a 0100     		.2byte	0x1
 3303 059c 55       		.byte	0x55
 3304 059d 2E000000 		.4byte	.LVL109
 3305 05a1 4C000000 		.4byte	.LFE4
 3306 05a5 0400     		.2byte	0x4
 3307 05a7 F3       		.byte	0xf3
 3308 05a8 01       		.uleb128 0x1
 3309 05a9 50       		.byte	0x50
 3310 05aa 9F       		.byte	0x9f
 3311 05ab 00000000 		.4byte	0
 3312 05af 00000000 		.4byte	0
 3313              	.LLST35:
 3314 05b3 00000000 		.4byte	.LVL101
 3315 05b7 19000000 		.4byte	.LVL103-1
 3316 05bb 0100     		.2byte	0x1
 3317 05bd 51       		.byte	0x51
 3318 05be 19000000 		.4byte	.LVL103-1
 3319 05c2 1C000000 		.4byte	.LVL104
 3320 05c6 0400     		.2byte	0x4
 3321 05c8 F3       		.byte	0xf3
 3322 05c9 01       		.uleb128 0x1
 3323 05ca 51       		.byte	0x51
 3324 05cb 9F       		.byte	0x9f
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 89


 3325 05cc 1C000000 		.4byte	.LVL104
 3326 05d0 1F000000 		.4byte	.LVL105-1
 3327 05d4 0100     		.2byte	0x1
 3328 05d6 51       		.byte	0x51
 3329 05d7 1F000000 		.4byte	.LVL105-1
 3330 05db 4C000000 		.4byte	.LFE4
 3331 05df 0400     		.2byte	0x4
 3332 05e1 F3       		.byte	0xf3
 3333 05e2 01       		.uleb128 0x1
 3334 05e3 51       		.byte	0x51
 3335 05e4 9F       		.byte	0x9f
 3336 05e5 00000000 		.4byte	0
 3337 05e9 00000000 		.4byte	0
 3338              	.LLST36:
 3339 05ed 0A000000 		.4byte	.LVL102
 3340 05f1 19000000 		.4byte	.LVL103-1
 3341 05f5 0100     		.2byte	0x1
 3342 05f7 50       		.byte	0x50
 3343 05f8 1A000000 		.4byte	.LVL103
 3344 05fc 1F000000 		.4byte	.LVL105-1
 3345 0600 0100     		.2byte	0x1
 3346 0602 50       		.byte	0x50
 3347 0603 20000000 		.4byte	.LVL105
 3348 0607 4C000000 		.4byte	.LFE4
 3349 060b 0100     		.2byte	0x1
 3350 060d 50       		.byte	0x50
 3351 060e 00000000 		.4byte	0
 3352 0612 00000000 		.4byte	0
 3353              	.LLST37:
 3354 0616 28000000 		.4byte	.LVL106
 3355 061a 2A000000 		.4byte	.LVL107
 3356 061e 0100     		.2byte	0x1
 3357 0620 53       		.byte	0x53
 3358 0621 2A000000 		.4byte	.LVL107
 3359 0625 2C000000 		.4byte	.LVL108
 3360 0629 0300     		.2byte	0x3
 3361 062b 73       		.byte	0x73
 3362 062c 7C       		.sleb128 -4
 3363 062d 9F       		.byte	0x9f
 3364 062e 2C000000 		.4byte	.LVL108
 3365 0632 2E000000 		.4byte	.LVL109
 3366 0636 0500     		.2byte	0x5
 3367 0638 75       		.byte	0x75
 3368 0639 00       		.sleb128 0
 3369 063a 35       		.byte	0x35
 3370 063b 25       		.byte	0x25
 3371 063c 9F       		.byte	0x9f
 3372 063d 2E000000 		.4byte	.LVL109
 3373 0641 4C000000 		.4byte	.LFE4
 3374 0645 0600     		.2byte	0x6
 3375 0647 F3       		.byte	0xf3
 3376 0648 01       		.uleb128 0x1
 3377 0649 50       		.byte	0x50
 3378 064a 35       		.byte	0x35
 3379 064b 25       		.byte	0x25
 3380 064c 9F       		.byte	0x9f
 3381 064d 00000000 		.4byte	0
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 90


 3382 0651 00000000 		.4byte	0
 3383              	.LLST38:
 3384 0655 34000000 		.4byte	.LVL110
 3385 0659 3E000000 		.4byte	.LVL111
 3386 065d 0100     		.2byte	0x1
 3387 065f 52       		.byte	0x52
 3388 0660 3E000000 		.4byte	.LVL111
 3389 0664 40000000 		.4byte	.LVL112
 3390 0668 0500     		.2byte	0x5
 3391 066a 31       		.byte	0x31
 3392 066b 75       		.byte	0x75
 3393 066c 00       		.sleb128 0
 3394 066d 24       		.byte	0x24
 3395 066e 9F       		.byte	0x9f
 3396 066f 40000000 		.4byte	.LVL112
 3397 0673 42000000 		.4byte	.LVL113
 3398 0677 0100     		.2byte	0x1
 3399 0679 52       		.byte	0x52
 3400 067a 42000000 		.4byte	.LVL113
 3401 067e 44000000 		.4byte	.LVL114
 3402 0682 0500     		.2byte	0x5
 3403 0684 31       		.byte	0x31
 3404 0685 75       		.byte	0x75
 3405 0686 00       		.sleb128 0
 3406 0687 24       		.byte	0x24
 3407 0688 9F       		.byte	0x9f
 3408 0689 44000000 		.4byte	.LVL114
 3409 068d 4C000000 		.4byte	.LFE4
 3410 0691 0800     		.2byte	0x8
 3411 0693 31       		.byte	0x31
 3412 0694 F3       		.byte	0xf3
 3413 0695 01       		.uleb128 0x1
 3414 0696 50       		.byte	0x50
 3415 0697 4F       		.byte	0x4f
 3416 0698 1A       		.byte	0x1a
 3417 0699 24       		.byte	0x24
 3418 069a 9F       		.byte	0x9f
 3419 069b 00000000 		.4byte	0
 3420 069f 00000000 		.4byte	0
 3421              	.LLST39:
 3422 06a3 00000000 		.4byte	.LVL101
 3423 06a7 19000000 		.4byte	.LVL103-1
 3424 06ab 0200     		.2byte	0x2
 3425 06ad 71       		.byte	0x71
 3426 06ae 1A       		.sleb128 26
 3427 06af 1C000000 		.4byte	.LVL104
 3428 06b3 1F000000 		.4byte	.LVL105-1
 3429 06b7 0200     		.2byte	0x2
 3430 06b9 71       		.byte	0x71
 3431 06ba 1A       		.sleb128 26
 3432 06bb 00000000 		.4byte	0
 3433 06bf 00000000 		.4byte	0
 3434              		.section	.debug_aranges,"",%progbits
 3435 0000 4C000000 		.4byte	0x4c
 3436 0004 0200     		.2byte	0x2
 3437 0006 00000000 		.4byte	.Ldebug_info0
 3438 000a 04       		.byte	0x4
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 91


 3439 000b 00       		.byte	0
 3440 000c 0000     		.2byte	0
 3441 000e 0000     		.2byte	0
 3442 0010 00000000 		.4byte	.LFB1
 3443 0014 5C000000 		.4byte	.LFE1-.LFB1
 3444 0018 00000000 		.4byte	.LFB5
 3445 001c 16000000 		.4byte	.LFE5-.LFB5
 3446 0020 00000000 		.4byte	.LFB2
 3447 0024 54000000 		.4byte	.LFE2-.LFB2
 3448 0028 00000000 		.4byte	.LFB3
 3449 002c 3C000000 		.4byte	.LFE3-.LFB3
 3450 0030 00000000 		.4byte	.LFB6
 3451 0034 66000000 		.4byte	.LFE6-.LFB6
 3452 0038 00000000 		.4byte	.LFB7
 3453 003c 74000000 		.4byte	.LFE7-.LFB7
 3454 0040 00000000 		.4byte	.LFB4
 3455 0044 4C000000 		.4byte	.LFE4-.LFB4
 3456 0048 00000000 		.4byte	0
 3457 004c 00000000 		.4byte	0
 3458              		.section	.debug_ranges,"",%progbits
 3459              	.Ldebug_ranges0:
 3460 0000 00000000 		.4byte	.LFB1
 3461 0004 5C000000 		.4byte	.LFE1
 3462 0008 00000000 		.4byte	.LFB5
 3463 000c 16000000 		.4byte	.LFE5
 3464 0010 00000000 		.4byte	.LFB2
 3465 0014 54000000 		.4byte	.LFE2
 3466 0018 00000000 		.4byte	.LFB3
 3467 001c 3C000000 		.4byte	.LFE3
 3468 0020 00000000 		.4byte	.LFB6
 3469 0024 66000000 		.4byte	.LFE6
 3470 0028 00000000 		.4byte	.LFB7
 3471 002c 74000000 		.4byte	.LFE7
 3472 0030 00000000 		.4byte	.LFB4
 3473 0034 4C000000 		.4byte	.LFE4
 3474 0038 00000000 		.4byte	0
 3475 003c 00000000 		.4byte	0
 3476              		.section	.debug_line,"",%progbits
 3477              	.Ldebug_line0:
 3478 0000 02030000 		.section	.debug_str,"MS",%progbits,1
 3478      02008F01 
 3478      00000201 
 3478      FB0E0D00 
 3478      01010101 
 3479              	.LASF26:
 3480 0000 43617053 		.ascii	"CapSense_WD_PROXIMITY_E\000"
 3480      656E7365 
 3480      5F57445F 
 3480      50524F58 
 3480      494D4954 
 3481              	.LASF115:
 3482 0018 43617053 		.ascii	"CapSense_DpProcessCsdSensorRawCountsExt\000"
 3482      656E7365 
 3482      5F447050 
 3482      726F6365 
 3482      73734373 
 3483              	.LASF44:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 92


 3484 0040 766F6C5F 		.ascii	"vol_up\000"
 3484      757000
 3485              	.LASF119:
 3486 0047 736E7343 		.ascii	"snsCnt\000"
 3486      6E7400
 3487              	.LASF42:
 3488 004e 70726F78 		.ascii	"proxTouchTh\000"
 3488      546F7563 
 3488      68546800 
 3489              	.LASF101:
 3490 005a 77646774 		.ascii	"wdgtId\000"
 3490      496400
 3491              	.LASF112:
 3492 0061 666C7472 		.ascii	"fltrHistV\000"
 3492      48697374 
 3492      5600
 3493              	.LASF70:
 3494 006b 736E7254 		.ascii	"snrTestWidgetId\000"
 3494      65737457 
 3494      69646765 
 3494      74496400 
 3495              	.LASF128:
 3496 007b 43617053 		.ascii	"CapSense_DpProcessCsdWidgetStatus\000"
 3496      656E7365 
 3496      5F447050 
 3496      726F6365 
 3496      73734373 
 3497              	.LASF8:
 3498 009d 756E7369 		.ascii	"unsigned int\000"
 3498      676E6564 
 3498      20696E74 
 3498      00
 3499              	.LASF61:
 3500 00aa 7363616E 		.ascii	"scanCounter\000"
 3500      436F756E 
 3500      74657200 
 3501              	.LASF106:
 3502 00b6 43617053 		.ascii	"CapSense_DpUpdateDifferences\000"
 3502      656E7365 
 3502      5F447055 
 3502      70646174 
 3502      65446966 
 3503              	.LASF59:
 3504 00d3 6877436C 		.ascii	"hwClock\000"
 3504      6F636B00 
 3505              	.LASF74:
 3506 00db 7363616E 		.ascii	"scanCsdISC\000"
 3506      43736449 
 3506      534300
 3507              	.LASF108:
 3508 00e6 64696666 		.ascii	"diffValue\000"
 3508      56616C75 
 3508      6500
 3509              	.LASF45:
 3510 00f0 766F6C5F 		.ascii	"vol_down\000"
 3510      646F776E 
 3510      00
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 93


 3511              	.LASF107:
 3512 00f9 63757253 		.ascii	"curSnsPtr\000"
 3512      6E735074 
 3512      7200
 3513              	.LASF25:
 3514 0103 43617053 		.ascii	"CapSense_WD_TOUCHPAD_E\000"
 3514      656E7365 
 3514      5F57445F 
 3514      544F5543 
 3514      48504144 
 3515              	.LASF49:
 3516 011a 43617053 		.ascii	"CapSense_RAM_WD_LIST_STRUCT\000"
 3516      656E7365 
 3516      5F52414D 
 3516      5F57445F 
 3516      4C495354 
 3517              	.LASF134:
 3518 0136 43617053 		.ascii	"CapSense_dsFlash\000"
 3518      656E7365 
 3518      5F647346 
 3518      6C617368 
 3518      00
 3519              	.LASF109:
 3520 0147 72657375 		.ascii	"result\000"
 3520      6C7400
 3521              	.LASF37:
 3522 014e 69646163 		.ascii	"idacGainIndex\000"
 3522      4761696E 
 3522      496E6465 
 3522      7800
 3523              	.LASF121:
 3524 015c 6E657753 		.ascii	"newStatus\000"
 3524      74617475 
 3524      7300
 3525              	.LASF13:
 3526 0166 666C6F61 		.ascii	"float\000"
 3526      7400
 3527              	.LASF96:
 3528 016c 70726F78 		.ascii	"proxChannel\000"
 3528      4368616E 
 3528      6E656C00 
 3529              	.LASF12:
 3530 0178 696E7433 		.ascii	"int32\000"
 3530      3200
 3531              	.LASF124:
 3532 017e 43617053 		.ascii	"CapSense_DpProcessProximity\000"
 3532      656E7365 
 3532      5F447050 
 3532      726F6365 
 3532      73735072 
 3533              	.LASF105:
 3534 019a 43617053 		.ascii	"CapSense_DpInitialize\000"
 3534      656E7365 
 3534      5F447049 
 3534      6E697469 
 3534      616C697A 
 3535              	.LASF137:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 94


 3536 01b0 43617053 		.ascii	"CapSense_FtUpdateBaseline\000"
 3536      656E7365 
 3536      5F467455 
 3536      70646174 
 3536      65426173 
 3537              	.LASF69:
 3538 01ca 736E734C 		.ascii	"snsList\000"
 3538      69737400 
 3539              	.LASF99:
 3540 01d2 70747250 		.ascii	"ptrProx\000"
 3540      726F7800 
 3541              	.LASF7:
 3542 01da 6C6F6E67 		.ascii	"long long unsigned int\000"
 3542      206C6F6E 
 3542      6720756E 
 3542      7369676E 
 3542      65642069 
 3543              	.LASF24:
 3544 01f1 43617053 		.ascii	"CapSense_WD_MATRIX_BUTTON_E\000"
 3544      656E7365 
 3544      5F57445F 
 3544      4D415452 
 3544      49585F42 
 3545              	.LASF98:
 3546 020d 70747252 		.ascii	"ptrRegular\000"
 3546      6567756C 
 3546      617200
 3547              	.LASF125:
 3548 0218 63757272 		.ascii	"currTh\000"
 3548      546800
 3549              	.LASF71:
 3550 021f 736E7254 		.ascii	"snrTestSensorId\000"
 3550      65737453 
 3550      656E736F 
 3550      72496400 
 3551              	.LASF84:
 3552 022f 77646774 		.ascii	"wdgtType\000"
 3552      54797065 
 3552      00
 3553              	.LASF136:
 3554 0238 43617053 		.ascii	"CapSense_FtRunEnabledFiltersInternal\000"
 3554      656E7365 
 3554      5F467452 
 3554      756E456E 
 3554      61626C65 
 3555              	.LASF100:
 3556 025d 43617053 		.ascii	"CapSense_PTR_FILTER_VARIANT\000"
 3556      656E7365 
 3556      5F505452 
 3556      5F46494C 
 3556      5445525F 
 3557              	.LASF94:
 3558 0279 72656775 		.ascii	"regularChannel\000"
 3558      6C617243 
 3558      68616E6E 
 3558      656C00
 3559              	.LASF67:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 95


 3560 0288 6D6F6443 		.ascii	"modCsdClk\000"
 3560      7364436C 
 3560      6B00
 3561              	.LASF55:
 3562 0292 43617053 		.ascii	"CapSense_RAM_SNS_STRUCT\000"
 3562      656E7365 
 3562      5F52414D 
 3562      5F534E53 
 3562      5F535452 
 3563              	.LASF47:
 3564 02aa 666F726D 		.ascii	"formation\000"
 3564      6174696F 
 3564      6E00
 3565              	.LASF16:
 3566 02b4 73697A65 		.ascii	"size_t\000"
 3566      5F7400
 3567              	.LASF116:
 3568 02bb 6D6F6465 		.ascii	"mode\000"
 3568      00
 3569              	.LASF33:
 3570 02c0 68797374 		.ascii	"hysteresis\000"
 3570      65726573 
 3570      697300
 3571              	.LASF23:
 3572 02cb 43617053 		.ascii	"CapSense_WD_RADIAL_SLIDER_E\000"
 3572      656E7365 
 3572      5F57445F 
 3572      52414449 
 3572      414C5F53 
 3573              	.LASF86:
 3574 02e7 43617053 		.ascii	"CapSense_FLASH_WD_STRUCT\000"
 3574      656E7365 
 3574      5F464C41 
 3574      53485F57 
 3574      445F5354 
 3575              	.LASF35:
 3576 0300 6C6F7742 		.ascii	"lowBslnRst\000"
 3576      736C6E52 
 3576      737400
 3577              	.LASF83:
 3578 030b 746F7461 		.ascii	"totalNumSns\000"
 3578      6C4E756D 
 3578      536E7300 
 3579              	.LASF31:
 3580 0317 6E6F6973 		.ascii	"noiseTh\000"
 3580      65546800 
 3581              	.LASF15:
 3582 031f 63686172 		.ascii	"char\000"
 3582      00
 3583              	.LASF114:
 3584 0324 43617053 		.ascii	"CapSense_DpProcessCsdWidgetRawCounts\000"
 3584      656E7365 
 3584      5F447050 
 3584      726F6365 
 3584      73734373 
 3585              	.LASF10:
 3586 0349 75696E74 		.ascii	"uint16\000"
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 96


 3586      313600
 3587              	.LASF81:
 3588 0350 70747232 		.ascii	"ptr2DebounceArr\000"
 3588      4465626F 
 3588      756E6365 
 3588      41727200 
 3589              	.LASF29:
 3590 0360 7265736F 		.ascii	"resolution\000"
 3590      6C757469 
 3590      6F6E00
 3591              	.LASF62:
 3592 036b 73746174 		.ascii	"status\000"
 3592      757300
 3593              	.LASF139:
 3594 0372 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_Processing.c\000"
 3594      72617465 
 3594      645F536F 
 3594      75726365 
 3594      5C50536F 
 3595              	.LASF20:
 3596 039f 43617053 		.ascii	"CapSense_LOW_BSLN_RST_TYPE\000"
 3596      656E7365 
 3596      5F4C4F57 
 3596      5F42534C 
 3596      4E5F5253 
 3597              	.LASF117:
 3598 03ba 43617053 		.ascii	"CapSense_DpProcessButton\000"
 3598      656E7365 
 3598      5F447050 
 3598      726F6365 
 3598      73734275 
 3599              	.LASF54:
 3600 03d3 69646163 		.ascii	"idacComp\000"
 3600      436F6D70 
 3600      00
 3601              	.LASF6:
 3602 03dc 6C6F6E67 		.ascii	"long long int\000"
 3602      206C6F6E 
 3602      6720696E 
 3602      7400
 3603              	.LASF85:
 3604 03ea 6E756D43 		.ascii	"numCols\000"
 3604      6F6C7300 
 3605              	.LASF97:
 3606 03f2 43617053 		.ascii	"CapSense_PROX_FLTR_STRUCT\000"
 3606      656E7365 
 3606      5F50524F 
 3606      585F464C 
 3606      54525F53 
 3607              	.LASF34:
 3608 040c 6F6E4465 		.ascii	"onDebounce\000"
 3608      626F756E 
 3608      636500
 3609              	.LASF68:
 3610 0417 77646774 		.ascii	"wdgtList\000"
 3610      4C697374 
 3610      00
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 97


 3611              	.LASF88:
 3612 0420 43617053 		.ascii	"CapSense_FLASH_STRUCT\000"
 3612      656E7365 
 3612      5F464C41 
 3612      53485F53 
 3612      54525543 
 3613              	.LASF133:
 3614 0436 43617053 		.ascii	"CapSense_dsRam\000"
 3614      656E7365 
 3614      5F647352 
 3614      616D00
 3615              	.LASF73:
 3616 0445 736E7254 		.ascii	"snrTestRawCount\000"
 3616      65737452 
 3616      6177436F 
 3616      756E7400 
 3617              	.LASF135:
 3618 0455 6D656D73 		.ascii	"memset\000"
 3618      657400
 3619              	.LASF32:
 3620 045c 6E4E6F69 		.ascii	"nNoiseTh\000"
 3620      73655468 
 3620      00
 3621              	.LASF66:
 3622 0465 63736430 		.ascii	"csd0Config\000"
 3622      436F6E66 
 3622      696700
 3623              	.LASF40:
 3624 0470 43617053 		.ascii	"CapSense_RAM_WD_BASE_STRUCT\000"
 3624      656E7365 
 3624      5F52414D 
 3624      5F57445F 
 3624      42415345 
 3625              	.LASF28:
 3626 048c 43617053 		.ascii	"CapSense_WD_TYPE_ENUM\000"
 3626      656E7365 
 3626      5F57445F 
 3626      54595045 
 3626      5F454E55 
 3627              	.LASF130:
 3628 04a2 73656E73 		.ascii	"sensorStatus\000"
 3628      6F725374 
 3628      61747573 
 3628      00
 3629              	.LASF11:
 3630 04af 75696E74 		.ascii	"uint32\000"
 3630      333200
 3631              	.LASF122:
 3632 04b6 746F7563 		.ascii	"touchTh\000"
 3632      68546800 
 3633              	.LASF80:
 3634 04be 70747232 		.ascii	"ptr2FltrHistory\000"
 3634      466C7472 
 3634      48697374 
 3634      6F727900 
 3635              	.LASF140:
 3636 04ce 443A5C5F 		.ascii	"D:\\_Project\\_MD\\cypress_button\\EZIIC_button.cyd"
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 98


 3636      50726F6A 
 3636      6563745C 
 3636      5F4D445C 
 3636      63797072 
 3637 04fd 736E00   		.ascii	"sn\000"
 3638              	.LASF22:
 3639 0500 43617053 		.ascii	"CapSense_WD_LINEAR_SLIDER_E\000"
 3639      656E7365 
 3639      5F57445F 
 3639      4C494E45 
 3639      41525F53 
 3640              	.LASF131:
 3641 051c 77645374 		.ascii	"wdStatusIndex\000"
 3641      61747573 
 3641      496E6465 
 3641      7800
 3642              	.LASF90:
 3643 052a 6D656448 		.ascii	"medHistory\000"
 3643      6973746F 
 3643      727900
 3644              	.LASF127:
 3645 0535 70726F78 		.ascii	"proxMask\000"
 3645      4D61736B 
 3645      00
 3646              	.LASF17:
 3647 053e 6C6F6E67 		.ascii	"long double\000"
 3647      20646F75 
 3647      626C6500 
 3648              	.LASF103:
 3649 054a 70747252 		.ascii	"ptrRamWdgt\000"
 3649      616D5764 
 3649      677400
 3650              	.LASF120:
 3651 0555 736E734D 		.ascii	"snsMask\000"
 3651      61736B00 
 3652              	.LASF72:
 3653 055d 736E7254 		.ascii	"snrTestScanCounter\000"
 3653      65737453 
 3653      63616E43 
 3653      6F756E74 
 3653      657200
 3654              	.LASF57:
 3655 0570 636F6E66 		.ascii	"configId\000"
 3655      69674964 
 3655      00
 3656              	.LASF79:
 3657 0579 70747232 		.ascii	"ptr2SnsRam\000"
 3657      536E7352 
 3657      616D00
 3658              	.LASF91:
 3659 0584 61766748 		.ascii	"avgHistory\000"
 3659      6973746F 
 3659      727900
 3660              	.LASF65:
 3661 058f 736E7353 		.ascii	"snsStatus\000"
 3661      74617475 
 3661      7300
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 99


 3662              	.LASF27:
 3663 0599 43617053 		.ascii	"CapSense_WD_ENCODERDIAL_E\000"
 3663      656E7365 
 3663      5F57445F 
 3663      454E434F 
 3663      44455244 
 3664              	.LASF39:
 3665 05b3 736E7343 		.ascii	"snsClkSource\000"
 3665      6C6B536F 
 3665      75726365 
 3665      00
 3666              	.LASF2:
 3667 05c0 73686F72 		.ascii	"short int\000"
 3667      7420696E 
 3667      7400
 3668              	.LASF76:
 3669 05ca 43617053 		.ascii	"CapSense_RAM_STRUCT\000"
 3669      656E7365 
 3669      5F52414D 
 3669      5F535452 
 3669      55435400 
 3670              	.LASF95:
 3671 05de 43617053 		.ascii	"CapSense_REGULAR_FLTR_STRUCT\000"
 3671      656E7365 
 3671      5F524547 
 3671      554C4152 
 3671      5F464C54 
 3672              	.LASF4:
 3673 05fb 6C6F6E67 		.ascii	"long int\000"
 3673      20696E74 
 3673      00
 3674              	.LASF63:
 3675 0604 77646774 		.ascii	"wdgtEnable\000"
 3675      456E6162 
 3675      6C6500
 3676              	.LASF52:
 3677 060f 64696666 		.ascii	"diff\000"
 3677      00
 3678              	.LASF60:
 3679 0614 74756E65 		.ascii	"tunerCmd\000"
 3679      72436D64 
 3679      00
 3680              	.LASF110:
 3681 061d 736E7349 		.ascii	"snsId\000"
 3681      6400
 3682              	.LASF21:
 3683 0623 43617053 		.ascii	"CapSense_WD_BUTTON_E\000"
 3683      656E7365 
 3683      5F57445F 
 3683      42555454 
 3683      4F4E5F45 
 3684              	.LASF92:
 3685 0638 43617053 		.ascii	"CapSense_REGULAR_FLTR_CHANNEL_STRUCT\000"
 3685      656E7365 
 3685      5F524547 
 3685      554C4152 
 3685      5F464C54 
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 100


 3686              	.LASF111:
 3687 065d 70747253 		.ascii	"ptrSnsTmp\000"
 3687      6E73546D 
 3687      7000
 3688              	.LASF93:
 3689 0667 43617053 		.ascii	"CapSense_PROX_FLTR_CHANNEL_STRUCT\000"
 3689      656E7365 
 3689      5F50524F 
 3689      585F464C 
 3689      54525F43 
 3690              	.LASF123:
 3691 0689 70747244 		.ascii	"ptrDebounceCnt\000"
 3691      65626F75 
 3691      6E636543 
 3691      6E7400
 3692              	.LASF64:
 3693 0698 77646774 		.ascii	"wdgtStatus\000"
 3693      53746174 
 3693      757300
 3694              	.LASF138:
 3695 06a3 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3695      43313120 
 3695      352E342E 
 3695      31203230 
 3695      31363036 
 3696 06d6 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 3696      20726576 
 3696      6973696F 
 3696      6E203233 
 3696      37373135 
 3697 0709 67202D4F 		.ascii	"g -Os -ffunction-sections -ffat-lto-objects\000"
 3697      73202D66 
 3697      66756E63 
 3697      74696F6E 
 3697      2D736563 
 3698              	.LASF18:
 3699 0735 73697A65 		.ascii	"sizetype\000"
 3699      74797065 
 3699      00
 3700              	.LASF5:
 3701 073e 6C6F6E67 		.ascii	"long unsigned int\000"
 3701      20756E73 
 3701      69676E65 
 3701      6420696E 
 3701      7400
 3702              	.LASF36:
 3703 0750 69646163 		.ascii	"idacMod\000"
 3703      4D6F6400 
 3704              	.LASF48:
 3705 0758 70726F78 		.ascii	"prox\000"
 3705      00
 3706              	.LASF30:
 3707 075d 66696E67 		.ascii	"fingerTh\000"
 3707      65725468 
 3707      00
 3708              	.LASF51:
 3709 0766 62736C6E 		.ascii	"bslnExt\000"
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 101


 3709      45787400 
 3710              	.LASF41:
 3711 076e 43617053 		.ascii	"CapSense_RAM_WD_BUTTON_STRUCT\000"
 3711      656E7365 
 3711      5F52414D 
 3711      5F57445F 
 3711      42555454 
 3712              	.LASF43:
 3713 078c 43617053 		.ascii	"CapSense_RAM_WD_PROXIMITY_STRUCT\000"
 3713      656E7365 
 3713      5F52414D 
 3713      5F57445F 
 3713      50524F58 
 3714              	.LASF1:
 3715 07ad 756E7369 		.ascii	"unsigned char\000"
 3715      676E6564 
 3715      20636861 
 3715      7200
 3716              	.LASF132:
 3717 07bb 77645374 		.ascii	"wdStatusMask\000"
 3717      61747573 
 3717      4D61736B 
 3717      00
 3718              	.LASF113:
 3719 07c8 69735072 		.ascii	"isProxWdgt\000"
 3719      6F785764 
 3719      677400
 3720              	.LASF104:
 3721 07d3 70747246 		.ascii	"ptrFlashWdgt\000"
 3721      6C617368 
 3721      57646774 
 3721      00
 3722              	.LASF82:
 3723 07e0 73746174 		.ascii	"staticConfig\000"
 3723      6963436F 
 3723      6E666967 
 3723      00
 3724              	.LASF75:
 3725 07ed 7363616E 		.ascii	"scanCurrentISC\000"
 3725      43757272 
 3725      656E7449 
 3725      534300
 3726              	.LASF78:
 3727 07fc 70747232 		.ascii	"ptr2WdgtRam\000"
 3727      57646774 
 3727      52616D00 
 3728              	.LASF19:
 3729 0808 43617053 		.ascii	"CapSense_THRESHOLD_TYPE\000"
 3729      656E7365 
 3729      5F544852 
 3729      4553484F 
 3729      4C445F54 
 3730              	.LASF89:
 3731 0820 69697248 		.ascii	"iirHistory\000"
 3731      6973746F 
 3731      727900
 3732              	.LASF118:
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 102


 3733 082b 63757272 		.ascii	"currStatus\000"
 3733      53746174 
 3733      757300
 3734              	.LASF126:
 3735 0836 64696666 		.ascii	"difference\000"
 3735      6572656E 
 3735      636500
 3736              	.LASF38:
 3737 0841 736E7343 		.ascii	"snsClk\000"
 3737      6C6B00
 3738              	.LASF0:
 3739 0848 7369676E 		.ascii	"signed char\000"
 3739      65642063 
 3739      68617200 
 3740              	.LASF50:
 3741 0854 62736C6E 		.ascii	"bsln\000"
 3741      00
 3742              	.LASF3:
 3743 0859 73686F72 		.ascii	"short unsigned int\000"
 3743      7420756E 
 3743      7369676E 
 3743      65642069 
 3743      6E7400
 3744              	.LASF46:
 3745 086c 706C6179 		.ascii	"play_pause\000"
 3745      5F706175 
 3745      736500
 3746              	.LASF77:
 3747 0877 70747232 		.ascii	"ptr2SnsFlash\000"
 3747      536E7346 
 3747      6C617368 
 3747      00
 3748              	.LASF9:
 3749 0884 75696E74 		.ascii	"uint8\000"
 3749      3800
 3750              	.LASF14:
 3751 088a 646F7562 		.ascii	"double\000"
 3751      6C6500
 3752              	.LASF53:
 3753 0891 6E656742 		.ascii	"negBslnRstCnt\000"
 3753      736C6E52 
 3753      7374436E 
 3753      7400
 3754              	.LASF102:
 3755 089f 77696467 		.ascii	"widgetType\000"
 3755      65745479 
 3755      706500
 3756              	.LASF58:
 3757 08aa 64657669 		.ascii	"deviceId\000"
 3757      63654964 
 3757      00
 3758              	.LASF129:
 3759 08b3 77696467 		.ascii	"widgetId\000"
 3759      65744964 
 3759      00
 3760              	.LASF56:
 3761 08bc 43617053 		.ascii	"CapSense_RAM_SNS_LIST_STRUCT\000"
ARM GAS  C:\Users\zack.li\AppData\Local\Temp\cc8v3GQI.s 			page 103


 3761      656E7365 
 3761      5F52414D 
 3761      5F534E53 
 3761      5F4C4953 
 3762              	.LASF87:
 3763 08d9 77646774 		.ascii	"wdgtArray\000"
 3763      41727261 
 3763      7900
 3764              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
